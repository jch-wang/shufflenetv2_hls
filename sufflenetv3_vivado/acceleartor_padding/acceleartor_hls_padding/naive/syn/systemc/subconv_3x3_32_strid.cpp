// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_3x3_32_strid.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_3x3_32_strid::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_3x3_32_strid::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state1 = "1";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state2 = "10";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state3 = "100";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state4 = "1000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state5 = "10000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state6 = "100000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> subconv_3x3_32_strid::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_3x3_32_strid::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_3 = "11";
const sc_lv<1> subconv_3x3_32_strid::ap_const_lv1_1 = "1";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_4 = "100";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_6 = "110";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_A = "1010";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_F = "1111";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_15 = "10101";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_0 = "00000";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_1 = "1";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_16 = "10110";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_0 = "00";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_B = "1011";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_11 = "10001";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_7 = "111";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_18 = "11000";
const sc_lv<4> subconv_3x3_32_strid::ap_const_lv4_0 = "0000";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_11 = "10001";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_3 = "11";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_1 = "1";
const sc_lv<9> subconv_3x3_32_strid::ap_const_lv9_2 = "10";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_2 = "10";
const bool subconv_3x3_32_strid::ap_const_boolean_1 = true;

subconv_3x3_32_strid::subconv_3x3_32_strid(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U15 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U15");
    ShuffleNetV2_faddbkb_x_U15->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U15->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U15->din0(grp_fu_186_p0);
    ShuffleNetV2_faddbkb_x_U15->din1(grp_fu_186_p1);
    ShuffleNetV2_faddbkb_x_U15->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U15->dout(grp_fu_186_p2);
    ShuffleNetV2_fmulcud_x_U16 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U16");
    ShuffleNetV2_fmulcud_x_U16->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U16->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U16->din0(weight_load_reg_617);
    ShuffleNetV2_fmulcud_x_U16->din1(input_load_reg_622);
    ShuffleNetV2_fmulcud_x_U16->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U16->dout(grp_fu_192_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_196_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_196_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_540 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_co_4_fu_202_p2);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_exitcond1_fu_360_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( m_reg_152 );

    SC_METHOD(thread_exitcond2_fu_340_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_128 );

    SC_METHOD(thread_exitcond3_fu_291_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_116 );

    SC_METHOD(thread_exitcond4_fu_196_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_exitcond_fu_458_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( n_reg_175 );

    SC_METHOD(thread_grp_fu_186_p0);
    sensitive << ( sum_reg_140 );
    sensitive << ( sum_1_reg_163 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_186_p1);
    sensitive << ( tmp_36_reg_627 );
    sensitive << ( bias_load_reg_637 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_4_fu_354_p2);
    sensitive << ( h_reg_116 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_92_cast_fu_508_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_4_fu_366_p2);
    sensitive << ( m_reg_152 );

    SC_METHOD(thread_n_4_fu_464_p2);
    sensitive << ( n_reg_175 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_83_cast_fu_513_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( result_reg_642 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl2_cast_fu_259_p1);
    sensitive << ( tmp_55_fu_251_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_225_p1);
    sensitive << ( tmp_52_fu_217_p3 );

    SC_METHOD(thread_p_shl4_cast1_fu_237_p1);
    sensitive << ( tmp_53_fu_229_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_241_p1);
    sensitive << ( tmp_53_fu_229_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_314_p3);
    sensitive << ( tmp_59_fu_309_p2 );

    SC_METHOD(thread_p_shl6_cast_fu_330_p1);
    sensitive << ( tmp_39_fu_322_p3 );

    SC_METHOD(thread_p_shl7_cast_fu_417_p3);
    sensitive << ( tmp_64_fu_412_p2 );

    SC_METHOD(thread_p_shl8_cast_fu_433_p1);
    sensitive << ( tmp_41_fu_425_p3 );

    SC_METHOD(thread_p_shl_cast_fu_281_p1);
    sensitive << ( tmp_57_fu_273_p3 );

    SC_METHOD(thread_tmp1_cast_fu_399_p1);
    sensitive << ( tmp1_fu_393_p2 );

    SC_METHOD(thread_tmp1_fu_393_p2);
    sensitive << ( m_reg_152 );

    SC_METHOD(thread_tmp2_cast_fu_490_p1);
    sensitive << ( tmp2_fu_484_p2 );

    SC_METHOD(thread_tmp2_fu_484_p2);
    sensitive << ( n_reg_175 );

    SC_METHOD(thread_tmp_27_cast_fu_305_p1);
    sensitive << ( h_reg_116 );

    SC_METHOD(thread_tmp_28_fu_346_p3);
    sensitive << ( w_reg_128 );

    SC_METHOD(thread_tmp_29_cast_fu_443_p1);
    sensitive << ( w_reg_128 );

    SC_METHOD(thread_tmp_30_cast_fu_372_p1);
    sensitive << ( m_reg_152 );

    SC_METHOD(thread_tmp_31_fu_403_p2);
    sensitive << ( tmp_s_reg_548 );
    sensitive << ( tmp1_cast_fu_399_p1 );

    SC_METHOD(thread_tmp_32_cast_fu_408_p1);
    sensitive << ( tmp_31_fu_403_p2 );

    SC_METHOD(thread_tmp_33_cast_fu_470_p1);
    sensitive << ( n_reg_175 );

    SC_METHOD(thread_tmp_34_fu_494_p2);
    sensitive << ( tmp_28_reg_561 );
    sensitive << ( tmp2_cast_fu_490_p1 );

    SC_METHOD(thread_tmp_35_cast_fu_499_p1);
    sensitive << ( tmp_34_fu_494_p2 );

    SC_METHOD(thread_tmp_39_fu_322_p3);
    sensitive << ( tmp_59_fu_309_p2 );

    SC_METHOD(thread_tmp_40_fu_381_p2);
    sensitive << ( tmp_62_fu_376_p2 );

    SC_METHOD(thread_tmp_41_fu_425_p3);
    sensitive << ( tmp_64_fu_412_p2 );

    SC_METHOD(thread_tmp_52_fu_217_p3);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_53_fu_229_p3);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_54_fu_245_p2);
    sensitive << ( p_shl4_cast_fu_241_p1 );
    sensitive << ( p_shl3_cast_fu_225_p1 );

    SC_METHOD(thread_tmp_55_fu_251_p3);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_56_fu_263_p2);
    sensitive << ( p_shl2_cast_fu_259_p1 );
    sensitive << ( tmp_cast_fu_213_p1 );

    SC_METHOD(thread_tmp_57_fu_273_p3);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_58_fu_285_p2);
    sensitive << ( p_shl4_cast1_fu_237_p1 );
    sensitive << ( p_shl_cast_fu_281_p1 );

    SC_METHOD(thread_tmp_59_fu_309_p2);
    sensitive << ( tmp_58_reg_535 );
    sensitive << ( tmp_27_cast_fu_305_p1 );

    SC_METHOD(thread_tmp_60_fu_334_p2);
    sensitive << ( p_shl6_cast_fu_330_p1 );
    sensitive << ( p_shl5_cast_fu_314_p3 );

    SC_METHOD(thread_tmp_61_fu_447_p2);
    sensitive << ( tmp_60_reg_553 );
    sensitive << ( tmp_29_cast_fu_443_p1 );

    SC_METHOD(thread_tmp_62_fu_376_p2);
    sensitive << ( tmp_75_cast_reg_530 );
    sensitive << ( tmp_30_cast_fu_372_p1 );

    SC_METHOD(thread_tmp_63_fu_387_p2);
    sensitive << ( tmp_62_fu_376_p2 );
    sensitive << ( tmp_40_fu_381_p2 );

    SC_METHOD(thread_tmp_64_fu_412_p2);
    sensitive << ( tmp_54_reg_525 );
    sensitive << ( tmp_32_cast_fu_408_p1 );

    SC_METHOD(thread_tmp_65_fu_437_p2);
    sensitive << ( p_shl8_cast_fu_433_p1 );
    sensitive << ( p_shl7_cast_fu_417_p3 );

    SC_METHOD(thread_tmp_66_fu_474_p2);
    sensitive << ( tmp_63_reg_579 );
    sensitive << ( tmp_33_cast_fu_470_p1 );

    SC_METHOD(thread_tmp_67_fu_503_p2);
    sensitive << ( tmp_65_reg_584 );
    sensitive << ( tmp_35_cast_fu_499_p1 );

    SC_METHOD(thread_tmp_75_cast_fu_269_p1);
    sensitive << ( tmp_56_fu_263_p2 );

    SC_METHOD(thread_tmp_83_cast_fu_513_p1);
    sensitive << ( tmp_61_reg_589 );

    SC_METHOD(thread_tmp_91_cast_fu_479_p1);
    sensitive << ( tmp_66_fu_474_p2 );

    SC_METHOD(thread_tmp_92_cast_fu_508_p1);
    sensitive << ( tmp_67_fu_503_p2 );

    SC_METHOD(thread_tmp_cast_fu_213_p1);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_fu_208_p1);
    sensitive << ( co_reg_105 );

    SC_METHOD(thread_tmp_s_fu_297_p3);
    sensitive << ( h_reg_116 );

    SC_METHOD(thread_w_4_fu_452_p2);
    sensitive << ( w_reg_128 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_91_cast_fu_479_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_196_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_340_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_360_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_458_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_3x3_32_strid_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_4_fu_202_p2, "co_4_fu_202_p2");
    sc_trace(mVcdFile, co_4_reg_520, "co_4_reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_54_fu_245_p2, "tmp_54_fu_245_p2");
    sc_trace(mVcdFile, tmp_54_reg_525, "tmp_54_reg_525");
    sc_trace(mVcdFile, exitcond4_fu_196_p2, "exitcond4_fu_196_p2");
    sc_trace(mVcdFile, tmp_75_cast_fu_269_p1, "tmp_75_cast_fu_269_p1");
    sc_trace(mVcdFile, tmp_75_cast_reg_530, "tmp_75_cast_reg_530");
    sc_trace(mVcdFile, tmp_58_fu_285_p2, "tmp_58_fu_285_p2");
    sc_trace(mVcdFile, tmp_58_reg_535, "tmp_58_reg_535");
    sc_trace(mVcdFile, bias_addr_reg_540, "bias_addr_reg_540");
    sc_trace(mVcdFile, tmp_s_fu_297_p3, "tmp_s_fu_297_p3");
    sc_trace(mVcdFile, tmp_s_reg_548, "tmp_s_reg_548");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_291_p2, "exitcond3_fu_291_p2");
    sc_trace(mVcdFile, tmp_60_fu_334_p2, "tmp_60_fu_334_p2");
    sc_trace(mVcdFile, tmp_60_reg_553, "tmp_60_reg_553");
    sc_trace(mVcdFile, tmp_28_fu_346_p3, "tmp_28_fu_346_p3");
    sc_trace(mVcdFile, tmp_28_reg_561, "tmp_28_reg_561");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_340_p2, "exitcond2_fu_340_p2");
    sc_trace(mVcdFile, h_4_fu_354_p2, "h_4_fu_354_p2");
    sc_trace(mVcdFile, m_4_fu_366_p2, "m_4_fu_366_p2");
    sc_trace(mVcdFile, m_4_reg_574, "m_4_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_63_fu_387_p2, "tmp_63_fu_387_p2");
    sc_trace(mVcdFile, tmp_63_reg_579, "tmp_63_reg_579");
    sc_trace(mVcdFile, exitcond1_fu_360_p2, "exitcond1_fu_360_p2");
    sc_trace(mVcdFile, tmp_65_fu_437_p2, "tmp_65_fu_437_p2");
    sc_trace(mVcdFile, tmp_65_reg_584, "tmp_65_reg_584");
    sc_trace(mVcdFile, tmp_61_fu_447_p2, "tmp_61_fu_447_p2");
    sc_trace(mVcdFile, tmp_61_reg_589, "tmp_61_reg_589");
    sc_trace(mVcdFile, w_4_fu_452_p2, "w_4_fu_452_p2");
    sc_trace(mVcdFile, w_4_reg_594, "w_4_reg_594");
    sc_trace(mVcdFile, n_4_fu_464_p2, "n_4_fu_464_p2");
    sc_trace(mVcdFile, n_4_reg_602, "n_4_reg_602");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_458_p2, "exitcond_fu_458_p2");
    sc_trace(mVcdFile, weight_load_reg_617, "weight_load_reg_617");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_load_reg_622, "input_load_reg_622");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, tmp_36_reg_627, "tmp_36_reg_627");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_186_p2, "grp_fu_186_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_637, "bias_load_reg_637");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, result_reg_642, "result_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_105, "co_reg_105");
    sc_trace(mVcdFile, h_reg_116, "h_reg_116");
    sc_trace(mVcdFile, w_reg_128, "w_reg_128");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_reg_140, "sum_reg_140");
    sc_trace(mVcdFile, m_reg_152, "m_reg_152");
    sc_trace(mVcdFile, sum_1_reg_163, "sum_1_reg_163");
    sc_trace(mVcdFile, n_reg_175, "n_reg_175");
    sc_trace(mVcdFile, tmp_fu_208_p1, "tmp_fu_208_p1");
    sc_trace(mVcdFile, tmp_91_cast_fu_479_p1, "tmp_91_cast_fu_479_p1");
    sc_trace(mVcdFile, tmp_92_cast_fu_508_p1, "tmp_92_cast_fu_508_p1");
    sc_trace(mVcdFile, tmp_83_cast_fu_513_p1, "tmp_83_cast_fu_513_p1");
    sc_trace(mVcdFile, grp_fu_186_p0, "grp_fu_186_p0");
    sc_trace(mVcdFile, grp_fu_186_p1, "grp_fu_186_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_52_fu_217_p3, "tmp_52_fu_217_p3");
    sc_trace(mVcdFile, tmp_53_fu_229_p3, "tmp_53_fu_229_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_241_p1, "p_shl4_cast_fu_241_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_225_p1, "p_shl3_cast_fu_225_p1");
    sc_trace(mVcdFile, tmp_55_fu_251_p3, "tmp_55_fu_251_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_259_p1, "p_shl2_cast_fu_259_p1");
    sc_trace(mVcdFile, tmp_cast_fu_213_p1, "tmp_cast_fu_213_p1");
    sc_trace(mVcdFile, tmp_56_fu_263_p2, "tmp_56_fu_263_p2");
    sc_trace(mVcdFile, tmp_57_fu_273_p3, "tmp_57_fu_273_p3");
    sc_trace(mVcdFile, p_shl4_cast1_fu_237_p1, "p_shl4_cast1_fu_237_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_281_p1, "p_shl_cast_fu_281_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_305_p1, "tmp_27_cast_fu_305_p1");
    sc_trace(mVcdFile, tmp_59_fu_309_p2, "tmp_59_fu_309_p2");
    sc_trace(mVcdFile, tmp_39_fu_322_p3, "tmp_39_fu_322_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_330_p1, "p_shl6_cast_fu_330_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_314_p3, "p_shl5_cast_fu_314_p3");
    sc_trace(mVcdFile, tmp_30_cast_fu_372_p1, "tmp_30_cast_fu_372_p1");
    sc_trace(mVcdFile, tmp_62_fu_376_p2, "tmp_62_fu_376_p2");
    sc_trace(mVcdFile, tmp_40_fu_381_p2, "tmp_40_fu_381_p2");
    sc_trace(mVcdFile, tmp1_fu_393_p2, "tmp1_fu_393_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_399_p1, "tmp1_cast_fu_399_p1");
    sc_trace(mVcdFile, tmp_31_fu_403_p2, "tmp_31_fu_403_p2");
    sc_trace(mVcdFile, tmp_32_cast_fu_408_p1, "tmp_32_cast_fu_408_p1");
    sc_trace(mVcdFile, tmp_64_fu_412_p2, "tmp_64_fu_412_p2");
    sc_trace(mVcdFile, tmp_41_fu_425_p3, "tmp_41_fu_425_p3");
    sc_trace(mVcdFile, p_shl8_cast_fu_433_p1, "p_shl8_cast_fu_433_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_417_p3, "p_shl7_cast_fu_417_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_443_p1, "tmp_29_cast_fu_443_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_470_p1, "tmp_33_cast_fu_470_p1");
    sc_trace(mVcdFile, tmp_66_fu_474_p2, "tmp_66_fu_474_p2");
    sc_trace(mVcdFile, tmp2_fu_484_p2, "tmp2_fu_484_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_490_p1, "tmp2_cast_fu_490_p1");
    sc_trace(mVcdFile, tmp_34_fu_494_p2, "tmp_34_fu_494_p2");
    sc_trace(mVcdFile, tmp_35_cast_fu_499_p1, "tmp_35_cast_fu_499_p1");
    sc_trace(mVcdFile, tmp_67_fu_503_p2, "tmp_67_fu_503_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_3x3_32_strid::~subconv_3x3_32_strid() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U15;
    delete ShuffleNetV2_fmulcud_x_U16;
}

void subconv_3x3_32_strid::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_3x3_32_strid::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_291_p2.read(), ap_const_lv1_1))) {
        co_reg_105 = co_4_reg_520.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_105 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_196_p2.read(), ap_const_lv1_0))) {
        h_reg_116 = ap_const_lv5_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_340_p2.read(), ap_const_lv1_1))) {
        h_reg_116 = h_4_fu_354_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_458_p2.read()))) {
        m_reg_152 = m_4_reg_574.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_340_p2.read()))) {
        m_reg_152 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_360_p2.read()))) {
        n_reg_175 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        n_reg_175 = n_4_reg_602.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_360_p2.read()))) {
        sum_1_reg_163 = sum_reg_140.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_1_reg_163 = grp_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_458_p2.read()))) {
        sum_reg_140 = sum_1_reg_163.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_340_p2.read()))) {
        sum_reg_140 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()))) {
        w_reg_128 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_reg_128 = w_4_reg_594.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_196_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_540 =  (sc_lv<5>) (tmp_fu_208_p1.read());
        tmp_54_reg_525 = tmp_54_fu_245_p2.read();
        tmp_58_reg_535 = tmp_58_fu_285_p2.read();
        tmp_75_cast_reg_530 = tmp_75_cast_fu_269_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_637 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_4_reg_520 = co_4_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_reg_622 = input_r_q0.read();
        weight_load_reg_617 = weight_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_4_reg_574 = m_4_fu_366_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_4_reg_602 = n_4_fu_464_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        result_reg_642 = grp_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_340_p2.read()))) {
        tmp_28_reg_561 = tmp_28_fu_346_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_36_reg_627 = grp_fu_192_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()))) {
        tmp_60_reg_553 = tmp_60_fu_334_p2.read();
        tmp_s_reg_548 = tmp_s_fu_297_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_360_p2.read()))) {
        tmp_61_reg_589 = tmp_61_fu_447_p2.read();
        w_4_reg_594 = w_4_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_360_p2.read()))) {
        tmp_63_reg_579 = tmp_63_fu_387_p2.read();
        tmp_65_reg_584 = tmp_65_fu_437_p2.read();
    }
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void subconv_3x3_32_strid::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_196_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_196_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_bias_address0() {
    bias_address0 = bias_addr_reg_540.read();
}

void subconv_3x3_32_strid::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_co_4_fu_202_p2() {
    co_4_fu_202_p2 = (!co_reg_105.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(co_reg_105.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_exitcond1_fu_360_p2() {
    exitcond1_fu_360_p2 = (!m_reg_152.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_152.read() == ap_const_lv2_3);
}

void subconv_3x3_32_strid::thread_exitcond2_fu_340_p2() {
    exitcond2_fu_340_p2 = (!w_reg_128.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_128.read() == ap_const_lv5_11);
}

void subconv_3x3_32_strid::thread_exitcond3_fu_291_p2() {
    exitcond3_fu_291_p2 = (!h_reg_116.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_116.read() == ap_const_lv5_11);
}

void subconv_3x3_32_strid::thread_exitcond4_fu_196_p2() {
    exitcond4_fu_196_p2 = (!co_reg_105.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_105.read() == ap_const_lv5_18);
}

void subconv_3x3_32_strid::thread_exitcond_fu_458_p2() {
    exitcond_fu_458_p2 = (!n_reg_175.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_175.read() == ap_const_lv2_3);
}

void subconv_3x3_32_strid::thread_grp_fu_186_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_186_p0 = sum_reg_140.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_186_p0 = sum_1_reg_163.read();
    } else {
        grp_fu_186_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_32_strid::thread_grp_fu_186_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_186_p1 = bias_load_reg_637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_186_p1 = tmp_36_reg_627.read();
    } else {
        grp_fu_186_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_32_strid::thread_h_4_fu_354_p2() {
    h_4_fu_354_p2 = (!h_reg_116.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_reg_116.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<15>) (tmp_92_cast_fu_508_p1.read());
}

void subconv_3x3_32_strid::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_m_4_fu_366_p2() {
    m_4_fu_366_p2 = (!m_reg_152.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_152.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_32_strid::thread_n_4_fu_464_p2() {
    n_4_fu_464_p2 = (!n_reg_175.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_175.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_32_strid::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<13>) (tmp_83_cast_fu_513_p1.read());
}

void subconv_3x3_32_strid::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_output_r_d0() {
    output_r_d0 = result_reg_642.read();
}

void subconv_3x3_32_strid::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_p_shl2_cast_fu_259_p1() {
    p_shl2_cast_fu_259_p1 = esl_zext<8,7>(tmp_55_fu_251_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl3_cast_fu_225_p1() {
    p_shl3_cast_fu_225_p1 = esl_zext<11,10>(tmp_52_fu_217_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl4_cast1_fu_237_p1() {
    p_shl4_cast1_fu_237_p1 = esl_zext<10,6>(tmp_53_fu_229_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl4_cast_fu_241_p1() {
    p_shl4_cast_fu_241_p1 = esl_zext<11,6>(tmp_53_fu_229_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl5_cast_fu_314_p3() {
    p_shl5_cast_fu_314_p3 = esl_concat<10,4>(tmp_59_fu_309_p2.read(), ap_const_lv4_0);
}

void subconv_3x3_32_strid::thread_p_shl6_cast_fu_330_p1() {
    p_shl6_cast_fu_330_p1 = esl_zext<14,11>(tmp_39_fu_322_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl7_cast_fu_417_p3() {
    p_shl7_cast_fu_417_p3 = esl_concat<11,5>(tmp_64_fu_412_p2.read(), ap_const_lv5_0);
}

void subconv_3x3_32_strid::thread_p_shl8_cast_fu_433_p1() {
    p_shl8_cast_fu_433_p1 = esl_zext<16,12>(tmp_41_fu_425_p3.read());
}

void subconv_3x3_32_strid::thread_p_shl_cast_fu_281_p1() {
    p_shl_cast_fu_281_p1 = esl_zext<10,9>(tmp_57_fu_273_p3.read());
}

void subconv_3x3_32_strid::thread_tmp1_cast_fu_399_p1() {
    tmp1_cast_fu_399_p1 = esl_sext<6,2>(tmp1_fu_393_p2.read());
}

void subconv_3x3_32_strid::thread_tmp1_fu_393_p2() {
    tmp1_fu_393_p2 = (m_reg_152.read() ^ ap_const_lv2_2);
}

void subconv_3x3_32_strid::thread_tmp2_cast_fu_490_p1() {
    tmp2_cast_fu_490_p1 = esl_sext<6,2>(tmp2_fu_484_p2.read());
}

void subconv_3x3_32_strid::thread_tmp2_fu_484_p2() {
    tmp2_fu_484_p2 = (n_reg_175.read() ^ ap_const_lv2_2);
}

void subconv_3x3_32_strid::thread_tmp_27_cast_fu_305_p1() {
    tmp_27_cast_fu_305_p1 = esl_zext<10,5>(h_reg_116.read());
}

void subconv_3x3_32_strid::thread_tmp_28_fu_346_p3() {
    tmp_28_fu_346_p3 = esl_concat<5,1>(w_reg_128.read(), ap_const_lv1_0);
}

void subconv_3x3_32_strid::thread_tmp_29_cast_fu_443_p1() {
    tmp_29_cast_fu_443_p1 = esl_zext<14,5>(w_reg_128.read());
}

void subconv_3x3_32_strid::thread_tmp_30_cast_fu_372_p1() {
    tmp_30_cast_fu_372_p1 = esl_zext<9,2>(m_reg_152.read());
}

void subconv_3x3_32_strid::thread_tmp_31_fu_403_p2() {
    tmp_31_fu_403_p2 = (!tmp_s_reg_548.read().is_01() || !tmp1_cast_fu_399_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_s_reg_548.read()) + sc_bigint<6>(tmp1_cast_fu_399_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_32_cast_fu_408_p1() {
    tmp_32_cast_fu_408_p1 = esl_zext<11,6>(tmp_31_fu_403_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_33_cast_fu_470_p1() {
    tmp_33_cast_fu_470_p1 = esl_zext<9,2>(n_reg_175.read());
}

void subconv_3x3_32_strid::thread_tmp_34_fu_494_p2() {
    tmp_34_fu_494_p2 = (!tmp_28_reg_561.read().is_01() || !tmp2_cast_fu_490_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_28_reg_561.read()) + sc_bigint<6>(tmp2_cast_fu_490_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_35_cast_fu_499_p1() {
    tmp_35_cast_fu_499_p1 = esl_zext<16,6>(tmp_34_fu_494_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_39_fu_322_p3() {
    tmp_39_fu_322_p3 = esl_concat<10,1>(tmp_59_fu_309_p2.read(), ap_const_lv1_0);
}

void subconv_3x3_32_strid::thread_tmp_40_fu_381_p2() {
    tmp_40_fu_381_p2 = (!ap_const_lv9_2.is_01())? sc_lv<9>(): tmp_62_fu_376_p2.read() << (unsigned short)ap_const_lv9_2.to_uint();
}

void subconv_3x3_32_strid::thread_tmp_41_fu_425_p3() {
    tmp_41_fu_425_p3 = esl_concat<11,1>(tmp_64_fu_412_p2.read(), ap_const_lv1_0);
}

void subconv_3x3_32_strid::thread_tmp_52_fu_217_p3() {
    tmp_52_fu_217_p3 = esl_concat<5,5>(co_reg_105.read(), ap_const_lv5_0);
}

void subconv_3x3_32_strid::thread_tmp_53_fu_229_p3() {
    tmp_53_fu_229_p3 = esl_concat<5,1>(co_reg_105.read(), ap_const_lv1_0);
}

void subconv_3x3_32_strid::thread_tmp_54_fu_245_p2() {
    tmp_54_fu_245_p2 = (!p_shl4_cast_fu_241_p1.read().is_01() || !p_shl3_cast_fu_225_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl4_cast_fu_241_p1.read()) + sc_biguint<11>(p_shl3_cast_fu_225_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_55_fu_251_p3() {
    tmp_55_fu_251_p3 = esl_concat<5,2>(co_reg_105.read(), ap_const_lv2_0);
}

void subconv_3x3_32_strid::thread_tmp_56_fu_263_p2() {
    tmp_56_fu_263_p2 = (!p_shl2_cast_fu_259_p1.read().is_01() || !tmp_cast_fu_213_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_259_p1.read()) - sc_biguint<8>(tmp_cast_fu_213_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_57_fu_273_p3() {
    tmp_57_fu_273_p3 = esl_concat<5,4>(co_reg_105.read(), ap_const_lv4_0);
}

void subconv_3x3_32_strid::thread_tmp_58_fu_285_p2() {
    tmp_58_fu_285_p2 = (!p_shl4_cast1_fu_237_p1.read().is_01() || !p_shl_cast_fu_281_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl4_cast1_fu_237_p1.read()) + sc_biguint<10>(p_shl_cast_fu_281_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_59_fu_309_p2() {
    tmp_59_fu_309_p2 = (!tmp_58_reg_535.read().is_01() || !tmp_27_cast_fu_305_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_58_reg_535.read()) + sc_biguint<10>(tmp_27_cast_fu_305_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_60_fu_334_p2() {
    tmp_60_fu_334_p2 = (!p_shl6_cast_fu_330_p1.read().is_01() || !p_shl5_cast_fu_314_p3.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl6_cast_fu_330_p1.read()) + sc_biguint<14>(p_shl5_cast_fu_314_p3.read()));
}

void subconv_3x3_32_strid::thread_tmp_61_fu_447_p2() {
    tmp_61_fu_447_p2 = (!tmp_60_reg_553.read().is_01() || !tmp_29_cast_fu_443_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_60_reg_553.read()) + sc_biguint<14>(tmp_29_cast_fu_443_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_62_fu_376_p2() {
    tmp_62_fu_376_p2 = (!tmp_75_cast_reg_530.read().is_01() || !tmp_30_cast_fu_372_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_75_cast_reg_530.read()) + sc_biguint<9>(tmp_30_cast_fu_372_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_63_fu_387_p2() {
    tmp_63_fu_387_p2 = (!tmp_40_fu_381_p2.read().is_01() || !tmp_62_fu_376_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_40_fu_381_p2.read()) - sc_biguint<9>(tmp_62_fu_376_p2.read()));
}

void subconv_3x3_32_strid::thread_tmp_64_fu_412_p2() {
    tmp_64_fu_412_p2 = (!tmp_54_reg_525.read().is_01() || !tmp_32_cast_fu_408_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_54_reg_525.read()) + sc_biguint<11>(tmp_32_cast_fu_408_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_65_fu_437_p2() {
    tmp_65_fu_437_p2 = (!p_shl8_cast_fu_433_p1.read().is_01() || !p_shl7_cast_fu_417_p3.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_shl8_cast_fu_433_p1.read()) + sc_biguint<16>(p_shl7_cast_fu_417_p3.read()));
}

void subconv_3x3_32_strid::thread_tmp_66_fu_474_p2() {
    tmp_66_fu_474_p2 = (!tmp_63_reg_579.read().is_01() || !tmp_33_cast_fu_470_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_63_reg_579.read()) + sc_biguint<9>(tmp_33_cast_fu_470_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_67_fu_503_p2() {
    tmp_67_fu_503_p2 = (!tmp_65_reg_584.read().is_01() || !tmp_35_cast_fu_499_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_65_reg_584.read()) + sc_biguint<16>(tmp_35_cast_fu_499_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_75_cast_fu_269_p1() {
    tmp_75_cast_fu_269_p1 = esl_sext<9,8>(tmp_56_fu_263_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_83_cast_fu_513_p1() {
    tmp_83_cast_fu_513_p1 = esl_zext<64,14>(tmp_61_reg_589.read());
}

void subconv_3x3_32_strid::thread_tmp_91_cast_fu_479_p1() {
    tmp_91_cast_fu_479_p1 = esl_zext<64,9>(tmp_66_fu_474_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_92_cast_fu_508_p1() {
    tmp_92_cast_fu_508_p1 = esl_zext<64,16>(tmp_67_fu_503_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_cast_fu_213_p1() {
    tmp_cast_fu_213_p1 = esl_zext<8,5>(co_reg_105.read());
}

void subconv_3x3_32_strid::thread_tmp_fu_208_p1() {
    tmp_fu_208_p1 = esl_zext<64,5>(co_reg_105.read());
}

void subconv_3x3_32_strid::thread_tmp_s_fu_297_p3() {
    tmp_s_fu_297_p3 = esl_concat<5,1>(h_reg_116.read(), ap_const_lv1_0);
}

void subconv_3x3_32_strid::thread_w_4_fu_452_p2() {
    w_4_fu_452_p2 = (!w_reg_128.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(w_reg_128.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_weight_address0() {
    weight_address0 =  (sc_lv<8>) (tmp_91_cast_fu_479_p1.read());
}

void subconv_3x3_32_strid::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_196_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_291_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_340_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_360_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_458_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

