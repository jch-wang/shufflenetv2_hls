// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_last.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_last::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_last::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> conv_last::ap_ST_fsm_state1 = "1";
const sc_lv<23> conv_last::ap_ST_fsm_state2 = "10";
const sc_lv<23> conv_last::ap_ST_fsm_state3 = "100";
const sc_lv<23> conv_last::ap_ST_fsm_state4 = "1000";
const sc_lv<23> conv_last::ap_ST_fsm_state5 = "10000";
const sc_lv<23> conv_last::ap_ST_fsm_state6 = "100000";
const sc_lv<23> conv_last::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> conv_last::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> conv_last::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> conv_last::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> conv_last::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> conv_last::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_last::ap_const_lv32_1 = "1";
const sc_lv<1> conv_last::ap_const_lv1_0 = "0";
const sc_lv<32> conv_last::ap_const_lv32_2 = "10";
const sc_lv<32> conv_last::ap_const_lv32_3 = "11";
const sc_lv<32> conv_last::ap_const_lv32_4 = "100";
const sc_lv<32> conv_last::ap_const_lv32_5 = "101";
const sc_lv<32> conv_last::ap_const_lv32_9 = "1001";
const sc_lv<32> conv_last::ap_const_lv32_E = "1110";
const sc_lv<32> conv_last::ap_const_lv32_F = "1111";
const sc_lv<32> conv_last::ap_const_lv32_14 = "10100";
const sc_lv<32> conv_last::ap_const_lv32_15 = "10101";
const sc_lv<10> conv_last::ap_const_lv10_0 = "0000000000";
const sc_lv<1> conv_last::ap_const_lv1_1 = "1";
const sc_lv<3> conv_last::ap_const_lv3_0 = "000";
const sc_lv<32> conv_last::ap_const_lv32_16 = "10110";
const sc_lv<8> conv_last::ap_const_lv8_0 = "00000000";
const sc_lv<32> conv_last::ap_const_lv32_A = "1010";
const sc_lv<32> conv_last::ap_const_lv32_10 = "10000";
const sc_lv<32> conv_last::ap_const_lv32_6 = "110";
const sc_lv<10> conv_last::ap_const_lv10_200 = "1000000000";
const sc_lv<10> conv_last::ap_const_lv10_1 = "1";
const sc_lv<6> conv_last::ap_const_lv6_0 = "000000";
const sc_lv<2> conv_last::ap_const_lv2_0 = "00";
const sc_lv<3> conv_last::ap_const_lv3_4 = "100";
const sc_lv<3> conv_last::ap_const_lv3_1 = "1";
const sc_lv<8> conv_last::ap_const_lv8_C0 = "11000000";
const sc_lv<8> conv_last::ap_const_lv8_1 = "1";
const sc_lv<32> conv_last::ap_const_lv32_17 = "10111";
const sc_lv<32> conv_last::ap_const_lv32_1E = "11110";
const sc_lv<8> conv_last::ap_const_lv8_FF = "11111111";
const sc_lv<23> conv_last::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> conv_last::ap_const_lv5_2 = "10";
const bool conv_last::ap_const_boolean_1 = true;

conv_last::conv_last(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U107 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U107");
    ShuffleNetV2_faddbkb_x_U107->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U107->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U107->din0(sum_reg_143);
    ShuffleNetV2_faddbkb_x_U107->din1(grp_fu_166_p1);
    ShuffleNetV2_faddbkb_x_U107->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U107->dout(grp_fu_166_p2);
    ShuffleNetV2_fmulcud_x_U108 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U108");
    ShuffleNetV2_fmulcud_x_U108->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U108->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U108->din0(weight_load_reg_484);
    ShuffleNetV2_fmulcud_x_U108->din1(input_load_reg_489);
    ShuffleNetV2_fmulcud_x_U108->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U108->dout(grp_fu_171_p2);
    ShuffleNetV2_fcmpdEe_x_U109 = new ShuffleNetV2_fcmpdEe<1,1,32,32,1>("ShuffleNetV2_fcmpdEe_x_U109");
    ShuffleNetV2_fcmpdEe_x_U109->din0(result_reg_509);
    ShuffleNetV2_fcmpdEe_x_U109->din1(ap_var_for_const1);
    ShuffleNetV2_fcmpdEe_x_U109->opcode(ap_var_for_const2);
    ShuffleNetV2_fcmpdEe_x_U109->dout(tmp_34_fu_175_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_180_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_180_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_425 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ci_7_fu_304_p2);
    sensitive << ( ci_reg_155 );

    SC_METHOD(thread_co_22_fu_186_p2);
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_exitcond1_fu_268_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_132 );

    SC_METHOD(thread_exitcond2_fu_235_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_121 );

    SC_METHOD(thread_exitcond3_fu_180_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_exitcond_fu_298_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_155 );

    SC_METHOD(thread_grp_fu_166_p1);
    sensitive << ( tmp_84_reg_494 );
    sensitive << ( bias_load_reg_504 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_h_22_fu_241_p2);
    sensitive << ( h_reg_121 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_421_cast_fu_344_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_notlhs_fu_376_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_31_fu_362_p4 );

    SC_METHOD(thread_notrhs_fu_382_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_109_fu_372_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_461 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( result_reg_509 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_35_fu_394_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl1_cast_fu_213_p1);
    sensitive << ( tmp_284_fu_205_p3 );

    SC_METHOD(thread_result_to_int_fu_359_p1);
    sensitive << ( result_reg_509 );

    SC_METHOD(thread_tmp_109_fu_372_p1);
    sensitive << ( result_to_int_fu_359_p1 );

    SC_METHOD(thread_tmp_284_fu_205_p3);
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_tmp_285_fu_217_p2);
    sensitive << ( tmp_s_fu_197_p3 );
    sensitive << ( p_shl1_cast_fu_213_p1 );

    SC_METHOD(thread_tmp_286_fu_223_p3);
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_tmp_287_fu_255_p2);
    sensitive << ( tmp_411_cast_reg_420 );
    sensitive << ( tmp_cast_fu_251_p1 );

    SC_METHOD(thread_tmp_288_fu_288_p2);
    sensitive << ( tmp_414_cast_reg_443 );
    sensitive << ( tmp_82_cast_fu_284_p1 );

    SC_METHOD(thread_tmp_289_fu_314_p3);
    sensitive << ( ci_reg_155 );

    SC_METHOD(thread_tmp_290_fu_326_p2);
    sensitive << ( tmp_cast3_reg_438 );
    sensitive << ( tmp_417_cast_fu_322_p1 );

    SC_METHOD(thread_tmp_291_fu_339_p2);
    sensitive << ( tmp_82_cast2_reg_456 );
    sensitive << ( tmp_420_cast_fu_331_p3 );

    SC_METHOD(thread_tmp_292_fu_349_p2);
    sensitive << ( tmp_285_reg_415 );
    sensitive << ( tmp_83_cast_fu_310_p1 );

    SC_METHOD(thread_tmp_31_fu_362_p4);
    sensitive << ( result_to_int_fu_359_p1 );

    SC_METHOD(thread_tmp_33_fu_388_p2);
    sensitive << ( notrhs_fu_382_p2 );
    sensitive << ( notlhs_fu_376_p2 );

    SC_METHOD(thread_tmp_35_fu_394_p2);
    sensitive << ( tmp_34_reg_516 );
    sensitive << ( tmp_33_fu_388_p2 );

    SC_METHOD(thread_tmp_411_cast_fu_231_p1);
    sensitive << ( tmp_286_fu_223_p3 );

    SC_METHOD(thread_tmp_414_cast_fu_260_p3);
    sensitive << ( tmp_287_fu_255_p2 );

    SC_METHOD(thread_tmp_415_cast_fu_293_p1);
    sensitive << ( tmp_288_fu_288_p2 );

    SC_METHOD(thread_tmp_417_cast_fu_322_p1);
    sensitive << ( tmp_289_fu_314_p3 );

    SC_METHOD(thread_tmp_420_cast_fu_331_p3);
    sensitive << ( tmp_290_fu_326_p2 );

    SC_METHOD(thread_tmp_421_cast_fu_344_p1);
    sensitive << ( tmp_291_fu_339_p2 );

    SC_METHOD(thread_tmp_422_cast_fu_354_p1);
    sensitive << ( tmp_292_fu_349_p2 );

    SC_METHOD(thread_tmp_82_cast2_fu_280_p1);
    sensitive << ( w_reg_132 );

    SC_METHOD(thread_tmp_82_cast_fu_284_p1);
    sensitive << ( w_reg_132 );

    SC_METHOD(thread_tmp_83_cast_fu_310_p1);
    sensitive << ( ci_reg_155 );

    SC_METHOD(thread_tmp_cast3_fu_247_p1);
    sensitive << ( h_reg_121 );

    SC_METHOD(thread_tmp_cast_fu_251_p1);
    sensitive << ( h_reg_121 );

    SC_METHOD(thread_tmp_fu_192_p1);
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_tmp_s_fu_197_p3);
    sensitive << ( co_reg_110 );

    SC_METHOD(thread_w_22_fu_274_p2);
    sensitive << ( w_reg_132 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_422_cast_fu_354_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_235_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_268_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_298_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_last_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_22_fu_186_p2, "co_22_fu_186_p2");
    sc_trace(mVcdFile, co_22_reg_410, "co_22_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_285_fu_217_p2, "tmp_285_fu_217_p2");
    sc_trace(mVcdFile, tmp_285_reg_415, "tmp_285_reg_415");
    sc_trace(mVcdFile, exitcond3_fu_180_p2, "exitcond3_fu_180_p2");
    sc_trace(mVcdFile, tmp_411_cast_fu_231_p1, "tmp_411_cast_fu_231_p1");
    sc_trace(mVcdFile, tmp_411_cast_reg_420, "tmp_411_cast_reg_420");
    sc_trace(mVcdFile, bias_addr_reg_425, "bias_addr_reg_425");
    sc_trace(mVcdFile, h_22_fu_241_p2, "h_22_fu_241_p2");
    sc_trace(mVcdFile, h_22_reg_433, "h_22_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast3_fu_247_p1, "tmp_cast3_fu_247_p1");
    sc_trace(mVcdFile, tmp_cast3_reg_438, "tmp_cast3_reg_438");
    sc_trace(mVcdFile, exitcond2_fu_235_p2, "exitcond2_fu_235_p2");
    sc_trace(mVcdFile, tmp_414_cast_fu_260_p3, "tmp_414_cast_fu_260_p3");
    sc_trace(mVcdFile, tmp_414_cast_reg_443, "tmp_414_cast_reg_443");
    sc_trace(mVcdFile, w_22_fu_274_p2, "w_22_fu_274_p2");
    sc_trace(mVcdFile, w_22_reg_451, "w_22_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_82_cast2_fu_280_p1, "tmp_82_cast2_fu_280_p1");
    sc_trace(mVcdFile, tmp_82_cast2_reg_456, "tmp_82_cast2_reg_456");
    sc_trace(mVcdFile, exitcond1_fu_268_p2, "exitcond1_fu_268_p2");
    sc_trace(mVcdFile, output_addr_reg_461, "output_addr_reg_461");
    sc_trace(mVcdFile, ci_7_fu_304_p2, "ci_7_fu_304_p2");
    sc_trace(mVcdFile, ci_7_reg_469, "ci_7_reg_469");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_298_p2, "exitcond_fu_298_p2");
    sc_trace(mVcdFile, weight_load_reg_484, "weight_load_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, input_load_reg_489, "input_load_reg_489");
    sc_trace(mVcdFile, grp_fu_171_p2, "grp_fu_171_p2");
    sc_trace(mVcdFile, tmp_84_reg_494, "tmp_84_reg_494");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, bias_load_reg_504, "bias_load_reg_504");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, result_reg_509, "result_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_34_fu_175_p2, "tmp_34_fu_175_p2");
    sc_trace(mVcdFile, tmp_34_reg_516, "tmp_34_reg_516");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_110, "co_reg_110");
    sc_trace(mVcdFile, h_reg_121, "h_reg_121");
    sc_trace(mVcdFile, w_reg_132, "w_reg_132");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_reg_143, "sum_reg_143");
    sc_trace(mVcdFile, ci_reg_155, "ci_reg_155");
    sc_trace(mVcdFile, tmp_fu_192_p1, "tmp_fu_192_p1");
    sc_trace(mVcdFile, tmp_415_cast_fu_293_p1, "tmp_415_cast_fu_293_p1");
    sc_trace(mVcdFile, tmp_421_cast_fu_344_p1, "tmp_421_cast_fu_344_p1");
    sc_trace(mVcdFile, tmp_422_cast_fu_354_p1, "tmp_422_cast_fu_354_p1");
    sc_trace(mVcdFile, grp_fu_166_p1, "grp_fu_166_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_284_fu_205_p3, "tmp_284_fu_205_p3");
    sc_trace(mVcdFile, tmp_s_fu_197_p3, "tmp_s_fu_197_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_213_p1, "p_shl1_cast_fu_213_p1");
    sc_trace(mVcdFile, tmp_286_fu_223_p3, "tmp_286_fu_223_p3");
    sc_trace(mVcdFile, tmp_cast_fu_251_p1, "tmp_cast_fu_251_p1");
    sc_trace(mVcdFile, tmp_287_fu_255_p2, "tmp_287_fu_255_p2");
    sc_trace(mVcdFile, tmp_82_cast_fu_284_p1, "tmp_82_cast_fu_284_p1");
    sc_trace(mVcdFile, tmp_288_fu_288_p2, "tmp_288_fu_288_p2");
    sc_trace(mVcdFile, tmp_289_fu_314_p3, "tmp_289_fu_314_p3");
    sc_trace(mVcdFile, tmp_417_cast_fu_322_p1, "tmp_417_cast_fu_322_p1");
    sc_trace(mVcdFile, tmp_290_fu_326_p2, "tmp_290_fu_326_p2");
    sc_trace(mVcdFile, tmp_420_cast_fu_331_p3, "tmp_420_cast_fu_331_p3");
    sc_trace(mVcdFile, tmp_291_fu_339_p2, "tmp_291_fu_339_p2");
    sc_trace(mVcdFile, tmp_83_cast_fu_310_p1, "tmp_83_cast_fu_310_p1");
    sc_trace(mVcdFile, tmp_292_fu_349_p2, "tmp_292_fu_349_p2");
    sc_trace(mVcdFile, result_to_int_fu_359_p1, "result_to_int_fu_359_p1");
    sc_trace(mVcdFile, tmp_31_fu_362_p4, "tmp_31_fu_362_p4");
    sc_trace(mVcdFile, tmp_109_fu_372_p1, "tmp_109_fu_372_p1");
    sc_trace(mVcdFile, notrhs_fu_382_p2, "notrhs_fu_382_p2");
    sc_trace(mVcdFile, notlhs_fu_376_p2, "notlhs_fu_376_p2");
    sc_trace(mVcdFile, tmp_33_fu_388_p2, "tmp_33_fu_388_p2");
    sc_trace(mVcdFile, tmp_35_fu_394_p2, "tmp_35_fu_394_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv_last::~conv_last() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U107;
    delete ShuffleNetV2_fmulcud_x_U108;
    delete ShuffleNetV2_fcmpdEe_x_U109;
}

void conv_last::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv_last::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void conv_last::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void conv_last::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_268_p2.read()))) {
        ci_reg_155 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ci_reg_155 = ci_7_reg_469.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_235_p2.read(), ap_const_lv1_1))) {
        co_reg_110 = co_22_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_110 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_1))) {
        h_reg_121 = h_22_reg_433.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_180_p2.read(), ap_const_lv1_0))) {
        h_reg_121 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_268_p2.read()))) {
        sum_reg_143 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sum_reg_143 = grp_fu_166_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_235_p2.read()))) {
        w_reg_132 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_reg_132 = w_22_reg_451.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_180_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_425 =  (sc_lv<9>) (tmp_fu_192_p1.read());
        tmp_285_reg_415 = tmp_285_fu_217_p2.read();
        tmp_411_cast_reg_420 = tmp_411_cast_fu_231_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        bias_load_reg_504 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_7_reg_469 = ci_7_fu_304_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_22_reg_410 = co_22_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_22_reg_433 = h_22_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_load_reg_489 = input_r_q0.read();
        weight_load_reg_484 = weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_268_p2.read()))) {
        output_addr_reg_461 =  (sc_lv<13>) (tmp_415_cast_fu_293_p1.read());
        tmp_82_cast2_reg_456 = tmp_82_cast2_fu_280_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        result_reg_509 = grp_fu_166_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_34_reg_516 = tmp_34_fu_175_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_235_p2.read()))) {
        tmp_414_cast_reg_443 = tmp_414_cast_fu_260_p3.read();
        tmp_cast3_reg_438 = tmp_cast3_fu_247_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_84_reg_494 = grp_fu_171_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_22_reg_451 = w_22_fu_274_p2.read();
    }
}

void conv_last::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_last::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv_last::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv_last::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv_last::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv_last::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv_last::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv_last::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void conv_last::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void conv_last::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void conv_last::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv_last::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv_last::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv_last::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv_last::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv_last::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_180_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_last::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_last::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_180_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_last::thread_bias_address0() {
    bias_address0 = bias_addr_reg_425.read();
}

void conv_last::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_ci_7_fu_304_p2() {
    ci_7_fu_304_p2 = (!ci_reg_155.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ci_reg_155.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void conv_last::thread_co_22_fu_186_p2() {
    co_22_fu_186_p2 = (!co_reg_110.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(co_reg_110.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void conv_last::thread_exitcond1_fu_268_p2() {
    exitcond1_fu_268_p2 = (!w_reg_132.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_132.read() == ap_const_lv3_4);
}

void conv_last::thread_exitcond2_fu_235_p2() {
    exitcond2_fu_235_p2 = (!h_reg_121.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_121.read() == ap_const_lv3_4);
}

void conv_last::thread_exitcond3_fu_180_p2() {
    exitcond3_fu_180_p2 = (!co_reg_110.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_110.read() == ap_const_lv10_200);
}

void conv_last::thread_exitcond_fu_298_p2() {
    exitcond_fu_298_p2 = (!ci_reg_155.read().is_01() || !ap_const_lv8_C0.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_155.read() == ap_const_lv8_C0);
}

void conv_last::thread_grp_fu_166_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_166_p1 = bias_load_reg_504.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_166_p1 = tmp_84_reg_494.read();
    } else {
        grp_fu_166_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv_last::thread_h_22_fu_241_p2() {
    h_22_fu_241_p2 = (!h_reg_121.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(h_reg_121.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_last::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<12>) (tmp_421_cast_fu_344_p1.read());
}

void conv_last::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_notlhs_fu_376_p2() {
    notlhs_fu_376_p2 = (!tmp_31_fu_362_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_31_fu_362_p4.read() != ap_const_lv8_FF);
}

void conv_last::thread_notrhs_fu_382_p2() {
    notrhs_fu_382_p2 = (!tmp_109_fu_372_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_109_fu_372_p1.read() == ap_const_lv23_0);
}

void conv_last::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_461.read();
}

void conv_last::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_output_r_d0() {
    output_r_d0 = (!tmp_35_fu_394_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_35_fu_394_p2.read()[0].to_bool())? result_reg_509.read(): ap_const_lv32_0);
}

void conv_last::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void conv_last::thread_p_shl1_cast_fu_213_p1() {
    p_shl1_cast_fu_213_p1 = esl_zext<18,16>(tmp_284_fu_205_p3.read());
}

void conv_last::thread_result_to_int_fu_359_p1() {
    result_to_int_fu_359_p1 = result_reg_509.read();
}

void conv_last::thread_tmp_109_fu_372_p1() {
    tmp_109_fu_372_p1 = result_to_int_fu_359_p1.read().range(23-1, 0);
}

void conv_last::thread_tmp_284_fu_205_p3() {
    tmp_284_fu_205_p3 = esl_concat<10,6>(co_reg_110.read(), ap_const_lv6_0);
}

void conv_last::thread_tmp_285_fu_217_p2() {
    tmp_285_fu_217_p2 = (!tmp_s_fu_197_p3.read().is_01() || !p_shl1_cast_fu_213_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_s_fu_197_p3.read()) - sc_biguint<18>(p_shl1_cast_fu_213_p1.read()));
}

void conv_last::thread_tmp_286_fu_223_p3() {
    tmp_286_fu_223_p3 = esl_concat<10,2>(co_reg_110.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_287_fu_255_p2() {
    tmp_287_fu_255_p2 = (!tmp_cast_fu_251_p1.read().is_01() || !tmp_411_cast_reg_420.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_cast_fu_251_p1.read()) + sc_biguint<13>(tmp_411_cast_reg_420.read()));
}

void conv_last::thread_tmp_288_fu_288_p2() {
    tmp_288_fu_288_p2 = (!tmp_414_cast_reg_443.read().is_01() || !tmp_82_cast_fu_284_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_414_cast_reg_443.read()) + sc_biguint<15>(tmp_82_cast_fu_284_p1.read()));
}

void conv_last::thread_tmp_289_fu_314_p3() {
    tmp_289_fu_314_p3 = esl_concat<8,2>(ci_reg_155.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_290_fu_326_p2() {
    tmp_290_fu_326_p2 = (!tmp_cast3_reg_438.read().is_01() || !tmp_417_cast_fu_322_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast3_reg_438.read()) + sc_biguint<11>(tmp_417_cast_fu_322_p1.read()));
}

void conv_last::thread_tmp_291_fu_339_p2() {
    tmp_291_fu_339_p2 = (!tmp_82_cast2_reg_456.read().is_01() || !tmp_420_cast_fu_331_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_82_cast2_reg_456.read()) + sc_biguint<13>(tmp_420_cast_fu_331_p3.read()));
}

void conv_last::thread_tmp_292_fu_349_p2() {
    tmp_292_fu_349_p2 = (!tmp_83_cast_fu_310_p1.read().is_01() || !tmp_285_reg_415.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_83_cast_fu_310_p1.read()) + sc_biguint<18>(tmp_285_reg_415.read()));
}

void conv_last::thread_tmp_31_fu_362_p4() {
    tmp_31_fu_362_p4 = result_to_int_fu_359_p1.read().range(30, 23);
}

void conv_last::thread_tmp_33_fu_388_p2() {
    tmp_33_fu_388_p2 = (notrhs_fu_382_p2.read() | notlhs_fu_376_p2.read());
}

void conv_last::thread_tmp_35_fu_394_p2() {
    tmp_35_fu_394_p2 = (tmp_33_fu_388_p2.read() & tmp_34_reg_516.read());
}

void conv_last::thread_tmp_411_cast_fu_231_p1() {
    tmp_411_cast_fu_231_p1 = esl_zext<13,12>(tmp_286_fu_223_p3.read());
}

void conv_last::thread_tmp_414_cast_fu_260_p3() {
    tmp_414_cast_fu_260_p3 = esl_concat<13,2>(tmp_287_fu_255_p2.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_415_cast_fu_293_p1() {
    tmp_415_cast_fu_293_p1 = esl_zext<64,15>(tmp_288_fu_288_p2.read());
}

void conv_last::thread_tmp_417_cast_fu_322_p1() {
    tmp_417_cast_fu_322_p1 = esl_zext<11,10>(tmp_289_fu_314_p3.read());
}

void conv_last::thread_tmp_420_cast_fu_331_p3() {
    tmp_420_cast_fu_331_p3 = esl_concat<11,2>(tmp_290_fu_326_p2.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_421_cast_fu_344_p1() {
    tmp_421_cast_fu_344_p1 = esl_zext<64,13>(tmp_291_fu_339_p2.read());
}

void conv_last::thread_tmp_422_cast_fu_354_p1() {
    tmp_422_cast_fu_354_p1 = esl_sext<64,18>(tmp_292_fu_349_p2.read());
}

void conv_last::thread_tmp_82_cast2_fu_280_p1() {
    tmp_82_cast2_fu_280_p1 = esl_zext<13,3>(w_reg_132.read());
}

void conv_last::thread_tmp_82_cast_fu_284_p1() {
    tmp_82_cast_fu_284_p1 = esl_zext<15,3>(w_reg_132.read());
}

void conv_last::thread_tmp_83_cast_fu_310_p1() {
    tmp_83_cast_fu_310_p1 = esl_zext<18,8>(ci_reg_155.read());
}

void conv_last::thread_tmp_cast3_fu_247_p1() {
    tmp_cast3_fu_247_p1 = esl_zext<11,3>(h_reg_121.read());
}

void conv_last::thread_tmp_cast_fu_251_p1() {
    tmp_cast_fu_251_p1 = esl_zext<13,3>(h_reg_121.read());
}

void conv_last::thread_tmp_fu_192_p1() {
    tmp_fu_192_p1 = esl_zext<64,10>(co_reg_110.read());
}

void conv_last::thread_tmp_s_fu_197_p3() {
    tmp_s_fu_197_p3 = esl_concat<10,8>(co_reg_110.read(), ap_const_lv8_0);
}

void conv_last::thread_w_22_fu_274_p2() {
    w_22_fu_274_p2 = (!w_reg_132.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(w_reg_132.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_last::thread_weight_address0() {
    weight_address0 =  (sc_lv<17>) (tmp_422_cast_fu_354_p1.read());
}

void conv_last::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_180_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_235_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_298_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

