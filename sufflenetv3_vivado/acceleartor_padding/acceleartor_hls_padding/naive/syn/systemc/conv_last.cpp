// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_last.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_last::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_last::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> conv_last::ap_ST_fsm_state1 = "1";
const sc_lv<20> conv_last::ap_ST_fsm_state2 = "10";
const sc_lv<20> conv_last::ap_ST_fsm_state3 = "100";
const sc_lv<20> conv_last::ap_ST_fsm_state4 = "1000";
const sc_lv<20> conv_last::ap_ST_fsm_state5 = "10000";
const sc_lv<20> conv_last::ap_ST_fsm_state6 = "100000";
const sc_lv<20> conv_last::ap_ST_fsm_state7 = "1000000";
const sc_lv<20> conv_last::ap_ST_fsm_state8 = "10000000";
const sc_lv<20> conv_last::ap_ST_fsm_state9 = "100000000";
const sc_lv<20> conv_last::ap_ST_fsm_state10 = "1000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state11 = "10000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state12 = "100000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<20> conv_last::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> conv_last::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> conv_last::ap_const_lv1_0 = "0";
const sc_lv<3> conv_last::ap_const_lv3_0 = "000";
const sc_lv<2> conv_last::ap_const_lv2_0 = "00";
const sc_lv<4> conv_last::ap_const_lv4_0 = "0000";
const sc_lv<8> conv_last::ap_const_lv8_0 = "00000000";
const sc_lv<32> conv_last::ap_const_lv32_4 = "100";
const sc_lv<32> conv_last::ap_const_lv32_C = "1100";
const sc_lv<32> conv_last::ap_const_lv32_1 = "1";
const sc_lv<32> conv_last::ap_const_lv32_2 = "10";
const sc_lv<32> conv_last::ap_const_lv32_3 = "11";
const sc_lv<32> conv_last::ap_const_lv32_A = "1010";
const sc_lv<32> conv_last::ap_const_lv32_B = "1011";
const sc_lv<32> conv_last::ap_const_lv32_D = "1101";
const sc_lv<32> conv_last::ap_const_lv32_E = "1110";
const sc_lv<32> conv_last::ap_const_lv32_F = "1111";
const sc_lv<32> conv_last::ap_const_lv32_10 = "10000";
const sc_lv<32> conv_last::ap_const_lv32_11 = "10001";
const sc_lv<32> conv_last::ap_const_lv32_12 = "10010";
const sc_lv<10> conv_last::ap_const_lv10_0 = "0000000000";
const sc_lv<1> conv_last::ap_const_lv1_1 = "1";
const sc_lv<32> conv_last::ap_const_lv32_13 = "10011";
const sc_lv<32> conv_last::ap_const_lv32_C0 = "11000000";
const sc_lv<10> conv_last::ap_const_lv10_200 = "1000000000";
const sc_lv<10> conv_last::ap_const_lv10_1 = "1";
const sc_lv<6> conv_last::ap_const_lv6_0 = "000000";
const sc_lv<3> conv_last::ap_const_lv3_4 = "100";
const sc_lv<3> conv_last::ap_const_lv3_1 = "1";
const sc_lv<8> conv_last::ap_const_lv8_C0 = "11000000";
const sc_lv<8> conv_last::ap_const_lv8_1 = "1";
const sc_lv<32> conv_last::ap_const_lv32_5 = "101";
const sc_lv<32> conv_last::ap_const_lv32_6 = "110";
const sc_lv<32> conv_last::ap_const_lv32_7 = "111";
const sc_lv<2> conv_last::ap_const_lv2_3 = "11";
const sc_lv<8> conv_last::ap_const_lv8_7F = "1111111";
const sc_lv<8> conv_last::ap_const_lv8_80 = "10000000";
const sc_lv<32> conv_last::ap_const_lv32_8 = "1000";
const sc_lv<7> conv_last::ap_const_lv7_0 = "0000000";
const bool conv_last::ap_const_boolean_1 = true;

conv_last::conv_last(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range1_all_ones_fu_523_p2);
    sensitive << ( tmp_182_reg_879 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_Range1_all_zeros_fu_528_p2);
    sensitive << ( carry_reg_872 );
    sensitive << ( tmp_182_reg_879 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_227_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_227_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_weight_V_ARREADY);
    sensitive << ( m_axi_weight_V_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_bias_V_address0);
    sensitive << ( bias_V_addr_reg_768 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_brmerge40_demorgan_i_fu_585_p2);
    sensitive << ( newsignbit_reg_866 );
    sensitive << ( deleted_ones_fu_551_p3 );

    SC_METHOD(thread_brmerge9_fu_697_p2);
    sensitive << ( newsignbit_14_reg_928 );
    sensitive << ( isneg_not_fu_692_p2 );

    SC_METHOD(thread_brmerge_i_i5_fu_569_p2);
    sensitive << ( newsignbit_reg_866 );
    sensitive << ( p_not_i_i_fu_563_p2 );

    SC_METHOD(thread_brmerge_i_i_fu_688_p2);
    sensitive << ( isneg_reg_915 );
    sensitive << ( newsignbit_14_reg_928 );

    SC_METHOD(thread_brmerge_i_i_i_fu_607_p2);
    sensitive << ( underflow_fu_602_p2 );
    sensitive << ( overflow_fu_579_p2 );

    SC_METHOD(thread_carry_fu_500_p2);
    sensitive << ( tmp_294_fu_472_p3 );
    sensitive << ( tmp_201_fu_494_p2 );

    SC_METHOD(thread_ci_8_fu_373_p2);
    sensitive << ( ci_reg_212 );

    SC_METHOD(thread_co_23_fu_233_p2);
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_deleted_ones_fu_551_p3);
    sensitive << ( carry_reg_872 );
    sensitive << ( Range1_all_ones_fu_523_p2 );
    sensitive << ( p_41_i_i_fu_546_p2 );

    SC_METHOD(thread_deleted_zeros_fu_533_p3);
    sensitive << ( carry_reg_872 );
    sensitive << ( Range1_all_ones_fu_523_p2 );
    sensitive << ( Range1_all_zeros_fu_528_p2 );

    SC_METHOD(thread_exitcond1_fu_319_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_188 );

    SC_METHOD(thread_exitcond8_fu_227_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_exitcond9_fu_286_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_177 );

    SC_METHOD(thread_exitcond_fu_367_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ci_reg_212 );

    SC_METHOD(thread_h_22_fu_292_p2);
    sensitive << ( h_reg_177 );

    SC_METHOD(thread_input_V_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_432_cast_fu_409_p1 );

    SC_METHOD(thread_input_V_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_isneg_not_fu_692_p2);
    sensitive << ( isneg_reg_915 );

    SC_METHOD(thread_m_axi_weight_V_ARADDR);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( weight_V_addr_reg_804 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_ARBURST);

    SC_METHOD(thread_m_axi_weight_V_ARCACHE);

    SC_METHOD(thread_m_axi_weight_V_ARID);

    SC_METHOD(thread_m_axi_weight_V_ARLEN);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_ARLOCK);

    SC_METHOD(thread_m_axi_weight_V_ARPROT);

    SC_METHOD(thread_m_axi_weight_V_ARQOS);

    SC_METHOD(thread_m_axi_weight_V_ARREGION);

    SC_METHOD(thread_m_axi_weight_V_ARSIZE);

    SC_METHOD(thread_m_axi_weight_V_ARUSER);

    SC_METHOD(thread_m_axi_weight_V_ARVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_AWADDR);

    SC_METHOD(thread_m_axi_weight_V_AWBURST);

    SC_METHOD(thread_m_axi_weight_V_AWCACHE);

    SC_METHOD(thread_m_axi_weight_V_AWID);

    SC_METHOD(thread_m_axi_weight_V_AWLEN);

    SC_METHOD(thread_m_axi_weight_V_AWLOCK);

    SC_METHOD(thread_m_axi_weight_V_AWPROT);

    SC_METHOD(thread_m_axi_weight_V_AWQOS);

    SC_METHOD(thread_m_axi_weight_V_AWREGION);

    SC_METHOD(thread_m_axi_weight_V_AWSIZE);

    SC_METHOD(thread_m_axi_weight_V_AWUSER);

    SC_METHOD(thread_m_axi_weight_V_AWVALID);

    SC_METHOD(thread_m_axi_weight_V_BREADY);

    SC_METHOD(thread_m_axi_weight_V_RREADY);
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_m_axi_weight_V_WDATA);

    SC_METHOD(thread_m_axi_weight_V_WID);

    SC_METHOD(thread_m_axi_weight_V_WLAST);

    SC_METHOD(thread_m_axi_weight_V_WSTRB);

    SC_METHOD(thread_m_axi_weight_V_WUSER);

    SC_METHOD(thread_m_axi_weight_V_WVALID);

    SC_METHOD(thread_newsignbit_fu_486_p3);
    sensitive << ( p_Val2_99_fu_480_p2 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( output_V_addr_reg_799 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( p_s_fu_734_p3 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_overflow_fu_579_p2);
    sensitive << ( tmp_203_fu_574_p2 );
    sensitive << ( brmerge_i_i5_fu_569_p2 );

    SC_METHOD(thread_p_38_i_i_fu_558_p2);
    sensitive << ( carry_reg_872 );
    sensitive << ( Range1_all_ones_fu_523_p2 );

    SC_METHOD(thread_p_41_i_i_fu_546_p2);
    sensitive << ( signbit_reg_853 );
    sensitive << ( tmp_202_fu_540_p2 );

    SC_METHOD(thread_p_Val2_104_mux_fu_622_p3);
    sensitive << ( p_Val2_99_reg_860 );
    sensitive << ( brmerge_i_i_i_reg_905 );

    SC_METHOD(thread_p_Val2_94_fu_650_p2);
    sensitive << ( tmp_195_fu_646_p1 );
    sensitive << ( tmp_194_fu_642_p1 );

    SC_METHOD(thread_p_Val2_96_fu_420_p0);
    sensitive << ( weight_V_addr_read_reg_828 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_p_Val2_96_fu_420_p1);
    sensitive << ( input_V_load_reg_833 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_p_Val2_96_fu_420_p2);
    sensitive << ( p_Val2_96_fu_420_p0 );
    sensitive << ( p_Val2_96_fu_420_p1 );

    SC_METHOD(thread_p_Val2_97_fu_446_p2);
    sensitive << ( p_Val2_96_reg_838 );
    sensitive << ( tmp_289_cast_fu_442_p1 );

    SC_METHOD(thread_p_Val2_98_fu_459_p4);
    sensitive << ( p_Val2_97_fu_446_p2 );

    SC_METHOD(thread_p_Val2_99_fu_480_p2);
    sensitive << ( p_Val2_98_fu_459_p4 );
    sensitive << ( tmp_200_fu_469_p1 );

    SC_METHOD(thread_p_Val2_s_95_fu_628_p3);
    sensitive << ( p_Val2_99_reg_860 );
    sensitive << ( underflow_reg_900 );

    SC_METHOD(thread_p_not_i_i_fu_563_p2);
    sensitive << ( deleted_zeros_fu_533_p3 );

    SC_METHOD(thread_p_result_V_fu_709_p3);
    sensitive << ( result_V_reg_922 );
    sensitive << ( underflow_14_fu_683_p2 );

    SC_METHOD(thread_p_s_fu_734_p3);
    sensitive << ( tmp_291_reg_935 );
    sensitive << ( tmp_197_reg_940 );

    SC_METHOD(thread_p_shl1_cast_fu_264_p1);
    sensitive << ( tmp_338_fu_256_p3 );

    SC_METHOD(thread_p_shl_cast_fu_252_p1);
    sensitive << ( tmp_s_fu_244_p3 );

    SC_METHOD(thread_result_1_fu_716_p3);
    sensitive << ( brmerge9_fu_697_p2 );
    sensitive << ( result_V_mux_fu_702_p3 );
    sensitive << ( p_result_V_fu_709_p3 );

    SC_METHOD(thread_result_V_fu_664_p2);
    sensitive << ( bias_V_q0 );
    sensitive << ( p_Val2_s_reg_200 );

    SC_METHOD(thread_result_V_mux_fu_702_p3);
    sensitive << ( result_V_reg_922 );
    sensitive << ( brmerge_i_i_fu_688_p2 );

    SC_METHOD(thread_sext_cast_fu_223_p1);
    sensitive << ( conv_last_weight_V9 );

    SC_METHOD(thread_sum_V_fu_634_p3);
    sensitive << ( underflow_not_fu_617_p2 );
    sensitive << ( p_Val2_104_mux_fu_622_p3 );
    sensitive << ( p_Val2_s_95_fu_628_p3 );

    SC_METHOD(thread_tmp2_demorgan_fu_590_p2);
    sensitive << ( p_38_i_i_fu_558_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_585_p2 );

    SC_METHOD(thread_tmp2_fu_596_p2);
    sensitive << ( tmp2_demorgan_fu_590_p2 );

    SC_METHOD(thread_tmp3_fu_613_p2);
    sensitive << ( tmp_203_reg_890 );
    sensitive << ( brmerge40_demorgan_i_reg_895 );

    SC_METHOD(thread_tmp_193_cast1_fu_363_p1);
    sensitive << ( w_reg_188 );

    SC_METHOD(thread_tmp_193_cast_fu_331_p1);
    sensitive << ( w_reg_188 );

    SC_METHOD(thread_tmp_194_fu_642_p1);
    sensitive << ( p_Val2_s_reg_200 );

    SC_METHOD(thread_tmp_195_fu_646_p1);
    sensitive << ( bias_V_q0 );

    SC_METHOD(thread_tmp_196_fu_678_p2);
    sensitive << ( newsignbit_14_reg_928 );

    SC_METHOD(thread_tmp_197_fu_728_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( result_1_fu_716_p3 );

    SC_METHOD(thread_tmp_199_fu_434_p3);
    sensitive << ( p_Val2_s_reg_200 );

    SC_METHOD(thread_tmp_200_fu_469_p1);
    sensitive << ( tmp_293_reg_843 );

    SC_METHOD(thread_tmp_201_fu_494_p2);
    sensitive << ( newsignbit_fu_486_p3 );

    SC_METHOD(thread_tmp_202_fu_540_p2);
    sensitive << ( tmp_296_fu_516_p3 );

    SC_METHOD(thread_tmp_203_fu_574_p2);
    sensitive << ( signbit_reg_853 );

    SC_METHOD(thread_tmp_286_fu_345_p1);
    sensitive << ( tmp_339_reg_758 );

    SC_METHOD(thread_tmp_287_fu_348_p2);
    sensitive << ( sext_cast_reg_745 );
    sensitive << ( tmp_286_fu_345_p1 );

    SC_METHOD(thread_tmp_288_fu_353_p1);
    sensitive << ( tmp_287_fu_348_p2 );

    SC_METHOD(thread_tmp_289_cast_fu_442_p1);
    sensitive << ( tmp_199_fu_434_p3 );

    SC_METHOD(thread_tmp_291_fu_724_p1);
    sensitive << ( result_1_fu_716_p3 );

    SC_METHOD(thread_tmp_294_fu_472_p3);
    sensitive << ( p_Val2_97_fu_446_p2 );

    SC_METHOD(thread_tmp_296_fu_516_p3);
    sensitive << ( p_Val2_97_reg_848 );

    SC_METHOD(thread_tmp_338_fu_256_p3);
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_tmp_339_fu_268_p2);
    sensitive << ( p_shl_cast_fu_252_p1 );
    sensitive << ( p_shl1_cast_fu_264_p1 );

    SC_METHOD(thread_tmp_340_fu_274_p3);
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_tmp_341_fu_306_p2);
    sensitive << ( tmp_422_cast_reg_763 );
    sensitive << ( tmp_cast_fu_302_p1 );

    SC_METHOD(thread_tmp_342_fu_335_p2);
    sensitive << ( tmp_425_cast_reg_786 );
    sensitive << ( tmp_193_cast_fu_331_p1 );

    SC_METHOD(thread_tmp_343_fu_379_p3);
    sensitive << ( ci_reg_212 );

    SC_METHOD(thread_tmp_344_fu_391_p2);
    sensitive << ( tmp_cast1_reg_781 );
    sensitive << ( tmp_428_cast_fu_387_p1 );

    SC_METHOD(thread_tmp_345_fu_404_p2);
    sensitive << ( tmp_193_cast1_reg_810 );
    sensitive << ( tmp_431_cast_fu_396_p3 );

    SC_METHOD(thread_tmp_422_cast_fu_282_p1);
    sensitive << ( tmp_340_fu_274_p3 );

    SC_METHOD(thread_tmp_425_cast_fu_311_p3);
    sensitive << ( tmp_341_fu_306_p2 );

    SC_METHOD(thread_tmp_426_cast_fu_340_p1);
    sensitive << ( tmp_342_fu_335_p2 );

    SC_METHOD(thread_tmp_428_cast_fu_387_p1);
    sensitive << ( tmp_343_fu_379_p3 );

    SC_METHOD(thread_tmp_431_cast_fu_396_p3);
    sensitive << ( tmp_344_fu_391_p2 );

    SC_METHOD(thread_tmp_432_cast_fu_409_p1);
    sensitive << ( tmp_345_fu_404_p2 );

    SC_METHOD(thread_tmp_cast1_fu_298_p1);
    sensitive << ( h_reg_177 );

    SC_METHOD(thread_tmp_cast_fu_302_p1);
    sensitive << ( h_reg_177 );

    SC_METHOD(thread_tmp_fu_239_p1);
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_tmp_s_fu_244_p3);
    sensitive << ( co_reg_166 );

    SC_METHOD(thread_underflow_14_fu_683_p2);
    sensitive << ( isneg_reg_915 );
    sensitive << ( tmp_196_fu_678_p2 );

    SC_METHOD(thread_underflow_fu_602_p2);
    sensitive << ( signbit_reg_853 );
    sensitive << ( tmp2_fu_596_p2 );

    SC_METHOD(thread_underflow_not_fu_617_p2);
    sensitive << ( p_38_i_i_reg_885 );
    sensitive << ( tmp3_fu_613_p2 );

    SC_METHOD(thread_w_22_fu_325_p2);
    sensitive << ( w_reg_188 );

    SC_METHOD(thread_weight_V_blk_n_AR);
    sensitive << ( m_axi_weight_V_ARREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_weight_V_blk_n_R);
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_227_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond9_fu_286_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond_fu_367_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_weight_V_ARREADY );

    ap_CS_fsm = "00000000000000000001";
    ap_reg_ioackin_m_axi_weight_V_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_last_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_V_address0, "(port)input_V_address0");
    sc_trace(mVcdFile, input_V_ce0, "(port)input_V_ce0");
    sc_trace(mVcdFile, input_V_q0, "(port)input_V_q0");
    sc_trace(mVcdFile, m_axi_weight_V_AWVALID, "(port)m_axi_weight_V_AWVALID");
    sc_trace(mVcdFile, m_axi_weight_V_AWREADY, "(port)m_axi_weight_V_AWREADY");
    sc_trace(mVcdFile, m_axi_weight_V_AWADDR, "(port)m_axi_weight_V_AWADDR");
    sc_trace(mVcdFile, m_axi_weight_V_AWID, "(port)m_axi_weight_V_AWID");
    sc_trace(mVcdFile, m_axi_weight_V_AWLEN, "(port)m_axi_weight_V_AWLEN");
    sc_trace(mVcdFile, m_axi_weight_V_AWSIZE, "(port)m_axi_weight_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_weight_V_AWBURST, "(port)m_axi_weight_V_AWBURST");
    sc_trace(mVcdFile, m_axi_weight_V_AWLOCK, "(port)m_axi_weight_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_weight_V_AWCACHE, "(port)m_axi_weight_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_weight_V_AWPROT, "(port)m_axi_weight_V_AWPROT");
    sc_trace(mVcdFile, m_axi_weight_V_AWQOS, "(port)m_axi_weight_V_AWQOS");
    sc_trace(mVcdFile, m_axi_weight_V_AWREGION, "(port)m_axi_weight_V_AWREGION");
    sc_trace(mVcdFile, m_axi_weight_V_AWUSER, "(port)m_axi_weight_V_AWUSER");
    sc_trace(mVcdFile, m_axi_weight_V_WVALID, "(port)m_axi_weight_V_WVALID");
    sc_trace(mVcdFile, m_axi_weight_V_WREADY, "(port)m_axi_weight_V_WREADY");
    sc_trace(mVcdFile, m_axi_weight_V_WDATA, "(port)m_axi_weight_V_WDATA");
    sc_trace(mVcdFile, m_axi_weight_V_WSTRB, "(port)m_axi_weight_V_WSTRB");
    sc_trace(mVcdFile, m_axi_weight_V_WLAST, "(port)m_axi_weight_V_WLAST");
    sc_trace(mVcdFile, m_axi_weight_V_WID, "(port)m_axi_weight_V_WID");
    sc_trace(mVcdFile, m_axi_weight_V_WUSER, "(port)m_axi_weight_V_WUSER");
    sc_trace(mVcdFile, m_axi_weight_V_ARVALID, "(port)m_axi_weight_V_ARVALID");
    sc_trace(mVcdFile, m_axi_weight_V_ARREADY, "(port)m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, m_axi_weight_V_ARADDR, "(port)m_axi_weight_V_ARADDR");
    sc_trace(mVcdFile, m_axi_weight_V_ARID, "(port)m_axi_weight_V_ARID");
    sc_trace(mVcdFile, m_axi_weight_V_ARLEN, "(port)m_axi_weight_V_ARLEN");
    sc_trace(mVcdFile, m_axi_weight_V_ARSIZE, "(port)m_axi_weight_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_weight_V_ARBURST, "(port)m_axi_weight_V_ARBURST");
    sc_trace(mVcdFile, m_axi_weight_V_ARLOCK, "(port)m_axi_weight_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_weight_V_ARCACHE, "(port)m_axi_weight_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_weight_V_ARPROT, "(port)m_axi_weight_V_ARPROT");
    sc_trace(mVcdFile, m_axi_weight_V_ARQOS, "(port)m_axi_weight_V_ARQOS");
    sc_trace(mVcdFile, m_axi_weight_V_ARREGION, "(port)m_axi_weight_V_ARREGION");
    sc_trace(mVcdFile, m_axi_weight_V_ARUSER, "(port)m_axi_weight_V_ARUSER");
    sc_trace(mVcdFile, m_axi_weight_V_RVALID, "(port)m_axi_weight_V_RVALID");
    sc_trace(mVcdFile, m_axi_weight_V_RREADY, "(port)m_axi_weight_V_RREADY");
    sc_trace(mVcdFile, m_axi_weight_V_RDATA, "(port)m_axi_weight_V_RDATA");
    sc_trace(mVcdFile, m_axi_weight_V_RLAST, "(port)m_axi_weight_V_RLAST");
    sc_trace(mVcdFile, m_axi_weight_V_RID, "(port)m_axi_weight_V_RID");
    sc_trace(mVcdFile, m_axi_weight_V_RUSER, "(port)m_axi_weight_V_RUSER");
    sc_trace(mVcdFile, m_axi_weight_V_RRESP, "(port)m_axi_weight_V_RRESP");
    sc_trace(mVcdFile, m_axi_weight_V_BVALID, "(port)m_axi_weight_V_BVALID");
    sc_trace(mVcdFile, m_axi_weight_V_BREADY, "(port)m_axi_weight_V_BREADY");
    sc_trace(mVcdFile, m_axi_weight_V_BRESP, "(port)m_axi_weight_V_BRESP");
    sc_trace(mVcdFile, m_axi_weight_V_BID, "(port)m_axi_weight_V_BID");
    sc_trace(mVcdFile, m_axi_weight_V_BUSER, "(port)m_axi_weight_V_BUSER");
    sc_trace(mVcdFile, conv_last_weight_V9, "(port)conv_last_weight_V9");
    sc_trace(mVcdFile, bias_V_address0, "(port)bias_V_address0");
    sc_trace(mVcdFile, bias_V_ce0, "(port)bias_V_ce0");
    sc_trace(mVcdFile, bias_V_q0, "(port)bias_V_q0");
    sc_trace(mVcdFile, output_V_address0, "(port)output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "(port)output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "(port)output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "(port)output_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, weight_V_blk_n_AR, "weight_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, weight_V_blk_n_R, "weight_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sext_cast_fu_223_p1, "sext_cast_fu_223_p1");
    sc_trace(mVcdFile, sext_cast_reg_745, "sext_cast_reg_745");
    sc_trace(mVcdFile, co_23_fu_233_p2, "co_23_fu_233_p2");
    sc_trace(mVcdFile, co_23_reg_753, "co_23_reg_753");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_339_fu_268_p2, "tmp_339_fu_268_p2");
    sc_trace(mVcdFile, tmp_339_reg_758, "tmp_339_reg_758");
    sc_trace(mVcdFile, exitcond8_fu_227_p2, "exitcond8_fu_227_p2");
    sc_trace(mVcdFile, tmp_422_cast_fu_282_p1, "tmp_422_cast_fu_282_p1");
    sc_trace(mVcdFile, tmp_422_cast_reg_763, "tmp_422_cast_reg_763");
    sc_trace(mVcdFile, bias_V_addr_reg_768, "bias_V_addr_reg_768");
    sc_trace(mVcdFile, h_22_fu_292_p2, "h_22_fu_292_p2");
    sc_trace(mVcdFile, h_22_reg_776, "h_22_reg_776");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast1_fu_298_p1, "tmp_cast1_fu_298_p1");
    sc_trace(mVcdFile, tmp_cast1_reg_781, "tmp_cast1_reg_781");
    sc_trace(mVcdFile, exitcond9_fu_286_p2, "exitcond9_fu_286_p2");
    sc_trace(mVcdFile, tmp_425_cast_fu_311_p3, "tmp_425_cast_fu_311_p3");
    sc_trace(mVcdFile, tmp_425_cast_reg_786, "tmp_425_cast_reg_786");
    sc_trace(mVcdFile, w_22_fu_325_p2, "w_22_fu_325_p2");
    sc_trace(mVcdFile, w_22_reg_794, "w_22_reg_794");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_V_addr_reg_799, "output_V_addr_reg_799");
    sc_trace(mVcdFile, exitcond1_fu_319_p2, "exitcond1_fu_319_p2");
    sc_trace(mVcdFile, weight_V_addr_reg_804, "weight_V_addr_reg_804");
    sc_trace(mVcdFile, tmp_193_cast1_fu_363_p1, "tmp_193_cast1_fu_363_p1");
    sc_trace(mVcdFile, tmp_193_cast1_reg_810, "tmp_193_cast1_reg_810");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ci_8_fu_373_p2, "ci_8_fu_373_p2");
    sc_trace(mVcdFile, ci_8_reg_818, "ci_8_reg_818");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond_fu_367_p2, "exitcond_fu_367_p2");
    sc_trace(mVcdFile, weight_V_addr_read_reg_828, "weight_V_addr_read_reg_828");
    sc_trace(mVcdFile, input_V_load_reg_833, "input_V_load_reg_833");
    sc_trace(mVcdFile, p_Val2_96_fu_420_p2, "p_Val2_96_fu_420_p2");
    sc_trace(mVcdFile, p_Val2_96_reg_838, "p_Val2_96_reg_838");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_293_reg_843, "tmp_293_reg_843");
    sc_trace(mVcdFile, p_Val2_97_fu_446_p2, "p_Val2_97_fu_446_p2");
    sc_trace(mVcdFile, p_Val2_97_reg_848, "p_Val2_97_reg_848");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, signbit_reg_853, "signbit_reg_853");
    sc_trace(mVcdFile, p_Val2_99_fu_480_p2, "p_Val2_99_fu_480_p2");
    sc_trace(mVcdFile, p_Val2_99_reg_860, "p_Val2_99_reg_860");
    sc_trace(mVcdFile, newsignbit_fu_486_p3, "newsignbit_fu_486_p3");
    sc_trace(mVcdFile, newsignbit_reg_866, "newsignbit_reg_866");
    sc_trace(mVcdFile, carry_fu_500_p2, "carry_fu_500_p2");
    sc_trace(mVcdFile, carry_reg_872, "carry_reg_872");
    sc_trace(mVcdFile, tmp_182_reg_879, "tmp_182_reg_879");
    sc_trace(mVcdFile, p_38_i_i_fu_558_p2, "p_38_i_i_fu_558_p2");
    sc_trace(mVcdFile, p_38_i_i_reg_885, "p_38_i_i_reg_885");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_203_fu_574_p2, "tmp_203_fu_574_p2");
    sc_trace(mVcdFile, tmp_203_reg_890, "tmp_203_reg_890");
    sc_trace(mVcdFile, brmerge40_demorgan_i_fu_585_p2, "brmerge40_demorgan_i_fu_585_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_reg_895, "brmerge40_demorgan_i_reg_895");
    sc_trace(mVcdFile, underflow_fu_602_p2, "underflow_fu_602_p2");
    sc_trace(mVcdFile, underflow_reg_900, "underflow_reg_900");
    sc_trace(mVcdFile, brmerge_i_i_i_fu_607_p2, "brmerge_i_i_i_fu_607_p2");
    sc_trace(mVcdFile, brmerge_i_i_i_reg_905, "brmerge_i_i_i_reg_905");
    sc_trace(mVcdFile, sum_V_fu_634_p3, "sum_V_fu_634_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, isneg_reg_915, "isneg_reg_915");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, result_V_fu_664_p2, "result_V_fu_664_p2");
    sc_trace(mVcdFile, result_V_reg_922, "result_V_reg_922");
    sc_trace(mVcdFile, newsignbit_14_reg_928, "newsignbit_14_reg_928");
    sc_trace(mVcdFile, tmp_291_fu_724_p1, "tmp_291_fu_724_p1");
    sc_trace(mVcdFile, tmp_291_reg_935, "tmp_291_reg_935");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_197_fu_728_p2, "tmp_197_fu_728_p2");
    sc_trace(mVcdFile, tmp_197_reg_940, "tmp_197_reg_940");
    sc_trace(mVcdFile, co_reg_166, "co_reg_166");
    sc_trace(mVcdFile, h_reg_177, "h_reg_177");
    sc_trace(mVcdFile, w_reg_188, "w_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, p_Val2_s_reg_200, "p_Val2_s_reg_200");
    sc_trace(mVcdFile, ci_reg_212, "ci_reg_212");
    sc_trace(mVcdFile, tmp_fu_239_p1, "tmp_fu_239_p1");
    sc_trace(mVcdFile, tmp_426_cast_fu_340_p1, "tmp_426_cast_fu_340_p1");
    sc_trace(mVcdFile, tmp_432_cast_fu_409_p1, "tmp_432_cast_fu_409_p1");
    sc_trace(mVcdFile, tmp_288_fu_353_p1, "tmp_288_fu_353_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_weight_V_ARREADY, "ap_reg_ioackin_m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_weight_V_ARREADY, "ap_sig_ioackin_m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, tmp_s_fu_244_p3, "tmp_s_fu_244_p3");
    sc_trace(mVcdFile, tmp_338_fu_256_p3, "tmp_338_fu_256_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_252_p1, "p_shl_cast_fu_252_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_264_p1, "p_shl1_cast_fu_264_p1");
    sc_trace(mVcdFile, tmp_340_fu_274_p3, "tmp_340_fu_274_p3");
    sc_trace(mVcdFile, tmp_cast_fu_302_p1, "tmp_cast_fu_302_p1");
    sc_trace(mVcdFile, tmp_341_fu_306_p2, "tmp_341_fu_306_p2");
    sc_trace(mVcdFile, tmp_193_cast_fu_331_p1, "tmp_193_cast_fu_331_p1");
    sc_trace(mVcdFile, tmp_342_fu_335_p2, "tmp_342_fu_335_p2");
    sc_trace(mVcdFile, tmp_286_fu_345_p1, "tmp_286_fu_345_p1");
    sc_trace(mVcdFile, tmp_287_fu_348_p2, "tmp_287_fu_348_p2");
    sc_trace(mVcdFile, tmp_343_fu_379_p3, "tmp_343_fu_379_p3");
    sc_trace(mVcdFile, tmp_428_cast_fu_387_p1, "tmp_428_cast_fu_387_p1");
    sc_trace(mVcdFile, tmp_344_fu_391_p2, "tmp_344_fu_391_p2");
    sc_trace(mVcdFile, tmp_431_cast_fu_396_p3, "tmp_431_cast_fu_396_p3");
    sc_trace(mVcdFile, tmp_345_fu_404_p2, "tmp_345_fu_404_p2");
    sc_trace(mVcdFile, p_Val2_96_fu_420_p0, "p_Val2_96_fu_420_p0");
    sc_trace(mVcdFile, p_Val2_96_fu_420_p1, "p_Val2_96_fu_420_p1");
    sc_trace(mVcdFile, tmp_199_fu_434_p3, "tmp_199_fu_434_p3");
    sc_trace(mVcdFile, tmp_289_cast_fu_442_p1, "tmp_289_cast_fu_442_p1");
    sc_trace(mVcdFile, p_Val2_98_fu_459_p4, "p_Val2_98_fu_459_p4");
    sc_trace(mVcdFile, tmp_200_fu_469_p1, "tmp_200_fu_469_p1");
    sc_trace(mVcdFile, tmp_294_fu_472_p3, "tmp_294_fu_472_p3");
    sc_trace(mVcdFile, tmp_201_fu_494_p2, "tmp_201_fu_494_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_523_p2, "Range1_all_ones_fu_523_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_528_p2, "Range1_all_zeros_fu_528_p2");
    sc_trace(mVcdFile, tmp_296_fu_516_p3, "tmp_296_fu_516_p3");
    sc_trace(mVcdFile, tmp_202_fu_540_p2, "tmp_202_fu_540_p2");
    sc_trace(mVcdFile, p_41_i_i_fu_546_p2, "p_41_i_i_fu_546_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_533_p3, "deleted_zeros_fu_533_p3");
    sc_trace(mVcdFile, p_not_i_i_fu_563_p2, "p_not_i_i_fu_563_p2");
    sc_trace(mVcdFile, brmerge_i_i5_fu_569_p2, "brmerge_i_i5_fu_569_p2");
    sc_trace(mVcdFile, deleted_ones_fu_551_p3, "deleted_ones_fu_551_p3");
    sc_trace(mVcdFile, tmp2_demorgan_fu_590_p2, "tmp2_demorgan_fu_590_p2");
    sc_trace(mVcdFile, tmp2_fu_596_p2, "tmp2_fu_596_p2");
    sc_trace(mVcdFile, overflow_fu_579_p2, "overflow_fu_579_p2");
    sc_trace(mVcdFile, tmp3_fu_613_p2, "tmp3_fu_613_p2");
    sc_trace(mVcdFile, underflow_not_fu_617_p2, "underflow_not_fu_617_p2");
    sc_trace(mVcdFile, p_Val2_104_mux_fu_622_p3, "p_Val2_104_mux_fu_622_p3");
    sc_trace(mVcdFile, p_Val2_s_95_fu_628_p3, "p_Val2_s_95_fu_628_p3");
    sc_trace(mVcdFile, tmp_195_fu_646_p1, "tmp_195_fu_646_p1");
    sc_trace(mVcdFile, tmp_194_fu_642_p1, "tmp_194_fu_642_p1");
    sc_trace(mVcdFile, p_Val2_94_fu_650_p2, "p_Val2_94_fu_650_p2");
    sc_trace(mVcdFile, tmp_196_fu_678_p2, "tmp_196_fu_678_p2");
    sc_trace(mVcdFile, isneg_not_fu_692_p2, "isneg_not_fu_692_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_688_p2, "brmerge_i_i_fu_688_p2");
    sc_trace(mVcdFile, underflow_14_fu_683_p2, "underflow_14_fu_683_p2");
    sc_trace(mVcdFile, brmerge9_fu_697_p2, "brmerge9_fu_697_p2");
    sc_trace(mVcdFile, result_V_mux_fu_702_p3, "result_V_mux_fu_702_p3");
    sc_trace(mVcdFile, p_result_V_fu_709_p3, "p_result_V_fu_709_p3");
    sc_trace(mVcdFile, result_1_fu_716_p3, "result_1_fu_716_p3");
    sc_trace(mVcdFile, p_s_fu_734_p3, "p_s_fu_734_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv_last::~conv_last() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void conv_last::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_weight_V_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_weight_V_ARREADY.read())) {
                ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ci_reg_212 = ci_8_reg_818.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ci_reg_212 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond9_fu_286_p2.read(), ap_const_lv1_1))) {
        co_reg_166 = co_23_reg_753.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_166 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_319_p2.read(), ap_const_lv1_1))) {
        h_reg_177 = h_22_reg_776.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_227_p2.read()))) {
        h_reg_177 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        p_Val2_s_reg_200 = sum_V_fu_634_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_Val2_s_reg_200 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_286_p2.read()))) {
        w_reg_188 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        w_reg_188 = w_22_reg_794.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_227_p2.read()))) {
        bias_V_addr_reg_768 =  (sc_lv<9>) (tmp_fu_239_p1.read());
        tmp_339_reg_758 = tmp_339_fu_268_p2.read();
        tmp_422_cast_reg_763 = tmp_422_cast_fu_282_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        brmerge40_demorgan_i_reg_895 = brmerge40_demorgan_i_fu_585_p2.read();
        brmerge_i_i_i_reg_905 = brmerge_i_i_i_fu_607_p2.read();
        p_38_i_i_reg_885 = p_38_i_i_fu_558_p2.read();
        tmp_203_reg_890 = tmp_203_fu_574_p2.read();
        underflow_reg_900 = underflow_fu_602_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        carry_reg_872 = carry_fu_500_p2.read();
        newsignbit_reg_866 = p_Val2_99_fu_480_p2.read().range(7, 7);
        p_Val2_97_reg_848 = p_Val2_97_fu_446_p2.read();
        p_Val2_99_reg_860 = p_Val2_99_fu_480_p2.read();
        signbit_reg_853 = p_Val2_97_fu_446_p2.read().range(15, 15);
        tmp_182_reg_879 = p_Val2_97_fu_446_p2.read().range(15, 14);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ci_8_reg_818 = ci_8_fu_373_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_23_reg_753 = co_23_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_22_reg_776 = h_22_fu_292_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
        input_V_load_reg_833 = input_V_q0.read();
        weight_V_addr_read_reg_828 = m_axi_weight_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        isneg_reg_915 = p_Val2_94_fu_650_p2.read().range(8, 8);
        newsignbit_14_reg_928 = result_V_fu_664_p2.read().range(7, 7);
        result_V_reg_922 = result_V_fu_664_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_319_p2.read()))) {
        output_V_addr_reg_799 =  (sc_lv<13>) (tmp_426_cast_fu_340_p1.read());
        weight_V_addr_reg_804 =  (sc_lv<32>) (tmp_288_fu_353_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_Val2_96_reg_838 = p_Val2_96_fu_420_p2.read();
        tmp_293_reg_843 = p_Val2_96_fu_420_p2.read().range(5, 5);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sext_cast_reg_745 = sext_cast_fu_223_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_193_cast1_reg_810 = tmp_193_cast1_fu_363_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_197_reg_940 = tmp_197_fu_728_p2.read();
        tmp_291_reg_935 = tmp_291_fu_724_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_286_p2.read()))) {
        tmp_425_cast_reg_786 = tmp_425_cast_fu_311_p3.read();
        tmp_cast1_reg_781 = tmp_cast1_fu_298_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_22_reg_794 = w_22_fu_325_p2.read();
    }
}

void conv_last::thread_Range1_all_ones_fu_523_p2() {
    Range1_all_ones_fu_523_p2 = (!tmp_182_reg_879.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_182_reg_879.read() == ap_const_lv2_3);
}

void conv_last::thread_Range1_all_zeros_fu_528_p2() {
    Range1_all_zeros_fu_528_p2 = (!tmp_182_reg_879.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_182_reg_879.read() == ap_const_lv2_0);
}

void conv_last::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_last::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv_last::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void conv_last::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void conv_last::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void conv_last::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv_last::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv_last::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv_last::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void conv_last::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void conv_last::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv_last::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void conv_last::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv_last::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv_last::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv_last::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond8_fu_227_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_last::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_last::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_227_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_last::thread_ap_sig_ioackin_m_axi_weight_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weight_V_ARREADY.read())) {
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_1;
    }
}

void conv_last::thread_bias_V_address0() {
    bias_V_address0 = bias_V_addr_reg_768.read();
}

void conv_last::thread_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        bias_V_ce0 = ap_const_logic_1;
    } else {
        bias_V_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_brmerge40_demorgan_i_fu_585_p2() {
    brmerge40_demorgan_i_fu_585_p2 = (newsignbit_reg_866.read() & deleted_ones_fu_551_p3.read());
}

void conv_last::thread_brmerge9_fu_697_p2() {
    brmerge9_fu_697_p2 = (newsignbit_14_reg_928.read() | isneg_not_fu_692_p2.read());
}

void conv_last::thread_brmerge_i_i5_fu_569_p2() {
    brmerge_i_i5_fu_569_p2 = (newsignbit_reg_866.read() | p_not_i_i_fu_563_p2.read());
}

void conv_last::thread_brmerge_i_i_fu_688_p2() {
    brmerge_i_i_fu_688_p2 = (isneg_reg_915.read() ^ newsignbit_14_reg_928.read());
}

void conv_last::thread_brmerge_i_i_i_fu_607_p2() {
    brmerge_i_i_i_fu_607_p2 = (underflow_fu_602_p2.read() | overflow_fu_579_p2.read());
}

void conv_last::thread_carry_fu_500_p2() {
    carry_fu_500_p2 = (tmp_294_fu_472_p3.read() & tmp_201_fu_494_p2.read());
}

void conv_last::thread_ci_8_fu_373_p2() {
    ci_8_fu_373_p2 = (!ci_reg_212.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ci_reg_212.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void conv_last::thread_co_23_fu_233_p2() {
    co_23_fu_233_p2 = (!co_reg_166.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(co_reg_166.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void conv_last::thread_deleted_ones_fu_551_p3() {
    deleted_ones_fu_551_p3 = (!carry_reg_872.read()[0].is_01())? sc_lv<1>(): ((carry_reg_872.read()[0].to_bool())? p_41_i_i_fu_546_p2.read(): Range1_all_ones_fu_523_p2.read());
}

void conv_last::thread_deleted_zeros_fu_533_p3() {
    deleted_zeros_fu_533_p3 = (!carry_reg_872.read()[0].is_01())? sc_lv<1>(): ((carry_reg_872.read()[0].to_bool())? Range1_all_ones_fu_523_p2.read(): Range1_all_zeros_fu_528_p2.read());
}

void conv_last::thread_exitcond1_fu_319_p2() {
    exitcond1_fu_319_p2 = (!w_reg_188.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_188.read() == ap_const_lv3_4);
}

void conv_last::thread_exitcond8_fu_227_p2() {
    exitcond8_fu_227_p2 = (!co_reg_166.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_166.read() == ap_const_lv10_200);
}

void conv_last::thread_exitcond9_fu_286_p2() {
    exitcond9_fu_286_p2 = (!h_reg_177.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_177.read() == ap_const_lv3_4);
}

void conv_last::thread_exitcond_fu_367_p2() {
    exitcond_fu_367_p2 = (!ci_reg_212.read().is_01() || !ap_const_lv8_C0.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_212.read() == ap_const_lv8_C0);
}

void conv_last::thread_h_22_fu_292_p2() {
    h_22_fu_292_p2 = (!h_reg_177.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(h_reg_177.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_last::thread_input_V_address0() {
    input_V_address0 =  (sc_lv<12>) (tmp_432_cast_fu_409_p1.read());
}

void conv_last::thread_input_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        input_V_ce0 = ap_const_logic_1;
    } else {
        input_V_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_isneg_not_fu_692_p2() {
    isneg_not_fu_692_p2 = (isneg_reg_915.read() ^ ap_const_lv1_1);
}

void conv_last::thread_m_axi_weight_V_ARADDR() {
    m_axi_weight_V_ARADDR = weight_V_addr_reg_804.read();
}

void conv_last::thread_m_axi_weight_V_ARBURST() {
    m_axi_weight_V_ARBURST = ap_const_lv2_0;
}

void conv_last::thread_m_axi_weight_V_ARCACHE() {
    m_axi_weight_V_ARCACHE = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_ARID() {
    m_axi_weight_V_ARID = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_ARLEN() {
    m_axi_weight_V_ARLEN = ap_const_lv32_C0;
}

void conv_last::thread_m_axi_weight_V_ARLOCK() {
    m_axi_weight_V_ARLOCK = ap_const_lv2_0;
}

void conv_last::thread_m_axi_weight_V_ARPROT() {
    m_axi_weight_V_ARPROT = ap_const_lv3_0;
}

void conv_last::thread_m_axi_weight_V_ARQOS() {
    m_axi_weight_V_ARQOS = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_ARREGION() {
    m_axi_weight_V_ARREGION = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_ARSIZE() {
    m_axi_weight_V_ARSIZE = ap_const_lv3_0;
}

void conv_last::thread_m_axi_weight_V_ARUSER() {
    m_axi_weight_V_ARUSER = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weight_V_ARREADY.read()))) {
        m_axi_weight_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_weight_V_ARVALID = ap_const_logic_0;
    }
}

void conv_last::thread_m_axi_weight_V_AWADDR() {
    m_axi_weight_V_AWADDR = ap_const_lv32_0;
}

void conv_last::thread_m_axi_weight_V_AWBURST() {
    m_axi_weight_V_AWBURST = ap_const_lv2_0;
}

void conv_last::thread_m_axi_weight_V_AWCACHE() {
    m_axi_weight_V_AWCACHE = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_AWID() {
    m_axi_weight_V_AWID = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_AWLEN() {
    m_axi_weight_V_AWLEN = ap_const_lv32_0;
}

void conv_last::thread_m_axi_weight_V_AWLOCK() {
    m_axi_weight_V_AWLOCK = ap_const_lv2_0;
}

void conv_last::thread_m_axi_weight_V_AWPROT() {
    m_axi_weight_V_AWPROT = ap_const_lv3_0;
}

void conv_last::thread_m_axi_weight_V_AWQOS() {
    m_axi_weight_V_AWQOS = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_AWREGION() {
    m_axi_weight_V_AWREGION = ap_const_lv4_0;
}

void conv_last::thread_m_axi_weight_V_AWSIZE() {
    m_axi_weight_V_AWSIZE = ap_const_lv3_0;
}

void conv_last::thread_m_axi_weight_V_AWUSER() {
    m_axi_weight_V_AWUSER = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_AWVALID() {
    m_axi_weight_V_AWVALID = ap_const_logic_0;
}

void conv_last::thread_m_axi_weight_V_BREADY() {
    m_axi_weight_V_BREADY = ap_const_logic_0;
}

void conv_last::thread_m_axi_weight_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
        m_axi_weight_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_weight_V_RREADY = ap_const_logic_0;
    }
}

void conv_last::thread_m_axi_weight_V_WDATA() {
    m_axi_weight_V_WDATA = ap_const_lv8_0;
}

void conv_last::thread_m_axi_weight_V_WID() {
    m_axi_weight_V_WID = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_WLAST() {
    m_axi_weight_V_WLAST = ap_const_logic_0;
}

void conv_last::thread_m_axi_weight_V_WSTRB() {
    m_axi_weight_V_WSTRB = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_WUSER() {
    m_axi_weight_V_WUSER = ap_const_lv1_0;
}

void conv_last::thread_m_axi_weight_V_WVALID() {
    m_axi_weight_V_WVALID = ap_const_logic_0;
}

void conv_last::thread_newsignbit_fu_486_p3() {
    newsignbit_fu_486_p3 = p_Val2_99_fu_480_p2.read().range(7, 7);
}

void conv_last::thread_output_V_address0() {
    output_V_address0 = output_V_addr_reg_799.read();
}

void conv_last::thread_output_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void conv_last::thread_output_V_d0() {
    output_V_d0 = esl_zext<8,7>(p_s_fu_734_p3.read());
}

void conv_last::thread_output_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void conv_last::thread_overflow_fu_579_p2() {
    overflow_fu_579_p2 = (brmerge_i_i5_fu_569_p2.read() & tmp_203_fu_574_p2.read());
}

void conv_last::thread_p_38_i_i_fu_558_p2() {
    p_38_i_i_fu_558_p2 = (carry_reg_872.read() & Range1_all_ones_fu_523_p2.read());
}

void conv_last::thread_p_41_i_i_fu_546_p2() {
    p_41_i_i_fu_546_p2 = (signbit_reg_853.read() & tmp_202_fu_540_p2.read());
}

void conv_last::thread_p_Val2_104_mux_fu_622_p3() {
    p_Val2_104_mux_fu_622_p3 = (!brmerge_i_i_i_reg_905.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_i_reg_905.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_99_reg_860.read());
}

void conv_last::thread_p_Val2_94_fu_650_p2() {
    p_Val2_94_fu_650_p2 = (!tmp_195_fu_646_p1.read().is_01() || !tmp_194_fu_642_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_195_fu_646_p1.read()) + sc_bigint<9>(tmp_194_fu_642_p1.read()));
}

void conv_last::thread_p_Val2_96_fu_420_p0() {
    p_Val2_96_fu_420_p0 = weight_V_addr_read_reg_828.read();
}

void conv_last::thread_p_Val2_96_fu_420_p1() {
    p_Val2_96_fu_420_p1 = input_V_load_reg_833.read();
}

void conv_last::thread_p_Val2_96_fu_420_p2() {
    p_Val2_96_fu_420_p2 = (!p_Val2_96_fu_420_p0.read().is_01() || !p_Val2_96_fu_420_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(p_Val2_96_fu_420_p0.read()) * sc_bigint<8>(p_Val2_96_fu_420_p1.read());
}

void conv_last::thread_p_Val2_97_fu_446_p2() {
    p_Val2_97_fu_446_p2 = (!tmp_289_cast_fu_442_p1.read().is_01() || !p_Val2_96_reg_838.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp_289_cast_fu_442_p1.read()) + sc_biguint<16>(p_Val2_96_reg_838.read()));
}

void conv_last::thread_p_Val2_98_fu_459_p4() {
    p_Val2_98_fu_459_p4 = p_Val2_97_fu_446_p2.read().range(13, 6);
}

void conv_last::thread_p_Val2_99_fu_480_p2() {
    p_Val2_99_fu_480_p2 = (!p_Val2_98_fu_459_p4.read().is_01() || !tmp_200_fu_469_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Val2_98_fu_459_p4.read()) + sc_biguint<8>(tmp_200_fu_469_p1.read()));
}

void conv_last::thread_p_Val2_s_95_fu_628_p3() {
    p_Val2_s_95_fu_628_p3 = (!underflow_reg_900.read()[0].is_01())? sc_lv<8>(): ((underflow_reg_900.read()[0].to_bool())? ap_const_lv8_80: p_Val2_99_reg_860.read());
}

void conv_last::thread_p_not_i_i_fu_563_p2() {
    p_not_i_i_fu_563_p2 = (deleted_zeros_fu_533_p3.read() ^ ap_const_lv1_1);
}

void conv_last::thread_p_result_V_fu_709_p3() {
    p_result_V_fu_709_p3 = (!underflow_14_fu_683_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_14_fu_683_p2.read()[0].to_bool())? ap_const_lv8_80: result_V_reg_922.read());
}

void conv_last::thread_p_s_fu_734_p3() {
    p_s_fu_734_p3 = (!tmp_197_reg_940.read()[0].is_01())? sc_lv<7>(): ((tmp_197_reg_940.read()[0].to_bool())? tmp_291_reg_935.read(): ap_const_lv7_0);
}

void conv_last::thread_p_shl1_cast_fu_264_p1() {
    p_shl1_cast_fu_264_p1 = esl_zext<19,16>(tmp_338_fu_256_p3.read());
}

void conv_last::thread_p_shl_cast_fu_252_p1() {
    p_shl_cast_fu_252_p1 = esl_zext<19,18>(tmp_s_fu_244_p3.read());
}

void conv_last::thread_result_1_fu_716_p3() {
    result_1_fu_716_p3 = (!brmerge9_fu_697_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge9_fu_697_p2.read()[0].to_bool())? result_V_mux_fu_702_p3.read(): p_result_V_fu_709_p3.read());
}

void conv_last::thread_result_V_fu_664_p2() {
    result_V_fu_664_p2 = (!bias_V_q0.read().is_01() || !p_Val2_s_reg_200.read().is_01())? sc_lv<8>(): (sc_biguint<8>(bias_V_q0.read()) + sc_biguint<8>(p_Val2_s_reg_200.read()));
}

void conv_last::thread_result_V_mux_fu_702_p3() {
    result_V_mux_fu_702_p3 = (!brmerge_i_i_fu_688_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_fu_688_p2.read()[0].to_bool())? ap_const_lv8_7F: result_V_reg_922.read());
}

void conv_last::thread_sext_cast_fu_223_p1() {
    sext_cast_fu_223_p1 = esl_sext<33,32>(conv_last_weight_V9.read());
}

void conv_last::thread_sum_V_fu_634_p3() {
    sum_V_fu_634_p3 = (!underflow_not_fu_617_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_not_fu_617_p2.read()[0].to_bool())? p_Val2_104_mux_fu_622_p3.read(): p_Val2_s_95_fu_628_p3.read());
}

void conv_last::thread_tmp2_demorgan_fu_590_p2() {
    tmp2_demorgan_fu_590_p2 = (p_38_i_i_fu_558_p2.read() | brmerge40_demorgan_i_fu_585_p2.read());
}

void conv_last::thread_tmp2_fu_596_p2() {
    tmp2_fu_596_p2 = (tmp2_demorgan_fu_590_p2.read() ^ ap_const_lv1_1);
}

void conv_last::thread_tmp3_fu_613_p2() {
    tmp3_fu_613_p2 = (brmerge40_demorgan_i_reg_895.read() | tmp_203_reg_890.read());
}

void conv_last::thread_tmp_193_cast1_fu_363_p1() {
    tmp_193_cast1_fu_363_p1 = esl_zext<13,3>(w_reg_188.read());
}

void conv_last::thread_tmp_193_cast_fu_331_p1() {
    tmp_193_cast_fu_331_p1 = esl_zext<15,3>(w_reg_188.read());
}

void conv_last::thread_tmp_194_fu_642_p1() {
    tmp_194_fu_642_p1 = esl_sext<9,8>(p_Val2_s_reg_200.read());
}

void conv_last::thread_tmp_195_fu_646_p1() {
    tmp_195_fu_646_p1 = esl_sext<9,8>(bias_V_q0.read());
}

void conv_last::thread_tmp_196_fu_678_p2() {
    tmp_196_fu_678_p2 = (newsignbit_14_reg_928.read() ^ ap_const_lv1_1);
}

void conv_last::thread_tmp_197_fu_728_p2() {
    tmp_197_fu_728_p2 = (!result_1_fu_716_p3.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): (sc_bigint<8>(result_1_fu_716_p3.read()) > sc_bigint<8>(ap_const_lv8_0));
}

void conv_last::thread_tmp_199_fu_434_p3() {
    tmp_199_fu_434_p3 = esl_concat<8,6>(p_Val2_s_reg_200.read(), ap_const_lv6_0);
}

void conv_last::thread_tmp_200_fu_469_p1() {
    tmp_200_fu_469_p1 = esl_zext<8,1>(tmp_293_reg_843.read());
}

void conv_last::thread_tmp_201_fu_494_p2() {
    tmp_201_fu_494_p2 = (newsignbit_fu_486_p3.read() ^ ap_const_lv1_1);
}

void conv_last::thread_tmp_202_fu_540_p2() {
    tmp_202_fu_540_p2 = (tmp_296_fu_516_p3.read() ^ ap_const_lv1_1);
}

void conv_last::thread_tmp_203_fu_574_p2() {
    tmp_203_fu_574_p2 = (signbit_reg_853.read() ^ ap_const_lv1_1);
}

void conv_last::thread_tmp_286_fu_345_p1() {
    tmp_286_fu_345_p1 = esl_sext<33,19>(tmp_339_reg_758.read());
}

void conv_last::thread_tmp_287_fu_348_p2() {
    tmp_287_fu_348_p2 = (!tmp_286_fu_345_p1.read().is_01() || !sext_cast_reg_745.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_286_fu_345_p1.read()) + sc_bigint<33>(sext_cast_reg_745.read()));
}

void conv_last::thread_tmp_288_fu_353_p1() {
    tmp_288_fu_353_p1 = esl_sext<64,33>(tmp_287_fu_348_p2.read());
}

void conv_last::thread_tmp_289_cast_fu_442_p1() {
    tmp_289_cast_fu_442_p1 = esl_sext<16,14>(tmp_199_fu_434_p3.read());
}

void conv_last::thread_tmp_291_fu_724_p1() {
    tmp_291_fu_724_p1 = result_1_fu_716_p3.read().range(7-1, 0);
}

void conv_last::thread_tmp_294_fu_472_p3() {
    tmp_294_fu_472_p3 = p_Val2_97_fu_446_p2.read().range(13, 13);
}

void conv_last::thread_tmp_296_fu_516_p3() {
    tmp_296_fu_516_p3 = p_Val2_97_reg_848.read().range(14, 14);
}

void conv_last::thread_tmp_338_fu_256_p3() {
    tmp_338_fu_256_p3 = esl_concat<10,6>(co_reg_166.read(), ap_const_lv6_0);
}

void conv_last::thread_tmp_339_fu_268_p2() {
    tmp_339_fu_268_p2 = (!p_shl_cast_fu_252_p1.read().is_01() || !p_shl1_cast_fu_264_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(p_shl_cast_fu_252_p1.read()) - sc_biguint<19>(p_shl1_cast_fu_264_p1.read()));
}

void conv_last::thread_tmp_340_fu_274_p3() {
    tmp_340_fu_274_p3 = esl_concat<10,2>(co_reg_166.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_341_fu_306_p2() {
    tmp_341_fu_306_p2 = (!tmp_cast_fu_302_p1.read().is_01() || !tmp_422_cast_reg_763.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_cast_fu_302_p1.read()) + sc_biguint<13>(tmp_422_cast_reg_763.read()));
}

void conv_last::thread_tmp_342_fu_335_p2() {
    tmp_342_fu_335_p2 = (!tmp_425_cast_reg_786.read().is_01() || !tmp_193_cast_fu_331_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_425_cast_reg_786.read()) + sc_biguint<15>(tmp_193_cast_fu_331_p1.read()));
}

void conv_last::thread_tmp_343_fu_379_p3() {
    tmp_343_fu_379_p3 = esl_concat<8,2>(ci_reg_212.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_344_fu_391_p2() {
    tmp_344_fu_391_p2 = (!tmp_cast1_reg_781.read().is_01() || !tmp_428_cast_fu_387_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast1_reg_781.read()) + sc_biguint<11>(tmp_428_cast_fu_387_p1.read()));
}

void conv_last::thread_tmp_345_fu_404_p2() {
    tmp_345_fu_404_p2 = (!tmp_193_cast1_reg_810.read().is_01() || !tmp_431_cast_fu_396_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_193_cast1_reg_810.read()) + sc_biguint<13>(tmp_431_cast_fu_396_p3.read()));
}

void conv_last::thread_tmp_422_cast_fu_282_p1() {
    tmp_422_cast_fu_282_p1 = esl_zext<13,12>(tmp_340_fu_274_p3.read());
}

void conv_last::thread_tmp_425_cast_fu_311_p3() {
    tmp_425_cast_fu_311_p3 = esl_concat<13,2>(tmp_341_fu_306_p2.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_426_cast_fu_340_p1() {
    tmp_426_cast_fu_340_p1 = esl_zext<64,15>(tmp_342_fu_335_p2.read());
}

void conv_last::thread_tmp_428_cast_fu_387_p1() {
    tmp_428_cast_fu_387_p1 = esl_zext<11,10>(tmp_343_fu_379_p3.read());
}

void conv_last::thread_tmp_431_cast_fu_396_p3() {
    tmp_431_cast_fu_396_p3 = esl_concat<11,2>(tmp_344_fu_391_p2.read(), ap_const_lv2_0);
}

void conv_last::thread_tmp_432_cast_fu_409_p1() {
    tmp_432_cast_fu_409_p1 = esl_zext<64,13>(tmp_345_fu_404_p2.read());
}

void conv_last::thread_tmp_cast1_fu_298_p1() {
    tmp_cast1_fu_298_p1 = esl_zext<11,3>(h_reg_177.read());
}

void conv_last::thread_tmp_cast_fu_302_p1() {
    tmp_cast_fu_302_p1 = esl_zext<13,3>(h_reg_177.read());
}

void conv_last::thread_tmp_fu_239_p1() {
    tmp_fu_239_p1 = esl_zext<64,10>(co_reg_166.read());
}

void conv_last::thread_tmp_s_fu_244_p3() {
    tmp_s_fu_244_p3 = esl_concat<10,8>(co_reg_166.read(), ap_const_lv8_0);
}

void conv_last::thread_underflow_14_fu_683_p2() {
    underflow_14_fu_683_p2 = (isneg_reg_915.read() & tmp_196_fu_678_p2.read());
}

void conv_last::thread_underflow_fu_602_p2() {
    underflow_fu_602_p2 = (signbit_reg_853.read() & tmp2_fu_596_p2.read());
}

void conv_last::thread_underflow_not_fu_617_p2() {
    underflow_not_fu_617_p2 = (tmp3_fu_613_p2.read() | p_38_i_i_reg_885.read());
}

void conv_last::thread_w_22_fu_325_p2() {
    w_22_fu_325_p2 = (!w_reg_188.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(w_reg_188.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_last::thread_weight_V_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY.read();
    } else {
        weight_V_blk_n_AR = ap_const_logic_1;
    }
}

void conv_last::thread_weight_V_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        weight_V_blk_n_R = m_axi_weight_V_RVALID.read();
    } else {
        weight_V_blk_n_R = ap_const_logic_1;
    }
}

void conv_last::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond8_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond9_fu_286_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_319_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_weight_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond_fu_367_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

