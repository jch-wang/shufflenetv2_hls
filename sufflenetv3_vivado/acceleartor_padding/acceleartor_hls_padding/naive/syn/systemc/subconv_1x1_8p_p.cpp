// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_1x1_8p_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_1x1_8p_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_1x1_8p_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state1 = "1";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state2 = "10";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state3 = "100";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state4 = "1000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state5 = "10000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state6 = "100000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> subconv_1x1_8p_p::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_1x1_8p_p::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_3 = "11";
const sc_lv<1> subconv_1x1_8p_p::ap_const_lv1_1 = "1";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_4 = "100";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_6 = "110";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_A = "1010";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_F = "1111";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_15 = "10101";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_16 = "10110";
const sc_lv<7> subconv_1x1_8p_p::ap_const_lv7_0 = "0000000";
const sc_lv<4> subconv_1x1_8p_p::ap_const_lv4_1 = "1";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_17 = "10111";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_B = "1011";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_11 = "10001";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_7 = "111";
const sc_lv<7> subconv_1x1_8p_p::ap_const_lv7_60 = "1100000";
const sc_lv<7> subconv_1x1_8p_p::ap_const_lv7_1 = "1";
const sc_lv<5> subconv_1x1_8p_p::ap_const_lv5_0 = "00000";
const sc_lv<3> subconv_1x1_8p_p::ap_const_lv3_0 = "000";
const sc_lv<4> subconv_1x1_8p_p::ap_const_lv4_9 = "1001";
const sc_lv<32> subconv_1x1_8p_p::ap_const_lv32_1E = "11110";
const sc_lv<8> subconv_1x1_8p_p::ap_const_lv8_FF = "11111111";
const sc_lv<23> subconv_1x1_8p_p::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> subconv_1x1_8p_p::ap_const_lv5_2 = "10";
const bool subconv_1x1_8p_p::ap_const_boolean_1 = true;

subconv_1x1_8p_p::subconv_1x1_8p_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U74 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U74");
    ShuffleNetV2_faddbkb_x_U74->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U74->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U74->din0(sum_reg_137);
    ShuffleNetV2_faddbkb_x_U74->din1(grp_fu_160_p1);
    ShuffleNetV2_faddbkb_x_U74->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U74->dout(grp_fu_160_p2);
    ShuffleNetV2_fmulcud_x_U75 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U75");
    ShuffleNetV2_fmulcud_x_U75->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U75->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U75->din0(weight_load_reg_562);
    ShuffleNetV2_fmulcud_x_U75->din1(shuffleunit1_7_outpu_1_reg_567);
    ShuffleNetV2_fmulcud_x_U75->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U75->dout(grp_fu_165_p2);
    ShuffleNetV2_fcmpdEe_x_U76 = new ShuffleNetV2_fcmpdEe<1,1,32,32,1>("ShuffleNetV2_fcmpdEe_x_U76");
    ShuffleNetV2_fcmpdEe_x_U76->din0(result_reg_587);
    ShuffleNetV2_fcmpdEe_x_U76->din1(ap_var_for_const1);
    ShuffleNetV2_fcmpdEe_x_U76->opcode(ap_var_for_const2);
    ShuffleNetV2_fcmpdEe_x_U76->dout(tmp_4_fu_169_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ShuffleConvs_2_Downs_address0);
    sensitive << ( ShuffleConvs_2_Downs_reg_519 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_ce0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_d0);
    sensitive << ( result_reg_587 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_5_fu_462_p2 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_174_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_174_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_493 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ci_1_fu_328_p2);
    sensitive << ( ci_reg_149 );

    SC_METHOD(thread_co_7_fu_180_p2);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_exitcond1_fu_296_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_125 );

    SC_METHOD(thread_exitcond2_fu_251_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_113 );

    SC_METHOD(thread_exitcond3_fu_174_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_exitcond_fu_322_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_149 );

    SC_METHOD(thread_grp_fu_160_p1);
    sensitive << ( tmp_57_reg_572 );
    sensitive << ( bias_load_reg_582 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_7_fu_316_p2);
    sensitive << ( h_reg_113 );

    SC_METHOD(thread_notlhs_fu_444_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_1_fu_430_p4 );

    SC_METHOD(thread_notrhs_fu_450_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_54_fu_440_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_241_p1);
    sensitive << ( tmp_100_fu_233_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_199_p1);
    sensitive << ( tmp_s_fu_191_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_211_p1);
    sensitive << ( tmp_97_fu_203_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_274_p1);
    sensitive << ( tmp_52_fu_266_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_286_p1);
    sensitive << ( tmp_53_fu_278_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_386_p1);
    sensitive << ( tmp_55_fu_378_p3 );

    SC_METHOD(thread_p_shl7_cast_fu_398_p1);
    sensitive << ( tmp_56_fu_390_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_351_p1);
    sensitive << ( tmp_106_fu_343_p3 );

    SC_METHOD(thread_p_shl9_cast_fu_363_p1);
    sensitive << ( tmp_107_fu_355_p3 );

    SC_METHOD(thread_p_shl_cast_fu_229_p1);
    sensitive << ( tmp_99_fu_221_p3 );

    SC_METHOD(thread_result_to_int_fu_427_p1);
    sensitive << ( result_reg_587 );

    SC_METHOD(thread_shuffleunit1_7_outpu_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_153_cast_fu_423_p1 );

    SC_METHOD(thread_shuffleunit1_7_outpu_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_100_fu_233_p3);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_tmp_101_fu_245_p2);
    sensitive << ( p_shl1_cast_fu_241_p1 );
    sensitive << ( p_shl_cast_fu_229_p1 );

    SC_METHOD(thread_tmp_102_fu_261_p2);
    sensitive << ( tmp_101_reg_488 );
    sensitive << ( tmp_cast_fu_257_p1 );

    SC_METHOD(thread_tmp_103_fu_290_p2);
    sensitive << ( p_shl4_cast_fu_274_p1 );
    sensitive << ( p_shl5_cast_fu_286_p1 );

    SC_METHOD(thread_tmp_104_fu_306_p2);
    sensitive << ( tmp_103_reg_506 );
    sensitive << ( tmp_55_cast_fu_302_p1 );

    SC_METHOD(thread_tmp_105_fu_338_p2);
    sensitive << ( tmp_98_reg_483 );
    sensitive << ( tmp_56_cast_fu_334_p1 );

    SC_METHOD(thread_tmp_106_fu_343_p3);
    sensitive << ( ci_reg_149 );

    SC_METHOD(thread_tmp_107_fu_355_p3);
    sensitive << ( ci_reg_149 );

    SC_METHOD(thread_tmp_108_fu_367_p2);
    sensitive << ( p_shl8_cast_fu_351_p1 );
    sensitive << ( p_shl9_cast_fu_363_p1 );

    SC_METHOD(thread_tmp_109_fu_373_p2);
    sensitive << ( tmp_cast_reg_501 );
    sensitive << ( tmp_108_fu_367_p2 );

    SC_METHOD(thread_tmp_110_fu_402_p2);
    sensitive << ( p_shl6_cast_fu_386_p1 );
    sensitive << ( p_shl7_cast_fu_398_p1 );

    SC_METHOD(thread_tmp_111_fu_408_p2);
    sensitive << ( tmp_55_cast_reg_514 );
    sensitive << ( tmp_110_fu_402_p2 );

    SC_METHOD(thread_tmp_144_cast_fu_311_p1);
    sensitive << ( tmp_104_fu_306_p2 );

    SC_METHOD(thread_tmp_145_cast_fu_419_p1);
    sensitive << ( tmp_105_reg_537 );

    SC_METHOD(thread_tmp_153_cast_fu_423_p1);
    sensitive << ( tmp_111_reg_542 );

    SC_METHOD(thread_tmp_1_fu_430_p4);
    sensitive << ( result_to_int_fu_427_p1 );

    SC_METHOD(thread_tmp_3_fu_456_p2);
    sensitive << ( notrhs_fu_450_p2 );
    sensitive << ( notlhs_fu_444_p2 );

    SC_METHOD(thread_tmp_52_fu_266_p3);
    sensitive << ( tmp_102_fu_261_p2 );

    SC_METHOD(thread_tmp_53_fu_278_p3);
    sensitive << ( tmp_102_fu_261_p2 );

    SC_METHOD(thread_tmp_54_fu_440_p1);
    sensitive << ( result_to_int_fu_427_p1 );

    SC_METHOD(thread_tmp_55_cast_fu_302_p1);
    sensitive << ( w_reg_125 );

    SC_METHOD(thread_tmp_55_fu_378_p3);
    sensitive << ( tmp_109_fu_373_p2 );

    SC_METHOD(thread_tmp_56_cast_fu_334_p1);
    sensitive << ( ci_reg_149 );

    SC_METHOD(thread_tmp_56_fu_390_p3);
    sensitive << ( tmp_109_fu_373_p2 );

    SC_METHOD(thread_tmp_5_fu_462_p2);
    sensitive << ( tmp_4_reg_594 );
    sensitive << ( tmp_3_fu_456_p2 );

    SC_METHOD(thread_tmp_97_fu_203_p3);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_tmp_98_fu_215_p2);
    sensitive << ( p_shl2_cast_fu_199_p1 );
    sensitive << ( p_shl3_cast_fu_211_p1 );

    SC_METHOD(thread_tmp_99_fu_221_p3);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_tmp_cast_fu_257_p1);
    sensitive << ( h_reg_113 );

    SC_METHOD(thread_tmp_fu_186_p1);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_tmp_s_fu_191_p3);
    sensitive << ( co_reg_102 );

    SC_METHOD(thread_w_7_fu_413_p2);
    sensitive << ( w_reg_125 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_145_cast_fu_419_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_174_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_251_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_296_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_322_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_1x1_8p_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_address0, "(port)shuffleunit1_7_outpu_address0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_ce0, "(port)shuffleunit1_7_outpu_ce0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_q0, "(port)shuffleunit1_7_outpu_q0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_address0, "(port)ShuffleConvs_2_Downs_address0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_ce0, "(port)ShuffleConvs_2_Downs_ce0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_we0, "(port)ShuffleConvs_2_Downs_we0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_d0, "(port)ShuffleConvs_2_Downs_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_7_fu_180_p2, "co_7_fu_180_p2");
    sc_trace(mVcdFile, co_7_reg_478, "co_7_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_98_fu_215_p2, "tmp_98_fu_215_p2");
    sc_trace(mVcdFile, tmp_98_reg_483, "tmp_98_reg_483");
    sc_trace(mVcdFile, exitcond3_fu_174_p2, "exitcond3_fu_174_p2");
    sc_trace(mVcdFile, tmp_101_fu_245_p2, "tmp_101_fu_245_p2");
    sc_trace(mVcdFile, tmp_101_reg_488, "tmp_101_reg_488");
    sc_trace(mVcdFile, bias_addr_reg_493, "bias_addr_reg_493");
    sc_trace(mVcdFile, tmp_cast_fu_257_p1, "tmp_cast_fu_257_p1");
    sc_trace(mVcdFile, tmp_cast_reg_501, "tmp_cast_reg_501");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_251_p2, "exitcond2_fu_251_p2");
    sc_trace(mVcdFile, tmp_103_fu_290_p2, "tmp_103_fu_290_p2");
    sc_trace(mVcdFile, tmp_103_reg_506, "tmp_103_reg_506");
    sc_trace(mVcdFile, tmp_55_cast_fu_302_p1, "tmp_55_cast_fu_302_p1");
    sc_trace(mVcdFile, tmp_55_cast_reg_514, "tmp_55_cast_reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond1_fu_296_p2, "exitcond1_fu_296_p2");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_reg_519, "ShuffleConvs_2_Downs_reg_519");
    sc_trace(mVcdFile, h_7_fu_316_p2, "h_7_fu_316_p2");
    sc_trace(mVcdFile, ci_1_fu_328_p2, "ci_1_fu_328_p2");
    sc_trace(mVcdFile, ci_1_reg_532, "ci_1_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_105_fu_338_p2, "tmp_105_fu_338_p2");
    sc_trace(mVcdFile, tmp_105_reg_537, "tmp_105_reg_537");
    sc_trace(mVcdFile, exitcond_fu_322_p2, "exitcond_fu_322_p2");
    sc_trace(mVcdFile, tmp_111_fu_408_p2, "tmp_111_fu_408_p2");
    sc_trace(mVcdFile, tmp_111_reg_542, "tmp_111_reg_542");
    sc_trace(mVcdFile, w_7_fu_413_p2, "w_7_fu_413_p2");
    sc_trace(mVcdFile, w_7_reg_547, "w_7_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, weight_load_reg_562, "weight_load_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_1_reg_567, "shuffleunit1_7_outpu_1_reg_567");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, tmp_57_reg_572, "tmp_57_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_582, "bias_load_reg_582");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, result_reg_587, "result_reg_587");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_4_fu_169_p2, "tmp_4_fu_169_p2");
    sc_trace(mVcdFile, tmp_4_reg_594, "tmp_4_reg_594");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, co_reg_102, "co_reg_102");
    sc_trace(mVcdFile, h_reg_113, "h_reg_113");
    sc_trace(mVcdFile, w_reg_125, "w_reg_125");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, sum_reg_137, "sum_reg_137");
    sc_trace(mVcdFile, ci_reg_149, "ci_reg_149");
    sc_trace(mVcdFile, tmp_fu_186_p1, "tmp_fu_186_p1");
    sc_trace(mVcdFile, tmp_144_cast_fu_311_p1, "tmp_144_cast_fu_311_p1");
    sc_trace(mVcdFile, tmp_145_cast_fu_419_p1, "tmp_145_cast_fu_419_p1");
    sc_trace(mVcdFile, tmp_153_cast_fu_423_p1, "tmp_153_cast_fu_423_p1");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_s_fu_191_p3, "tmp_s_fu_191_p3");
    sc_trace(mVcdFile, tmp_97_fu_203_p3, "tmp_97_fu_203_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_199_p1, "p_shl2_cast_fu_199_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_211_p1, "p_shl3_cast_fu_211_p1");
    sc_trace(mVcdFile, tmp_99_fu_221_p3, "tmp_99_fu_221_p3");
    sc_trace(mVcdFile, tmp_100_fu_233_p3, "tmp_100_fu_233_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_241_p1, "p_shl1_cast_fu_241_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_229_p1, "p_shl_cast_fu_229_p1");
    sc_trace(mVcdFile, tmp_102_fu_261_p2, "tmp_102_fu_261_p2");
    sc_trace(mVcdFile, tmp_52_fu_266_p3, "tmp_52_fu_266_p3");
    sc_trace(mVcdFile, tmp_53_fu_278_p3, "tmp_53_fu_278_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_274_p1, "p_shl4_cast_fu_274_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_286_p1, "p_shl5_cast_fu_286_p1");
    sc_trace(mVcdFile, tmp_104_fu_306_p2, "tmp_104_fu_306_p2");
    sc_trace(mVcdFile, tmp_56_cast_fu_334_p1, "tmp_56_cast_fu_334_p1");
    sc_trace(mVcdFile, tmp_106_fu_343_p3, "tmp_106_fu_343_p3");
    sc_trace(mVcdFile, tmp_107_fu_355_p3, "tmp_107_fu_355_p3");
    sc_trace(mVcdFile, p_shl8_cast_fu_351_p1, "p_shl8_cast_fu_351_p1");
    sc_trace(mVcdFile, p_shl9_cast_fu_363_p1, "p_shl9_cast_fu_363_p1");
    sc_trace(mVcdFile, tmp_108_fu_367_p2, "tmp_108_fu_367_p2");
    sc_trace(mVcdFile, tmp_109_fu_373_p2, "tmp_109_fu_373_p2");
    sc_trace(mVcdFile, tmp_55_fu_378_p3, "tmp_55_fu_378_p3");
    sc_trace(mVcdFile, tmp_56_fu_390_p3, "tmp_56_fu_390_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_386_p1, "p_shl6_cast_fu_386_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_398_p1, "p_shl7_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_110_fu_402_p2, "tmp_110_fu_402_p2");
    sc_trace(mVcdFile, result_to_int_fu_427_p1, "result_to_int_fu_427_p1");
    sc_trace(mVcdFile, tmp_1_fu_430_p4, "tmp_1_fu_430_p4");
    sc_trace(mVcdFile, tmp_54_fu_440_p1, "tmp_54_fu_440_p1");
    sc_trace(mVcdFile, notrhs_fu_450_p2, "notrhs_fu_450_p2");
    sc_trace(mVcdFile, notlhs_fu_444_p2, "notlhs_fu_444_p2");
    sc_trace(mVcdFile, tmp_3_fu_456_p2, "tmp_3_fu_456_p2");
    sc_trace(mVcdFile, tmp_5_fu_462_p2, "tmp_5_fu_462_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_1x1_8p_p::~subconv_1x1_8p_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U74;
    delete ShuffleNetV2_fmulcud_x_U75;
    delete ShuffleNetV2_fcmpdEe_x_U76;
}

void subconv_1x1_8p_p::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_1x1_8p_p::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void subconv_1x1_8p_p::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void subconv_1x1_8p_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_296_p2.read()))) {
        ci_reg_149 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ci_reg_149 = ci_1_reg_532.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_251_p2.read(), ap_const_lv1_1))) {
        co_reg_102 = co_7_reg_478.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_102 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0))) {
        h_reg_113 = ap_const_lv4_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_296_p2.read(), ap_const_lv1_1))) {
        h_reg_113 = h_7_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_296_p2.read()))) {
        sum_reg_137 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_reg_137 = grp_fu_160_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_251_p2.read()))) {
        w_reg_125 = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        w_reg_125 = w_7_reg_547.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_296_p2.read()))) {
        ShuffleConvs_2_Downs_reg_519 =  (sc_lv<14>) (tmp_144_cast_fu_311_p1.read());
        tmp_55_cast_reg_514 = tmp_55_cast_fu_302_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_493 =  (sc_lv<7>) (tmp_fu_186_p1.read());
        tmp_101_reg_488 = tmp_101_fu_245_p2.read();
        tmp_98_reg_483 = tmp_98_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_582 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_1_reg_532 = ci_1_fu_328_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_7_reg_478 = co_7_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        result_reg_587 = grp_fu_160_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        shuffleunit1_7_outpu_1_reg_567 = shuffleunit1_7_outpu_q0.read();
        weight_load_reg_562 = weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_251_p2.read()))) {
        tmp_103_reg_506 = tmp_103_fu_290_p2.read();
        tmp_cast_reg_501 = tmp_cast_fu_257_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_322_p2.read()))) {
        tmp_105_reg_537 = tmp_105_fu_338_p2.read();
        tmp_111_reg_542 = tmp_111_fu_408_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_4_reg_594 = tmp_4_fu_169_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_57_reg_572 = grp_fu_165_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_322_p2.read()))) {
        w_7_reg_547 = w_7_fu_413_p2.read();
    }
}

void subconv_1x1_8p_p::thread_ShuffleConvs_2_Downs_address0() {
    ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_reg_519.read();
}

void subconv_1x1_8p_p::thread_ShuffleConvs_2_Downs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        ShuffleConvs_2_Downs_ce0 = ap_const_logic_1;
    } else {
        ShuffleConvs_2_Downs_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ShuffleConvs_2_Downs_d0() {
    ShuffleConvs_2_Downs_d0 = (!tmp_5_fu_462_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_462_p2.read()[0].to_bool())? result_reg_587.read(): ap_const_lv32_0);
}

void subconv_1x1_8p_p::thread_ShuffleConvs_2_Downs_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        ShuffleConvs_2_Downs_we0 = ap_const_logic_1;
    } else {
        ShuffleConvs_2_Downs_we0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_1x1_8p_p::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void subconv_1x1_8p_p::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_bias_address0() {
    bias_address0 = bias_addr_reg_493.read();
}

void subconv_1x1_8p_p::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ci_1_fu_328_p2() {
    ci_1_fu_328_p2 = (!ci_reg_149.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ci_reg_149.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void subconv_1x1_8p_p::thread_co_7_fu_180_p2() {
    co_7_fu_180_p2 = (!co_reg_102.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_reg_102.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void subconv_1x1_8p_p::thread_exitcond1_fu_296_p2() {
    exitcond1_fu_296_p2 = (!w_reg_125.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_125.read() == ap_const_lv4_9);
}

void subconv_1x1_8p_p::thread_exitcond2_fu_251_p2() {
    exitcond2_fu_251_p2 = (!h_reg_113.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_113.read() == ap_const_lv4_9);
}

void subconv_1x1_8p_p::thread_exitcond3_fu_174_p2() {
    exitcond3_fu_174_p2 = (!co_reg_102.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_102.read() == ap_const_lv7_60);
}

void subconv_1x1_8p_p::thread_exitcond_fu_322_p2() {
    exitcond_fu_322_p2 = (!ci_reg_149.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_149.read() == ap_const_lv7_60);
}

void subconv_1x1_8p_p::thread_grp_fu_160_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_160_p1 = bias_load_reg_582.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_160_p1 = tmp_57_reg_572.read();
    } else {
        grp_fu_160_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_1x1_8p_p::thread_h_7_fu_316_p2() {
    h_7_fu_316_p2 = (!h_reg_113.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(h_reg_113.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void subconv_1x1_8p_p::thread_notlhs_fu_444_p2() {
    notlhs_fu_444_p2 = (!tmp_1_fu_430_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_430_p4.read() != ap_const_lv8_FF);
}

void subconv_1x1_8p_p::thread_notrhs_fu_450_p2() {
    notrhs_fu_450_p2 = (!tmp_54_fu_440_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_54_fu_440_p1.read() == ap_const_lv23_0);
}

void subconv_1x1_8p_p::thread_p_shl1_cast_fu_241_p1() {
    p_shl1_cast_fu_241_p1 = esl_zext<11,8>(tmp_100_fu_233_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl2_cast_fu_199_p1() {
    p_shl2_cast_fu_199_p1 = esl_zext<15,14>(tmp_s_fu_191_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl3_cast_fu_211_p1() {
    p_shl3_cast_fu_211_p1 = esl_zext<15,12>(tmp_97_fu_203_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl4_cast_fu_274_p1() {
    p_shl4_cast_fu_274_p1 = esl_zext<15,14>(tmp_52_fu_266_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl5_cast_fu_286_p1() {
    p_shl5_cast_fu_286_p1 = esl_zext<15,12>(tmp_53_fu_278_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl6_cast_fu_386_p1() {
    p_shl6_cast_fu_386_p1 = esl_zext<15,14>(tmp_55_fu_378_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl7_cast_fu_398_p1() {
    p_shl7_cast_fu_398_p1 = esl_zext<15,12>(tmp_56_fu_390_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl8_cast_fu_351_p1() {
    p_shl8_cast_fu_351_p1 = esl_zext<11,10>(tmp_106_fu_343_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl9_cast_fu_363_p1() {
    p_shl9_cast_fu_363_p1 = esl_zext<11,8>(tmp_107_fu_355_p3.read());
}

void subconv_1x1_8p_p::thread_p_shl_cast_fu_229_p1() {
    p_shl_cast_fu_229_p1 = esl_zext<11,10>(tmp_99_fu_221_p3.read());
}

void subconv_1x1_8p_p::thread_result_to_int_fu_427_p1() {
    result_to_int_fu_427_p1 = result_reg_587.read();
}

void subconv_1x1_8p_p::thread_shuffleunit1_7_outpu_address0() {
    shuffleunit1_7_outpu_address0 =  (sc_lv<14>) (tmp_153_cast_fu_423_p1.read());
}

void subconv_1x1_8p_p::thread_shuffleunit1_7_outpu_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shuffleunit1_7_outpu_ce0 = ap_const_logic_1;
    } else {
        shuffleunit1_7_outpu_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_tmp_100_fu_233_p3() {
    tmp_100_fu_233_p3 = esl_concat<7,1>(co_reg_102.read(), ap_const_lv1_0);
}

void subconv_1x1_8p_p::thread_tmp_101_fu_245_p2() {
    tmp_101_fu_245_p2 = (!p_shl1_cast_fu_241_p1.read().is_01() || !p_shl_cast_fu_229_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl1_cast_fu_241_p1.read()) + sc_biguint<11>(p_shl_cast_fu_229_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_102_fu_261_p2() {
    tmp_102_fu_261_p2 = (!tmp_cast_fu_257_p1.read().is_01() || !tmp_101_reg_488.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast_fu_257_p1.read()) + sc_biguint<11>(tmp_101_reg_488.read()));
}

void subconv_1x1_8p_p::thread_tmp_103_fu_290_p2() {
    tmp_103_fu_290_p2 = (!p_shl4_cast_fu_274_p1.read().is_01() || !p_shl5_cast_fu_286_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl4_cast_fu_274_p1.read()) + sc_biguint<15>(p_shl5_cast_fu_286_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_104_fu_306_p2() {
    tmp_104_fu_306_p2 = (!tmp_103_reg_506.read().is_01() || !tmp_55_cast_fu_302_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_103_reg_506.read()) + sc_biguint<15>(tmp_55_cast_fu_302_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_105_fu_338_p2() {
    tmp_105_fu_338_p2 = (!tmp_56_cast_fu_334_p1.read().is_01() || !tmp_98_reg_483.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_56_cast_fu_334_p1.read()) + sc_biguint<15>(tmp_98_reg_483.read()));
}

void subconv_1x1_8p_p::thread_tmp_106_fu_343_p3() {
    tmp_106_fu_343_p3 = esl_concat<7,3>(ci_reg_149.read(), ap_const_lv3_0);
}

void subconv_1x1_8p_p::thread_tmp_107_fu_355_p3() {
    tmp_107_fu_355_p3 = esl_concat<7,1>(ci_reg_149.read(), ap_const_lv1_0);
}

void subconv_1x1_8p_p::thread_tmp_108_fu_367_p2() {
    tmp_108_fu_367_p2 = (!p_shl8_cast_fu_351_p1.read().is_01() || !p_shl9_cast_fu_363_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl8_cast_fu_351_p1.read()) + sc_biguint<11>(p_shl9_cast_fu_363_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_109_fu_373_p2() {
    tmp_109_fu_373_p2 = (!tmp_cast_reg_501.read().is_01() || !tmp_108_fu_367_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast_reg_501.read()) + sc_biguint<11>(tmp_108_fu_367_p2.read()));
}

void subconv_1x1_8p_p::thread_tmp_110_fu_402_p2() {
    tmp_110_fu_402_p2 = (!p_shl6_cast_fu_386_p1.read().is_01() || !p_shl7_cast_fu_398_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl6_cast_fu_386_p1.read()) + sc_biguint<15>(p_shl7_cast_fu_398_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_111_fu_408_p2() {
    tmp_111_fu_408_p2 = (!tmp_55_cast_reg_514.read().is_01() || !tmp_110_fu_402_p2.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_55_cast_reg_514.read()) + sc_biguint<15>(tmp_110_fu_402_p2.read()));
}

void subconv_1x1_8p_p::thread_tmp_144_cast_fu_311_p1() {
    tmp_144_cast_fu_311_p1 = esl_zext<64,15>(tmp_104_fu_306_p2.read());
}

void subconv_1x1_8p_p::thread_tmp_145_cast_fu_419_p1() {
    tmp_145_cast_fu_419_p1 = esl_sext<64,15>(tmp_105_reg_537.read());
}

void subconv_1x1_8p_p::thread_tmp_153_cast_fu_423_p1() {
    tmp_153_cast_fu_423_p1 = esl_zext<64,15>(tmp_111_reg_542.read());
}

void subconv_1x1_8p_p::thread_tmp_1_fu_430_p4() {
    tmp_1_fu_430_p4 = result_to_int_fu_427_p1.read().range(30, 23);
}

void subconv_1x1_8p_p::thread_tmp_3_fu_456_p2() {
    tmp_3_fu_456_p2 = (notrhs_fu_450_p2.read() | notlhs_fu_444_p2.read());
}

void subconv_1x1_8p_p::thread_tmp_52_fu_266_p3() {
    tmp_52_fu_266_p3 = esl_concat<11,3>(tmp_102_fu_261_p2.read(), ap_const_lv3_0);
}

void subconv_1x1_8p_p::thread_tmp_53_fu_278_p3() {
    tmp_53_fu_278_p3 = esl_concat<11,1>(tmp_102_fu_261_p2.read(), ap_const_lv1_0);
}

void subconv_1x1_8p_p::thread_tmp_54_fu_440_p1() {
    tmp_54_fu_440_p1 = result_to_int_fu_427_p1.read().range(23-1, 0);
}

void subconv_1x1_8p_p::thread_tmp_55_cast_fu_302_p1() {
    tmp_55_cast_fu_302_p1 = esl_zext<15,4>(w_reg_125.read());
}

void subconv_1x1_8p_p::thread_tmp_55_fu_378_p3() {
    tmp_55_fu_378_p3 = esl_concat<11,3>(tmp_109_fu_373_p2.read(), ap_const_lv3_0);
}

void subconv_1x1_8p_p::thread_tmp_56_cast_fu_334_p1() {
    tmp_56_cast_fu_334_p1 = esl_zext<15,7>(ci_reg_149.read());
}

void subconv_1x1_8p_p::thread_tmp_56_fu_390_p3() {
    tmp_56_fu_390_p3 = esl_concat<11,1>(tmp_109_fu_373_p2.read(), ap_const_lv1_0);
}

void subconv_1x1_8p_p::thread_tmp_5_fu_462_p2() {
    tmp_5_fu_462_p2 = (tmp_3_fu_456_p2.read() & tmp_4_reg_594.read());
}

void subconv_1x1_8p_p::thread_tmp_97_fu_203_p3() {
    tmp_97_fu_203_p3 = esl_concat<7,5>(co_reg_102.read(), ap_const_lv5_0);
}

void subconv_1x1_8p_p::thread_tmp_98_fu_215_p2() {
    tmp_98_fu_215_p2 = (!p_shl2_cast_fu_199_p1.read().is_01() || !p_shl3_cast_fu_211_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl2_cast_fu_199_p1.read()) - sc_biguint<15>(p_shl3_cast_fu_211_p1.read()));
}

void subconv_1x1_8p_p::thread_tmp_99_fu_221_p3() {
    tmp_99_fu_221_p3 = esl_concat<7,3>(co_reg_102.read(), ap_const_lv3_0);
}

void subconv_1x1_8p_p::thread_tmp_cast_fu_257_p1() {
    tmp_cast_fu_257_p1 = esl_zext<11,4>(h_reg_113.read());
}

void subconv_1x1_8p_p::thread_tmp_fu_186_p1() {
    tmp_fu_186_p1 = esl_zext<64,7>(co_reg_102.read());
}

void subconv_1x1_8p_p::thread_tmp_s_fu_191_p3() {
    tmp_s_fu_191_p3 = esl_concat<7,7>(co_reg_102.read(), ap_const_lv7_0);
}

void subconv_1x1_8p_p::thread_w_7_fu_413_p2() {
    w_7_fu_413_p2 = (!ap_const_lv4_1.is_01() || !w_reg_125.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(w_reg_125.read()));
}

void subconv_1x1_8p_p::thread_weight_address0() {
    weight_address0 =  (sc_lv<14>) (tmp_145_cast_fu_419_p1.read());
}

void subconv_1x1_8p_p::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_251_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_296_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_322_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

