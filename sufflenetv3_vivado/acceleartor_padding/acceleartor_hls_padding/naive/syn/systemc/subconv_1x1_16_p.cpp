// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_1x1_16_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_1x1_16_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_1x1_16_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state1 = "1";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state2 = "10";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state3 = "100";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state4 = "1000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state5 = "10000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state6 = "100000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> subconv_1x1_16_p::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_1x1_16_p::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_3 = "11";
const sc_lv<1> subconv_1x1_16_p::ap_const_lv1_1 = "1";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_4 = "100";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_6 = "110";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_A = "1010";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_F = "1111";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_15 = "10101";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_16 = "10110";
const sc_lv<5> subconv_1x1_16_p::ap_const_lv5_0 = "00000";
const sc_lv<5> subconv_1x1_16_p::ap_const_lv5_1 = "1";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_17 = "10111";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_B = "1011";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_11 = "10001";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_7 = "111";
const sc_lv<5> subconv_1x1_16_p::ap_const_lv5_18 = "11000";
const sc_lv<3> subconv_1x1_16_p::ap_const_lv3_0 = "000";
const sc_lv<4> subconv_1x1_16_p::ap_const_lv4_0 = "0000";
const sc_lv<5> subconv_1x1_16_p::ap_const_lv5_11 = "10001";
const sc_lv<32> subconv_1x1_16_p::ap_const_lv32_1E = "11110";
const sc_lv<8> subconv_1x1_16_p::ap_const_lv8_FF = "11111111";
const sc_lv<23> subconv_1x1_16_p::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> subconv_1x1_16_p::ap_const_lv5_2 = "10";
const bool subconv_1x1_16_p::ap_const_boolean_1 = true;

subconv_1x1_16_p::subconv_1x1_16_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U21 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U21");
    ShuffleNetV2_faddbkb_x_U21->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U21->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U21->din0(sum_reg_135);
    ShuffleNetV2_faddbkb_x_U21->din1(grp_fu_158_p1);
    ShuffleNetV2_faddbkb_x_U21->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U21->dout(grp_fu_158_p2);
    ShuffleNetV2_fmulcud_x_U22 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U22");
    ShuffleNetV2_fmulcud_x_U22->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U22->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U22->din0(weight_load_reg_552);
    ShuffleNetV2_fmulcud_x_U22->din1(input_load_reg_557);
    ShuffleNetV2_fmulcud_x_U22->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U22->dout(grp_fu_163_p2);
    ShuffleNetV2_fcmpdEe_x_U23 = new ShuffleNetV2_fcmpdEe<1,1,32,32,1>("ShuffleNetV2_fcmpdEe_x_U23");
    ShuffleNetV2_fcmpdEe_x_U23->din0(result_reg_577);
    ShuffleNetV2_fcmpdEe_x_U23->din1(ap_var_for_const1);
    ShuffleNetV2_fcmpdEe_x_U23->opcode(ap_var_for_const2);
    ShuffleNetV2_fcmpdEe_x_U23->dout(tmp_29_fu_167_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_172_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_172_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_483 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ci_6_fu_322_p2);
    sensitive << ( ci_reg_147 );

    SC_METHOD(thread_co_12_fu_178_p2);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_exitcond1_fu_290_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_123 );

    SC_METHOD(thread_exitcond2_fu_249_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_111 );

    SC_METHOD(thread_exitcond3_fu_172_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_exitcond_fu_316_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_147 );

    SC_METHOD(thread_grp_fu_158_p1);
    sensitive << ( tmp_72_reg_562 );
    sensitive << ( bias_load_reg_572 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_12_fu_310_p2);
    sensitive << ( h_reg_111 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_252_cast_fu_409_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_notlhs_fu_434_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_26_fu_420_p4 );

    SC_METHOD(thread_notrhs_fu_440_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_74_fu_430_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_509 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( result_reg_577 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_30_fu_452_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_p_shl1_cast_fu_239_p1);
    sensitive << ( tmp_173_fu_231_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_197_p1);
    sensitive << ( tmp_s_fu_189_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_209_p1);
    sensitive << ( tmp_170_fu_201_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_264_p3);
    sensitive << ( tmp_175_fu_259_p2 );

    SC_METHOD(thread_p_shl5_cast_fu_280_p1);
    sensitive << ( tmp_73_fu_272_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_367_p3);
    sensitive << ( tmp_181_fu_362_p2 );

    SC_METHOD(thread_p_shl7_cast_fu_383_p1);
    sensitive << ( tmp_75_fu_375_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_340_p1);
    sensitive << ( tmp_178_fu_332_p3 );

    SC_METHOD(thread_p_shl9_cast_fu_352_p1);
    sensitive << ( tmp_179_fu_344_p3 );

    SC_METHOD(thread_p_shl_cast_fu_227_p1);
    sensitive << ( tmp_172_fu_219_p3 );

    SC_METHOD(thread_result_to_int_fu_417_p1);
    sensitive << ( result_reg_577 );

    SC_METHOD(thread_tmp_170_fu_201_p3);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_tmp_171_fu_213_p2);
    sensitive << ( p_shl2_cast_fu_197_p1 );
    sensitive << ( p_shl3_cast_fu_209_p1 );

    SC_METHOD(thread_tmp_172_fu_219_p3);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_tmp_173_fu_231_p3);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_tmp_174_fu_243_p2);
    sensitive << ( p_shl1_cast_fu_239_p1 );
    sensitive << ( p_shl_cast_fu_227_p1 );

    SC_METHOD(thread_tmp_175_fu_259_p2);
    sensitive << ( tmp_174_reg_478 );
    sensitive << ( tmp_cast_fu_255_p1 );

    SC_METHOD(thread_tmp_176_fu_284_p2);
    sensitive << ( p_shl4_cast_fu_264_p3 );
    sensitive << ( p_shl5_cast_fu_280_p1 );

    SC_METHOD(thread_tmp_177_fu_300_p2);
    sensitive << ( tmp_176_reg_496 );
    sensitive << ( tmp_70_cast_fu_296_p1 );

    SC_METHOD(thread_tmp_178_fu_332_p3);
    sensitive << ( ci_reg_147 );

    SC_METHOD(thread_tmp_179_fu_344_p3);
    sensitive << ( ci_reg_147 );

    SC_METHOD(thread_tmp_180_fu_356_p2);
    sensitive << ( p_shl8_cast_fu_340_p1 );
    sensitive << ( p_shl9_cast_fu_352_p1 );

    SC_METHOD(thread_tmp_181_fu_362_p2);
    sensitive << ( tmp_cast_reg_491 );
    sensitive << ( tmp_180_fu_356_p2 );

    SC_METHOD(thread_tmp_182_fu_387_p2);
    sensitive << ( p_shl6_cast_fu_367_p3 );
    sensitive << ( p_shl7_cast_fu_383_p1 );

    SC_METHOD(thread_tmp_183_fu_393_p2);
    sensitive << ( tmp_70_cast_reg_504 );
    sensitive << ( tmp_182_fu_387_p2 );

    SC_METHOD(thread_tmp_184_fu_398_p2);
    sensitive << ( tmp_171_reg_473 );
    sensitive << ( tmp_71_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_244_cast_fu_305_p1);
    sensitive << ( tmp_177_fu_300_p2 );

    SC_METHOD(thread_tmp_252_cast_fu_409_p1);
    sensitive << ( tmp_183_reg_527 );

    SC_METHOD(thread_tmp_253_cast_fu_413_p1);
    sensitive << ( tmp_184_reg_532 );

    SC_METHOD(thread_tmp_26_fu_420_p4);
    sensitive << ( result_to_int_fu_417_p1 );

    SC_METHOD(thread_tmp_28_fu_446_p2);
    sensitive << ( notrhs_fu_440_p2 );
    sensitive << ( notlhs_fu_434_p2 );

    SC_METHOD(thread_tmp_30_fu_452_p2);
    sensitive << ( tmp_29_reg_584 );
    sensitive << ( tmp_28_fu_446_p2 );

    SC_METHOD(thread_tmp_70_cast_fu_296_p1);
    sensitive << ( w_reg_123 );

    SC_METHOD(thread_tmp_71_cast_fu_328_p1);
    sensitive << ( ci_reg_147 );

    SC_METHOD(thread_tmp_73_fu_272_p3);
    sensitive << ( tmp_175_fu_259_p2 );

    SC_METHOD(thread_tmp_74_fu_430_p1);
    sensitive << ( result_to_int_fu_417_p1 );

    SC_METHOD(thread_tmp_75_fu_375_p3);
    sensitive << ( tmp_181_fu_362_p2 );

    SC_METHOD(thread_tmp_cast_fu_255_p1);
    sensitive << ( h_reg_111 );

    SC_METHOD(thread_tmp_fu_184_p1);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_tmp_s_fu_189_p3);
    sensitive << ( co_reg_100 );

    SC_METHOD(thread_w_12_fu_403_p2);
    sensitive << ( w_reg_123 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_253_cast_fu_413_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_172_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_249_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_290_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_316_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_1x1_16_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_12_fu_178_p2, "co_12_fu_178_p2");
    sc_trace(mVcdFile, co_12_reg_468, "co_12_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_171_fu_213_p2, "tmp_171_fu_213_p2");
    sc_trace(mVcdFile, tmp_171_reg_473, "tmp_171_reg_473");
    sc_trace(mVcdFile, exitcond3_fu_172_p2, "exitcond3_fu_172_p2");
    sc_trace(mVcdFile, tmp_174_fu_243_p2, "tmp_174_fu_243_p2");
    sc_trace(mVcdFile, tmp_174_reg_478, "tmp_174_reg_478");
    sc_trace(mVcdFile, bias_addr_reg_483, "bias_addr_reg_483");
    sc_trace(mVcdFile, tmp_cast_fu_255_p1, "tmp_cast_fu_255_p1");
    sc_trace(mVcdFile, tmp_cast_reg_491, "tmp_cast_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_249_p2, "exitcond2_fu_249_p2");
    sc_trace(mVcdFile, tmp_176_fu_284_p2, "tmp_176_fu_284_p2");
    sc_trace(mVcdFile, tmp_176_reg_496, "tmp_176_reg_496");
    sc_trace(mVcdFile, tmp_70_cast_fu_296_p1, "tmp_70_cast_fu_296_p1");
    sc_trace(mVcdFile, tmp_70_cast_reg_504, "tmp_70_cast_reg_504");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond1_fu_290_p2, "exitcond1_fu_290_p2");
    sc_trace(mVcdFile, output_addr_reg_509, "output_addr_reg_509");
    sc_trace(mVcdFile, h_12_fu_310_p2, "h_12_fu_310_p2");
    sc_trace(mVcdFile, ci_6_fu_322_p2, "ci_6_fu_322_p2");
    sc_trace(mVcdFile, ci_6_reg_522, "ci_6_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_183_fu_393_p2, "tmp_183_fu_393_p2");
    sc_trace(mVcdFile, tmp_183_reg_527, "tmp_183_reg_527");
    sc_trace(mVcdFile, exitcond_fu_316_p2, "exitcond_fu_316_p2");
    sc_trace(mVcdFile, tmp_184_fu_398_p2, "tmp_184_fu_398_p2");
    sc_trace(mVcdFile, tmp_184_reg_532, "tmp_184_reg_532");
    sc_trace(mVcdFile, w_12_fu_403_p2, "w_12_fu_403_p2");
    sc_trace(mVcdFile, w_12_reg_537, "w_12_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, weight_load_reg_552, "weight_load_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_load_reg_557, "input_load_reg_557");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, tmp_72_reg_562, "tmp_72_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_158_p2, "grp_fu_158_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_572, "bias_load_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, result_reg_577, "result_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_29_fu_167_p2, "tmp_29_fu_167_p2");
    sc_trace(mVcdFile, tmp_29_reg_584, "tmp_29_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, co_reg_100, "co_reg_100");
    sc_trace(mVcdFile, h_reg_111, "h_reg_111");
    sc_trace(mVcdFile, w_reg_123, "w_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, sum_reg_135, "sum_reg_135");
    sc_trace(mVcdFile, ci_reg_147, "ci_reg_147");
    sc_trace(mVcdFile, tmp_fu_184_p1, "tmp_fu_184_p1");
    sc_trace(mVcdFile, tmp_244_cast_fu_305_p1, "tmp_244_cast_fu_305_p1");
    sc_trace(mVcdFile, tmp_252_cast_fu_409_p1, "tmp_252_cast_fu_409_p1");
    sc_trace(mVcdFile, tmp_253_cast_fu_413_p1, "tmp_253_cast_fu_413_p1");
    sc_trace(mVcdFile, grp_fu_158_p1, "grp_fu_158_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_s_fu_189_p3, "tmp_s_fu_189_p3");
    sc_trace(mVcdFile, tmp_170_fu_201_p3, "tmp_170_fu_201_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_197_p1, "p_shl2_cast_fu_197_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_209_p1, "p_shl3_cast_fu_209_p1");
    sc_trace(mVcdFile, tmp_172_fu_219_p3, "tmp_172_fu_219_p3");
    sc_trace(mVcdFile, tmp_173_fu_231_p3, "tmp_173_fu_231_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_239_p1, "p_shl1_cast_fu_239_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_227_p1, "p_shl_cast_fu_227_p1");
    sc_trace(mVcdFile, tmp_175_fu_259_p2, "tmp_175_fu_259_p2");
    sc_trace(mVcdFile, tmp_73_fu_272_p3, "tmp_73_fu_272_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_264_p3, "p_shl4_cast_fu_264_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_280_p1, "p_shl5_cast_fu_280_p1");
    sc_trace(mVcdFile, tmp_177_fu_300_p2, "tmp_177_fu_300_p2");
    sc_trace(mVcdFile, tmp_178_fu_332_p3, "tmp_178_fu_332_p3");
    sc_trace(mVcdFile, tmp_179_fu_344_p3, "tmp_179_fu_344_p3");
    sc_trace(mVcdFile, p_shl8_cast_fu_340_p1, "p_shl8_cast_fu_340_p1");
    sc_trace(mVcdFile, p_shl9_cast_fu_352_p1, "p_shl9_cast_fu_352_p1");
    sc_trace(mVcdFile, tmp_180_fu_356_p2, "tmp_180_fu_356_p2");
    sc_trace(mVcdFile, tmp_181_fu_362_p2, "tmp_181_fu_362_p2");
    sc_trace(mVcdFile, tmp_75_fu_375_p3, "tmp_75_fu_375_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_367_p3, "p_shl6_cast_fu_367_p3");
    sc_trace(mVcdFile, p_shl7_cast_fu_383_p1, "p_shl7_cast_fu_383_p1");
    sc_trace(mVcdFile, tmp_182_fu_387_p2, "tmp_182_fu_387_p2");
    sc_trace(mVcdFile, tmp_71_cast_fu_328_p1, "tmp_71_cast_fu_328_p1");
    sc_trace(mVcdFile, result_to_int_fu_417_p1, "result_to_int_fu_417_p1");
    sc_trace(mVcdFile, tmp_26_fu_420_p4, "tmp_26_fu_420_p4");
    sc_trace(mVcdFile, tmp_74_fu_430_p1, "tmp_74_fu_430_p1");
    sc_trace(mVcdFile, notrhs_fu_440_p2, "notrhs_fu_440_p2");
    sc_trace(mVcdFile, notlhs_fu_434_p2, "notlhs_fu_434_p2");
    sc_trace(mVcdFile, tmp_28_fu_446_p2, "tmp_28_fu_446_p2");
    sc_trace(mVcdFile, tmp_30_fu_452_p2, "tmp_30_fu_452_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_1x1_16_p::~subconv_1x1_16_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U21;
    delete ShuffleNetV2_fmulcud_x_U22;
    delete ShuffleNetV2_fcmpdEe_x_U23;
}

void subconv_1x1_16_p::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_1x1_16_p::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void subconv_1x1_16_p::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void subconv_1x1_16_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_290_p2.read()))) {
        ci_reg_147 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ci_reg_147 = ci_6_reg_522.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_1))) {
        co_reg_100 = co_12_reg_468.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_100 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_172_p2.read(), ap_const_lv1_0))) {
        h_reg_111 = ap_const_lv5_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_290_p2.read(), ap_const_lv1_1))) {
        h_reg_111 = h_12_fu_310_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_290_p2.read()))) {
        sum_reg_135 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_reg_135 = grp_fu_158_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_249_p2.read()))) {
        w_reg_123 = ap_const_lv5_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        w_reg_123 = w_12_reg_537.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_172_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_483 =  (sc_lv<5>) (tmp_fu_184_p1.read());
        tmp_171_reg_473 = tmp_171_fu_213_p2.read();
        tmp_174_reg_478 = tmp_174_fu_243_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_572 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_6_reg_522 = ci_6_fu_322_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_12_reg_468 = co_12_fu_178_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_reg_557 = input_r_q0.read();
        weight_load_reg_552 = weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_290_p2.read()))) {
        output_addr_reg_509 =  (sc_lv<13>) (tmp_244_cast_fu_305_p1.read());
        tmp_70_cast_reg_504 = tmp_70_cast_fu_296_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        result_reg_577 = grp_fu_158_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_249_p2.read()))) {
        tmp_176_reg_496 = tmp_176_fu_284_p2.read();
        tmp_cast_reg_491 = tmp_cast_fu_255_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_316_p2.read()))) {
        tmp_183_reg_527 = tmp_183_fu_393_p2.read();
        tmp_184_reg_532 = tmp_184_fu_398_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_29_reg_584 = tmp_29_fu_167_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_72_reg_562 = grp_fu_163_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_316_p2.read()))) {
        w_12_reg_537 = w_12_fu_403_p2.read();
    }
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_1x1_16_p::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void subconv_1x1_16_p::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_172_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_172_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_bias_address0() {
    bias_address0 = bias_addr_reg_483.read();
}

void subconv_1x1_16_p::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_ci_6_fu_322_p2() {
    ci_6_fu_322_p2 = (!ci_reg_147.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ci_reg_147.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_1x1_16_p::thread_co_12_fu_178_p2() {
    co_12_fu_178_p2 = (!co_reg_100.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(co_reg_100.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_1x1_16_p::thread_exitcond1_fu_290_p2() {
    exitcond1_fu_290_p2 = (!w_reg_123.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_123.read() == ap_const_lv5_11);
}

void subconv_1x1_16_p::thread_exitcond2_fu_249_p2() {
    exitcond2_fu_249_p2 = (!h_reg_111.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_111.read() == ap_const_lv5_11);
}

void subconv_1x1_16_p::thread_exitcond3_fu_172_p2() {
    exitcond3_fu_172_p2 = (!co_reg_100.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_100.read() == ap_const_lv5_18);
}

void subconv_1x1_16_p::thread_exitcond_fu_316_p2() {
    exitcond_fu_316_p2 = (!ci_reg_147.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_147.read() == ap_const_lv5_18);
}

void subconv_1x1_16_p::thread_grp_fu_158_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_158_p1 = bias_load_reg_572.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_158_p1 = tmp_72_reg_562.read();
    } else {
        grp_fu_158_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_1x1_16_p::thread_h_12_fu_310_p2() {
    h_12_fu_310_p2 = (!h_reg_111.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_reg_111.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_1x1_16_p::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<13>) (tmp_252_cast_fu_409_p1.read());
}

void subconv_1x1_16_p::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_notlhs_fu_434_p2() {
    notlhs_fu_434_p2 = (!tmp_26_fu_420_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_26_fu_420_p4.read() != ap_const_lv8_FF);
}

void subconv_1x1_16_p::thread_notrhs_fu_440_p2() {
    notrhs_fu_440_p2 = (!tmp_74_fu_430_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_74_fu_430_p1.read() == ap_const_lv23_0);
}

void subconv_1x1_16_p::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_509.read();
}

void subconv_1x1_16_p::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_output_r_d0() {
    output_r_d0 = (!tmp_30_fu_452_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_30_fu_452_p2.read()[0].to_bool())? result_reg_577.read(): ap_const_lv32_0);
}

void subconv_1x1_16_p::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_p_shl1_cast_fu_239_p1() {
    p_shl1_cast_fu_239_p1 = esl_zext<10,6>(tmp_173_fu_231_p3.read());
}

void subconv_1x1_16_p::thread_p_shl2_cast_fu_197_p1() {
    p_shl2_cast_fu_197_p1 = esl_zext<11,10>(tmp_s_fu_189_p3.read());
}

void subconv_1x1_16_p::thread_p_shl3_cast_fu_209_p1() {
    p_shl3_cast_fu_209_p1 = esl_zext<11,8>(tmp_170_fu_201_p3.read());
}

void subconv_1x1_16_p::thread_p_shl4_cast_fu_264_p3() {
    p_shl4_cast_fu_264_p3 = esl_concat<10,4>(tmp_175_fu_259_p2.read(), ap_const_lv4_0);
}

void subconv_1x1_16_p::thread_p_shl5_cast_fu_280_p1() {
    p_shl5_cast_fu_280_p1 = esl_zext<14,11>(tmp_73_fu_272_p3.read());
}

void subconv_1x1_16_p::thread_p_shl6_cast_fu_367_p3() {
    p_shl6_cast_fu_367_p3 = esl_concat<10,4>(tmp_181_fu_362_p2.read(), ap_const_lv4_0);
}

void subconv_1x1_16_p::thread_p_shl7_cast_fu_383_p1() {
    p_shl7_cast_fu_383_p1 = esl_zext<14,11>(tmp_75_fu_375_p3.read());
}

void subconv_1x1_16_p::thread_p_shl8_cast_fu_340_p1() {
    p_shl8_cast_fu_340_p1 = esl_zext<10,9>(tmp_178_fu_332_p3.read());
}

void subconv_1x1_16_p::thread_p_shl9_cast_fu_352_p1() {
    p_shl9_cast_fu_352_p1 = esl_zext<10,6>(tmp_179_fu_344_p3.read());
}

void subconv_1x1_16_p::thread_p_shl_cast_fu_227_p1() {
    p_shl_cast_fu_227_p1 = esl_zext<10,9>(tmp_172_fu_219_p3.read());
}

void subconv_1x1_16_p::thread_result_to_int_fu_417_p1() {
    result_to_int_fu_417_p1 = result_reg_577.read();
}

void subconv_1x1_16_p::thread_tmp_170_fu_201_p3() {
    tmp_170_fu_201_p3 = esl_concat<5,3>(co_reg_100.read(), ap_const_lv3_0);
}

void subconv_1x1_16_p::thread_tmp_171_fu_213_p2() {
    tmp_171_fu_213_p2 = (!p_shl2_cast_fu_197_p1.read().is_01() || !p_shl3_cast_fu_209_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl2_cast_fu_197_p1.read()) - sc_biguint<11>(p_shl3_cast_fu_209_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_172_fu_219_p3() {
    tmp_172_fu_219_p3 = esl_concat<5,4>(co_reg_100.read(), ap_const_lv4_0);
}

void subconv_1x1_16_p::thread_tmp_173_fu_231_p3() {
    tmp_173_fu_231_p3 = esl_concat<5,1>(co_reg_100.read(), ap_const_lv1_0);
}

void subconv_1x1_16_p::thread_tmp_174_fu_243_p2() {
    tmp_174_fu_243_p2 = (!p_shl1_cast_fu_239_p1.read().is_01() || !p_shl_cast_fu_227_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl1_cast_fu_239_p1.read()) + sc_biguint<10>(p_shl_cast_fu_227_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_175_fu_259_p2() {
    tmp_175_fu_259_p2 = (!tmp_cast_fu_255_p1.read().is_01() || !tmp_174_reg_478.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_cast_fu_255_p1.read()) + sc_biguint<10>(tmp_174_reg_478.read()));
}

void subconv_1x1_16_p::thread_tmp_176_fu_284_p2() {
    tmp_176_fu_284_p2 = (!p_shl4_cast_fu_264_p3.read().is_01() || !p_shl5_cast_fu_280_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl4_cast_fu_264_p3.read()) + sc_biguint<14>(p_shl5_cast_fu_280_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_177_fu_300_p2() {
    tmp_177_fu_300_p2 = (!tmp_176_reg_496.read().is_01() || !tmp_70_cast_fu_296_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_176_reg_496.read()) + sc_biguint<14>(tmp_70_cast_fu_296_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_178_fu_332_p3() {
    tmp_178_fu_332_p3 = esl_concat<5,4>(ci_reg_147.read(), ap_const_lv4_0);
}

void subconv_1x1_16_p::thread_tmp_179_fu_344_p3() {
    tmp_179_fu_344_p3 = esl_concat<5,1>(ci_reg_147.read(), ap_const_lv1_0);
}

void subconv_1x1_16_p::thread_tmp_180_fu_356_p2() {
    tmp_180_fu_356_p2 = (!p_shl8_cast_fu_340_p1.read().is_01() || !p_shl9_cast_fu_352_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl8_cast_fu_340_p1.read()) + sc_biguint<10>(p_shl9_cast_fu_352_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_181_fu_362_p2() {
    tmp_181_fu_362_p2 = (!tmp_cast_reg_491.read().is_01() || !tmp_180_fu_356_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_cast_reg_491.read()) + sc_biguint<10>(tmp_180_fu_356_p2.read()));
}

void subconv_1x1_16_p::thread_tmp_182_fu_387_p2() {
    tmp_182_fu_387_p2 = (!p_shl6_cast_fu_367_p3.read().is_01() || !p_shl7_cast_fu_383_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl6_cast_fu_367_p3.read()) + sc_biguint<14>(p_shl7_cast_fu_383_p1.read()));
}

void subconv_1x1_16_p::thread_tmp_183_fu_393_p2() {
    tmp_183_fu_393_p2 = (!tmp_70_cast_reg_504.read().is_01() || !tmp_182_fu_387_p2.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_70_cast_reg_504.read()) + sc_biguint<14>(tmp_182_fu_387_p2.read()));
}

void subconv_1x1_16_p::thread_tmp_184_fu_398_p2() {
    tmp_184_fu_398_p2 = (!tmp_71_cast_fu_328_p1.read().is_01() || !tmp_171_reg_473.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_71_cast_fu_328_p1.read()) + sc_biguint<11>(tmp_171_reg_473.read()));
}

void subconv_1x1_16_p::thread_tmp_244_cast_fu_305_p1() {
    tmp_244_cast_fu_305_p1 = esl_zext<64,14>(tmp_177_fu_300_p2.read());
}

void subconv_1x1_16_p::thread_tmp_252_cast_fu_409_p1() {
    tmp_252_cast_fu_409_p1 = esl_zext<64,14>(tmp_183_reg_527.read());
}

void subconv_1x1_16_p::thread_tmp_253_cast_fu_413_p1() {
    tmp_253_cast_fu_413_p1 = esl_sext<64,11>(tmp_184_reg_532.read());
}

void subconv_1x1_16_p::thread_tmp_26_fu_420_p4() {
    tmp_26_fu_420_p4 = result_to_int_fu_417_p1.read().range(30, 23);
}

void subconv_1x1_16_p::thread_tmp_28_fu_446_p2() {
    tmp_28_fu_446_p2 = (notrhs_fu_440_p2.read() | notlhs_fu_434_p2.read());
}

void subconv_1x1_16_p::thread_tmp_30_fu_452_p2() {
    tmp_30_fu_452_p2 = (tmp_28_fu_446_p2.read() & tmp_29_reg_584.read());
}

void subconv_1x1_16_p::thread_tmp_70_cast_fu_296_p1() {
    tmp_70_cast_fu_296_p1 = esl_zext<14,5>(w_reg_123.read());
}

void subconv_1x1_16_p::thread_tmp_71_cast_fu_328_p1() {
    tmp_71_cast_fu_328_p1 = esl_zext<11,5>(ci_reg_147.read());
}

void subconv_1x1_16_p::thread_tmp_73_fu_272_p3() {
    tmp_73_fu_272_p3 = esl_concat<10,1>(tmp_175_fu_259_p2.read(), ap_const_lv1_0);
}

void subconv_1x1_16_p::thread_tmp_74_fu_430_p1() {
    tmp_74_fu_430_p1 = result_to_int_fu_417_p1.read().range(23-1, 0);
}

void subconv_1x1_16_p::thread_tmp_75_fu_375_p3() {
    tmp_75_fu_375_p3 = esl_concat<10,1>(tmp_181_fu_362_p2.read(), ap_const_lv1_0);
}

void subconv_1x1_16_p::thread_tmp_cast_fu_255_p1() {
    tmp_cast_fu_255_p1 = esl_zext<10,5>(h_reg_111.read());
}

void subconv_1x1_16_p::thread_tmp_fu_184_p1() {
    tmp_fu_184_p1 = esl_zext<64,5>(co_reg_100.read());
}

void subconv_1x1_16_p::thread_tmp_s_fu_189_p3() {
    tmp_s_fu_189_p3 = esl_concat<5,5>(co_reg_100.read(), ap_const_lv5_0);
}

void subconv_1x1_16_p::thread_w_12_fu_403_p2() {
    w_12_fu_403_p2 = (!ap_const_lv5_1.is_01() || !w_reg_123.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(w_reg_123.read()));
}

void subconv_1x1_16_p::thread_weight_address0() {
    weight_address0 =  (sc_lv<10>) (tmp_253_cast_fu_413_p1.read());
}

void subconv_1x1_16_p::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_16_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_172_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_290_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_316_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

