// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv1_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv1_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv1_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> conv1_p::ap_ST_fsm_state1 = "1";
const sc_lv<23> conv1_p::ap_ST_fsm_state2 = "10";
const sc_lv<23> conv1_p::ap_ST_fsm_state3 = "100";
const sc_lv<23> conv1_p::ap_ST_fsm_state4 = "1000";
const sc_lv<23> conv1_p::ap_ST_fsm_state5 = "10000";
const sc_lv<23> conv1_p::ap_ST_fsm_state6 = "100000";
const sc_lv<23> conv1_p::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> conv1_p::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> conv1_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> conv1_p::ap_const_lv1_0 = "0";
const sc_lv<3> conv1_p::ap_const_lv3_0 = "000";
const sc_lv<2> conv1_p::ap_const_lv2_0 = "00";
const sc_lv<4> conv1_p::ap_const_lv4_0 = "0000";
const sc_lv<8> conv1_p::ap_const_lv8_0 = "00000000";
const sc_lv<32> conv1_p::ap_const_lv32_6 = "110";
const sc_lv<32> conv1_p::ap_const_lv32_F = "1111";
const sc_lv<32> conv1_p::ap_const_lv32_1 = "1";
const sc_lv<32> conv1_p::ap_const_lv32_2 = "10";
const sc_lv<32> conv1_p::ap_const_lv32_3 = "11";
const sc_lv<1> conv1_p::ap_const_lv1_1 = "1";
const sc_lv<32> conv1_p::ap_const_lv32_4 = "100";
const sc_lv<32> conv1_p::ap_const_lv32_5 = "101";
const sc_lv<32> conv1_p::ap_const_lv32_C = "1100";
const sc_lv<32> conv1_p::ap_const_lv32_D = "1101";
const sc_lv<32> conv1_p::ap_const_lv32_E = "1110";
const sc_lv<32> conv1_p::ap_const_lv32_10 = "10000";
const sc_lv<32> conv1_p::ap_const_lv32_11 = "10001";
const sc_lv<32> conv1_p::ap_const_lv32_12 = "10010";
const sc_lv<32> conv1_p::ap_const_lv32_13 = "10011";
const sc_lv<32> conv1_p::ap_const_lv32_14 = "10100";
const sc_lv<32> conv1_p::ap_const_lv32_15 = "10101";
const sc_lv<32> conv1_p::ap_const_lv32_16 = "10110";
const sc_lv<5> conv1_p::ap_const_lv5_0 = "00000";
const sc_lv<6> conv1_p::ap_const_lv6_1 = "1";
const sc_lv<5> conv1_p::ap_const_lv5_18 = "11000";
const sc_lv<5> conv1_p::ap_const_lv5_1 = "1";
const sc_lv<6> conv1_p::ap_const_lv6_21 = "100001";
const sc_lv<2> conv1_p::ap_const_lv2_3 = "11";
const sc_lv<2> conv1_p::ap_const_lv2_1 = "1";
const sc_lv<64> conv1_p::ap_const_lv64_2 = "10";
const sc_lv<6> conv1_p::ap_const_lv6_0 = "000000";
const sc_lv<32> conv1_p::ap_const_lv32_7 = "111";
const sc_lv<8> conv1_p::ap_const_lv8_7F = "1111111";
const sc_lv<8> conv1_p::ap_const_lv8_80 = "10000000";
const sc_lv<32> conv1_p::ap_const_lv32_8 = "1000";
const sc_lv<7> conv1_p::ap_const_lv7_0 = "0000000";
const bool conv1_p::ap_const_boolean_1 = true;

conv1_p::conv1_p(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range1_all_ones_fu_725_p2);
    sensitive << ( tmp_185_reg_1123 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_Range1_all_zeros_fu_730_p2);
    sensitive << ( carry_reg_1116 );
    sensitive << ( tmp_185_reg_1123 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_283_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_283_p2 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_weight_V_ARREADY);
    sensitive << ( m_axi_weight_V_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_bias_V_address0);
    sensitive << ( bias_V_addr_reg_990 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_brmerge40_demorgan_i_fu_787_p2);
    sensitive << ( newsignbit_reg_1110 );
    sensitive << ( deleted_ones_fu_753_p3 );

    SC_METHOD(thread_brmerge9_fu_899_p2);
    sensitive << ( newsignbit_15_reg_1172 );
    sensitive << ( isneg_not_fu_894_p2 );

    SC_METHOD(thread_brmerge_i_i6_fu_771_p2);
    sensitive << ( newsignbit_reg_1110 );
    sensitive << ( p_not_i_i_fu_765_p2 );

    SC_METHOD(thread_brmerge_i_i_fu_890_p2);
    sensitive << ( isneg_reg_1159 );
    sensitive << ( newsignbit_15_reg_1172 );

    SC_METHOD(thread_brmerge_i_i_i_fu_809_p2);
    sensitive << ( underflow_fu_804_p2 );
    sensitive << ( overflow_fu_781_p2 );

    SC_METHOD(thread_carry_fu_702_p2);
    sensitive << ( tmp_307_fu_674_p3 );
    sensitive << ( tmp_218_fu_696_p2 );

    SC_METHOD(thread_ci_9_fu_415_p2);
    sensitive << ( ci_reg_222 );

    SC_METHOD(thread_co_24_fu_289_p2);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_deleted_ones_fu_753_p3);
    sensitive << ( carry_reg_1116 );
    sensitive << ( Range1_all_ones_fu_725_p2 );
    sensitive << ( p_41_i_i_fu_748_p2 );

    SC_METHOD(thread_deleted_zeros_fu_735_p3);
    sensitive << ( carry_reg_1116 );
    sensitive << ( Range1_all_ones_fu_725_p2 );
    sensitive << ( Range1_all_zeros_fu_730_p2 );

    SC_METHOD(thread_exitcond2_fu_283_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_exitcond3_fu_356_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_186 );

    SC_METHOD(thread_exitcond4_fu_397_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_198 );

    SC_METHOD(thread_exitcond5_fu_409_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_222 );

    SC_METHOD(thread_exitcond6_fu_482_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( m_reg_245 );

    SC_METHOD(thread_exitcond_fu_575_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( n_reg_268 );

    SC_METHOD(thread_h_23_fu_403_p2);
    sensitive << ( h_reg_186 );

    SC_METHOD(thread_input_V_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_458_cast_fu_612_p1 );

    SC_METHOD(thread_input_V_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_isneg_not_fu_894_p2);
    sensitive << ( isneg_reg_1159 );

    SC_METHOD(thread_m_7_fu_488_p2);
    sensitive << ( m_reg_245 );

    SC_METHOD(thread_m_axi_weight_V_ARADDR);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( weight_V_addr_reg_1043 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_ARBURST);

    SC_METHOD(thread_m_axi_weight_V_ARCACHE);

    SC_METHOD(thread_m_axi_weight_V_ARID);

    SC_METHOD(thread_m_axi_weight_V_ARLEN);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_ARLOCK);

    SC_METHOD(thread_m_axi_weight_V_ARPROT);

    SC_METHOD(thread_m_axi_weight_V_ARQOS);

    SC_METHOD(thread_m_axi_weight_V_ARREGION);

    SC_METHOD(thread_m_axi_weight_V_ARSIZE);

    SC_METHOD(thread_m_axi_weight_V_ARUSER);

    SC_METHOD(thread_m_axi_weight_V_ARVALID);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_reg_ioackin_m_axi_weight_V_ARREADY );

    SC_METHOD(thread_m_axi_weight_V_AWADDR);

    SC_METHOD(thread_m_axi_weight_V_AWBURST);

    SC_METHOD(thread_m_axi_weight_V_AWCACHE);

    SC_METHOD(thread_m_axi_weight_V_AWID);

    SC_METHOD(thread_m_axi_weight_V_AWLEN);

    SC_METHOD(thread_m_axi_weight_V_AWLOCK);

    SC_METHOD(thread_m_axi_weight_V_AWPROT);

    SC_METHOD(thread_m_axi_weight_V_AWQOS);

    SC_METHOD(thread_m_axi_weight_V_AWREGION);

    SC_METHOD(thread_m_axi_weight_V_AWSIZE);

    SC_METHOD(thread_m_axi_weight_V_AWUSER);

    SC_METHOD(thread_m_axi_weight_V_AWVALID);

    SC_METHOD(thread_m_axi_weight_V_BREADY);

    SC_METHOD(thread_m_axi_weight_V_RREADY);
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_m_axi_weight_V_WDATA);

    SC_METHOD(thread_m_axi_weight_V_WID);

    SC_METHOD(thread_m_axi_weight_V_WLAST);

    SC_METHOD(thread_m_axi_weight_V_WSTRB);

    SC_METHOD(thread_m_axi_weight_V_WUSER);

    SC_METHOD(thread_m_axi_weight_V_WVALID);

    SC_METHOD(thread_n_7_fu_581_p2);
    sensitive << ( n_reg_268 );

    SC_METHOD(thread_newsignbit_fu_688_p3);
    sensitive << ( p_Val2_106_fu_682_p2 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_443_cast_fu_945_p1 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( p_s_fu_950_p3 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_overflow_fu_781_p2);
    sensitive << ( tmp_220_fu_776_p2 );
    sensitive << ( brmerge_i_i6_fu_771_p2 );

    SC_METHOD(thread_p_38_i_i_fu_760_p2);
    sensitive << ( carry_reg_1116 );
    sensitive << ( Range1_all_ones_fu_725_p2 );

    SC_METHOD(thread_p_41_i_i_fu_748_p2);
    sensitive << ( signbit_reg_1097 );
    sensitive << ( tmp_219_fu_742_p2 );

    SC_METHOD(thread_p_Val2_101_fu_852_p2);
    sensitive << ( tmp_204_fu_844_p1 );
    sensitive << ( tmp_205_fu_848_p1 );

    SC_METHOD(thread_p_Val2_104_fu_648_p2);
    sensitive << ( p_Val2_6_reg_1082 );
    sensitive << ( tmp_316_cast_fu_644_p1 );

    SC_METHOD(thread_p_Val2_105_fu_661_p4);
    sensitive << ( p_Val2_104_fu_648_p2 );

    SC_METHOD(thread_p_Val2_106_fu_682_p2);
    sensitive << ( p_Val2_105_fu_661_p4 );
    sensitive << ( tmp_217_fu_671_p1 );

    SC_METHOD(thread_p_Val2_112_mux_fu_824_p3);
    sensitive << ( p_Val2_106_reg_1104 );
    sensitive << ( brmerge_i_i_i_reg_1149 );

    SC_METHOD(thread_p_Val2_6_fu_622_p0);
    sensitive << ( weight_V_addr_read_reg_1072 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_p_Val2_6_fu_622_p1);
    sensitive << ( input_V_load_reg_1077 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_p_Val2_6_fu_622_p2);
    sensitive << ( p_Val2_6_fu_622_p0 );
    sensitive << ( p_Val2_6_fu_622_p1 );

    SC_METHOD(thread_p_Val2_s_102_fu_830_p3);
    sensitive << ( p_Val2_106_reg_1104 );
    sensitive << ( underflow_reg_1144 );

    SC_METHOD(thread_p_not_i_i_fu_765_p2);
    sensitive << ( deleted_zeros_fu_735_p3 );

    SC_METHOD(thread_p_result_V_fu_911_p3);
    sensitive << ( result_V_reg_1166 );
    sensitive << ( underflow_15_fu_885_p2 );

    SC_METHOD(thread_p_s_fu_950_p3);
    sensitive << ( tmp_300_reg_1179 );
    sensitive << ( tmp_208_reg_1184 );

    SC_METHOD(thread_p_shl1_cast_fu_346_p1);
    sensitive << ( tmp_348_fu_338_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_312_p1);
    sensitive << ( tmp_s_fu_304_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_371_p3);
    sensitive << ( tmp_350_fu_366_p2 );

    SC_METHOD(thread_p_shl4_cast_fu_387_p1);
    sensitive << ( tmp_297_fu_379_p3 );

    SC_METHOD(thread_p_shl5_fu_472_p1);
    sensitive << ( tmp_301_fu_464_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_433_p1);
    sensitive << ( tmp_353_fu_425_p3 );

    SC_METHOD(thread_p_shl7_cast_fu_445_p1);
    sensitive << ( tmp_354_fu_437_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_551_p3);
    sensitive << ( tmp_360_reg_1037 );

    SC_METHOD(thread_p_shl9_cast_fu_565_p1);
    sensitive << ( tmp_303_fu_558_p3 );

    SC_METHOD(thread_p_shl_cast_fu_334_p1);
    sensitive << ( tmp_347_fu_326_p3 );

    SC_METHOD(thread_result_1_fu_918_p3);
    sensitive << ( brmerge9_fu_899_p2 );
    sensitive << ( result_V_mux_fu_904_p3 );
    sensitive << ( p_result_V_fu_911_p3 );

    SC_METHOD(thread_result_V_fu_866_p2);
    sensitive << ( bias_V_q0 );
    sensitive << ( p_Val2_s_reg_210 );

    SC_METHOD(thread_result_V_mux_fu_904_p3);
    sensitive << ( result_V_reg_1166 );
    sensitive << ( brmerge_i_i_fu_890_p2 );

    SC_METHOD(thread_sext_fu_279_p1);
    sensitive << ( conv1_weight_V3 );

    SC_METHOD(thread_sum_V_fu_836_p3);
    sensitive << ( underflow_not_fu_819_p2 );
    sensitive << ( p_Val2_112_mux_fu_824_p3 );
    sensitive << ( p_Val2_s_102_fu_830_p3 );

    SC_METHOD(thread_tmp2_cast_fu_521_p1);
    sensitive << ( tmp2_fu_515_p2 );

    SC_METHOD(thread_tmp2_fu_515_p2);
    sensitive << ( m_reg_245 );

    SC_METHOD(thread_tmp3_cast_fu_593_p1);
    sensitive << ( tmp3_fu_587_p2 );

    SC_METHOD(thread_tmp3_fu_587_p2);
    sensitive << ( n_reg_268 );

    SC_METHOD(thread_tmp4_demorgan_fu_792_p2);
    sensitive << ( p_38_i_i_fu_760_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_787_p2 );

    SC_METHOD(thread_tmp4_fu_798_p2);
    sensitive << ( tmp4_demorgan_fu_792_p2 );

    SC_METHOD(thread_tmp5_fu_815_p2);
    sensitive << ( tmp_220_reg_1134 );
    sensitive << ( brmerge40_demorgan_i_reg_1139 );

    SC_METHOD(thread_tmp_204_fu_844_p1);
    sensitive << ( p_Val2_s_reg_210 );

    SC_METHOD(thread_tmp_205_fu_848_p1);
    sensitive << ( bias_V_q0 );

    SC_METHOD(thread_tmp_206_fu_880_p2);
    sensitive << ( newsignbit_15_reg_1172 );

    SC_METHOD(thread_tmp_207_cast_fu_936_p1);
    sensitive << ( w_reg_198 );

    SC_METHOD(thread_tmp_208_fu_930_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( result_1_fu_918_p3 );

    SC_METHOD(thread_tmp_209_cast_fu_421_p1);
    sensitive << ( ci_reg_222 );

    SC_METHOD(thread_tmp_210_fu_494_p1);
    sensitive << ( m_reg_245 );

    SC_METHOD(thread_tmp_211_fu_525_p2);
    sensitive << ( h_reg_186 );
    sensitive << ( tmp2_cast_fu_521_p1 );

    SC_METHOD(thread_tmp_212_cast_fu_531_p1);
    sensitive << ( tmp_211_fu_525_p2 );

    SC_METHOD(thread_tmp_214_fu_597_p2);
    sensitive << ( w_reg_198 );
    sensitive << ( tmp3_cast_fu_593_p1 );

    SC_METHOD(thread_tmp_215_cast_fu_603_p1);
    sensitive << ( tmp_214_fu_597_p2 );

    SC_METHOD(thread_tmp_216_fu_636_p3);
    sensitive << ( p_Val2_103_reg_256 );

    SC_METHOD(thread_tmp_217_fu_671_p1);
    sensitive << ( tmp_306_reg_1087 );

    SC_METHOD(thread_tmp_218_fu_696_p2);
    sensitive << ( newsignbit_fu_688_p3 );

    SC_METHOD(thread_tmp_219_fu_742_p2);
    sensitive << ( tmp_309_fu_718_p3 );

    SC_METHOD(thread_tmp_220_fu_776_p2);
    sensitive << ( signbit_reg_1097 );

    SC_METHOD(thread_tmp_297_fu_379_p3);
    sensitive << ( tmp_350_fu_366_p2 );

    SC_METHOD(thread_tmp_300_fu_926_p1);
    sensitive << ( result_1_fu_918_p3 );

    SC_METHOD(thread_tmp_301_fu_464_p3);
    sensitive << ( tmp_356_fu_455_p2 );

    SC_METHOD(thread_tmp_302_fu_503_p2);
    sensitive << ( tmp_358_fu_498_p2 );

    SC_METHOD(thread_tmp_303_fu_558_p3);
    sensitive << ( tmp_360_reg_1037 );

    SC_METHOD(thread_tmp_304_fu_540_p2);
    sensitive << ( sext_reg_967 );
    sensitive << ( tmp_359_fu_509_p2 );

    SC_METHOD(thread_tmp_307_fu_674_p3);
    sensitive << ( p_Val2_104_fu_648_p2 );

    SC_METHOD(thread_tmp_309_fu_718_p3);
    sensitive << ( p_Val2_104_reg_1092 );

    SC_METHOD(thread_tmp_316_cast_fu_644_p1);
    sensitive << ( tmp_216_fu_636_p3 );

    SC_METHOD(thread_tmp_346_fu_316_p2);
    sensitive << ( p_shl2_cast_fu_312_p1 );
    sensitive << ( tmp_cast_fu_300_p1 );

    SC_METHOD(thread_tmp_347_fu_326_p3);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_tmp_348_fu_338_p3);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_tmp_349_fu_350_p2);
    sensitive << ( p_shl1_cast_fu_346_p1 );
    sensitive << ( p_shl_cast_fu_334_p1 );

    SC_METHOD(thread_tmp_350_fu_366_p2);
    sensitive << ( tmp_349_reg_985 );
    sensitive << ( tmp_cast_97_fu_362_p1 );

    SC_METHOD(thread_tmp_351_fu_391_p2);
    sensitive << ( p_shl3_cast_fu_371_p3 );
    sensitive << ( p_shl4_cast_fu_387_p1 );

    SC_METHOD(thread_tmp_352_fu_940_p2);
    sensitive << ( tmp_351_reg_998 );
    sensitive << ( tmp_207_cast_fu_936_p1 );

    SC_METHOD(thread_tmp_353_fu_425_p3);
    sensitive << ( ci_reg_222 );

    SC_METHOD(thread_tmp_354_fu_437_p3);
    sensitive << ( ci_reg_222 );

    SC_METHOD(thread_tmp_355_fu_449_p2);
    sensitive << ( p_shl7_cast_fu_445_p1 );
    sensitive << ( p_shl6_cast_fu_433_p1 );

    SC_METHOD(thread_tmp_356_fu_455_p2);
    sensitive << ( tmp_435_cast_reg_980 );
    sensitive << ( tmp_209_cast_fu_421_p1 );

    SC_METHOD(thread_tmp_357_fu_476_p2);
    sensitive << ( p_shl5_fu_472_p1 );
    sensitive << ( tmp_447_cast_fu_460_p1 );

    SC_METHOD(thread_tmp_358_fu_498_p2);
    sensitive << ( tmp_357_reg_1024 );
    sensitive << ( tmp_210_fu_494_p1 );

    SC_METHOD(thread_tmp_359_fu_509_p2);
    sensitive << ( tmp_358_fu_498_p2 );
    sensitive << ( tmp_302_fu_503_p2 );

    SC_METHOD(thread_tmp_360_fu_535_p2);
    sensitive << ( tmp_355_reg_1019 );
    sensitive << ( tmp_212_cast_fu_531_p1 );

    SC_METHOD(thread_tmp_361_fu_569_p2);
    sensitive << ( p_shl9_cast_fu_565_p1 );
    sensitive << ( p_shl8_cast_fu_551_p3 );

    SC_METHOD(thread_tmp_362_fu_607_p2);
    sensitive << ( tmp_361_reg_1049 );
    sensitive << ( tmp_215_cast_fu_603_p1 );

    SC_METHOD(thread_tmp_435_cast_fu_322_p1);
    sensitive << ( tmp_346_fu_316_p2 );

    SC_METHOD(thread_tmp_443_cast_fu_945_p1);
    sensitive << ( tmp_352_fu_940_p2 );

    SC_METHOD(thread_tmp_447_cast_fu_460_p1);
    sensitive << ( tmp_356_fu_455_p2 );

    SC_METHOD(thread_tmp_458_cast_fu_612_p1);
    sensitive << ( tmp_362_reg_1062 );

    SC_METHOD(thread_tmp_cast_97_fu_362_p1);
    sensitive << ( h_reg_186 );

    SC_METHOD(thread_tmp_cast_fu_300_p1);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_tmp_fu_295_p1);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_tmp_s_fu_304_p3);
    sensitive << ( co_reg_175 );

    SC_METHOD(thread_underflow_15_fu_885_p2);
    sensitive << ( isneg_reg_1159 );
    sensitive << ( tmp_206_fu_880_p2 );

    SC_METHOD(thread_underflow_fu_804_p2);
    sensitive << ( signbit_reg_1097 );
    sensitive << ( tmp4_fu_798_p2 );

    SC_METHOD(thread_underflow_not_fu_819_p2);
    sensitive << ( p_38_i_i_reg_1129 );
    sensitive << ( tmp5_fu_815_p2 );

    SC_METHOD(thread_w_23_fu_961_p2);
    sensitive << ( w_reg_198 );

    SC_METHOD(thread_weight_V_blk_n_AR);
    sensitive << ( m_axi_weight_V_ARREADY );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_weight_V_blk_n_R);
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_weight_V_RVALID );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_283_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_356_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond4_fu_397_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond5_fu_409_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond6_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_575_p2 );
    sensitive << ( ap_sig_ioackin_m_axi_weight_V_ARREADY );

    ap_CS_fsm = "00000000000000000000001";
    ap_reg_ioackin_m_axi_weight_V_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv1_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_V_address0, "(port)input_V_address0");
    sc_trace(mVcdFile, input_V_ce0, "(port)input_V_ce0");
    sc_trace(mVcdFile, input_V_q0, "(port)input_V_q0");
    sc_trace(mVcdFile, m_axi_weight_V_AWVALID, "(port)m_axi_weight_V_AWVALID");
    sc_trace(mVcdFile, m_axi_weight_V_AWREADY, "(port)m_axi_weight_V_AWREADY");
    sc_trace(mVcdFile, m_axi_weight_V_AWADDR, "(port)m_axi_weight_V_AWADDR");
    sc_trace(mVcdFile, m_axi_weight_V_AWID, "(port)m_axi_weight_V_AWID");
    sc_trace(mVcdFile, m_axi_weight_V_AWLEN, "(port)m_axi_weight_V_AWLEN");
    sc_trace(mVcdFile, m_axi_weight_V_AWSIZE, "(port)m_axi_weight_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_weight_V_AWBURST, "(port)m_axi_weight_V_AWBURST");
    sc_trace(mVcdFile, m_axi_weight_V_AWLOCK, "(port)m_axi_weight_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_weight_V_AWCACHE, "(port)m_axi_weight_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_weight_V_AWPROT, "(port)m_axi_weight_V_AWPROT");
    sc_trace(mVcdFile, m_axi_weight_V_AWQOS, "(port)m_axi_weight_V_AWQOS");
    sc_trace(mVcdFile, m_axi_weight_V_AWREGION, "(port)m_axi_weight_V_AWREGION");
    sc_trace(mVcdFile, m_axi_weight_V_AWUSER, "(port)m_axi_weight_V_AWUSER");
    sc_trace(mVcdFile, m_axi_weight_V_WVALID, "(port)m_axi_weight_V_WVALID");
    sc_trace(mVcdFile, m_axi_weight_V_WREADY, "(port)m_axi_weight_V_WREADY");
    sc_trace(mVcdFile, m_axi_weight_V_WDATA, "(port)m_axi_weight_V_WDATA");
    sc_trace(mVcdFile, m_axi_weight_V_WSTRB, "(port)m_axi_weight_V_WSTRB");
    sc_trace(mVcdFile, m_axi_weight_V_WLAST, "(port)m_axi_weight_V_WLAST");
    sc_trace(mVcdFile, m_axi_weight_V_WID, "(port)m_axi_weight_V_WID");
    sc_trace(mVcdFile, m_axi_weight_V_WUSER, "(port)m_axi_weight_V_WUSER");
    sc_trace(mVcdFile, m_axi_weight_V_ARVALID, "(port)m_axi_weight_V_ARVALID");
    sc_trace(mVcdFile, m_axi_weight_V_ARREADY, "(port)m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, m_axi_weight_V_ARADDR, "(port)m_axi_weight_V_ARADDR");
    sc_trace(mVcdFile, m_axi_weight_V_ARID, "(port)m_axi_weight_V_ARID");
    sc_trace(mVcdFile, m_axi_weight_V_ARLEN, "(port)m_axi_weight_V_ARLEN");
    sc_trace(mVcdFile, m_axi_weight_V_ARSIZE, "(port)m_axi_weight_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_weight_V_ARBURST, "(port)m_axi_weight_V_ARBURST");
    sc_trace(mVcdFile, m_axi_weight_V_ARLOCK, "(port)m_axi_weight_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_weight_V_ARCACHE, "(port)m_axi_weight_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_weight_V_ARPROT, "(port)m_axi_weight_V_ARPROT");
    sc_trace(mVcdFile, m_axi_weight_V_ARQOS, "(port)m_axi_weight_V_ARQOS");
    sc_trace(mVcdFile, m_axi_weight_V_ARREGION, "(port)m_axi_weight_V_ARREGION");
    sc_trace(mVcdFile, m_axi_weight_V_ARUSER, "(port)m_axi_weight_V_ARUSER");
    sc_trace(mVcdFile, m_axi_weight_V_RVALID, "(port)m_axi_weight_V_RVALID");
    sc_trace(mVcdFile, m_axi_weight_V_RREADY, "(port)m_axi_weight_V_RREADY");
    sc_trace(mVcdFile, m_axi_weight_V_RDATA, "(port)m_axi_weight_V_RDATA");
    sc_trace(mVcdFile, m_axi_weight_V_RLAST, "(port)m_axi_weight_V_RLAST");
    sc_trace(mVcdFile, m_axi_weight_V_RID, "(port)m_axi_weight_V_RID");
    sc_trace(mVcdFile, m_axi_weight_V_RUSER, "(port)m_axi_weight_V_RUSER");
    sc_trace(mVcdFile, m_axi_weight_V_RRESP, "(port)m_axi_weight_V_RRESP");
    sc_trace(mVcdFile, m_axi_weight_V_BVALID, "(port)m_axi_weight_V_BVALID");
    sc_trace(mVcdFile, m_axi_weight_V_BREADY, "(port)m_axi_weight_V_BREADY");
    sc_trace(mVcdFile, m_axi_weight_V_BRESP, "(port)m_axi_weight_V_BRESP");
    sc_trace(mVcdFile, m_axi_weight_V_BID, "(port)m_axi_weight_V_BID");
    sc_trace(mVcdFile, m_axi_weight_V_BUSER, "(port)m_axi_weight_V_BUSER");
    sc_trace(mVcdFile, conv1_weight_V3, "(port)conv1_weight_V3");
    sc_trace(mVcdFile, bias_V_address0, "(port)bias_V_address0");
    sc_trace(mVcdFile, bias_V_ce0, "(port)bias_V_ce0");
    sc_trace(mVcdFile, bias_V_q0, "(port)bias_V_q0");
    sc_trace(mVcdFile, output_V_address0, "(port)output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "(port)output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "(port)output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "(port)output_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, weight_V_blk_n_AR, "weight_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, weight_V_blk_n_R, "weight_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, sext_fu_279_p1, "sext_fu_279_p1");
    sc_trace(mVcdFile, sext_reg_967, "sext_reg_967");
    sc_trace(mVcdFile, co_24_fu_289_p2, "co_24_fu_289_p2");
    sc_trace(mVcdFile, co_24_reg_975, "co_24_reg_975");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_435_cast_fu_322_p1, "tmp_435_cast_fu_322_p1");
    sc_trace(mVcdFile, tmp_435_cast_reg_980, "tmp_435_cast_reg_980");
    sc_trace(mVcdFile, exitcond2_fu_283_p2, "exitcond2_fu_283_p2");
    sc_trace(mVcdFile, tmp_349_fu_350_p2, "tmp_349_fu_350_p2");
    sc_trace(mVcdFile, tmp_349_reg_985, "tmp_349_reg_985");
    sc_trace(mVcdFile, bias_V_addr_reg_990, "bias_V_addr_reg_990");
    sc_trace(mVcdFile, tmp_351_fu_391_p2, "tmp_351_fu_391_p2");
    sc_trace(mVcdFile, tmp_351_reg_998, "tmp_351_reg_998");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_356_p2, "exitcond3_fu_356_p2");
    sc_trace(mVcdFile, h_23_fu_403_p2, "h_23_fu_403_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond4_fu_397_p2, "exitcond4_fu_397_p2");
    sc_trace(mVcdFile, ci_9_fu_415_p2, "ci_9_fu_415_p2");
    sc_trace(mVcdFile, ci_9_reg_1014, "ci_9_reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_355_fu_449_p2, "tmp_355_fu_449_p2");
    sc_trace(mVcdFile, tmp_355_reg_1019, "tmp_355_reg_1019");
    sc_trace(mVcdFile, exitcond5_fu_409_p2, "exitcond5_fu_409_p2");
    sc_trace(mVcdFile, tmp_357_fu_476_p2, "tmp_357_fu_476_p2");
    sc_trace(mVcdFile, tmp_357_reg_1024, "tmp_357_reg_1024");
    sc_trace(mVcdFile, m_7_fu_488_p2, "m_7_fu_488_p2");
    sc_trace(mVcdFile, m_7_reg_1032, "m_7_reg_1032");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_360_fu_535_p2, "tmp_360_fu_535_p2");
    sc_trace(mVcdFile, tmp_360_reg_1037, "tmp_360_reg_1037");
    sc_trace(mVcdFile, exitcond6_fu_482_p2, "exitcond6_fu_482_p2");
    sc_trace(mVcdFile, weight_V_addr_reg_1043, "weight_V_addr_reg_1043");
    sc_trace(mVcdFile, tmp_361_fu_569_p2, "tmp_361_fu_569_p2");
    sc_trace(mVcdFile, tmp_361_reg_1049, "tmp_361_reg_1049");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, n_7_fu_581_p2, "n_7_fu_581_p2");
    sc_trace(mVcdFile, n_7_reg_1057, "n_7_reg_1057");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_362_fu_607_p2, "tmp_362_fu_607_p2");
    sc_trace(mVcdFile, tmp_362_reg_1062, "tmp_362_reg_1062");
    sc_trace(mVcdFile, exitcond_fu_575_p2, "exitcond_fu_575_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, weight_V_addr_read_reg_1072, "weight_V_addr_read_reg_1072");
    sc_trace(mVcdFile, input_V_load_reg_1077, "input_V_load_reg_1077");
    sc_trace(mVcdFile, p_Val2_6_fu_622_p2, "p_Val2_6_fu_622_p2");
    sc_trace(mVcdFile, p_Val2_6_reg_1082, "p_Val2_6_reg_1082");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_306_reg_1087, "tmp_306_reg_1087");
    sc_trace(mVcdFile, p_Val2_104_fu_648_p2, "p_Val2_104_fu_648_p2");
    sc_trace(mVcdFile, p_Val2_104_reg_1092, "p_Val2_104_reg_1092");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, signbit_reg_1097, "signbit_reg_1097");
    sc_trace(mVcdFile, p_Val2_106_fu_682_p2, "p_Val2_106_fu_682_p2");
    sc_trace(mVcdFile, p_Val2_106_reg_1104, "p_Val2_106_reg_1104");
    sc_trace(mVcdFile, newsignbit_fu_688_p3, "newsignbit_fu_688_p3");
    sc_trace(mVcdFile, newsignbit_reg_1110, "newsignbit_reg_1110");
    sc_trace(mVcdFile, carry_fu_702_p2, "carry_fu_702_p2");
    sc_trace(mVcdFile, carry_reg_1116, "carry_reg_1116");
    sc_trace(mVcdFile, tmp_185_reg_1123, "tmp_185_reg_1123");
    sc_trace(mVcdFile, p_38_i_i_fu_760_p2, "p_38_i_i_fu_760_p2");
    sc_trace(mVcdFile, p_38_i_i_reg_1129, "p_38_i_i_reg_1129");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_220_fu_776_p2, "tmp_220_fu_776_p2");
    sc_trace(mVcdFile, tmp_220_reg_1134, "tmp_220_reg_1134");
    sc_trace(mVcdFile, brmerge40_demorgan_i_fu_787_p2, "brmerge40_demorgan_i_fu_787_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_reg_1139, "brmerge40_demorgan_i_reg_1139");
    sc_trace(mVcdFile, underflow_fu_804_p2, "underflow_fu_804_p2");
    sc_trace(mVcdFile, underflow_reg_1144, "underflow_reg_1144");
    sc_trace(mVcdFile, brmerge_i_i_i_fu_809_p2, "brmerge_i_i_i_fu_809_p2");
    sc_trace(mVcdFile, brmerge_i_i_i_reg_1149, "brmerge_i_i_i_reg_1149");
    sc_trace(mVcdFile, sum_V_fu_836_p3, "sum_V_fu_836_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, isneg_reg_1159, "isneg_reg_1159");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, result_V_fu_866_p2, "result_V_fu_866_p2");
    sc_trace(mVcdFile, result_V_reg_1166, "result_V_reg_1166");
    sc_trace(mVcdFile, newsignbit_15_reg_1172, "newsignbit_15_reg_1172");
    sc_trace(mVcdFile, tmp_300_fu_926_p1, "tmp_300_fu_926_p1");
    sc_trace(mVcdFile, tmp_300_reg_1179, "tmp_300_reg_1179");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_208_fu_930_p2, "tmp_208_fu_930_p2");
    sc_trace(mVcdFile, tmp_208_reg_1184, "tmp_208_reg_1184");
    sc_trace(mVcdFile, w_23_fu_961_p2, "w_23_fu_961_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, co_reg_175, "co_reg_175");
    sc_trace(mVcdFile, h_reg_186, "h_reg_186");
    sc_trace(mVcdFile, w_reg_198, "w_reg_198");
    sc_trace(mVcdFile, p_Val2_s_reg_210, "p_Val2_s_reg_210");
    sc_trace(mVcdFile, ci_reg_222, "ci_reg_222");
    sc_trace(mVcdFile, sum_1_reg_233, "sum_1_reg_233");
    sc_trace(mVcdFile, m_reg_245, "m_reg_245");
    sc_trace(mVcdFile, p_Val2_103_reg_256, "p_Val2_103_reg_256");
    sc_trace(mVcdFile, n_reg_268, "n_reg_268");
    sc_trace(mVcdFile, tmp_fu_295_p1, "tmp_fu_295_p1");
    sc_trace(mVcdFile, tmp_458_cast_fu_612_p1, "tmp_458_cast_fu_612_p1");
    sc_trace(mVcdFile, tmp_443_cast_fu_945_p1, "tmp_443_cast_fu_945_p1");
    sc_trace(mVcdFile, tmp_304_fu_540_p2, "tmp_304_fu_540_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_weight_V_ARREADY, "ap_reg_ioackin_m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_weight_V_ARREADY, "ap_sig_ioackin_m_axi_weight_V_ARREADY");
    sc_trace(mVcdFile, tmp_s_fu_304_p3, "tmp_s_fu_304_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_312_p1, "p_shl2_cast_fu_312_p1");
    sc_trace(mVcdFile, tmp_cast_fu_300_p1, "tmp_cast_fu_300_p1");
    sc_trace(mVcdFile, tmp_346_fu_316_p2, "tmp_346_fu_316_p2");
    sc_trace(mVcdFile, tmp_347_fu_326_p3, "tmp_347_fu_326_p3");
    sc_trace(mVcdFile, tmp_348_fu_338_p3, "tmp_348_fu_338_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_346_p1, "p_shl1_cast_fu_346_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_334_p1, "p_shl_cast_fu_334_p1");
    sc_trace(mVcdFile, tmp_cast_97_fu_362_p1, "tmp_cast_97_fu_362_p1");
    sc_trace(mVcdFile, tmp_350_fu_366_p2, "tmp_350_fu_366_p2");
    sc_trace(mVcdFile, tmp_297_fu_379_p3, "tmp_297_fu_379_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_371_p3, "p_shl3_cast_fu_371_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_387_p1, "p_shl4_cast_fu_387_p1");
    sc_trace(mVcdFile, tmp_353_fu_425_p3, "tmp_353_fu_425_p3");
    sc_trace(mVcdFile, tmp_354_fu_437_p3, "tmp_354_fu_437_p3");
    sc_trace(mVcdFile, p_shl7_cast_fu_445_p1, "p_shl7_cast_fu_445_p1");
    sc_trace(mVcdFile, p_shl6_cast_fu_433_p1, "p_shl6_cast_fu_433_p1");
    sc_trace(mVcdFile, tmp_209_cast_fu_421_p1, "tmp_209_cast_fu_421_p1");
    sc_trace(mVcdFile, tmp_356_fu_455_p2, "tmp_356_fu_455_p2");
    sc_trace(mVcdFile, tmp_301_fu_464_p3, "tmp_301_fu_464_p3");
    sc_trace(mVcdFile, p_shl5_fu_472_p1, "p_shl5_fu_472_p1");
    sc_trace(mVcdFile, tmp_447_cast_fu_460_p1, "tmp_447_cast_fu_460_p1");
    sc_trace(mVcdFile, tmp_210_fu_494_p1, "tmp_210_fu_494_p1");
    sc_trace(mVcdFile, tmp_358_fu_498_p2, "tmp_358_fu_498_p2");
    sc_trace(mVcdFile, tmp_302_fu_503_p2, "tmp_302_fu_503_p2");
    sc_trace(mVcdFile, tmp2_fu_515_p2, "tmp2_fu_515_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_521_p1, "tmp2_cast_fu_521_p1");
    sc_trace(mVcdFile, tmp_211_fu_525_p2, "tmp_211_fu_525_p2");
    sc_trace(mVcdFile, tmp_212_cast_fu_531_p1, "tmp_212_cast_fu_531_p1");
    sc_trace(mVcdFile, tmp_359_fu_509_p2, "tmp_359_fu_509_p2");
    sc_trace(mVcdFile, tmp_303_fu_558_p3, "tmp_303_fu_558_p3");
    sc_trace(mVcdFile, p_shl9_cast_fu_565_p1, "p_shl9_cast_fu_565_p1");
    sc_trace(mVcdFile, p_shl8_cast_fu_551_p3, "p_shl8_cast_fu_551_p3");
    sc_trace(mVcdFile, tmp3_fu_587_p2, "tmp3_fu_587_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_593_p1, "tmp3_cast_fu_593_p1");
    sc_trace(mVcdFile, tmp_214_fu_597_p2, "tmp_214_fu_597_p2");
    sc_trace(mVcdFile, tmp_215_cast_fu_603_p1, "tmp_215_cast_fu_603_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_622_p0, "p_Val2_6_fu_622_p0");
    sc_trace(mVcdFile, p_Val2_6_fu_622_p1, "p_Val2_6_fu_622_p1");
    sc_trace(mVcdFile, tmp_216_fu_636_p3, "tmp_216_fu_636_p3");
    sc_trace(mVcdFile, tmp_316_cast_fu_644_p1, "tmp_316_cast_fu_644_p1");
    sc_trace(mVcdFile, p_Val2_105_fu_661_p4, "p_Val2_105_fu_661_p4");
    sc_trace(mVcdFile, tmp_217_fu_671_p1, "tmp_217_fu_671_p1");
    sc_trace(mVcdFile, tmp_307_fu_674_p3, "tmp_307_fu_674_p3");
    sc_trace(mVcdFile, tmp_218_fu_696_p2, "tmp_218_fu_696_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_725_p2, "Range1_all_ones_fu_725_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_730_p2, "Range1_all_zeros_fu_730_p2");
    sc_trace(mVcdFile, tmp_309_fu_718_p3, "tmp_309_fu_718_p3");
    sc_trace(mVcdFile, tmp_219_fu_742_p2, "tmp_219_fu_742_p2");
    sc_trace(mVcdFile, p_41_i_i_fu_748_p2, "p_41_i_i_fu_748_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_735_p3, "deleted_zeros_fu_735_p3");
    sc_trace(mVcdFile, p_not_i_i_fu_765_p2, "p_not_i_i_fu_765_p2");
    sc_trace(mVcdFile, brmerge_i_i6_fu_771_p2, "brmerge_i_i6_fu_771_p2");
    sc_trace(mVcdFile, deleted_ones_fu_753_p3, "deleted_ones_fu_753_p3");
    sc_trace(mVcdFile, tmp4_demorgan_fu_792_p2, "tmp4_demorgan_fu_792_p2");
    sc_trace(mVcdFile, tmp4_fu_798_p2, "tmp4_fu_798_p2");
    sc_trace(mVcdFile, overflow_fu_781_p2, "overflow_fu_781_p2");
    sc_trace(mVcdFile, tmp5_fu_815_p2, "tmp5_fu_815_p2");
    sc_trace(mVcdFile, underflow_not_fu_819_p2, "underflow_not_fu_819_p2");
    sc_trace(mVcdFile, p_Val2_112_mux_fu_824_p3, "p_Val2_112_mux_fu_824_p3");
    sc_trace(mVcdFile, p_Val2_s_102_fu_830_p3, "p_Val2_s_102_fu_830_p3");
    sc_trace(mVcdFile, tmp_204_fu_844_p1, "tmp_204_fu_844_p1");
    sc_trace(mVcdFile, tmp_205_fu_848_p1, "tmp_205_fu_848_p1");
    sc_trace(mVcdFile, p_Val2_101_fu_852_p2, "p_Val2_101_fu_852_p2");
    sc_trace(mVcdFile, tmp_206_fu_880_p2, "tmp_206_fu_880_p2");
    sc_trace(mVcdFile, isneg_not_fu_894_p2, "isneg_not_fu_894_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_890_p2, "brmerge_i_i_fu_890_p2");
    sc_trace(mVcdFile, underflow_15_fu_885_p2, "underflow_15_fu_885_p2");
    sc_trace(mVcdFile, brmerge9_fu_899_p2, "brmerge9_fu_899_p2");
    sc_trace(mVcdFile, result_V_mux_fu_904_p3, "result_V_mux_fu_904_p3");
    sc_trace(mVcdFile, p_result_V_fu_911_p3, "p_result_V_fu_911_p3");
    sc_trace(mVcdFile, result_1_fu_918_p3, "result_1_fu_918_p3");
    sc_trace(mVcdFile, tmp_207_cast_fu_936_p1, "tmp_207_cast_fu_936_p1");
    sc_trace(mVcdFile, tmp_352_fu_940_p2, "tmp_352_fu_940_p2");
    sc_trace(mVcdFile, p_s_fu_950_p3, "p_s_fu_950_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv1_p::~conv1_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void conv1_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_weight_V_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_weight_V_ARREADY.read())) {
                ap_reg_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_397_p2.read()))) {
        ci_reg_222 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_482_p2.read()))) {
        ci_reg_222 = ci_9_reg_1014.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_356_p2.read(), ap_const_lv1_1))) {
        co_reg_175 = co_24_reg_975.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_175 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_283_p2.read()))) {
        h_reg_186 = ap_const_lv6_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_397_p2.read(), ap_const_lv1_1))) {
        h_reg_186 = h_23_fu_403_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_575_p2.read()))) {
        m_reg_245 = m_7_reg_1032.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_409_p2.read()))) {
        m_reg_245 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        n_reg_268 = n_7_reg_1057.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        n_reg_268 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        p_Val2_103_reg_256 = sum_V_fu_836_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_Val2_103_reg_256 = sum_1_reg_233.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_397_p2.read()))) {
        p_Val2_s_reg_210 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_482_p2.read()))) {
        p_Val2_s_reg_210 = sum_1_reg_233.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_575_p2.read()))) {
        sum_1_reg_233 = p_Val2_103_reg_256.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_409_p2.read()))) {
        sum_1_reg_233 = p_Val2_s_reg_210.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_356_p2.read()))) {
        w_reg_198 = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_reg_198 = w_23_fu_961_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_283_p2.read()))) {
        bias_V_addr_reg_990 =  (sc_lv<5>) (tmp_fu_295_p1.read());
        tmp_349_reg_985 = tmp_349_fu_350_p2.read();
        tmp_435_cast_reg_980 = tmp_435_cast_fu_322_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        brmerge40_demorgan_i_reg_1139 = brmerge40_demorgan_i_fu_787_p2.read();
        brmerge_i_i_i_reg_1149 = brmerge_i_i_i_fu_809_p2.read();
        p_38_i_i_reg_1129 = p_38_i_i_fu_760_p2.read();
        tmp_220_reg_1134 = tmp_220_fu_776_p2.read();
        underflow_reg_1144 = underflow_fu_804_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        carry_reg_1116 = carry_fu_702_p2.read();
        newsignbit_reg_1110 = p_Val2_106_fu_682_p2.read().range(7, 7);
        p_Val2_104_reg_1092 = p_Val2_104_fu_648_p2.read();
        p_Val2_106_reg_1104 = p_Val2_106_fu_682_p2.read();
        signbit_reg_1097 = p_Val2_104_fu_648_p2.read().range(15, 15);
        tmp_185_reg_1123 = p_Val2_104_fu_648_p2.read().range(15, 14);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_9_reg_1014 = ci_9_fu_415_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_24_reg_975 = co_24_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
        input_V_load_reg_1077 = input_V_q0.read();
        weight_V_addr_read_reg_1072 = m_axi_weight_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        isneg_reg_1159 = p_Val2_101_fu_852_p2.read().range(8, 8);
        newsignbit_15_reg_1172 = result_V_fu_866_p2.read().range(7, 7);
        result_V_reg_1166 = result_V_fu_866_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_7_reg_1032 = m_7_fu_488_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        n_7_reg_1057 = n_7_fu_581_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        p_Val2_6_reg_1082 = p_Val2_6_fu_622_p2.read();
        tmp_306_reg_1087 = p_Val2_6_fu_622_p2.read().range(5, 5);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sext_reg_967 = sext_fu_279_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_208_reg_1184 = tmp_208_fu_930_p2.read();
        tmp_300_reg_1179 = tmp_300_fu_926_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_356_p2.read()))) {
        tmp_351_reg_998 = tmp_351_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_409_p2.read()))) {
        tmp_355_reg_1019 = tmp_355_fu_449_p2.read();
        tmp_357_reg_1024 = tmp_357_fu_476_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_482_p2.read()))) {
        tmp_360_reg_1037 = tmp_360_fu_535_p2.read();
        weight_V_addr_reg_1043 =  (sc_lv<32>) (tmp_304_fu_540_p2.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_361_reg_1049 = tmp_361_fu_569_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_575_p2.read()))) {
        tmp_362_reg_1062 = tmp_362_fu_607_p2.read();
    }
}

void conv1_p::thread_Range1_all_ones_fu_725_p2() {
    Range1_all_ones_fu_725_p2 = (!tmp_185_reg_1123.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_185_reg_1123.read() == ap_const_lv2_3);
}

void conv1_p::thread_Range1_all_zeros_fu_730_p2() {
    Range1_all_zeros_fu_730_p2 = (!tmp_185_reg_1123.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_185_reg_1123.read() == ap_const_lv2_0);
}

void conv1_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv1_p::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void conv1_p::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void conv1_p::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv1_p::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv1_p::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv1_p::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void conv1_p::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void conv1_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv1_p::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void conv1_p::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void conv1_p::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void conv1_p::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void conv1_p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv1_p::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv1_p::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv1_p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv1_p::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv1_p::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_283_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv1_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv1_p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_283_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv1_p::thread_ap_sig_ioackin_m_axi_weight_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weight_V_ARREADY.read())) {
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_weight_V_ARREADY = ap_const_logic_1;
    }
}

void conv1_p::thread_bias_V_address0() {
    bias_V_address0 = bias_V_addr_reg_990.read();
}

void conv1_p::thread_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_V_ce0 = ap_const_logic_1;
    } else {
        bias_V_ce0 = ap_const_logic_0;
    }
}

void conv1_p::thread_brmerge40_demorgan_i_fu_787_p2() {
    brmerge40_demorgan_i_fu_787_p2 = (newsignbit_reg_1110.read() & deleted_ones_fu_753_p3.read());
}

void conv1_p::thread_brmerge9_fu_899_p2() {
    brmerge9_fu_899_p2 = (newsignbit_15_reg_1172.read() | isneg_not_fu_894_p2.read());
}

void conv1_p::thread_brmerge_i_i6_fu_771_p2() {
    brmerge_i_i6_fu_771_p2 = (newsignbit_reg_1110.read() | p_not_i_i_fu_765_p2.read());
}

void conv1_p::thread_brmerge_i_i_fu_890_p2() {
    brmerge_i_i_fu_890_p2 = (isneg_reg_1159.read() ^ newsignbit_15_reg_1172.read());
}

void conv1_p::thread_brmerge_i_i_i_fu_809_p2() {
    brmerge_i_i_i_fu_809_p2 = (underflow_fu_804_p2.read() | overflow_fu_781_p2.read());
}

void conv1_p::thread_carry_fu_702_p2() {
    carry_fu_702_p2 = (tmp_307_fu_674_p3.read() & tmp_218_fu_696_p2.read());
}

void conv1_p::thread_ci_9_fu_415_p2() {
    ci_9_fu_415_p2 = (!ci_reg_222.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ci_reg_222.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv1_p::thread_co_24_fu_289_p2() {
    co_24_fu_289_p2 = (!co_reg_175.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(co_reg_175.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv1_p::thread_deleted_ones_fu_753_p3() {
    deleted_ones_fu_753_p3 = (!carry_reg_1116.read()[0].is_01())? sc_lv<1>(): ((carry_reg_1116.read()[0].to_bool())? p_41_i_i_fu_748_p2.read(): Range1_all_ones_fu_725_p2.read());
}

void conv1_p::thread_deleted_zeros_fu_735_p3() {
    deleted_zeros_fu_735_p3 = (!carry_reg_1116.read()[0].is_01())? sc_lv<1>(): ((carry_reg_1116.read()[0].to_bool())? Range1_all_ones_fu_725_p2.read(): Range1_all_zeros_fu_730_p2.read());
}

void conv1_p::thread_exitcond2_fu_283_p2() {
    exitcond2_fu_283_p2 = (!co_reg_175.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_175.read() == ap_const_lv5_18);
}

void conv1_p::thread_exitcond3_fu_356_p2() {
    exitcond3_fu_356_p2 = (!h_reg_186.read().is_01() || !ap_const_lv6_21.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_186.read() == ap_const_lv6_21);
}

void conv1_p::thread_exitcond4_fu_397_p2() {
    exitcond4_fu_397_p2 = (!w_reg_198.read().is_01() || !ap_const_lv6_21.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_198.read() == ap_const_lv6_21);
}

void conv1_p::thread_exitcond5_fu_409_p2() {
    exitcond5_fu_409_p2 = (!ci_reg_222.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_222.read() == ap_const_lv2_3);
}

void conv1_p::thread_exitcond6_fu_482_p2() {
    exitcond6_fu_482_p2 = (!m_reg_245.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_245.read() == ap_const_lv2_3);
}

void conv1_p::thread_exitcond_fu_575_p2() {
    exitcond_fu_575_p2 = (!n_reg_268.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_268.read() == ap_const_lv2_3);
}

void conv1_p::thread_h_23_fu_403_p2() {
    h_23_fu_403_p2 = (!h_reg_186.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(h_reg_186.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void conv1_p::thread_input_V_address0() {
    input_V_address0 =  (sc_lv<12>) (tmp_458_cast_fu_612_p1.read());
}

void conv1_p::thread_input_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        input_V_ce0 = ap_const_logic_1;
    } else {
        input_V_ce0 = ap_const_logic_0;
    }
}

void conv1_p::thread_isneg_not_fu_894_p2() {
    isneg_not_fu_894_p2 = (isneg_reg_1159.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_m_7_fu_488_p2() {
    m_7_fu_488_p2 = (!m_reg_245.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_245.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv1_p::thread_m_axi_weight_V_ARADDR() {
    m_axi_weight_V_ARADDR = weight_V_addr_reg_1043.read();
}

void conv1_p::thread_m_axi_weight_V_ARBURST() {
    m_axi_weight_V_ARBURST = ap_const_lv2_0;
}

void conv1_p::thread_m_axi_weight_V_ARCACHE() {
    m_axi_weight_V_ARCACHE = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_ARID() {
    m_axi_weight_V_ARID = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_ARLEN() {
    m_axi_weight_V_ARLEN = ap_const_lv32_3;
}

void conv1_p::thread_m_axi_weight_V_ARLOCK() {
    m_axi_weight_V_ARLOCK = ap_const_lv2_0;
}

void conv1_p::thread_m_axi_weight_V_ARPROT() {
    m_axi_weight_V_ARPROT = ap_const_lv3_0;
}

void conv1_p::thread_m_axi_weight_V_ARQOS() {
    m_axi_weight_V_ARQOS = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_ARREGION() {
    m_axi_weight_V_ARREGION = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_ARSIZE() {
    m_axi_weight_V_ARSIZE = ap_const_lv3_0;
}

void conv1_p::thread_m_axi_weight_V_ARUSER() {
    m_axi_weight_V_ARUSER = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weight_V_ARREADY.read()))) {
        m_axi_weight_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_weight_V_ARVALID = ap_const_logic_0;
    }
}

void conv1_p::thread_m_axi_weight_V_AWADDR() {
    m_axi_weight_V_AWADDR = ap_const_lv32_0;
}

void conv1_p::thread_m_axi_weight_V_AWBURST() {
    m_axi_weight_V_AWBURST = ap_const_lv2_0;
}

void conv1_p::thread_m_axi_weight_V_AWCACHE() {
    m_axi_weight_V_AWCACHE = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_AWID() {
    m_axi_weight_V_AWID = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_AWLEN() {
    m_axi_weight_V_AWLEN = ap_const_lv32_0;
}

void conv1_p::thread_m_axi_weight_V_AWLOCK() {
    m_axi_weight_V_AWLOCK = ap_const_lv2_0;
}

void conv1_p::thread_m_axi_weight_V_AWPROT() {
    m_axi_weight_V_AWPROT = ap_const_lv3_0;
}

void conv1_p::thread_m_axi_weight_V_AWQOS() {
    m_axi_weight_V_AWQOS = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_AWREGION() {
    m_axi_weight_V_AWREGION = ap_const_lv4_0;
}

void conv1_p::thread_m_axi_weight_V_AWSIZE() {
    m_axi_weight_V_AWSIZE = ap_const_lv3_0;
}

void conv1_p::thread_m_axi_weight_V_AWUSER() {
    m_axi_weight_V_AWUSER = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_AWVALID() {
    m_axi_weight_V_AWVALID = ap_const_logic_0;
}

void conv1_p::thread_m_axi_weight_V_BREADY() {
    m_axi_weight_V_BREADY = ap_const_logic_0;
}

void conv1_p::thread_m_axi_weight_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
        m_axi_weight_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_weight_V_RREADY = ap_const_logic_0;
    }
}

void conv1_p::thread_m_axi_weight_V_WDATA() {
    m_axi_weight_V_WDATA = ap_const_lv8_0;
}

void conv1_p::thread_m_axi_weight_V_WID() {
    m_axi_weight_V_WID = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_WLAST() {
    m_axi_weight_V_WLAST = ap_const_logic_0;
}

void conv1_p::thread_m_axi_weight_V_WSTRB() {
    m_axi_weight_V_WSTRB = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_WUSER() {
    m_axi_weight_V_WUSER = ap_const_lv1_0;
}

void conv1_p::thread_m_axi_weight_V_WVALID() {
    m_axi_weight_V_WVALID = ap_const_logic_0;
}

void conv1_p::thread_n_7_fu_581_p2() {
    n_7_fu_581_p2 = (!n_reg_268.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_268.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv1_p::thread_newsignbit_fu_688_p3() {
    newsignbit_fu_688_p3 = p_Val2_106_fu_682_p2.read().range(7, 7);
}

void conv1_p::thread_output_V_address0() {
    output_V_address0 =  (sc_lv<15>) (tmp_443_cast_fu_945_p1.read());
}

void conv1_p::thread_output_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void conv1_p::thread_output_V_d0() {
    output_V_d0 = esl_zext<8,7>(p_s_fu_950_p3.read());
}

void conv1_p::thread_output_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void conv1_p::thread_overflow_fu_781_p2() {
    overflow_fu_781_p2 = (brmerge_i_i6_fu_771_p2.read() & tmp_220_fu_776_p2.read());
}

void conv1_p::thread_p_38_i_i_fu_760_p2() {
    p_38_i_i_fu_760_p2 = (carry_reg_1116.read() & Range1_all_ones_fu_725_p2.read());
}

void conv1_p::thread_p_41_i_i_fu_748_p2() {
    p_41_i_i_fu_748_p2 = (signbit_reg_1097.read() & tmp_219_fu_742_p2.read());
}

void conv1_p::thread_p_Val2_101_fu_852_p2() {
    p_Val2_101_fu_852_p2 = (!tmp_204_fu_844_p1.read().is_01() || !tmp_205_fu_848_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_204_fu_844_p1.read()) + sc_bigint<9>(tmp_205_fu_848_p1.read()));
}

void conv1_p::thread_p_Val2_104_fu_648_p2() {
    p_Val2_104_fu_648_p2 = (!tmp_316_cast_fu_644_p1.read().is_01() || !p_Val2_6_reg_1082.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp_316_cast_fu_644_p1.read()) + sc_biguint<16>(p_Val2_6_reg_1082.read()));
}

void conv1_p::thread_p_Val2_105_fu_661_p4() {
    p_Val2_105_fu_661_p4 = p_Val2_104_fu_648_p2.read().range(13, 6);
}

void conv1_p::thread_p_Val2_106_fu_682_p2() {
    p_Val2_106_fu_682_p2 = (!p_Val2_105_fu_661_p4.read().is_01() || !tmp_217_fu_671_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Val2_105_fu_661_p4.read()) + sc_biguint<8>(tmp_217_fu_671_p1.read()));
}

void conv1_p::thread_p_Val2_112_mux_fu_824_p3() {
    p_Val2_112_mux_fu_824_p3 = (!brmerge_i_i_i_reg_1149.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_i_reg_1149.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_106_reg_1104.read());
}

void conv1_p::thread_p_Val2_6_fu_622_p0() {
    p_Val2_6_fu_622_p0 = weight_V_addr_read_reg_1072.read();
}

void conv1_p::thread_p_Val2_6_fu_622_p1() {
    p_Val2_6_fu_622_p1 = input_V_load_reg_1077.read();
}

void conv1_p::thread_p_Val2_6_fu_622_p2() {
    p_Val2_6_fu_622_p2 = (!p_Val2_6_fu_622_p0.read().is_01() || !p_Val2_6_fu_622_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(p_Val2_6_fu_622_p0.read()) * sc_bigint<8>(p_Val2_6_fu_622_p1.read());
}

void conv1_p::thread_p_Val2_s_102_fu_830_p3() {
    p_Val2_s_102_fu_830_p3 = (!underflow_reg_1144.read()[0].is_01())? sc_lv<8>(): ((underflow_reg_1144.read()[0].to_bool())? ap_const_lv8_80: p_Val2_106_reg_1104.read());
}

void conv1_p::thread_p_not_i_i_fu_765_p2() {
    p_not_i_i_fu_765_p2 = (deleted_zeros_fu_735_p3.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_p_result_V_fu_911_p3() {
    p_result_V_fu_911_p3 = (!underflow_15_fu_885_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_15_fu_885_p2.read()[0].to_bool())? ap_const_lv8_80: result_V_reg_1166.read());
}

void conv1_p::thread_p_s_fu_950_p3() {
    p_s_fu_950_p3 = (!tmp_208_reg_1184.read()[0].is_01())? sc_lv<7>(): ((tmp_208_reg_1184.read()[0].to_bool())? tmp_300_reg_1179.read(): ap_const_lv7_0);
}

void conv1_p::thread_p_shl1_cast_fu_346_p1() {
    p_shl1_cast_fu_346_p1 = esl_zext<11,6>(tmp_348_fu_338_p3.read());
}

void conv1_p::thread_p_shl2_cast_fu_312_p1() {
    p_shl2_cast_fu_312_p1 = esl_zext<8,7>(tmp_s_fu_304_p3.read());
}

void conv1_p::thread_p_shl3_cast_fu_371_p3() {
    p_shl3_cast_fu_371_p3 = esl_concat<11,5>(tmp_350_fu_366_p2.read(), ap_const_lv5_0);
}

void conv1_p::thread_p_shl4_cast_fu_387_p1() {
    p_shl4_cast_fu_387_p1 = esl_zext<16,12>(tmp_297_fu_379_p3.read());
}

void conv1_p::thread_p_shl5_fu_472_p1() {
    p_shl5_fu_472_p1 = esl_sext<64,11>(tmp_301_fu_464_p3.read());
}

void conv1_p::thread_p_shl6_cast_fu_433_p1() {
    p_shl6_cast_fu_433_p1 = esl_zext<8,7>(tmp_353_fu_425_p3.read());
}

void conv1_p::thread_p_shl7_cast_fu_445_p1() {
    p_shl7_cast_fu_445_p1 = esl_zext<8,3>(tmp_354_fu_437_p3.read());
}

void conv1_p::thread_p_shl8_cast_fu_551_p3() {
    p_shl8_cast_fu_551_p3 = esl_concat<8,5>(tmp_360_reg_1037.read(), ap_const_lv5_0);
}

void conv1_p::thread_p_shl9_cast_fu_565_p1() {
    p_shl9_cast_fu_565_p1 = esl_zext<13,9>(tmp_303_fu_558_p3.read());
}

void conv1_p::thread_p_shl_cast_fu_334_p1() {
    p_shl_cast_fu_334_p1 = esl_zext<11,10>(tmp_347_fu_326_p3.read());
}

void conv1_p::thread_result_1_fu_918_p3() {
    result_1_fu_918_p3 = (!brmerge9_fu_899_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge9_fu_899_p2.read()[0].to_bool())? result_V_mux_fu_904_p3.read(): p_result_V_fu_911_p3.read());
}

void conv1_p::thread_result_V_fu_866_p2() {
    result_V_fu_866_p2 = (!p_Val2_s_reg_210.read().is_01() || !bias_V_q0.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Val2_s_reg_210.read()) + sc_biguint<8>(bias_V_q0.read()));
}

void conv1_p::thread_result_V_mux_fu_904_p3() {
    result_V_mux_fu_904_p3 = (!brmerge_i_i_fu_890_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_fu_890_p2.read()[0].to_bool())? ap_const_lv8_7F: result_V_reg_1166.read());
}

void conv1_p::thread_sext_fu_279_p1() {
    sext_fu_279_p1 = esl_sext<64,32>(conv1_weight_V3.read());
}

void conv1_p::thread_sum_V_fu_836_p3() {
    sum_V_fu_836_p3 = (!underflow_not_fu_819_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_not_fu_819_p2.read()[0].to_bool())? p_Val2_112_mux_fu_824_p3.read(): p_Val2_s_102_fu_830_p3.read());
}

void conv1_p::thread_tmp2_cast_fu_521_p1() {
    tmp2_cast_fu_521_p1 = esl_sext<6,2>(tmp2_fu_515_p2.read());
}

void conv1_p::thread_tmp2_fu_515_p2() {
    tmp2_fu_515_p2 = (!ap_const_lv2_3.is_01() || !m_reg_245.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(m_reg_245.read()));
}

void conv1_p::thread_tmp3_cast_fu_593_p1() {
    tmp3_cast_fu_593_p1 = esl_sext<6,2>(tmp3_fu_587_p2.read());
}

void conv1_p::thread_tmp3_fu_587_p2() {
    tmp3_fu_587_p2 = (!n_reg_268.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_268.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void conv1_p::thread_tmp4_demorgan_fu_792_p2() {
    tmp4_demorgan_fu_792_p2 = (p_38_i_i_fu_760_p2.read() | brmerge40_demorgan_i_fu_787_p2.read());
}

void conv1_p::thread_tmp4_fu_798_p2() {
    tmp4_fu_798_p2 = (tmp4_demorgan_fu_792_p2.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_tmp5_fu_815_p2() {
    tmp5_fu_815_p2 = (brmerge40_demorgan_i_reg_1139.read() | tmp_220_reg_1134.read());
}

void conv1_p::thread_tmp_204_fu_844_p1() {
    tmp_204_fu_844_p1 = esl_sext<9,8>(p_Val2_s_reg_210.read());
}

void conv1_p::thread_tmp_205_fu_848_p1() {
    tmp_205_fu_848_p1 = esl_sext<9,8>(bias_V_q0.read());
}

void conv1_p::thread_tmp_206_fu_880_p2() {
    tmp_206_fu_880_p2 = (newsignbit_15_reg_1172.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_tmp_207_cast_fu_936_p1() {
    tmp_207_cast_fu_936_p1 = esl_zext<16,6>(w_reg_198.read());
}

void conv1_p::thread_tmp_208_fu_930_p2() {
    tmp_208_fu_930_p2 = (!result_1_fu_918_p3.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): (sc_bigint<8>(result_1_fu_918_p3.read()) > sc_bigint<8>(ap_const_lv8_0));
}

void conv1_p::thread_tmp_209_cast_fu_421_p1() {
    tmp_209_cast_fu_421_p1 = esl_zext<9,2>(ci_reg_222.read());
}

void conv1_p::thread_tmp_210_fu_494_p1() {
    tmp_210_fu_494_p1 = esl_zext<64,2>(m_reg_245.read());
}

void conv1_p::thread_tmp_211_fu_525_p2() {
    tmp_211_fu_525_p2 = (!h_reg_186.read().is_01() || !tmp2_cast_fu_521_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(h_reg_186.read()) + sc_bigint<6>(tmp2_cast_fu_521_p1.read()));
}

void conv1_p::thread_tmp_212_cast_fu_531_p1() {
    tmp_212_cast_fu_531_p1 = esl_zext<8,6>(tmp_211_fu_525_p2.read());
}

void conv1_p::thread_tmp_214_fu_597_p2() {
    tmp_214_fu_597_p2 = (!tmp3_cast_fu_593_p1.read().is_01() || !w_reg_198.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp3_cast_fu_593_p1.read()) + sc_biguint<6>(w_reg_198.read()));
}

void conv1_p::thread_tmp_215_cast_fu_603_p1() {
    tmp_215_cast_fu_603_p1 = esl_zext<13,6>(tmp_214_fu_597_p2.read());
}

void conv1_p::thread_tmp_216_fu_636_p3() {
    tmp_216_fu_636_p3 = esl_concat<8,6>(p_Val2_103_reg_256.read(), ap_const_lv6_0);
}

void conv1_p::thread_tmp_217_fu_671_p1() {
    tmp_217_fu_671_p1 = esl_zext<8,1>(tmp_306_reg_1087.read());
}

void conv1_p::thread_tmp_218_fu_696_p2() {
    tmp_218_fu_696_p2 = (newsignbit_fu_688_p3.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_tmp_219_fu_742_p2() {
    tmp_219_fu_742_p2 = (tmp_309_fu_718_p3.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_tmp_220_fu_776_p2() {
    tmp_220_fu_776_p2 = (signbit_reg_1097.read() ^ ap_const_lv1_1);
}

void conv1_p::thread_tmp_297_fu_379_p3() {
    tmp_297_fu_379_p3 = esl_concat<11,1>(tmp_350_fu_366_p2.read(), ap_const_lv1_0);
}

void conv1_p::thread_tmp_300_fu_926_p1() {
    tmp_300_fu_926_p1 = result_1_fu_918_p3.read().range(7-1, 0);
}

void conv1_p::thread_tmp_301_fu_464_p3() {
    tmp_301_fu_464_p3 = esl_concat<9,2>(tmp_356_fu_455_p2.read(), ap_const_lv2_0);
}

void conv1_p::thread_tmp_302_fu_503_p2() {
    tmp_302_fu_503_p2 = (!ap_const_lv64_2.is_01())? sc_lv<64>(): tmp_358_fu_498_p2.read() << (unsigned short)ap_const_lv64_2.to_uint();
}

void conv1_p::thread_tmp_303_fu_558_p3() {
    tmp_303_fu_558_p3 = esl_concat<8,1>(tmp_360_reg_1037.read(), ap_const_lv1_0);
}

void conv1_p::thread_tmp_304_fu_540_p2() {
    tmp_304_fu_540_p2 = (!tmp_359_fu_509_p2.read().is_01() || !sext_reg_967.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_359_fu_509_p2.read()) + sc_bigint<64>(sext_reg_967.read()));
}

void conv1_p::thread_tmp_307_fu_674_p3() {
    tmp_307_fu_674_p3 = p_Val2_104_fu_648_p2.read().range(13, 13);
}

void conv1_p::thread_tmp_309_fu_718_p3() {
    tmp_309_fu_718_p3 = p_Val2_104_reg_1092.read().range(14, 14);
}

void conv1_p::thread_tmp_316_cast_fu_644_p1() {
    tmp_316_cast_fu_644_p1 = esl_sext<16,14>(tmp_216_fu_636_p3.read());
}

void conv1_p::thread_tmp_346_fu_316_p2() {
    tmp_346_fu_316_p2 = (!p_shl2_cast_fu_312_p1.read().is_01() || !tmp_cast_fu_300_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_312_p1.read()) - sc_biguint<8>(tmp_cast_fu_300_p1.read()));
}

void conv1_p::thread_tmp_347_fu_326_p3() {
    tmp_347_fu_326_p3 = esl_concat<5,5>(co_reg_175.read(), ap_const_lv5_0);
}

void conv1_p::thread_tmp_348_fu_338_p3() {
    tmp_348_fu_338_p3 = esl_concat<5,1>(co_reg_175.read(), ap_const_lv1_0);
}

void conv1_p::thread_tmp_349_fu_350_p2() {
    tmp_349_fu_350_p2 = (!p_shl1_cast_fu_346_p1.read().is_01() || !p_shl_cast_fu_334_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl1_cast_fu_346_p1.read()) + sc_biguint<11>(p_shl_cast_fu_334_p1.read()));
}

void conv1_p::thread_tmp_350_fu_366_p2() {
    tmp_350_fu_366_p2 = (!tmp_cast_97_fu_362_p1.read().is_01() || !tmp_349_reg_985.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast_97_fu_362_p1.read()) + sc_biguint<11>(tmp_349_reg_985.read()));
}

void conv1_p::thread_tmp_351_fu_391_p2() {
    tmp_351_fu_391_p2 = (!p_shl3_cast_fu_371_p3.read().is_01() || !p_shl4_cast_fu_387_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_shl3_cast_fu_371_p3.read()) + sc_biguint<16>(p_shl4_cast_fu_387_p1.read()));
}

void conv1_p::thread_tmp_352_fu_940_p2() {
    tmp_352_fu_940_p2 = (!tmp_351_reg_998.read().is_01() || !tmp_207_cast_fu_936_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_351_reg_998.read()) + sc_biguint<16>(tmp_207_cast_fu_936_p1.read()));
}

void conv1_p::thread_tmp_353_fu_425_p3() {
    tmp_353_fu_425_p3 = esl_concat<2,5>(ci_reg_222.read(), ap_const_lv5_0);
}

void conv1_p::thread_tmp_354_fu_437_p3() {
    tmp_354_fu_437_p3 = esl_concat<2,1>(ci_reg_222.read(), ap_const_lv1_0);
}

void conv1_p::thread_tmp_355_fu_449_p2() {
    tmp_355_fu_449_p2 = (!p_shl7_cast_fu_445_p1.read().is_01() || !p_shl6_cast_fu_433_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl7_cast_fu_445_p1.read()) + sc_biguint<8>(p_shl6_cast_fu_433_p1.read()));
}

void conv1_p::thread_tmp_356_fu_455_p2() {
    tmp_356_fu_455_p2 = (!tmp_435_cast_reg_980.read().is_01() || !tmp_209_cast_fu_421_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_435_cast_reg_980.read()) + sc_biguint<9>(tmp_209_cast_fu_421_p1.read()));
}

void conv1_p::thread_tmp_357_fu_476_p2() {
    tmp_357_fu_476_p2 = (!p_shl5_fu_472_p1.read().is_01() || !tmp_447_cast_fu_460_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(p_shl5_fu_472_p1.read()) - sc_bigint<64>(tmp_447_cast_fu_460_p1.read()));
}

void conv1_p::thread_tmp_358_fu_498_p2() {
    tmp_358_fu_498_p2 = (!tmp_357_reg_1024.read().is_01() || !tmp_210_fu_494_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_357_reg_1024.read()) + sc_biguint<64>(tmp_210_fu_494_p1.read()));
}

void conv1_p::thread_tmp_359_fu_509_p2() {
    tmp_359_fu_509_p2 = (!tmp_302_fu_503_p2.read().is_01() || !tmp_358_fu_498_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_302_fu_503_p2.read()) - sc_biguint<64>(tmp_358_fu_498_p2.read()));
}

void conv1_p::thread_tmp_360_fu_535_p2() {
    tmp_360_fu_535_p2 = (!tmp_355_reg_1019.read().is_01() || !tmp_212_cast_fu_531_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_355_reg_1019.read()) + sc_biguint<8>(tmp_212_cast_fu_531_p1.read()));
}

void conv1_p::thread_tmp_361_fu_569_p2() {
    tmp_361_fu_569_p2 = (!p_shl9_cast_fu_565_p1.read().is_01() || !p_shl8_cast_fu_551_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl9_cast_fu_565_p1.read()) + sc_biguint<13>(p_shl8_cast_fu_551_p3.read()));
}

void conv1_p::thread_tmp_362_fu_607_p2() {
    tmp_362_fu_607_p2 = (!tmp_215_cast_fu_603_p1.read().is_01() || !tmp_361_reg_1049.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_215_cast_fu_603_p1.read()) + sc_biguint<13>(tmp_361_reg_1049.read()));
}

void conv1_p::thread_tmp_435_cast_fu_322_p1() {
    tmp_435_cast_fu_322_p1 = esl_sext<9,8>(tmp_346_fu_316_p2.read());
}

void conv1_p::thread_tmp_443_cast_fu_945_p1() {
    tmp_443_cast_fu_945_p1 = esl_zext<64,16>(tmp_352_fu_940_p2.read());
}

void conv1_p::thread_tmp_447_cast_fu_460_p1() {
    tmp_447_cast_fu_460_p1 = esl_sext<64,9>(tmp_356_fu_455_p2.read());
}

void conv1_p::thread_tmp_458_cast_fu_612_p1() {
    tmp_458_cast_fu_612_p1 = esl_zext<64,13>(tmp_362_reg_1062.read());
}

void conv1_p::thread_tmp_cast_97_fu_362_p1() {
    tmp_cast_97_fu_362_p1 = esl_zext<11,6>(h_reg_186.read());
}

void conv1_p::thread_tmp_cast_fu_300_p1() {
    tmp_cast_fu_300_p1 = esl_zext<8,5>(co_reg_175.read());
}

void conv1_p::thread_tmp_fu_295_p1() {
    tmp_fu_295_p1 = esl_zext<64,5>(co_reg_175.read());
}

void conv1_p::thread_tmp_s_fu_304_p3() {
    tmp_s_fu_304_p3 = esl_concat<5,2>(co_reg_175.read(), ap_const_lv2_0);
}

void conv1_p::thread_underflow_15_fu_885_p2() {
    underflow_15_fu_885_p2 = (isneg_reg_1159.read() & tmp_206_fu_880_p2.read());
}

void conv1_p::thread_underflow_fu_804_p2() {
    underflow_fu_804_p2 = (signbit_reg_1097.read() & tmp4_fu_798_p2.read());
}

void conv1_p::thread_underflow_not_fu_819_p2() {
    underflow_not_fu_819_p2 = (tmp5_fu_815_p2.read() | p_38_i_i_reg_1129.read());
}

void conv1_p::thread_w_23_fu_961_p2() {
    w_23_fu_961_p2 = (!ap_const_lv6_1.is_01() || !w_reg_198.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(w_reg_198.read()));
}

void conv1_p::thread_weight_V_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY.read();
    } else {
        weight_V_blk_n_AR = ap_const_logic_1;
    }
}

void conv1_p::thread_weight_V_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        weight_V_blk_n_R = m_axi_weight_V_RVALID.read();
    } else {
        weight_V_blk_n_R = ap_const_logic_1;
    }
}

void conv1_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_283_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_356_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_397_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_409_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_482_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_weight_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_575_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(m_axi_weight_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

