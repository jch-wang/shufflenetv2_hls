// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_3x3_8_stride.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_3x3_8_stride::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_3x3_8_stride::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state1 = "1";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state2 = "10";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state3 = "100";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state4 = "1000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state5 = "10000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state6 = "100000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> subconv_3x3_8_stride::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_3x3_8_stride::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_3 = "11";
const sc_lv<1> subconv_3x3_8_stride::ap_const_lv1_1 = "1";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_4 = "100";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_6 = "110";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_A = "1010";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_F = "1111";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_15 = "10101";
const sc_lv<7> subconv_3x3_8_stride::ap_const_lv7_0 = "0000000";
const sc_lv<3> subconv_3x3_8_stride::ap_const_lv3_1 = "1";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_16 = "10110";
const sc_lv<2> subconv_3x3_8_stride::ap_const_lv2_0 = "00";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_B = "1011";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_11 = "10001";
const sc_lv<32> subconv_3x3_8_stride::ap_const_lv32_7 = "111";
const sc_lv<7> subconv_3x3_8_stride::ap_const_lv7_60 = "1100000";
const sc_lv<7> subconv_3x3_8_stride::ap_const_lv7_1 = "1";
const sc_lv<3> subconv_3x3_8_stride::ap_const_lv3_0 = "000";
const sc_lv<3> subconv_3x3_8_stride::ap_const_lv3_5 = "101";
const sc_lv<2> subconv_3x3_8_stride::ap_const_lv2_3 = "11";
const sc_lv<2> subconv_3x3_8_stride::ap_const_lv2_1 = "1";
const sc_lv<11> subconv_3x3_8_stride::ap_const_lv11_2 = "10";
const sc_lv<2> subconv_3x3_8_stride::ap_const_lv2_2 = "10";
const bool subconv_3x3_8_stride::ap_const_boolean_1 = true;

subconv_3x3_8_stride::subconv_3x3_8_stride(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U81 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U81");
    ShuffleNetV2_faddbkb_x_U81->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U81->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U81->din0(grp_fu_188_p0);
    ShuffleNetV2_faddbkb_x_U81->din1(grp_fu_188_p1);
    ShuffleNetV2_faddbkb_x_U81->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U81->dout(grp_fu_188_p2);
    ShuffleNetV2_fmulcud_x_U82 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U82");
    ShuffleNetV2_fmulcud_x_U82->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U82->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U82->din0(weight_load_reg_611);
    ShuffleNetV2_fmulcud_x_U82->din1(input_load_reg_616);
    ShuffleNetV2_fmulcud_x_U82->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U82->dout(grp_fu_194_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_198_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_198_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_534 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_co_1_fu_204_p2);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_exitcond1_fu_350_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( m_reg_154 );

    SC_METHOD(thread_exitcond2_fu_330_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_130 );

    SC_METHOD(thread_exitcond3_fu_281_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_118 );

    SC_METHOD(thread_exitcond4_fu_198_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_exitcond_fu_452_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( n_reg_177 );

    SC_METHOD(thread_grp_fu_188_p0);
    sensitive << ( sum_reg_142 );
    sensitive << ( sum_1_reg_165 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_188_p1);
    sensitive << ( tmp_10_reg_621 );
    sensitive << ( bias_load_reg_631 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_1_fu_344_p2);
    sensitive << ( h_reg_118 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_32_cast_fu_502_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_1_fu_356_p2);
    sensitive << ( m_reg_154 );

    SC_METHOD(thread_n_1_fu_458_p2);
    sensitive << ( n_reg_177 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_23_cast_fu_507_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( result_reg_636 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl2_cast_fu_257_p1);
    sensitive << ( tmp_6_fu_249_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_227_p1);
    sensitive << ( tmp_1_fu_219_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_239_p1);
    sensitive << ( tmp_3_fu_231_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_308_p3);
    sensitive << ( tmp_12_fu_304_p1 );

    SC_METHOD(thread_p_shl6_cast_fu_316_p3);
    sensitive << ( tmp_11_fu_299_p2 );

    SC_METHOD(thread_p_shl7_cast_fu_415_p1);
    sensitive << ( tmp_19_fu_407_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_427_p1);
    sensitive << ( tmp_20_fu_419_p3 );

    SC_METHOD(thread_tmp1_cast_fu_389_p1);
    sensitive << ( tmp1_fu_383_p2 );

    SC_METHOD(thread_tmp1_fu_383_p2);
    sensitive << ( m_reg_154 );

    SC_METHOD(thread_tmp2_cast_fu_484_p1);
    sensitive << ( tmp2_fu_478_p2 );

    SC_METHOD(thread_tmp2_fu_478_p2);
    sensitive << ( n_reg_177 );

    SC_METHOD(thread_tmp_11_fu_299_p2);
    sensitive << ( tmp_18_cast_reg_529 );
    sensitive << ( tmp_3_cast_fu_295_p1 );

    SC_METHOD(thread_tmp_12_fu_304_p1);
    sensitive << ( tmp_11_fu_299_p2 );

    SC_METHOD(thread_tmp_13_fu_324_p2);
    sensitive << ( p_shl5_cast_fu_308_p3 );
    sensitive << ( p_shl6_cast_fu_316_p3 );

    SC_METHOD(thread_tmp_14_fu_441_p2);
    sensitive << ( tmp_13_reg_547 );
    sensitive << ( tmp_6_cast_fu_437_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_267_p1);
    sensitive << ( tmp_8_fu_261_p2 );

    SC_METHOD(thread_tmp_15_fu_366_p2);
    sensitive << ( tmp_15_cast_reg_524 );
    sensitive << ( tmp_8_cast_fu_362_p1 );

    SC_METHOD(thread_tmp_16_fu_371_p2);
    sensitive << ( tmp_15_fu_366_p2 );

    SC_METHOD(thread_tmp_17_fu_377_p2);
    sensitive << ( tmp_15_fu_366_p2 );
    sensitive << ( tmp_16_fu_371_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_277_p1);
    sensitive << ( tmp_9_fu_271_p2 );

    SC_METHOD(thread_tmp_18_fu_402_p2);
    sensitive << ( tmp_4_reg_519 );
    sensitive << ( tmp_1_cast_fu_398_p1 );

    SC_METHOD(thread_tmp_19_fu_407_p3);
    sensitive << ( tmp_18_fu_402_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_398_p1);
    sensitive << ( tmp_s_fu_393_p2 );

    SC_METHOD(thread_tmp_1_fu_219_p3);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_tmp_20_fu_419_p3);
    sensitive << ( tmp_18_fu_402_p2 );

    SC_METHOD(thread_tmp_21_fu_431_p2);
    sensitive << ( p_shl8_cast_fu_427_p1 );
    sensitive << ( p_shl7_cast_fu_415_p1 );

    SC_METHOD(thread_tmp_22_fu_468_p2);
    sensitive << ( tmp_17_reg_573 );
    sensitive << ( tmp_4_cast_fu_464_p1 );

    SC_METHOD(thread_tmp_23_cast_fu_507_p1);
    sensitive << ( tmp_14_reg_583 );

    SC_METHOD(thread_tmp_23_fu_497_p2);
    sensitive << ( tmp_21_reg_578 );
    sensitive << ( tmp_9_cast_fu_493_p1 );

    SC_METHOD(thread_tmp_2_fu_287_p3);
    sensitive << ( h_reg_118 );

    SC_METHOD(thread_tmp_31_cast_fu_473_p1);
    sensitive << ( tmp_22_fu_468_p2 );

    SC_METHOD(thread_tmp_32_cast_fu_502_p1);
    sensitive << ( tmp_23_fu_497_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_295_p1);
    sensitive << ( h_reg_118 );

    SC_METHOD(thread_tmp_3_fu_231_p3);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_tmp_4_cast_fu_464_p1);
    sensitive << ( n_reg_177 );

    SC_METHOD(thread_tmp_4_fu_243_p2);
    sensitive << ( p_shl4_cast_fu_239_p1 );
    sensitive << ( p_shl3_cast_fu_227_p1 );

    SC_METHOD(thread_tmp_5_fu_336_p3);
    sensitive << ( w_reg_130 );

    SC_METHOD(thread_tmp_6_cast_fu_437_p1);
    sensitive << ( w_reg_130 );

    SC_METHOD(thread_tmp_6_fu_249_p3);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_tmp_7_fu_488_p2);
    sensitive << ( tmp_5_reg_555 );
    sensitive << ( tmp2_cast_fu_484_p1 );

    SC_METHOD(thread_tmp_8_cast_fu_362_p1);
    sensitive << ( m_reg_154 );

    SC_METHOD(thread_tmp_8_fu_261_p2);
    sensitive << ( p_shl2_cast_fu_257_p1 );
    sensitive << ( tmp_cast_fu_215_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_493_p1);
    sensitive << ( tmp_7_fu_488_p2 );

    SC_METHOD(thread_tmp_9_fu_271_p2);
    sensitive << ( p_shl4_cast_fu_239_p1 );
    sensitive << ( p_shl3_cast_fu_227_p1 );

    SC_METHOD(thread_tmp_cast_fu_215_p1);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_tmp_fu_210_p1);
    sensitive << ( co_reg_107 );

    SC_METHOD(thread_tmp_s_fu_393_p2);
    sensitive << ( tmp_2_reg_542 );
    sensitive << ( tmp1_cast_fu_389_p1 );

    SC_METHOD(thread_w_1_fu_446_p2);
    sensitive << ( w_reg_130 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_31_cast_fu_473_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_198_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_350_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_452_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_3x3_8_stride_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_1_fu_204_p2, "co_1_fu_204_p2");
    sc_trace(mVcdFile, co_1_reg_514, "co_1_reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_4_fu_243_p2, "tmp_4_fu_243_p2");
    sc_trace(mVcdFile, tmp_4_reg_519, "tmp_4_reg_519");
    sc_trace(mVcdFile, exitcond4_fu_198_p2, "exitcond4_fu_198_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_267_p1, "tmp_15_cast_fu_267_p1");
    sc_trace(mVcdFile, tmp_15_cast_reg_524, "tmp_15_cast_reg_524");
    sc_trace(mVcdFile, tmp_18_cast_fu_277_p1, "tmp_18_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_18_cast_reg_529, "tmp_18_cast_reg_529");
    sc_trace(mVcdFile, bias_addr_reg_534, "bias_addr_reg_534");
    sc_trace(mVcdFile, tmp_2_fu_287_p3, "tmp_2_fu_287_p3");
    sc_trace(mVcdFile, tmp_2_reg_542, "tmp_2_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_281_p2, "exitcond3_fu_281_p2");
    sc_trace(mVcdFile, tmp_13_fu_324_p2, "tmp_13_fu_324_p2");
    sc_trace(mVcdFile, tmp_13_reg_547, "tmp_13_reg_547");
    sc_trace(mVcdFile, tmp_5_fu_336_p3, "tmp_5_fu_336_p3");
    sc_trace(mVcdFile, tmp_5_reg_555, "tmp_5_reg_555");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_330_p2, "exitcond2_fu_330_p2");
    sc_trace(mVcdFile, h_1_fu_344_p2, "h_1_fu_344_p2");
    sc_trace(mVcdFile, m_1_fu_356_p2, "m_1_fu_356_p2");
    sc_trace(mVcdFile, m_1_reg_568, "m_1_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_17_fu_377_p2, "tmp_17_fu_377_p2");
    sc_trace(mVcdFile, tmp_17_reg_573, "tmp_17_reg_573");
    sc_trace(mVcdFile, exitcond1_fu_350_p2, "exitcond1_fu_350_p2");
    sc_trace(mVcdFile, tmp_21_fu_431_p2, "tmp_21_fu_431_p2");
    sc_trace(mVcdFile, tmp_21_reg_578, "tmp_21_reg_578");
    sc_trace(mVcdFile, tmp_14_fu_441_p2, "tmp_14_fu_441_p2");
    sc_trace(mVcdFile, tmp_14_reg_583, "tmp_14_reg_583");
    sc_trace(mVcdFile, w_1_fu_446_p2, "w_1_fu_446_p2");
    sc_trace(mVcdFile, w_1_reg_588, "w_1_reg_588");
    sc_trace(mVcdFile, n_1_fu_458_p2, "n_1_fu_458_p2");
    sc_trace(mVcdFile, n_1_reg_596, "n_1_reg_596");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_452_p2, "exitcond_fu_452_p2");
    sc_trace(mVcdFile, weight_load_reg_611, "weight_load_reg_611");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_load_reg_616, "input_load_reg_616");
    sc_trace(mVcdFile, grp_fu_194_p2, "grp_fu_194_p2");
    sc_trace(mVcdFile, tmp_10_reg_621, "tmp_10_reg_621");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bias_load_reg_631, "bias_load_reg_631");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, result_reg_636, "result_reg_636");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_107, "co_reg_107");
    sc_trace(mVcdFile, h_reg_118, "h_reg_118");
    sc_trace(mVcdFile, w_reg_130, "w_reg_130");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_reg_142, "sum_reg_142");
    sc_trace(mVcdFile, m_reg_154, "m_reg_154");
    sc_trace(mVcdFile, sum_1_reg_165, "sum_1_reg_165");
    sc_trace(mVcdFile, n_reg_177, "n_reg_177");
    sc_trace(mVcdFile, tmp_fu_210_p1, "tmp_fu_210_p1");
    sc_trace(mVcdFile, tmp_31_cast_fu_473_p1, "tmp_31_cast_fu_473_p1");
    sc_trace(mVcdFile, tmp_32_cast_fu_502_p1, "tmp_32_cast_fu_502_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_507_p1, "tmp_23_cast_fu_507_p1");
    sc_trace(mVcdFile, grp_fu_188_p0, "grp_fu_188_p0");
    sc_trace(mVcdFile, grp_fu_188_p1, "grp_fu_188_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_1_fu_219_p3, "tmp_1_fu_219_p3");
    sc_trace(mVcdFile, tmp_3_fu_231_p3, "tmp_3_fu_231_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_239_p1, "p_shl4_cast_fu_239_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_227_p1, "p_shl3_cast_fu_227_p1");
    sc_trace(mVcdFile, tmp_6_fu_249_p3, "tmp_6_fu_249_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_257_p1, "p_shl2_cast_fu_257_p1");
    sc_trace(mVcdFile, tmp_cast_fu_215_p1, "tmp_cast_fu_215_p1");
    sc_trace(mVcdFile, tmp_8_fu_261_p2, "tmp_8_fu_261_p2");
    sc_trace(mVcdFile, tmp_9_fu_271_p2, "tmp_9_fu_271_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_295_p1, "tmp_3_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_11_fu_299_p2, "tmp_11_fu_299_p2");
    sc_trace(mVcdFile, tmp_12_fu_304_p1, "tmp_12_fu_304_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_308_p3, "p_shl5_cast_fu_308_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_316_p3, "p_shl6_cast_fu_316_p3");
    sc_trace(mVcdFile, tmp_8_cast_fu_362_p1, "tmp_8_cast_fu_362_p1");
    sc_trace(mVcdFile, tmp_15_fu_366_p2, "tmp_15_fu_366_p2");
    sc_trace(mVcdFile, tmp_16_fu_371_p2, "tmp_16_fu_371_p2");
    sc_trace(mVcdFile, tmp1_fu_383_p2, "tmp1_fu_383_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_389_p1, "tmp1_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_s_fu_393_p2, "tmp_s_fu_393_p2");
    sc_trace(mVcdFile, tmp_1_cast_fu_398_p1, "tmp_1_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_18_fu_402_p2, "tmp_18_fu_402_p2");
    sc_trace(mVcdFile, tmp_19_fu_407_p3, "tmp_19_fu_407_p3");
    sc_trace(mVcdFile, tmp_20_fu_419_p3, "tmp_20_fu_419_p3");
    sc_trace(mVcdFile, p_shl8_cast_fu_427_p1, "p_shl8_cast_fu_427_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_415_p1, "p_shl7_cast_fu_415_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_437_p1, "tmp_6_cast_fu_437_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_464_p1, "tmp_4_cast_fu_464_p1");
    sc_trace(mVcdFile, tmp_22_fu_468_p2, "tmp_22_fu_468_p2");
    sc_trace(mVcdFile, tmp2_fu_478_p2, "tmp2_fu_478_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_484_p1, "tmp2_cast_fu_484_p1");
    sc_trace(mVcdFile, tmp_7_fu_488_p2, "tmp_7_fu_488_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_493_p1, "tmp_9_cast_fu_493_p1");
    sc_trace(mVcdFile, tmp_23_fu_497_p2, "tmp_23_fu_497_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_3x3_8_stride::~subconv_3x3_8_stride() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U81;
    delete ShuffleNetV2_fmulcud_x_U82;
}

void subconv_3x3_8_stride::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_3x3_8_stride::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
        co_reg_107 = co_1_reg_514.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_107 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_198_p2.read(), ap_const_lv1_0))) {
        h_reg_118 = ap_const_lv3_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_330_p2.read(), ap_const_lv1_1))) {
        h_reg_118 = h_1_fu_344_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_452_p2.read()))) {
        m_reg_154 = m_1_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_330_p2.read()))) {
        m_reg_154 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_350_p2.read()))) {
        n_reg_177 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        n_reg_177 = n_1_reg_596.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_350_p2.read()))) {
        sum_1_reg_165 = sum_reg_142.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_1_reg_165 = grp_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_452_p2.read()))) {
        sum_reg_142 = sum_1_reg_165.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_330_p2.read()))) {
        sum_reg_142 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_281_p2.read()))) {
        w_reg_130 = ap_const_lv3_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_reg_130 = w_1_reg_588.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_198_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_534 =  (sc_lv<7>) (tmp_fu_210_p1.read());
        tmp_15_cast_reg_524 = tmp_15_cast_fu_267_p1.read();
        tmp_18_cast_reg_529 = tmp_18_cast_fu_277_p1.read();
        tmp_4_reg_519 = tmp_4_fu_243_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        bias_load_reg_631 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_1_reg_514 = co_1_fu_204_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_reg_616 = input_r_q0.read();
        weight_load_reg_611 = weight_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_1_reg_568 = m_1_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_1_reg_596 = n_1_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        result_reg_636 = grp_fu_188_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_10_reg_621 = grp_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_281_p2.read()))) {
        tmp_13_reg_547 = tmp_13_fu_324_p2.read();
        tmp_2_reg_542 = tmp_2_fu_287_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_350_p2.read()))) {
        tmp_14_reg_583 = tmp_14_fu_441_p2.read();
        w_1_reg_588 = w_1_fu_446_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_350_p2.read()))) {
        tmp_17_reg_573 = tmp_17_fu_377_p2.read();
        tmp_21_reg_578 = tmp_21_fu_431_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_330_p2.read()))) {
        tmp_5_reg_555 = tmp_5_fu_336_p3.read();
    }
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_3x3_8_stride::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void subconv_3x3_8_stride::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_198_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_198_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_bias_address0() {
    bias_address0 = bias_addr_reg_534.read();
}

void subconv_3x3_8_stride::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_co_1_fu_204_p2() {
    co_1_fu_204_p2 = (!co_reg_107.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_reg_107.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void subconv_3x3_8_stride::thread_exitcond1_fu_350_p2() {
    exitcond1_fu_350_p2 = (!m_reg_154.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_154.read() == ap_const_lv2_3);
}

void subconv_3x3_8_stride::thread_exitcond2_fu_330_p2() {
    exitcond2_fu_330_p2 = (!w_reg_130.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_130.read() == ap_const_lv3_5);
}

void subconv_3x3_8_stride::thread_exitcond3_fu_281_p2() {
    exitcond3_fu_281_p2 = (!h_reg_118.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_118.read() == ap_const_lv3_5);
}

void subconv_3x3_8_stride::thread_exitcond4_fu_198_p2() {
    exitcond4_fu_198_p2 = (!co_reg_107.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_107.read() == ap_const_lv7_60);
}

void subconv_3x3_8_stride::thread_exitcond_fu_452_p2() {
    exitcond_fu_452_p2 = (!n_reg_177.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_177.read() == ap_const_lv2_3);
}

void subconv_3x3_8_stride::thread_grp_fu_188_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_188_p0 = sum_reg_142.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_188_p0 = sum_1_reg_165.read();
    } else {
        grp_fu_188_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_8_stride::thread_grp_fu_188_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_188_p1 = bias_load_reg_631.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_188_p1 = tmp_10_reg_621.read();
    } else {
        grp_fu_188_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_8_stride::thread_h_1_fu_344_p2() {
    h_1_fu_344_p2 = (!h_reg_118.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(h_reg_118.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void subconv_3x3_8_stride::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (tmp_32_cast_fu_502_p1.read());
}

void subconv_3x3_8_stride::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_m_1_fu_356_p2() {
    m_1_fu_356_p2 = (!m_reg_154.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_154.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_8_stride::thread_n_1_fu_458_p2() {
    n_1_fu_458_p2 = (!n_reg_177.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_177.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_8_stride::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<12>) (tmp_23_cast_fu_507_p1.read());
}

void subconv_3x3_8_stride::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_output_r_d0() {
    output_r_d0 = result_reg_636.read();
}

void subconv_3x3_8_stride::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_p_shl2_cast_fu_257_p1() {
    p_shl2_cast_fu_257_p1 = esl_zext<10,9>(tmp_6_fu_249_p3.read());
}

void subconv_3x3_8_stride::thread_p_shl3_cast_fu_227_p1() {
    p_shl3_cast_fu_227_p1 = esl_zext<11,10>(tmp_1_fu_219_p3.read());
}

void subconv_3x3_8_stride::thread_p_shl4_cast_fu_239_p1() {
    p_shl4_cast_fu_239_p1 = esl_zext<11,8>(tmp_3_fu_231_p3.read());
}

void subconv_3x3_8_stride::thread_p_shl5_cast_fu_308_p3() {
    p_shl5_cast_fu_308_p3 = esl_concat<10,3>(tmp_12_fu_304_p1.read(), ap_const_lv3_0);
}

void subconv_3x3_8_stride::thread_p_shl6_cast_fu_316_p3() {
    p_shl6_cast_fu_316_p3 = esl_concat<12,1>(tmp_11_fu_299_p2.read(), ap_const_lv1_0);
}

void subconv_3x3_8_stride::thread_p_shl7_cast_fu_415_p1() {
    p_shl7_cast_fu_415_p1 = esl_zext<15,14>(tmp_19_fu_407_p3.read());
}

void subconv_3x3_8_stride::thread_p_shl8_cast_fu_427_p1() {
    p_shl8_cast_fu_427_p1 = esl_zext<15,12>(tmp_20_fu_419_p3.read());
}

void subconv_3x3_8_stride::thread_tmp1_cast_fu_389_p1() {
    tmp1_cast_fu_389_p1 = esl_sext<4,2>(tmp1_fu_383_p2.read());
}

void subconv_3x3_8_stride::thread_tmp1_fu_383_p2() {
    tmp1_fu_383_p2 = (m_reg_154.read() ^ ap_const_lv2_2);
}

void subconv_3x3_8_stride::thread_tmp2_cast_fu_484_p1() {
    tmp2_cast_fu_484_p1 = esl_sext<4,2>(tmp2_fu_478_p2.read());
}

void subconv_3x3_8_stride::thread_tmp2_fu_478_p2() {
    tmp2_fu_478_p2 = (n_reg_177.read() ^ ap_const_lv2_2);
}

void subconv_3x3_8_stride::thread_tmp_11_fu_299_p2() {
    tmp_11_fu_299_p2 = (!tmp_18_cast_reg_529.read().is_01() || !tmp_3_cast_fu_295_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(tmp_18_cast_reg_529.read()) + sc_biguint<12>(tmp_3_cast_fu_295_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_12_fu_304_p1() {
    tmp_12_fu_304_p1 = tmp_11_fu_299_p2.read().range(10-1, 0);
}

void subconv_3x3_8_stride::thread_tmp_13_fu_324_p2() {
    tmp_13_fu_324_p2 = (!p_shl5_cast_fu_308_p3.read().is_01() || !p_shl6_cast_fu_316_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl5_cast_fu_308_p3.read()) - sc_biguint<13>(p_shl6_cast_fu_316_p3.read()));
}

void subconv_3x3_8_stride::thread_tmp_14_fu_441_p2() {
    tmp_14_fu_441_p2 = (!tmp_13_reg_547.read().is_01() || !tmp_6_cast_fu_437_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_13_reg_547.read()) + sc_biguint<13>(tmp_6_cast_fu_437_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_15_cast_fu_267_p1() {
    tmp_15_cast_fu_267_p1 = esl_sext<11,10>(tmp_8_fu_261_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_15_fu_366_p2() {
    tmp_15_fu_366_p2 = (!tmp_15_cast_reg_524.read().is_01() || !tmp_8_cast_fu_362_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp_15_cast_reg_524.read()) + sc_biguint<11>(tmp_8_cast_fu_362_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_16_fu_371_p2() {
    tmp_16_fu_371_p2 = (!ap_const_lv11_2.is_01())? sc_lv<11>(): tmp_15_fu_366_p2.read() << (unsigned short)ap_const_lv11_2.to_uint();
}

void subconv_3x3_8_stride::thread_tmp_17_fu_377_p2() {
    tmp_17_fu_377_p2 = (!tmp_16_fu_371_p2.read().is_01() || !tmp_15_fu_366_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_16_fu_371_p2.read()) - sc_biguint<11>(tmp_15_fu_366_p2.read()));
}

void subconv_3x3_8_stride::thread_tmp_18_cast_fu_277_p1() {
    tmp_18_cast_fu_277_p1 = esl_sext<12,11>(tmp_9_fu_271_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_18_fu_402_p2() {
    tmp_18_fu_402_p2 = (!tmp_4_reg_519.read().is_01() || !tmp_1_cast_fu_398_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_4_reg_519.read()) + sc_biguint<11>(tmp_1_cast_fu_398_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_19_fu_407_p3() {
    tmp_19_fu_407_p3 = esl_concat<11,3>(tmp_18_fu_402_p2.read(), ap_const_lv3_0);
}

void subconv_3x3_8_stride::thread_tmp_1_cast_fu_398_p1() {
    tmp_1_cast_fu_398_p1 = esl_zext<11,4>(tmp_s_fu_393_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_1_fu_219_p3() {
    tmp_1_fu_219_p3 = esl_concat<7,3>(co_reg_107.read(), ap_const_lv3_0);
}

void subconv_3x3_8_stride::thread_tmp_20_fu_419_p3() {
    tmp_20_fu_419_p3 = esl_concat<11,1>(tmp_18_fu_402_p2.read(), ap_const_lv1_0);
}

void subconv_3x3_8_stride::thread_tmp_21_fu_431_p2() {
    tmp_21_fu_431_p2 = (!p_shl8_cast_fu_427_p1.read().is_01() || !p_shl7_cast_fu_415_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl8_cast_fu_427_p1.read()) + sc_biguint<15>(p_shl7_cast_fu_415_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_22_fu_468_p2() {
    tmp_22_fu_468_p2 = (!tmp_17_reg_573.read().is_01() || !tmp_4_cast_fu_464_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_17_reg_573.read()) + sc_biguint<11>(tmp_4_cast_fu_464_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_23_cast_fu_507_p1() {
    tmp_23_cast_fu_507_p1 = esl_zext<64,13>(tmp_14_reg_583.read());
}

void subconv_3x3_8_stride::thread_tmp_23_fu_497_p2() {
    tmp_23_fu_497_p2 = (!tmp_21_reg_578.read().is_01() || !tmp_9_cast_fu_493_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_21_reg_578.read()) + sc_biguint<15>(tmp_9_cast_fu_493_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_2_fu_287_p3() {
    tmp_2_fu_287_p3 = esl_concat<3,1>(h_reg_118.read(), ap_const_lv1_0);
}

void subconv_3x3_8_stride::thread_tmp_31_cast_fu_473_p1() {
    tmp_31_cast_fu_473_p1 = esl_zext<64,11>(tmp_22_fu_468_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_32_cast_fu_502_p1() {
    tmp_32_cast_fu_502_p1 = esl_zext<64,15>(tmp_23_fu_497_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_3_cast_fu_295_p1() {
    tmp_3_cast_fu_295_p1 = esl_zext<12,3>(h_reg_118.read());
}

void subconv_3x3_8_stride::thread_tmp_3_fu_231_p3() {
    tmp_3_fu_231_p3 = esl_concat<7,1>(co_reg_107.read(), ap_const_lv1_0);
}

void subconv_3x3_8_stride::thread_tmp_4_cast_fu_464_p1() {
    tmp_4_cast_fu_464_p1 = esl_zext<11,2>(n_reg_177.read());
}

void subconv_3x3_8_stride::thread_tmp_4_fu_243_p2() {
    tmp_4_fu_243_p2 = (!p_shl4_cast_fu_239_p1.read().is_01() || !p_shl3_cast_fu_227_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl4_cast_fu_239_p1.read()) + sc_biguint<11>(p_shl3_cast_fu_227_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_5_fu_336_p3() {
    tmp_5_fu_336_p3 = esl_concat<3,1>(w_reg_130.read(), ap_const_lv1_0);
}

void subconv_3x3_8_stride::thread_tmp_6_cast_fu_437_p1() {
    tmp_6_cast_fu_437_p1 = esl_zext<13,3>(w_reg_130.read());
}

void subconv_3x3_8_stride::thread_tmp_6_fu_249_p3() {
    tmp_6_fu_249_p3 = esl_concat<7,2>(co_reg_107.read(), ap_const_lv2_0);
}

void subconv_3x3_8_stride::thread_tmp_7_fu_488_p2() {
    tmp_7_fu_488_p2 = (!tmp_5_reg_555.read().is_01() || !tmp2_cast_fu_484_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_5_reg_555.read()) + sc_bigint<4>(tmp2_cast_fu_484_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_8_cast_fu_362_p1() {
    tmp_8_cast_fu_362_p1 = esl_zext<11,2>(m_reg_154.read());
}

void subconv_3x3_8_stride::thread_tmp_8_fu_261_p2() {
    tmp_8_fu_261_p2 = (!p_shl2_cast_fu_257_p1.read().is_01() || !tmp_cast_fu_215_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl2_cast_fu_257_p1.read()) - sc_biguint<10>(tmp_cast_fu_215_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_9_cast_fu_493_p1() {
    tmp_9_cast_fu_493_p1 = esl_zext<15,4>(tmp_7_fu_488_p2.read());
}

void subconv_3x3_8_stride::thread_tmp_9_fu_271_p2() {
    tmp_9_fu_271_p2 = (!p_shl3_cast_fu_227_p1.read().is_01() || !p_shl4_cast_fu_239_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl3_cast_fu_227_p1.read()) - sc_biguint<11>(p_shl4_cast_fu_239_p1.read()));
}

void subconv_3x3_8_stride::thread_tmp_cast_fu_215_p1() {
    tmp_cast_fu_215_p1 = esl_zext<10,7>(co_reg_107.read());
}

void subconv_3x3_8_stride::thread_tmp_fu_210_p1() {
    tmp_fu_210_p1 = esl_zext<64,7>(co_reg_107.read());
}

void subconv_3x3_8_stride::thread_tmp_s_fu_393_p2() {
    tmp_s_fu_393_p2 = (!tmp_2_reg_542.read().is_01() || !tmp1_cast_fu_389_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_2_reg_542.read()) + sc_bigint<4>(tmp1_cast_fu_389_p1.read()));
}

void subconv_3x3_8_stride::thread_w_1_fu_446_p2() {
    w_1_fu_446_p2 = (!w_reg_130.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(w_reg_130.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void subconv_3x3_8_stride::thread_weight_address0() {
    weight_address0 =  (sc_lv<10>) (tmp_31_cast_fu_473_p1.read());
}

void subconv_3x3_8_stride::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_8_stride::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_198_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_330_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_350_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_452_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

