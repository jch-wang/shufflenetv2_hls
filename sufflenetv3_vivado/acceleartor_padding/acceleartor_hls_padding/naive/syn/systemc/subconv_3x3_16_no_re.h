// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _subconv_3x3_16_no_re_HH_
#define _subconv_3x3_16_no_re_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_faddbkb.h"
#include "ShuffleNetV2_fmulcud.h"

namespace ap_rtl {

struct subconv_3x3_16_no_re : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<8> > weight_address0;
    sc_out< sc_logic > weight_ce0;
    sc_in< sc_lv<32> > weight_q0;
    sc_out< sc_lv<5> > bias_address0;
    sc_out< sc_logic > bias_ce0;
    sc_in< sc_lv<32> > bias_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    subconv_3x3_16_no_re(sc_module_name name);
    SC_HAS_PROCESS(subconv_3x3_16_no_re);

    ~subconv_3x3_16_no_re();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_faddbkb<1,5,32,32,32>* ShuffleNetV2_faddbkb_x_U32;
    ShuffleNetV2_fmulcud<1,4,32,32,32>* ShuffleNetV2_fmulcud_x_U33;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > co_6_fu_194_p2;
    sc_signal< sc_lv<5> > co_6_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_85_fu_233_p2;
    sc_signal< sc_lv<10> > tmp_85_reg_475;
    sc_signal< sc_lv<1> > exitcond4_fu_188_p2;
    sc_signal< sc_lv<9> > tmp_119_cast_fu_257_p1;
    sc_signal< sc_lv<9> > tmp_119_cast_reg_481;
    sc_signal< sc_lv<5> > bias_addr_reg_486;
    sc_signal< sc_lv<14> > tmp_89_fu_296_p2;
    sc_signal< sc_lv<14> > tmp_89_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_261_p2;
    sc_signal< sc_lv<5> > h_6_fu_308_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond2_fu_302_p2;
    sc_signal< sc_lv<2> > m_6_fu_320_p2;
    sc_signal< sc_lv<2> > m_6_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > tmp_91_fu_330_p2;
    sc_signal< sc_lv<9> > tmp_91_reg_515;
    sc_signal< sc_lv<1> > exitcond1_fu_314_p2;
    sc_signal< sc_lv<10> > tmp_93_fu_355_p2;
    sc_signal< sc_lv<10> > tmp_93_reg_521;
    sc_signal< sc_lv<9> > tmp_92_fu_365_p2;
    sc_signal< sc_lv<9> > tmp_92_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<14> > tmp_94_fu_388_p2;
    sc_signal< sc_lv<14> > tmp_94_reg_532;
    sc_signal< sc_lv<2> > n_6_fu_400_p2;
    sc_signal< sc_lv<2> > n_6_reg_540;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > tmp_95_fu_410_p2;
    sc_signal< sc_lv<9> > tmp_95_reg_545;
    sc_signal< sc_lv<1> > exitcond_fu_394_p2;
    sc_signal< sc_lv<14> > tmp_96_fu_435_p2;
    sc_signal< sc_lv<14> > tmp_96_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > weight_load_reg_565;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > input_load_reg_570;
    sc_signal< sc_lv<32> > grp_fu_184_p2;
    sc_signal< sc_lv<32> > tmp_54_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > grp_fu_178_p2;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > bias_load_reg_585;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<14> > tmp_90_fu_452_p2;
    sc_signal< sc_lv<14> > tmp_90_reg_590;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<5> > w_6_fu_457_p2;
    sc_signal< sc_lv<5> > w_6_reg_595;
    sc_signal< sc_lv<32> > result_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<5> > co_reg_97;
    sc_signal< sc_lv<5> > h_reg_108;
    sc_signal< sc_lv<5> > w_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<32> > sum_reg_132;
    sc_signal< sc_lv<2> > m_reg_144;
    sc_signal< sc_lv<32> > sum_1_reg_155;
    sc_signal< sc_lv<2> > n_reg_167;
    sc_signal< sc_lv<64> > tmp_fu_200_p1;
    sc_signal< sc_lv<64> > tmp_132_cast_fu_440_p1;
    sc_signal< sc_lv<64> > tmp_133_cast_fu_444_p1;
    sc_signal< sc_lv<64> > tmp_124_cast_fu_463_p1;
    sc_signal< sc_lv<32> > grp_fu_178_p0;
    sc_signal< sc_lv<32> > grp_fu_178_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<9> > tmp_s_fu_209_p3;
    sc_signal< sc_lv<6> > tmp_84_fu_221_p3;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_229_p1;
    sc_signal< sc_lv<10> > p_shl1_cast_fu_217_p1;
    sc_signal< sc_lv<7> > tmp_86_fu_239_p3;
    sc_signal< sc_lv<8> > p_shl_cast_fu_247_p1;
    sc_signal< sc_lv<8> > tmp_cast_fu_205_p1;
    sc_signal< sc_lv<8> > tmp_87_fu_251_p2;
    sc_signal< sc_lv<10> > tmp_cast_35_fu_267_p1;
    sc_signal< sc_lv<10> > tmp_88_fu_271_p2;
    sc_signal< sc_lv<11> > tmp_48_fu_284_p3;
    sc_signal< sc_lv<14> > p_shl3_cast_fu_276_p3;
    sc_signal< sc_lv<14> > p_shl4_cast_fu_292_p1;
    sc_signal< sc_lv<9> > tmp_48_cast_fu_326_p1;
    sc_signal< sc_lv<2> > tmp1_fu_335_p2;
    sc_signal< sc_lv<5> > tmp1_cast_fu_341_p1;
    sc_signal< sc_lv<5> > tmp_49_fu_345_p2;
    sc_signal< sc_lv<10> > tmp_50_cast_fu_351_p1;
    sc_signal< sc_lv<9> > tmp_50_fu_360_p2;
    sc_signal< sc_lv<11> > tmp_51_fu_377_p3;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_384_p1;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_370_p3;
    sc_signal< sc_lv<9> > tmp_51_cast_fu_406_p1;
    sc_signal< sc_lv<2> > tmp2_fu_415_p2;
    sc_signal< sc_lv<5> > tmp2_cast_fu_421_p1;
    sc_signal< sc_lv<5> > tmp_52_fu_425_p2;
    sc_signal< sc_lv<14> > tmp_53_cast_fu_431_p1;
    sc_signal< sc_lv<14> > tmp_47_cast_fu_448_p1;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<9> ap_const_lv9_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_address0();
    void thread_bias_ce0();
    void thread_co_6_fu_194_p2();
    void thread_exitcond1_fu_314_p2();
    void thread_exitcond2_fu_302_p2();
    void thread_exitcond3_fu_261_p2();
    void thread_exitcond4_fu_188_p2();
    void thread_exitcond_fu_394_p2();
    void thread_grp_fu_178_p0();
    void thread_grp_fu_178_p1();
    void thread_h_6_fu_308_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_6_fu_320_p2();
    void thread_n_6_fu_400_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_217_p1();
    void thread_p_shl2_cast_fu_229_p1();
    void thread_p_shl3_cast_fu_276_p3();
    void thread_p_shl4_cast_fu_292_p1();
    void thread_p_shl5_cast_fu_370_p3();
    void thread_p_shl6_cast_fu_384_p1();
    void thread_p_shl_cast_fu_247_p1();
    void thread_tmp1_cast_fu_341_p1();
    void thread_tmp1_fu_335_p2();
    void thread_tmp2_cast_fu_421_p1();
    void thread_tmp2_fu_415_p2();
    void thread_tmp_119_cast_fu_257_p1();
    void thread_tmp_124_cast_fu_463_p1();
    void thread_tmp_132_cast_fu_440_p1();
    void thread_tmp_133_cast_fu_444_p1();
    void thread_tmp_47_cast_fu_448_p1();
    void thread_tmp_48_cast_fu_326_p1();
    void thread_tmp_48_fu_284_p3();
    void thread_tmp_49_fu_345_p2();
    void thread_tmp_50_cast_fu_351_p1();
    void thread_tmp_50_fu_360_p2();
    void thread_tmp_51_cast_fu_406_p1();
    void thread_tmp_51_fu_377_p3();
    void thread_tmp_52_fu_425_p2();
    void thread_tmp_53_cast_fu_431_p1();
    void thread_tmp_84_fu_221_p3();
    void thread_tmp_85_fu_233_p2();
    void thread_tmp_86_fu_239_p3();
    void thread_tmp_87_fu_251_p2();
    void thread_tmp_88_fu_271_p2();
    void thread_tmp_89_fu_296_p2();
    void thread_tmp_90_fu_452_p2();
    void thread_tmp_91_fu_330_p2();
    void thread_tmp_92_fu_365_p2();
    void thread_tmp_93_fu_355_p2();
    void thread_tmp_94_fu_388_p2();
    void thread_tmp_95_fu_410_p2();
    void thread_tmp_96_fu_435_p2();
    void thread_tmp_cast_35_fu_267_p1();
    void thread_tmp_cast_fu_205_p1();
    void thread_tmp_fu_200_p1();
    void thread_tmp_s_fu_209_p3();
    void thread_w_6_fu_457_p2();
    void thread_weight_address0();
    void thread_weight_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
