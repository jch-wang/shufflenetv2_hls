

================================================================
== Vivado HLS Report for 'subconv_3x3_16_no_re'
================================================================
* Date:           Fri Dec 14 14:26:14 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_newone
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  788066|  788066|  788066|  788066|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                         |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |   13104|   13104|       546|          -|          -|    24|    no    |
        | + Loop 1.1              |     544|     544|        34|          -|          -|    16|    no    |
        |  ++ Loop 1.1.1          |      32|      32|         2|          -|          -|    16|    no    |
        |- Loop 2                 |  774960|  774960|     32290|          -|          -|    24|    no    |
        | + Loop 2.1              |   32288|   32288|      2018|          -|          -|    16|    no    |
        |  ++ Loop 2.1.1          |    2016|    2016|       126|          -|          -|    16|    no    |
        |   +++ Loop 2.1.1.1      |     117|     117|        39|          -|          -|     3|    no    |
        |    ++++ Loop 2.1.1.1.1  |      36|      36|        12|          -|          -|     3|    no    |
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 29
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond7)
	6  / (exitcond7)
3 --> 
	4  / (!exitcond6)
	2  / (exitcond6)
4 --> 
	5  / (!exitcond5)
	3  / (exitcond5)
5 --> 
	4  / true
6 --> 
	7  / (!exitcond4)
7 --> 
	8  / (!exitcond3)
	6  / (exitcond3)
8 --> 
	9  / (!exitcond2)
	7  / (exitcond2)
9 --> 
	10  / (!exitcond1)
	23  / (exitcond1)
10 --> 
	11  / true
11 --> 
	12  / (!exitcond)
	9  / (exitcond)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	11  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	8  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_30 (5)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:158
:0  br label %.loopexit


 <State 2>: 3.31ns
ST_2: co (7)  [1/1] 0.00ns
.loopexit:0  %co = phi i5 [ 0, %0 ], [ %co_11, %.loopexit.loopexit ]

ST_2: exitcond7 (8)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:158
.loopexit:1  %exitcond7 = icmp eq i5 %co, -8

ST_2: empty (9)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24)

ST_2: co_11 (10)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:158
.loopexit:3  %co_11 = add i5 %co, 1

ST_2: StgValue_35 (11)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:158
.loopexit:4  br i1 %exitcond7, label %.preheader11.preheader, label %.preheader13.preheader

ST_2: tmp (13)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader13.preheader:0  %tmp = zext i5 %co to i64

ST_2: tmp_s (14)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:158
.preheader13.preheader:1  %tmp_s = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %co, i4 0)

ST_2: p_shl_cast (15)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:158
.preheader13.preheader:2  %p_shl_cast = zext i9 %tmp_s to i10

ST_2: tmp_121 (16)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:158
.preheader13.preheader:3  %tmp_121 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %co, i1 false)

ST_2: p_shl1_cast (17)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader13.preheader:4  %p_shl1_cast = zext i6 %tmp_121 to i10

ST_2: tmp_122 (18)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:161
.preheader13.preheader:5  %tmp_122 = add i10 %p_shl1_cast, %p_shl_cast

ST_2: bias_addr (19)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader13.preheader:6  %bias_addr = getelementptr [24 x float]* %bias, i64 0, i64 %tmp

ST_2: StgValue_43 (20)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:159
.preheader13.preheader:7  br label %.preheader13

ST_2: StgValue_44 (54)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:166
.preheader11.preheader:0  br label %.preheader11


 <State 3>: 4.67ns
ST_3: h (22)  [1/1] 0.00ns
.preheader13:0  %h = phi i5 [ %h_11, %2 ], [ 1, %.preheader13.preheader ]

ST_3: exitcond6 (23)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:159
.preheader13:1  %exitcond6 = icmp eq i5 %h, -15

ST_3: empty_47 (24)  [1/1] 0.00ns
.preheader13:2  %empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: StgValue_48 (25)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:159
.preheader13:3  br i1 %exitcond6, label %.loopexit.loopexit, label %.preheader12.preheader

ST_3: tmp_67_cast (27)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:0  %tmp_67_cast = zext i5 %h to i10

ST_3: tmp_128 (28)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:1  %tmp_128 = add i10 %tmp_67_cast, %tmp_122

ST_3: p_shl2_cast (29)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:2  %p_shl2_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_128, i4 0)

ST_3: tmp_118 (30)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:3  %tmp_118 = call i11 @_ssdm_op_BitConcatenate.i11.i10.i1(i10 %tmp_128, i1 false)

ST_3: p_shl3_cast (31)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:4  %p_shl3_cast = zext i11 %tmp_118 to i14

ST_3: tmp_129 (32)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:161
.preheader12.preheader:5  %tmp_129 = add i14 %p_shl2_cast, %p_shl3_cast

ST_3: StgValue_55 (33)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:160
.preheader12.preheader:6  br label %.preheader12

ST_3: StgValue_56 (52)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.31ns
ST_4: w (35)  [1/1] 0.00ns
.preheader12:0  %w = phi i5 [ %w_11, %1 ], [ 1, %.preheader12.preheader ]

ST_4: exitcond5 (36)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:160
.preheader12:1  %exitcond5 = icmp eq i5 %w, -15

ST_4: empty_48 (37)  [1/1] 0.00ns
.preheader12:2  %empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: StgValue_60 (38)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:160
.preheader12:3  br i1 %exitcond5, label %2, label %1

ST_4: bias_load (40)  [2/2] 2.32ns  loc: accelerator_newone/components.cpp:161
:0  %bias_load = load float* %bias_addr, align 4

ST_4: tmp_69_cast (41)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
:1  %tmp_69_cast = zext i5 %w to i14

ST_4: tmp_132 (42)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:161
:2  %tmp_132 = add i14 %tmp_129, %tmp_69_cast

ST_4: w_11 (46)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:160
:6  %w_11 = add i5 %w, 1

ST_4: h_11 (49)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:159
:0  %h_11 = add i5 %h, 1

ST_4: StgValue_66 (50)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:159
:1  br label %.preheader13


 <State 5>: 5.58ns
ST_5: bias_load (40)  [1/2] 2.32ns  loc: accelerator_newone/components.cpp:161
:0  %bias_load = load float* %bias_addr, align 4

ST_5: tmp_175_cast (43)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
:3  %tmp_175_cast = zext i14 %tmp_132 to i64

ST_5: output_addr (44)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:161
:4  %output_addr = getelementptr [7776 x float]* %output_r, i64 0, i64 %tmp_175_cast

ST_5: StgValue_70 (45)  [1/1] 3.25ns  loc: accelerator_newone/components.cpp:161
:5  store float %bias_load, float* %output_addr, align 4

ST_5: StgValue_71 (47)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:160
:7  br label %.preheader12


 <State 6>: 3.31ns
ST_6: co1 (56)  [1/1] 0.00ns
.preheader11:0  %co1 = phi i5 [ %co_12, %.preheader11.loopexit ], [ 0, %.preheader11.preheader ]

ST_6: exitcond4 (57)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:166
.preheader11:1  %exitcond4 = icmp eq i5 %co1, -8

ST_6: empty_49 (58)  [1/1] 0.00ns
.preheader11:2  %empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24)

ST_6: co_12 (59)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:166
.preheader11:3  %co_12 = add i5 %co1, 1

ST_6: StgValue_76 (60)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader11:4  br i1 %exitcond4, label %6, label %.preheader10.preheader

ST_6: tmp_cast (62)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader10.preheader:0  %tmp_cast = zext i5 %co1 to i8

ST_6: tmp_123 (63)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader10.preheader:1  %tmp_123 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %co1, i4 0)

ST_6: p_shl5_cast (64)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader10.preheader:2  %p_shl5_cast = zext i9 %tmp_123 to i10

ST_6: tmp_124 (65)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader10.preheader:3  %tmp_124 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %co1, i1 false)

ST_6: p_shl6_cast (66)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader10.preheader:4  %p_shl6_cast = zext i6 %tmp_124 to i10

ST_6: tmp_125 (67)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172
.preheader10.preheader:5  %tmp_125 = add i10 %p_shl6_cast, %p_shl5_cast

ST_6: tmp_126 (68)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:166
.preheader10.preheader:6  %tmp_126 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %co1, i2 0)

ST_6: p_shl4_cast (69)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader10.preheader:7  %p_shl4_cast = zext i7 %tmp_126 to i8

ST_6: tmp_127 (70)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172
.preheader10.preheader:8  %tmp_127 = sub i8 %p_shl4_cast, %tmp_cast

ST_6: tmp_166_cast (71)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader10.preheader:9  %tmp_166_cast = sext i8 %tmp_127 to i9

ST_6: StgValue_87 (72)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:167
.preheader10.preheader:10  br label %.preheader10

ST_6: StgValue_88 (157)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:179
:0  ret void


 <State 7>: 4.67ns
ST_7: h2 (74)  [1/1] 0.00ns
.preheader10:0  %h2 = phi i5 [ %h_12, %5 ], [ 1, %.preheader10.preheader ]

ST_7: exitcond3 (75)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:167
.preheader10:1  %exitcond3 = icmp eq i5 %h2, -15

ST_7: empty_50 (76)  [1/1] 0.00ns
.preheader10:2  %empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_7: StgValue_92 (77)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:167
.preheader10:3  br i1 %exitcond3, label %.preheader11.loopexit, label %.preheader9.preheader

ST_7: tmp_68_cast (79)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:0  %tmp_68_cast = zext i5 %h2 to i10

ST_7: tmp_130 (80)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:1  %tmp_130 = add i10 %tmp_68_cast, %tmp_125

ST_7: p_shl7_cast (81)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:2  %p_shl7_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_130, i4 0)

ST_7: tmp_119 (82)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:3  %tmp_119 = call i11 @_ssdm_op_BitConcatenate.i11.i10.i1(i10 %tmp_130, i1 false)

ST_7: p_shl8_cast (83)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:4  %p_shl8_cast = zext i11 %tmp_119 to i14

ST_7: tmp_131 (84)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:175
.preheader9.preheader:5  %tmp_131 = add i14 %p_shl7_cast, %p_shl8_cast

ST_7: StgValue_99 (85)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:168
.preheader9.preheader:6  br label %.preheader9

ST_7: StgValue_100 (155)  [1/1] 0.00ns
.preheader11.loopexit:0  br label %.preheader11


 <State 8>: 3.31ns
ST_8: w3 (87)  [1/1] 0.00ns
.preheader9:0  %w3 = phi i5 [ %w_12, %4 ], [ 1, %.preheader9.preheader ]

ST_8: exitcond2 (88)  [1/1] 3.31ns  loc: accelerator_newone/components.cpp:168
.preheader9:1  %exitcond2 = icmp eq i5 %w3, -15

ST_8: empty_51 (89)  [1/1] 0.00ns
.preheader9:2  %empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_8: StgValue_104 (90)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:168
.preheader9:3  br i1 %exitcond2, label %5, label %.preheader8.preheader

ST_8: StgValue_105 (92)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:170
.preheader8.preheader:0  br label %.preheader8

ST_8: h_12 (152)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:167
:0  %h_12 = add i5 %h2, 1

ST_8: StgValue_107 (153)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:167
:1  br label %.preheader10


 <State 9>: 6.83ns
ST_9: sum (94)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader8:0  %sum = phi float [ %sum_1, %.preheader8.loopexit ], [ 0.000000e+00, %.preheader8.preheader ]

ST_9: m (95)  [1/1] 0.00ns
.preheader8:1  %m = phi i2 [ %m_6, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_9: exitcond1 (96)  [1/1] 2.07ns  loc: accelerator_newone/components.cpp:170
.preheader8:2  %exitcond1 = icmp eq i2 %m, -1

ST_9: empty_52 (97)  [1/1] 0.00ns
.preheader8:3  %empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_9: m_6 (98)  [1/1] 2.17ns  loc: accelerator_newone/components.cpp:170
.preheader8:4  %m_6 = add i2 %m, 1

ST_9: StgValue_113 (99)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:170
.preheader8:5  br i1 %exitcond1, label %4, label %.preheader.preheader

ST_9: tmp_72_cast (101)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:0  %tmp_72_cast = zext i2 %m to i9

ST_9: tmp_134 (102)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:1  %tmp_134 = add i9 %tmp_166_cast, %tmp_72_cast

ST_9: tmp1 (105)  [1/1] 2.17ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:4  %tmp1 = add i2 -1, %m

ST_9: tmp1_cast (106)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:5  %tmp1_cast = sext i2 %tmp1 to i5

ST_9: tmp_73 (107)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:6  %tmp_73 = add i5 %h2, %tmp1_cast

ST_9: tmp_74_cast (108)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:7  %tmp_74_cast = zext i5 %tmp_73 to i10

ST_9: tmp_136 (109)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:8  %tmp_136 = add i10 %tmp_125, %tmp_74_cast

ST_9: tmp_70_cast (142)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
:0  %tmp_70_cast = zext i5 %w3 to i14

ST_9: tmp_133 (143)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:175
:1  %tmp_133 = add i14 %tmp_131, %tmp_70_cast

ST_9: tmp_176_cast (144)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
:2  %tmp_176_cast = zext i14 %tmp_133 to i64

ST_9: output_addr_6 (145)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:175
:3  %output_addr_6 = getelementptr [7776 x float]* %output_r, i64 0, i64 %tmp_176_cast

ST_9: output_load (146)  [2/2] 3.25ns  loc: accelerator_newone/components.cpp:175
:4  %output_load = load float* %output_addr_6, align 4


 <State 10>: 2.34ns
ST_10: tmp_120 (103)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172 (grouped into LUT with out node tmp_135)
.preheader.preheader:2  %tmp_120 = shl i9 %tmp_134, 2

ST_10: tmp_135 (104)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172 (out node of the LUT)
.preheader.preheader:3  %tmp_135 = sub i9 %tmp_120, %tmp_134

ST_10: p_shl9_cast (110)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:9  %p_shl9_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_136, i4 0)

ST_10: tmp_137 (111)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:10  %tmp_137 = call i11 @_ssdm_op_BitConcatenate.i11.i10.i1(i10 %tmp_136, i1 false)

ST_10: p_shl10_cast (112)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:11  %p_shl10_cast = zext i11 %tmp_137 to i14

ST_10: tmp_138 (113)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:172
.preheader.preheader:12  %tmp_138 = add i14 %p_shl10_cast, %p_shl9_cast

ST_10: StgValue_132 (114)  [1/1] 1.59ns  loc: accelerator_newone/components.cpp:171
.preheader.preheader:13  br label %.preheader


 <State 11>: 6.85ns
ST_11: sum_1 (116)  [1/1] 0.00ns
.preheader:0  %sum_1 = phi float [ %sum_7, %3 ], [ %sum, %.preheader.preheader ]

ST_11: n (117)  [1/1] 0.00ns
.preheader:1  %n = phi i2 [ %n_6, %3 ], [ 0, %.preheader.preheader ]

ST_11: exitcond (118)  [1/1] 2.07ns  loc: accelerator_newone/components.cpp:171
.preheader:2  %exitcond = icmp eq i2 %n, -1

ST_11: empty_53 (119)  [1/1] 0.00ns
.preheader:3  %empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_11: n_6 (120)  [1/1] 2.17ns  loc: accelerator_newone/components.cpp:171
.preheader:4  %n_6 = add i2 %n, 1

ST_11: StgValue_138 (121)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:171
.preheader:5  br i1 %exitcond, label %.preheader8.loopexit, label %3

ST_11: tmp_75_cast (123)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:0  %tmp_75_cast = zext i2 %n to i9

ST_11: tmp_139 (124)  [1/1] 2.32ns  loc: accelerator_newone/components.cpp:172
:1  %tmp_139 = add i9 %tmp_135, %tmp_75_cast

ST_11: tmp2 (128)  [1/1] 2.17ns  loc: accelerator_newone/components.cpp:172
:5  %tmp2 = add i2 %n, -1

ST_11: tmp2_cast (129)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:6  %tmp2_cast = sext i2 %tmp2 to i5

ST_11: tmp_76 (130)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:172
:7  %tmp_76 = add i5 %w3, %tmp2_cast

ST_11: tmp_77_cast (131)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:8  %tmp_77_cast = zext i5 %tmp_76 to i14

ST_11: tmp_140 (132)  [1/1] 2.34ns  loc: accelerator_newone/components.cpp:172
:9  %tmp_140 = add i14 %tmp_138, %tmp_77_cast

ST_11: StgValue_146 (140)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8


 <State 12>: 3.25ns
ST_12: tmp_184_cast (125)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:2  %tmp_184_cast = zext i9 %tmp_139 to i64

ST_12: weight_addr (126)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:3  %weight_addr = getelementptr [216 x float]* %weight, i64 0, i64 %tmp_184_cast

ST_12: weight_load (127)  [2/2] 3.25ns  loc: accelerator_newone/components.cpp:172
:4  %weight_load = load float* %weight_addr, align 4

ST_12: tmp_185_cast (133)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:10  %tmp_185_cast = zext i14 %tmp_140 to i64

ST_12: input_addr (134)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:172
:11  %input_addr = getelementptr [7776 x float]* %input_r, i64 0, i64 %tmp_185_cast

ST_12: input_load (135)  [2/2] 3.25ns  loc: accelerator_newone/components.cpp:172
:12  %input_load = load float* %input_addr, align 4


 <State 13>: 3.25ns
ST_13: weight_load (127)  [1/2] 3.25ns  loc: accelerator_newone/components.cpp:172
:4  %weight_load = load float* %weight_addr, align 4

ST_13: input_load (135)  [1/2] 3.25ns  loc: accelerator_newone/components.cpp:172
:12  %input_load = load float* %input_addr, align 4


 <State 14>: 5.70ns
ST_14: tmp_78 (136)  [4/4] 5.70ns  loc: accelerator_newone/components.cpp:172
:13  %tmp_78 = fmul float %weight_load, %input_load


 <State 15>: 5.70ns
ST_15: tmp_78 (136)  [3/4] 5.70ns  loc: accelerator_newone/components.cpp:172
:13  %tmp_78 = fmul float %weight_load, %input_load


 <State 16>: 5.70ns
ST_16: tmp_78 (136)  [2/4] 5.70ns  loc: accelerator_newone/components.cpp:172
:13  %tmp_78 = fmul float %weight_load, %input_load


 <State 17>: 5.70ns
ST_17: tmp_78 (136)  [1/4] 5.70ns  loc: accelerator_newone/components.cpp:172
:13  %tmp_78 = fmul float %weight_load, %input_load


 <State 18>: 7.26ns
ST_18: sum_7 (137)  [5/5] 7.26ns  loc: accelerator_newone/components.cpp:172
:14  %sum_7 = fadd float %sum_1, %tmp_78


 <State 19>: 7.26ns
ST_19: sum_7 (137)  [4/5] 7.26ns  loc: accelerator_newone/components.cpp:172
:14  %sum_7 = fadd float %sum_1, %tmp_78


 <State 20>: 7.26ns
ST_20: sum_7 (137)  [3/5] 7.26ns  loc: accelerator_newone/components.cpp:172
:14  %sum_7 = fadd float %sum_1, %tmp_78


 <State 21>: 7.26ns
ST_21: sum_7 (137)  [2/5] 7.26ns  loc: accelerator_newone/components.cpp:172
:14  %sum_7 = fadd float %sum_1, %tmp_78


 <State 22>: 7.26ns
ST_22: sum_7 (137)  [1/5] 7.26ns  loc: accelerator_newone/components.cpp:172
:14  %sum_7 = fadd float %sum_1, %tmp_78

ST_22: StgValue_164 (138)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:171
:15  br label %.preheader


 <State 23>: 3.25ns
ST_23: output_load (146)  [1/2] 3.25ns  loc: accelerator_newone/components.cpp:175
:4  %output_load = load float* %output_addr_6, align 4


 <State 24>: 7.26ns
ST_24: tmp_71 (147)  [5/5] 7.26ns  loc: accelerator_newone/components.cpp:175
:5  %tmp_71 = fadd float %output_load, %sum

ST_24: w_12 (149)  [1/1] 2.33ns  loc: accelerator_newone/components.cpp:168
:7  %w_12 = add i5 %w3, 1


 <State 25>: 7.26ns
ST_25: tmp_71 (147)  [4/5] 7.26ns  loc: accelerator_newone/components.cpp:175
:5  %tmp_71 = fadd float %output_load, %sum


 <State 26>: 7.26ns
ST_26: tmp_71 (147)  [3/5] 7.26ns  loc: accelerator_newone/components.cpp:175
:5  %tmp_71 = fadd float %output_load, %sum


 <State 27>: 7.26ns
ST_27: tmp_71 (147)  [2/5] 7.26ns  loc: accelerator_newone/components.cpp:175
:5  %tmp_71 = fadd float %output_load, %sum


 <State 28>: 7.26ns
ST_28: tmp_71 (147)  [1/5] 7.26ns  loc: accelerator_newone/components.cpp:175
:5  %tmp_71 = fadd float %output_load, %sum


 <State 29>: 3.25ns
ST_29: StgValue_172 (148)  [1/1] 3.25ns  loc: accelerator_newone/components.cpp:175
:6  store float %tmp_71, float* %output_addr_6, align 4

ST_29: StgValue_173 (150)  [1/1] 0.00ns  loc: accelerator_newone/components.cpp:168
:8  br label %.preheader9



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_newone/components.cpp:158) [7]  (1.59 ns)

 <State 2>: 3.31ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_newone/components.cpp:158) [7]  (0 ns)
	'icmp' operation ('exitcond7', accelerator_newone/components.cpp:158) [8]  (3.31 ns)

 <State 3>: 4.67ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_newone/components.cpp:159) [22]  (0 ns)
	'add' operation ('tmp_128', accelerator_newone/components.cpp:161) [28]  (2.32 ns)
	'add' operation ('tmp_129', accelerator_newone/components.cpp:161) [32]  (2.34 ns)

 <State 4>: 3.31ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_newone/components.cpp:160) [35]  (0 ns)
	'icmp' operation ('exitcond5', accelerator_newone/components.cpp:160) [36]  (3.31 ns)

 <State 5>: 5.58ns
The critical path consists of the following:
	'load' operation ('bias_load', accelerator_newone/components.cpp:161) on array 'bias' [40]  (2.32 ns)
	'store' operation (accelerator_newone/components.cpp:161) of variable 'bias_load', accelerator_newone/components.cpp:161 on array 'output_r' [45]  (3.25 ns)

 <State 6>: 3.31ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_newone/components.cpp:166) [56]  (0 ns)
	'icmp' operation ('exitcond4', accelerator_newone/components.cpp:166) [57]  (3.31 ns)

 <State 7>: 4.67ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_newone/components.cpp:167) [74]  (0 ns)
	'add' operation ('tmp_130', accelerator_newone/components.cpp:175) [80]  (2.32 ns)
	'add' operation ('tmp_131', accelerator_newone/components.cpp:175) [84]  (2.34 ns)

 <State 8>: 3.31ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_newone/components.cpp:168) [87]  (0 ns)
	'icmp' operation ('exitcond2', accelerator_newone/components.cpp:168) [88]  (3.31 ns)

 <State 9>: 6.83ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', accelerator_newone/components.cpp:170) [95]  (0 ns)
	'add' operation ('tmp1', accelerator_newone/components.cpp:172) [105]  (2.17 ns)
	'add' operation ('tmp_73', accelerator_newone/components.cpp:172) [107]  (2.33 ns)
	'add' operation ('tmp_136', accelerator_newone/components.cpp:172) [109]  (2.32 ns)

 <State 10>: 2.34ns
The critical path consists of the following:
	'add' operation ('tmp_138', accelerator_newone/components.cpp:172) [113]  (2.34 ns)

 <State 11>: 6.85ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', accelerator_newone/components.cpp:171) [117]  (0 ns)
	'add' operation ('tmp2', accelerator_newone/components.cpp:172) [128]  (2.17 ns)
	'add' operation ('tmp_76', accelerator_newone/components.cpp:172) [130]  (2.33 ns)
	'add' operation ('tmp_140', accelerator_newone/components.cpp:172) [132]  (2.34 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('weight_addr', accelerator_newone/components.cpp:172) [126]  (0 ns)
	'load' operation ('weight_load', accelerator_newone/components.cpp:172) on array 'weight' [127]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'load' operation ('weight_load', accelerator_newone/components.cpp:172) on array 'weight' [127]  (3.25 ns)

 <State 14>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_newone/components.cpp:172) [136]  (5.7 ns)

 <State 15>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_newone/components.cpp:172) [136]  (5.7 ns)

 <State 16>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_newone/components.cpp:172) [136]  (5.7 ns)

 <State 17>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_newone/components.cpp:172) [136]  (5.7 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_newone/components.cpp:172) [137]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_newone/components.cpp:172) [137]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_newone/components.cpp:172) [137]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_newone/components.cpp:172) [137]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_newone/components.cpp:172) [137]  (7.26 ns)

 <State 23>: 3.25ns
The critical path consists of the following:
	'load' operation ('output_load', accelerator_newone/components.cpp:175) on array 'output_r' [146]  (3.25 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_71', accelerator_newone/components.cpp:175) [147]  (7.26 ns)

 <State 25>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_71', accelerator_newone/components.cpp:175) [147]  (7.26 ns)

 <State 26>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_71', accelerator_newone/components.cpp:175) [147]  (7.26 ns)

 <State 27>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_71', accelerator_newone/components.cpp:175) [147]  (7.26 ns)

 <State 28>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_71', accelerator_newone/components.cpp:175) [147]  (7.26 ns)

 <State 29>: 3.25ns
The critical path consists of the following:
	'store' operation (accelerator_newone/components.cpp:175) of variable 'tmp_71', accelerator_newone/components.cpp:175 on array 'output_r' [148]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
