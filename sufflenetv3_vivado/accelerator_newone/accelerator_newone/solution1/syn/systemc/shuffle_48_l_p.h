// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_48_l_p_HH_
#define _shuffle_48_l_p_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct shuffle_48_l_p : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > left_r_address0;
    sc_out< sc_logic > left_r_ce0;
    sc_in< sc_lv<32> > left_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    shuffle_48_l_p(sc_module_name name);
    SC_HAS_PROCESS(shuffle_48_l_p);

    ~shuffle_48_l_p();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_340_fu_108_p1;
    sc_signal< sc_lv<1> > tmp_340_reg_323;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > co_36_fu_118_p2;
    sc_signal< sc_lv<7> > co_36_reg_330;
    sc_signal< sc_lv<10> > tmp_380_fu_158_p2;
    sc_signal< sc_lv<10> > tmp_380_reg_335;
    sc_signal< sc_lv<1> > exitcond2_fu_112_p2;
    sc_signal< sc_lv<11> > tmp_383_fu_188_p2;
    sc_signal< sc_lv<11> > tmp_383_reg_340;
    sc_signal< sc_lv<4> > h_36_fu_200_p2;
    sc_signal< sc_lv<4> > h_36_reg_348;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp_385_fu_243_p2;
    sc_signal< sc_lv<14> > tmp_385_reg_353;
    sc_signal< sc_lv<1> > exitcond1_fu_194_p2;
    sc_signal< sc_lv<15> > tmp_387_fu_278_p2;
    sc_signal< sc_lv<15> > tmp_387_reg_358;
    sc_signal< sc_lv<4> > w_36_fu_290_p2;
    sc_signal< sc_lv<4> > w_36_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_fu_284_p2;
    sc_signal< sc_lv<15> > tmp_389_fu_314_p2;
    sc_signal< sc_lv<15> > tmp_389_reg_376;
    sc_signal< sc_lv<7> > co_reg_75;
    sc_signal< sc_lv<4> > h_reg_86;
    sc_signal< sc_lv<4> > w_reg_97;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_502_cast_fu_309_p1;
    sc_signal< sc_lv<64> > tmp_503_cast_fu_319_p1;
    sc_signal< sc_lv<6> > tmp_fu_124_p4;
    sc_signal< sc_lv<9> > tmp_s_fu_134_p3;
    sc_signal< sc_lv<7> > tmp_379_fu_146_p3;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_154_p1;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_142_p1;
    sc_signal< sc_lv<10> > tmp_381_fu_164_p3;
    sc_signal< sc_lv<8> > tmp_382_fu_176_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_184_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_172_p1;
    sc_signal< sc_lv<10> > tmp_cast_fu_210_p1;
    sc_signal< sc_lv<10> > tmp_384_fu_214_p2;
    sc_signal< sc_lv<13> > tmp_341_fu_219_p3;
    sc_signal< sc_lv<11> > tmp_342_fu_231_p3;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_227_p1;
    sc_signal< sc_lv<14> > p_shl7_cast_fu_239_p1;
    sc_signal< sc_lv<11> > tmp_cast9_fu_206_p1;
    sc_signal< sc_lv<11> > tmp_386_fu_249_p2;
    sc_signal< sc_lv<14> > tmp_343_fu_254_p3;
    sc_signal< sc_lv<12> > tmp_344_fu_266_p3;
    sc_signal< sc_lv<15> > p_shl4_cast_fu_262_p1;
    sc_signal< sc_lv<15> > p_shl5_cast_fu_274_p1;
    sc_signal< sc_lv<14> > tmp_132_cast_fu_300_p1;
    sc_signal< sc_lv<14> > tmp_388_fu_304_p2;
    sc_signal< sc_lv<15> > tmp_132_cast8_fu_296_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_co_36_fu_118_p2();
    void thread_exitcond1_fu_194_p2();
    void thread_exitcond2_fu_112_p2();
    void thread_exitcond_fu_284_p2();
    void thread_h_36_fu_200_p2();
    void thread_left_r_address0();
    void thread_left_r_ce0();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_184_p1();
    void thread_p_shl2_cast_fu_142_p1();
    void thread_p_shl3_cast_fu_154_p1();
    void thread_p_shl4_cast_fu_262_p1();
    void thread_p_shl5_cast_fu_274_p1();
    void thread_p_shl6_cast_fu_227_p1();
    void thread_p_shl7_cast_fu_239_p1();
    void thread_p_shl_cast_fu_172_p1();
    void thread_tmp_132_cast8_fu_296_p1();
    void thread_tmp_132_cast_fu_300_p1();
    void thread_tmp_340_fu_108_p1();
    void thread_tmp_341_fu_219_p3();
    void thread_tmp_342_fu_231_p3();
    void thread_tmp_343_fu_254_p3();
    void thread_tmp_344_fu_266_p3();
    void thread_tmp_379_fu_146_p3();
    void thread_tmp_380_fu_158_p2();
    void thread_tmp_381_fu_164_p3();
    void thread_tmp_382_fu_176_p3();
    void thread_tmp_383_fu_188_p2();
    void thread_tmp_384_fu_214_p2();
    void thread_tmp_385_fu_243_p2();
    void thread_tmp_386_fu_249_p2();
    void thread_tmp_387_fu_278_p2();
    void thread_tmp_388_fu_304_p2();
    void thread_tmp_389_fu_314_p2();
    void thread_tmp_502_cast_fu_309_p1();
    void thread_tmp_503_cast_fu_319_p1();
    void thread_tmp_cast9_fu_206_p1();
    void thread_tmp_cast_fu_210_p1();
    void thread_tmp_fu_124_p4();
    void thread_tmp_s_fu_134_p3();
    void thread_w_36_fu_290_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
