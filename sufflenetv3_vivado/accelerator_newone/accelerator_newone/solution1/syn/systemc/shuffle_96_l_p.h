// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_96_l_p_HH_
#define _shuffle_96_l_p_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct shuffle_96_l_p : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > left_r_address0;
    sc_out< sc_logic > left_r_ce0;
    sc_in< sc_lv<32> > left_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    shuffle_96_l_p(sc_module_name name);
    SC_HAS_PROCESS(shuffle_96_l_p);

    ~shuffle_96_l_p();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_327_fu_106_p1;
    sc_signal< sc_lv<1> > tmp_327_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > co_33_fu_116_p2;
    sc_signal< sc_lv<8> > co_33_reg_328;
    sc_signal< sc_lv<12> > tmp_439_cast_fu_162_p1;
    sc_signal< sc_lv<12> > tmp_439_cast_reg_333;
    sc_signal< sc_lv<1> > exitcond2_fu_110_p2;
    sc_signal< sc_lv<13> > tmp_442_cast_fu_196_p1;
    sc_signal< sc_lv<13> > tmp_442_cast_reg_338;
    sc_signal< sc_lv<3> > h_33_fu_206_p2;
    sc_signal< sc_lv<3> > h_33_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > tmp_352_fu_245_p2;
    sc_signal< sc_lv<13> > tmp_352_reg_351;
    sc_signal< sc_lv<1> > exitcond1_fu_200_p2;
    sc_signal< sc_lv<14> > tmp_354_fu_276_p2;
    sc_signal< sc_lv<14> > tmp_354_reg_356;
    sc_signal< sc_lv<3> > w_33_fu_288_p2;
    sc_signal< sc_lv<3> > w_33_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_fu_282_p2;
    sc_signal< sc_lv<14> > tmp_356_fu_312_p2;
    sc_signal< sc_lv<14> > tmp_356_reg_374;
    sc_signal< sc_lv<8> > co_reg_73;
    sc_signal< sc_lv<3> > h_reg_84;
    sc_signal< sc_lv<3> > w_reg_95;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_451_cast_fu_307_p1;
    sc_signal< sc_lv<64> > tmp_452_cast_fu_317_p1;
    sc_signal< sc_lv<7> > tmp_fu_122_p4;
    sc_signal< sc_lv<10> > tmp_s_fu_132_p3;
    sc_signal< sc_lv<8> > tmp_346_fu_144_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_140_p1;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_152_p1;
    sc_signal< sc_lv<11> > tmp_347_fu_156_p2;
    sc_signal< sc_lv<11> > tmp_348_fu_166_p3;
    sc_signal< sc_lv<9> > tmp_349_fu_178_p3;
    sc_signal< sc_lv<12> > p_shl_cast_fu_174_p1;
    sc_signal< sc_lv<12> > p_shl1_cast_fu_186_p1;
    sc_signal< sc_lv<12> > tmp_350_fu_190_p2;
    sc_signal< sc_lv<12> > tmp_cast_fu_216_p1;
    sc_signal< sc_lv<12> > tmp_351_fu_220_p2;
    sc_signal< sc_lv<10> > tmp_328_fu_225_p1;
    sc_signal< sc_lv<13> > p_shl6_cast_fu_229_p3;
    sc_signal< sc_lv<13> > p_shl7_cast_fu_237_p3;
    sc_signal< sc_lv<13> > tmp_cast9_fu_212_p1;
    sc_signal< sc_lv<13> > tmp_353_fu_251_p2;
    sc_signal< sc_lv<11> > tmp_329_fu_256_p1;
    sc_signal< sc_lv<14> > p_shl4_cast_fu_260_p3;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_268_p3;
    sc_signal< sc_lv<13> > tmp_129_cast_fu_298_p1;
    sc_signal< sc_lv<13> > tmp_355_fu_302_p2;
    sc_signal< sc_lv<14> > tmp_129_cast8_fu_294_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_C0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_co_33_fu_116_p2();
    void thread_exitcond1_fu_200_p2();
    void thread_exitcond2_fu_110_p2();
    void thread_exitcond_fu_282_p2();
    void thread_h_33_fu_206_p2();
    void thread_left_r_address0();
    void thread_left_r_ce0();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_186_p1();
    void thread_p_shl2_cast_fu_140_p1();
    void thread_p_shl3_cast_fu_152_p1();
    void thread_p_shl4_cast_fu_260_p3();
    void thread_p_shl5_cast_fu_268_p3();
    void thread_p_shl6_cast_fu_229_p3();
    void thread_p_shl7_cast_fu_237_p3();
    void thread_p_shl_cast_fu_174_p1();
    void thread_tmp_129_cast8_fu_294_p1();
    void thread_tmp_129_cast_fu_298_p1();
    void thread_tmp_327_fu_106_p1();
    void thread_tmp_328_fu_225_p1();
    void thread_tmp_329_fu_256_p1();
    void thread_tmp_346_fu_144_p3();
    void thread_tmp_347_fu_156_p2();
    void thread_tmp_348_fu_166_p3();
    void thread_tmp_349_fu_178_p3();
    void thread_tmp_350_fu_190_p2();
    void thread_tmp_351_fu_220_p2();
    void thread_tmp_352_fu_245_p2();
    void thread_tmp_353_fu_251_p2();
    void thread_tmp_354_fu_276_p2();
    void thread_tmp_355_fu_302_p2();
    void thread_tmp_356_fu_312_p2();
    void thread_tmp_439_cast_fu_162_p1();
    void thread_tmp_442_cast_fu_196_p1();
    void thread_tmp_451_cast_fu_307_p1();
    void thread_tmp_452_cast_fu_317_p1();
    void thread_tmp_cast9_fu_212_p1();
    void thread_tmp_cast_fu_216_p1();
    void thread_tmp_fu_122_p4();
    void thread_tmp_s_fu_132_p3();
    void thread_w_33_fu_288_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
