// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_address0,
        weight_ce0,
        weight_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        ShuffleConvs_2_Downs_address0,
        ShuffleConvs_2_Downs_ce0,
        ShuffleConvs_2_Downs_we0,
        ShuffleConvs_2_Downs_d0,
        ShuffleConvs_2_Downs_q0,
        shuffleunit1_7_outpu_address0,
        shuffleunit1_7_outpu_ce0,
        shuffleunit1_7_outpu_q0
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] weight_address0;
output   weight_ce0;
input  [31:0] weight_q0;
output  [6:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [13:0] ShuffleConvs_2_Downs_address0;
output   ShuffleConvs_2_Downs_ce0;
output   ShuffleConvs_2_Downs_we0;
output  [31:0] ShuffleConvs_2_Downs_d0;
input  [31:0] ShuffleConvs_2_Downs_q0;
output  [13:0] shuffleunit1_7_outpu_address0;
output   shuffleunit1_7_outpu_ce0;
input  [31:0] shuffleunit1_7_outpu_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_ce0;
reg bias_ce0;
reg[13:0] ShuffleConvs_2_Downs_address0;
reg ShuffleConvs_2_Downs_ce0;
reg ShuffleConvs_2_Downs_we0;
reg[31:0] ShuffleConvs_2_Downs_d0;
reg shuffleunit1_7_outpu_ce0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_262;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state31;
wire   [6:0] co_13_fu_274_p2;
reg   [6:0] co_13_reg_800;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp_142_fu_309_p2;
reg   [10:0] tmp_142_reg_805;
wire   [0:0] exitcond9_fu_268_p2;
reg   [6:0] bias_addr_reg_810;
wire   [14:0] tmp_150_fu_354_p2;
reg   [14:0] tmp_150_reg_818;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond8_fu_315_p2;
wire   [14:0] tmp_157_fu_370_p2;
reg   [14:0] tmp_157_reg_826;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond7_fu_360_p2;
wire   [3:0] w_13_fu_375_p2;
reg   [3:0] w_13_reg_831;
wire   [3:0] h_13_fu_381_p2;
wire   [6:0] co_14_fu_397_p2;
reg   [6:0] co_14_reg_844;
wire    ap_CS_fsm_state6;
wire   [14:0] tmp_145_fu_427_p2;
reg   [14:0] tmp_145_reg_849;
wire   [0:0] exitcond6_fu_391_p2;
wire   [10:0] tmp_148_fu_457_p2;
reg   [10:0] tmp_148_reg_854;
wire   [10:0] tmp_79_cast_fu_469_p1;
reg   [10:0] tmp_79_cast_reg_862;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond5_fu_463_p2;
wire   [14:0] tmp_156_fu_502_p2;
reg   [14:0] tmp_156_reg_867;
wire   [14:0] tmp_82_cast_fu_514_p1;
reg   [14:0] tmp_82_cast_reg_875;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond4_fu_508_p2;
reg   [13:0] ShuffleConvs_2_Downs_2_reg_880;
wire   [3:0] h_14_fu_528_p2;
wire   [6:0] ci_1_fu_540_p2;
reg   [6:0] ci_1_reg_893;
wire    ap_CS_fsm_state9;
wire   [14:0] tmp_165_fu_550_p2;
reg   [14:0] tmp_165_reg_898;
wire   [0:0] exitcond3_fu_534_p2;
wire   [14:0] tmp_173_fu_620_p2;
reg   [14:0] tmp_173_reg_903;
wire   [3:0] w_14_fu_625_p2;
reg   [3:0] w_14_reg_908;
wire    ap_CS_fsm_state10;
reg   [31:0] weight_load_reg_923;
wire    ap_CS_fsm_state11;
reg   [31:0] shuffleunit1_7_outpu_1_reg_928;
wire   [31:0] grp_fu_253_p2;
reg   [31:0] tmp_86_reg_933;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_247_p2;
wire    ap_CS_fsm_state20;
reg   [31:0] tmp_84_reg_943;
wire    ap_CS_fsm_state26;
wire   [6:0] co_15_fu_645_p2;
reg   [6:0] co_15_reg_951;
wire    ap_CS_fsm_state28;
wire   [10:0] tmp_153_fu_675_p2;
reg   [10:0] tmp_153_reg_956;
wire   [0:0] exitcond2_fu_639_p2;
wire   [14:0] tmp_161_fu_720_p2;
reg   [14:0] tmp_161_reg_964;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond1_fu_681_p2;
reg   [13:0] ShuffleConvs_2_Downs_4_reg_972;
wire    ap_CS_fsm_state30;
wire   [0:0] exitcond_fu_726_p2;
wire   [3:0] h_15_fu_746_p2;
wire   [0:0] notlhs_fu_770_p2;
reg   [0:0] notlhs_reg_982;
wire    ap_CS_fsm_state32;
wire   [0:0] notrhs_fu_776_p2;
reg   [0:0] notrhs_reg_987;
wire   [0:0] tmp_4_fu_257_p2;
reg   [0:0] tmp_4_reg_992;
wire   [3:0] w_15_fu_791_p2;
wire    ap_CS_fsm_state33;
reg   [6:0] co_reg_120;
reg   [3:0] h_reg_131;
reg   [3:0] w_reg_143;
wire    ap_CS_fsm_state5;
reg   [6:0] co1_reg_154;
reg   [3:0] h2_reg_165;
reg   [3:0] w3_reg_177;
wire    ap_CS_fsm_state27;
reg   [31:0] sum_reg_189;
reg   [6:0] ci_reg_201;
reg   [6:0] co4_reg_212;
reg   [3:0] h5_reg_223;
reg   [3:0] w6_reg_235;
wire   [63:0] tmp_fu_280_p1;
wire   [63:0] tmp_206_cast_fu_387_p1;
wire   [63:0] tmp_211_cast_fu_523_p1;
wire  signed [63:0] tmp_213_cast_fu_631_p1;
wire   [63:0] tmp_221_cast_fu_635_p1;
wire   [63:0] tmp_212_cast_fu_741_p1;
wire   [0:0] tmp_5_fu_786_p2;
reg   [31:0] grp_fu_247_p0;
reg   [31:0] grp_fu_247_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state12;
wire   [9:0] tmp_s_fu_285_p3;
wire   [7:0] tmp_141_fu_297_p3;
wire   [10:0] p_shl1_cast_fu_305_p1;
wire   [10:0] p_shl_cast_fu_293_p1;
wire   [10:0] tmp_cast_fu_321_p1;
wire   [10:0] tmp_149_fu_325_p2;
wire   [13:0] tmp_138_fu_330_p3;
wire   [11:0] tmp_139_fu_342_p3;
wire   [14:0] p_shl2_cast_fu_338_p1;
wire   [14:0] p_shl3_cast_fu_350_p1;
wire   [14:0] tmp_80_cast_fu_366_p1;
wire   [13:0] tmp_143_fu_403_p3;
wire   [11:0] tmp_144_fu_415_p3;
wire   [14:0] p_shl6_cast_fu_411_p1;
wire   [14:0] p_shl7_cast_fu_423_p1;
wire   [9:0] tmp_146_fu_433_p3;
wire   [7:0] tmp_147_fu_445_p3;
wire   [10:0] p_shl5_cast_fu_453_p1;
wire   [10:0] p_shl4_cast_fu_441_p1;
wire   [10:0] tmp_154_fu_473_p2;
wire   [13:0] tmp_140_fu_478_p3;
wire   [11:0] tmp_155_fu_490_p3;
wire   [14:0] p_shl8_cast_fu_486_p1;
wire   [14:0] p_shl9_cast_fu_498_p1;
wire   [14:0] tmp_162_fu_518_p2;
wire   [14:0] tmp_85_cast_fu_546_p1;
wire   [9:0] tmp_166_fu_555_p3;
wire   [7:0] tmp_167_fu_567_p3;
wire   [10:0] p_shl12_cast_fu_563_p1;
wire   [10:0] p_shl13_cast_fu_575_p1;
wire   [10:0] tmp_168_fu_579_p2;
wire   [10:0] tmp_169_fu_585_p2;
wire   [13:0] tmp_170_fu_590_p3;
wire   [11:0] tmp_171_fu_602_p3;
wire   [14:0] p_shl10_cast_fu_598_p1;
wire   [14:0] p_shl11_cast_fu_610_p1;
wire   [14:0] tmp_172_fu_614_p2;
wire   [9:0] tmp_151_fu_651_p3;
wire   [7:0] tmp_152_fu_663_p3;
wire   [10:0] p_shl15_cast_fu_671_p1;
wire   [10:0] p_shl14_cast_fu_659_p1;
wire   [10:0] tmp_81_cast_fu_687_p1;
wire   [10:0] tmp_158_fu_691_p2;
wire   [13:0] tmp_159_fu_696_p3;
wire   [11:0] tmp_160_fu_708_p3;
wire   [14:0] p_shl16_cast_fu_704_p1;
wire   [14:0] p_shl17_cast_fu_716_p1;
wire   [14:0] tmp_83_cast_fu_732_p1;
wire   [14:0] tmp_163_fu_736_p2;
wire   [31:0] ShuffleConvs_2_Downs_7_fu_752_p1;
wire   [7:0] tmp_1_fu_756_p4;
wire   [22:0] tmp_164_fu_766_p1;
wire   [0:0] tmp_3_fu_782_p2;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
end

ShuffleNetV2_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_faddbkb_x_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_247_p0),
    .din1(grp_fu_247_p1),
    .ce(1'b1),
    .dout(grp_fu_247_p2)
);

ShuffleNetV2_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_fmulcud_x_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weight_load_reg_923),
    .din1(shuffleunit1_7_outpu_1_reg_928),
    .ce(1'b1),
    .dout(grp_fu_253_p2)
);

ShuffleNetV2_fcmpdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
ShuffleNetV2_fcmpdEe_x_U76(
    .din0(reg_262),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_4_fu_257_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_508_p2))) begin
        ci_reg_201 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ci_reg_201 <= ci_1_reg_893;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_268_p2 == 1'd1))) begin
        co1_reg_154 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond5_fu_463_p2))) begin
        co1_reg_154 <= co_14_reg_844;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond6_fu_391_p2))) begin
        co4_reg_212 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond1_fu_681_p2))) begin
        co4_reg_212 <= co_15_reg_951;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_315_p2 == 1'd1))) begin
        co_reg_120 <= co_13_reg_800;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_120 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond6_fu_391_p2))) begin
        h2_reg_165 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_508_p2))) begin
        h2_reg_165 <= h_14_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond2_fu_639_p2))) begin
        h5_reg_223 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_fu_726_p2))) begin
        h5_reg_223 <= h_15_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_268_p2 == 1'd0))) begin
        h_reg_131 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond7_fu_360_p2 == 1'd1))) begin
        h_reg_131 <= h_13_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_508_p2))) begin
        sum_reg_189 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sum_reg_189 <= grp_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond5_fu_463_p2))) begin
        w3_reg_177 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        w3_reg_177 <= w_14_reg_908;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond1_fu_681_p2))) begin
        w6_reg_235 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w6_reg_235 <= w_15_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_315_p2))) begin
        w_reg_143 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_reg_143 <= w_13_reg_831;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_508_p2))) begin
        ShuffleConvs_2_Downs_2_reg_880 <= tmp_211_cast_fu_523_p1;
        tmp_82_cast_reg_875[3 : 0] <= tmp_82_cast_fu_514_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_726_p2))) begin
        ShuffleConvs_2_Downs_4_reg_972 <= tmp_212_cast_fu_741_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_268_p2 == 1'd0))) begin
        bias_addr_reg_810 <= tmp_fu_280_p1;
        tmp_142_reg_805[10 : 1] <= tmp_142_fu_309_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ci_1_reg_893 <= ci_1_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        co_13_reg_800 <= co_13_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        co_14_reg_844 <= co_14_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        co_15_reg_951 <= co_15_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        notlhs_reg_982 <= notlhs_fu_770_p2;
        notrhs_reg_987 <= notrhs_fu_776_p2;
        tmp_4_reg_992 <= tmp_4_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_262 <= ShuffleConvs_2_Downs_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        shuffleunit1_7_outpu_1_reg_928 <= shuffleunit1_7_outpu_q0;
        weight_load_reg_923 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond6_fu_391_p2))) begin
        tmp_145_reg_849[14 : 5] <= tmp_145_fu_427_p2[14 : 5];
        tmp_148_reg_854[10 : 1] <= tmp_148_fu_457_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_315_p2))) begin
        tmp_150_reg_818[14 : 1] <= tmp_150_fu_354_p2[14 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond2_fu_639_p2))) begin
        tmp_153_reg_956[10 : 1] <= tmp_153_fu_675_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond5_fu_463_p2))) begin
        tmp_156_reg_867[14 : 1] <= tmp_156_fu_502_p2[14 : 1];
        tmp_79_cast_reg_862[3 : 0] <= tmp_79_cast_fu_469_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond7_fu_360_p2))) begin
        tmp_157_reg_826 <= tmp_157_fu_370_p2;
        w_13_reg_831 <= w_13_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond1_fu_681_p2))) begin
        tmp_161_reg_964[14 : 1] <= tmp_161_fu_720_p2[14 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond3_fu_534_p2))) begin
        tmp_165_reg_898 <= tmp_165_fu_550_p2;
        tmp_173_reg_903 <= tmp_173_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_84_reg_943 <= grp_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_86_reg_933 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond3_fu_534_p2))) begin
        w_14_reg_908 <= w_14_fu_625_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_4_reg_972;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ShuffleConvs_2_Downs_address0 = tmp_212_cast_fu_741_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state27))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_2_reg_880;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_2_Downs_address0 = tmp_206_cast_fu_387_p1;
    end else begin
        ShuffleConvs_2_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state27))) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_2_Downs_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_2_Downs_d0 = tmp_84_reg_943;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_2_Downs_d0 = bias_q0;
    end else begin
        ShuffleConvs_2_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_5_fu_786_p2)))) begin
        ShuffleConvs_2_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_639_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_639_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_247_p0 = reg_262;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_247_p0 = sum_reg_189;
    end else begin
        grp_fu_247_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_247_p1 = sum_reg_189;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_247_p1 = tmp_86_reg_933;
    end else begin
        grp_fu_247_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        shuffleunit1_7_outpu_ce0 = 1'b1;
    end else begin
        shuffleunit1_7_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_ce0 = 1'b1;
    end else begin
        weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_315_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond7_fu_360_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond6_fu_391_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond5_fu_463_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_508_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond3_fu_534_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_639_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond1_fu_681_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_fu_726_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_2_Downs_7_fu_752_p1 = reg_262;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bias_address0 = bias_addr_reg_810;

assign ci_1_fu_540_p2 = (ci_reg_201 + 7'd1);

assign co_13_fu_274_p2 = (co_reg_120 + 7'd1);

assign co_14_fu_397_p2 = (co1_reg_154 + 7'd1);

assign co_15_fu_645_p2 = (co4_reg_212 + 7'd1);

assign exitcond1_fu_681_p2 = ((h5_reg_223 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond2_fu_639_p2 = ((co4_reg_212 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond3_fu_534_p2 = ((ci_reg_201 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond4_fu_508_p2 = ((w3_reg_177 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond5_fu_463_p2 = ((h2_reg_165 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond6_fu_391_p2 = ((co1_reg_154 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond7_fu_360_p2 = ((w_reg_143 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond8_fu_315_p2 = ((h_reg_131 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond9_fu_268_p2 = ((co_reg_120 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond_fu_726_p2 = ((w6_reg_235 == 4'd9) ? 1'b1 : 1'b0);

assign h_13_fu_381_p2 = (h_reg_131 + 4'd1);

assign h_14_fu_528_p2 = (h2_reg_165 + 4'd1);

assign h_15_fu_746_p2 = (h5_reg_223 + 4'd1);

assign notlhs_fu_770_p2 = ((tmp_1_fu_756_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_776_p2 = ((tmp_164_fu_766_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_shl10_cast_fu_598_p1 = tmp_170_fu_590_p3;

assign p_shl11_cast_fu_610_p1 = tmp_171_fu_602_p3;

assign p_shl12_cast_fu_563_p1 = tmp_166_fu_555_p3;

assign p_shl13_cast_fu_575_p1 = tmp_167_fu_567_p3;

assign p_shl14_cast_fu_659_p1 = tmp_151_fu_651_p3;

assign p_shl15_cast_fu_671_p1 = tmp_152_fu_663_p3;

assign p_shl16_cast_fu_704_p1 = tmp_159_fu_696_p3;

assign p_shl17_cast_fu_716_p1 = tmp_160_fu_708_p3;

assign p_shl1_cast_fu_305_p1 = tmp_141_fu_297_p3;

assign p_shl2_cast_fu_338_p1 = tmp_138_fu_330_p3;

assign p_shl3_cast_fu_350_p1 = tmp_139_fu_342_p3;

assign p_shl4_cast_fu_441_p1 = tmp_146_fu_433_p3;

assign p_shl5_cast_fu_453_p1 = tmp_147_fu_445_p3;

assign p_shl6_cast_fu_411_p1 = tmp_143_fu_403_p3;

assign p_shl7_cast_fu_423_p1 = tmp_144_fu_415_p3;

assign p_shl8_cast_fu_486_p1 = tmp_140_fu_478_p3;

assign p_shl9_cast_fu_498_p1 = tmp_155_fu_490_p3;

assign p_shl_cast_fu_293_p1 = tmp_s_fu_285_p3;

assign shuffleunit1_7_outpu_address0 = tmp_221_cast_fu_635_p1;

assign tmp_138_fu_330_p3 = {{tmp_149_fu_325_p2}, {3'd0}};

assign tmp_139_fu_342_p3 = {{tmp_149_fu_325_p2}, {1'd0}};

assign tmp_140_fu_478_p3 = {{tmp_154_fu_473_p2}, {3'd0}};

assign tmp_141_fu_297_p3 = {{co_reg_120}, {1'd0}};

assign tmp_142_fu_309_p2 = (p_shl1_cast_fu_305_p1 + p_shl_cast_fu_293_p1);

assign tmp_143_fu_403_p3 = {{co1_reg_154}, {7'd0}};

assign tmp_144_fu_415_p3 = {{co1_reg_154}, {5'd0}};

assign tmp_145_fu_427_p2 = (p_shl6_cast_fu_411_p1 - p_shl7_cast_fu_423_p1);

assign tmp_146_fu_433_p3 = {{co1_reg_154}, {3'd0}};

assign tmp_147_fu_445_p3 = {{co1_reg_154}, {1'd0}};

assign tmp_148_fu_457_p2 = (p_shl5_cast_fu_453_p1 + p_shl4_cast_fu_441_p1);

assign tmp_149_fu_325_p2 = (tmp_cast_fu_321_p1 + tmp_142_reg_805);

assign tmp_150_fu_354_p2 = (p_shl2_cast_fu_338_p1 + p_shl3_cast_fu_350_p1);

assign tmp_151_fu_651_p3 = {{co4_reg_212}, {3'd0}};

assign tmp_152_fu_663_p3 = {{co4_reg_212}, {1'd0}};

assign tmp_153_fu_675_p2 = (p_shl15_cast_fu_671_p1 + p_shl14_cast_fu_659_p1);

assign tmp_154_fu_473_p2 = (tmp_79_cast_fu_469_p1 + tmp_148_reg_854);

assign tmp_155_fu_490_p3 = {{tmp_154_fu_473_p2}, {1'd0}};

assign tmp_156_fu_502_p2 = (p_shl8_cast_fu_486_p1 + p_shl9_cast_fu_498_p1);

assign tmp_157_fu_370_p2 = (tmp_150_reg_818 + tmp_80_cast_fu_366_p1);

assign tmp_158_fu_691_p2 = (tmp_81_cast_fu_687_p1 + tmp_153_reg_956);

assign tmp_159_fu_696_p3 = {{tmp_158_fu_691_p2}, {3'd0}};

assign tmp_160_fu_708_p3 = {{tmp_158_fu_691_p2}, {1'd0}};

assign tmp_161_fu_720_p2 = (p_shl16_cast_fu_704_p1 + p_shl17_cast_fu_716_p1);

assign tmp_162_fu_518_p2 = (tmp_156_reg_867 + tmp_82_cast_fu_514_p1);

assign tmp_163_fu_736_p2 = (tmp_161_reg_964 + tmp_83_cast_fu_732_p1);

assign tmp_164_fu_766_p1 = ShuffleConvs_2_Downs_7_fu_752_p1[22:0];

assign tmp_165_fu_550_p2 = (tmp_85_cast_fu_546_p1 + tmp_145_reg_849);

assign tmp_166_fu_555_p3 = {{ci_reg_201}, {3'd0}};

assign tmp_167_fu_567_p3 = {{ci_reg_201}, {1'd0}};

assign tmp_168_fu_579_p2 = (p_shl12_cast_fu_563_p1 + p_shl13_cast_fu_575_p1);

assign tmp_169_fu_585_p2 = (tmp_79_cast_reg_862 + tmp_168_fu_579_p2);

assign tmp_170_fu_590_p3 = {{tmp_169_fu_585_p2}, {3'd0}};

assign tmp_171_fu_602_p3 = {{tmp_169_fu_585_p2}, {1'd0}};

assign tmp_172_fu_614_p2 = (p_shl10_cast_fu_598_p1 + p_shl11_cast_fu_610_p1);

assign tmp_173_fu_620_p2 = (tmp_82_cast_reg_875 + tmp_172_fu_614_p2);

assign tmp_1_fu_756_p4 = {{ShuffleConvs_2_Downs_7_fu_752_p1[30:23]}};

assign tmp_206_cast_fu_387_p1 = tmp_157_reg_826;

assign tmp_211_cast_fu_523_p1 = tmp_162_fu_518_p2;

assign tmp_212_cast_fu_741_p1 = tmp_163_fu_736_p2;

assign tmp_213_cast_fu_631_p1 = $signed(tmp_165_reg_898);

assign tmp_221_cast_fu_635_p1 = tmp_173_reg_903;

assign tmp_3_fu_782_p2 = (notrhs_reg_987 | notlhs_reg_982);

assign tmp_5_fu_786_p2 = (tmp_3_fu_782_p2 & tmp_4_reg_992);

assign tmp_79_cast_fu_469_p1 = h2_reg_165;

assign tmp_80_cast_fu_366_p1 = w_reg_143;

assign tmp_81_cast_fu_687_p1 = h5_reg_223;

assign tmp_82_cast_fu_514_p1 = w3_reg_177;

assign tmp_83_cast_fu_732_p1 = w6_reg_235;

assign tmp_85_cast_fu_546_p1 = ci_reg_201;

assign tmp_cast_fu_321_p1 = h_reg_131;

assign tmp_fu_280_p1 = co_reg_120;

assign tmp_s_fu_285_p3 = {{co_reg_120}, {3'd0}};

assign w_13_fu_375_p2 = (w_reg_143 + 4'd1);

assign w_14_fu_625_p2 = (w3_reg_177 + 4'd1);

assign w_15_fu_791_p2 = (w6_reg_235 + 4'd1);

assign weight_address0 = tmp_213_cast_fu_631_p1;

always @ (posedge ap_clk) begin
    tmp_142_reg_805[0] <= 1'b0;
    tmp_150_reg_818[0] <= 1'b0;
    tmp_145_reg_849[4:0] <= 5'b00000;
    tmp_148_reg_854[0] <= 1'b0;
    tmp_79_cast_reg_862[10:4] <= 7'b0000000;
    tmp_156_reg_867[0] <= 1'b0;
    tmp_82_cast_reg_875[14:4] <= 11'b00000000000;
    tmp_153_reg_956[0] <= 1'b0;
    tmp_161_reg_964[0] <= 1'b0;
end

endmodule //subconv_1x1_8p_p
