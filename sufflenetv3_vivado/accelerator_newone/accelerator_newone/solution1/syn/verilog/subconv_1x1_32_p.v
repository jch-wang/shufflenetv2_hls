// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_32_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_address0,
        weight_ce0,
        weight_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        ShuffleConvs_0_Downs_address0,
        ShuffleConvs_0_Downs_ce0,
        ShuffleConvs_0_Downs_we0,
        ShuffleConvs_0_Downs_d0,
        ShuffleConvs_0_Downs_q0,
        conv1_output_p_address0,
        conv1_output_p_ce0,
        conv1_output_p_q0
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] weight_address0;
output   weight_ce0;
input  [31:0] weight_q0;
output  [4:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [14:0] ShuffleConvs_0_Downs_address0;
output   ShuffleConvs_0_Downs_ce0;
output   ShuffleConvs_0_Downs_we0;
output  [31:0] ShuffleConvs_0_Downs_d0;
input  [31:0] ShuffleConvs_0_Downs_q0;
output  [14:0] conv1_output_p_address0;
output   conv1_output_p_ce0;
input  [31:0] conv1_output_p_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_ce0;
reg bias_ce0;
reg[14:0] ShuffleConvs_0_Downs_address0;
reg ShuffleConvs_0_Downs_ce0;
reg ShuffleConvs_0_Downs_we0;
reg[31:0] ShuffleConvs_0_Downs_d0;
reg conv1_output_p_ce0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_258;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state31;
wire   [4:0] co_22_fu_270_p2;
reg   [4:0] co_22_reg_768;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp_238_fu_305_p2;
reg   [10:0] tmp_238_reg_773;
wire   [0:0] exitcond9_fu_264_p2;
reg   [4:0] bias_addr_reg_778;
wire   [15:0] tmp_245_fu_346_p2;
reg   [15:0] tmp_245_reg_786;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond8_fu_311_p2;
wire   [15:0] tmp_251_fu_362_p2;
reg   [15:0] tmp_251_reg_794;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond7_fu_352_p2;
wire   [5:0] w_22_fu_367_p2;
reg   [5:0] w_22_reg_799;
wire   [5:0] h_22_fu_373_p2;
wire   [4:0] co_23_fu_389_p2;
reg   [4:0] co_23_reg_812;
wire    ap_CS_fsm_state6;
wire   [10:0] tmp_241_fu_419_p2;
reg   [10:0] tmp_241_reg_817;
wire   [0:0] exitcond6_fu_383_p2;
wire   [10:0] tmp_243_fu_437_p2;
reg   [10:0] tmp_243_reg_822;
wire   [10:0] tmp_103_cast_fu_449_p1;
reg   [10:0] tmp_103_cast_reg_830;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond5_fu_443_p2;
wire   [15:0] tmp_250_fu_478_p2;
reg   [15:0] tmp_250_reg_835;
wire   [15:0] tmp_106_cast_fu_490_p1;
reg   [15:0] tmp_106_cast_reg_843;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond4_fu_484_p2;
reg   [14:0] ShuffleConvs_0_Downs_2_reg_848;
wire   [5:0] h_23_fu_504_p2;
wire   [4:0] ci_4_fu_516_p2;
reg   [4:0] ci_4_reg_861;
wire    ap_CS_fsm_state9;
wire   [10:0] tmp_257_fu_526_p2;
reg   [10:0] tmp_257_reg_866;
wire   [0:0] exitcond3_fu_510_p2;
wire   [15:0] tmp_264_fu_592_p2;
reg   [15:0] tmp_264_reg_871;
wire   [5:0] w_23_fu_597_p2;
reg   [5:0] w_23_reg_876;
wire    ap_CS_fsm_state10;
reg   [31:0] weight_load_reg_891;
wire    ap_CS_fsm_state11;
reg   [31:0] conv1_output_p_load_reg_896;
wire   [31:0] grp_fu_249_p2;
reg   [31:0] tmp_110_reg_901;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_243_p2;
wire    ap_CS_fsm_state20;
reg   [31:0] tmp_108_reg_911;
wire    ap_CS_fsm_state26;
wire   [4:0] co_24_fu_617_p2;
reg   [4:0] co_24_reg_919;
wire    ap_CS_fsm_state28;
wire   [10:0] tmp_248_fu_647_p2;
reg   [10:0] tmp_248_reg_924;
wire   [0:0] exitcond2_fu_611_p2;
wire   [15:0] tmp_253_fu_688_p2;
reg   [15:0] tmp_253_reg_932;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond1_fu_653_p2;
reg   [14:0] ShuffleConvs_0_Downs_4_reg_940;
wire    ap_CS_fsm_state30;
wire   [0:0] exitcond_fu_694_p2;
wire   [5:0] h_24_fu_714_p2;
wire   [0:0] notlhs_fu_738_p2;
reg   [0:0] notlhs_reg_950;
wire    ap_CS_fsm_state32;
wire   [0:0] notrhs_fu_744_p2;
reg   [0:0] notrhs_reg_955;
wire   [0:0] tmp_19_fu_253_p2;
reg   [0:0] tmp_19_reg_960;
wire   [5:0] w_24_fu_759_p2;
wire    ap_CS_fsm_state33;
reg   [4:0] co_reg_116;
reg   [5:0] h_reg_127;
reg   [5:0] w_reg_139;
wire    ap_CS_fsm_state5;
reg   [4:0] co1_reg_150;
reg   [5:0] h2_reg_161;
reg   [5:0] w3_reg_173;
wire    ap_CS_fsm_state27;
reg   [31:0] sum_reg_185;
reg   [4:0] ci_reg_197;
reg   [4:0] co4_reg_208;
reg   [5:0] h5_reg_219;
reg   [5:0] w6_reg_231;
wire   [63:0] tmp_fu_276_p1;
wire   [63:0] tmp_314_cast_fu_379_p1;
wire   [63:0] tmp_319_cast_fu_499_p1;
wire  signed [63:0] tmp_321_cast_fu_603_p1;
wire   [63:0] tmp_329_cast_fu_607_p1;
wire   [63:0] tmp_320_cast_fu_709_p1;
wire   [0:0] tmp_20_fu_754_p2;
reg   [31:0] grp_fu_243_p0;
reg   [31:0] grp_fu_243_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state12;
wire   [9:0] tmp_s_fu_281_p3;
wire   [5:0] tmp_237_fu_293_p3;
wire   [10:0] p_shl1_cast_fu_301_p1;
wire   [10:0] p_shl_cast_fu_289_p1;
wire   [10:0] tmp_cast_fu_317_p1;
wire   [10:0] tmp_244_fu_321_p2;
wire   [11:0] tmp_234_fu_334_p3;
wire   [15:0] p_shl2_cast_fu_326_p3;
wire   [15:0] p_shl3_cast_fu_342_p1;
wire   [15:0] tmp_104_cast_fu_358_p1;
wire   [9:0] tmp_239_fu_395_p3;
wire   [7:0] tmp_240_fu_407_p3;
wire   [10:0] p_shl6_cast_fu_403_p1;
wire   [10:0] p_shl7_cast_fu_415_p1;
wire   [5:0] tmp_242_fu_425_p3;
wire   [10:0] p_shl5_cast_fu_433_p1;
wire   [10:0] tmp_249_fu_453_p2;
wire   [11:0] tmp_235_fu_466_p3;
wire   [15:0] p_shl8_cast_fu_458_p3;
wire   [15:0] p_shl9_cast_fu_474_p1;
wire   [15:0] tmp_254_fu_494_p2;
wire   [10:0] tmp_109_cast_fu_522_p1;
wire   [9:0] tmp_258_fu_531_p3;
wire   [5:0] tmp_259_fu_543_p3;
wire   [10:0] p_shl12_cast_fu_539_p1;
wire   [10:0] p_shl13_cast_fu_551_p1;
wire   [10:0] tmp_260_fu_555_p2;
wire   [10:0] tmp_261_fu_561_p2;
wire   [11:0] tmp_262_fu_574_p3;
wire   [15:0] p_shl10_cast_fu_566_p3;
wire   [15:0] p_shl11_cast_fu_582_p1;
wire   [15:0] tmp_263_fu_586_p2;
wire   [9:0] tmp_246_fu_623_p3;
wire   [5:0] tmp_247_fu_635_p3;
wire   [10:0] p_shl15_cast_fu_643_p1;
wire   [10:0] p_shl14_cast_fu_631_p1;
wire   [10:0] tmp_105_cast_fu_659_p1;
wire   [10:0] tmp_252_fu_663_p2;
wire   [11:0] tmp_236_fu_676_p3;
wire   [15:0] p_shl16_cast_fu_668_p3;
wire   [15:0] p_shl17_cast_fu_684_p1;
wire   [15:0] tmp_107_cast_fu_700_p1;
wire   [15:0] tmp_255_fu_704_p2;
wire   [31:0] ShuffleConvs_0_Downs_7_fu_720_p1;
wire   [7:0] tmp_16_fu_724_p4;
wire   [22:0] tmp_256_fu_734_p1;
wire   [0:0] tmp_18_fu_750_p2;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
end

ShuffleNetV2_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_faddbkb_x_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_243_p0),
    .din1(grp_fu_243_p1),
    .ce(1'b1),
    .dout(grp_fu_243_p2)
);

ShuffleNetV2_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_fmulcud_x_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weight_load_reg_891),
    .din1(conv1_output_p_load_reg_896),
    .ce(1'b1),
    .dout(grp_fu_249_p2)
);

ShuffleNetV2_fcmpdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
ShuffleNetV2_fcmpdEe_x_U10(
    .din0(reg_258),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_19_fu_253_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_484_p2))) begin
        ci_reg_197 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ci_reg_197 <= ci_4_reg_861;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_264_p2 == 1'd1))) begin
        co1_reg_150 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond5_fu_443_p2))) begin
        co1_reg_150 <= co_23_reg_812;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond6_fu_383_p2))) begin
        co4_reg_208 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond1_fu_653_p2))) begin
        co4_reg_208 <= co_24_reg_919;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_311_p2 == 1'd1))) begin
        co_reg_116 <= co_22_reg_768;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_116 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond6_fu_383_p2))) begin
        h2_reg_161 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_484_p2))) begin
        h2_reg_161 <= h_23_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond2_fu_611_p2))) begin
        h5_reg_219 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_fu_694_p2))) begin
        h5_reg_219 <= h_24_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_264_p2 == 1'd0))) begin
        h_reg_127 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond7_fu_352_p2 == 1'd1))) begin
        h_reg_127 <= h_22_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_484_p2))) begin
        sum_reg_185 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sum_reg_185 <= grp_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond5_fu_443_p2))) begin
        w3_reg_173 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        w3_reg_173 <= w_23_reg_876;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond1_fu_653_p2))) begin
        w6_reg_231 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        w6_reg_231 <= w_24_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_311_p2))) begin
        w_reg_139 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_reg_139 <= w_22_reg_799;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_484_p2))) begin
        ShuffleConvs_0_Downs_2_reg_848 <= tmp_319_cast_fu_499_p1;
        tmp_106_cast_reg_843[5 : 0] <= tmp_106_cast_fu_490_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_694_p2))) begin
        ShuffleConvs_0_Downs_4_reg_940 <= tmp_320_cast_fu_709_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_264_p2 == 1'd0))) begin
        bias_addr_reg_778 <= tmp_fu_276_p1;
        tmp_238_reg_773[10 : 1] <= tmp_238_fu_305_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ci_4_reg_861 <= ci_4_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        co_22_reg_768 <= co_22_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        co_23_reg_812 <= co_23_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        co_24_reg_919 <= co_24_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv1_output_p_load_reg_896 <= conv1_output_p_q0;
        weight_load_reg_891 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        notlhs_reg_950 <= notlhs_fu_738_p2;
        notrhs_reg_955 <= notrhs_fu_744_p2;
        tmp_19_reg_960 <= tmp_19_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_258 <= ShuffleConvs_0_Downs_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond5_fu_443_p2))) begin
        tmp_103_cast_reg_830[5 : 0] <= tmp_103_cast_fu_449_p1[5 : 0];
        tmp_250_reg_835[15 : 1] <= tmp_250_fu_478_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_108_reg_911 <= grp_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_110_reg_901 <= grp_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond6_fu_383_p2))) begin
        tmp_241_reg_817[10 : 3] <= tmp_241_fu_419_p2[10 : 3];
        tmp_243_reg_822[10 : 1] <= tmp_243_fu_437_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_311_p2))) begin
        tmp_245_reg_786[15 : 1] <= tmp_245_fu_346_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond2_fu_611_p2))) begin
        tmp_248_reg_924[10 : 1] <= tmp_248_fu_647_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond7_fu_352_p2))) begin
        tmp_251_reg_794 <= tmp_251_fu_362_p2;
        w_22_reg_799 <= w_22_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond1_fu_653_p2))) begin
        tmp_253_reg_932[15 : 1] <= tmp_253_fu_688_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond3_fu_510_p2))) begin
        tmp_257_reg_866 <= tmp_257_fu_526_p2;
        tmp_264_reg_871 <= tmp_264_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond3_fu_510_p2))) begin
        w_23_reg_876 <= w_23_fu_597_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_0_Downs_address0 = ShuffleConvs_0_Downs_4_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        ShuffleConvs_0_Downs_address0 = tmp_320_cast_fu_709_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state27))) begin
        ShuffleConvs_0_Downs_address0 = ShuffleConvs_0_Downs_2_reg_848;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Downs_address0 = tmp_314_cast_fu_379_p1;
    end else begin
        ShuffleConvs_0_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state27))) begin
        ShuffleConvs_0_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_0_Downs_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_0_Downs_d0 = tmp_108_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Downs_d0 = bias_q0;
    end else begin
        ShuffleConvs_0_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_20_fu_754_p2)))) begin
        ShuffleConvs_0_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_611_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_611_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_p_ce0 = 1'b1;
    end else begin
        conv1_output_p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_243_p0 = reg_258;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_243_p0 = sum_reg_185;
    end else begin
        grp_fu_243_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_243_p1 = sum_reg_185;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_243_p1 = tmp_110_reg_901;
    end else begin
        grp_fu_243_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_ce0 = 1'b1;
    end else begin
        weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond9_fu_264_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_311_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond7_fu_352_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond6_fu_383_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond5_fu_443_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_484_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond3_fu_510_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond2_fu_611_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond1_fu_653_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond_fu_694_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_0_Downs_7_fu_720_p1 = reg_258;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bias_address0 = bias_addr_reg_778;

assign ci_4_fu_516_p2 = (ci_reg_197 + 5'd1);

assign co_22_fu_270_p2 = (co_reg_116 + 5'd1);

assign co_23_fu_389_p2 = (co1_reg_150 + 5'd1);

assign co_24_fu_617_p2 = (co4_reg_208 + 5'd1);

assign conv1_output_p_address0 = tmp_329_cast_fu_607_p1;

assign exitcond1_fu_653_p2 = ((h5_reg_219 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond2_fu_611_p2 = ((co4_reg_208 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond3_fu_510_p2 = ((ci_reg_197 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond4_fu_484_p2 = ((w3_reg_173 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond5_fu_443_p2 = ((h2_reg_161 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond6_fu_383_p2 = ((co1_reg_150 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond7_fu_352_p2 = ((w_reg_139 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond8_fu_311_p2 = ((h_reg_127 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond9_fu_264_p2 = ((co_reg_116 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_fu_694_p2 = ((w6_reg_231 == 6'd33) ? 1'b1 : 1'b0);

assign h_22_fu_373_p2 = (h_reg_127 + 6'd1);

assign h_23_fu_504_p2 = (h2_reg_161 + 6'd1);

assign h_24_fu_714_p2 = (h5_reg_219 + 6'd1);

assign notlhs_fu_738_p2 = ((tmp_16_fu_724_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_744_p2 = ((tmp_256_fu_734_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_shl10_cast_fu_566_p3 = {{tmp_261_fu_561_p2}, {5'd0}};

assign p_shl11_cast_fu_582_p1 = tmp_262_fu_574_p3;

assign p_shl12_cast_fu_539_p1 = tmp_258_fu_531_p3;

assign p_shl13_cast_fu_551_p1 = tmp_259_fu_543_p3;

assign p_shl14_cast_fu_631_p1 = tmp_246_fu_623_p3;

assign p_shl15_cast_fu_643_p1 = tmp_247_fu_635_p3;

assign p_shl16_cast_fu_668_p3 = {{tmp_252_fu_663_p2}, {5'd0}};

assign p_shl17_cast_fu_684_p1 = tmp_236_fu_676_p3;

assign p_shl1_cast_fu_301_p1 = tmp_237_fu_293_p3;

assign p_shl2_cast_fu_326_p3 = {{tmp_244_fu_321_p2}, {5'd0}};

assign p_shl3_cast_fu_342_p1 = tmp_234_fu_334_p3;

assign p_shl5_cast_fu_433_p1 = tmp_242_fu_425_p3;

assign p_shl6_cast_fu_403_p1 = tmp_239_fu_395_p3;

assign p_shl7_cast_fu_415_p1 = tmp_240_fu_407_p3;

assign p_shl8_cast_fu_458_p3 = {{tmp_249_fu_453_p2}, {5'd0}};

assign p_shl9_cast_fu_474_p1 = tmp_235_fu_466_p3;

assign p_shl_cast_fu_289_p1 = tmp_s_fu_281_p3;

assign tmp_103_cast_fu_449_p1 = h2_reg_161;

assign tmp_104_cast_fu_358_p1 = w_reg_139;

assign tmp_105_cast_fu_659_p1 = h5_reg_219;

assign tmp_106_cast_fu_490_p1 = w3_reg_173;

assign tmp_107_cast_fu_700_p1 = w6_reg_231;

assign tmp_109_cast_fu_522_p1 = ci_reg_197;

assign tmp_16_fu_724_p4 = {{ShuffleConvs_0_Downs_7_fu_720_p1[30:23]}};

assign tmp_18_fu_750_p2 = (notrhs_reg_955 | notlhs_reg_950);

assign tmp_20_fu_754_p2 = (tmp_18_fu_750_p2 & tmp_19_reg_960);

assign tmp_234_fu_334_p3 = {{tmp_244_fu_321_p2}, {1'd0}};

assign tmp_235_fu_466_p3 = {{tmp_249_fu_453_p2}, {1'd0}};

assign tmp_236_fu_676_p3 = {{tmp_252_fu_663_p2}, {1'd0}};

assign tmp_237_fu_293_p3 = {{co_reg_116}, {1'd0}};

assign tmp_238_fu_305_p2 = (p_shl1_cast_fu_301_p1 + p_shl_cast_fu_289_p1);

assign tmp_239_fu_395_p3 = {{co1_reg_150}, {5'd0}};

assign tmp_240_fu_407_p3 = {{co1_reg_150}, {3'd0}};

assign tmp_241_fu_419_p2 = (p_shl6_cast_fu_403_p1 - p_shl7_cast_fu_415_p1);

assign tmp_242_fu_425_p3 = {{co1_reg_150}, {1'd0}};

assign tmp_243_fu_437_p2 = (p_shl5_cast_fu_433_p1 + p_shl6_cast_fu_403_p1);

assign tmp_244_fu_321_p2 = (tmp_cast_fu_317_p1 + tmp_238_reg_773);

assign tmp_245_fu_346_p2 = (p_shl2_cast_fu_326_p3 + p_shl3_cast_fu_342_p1);

assign tmp_246_fu_623_p3 = {{co4_reg_208}, {5'd0}};

assign tmp_247_fu_635_p3 = {{co4_reg_208}, {1'd0}};

assign tmp_248_fu_647_p2 = (p_shl15_cast_fu_643_p1 + p_shl14_cast_fu_631_p1);

assign tmp_249_fu_453_p2 = (tmp_103_cast_fu_449_p1 + tmp_243_reg_822);

assign tmp_250_fu_478_p2 = (p_shl8_cast_fu_458_p3 + p_shl9_cast_fu_474_p1);

assign tmp_251_fu_362_p2 = (tmp_245_reg_786 + tmp_104_cast_fu_358_p1);

assign tmp_252_fu_663_p2 = (tmp_105_cast_fu_659_p1 + tmp_248_reg_924);

assign tmp_253_fu_688_p2 = (p_shl16_cast_fu_668_p3 + p_shl17_cast_fu_684_p1);

assign tmp_254_fu_494_p2 = (tmp_250_reg_835 + tmp_106_cast_fu_490_p1);

assign tmp_255_fu_704_p2 = (tmp_253_reg_932 + tmp_107_cast_fu_700_p1);

assign tmp_256_fu_734_p1 = ShuffleConvs_0_Downs_7_fu_720_p1[22:0];

assign tmp_257_fu_526_p2 = (tmp_109_cast_fu_522_p1 + tmp_241_reg_817);

assign tmp_258_fu_531_p3 = {{ci_reg_197}, {5'd0}};

assign tmp_259_fu_543_p3 = {{ci_reg_197}, {1'd0}};

assign tmp_260_fu_555_p2 = (p_shl12_cast_fu_539_p1 + p_shl13_cast_fu_551_p1);

assign tmp_261_fu_561_p2 = (tmp_103_cast_reg_830 + tmp_260_fu_555_p2);

assign tmp_262_fu_574_p3 = {{tmp_261_fu_561_p2}, {1'd0}};

assign tmp_263_fu_586_p2 = (p_shl10_cast_fu_566_p3 + p_shl11_cast_fu_582_p1);

assign tmp_264_fu_592_p2 = (tmp_106_cast_reg_843 + tmp_263_fu_586_p2);

assign tmp_314_cast_fu_379_p1 = tmp_251_reg_794;

assign tmp_319_cast_fu_499_p1 = tmp_254_fu_494_p2;

assign tmp_320_cast_fu_709_p1 = tmp_255_fu_704_p2;

assign tmp_321_cast_fu_603_p1 = $signed(tmp_257_reg_866);

assign tmp_329_cast_fu_607_p1 = tmp_264_reg_871;

assign tmp_cast_fu_317_p1 = h_reg_127;

assign tmp_fu_276_p1 = co_reg_116;

assign tmp_s_fu_281_p3 = {{co_reg_116}, {5'd0}};

assign w_22_fu_367_p2 = (w_reg_139 + 6'd1);

assign w_23_fu_597_p2 = (w3_reg_173 + 6'd1);

assign w_24_fu_759_p2 = (w6_reg_231 + 6'd1);

assign weight_address0 = tmp_321_cast_fu_603_p1;

always @ (posedge ap_clk) begin
    tmp_238_reg_773[0] <= 1'b0;
    tmp_245_reg_786[0] <= 1'b0;
    tmp_241_reg_817[2:0] <= 3'b000;
    tmp_243_reg_822[0] <= 1'b0;
    tmp_103_cast_reg_830[10:6] <= 5'b00000;
    tmp_250_reg_835[0] <= 1'b0;
    tmp_106_cast_reg_843[15:6] <= 10'b0000000000;
    tmp_248_reg_924[0] <= 1'b0;
    tmp_253_reg_932[0] <= 1'b0;
end

endmodule //subconv_1x1_32_p
