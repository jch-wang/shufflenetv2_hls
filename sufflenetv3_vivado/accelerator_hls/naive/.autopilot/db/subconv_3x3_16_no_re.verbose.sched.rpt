

================================================================
== Vivado HLS Report for 'subconv_3x3_16_no_re'
================================================================
* Date:           Tue Dec 11 23:30:29 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_hls
* Solution:       naive
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  756529|  756529|  756529|  756529|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                         |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |  756528|  756528|     31522|          -|          -|    24|    no    |
        | + Loop 1.1              |   31520|   31520|      1970|          -|          -|    16|    no    |
        |  ++ Loop 1.1.1          |    1968|    1968|       123|          -|          -|    16|    no    |
        |   +++ Loop 1.1.1.1      |     114|     114|        38|          -|          -|     3|    no    |
        |    ++++ Loop 1.1.1.1.1  |      36|      36|        12|          -|          -|     3|    no    |
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 24
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (!exitcond3)
	2  / (exitcond3)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	18  / (exitcond1)
	6  / (!exitcond1)
6 --> 
	7  / (!exitcond)
	5  / (exitcond)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	6  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_25 (5)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:104
:0  br label %.loopexit


 <State 2>: 3.31ns
ST_2: co (7)  [1/1] 0.00ns
.loopexit:0  %co = phi i5 [ 0, %0 ], [ %co_6, %.loopexit.loopexit ]

ST_2: exitcond4 (8)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:104
.loopexit:1  %exitcond4 = icmp eq i5 %co, -8

ST_2: empty (9)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24)

ST_2: co_6 (10)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:104
.loopexit:3  %co_6 = add i5 %co, 1

ST_2: StgValue_30 (11)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.loopexit:4  br i1 %exitcond4, label %2, label %.preheader7.preheader

ST_2: tmp (13)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader7.preheader:0  %tmp = zext i5 %co to i64

ST_2: tmp_cast (14)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.preheader7.preheader:1  %tmp_cast = zext i5 %co to i8

ST_2: tmp_s (15)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.preheader7.preheader:2  %tmp_s = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %co, i4 0)

ST_2: tmp_107_cast2 (16)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.preheader7.preheader:3  %tmp_107_cast2 = zext i9 %tmp_s to i10

ST_2: tmp_107_cast (17)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.preheader7.preheader:4  %tmp_107_cast = zext i9 %tmp_s to i10

ST_2: tmp_79 (18)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:104
.preheader7.preheader:5  %tmp_79 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %co, i2 0)

ST_2: p_shl_cast (19)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader7.preheader:6  %p_shl_cast = zext i7 %tmp_79 to i8

ST_2: tmp_80 (20)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:110
.preheader7.preheader:7  %tmp_80 = sub i8 %p_shl_cast, %tmp_cast

ST_2: tmp_109_cast (21)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader7.preheader:8  %tmp_109_cast = sext i8 %tmp_80 to i9

ST_2: bias_addr (22)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:113
.preheader7.preheader:9  %bias_addr = getelementptr [24 x float]* %bias, i64 0, i64 %tmp

ST_2: StgValue_41 (23)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:105
.preheader7.preheader:10  br label %.preheader7

ST_2: StgValue_42 (119)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:119
:0  ret void


 <State 3>: 3.31ns
ST_3: h (25)  [1/1] 0.00ns
.preheader7:0  %h = phi i5 [ 0, %.preheader7.preheader ], [ %h_6, %.preheader7.loopexit ]

ST_3: h_cast (26)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:105
.preheader7:1  %h_cast = zext i5 %h to i6

ST_3: exitcond3 (27)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:105
.preheader7:2  %exitcond3 = icmp eq i5 %h, -16

ST_3: empty_39 (28)  [1/1] 0.00ns
.preheader7:3  %empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: h_6 (29)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:105
.preheader7:4  %h_6 = add i5 %h, 1

ST_3: StgValue_48 (30)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:105
.preheader7:5  br i1 %exitcond3, label %.loopexit.loopexit, label %.preheader6.preheader

ST_3: tmp_cast_40 (32)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:114
.preheader6.preheader:0  %tmp_cast_40 = zext i5 %h to i10

ST_3: tmp_81 (33)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:114
.preheader6.preheader:1  %tmp_81 = add i10 %tmp_cast_40, %tmp_107_cast

ST_3: tmp_112_cast (34)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:106
.preheader6.preheader:2  %tmp_112_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_81, i4 0)

ST_3: StgValue_52 (35)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:106
.preheader6.preheader:3  br label %.preheader6

ST_3: StgValue_53 (117)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.31ns
ST_4: w (37)  [1/1] 0.00ns
.preheader6:0  %w = phi i5 [ %w_6, %1 ], [ 0, %.preheader6.preheader ]

ST_4: w_cast (38)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:106
.preheader6:1  %w_cast = zext i5 %w to i6

ST_4: exitcond2 (39)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:106
.preheader6:2  %exitcond2 = icmp eq i5 %w, -16

ST_4: empty_41 (40)  [1/1] 0.00ns
.preheader6:3  %empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: w_6 (41)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:106
.preheader6:4  %w_6 = add i5 %w, 1

ST_4: StgValue_59 (42)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:106
.preheader6:5  br i1 %exitcond2, label %.preheader7.loopexit, label %.preheader5.preheader

ST_4: tmp_76 (44)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:110
.preheader5.preheader:0  %tmp_76 = sub i5 0, %w

ST_4: StgValue_61 (45)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:108
.preheader5.preheader:1  br label %.preheader5

ST_4: StgValue_62 (115)  [1/1] 0.00ns
.preheader7.loopexit:0  br label %.preheader7


 <State 5>: 6.83ns
ST_5: sum (47)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader5:0  %sum = phi float [ 0.000000e+00, %.preheader5.preheader ], [ %sum_1, %.preheader5.loopexit ]

ST_5: m (48)  [1/1] 0.00ns
.preheader5:1  %m = phi i2 [ 0, %.preheader5.preheader ], [ %m_6, %.preheader5.loopexit ]

ST_5: m_cast_cast (49)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:108
.preheader5:2  %m_cast_cast = zext i2 %m to i3

ST_5: exitcond1 (50)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:108
.preheader5:3  %exitcond1 = icmp eq i2 %m, -1

ST_5: empty_42 (51)  [1/1] 0.00ns
.preheader5:4  %empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_5: m_6 (52)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:108
.preheader5:5  %m_6 = add i2 %m, 1

ST_5: StgValue_69 (53)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:108
.preheader5:6  br i1 %exitcond1, label %1, label %.preheader.preheader

ST_5: tmp_67_cast (55)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:0  %tmp_67_cast = zext i2 %m to i9

ST_5: tmp_83 (56)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:1  %tmp_83 = add i9 %tmp_67_cast, %tmp_109_cast

ST_5: tmp_74 (57)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110 (grouped into LUT with out node tmp_84)
.preheader.preheader:2  %tmp_74 = shl i9 %tmp_83, 2

ST_5: tmp_84 (58)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:110 (out node of the LUT)
.preheader.preheader:3  %tmp_84 = sub i9 %tmp_74, %tmp_83

ST_5: tmp_68 (59)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:4  %tmp_68 = sub i3 0, %m_cast_cast

ST_5: tmp_68_cast (60)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:5  %tmp_68_cast = sext i3 %tmp_68 to i5

ST_5: tmp_69 (61)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:6  %tmp_69 = icmp ne i5 %h, %tmp_68_cast

ST_5: tmp4 (62)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:7  %tmp4 = add i2 -1, %m

ST_5: tmp4_cast (63)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:8  %tmp4_cast = sext i2 %tmp4 to i6

ST_5: tmp_70 (64)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:9  %tmp_70 = add i6 %tmp4_cast, %h_cast

ST_5: tmp_71_cast (65)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:10  %tmp_71_cast = sext i6 %tmp_70 to i10

ST_5: tmp_85 (66)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:11  %tmp_85 = add i10 %tmp_71_cast, %tmp_107_cast2

ST_5: tmp_119_cast (67)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:12  %tmp_119_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_85, i4 0)

ST_5: tmp_75 (68)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:13  %tmp_75 = call i2 @_ssdm_op_PartSelect.i2.i6.i32.i32(i6 %tmp_70, i32 4, i32 5)

ST_5: icmp (69)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:110
.preheader.preheader:14  %icmp = icmp ne i2 %tmp_75, 1

ST_5: StgValue_85 (70)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:109
.preheader.preheader:15  br label %.preheader

ST_5: bias_load (106)  [2/2] 2.32ns  loc: accelerator_hls/components.cpp:113
:0  %bias_load = load float* %bias_addr, align 4

ST_5: tmp_66_cast (108)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:114
:2  %tmp_66_cast = zext i5 %w to i14

ST_5: tmp_82 (109)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:114
:3  %tmp_82 = add i14 %tmp_112_cast, %tmp_66_cast


 <State 6>: 6.85ns
ST_6: sum_1 (72)  [1/1] 0.00ns
.preheader:0  %sum_1 = phi float [ %sum_7, %_ifconv ], [ %sum, %.preheader.preheader ]

ST_6: n (73)  [1/1] 0.00ns
.preheader:1  %n = phi i2 [ %n_6, %_ifconv ], [ 0, %.preheader.preheader ]

ST_6: n_cast9 (74)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:109
.preheader:2  %n_cast9 = zext i2 %n to i5

ST_6: exitcond (75)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:109
.preheader:3  %exitcond = icmp eq i2 %n, -1

ST_6: empty_43 (76)  [1/1] 0.00ns
.preheader:4  %empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_6: n_6 (77)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:109
.preheader:5  %n_6 = add i2 %n, 1

ST_6: StgValue_95 (78)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:109
.preheader:6  br i1 %exitcond, label %.preheader5.loopexit, label %_ifconv

ST_6: tmp_72_cast (80)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:0  %tmp_72_cast = zext i2 %n to i9

ST_6: tmp_86 (81)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:110
_ifconv:1  %tmp_86 = add i9 %tmp_84, %tmp_72_cast

ST_6: tmp5 (85)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:110
_ifconv:5  %tmp5 = add i2 %n, -1

ST_6: tmp5_cast (86)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:6  %tmp5_cast = sext i2 %tmp5 to i6

ST_6: tmp_73 (87)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:110
_ifconv:7  %tmp_73 = add i6 %w_cast, %tmp5_cast

ST_6: tmp_87 (88)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:8  %tmp_87 = call i2 @_ssdm_op_PartSelect.i2.i6.i32.i32(i6 %tmp_73, i32 4, i32 5)

ST_6: icmp5 (89)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:110
_ifconv:9  %icmp5 = icmp ne i2 %tmp_87, 1

ST_6: tmp_75_cast (90)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:10  %tmp_75_cast = sext i6 %tmp_73 to i14

ST_6: tmp_88 (91)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:110
_ifconv:11  %tmp_88 = add i14 %tmp_119_cast, %tmp_75_cast

ST_6: notlhs (95)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:110
_ifconv:15  %notlhs = icmp ne i5 %n_cast9, %tmp_76

ST_6: StgValue_106 (104)  [1/1] 0.00ns
.preheader5.loopexit:0  br label %.preheader5


 <State 7>: 3.25ns
ST_7: tmp_120_cast (82)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:2  %tmp_120_cast = zext i9 %tmp_86 to i64

ST_7: weight_addr (83)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:3  %weight_addr = getelementptr [216 x float]* %weight, i64 0, i64 %tmp_120_cast

ST_7: weight_load (84)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:110
_ifconv:4  %weight_load = load float* %weight_addr, align 4

ST_7: tmp_121_cast (92)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:12  %tmp_121_cast = zext i14 %tmp_88 to i64

ST_7: input_addr (93)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110
_ifconv:13  %input_addr = getelementptr [6144 x float]* %input_r, i64 0, i64 %tmp_121_cast

ST_7: input_load (94)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:110
_ifconv:14  %input_load = load float* %input_addr, align 4


 <State 8>: 5.32ns
ST_8: weight_load (84)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:110
_ifconv:4  %weight_load = load float* %weight_addr, align 4

ST_8: input_load (94)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:110
_ifconv:14  %input_load = load float* %input_addr, align 4

ST_8: tmp6 (96)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110 (grouped into LUT with out node tmp_77)
_ifconv:16  %tmp6 = and i1 %icmp, %notlhs

ST_8: tmp7 (97)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110 (grouped into LUT with out node tmp_77)
_ifconv:17  %tmp7 = and i1 %tmp_69, %icmp5

ST_8: sel_tmp2 (98)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:110 (grouped into LUT with out node tmp_77)
_ifconv:18  %sel_tmp2 = and i1 %tmp7, %tmp6

ST_8: tmp_77 (99)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:110 (out node of the LUT)
_ifconv:19  %tmp_77 = select i1 %sel_tmp2, float %input_load, float 0.000000e+00


 <State 9>: 5.70ns
ST_9: tmp_78 (100)  [4/4] 5.70ns  loc: accelerator_hls/components.cpp:110
_ifconv:20  %tmp_78 = fmul float %weight_load, %tmp_77


 <State 10>: 5.70ns
ST_10: tmp_78 (100)  [3/4] 5.70ns  loc: accelerator_hls/components.cpp:110
_ifconv:20  %tmp_78 = fmul float %weight_load, %tmp_77


 <State 11>: 5.70ns
ST_11: tmp_78 (100)  [2/4] 5.70ns  loc: accelerator_hls/components.cpp:110
_ifconv:20  %tmp_78 = fmul float %weight_load, %tmp_77


 <State 12>: 5.70ns
ST_12: tmp_78 (100)  [1/4] 5.70ns  loc: accelerator_hls/components.cpp:110
_ifconv:20  %tmp_78 = fmul float %weight_load, %tmp_77


 <State 13>: 7.26ns
ST_13: sum_7 (101)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:110
_ifconv:21  %sum_7 = fadd float %sum_1, %tmp_78


 <State 14>: 7.26ns
ST_14: sum_7 (101)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:110
_ifconv:21  %sum_7 = fadd float %sum_1, %tmp_78


 <State 15>: 7.26ns
ST_15: sum_7 (101)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:110
_ifconv:21  %sum_7 = fadd float %sum_1, %tmp_78


 <State 16>: 7.26ns
ST_16: sum_7 (101)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:110
_ifconv:21  %sum_7 = fadd float %sum_1, %tmp_78


 <State 17>: 7.26ns
ST_17: sum_7 (101)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:110
_ifconv:21  %sum_7 = fadd float %sum_1, %tmp_78

ST_17: StgValue_128 (102)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:109
_ifconv:22  br label %.preheader


 <State 18>: 2.32ns
ST_18: bias_load (106)  [1/2] 2.32ns  loc: accelerator_hls/components.cpp:113
:0  %bias_load = load float* %bias_addr, align 4


 <State 19>: 7.26ns
ST_19: result (107)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:113
:1  %result = fadd float %sum, %bias_load


 <State 20>: 7.26ns
ST_20: result (107)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:113
:1  %result = fadd float %sum, %bias_load


 <State 21>: 7.26ns
ST_21: result (107)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:113
:1  %result = fadd float %sum, %bias_load


 <State 22>: 7.26ns
ST_22: result (107)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:113
:1  %result = fadd float %sum, %bias_load


 <State 23>: 7.26ns
ST_23: result (107)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:113
:1  %result = fadd float %sum, %bias_load


 <State 24>: 3.25ns
ST_24: tmp_113_cast (110)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:114
:4  %tmp_113_cast = zext i14 %tmp_82 to i64

ST_24: output_addr (111)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:114
:5  %output_addr = getelementptr [6144 x float]* %output_r, i64 0, i64 %tmp_113_cast

ST_24: StgValue_137 (112)  [1/1] 3.25ns  loc: accelerator_hls/components.cpp:114
:6  store float %result, float* %output_addr, align 4

ST_24: StgValue_138 (113)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:106
:7  br label %.preheader6



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:104) [7]  (1.59 ns)

 <State 2>: 3.31ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:104) [7]  (0 ns)
	'icmp' operation ('exitcond4', accelerator_hls/components.cpp:104) [8]  (3.31 ns)

 <State 3>: 3.31ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_hls/components.cpp:105) [25]  (0 ns)
	'icmp' operation ('exitcond3', accelerator_hls/components.cpp:105) [27]  (3.31 ns)

 <State 4>: 3.31ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_hls/components.cpp:106) [37]  (0 ns)
	'icmp' operation ('exitcond2', accelerator_hls/components.cpp:106) [39]  (3.31 ns)

 <State 5>: 6.83ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', accelerator_hls/components.cpp:108) [48]  (0 ns)
	'add' operation ('tmp4', accelerator_hls/components.cpp:110) [62]  (2.17 ns)
	'add' operation ('tmp_70', accelerator_hls/components.cpp:110) [64]  (2.33 ns)
	'add' operation ('tmp_85', accelerator_hls/components.cpp:110) [66]  (2.32 ns)

 <State 6>: 6.85ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', accelerator_hls/components.cpp:109) [73]  (0 ns)
	'add' operation ('tmp5', accelerator_hls/components.cpp:110) [85]  (2.17 ns)
	'add' operation ('tmp_73', accelerator_hls/components.cpp:110) [87]  (2.33 ns)
	'add' operation ('tmp_88', accelerator_hls/components.cpp:110) [91]  (2.34 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('weight_addr', accelerator_hls/components.cpp:110) [83]  (0 ns)
	'load' operation ('weight_load', accelerator_hls/components.cpp:110) on array 'weight' [84]  (3.25 ns)

 <State 8>: 5.32ns
The critical path consists of the following:
	'load' operation ('input_load', accelerator_hls/components.cpp:110) on array 'input_r' [94]  (3.25 ns)
	'select' operation ('tmp_77', accelerator_hls/components.cpp:110) [99]  (2.07 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_hls/components.cpp:110) [100]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_hls/components.cpp:110) [100]  (5.7 ns)

 <State 11>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_hls/components.cpp:110) [100]  (5.7 ns)

 <State 12>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_78', accelerator_hls/components.cpp:110) [100]  (5.7 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:110) [101]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:110) [101]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:110) [101]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:110) [101]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:110) [101]  (7.26 ns)

 <State 18>: 2.32ns
The critical path consists of the following:
	'load' operation ('bias_load', accelerator_hls/components.cpp:113) on array 'bias' [106]  (2.32 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:113) [107]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:113) [107]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:113) [107]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:113) [107]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:113) [107]  (7.26 ns)

 <State 24>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('output_addr', accelerator_hls/components.cpp:114) [111]  (0 ns)
	'store' operation (accelerator_hls/components.cpp:114) of variable 'result', accelerator_hls/components.cpp:113 on array 'output_r' [112]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
