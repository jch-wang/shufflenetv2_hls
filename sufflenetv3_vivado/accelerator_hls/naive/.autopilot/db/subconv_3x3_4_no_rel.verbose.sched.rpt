

================================================================
== Vivado HLS Report for 'subconv_3x3_4_no_rel'
================================================================
* Date:           Mon Dec 10 14:57:14 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_hls
* Solution:       naive
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  189889|  189889|  189889|  189889|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                         |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |  189888|  189888|      1978|          -|          -|    96|    no    |
        | + Loop 1.1              |    1976|    1976|       494|          -|          -|     4|    no    |
        |  ++ Loop 1.1.1          |     492|     492|       123|          -|          -|     4|    no    |
        |   +++ Loop 1.1.1.1      |     114|     114|        38|          -|          -|     3|    no    |
        |    ++++ Loop 1.1.1.1.1  |      36|      36|        12|          -|          -|     3|    no    |
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 24
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (!exitcond3)
	2  / (exitcond3)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	18  / (exitcond1)
	6  / (!exitcond1)
6 --> 
	7  / (!exitcond)
	5  / (exitcond)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	6  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_25 (5)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:445
:0  br label %.loopexit


 <State 2>: 2.91ns
ST_2: co (7)  [1/1] 0.00ns
.loopexit:0  %co = phi i7 [ 0, %0 ], [ %co_3, %.loopexit.loopexit ]

ST_2: exitcond4 (8)  [1/1] 2.91ns  loc: accelerator_hls/components.cpp:445
.loopexit:1  %exitcond4 = icmp eq i7 %co, -32

ST_2: empty (9)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 96, i64 96, i64 96)

ST_2: co_3 (10)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:445
.loopexit:3  %co_3 = add i7 %co, 1

ST_2: StgValue_30 (11)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:445
.loopexit:4  br i1 %exitcond4, label %2, label %.preheader7.preheader

ST_2: tmp (13)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader7.preheader:0  %tmp = zext i7 %co to i64

ST_2: tmp_cast (14)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:445
.preheader7.preheader:1  %tmp_cast = zext i7 %co to i10

ST_2: tmp_s (15)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:445
.preheader7.preheader:2  %tmp_s = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %co, i2 0)

ST_2: tmp_51_cast2 (16)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:445
.preheader7.preheader:3  %tmp_51_cast2 = zext i9 %tmp_s to i10

ST_2: tmp_51_cast (17)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader7.preheader:4  %tmp_51_cast = zext i9 %tmp_s to i10

ST_2: tmp_35 (18)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:451
.preheader7.preheader:5  %tmp_35 = sub i10 %tmp_51_cast, %tmp_cast

ST_2: tmp_53_cast (19)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader7.preheader:6  %tmp_53_cast = sext i10 %tmp_35 to i11

ST_2: bias_addr (20)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:454
.preheader7.preheader:7  %bias_addr = getelementptr [96 x float]* %bias, i64 0, i64 %tmp

ST_2: StgValue_39 (21)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:446
.preheader7.preheader:8  br label %.preheader7

ST_2: StgValue_40 (116)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:459
:0  ret void


 <State 3>: 2.32ns
ST_3: h (23)  [1/1] 0.00ns
.preheader7:0  %h = phi i3 [ 0, %.preheader7.preheader ], [ %h_3, %.preheader7.loopexit ]

ST_3: h_cast (24)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:446
.preheader7:1  %h_cast = zext i3 %h to i4

ST_3: exitcond3 (25)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:446
.preheader7:2  %exitcond3 = icmp eq i3 %h, -4

ST_3: empty_25 (26)  [1/1] 0.00ns
.preheader7:3  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_3: h_3 (27)  [1/1] 2.26ns  loc: accelerator_hls/components.cpp:446
.preheader7:4  %h_3 = add i3 %h, 1

ST_3: StgValue_46 (28)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:446
.preheader7:5  br i1 %exitcond3, label %.loopexit.loopexit, label %.preheader6.preheader

ST_3: tmp_cast_26 (30)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:455
.preheader6.preheader:0  %tmp_cast_26 = zext i3 %h to i10

ST_3: tmp_36 (31)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:455
.preheader6.preheader:1  %tmp_36 = add i10 %tmp_cast_26, %tmp_51_cast

ST_3: tmp_56_cast (32)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:447
.preheader6.preheader:2  %tmp_56_cast = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %tmp_36, i2 0)

ST_3: StgValue_50 (33)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:447
.preheader6.preheader:3  br label %.preheader6

ST_3: StgValue_51 (114)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 2.26ns
ST_4: w (35)  [1/1] 0.00ns
.preheader6:0  %w = phi i3 [ %w_3, %1 ], [ 0, %.preheader6.preheader ]

ST_4: w_cast (36)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:447
.preheader6:1  %w_cast = zext i3 %w to i4

ST_4: exitcond2 (37)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:447
.preheader6:2  %exitcond2 = icmp eq i3 %w, -4

ST_4: empty_27 (38)  [1/1] 0.00ns
.preheader6:3  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_4: w_3 (39)  [1/1] 2.26ns  loc: accelerator_hls/components.cpp:447
.preheader6:4  %w_3 = add i3 %w, 1

ST_4: StgValue_57 (40)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:447
.preheader6:5  br i1 %exitcond2, label %.preheader7.loopexit, label %.preheader5.preheader

ST_4: tmp_37 (42)  [1/1] 2.26ns  loc: accelerator_hls/components.cpp:451
.preheader5.preheader:0  %tmp_37 = sub i3 0, %w

ST_4: StgValue_59 (43)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:449
.preheader5.preheader:1  br label %.preheader5

ST_4: StgValue_60 (112)  [1/1] 0.00ns
.preheader7.loopexit:0  br label %.preheader7


 <State 5>: 6.76ns
ST_5: sum (45)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader5:0  %sum = phi float [ 0.000000e+00, %.preheader5.preheader ], [ %sum_1, %.preheader5.loopexit ]

ST_5: m (46)  [1/1] 0.00ns
.preheader5:1  %m = phi i2 [ 0, %.preheader5.preheader ], [ %m_3, %.preheader5.loopexit ]

ST_5: m_cast (47)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:449
.preheader5:2  %m_cast = zext i2 %m to i3

ST_5: exitcond1 (48)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:449
.preheader5:3  %exitcond1 = icmp eq i2 %m, -1

ST_5: empty_28 (49)  [1/1] 0.00ns
.preheader5:4  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_5: m_3 (50)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:449
.preheader5:5  %m_3 = add i2 %m, 1

ST_5: StgValue_67 (51)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:449
.preheader5:6  br i1 %exitcond1, label %1, label %.preheader.preheader

ST_5: tmp_28_cast (53)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:0  %tmp_28_cast = zext i2 %m to i11

ST_5: tmp_41 (54)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:1  %tmp_41 = add i11 %tmp_28_cast, %tmp_53_cast

ST_5: tmp_33 (55)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451 (grouped into LUT with out node tmp_42)
.preheader.preheader:2  %tmp_33 = shl i11 %tmp_41, 2

ST_5: tmp_42 (56)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:451 (out node of the LUT)
.preheader.preheader:3  %tmp_42 = sub i11 %tmp_33, %tmp_41

ST_5: tmp_29 (57)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:4  %tmp_29 = sub i3 0, %m_cast

ST_5: tmp_30 (58)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:5  %tmp_30 = icmp ne i3 %h, %tmp_29

ST_5: tmp4 (59)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:6  %tmp4 = add i2 -1, %m

ST_5: tmp4_cast (60)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:7  %tmp4_cast = sext i2 %tmp4 to i4

ST_5: tmp_31 (61)  [1/1] 2.26ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:8  %tmp_31 = add i4 %tmp4_cast, %h_cast

ST_5: tmp_32_cast (62)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:9  %tmp_32_cast = sext i4 %tmp_31 to i10

ST_5: tmp_43 (63)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:10  %tmp_43 = add i10 %tmp_32_cast, %tmp_51_cast2

ST_5: tmp_63_cast (64)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:11  %tmp_63_cast = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %tmp_43, i2 0)

ST_5: tmp_44 (65)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:12  %tmp_44 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %tmp_31, i32 2, i32 3)

ST_5: icmp (66)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:451
.preheader.preheader:13  %icmp = icmp ne i2 %tmp_44, 1

ST_5: StgValue_82 (67)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:450
.preheader.preheader:14  br label %.preheader

ST_5: bias_load (103)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:454
:0  %bias_load = load float* %bias_addr, align 4

ST_5: tmp_27_cast (105)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:455
:2  %tmp_27_cast = zext i3 %w to i12

ST_5: tmp_40 (106)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:455
:3  %tmp_40 = add i12 %tmp_56_cast, %tmp_27_cast


 <State 6>: 6.76ns
ST_6: sum_1 (69)  [1/1] 0.00ns
.preheader:0  %sum_1 = phi float [ %sum_4, %_ifconv ], [ %sum, %.preheader.preheader ]

ST_6: n (70)  [1/1] 0.00ns
.preheader:1  %n = phi i2 [ %n_3, %_ifconv ], [ 0, %.preheader.preheader ]

ST_6: n_cast (71)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:450
.preheader:2  %n_cast = zext i2 %n to i3

ST_6: exitcond (72)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:450
.preheader:3  %exitcond = icmp eq i2 %n, -1

ST_6: empty_29 (73)  [1/1] 0.00ns
.preheader:4  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_6: n_3 (74)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:450
.preheader:5  %n_3 = add i2 %n, 1

ST_6: StgValue_92 (75)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:450
.preheader:6  br i1 %exitcond, label %.preheader5.loopexit, label %_ifconv

ST_6: tmp_33_cast (77)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:0  %tmp_33_cast = zext i2 %n to i11

ST_6: tmp_45 (78)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:451
_ifconv:1  %tmp_45 = add i11 %tmp_42, %tmp_33_cast

ST_6: tmp5 (82)  [1/1] 2.17ns  loc: accelerator_hls/components.cpp:451
_ifconv:5  %tmp5 = add i2 %n, -1

ST_6: tmp5_cast (83)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:6  %tmp5_cast = sext i2 %tmp5 to i4

ST_6: tmp_34 (84)  [1/1] 2.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:7  %tmp_34 = add i4 %w_cast, %tmp5_cast

ST_6: tmp_46 (85)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:8  %tmp_46 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %tmp_34, i32 2, i32 3)

ST_6: icmp5 (86)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:451
_ifconv:9  %icmp5 = icmp ne i2 %tmp_46, 1

ST_6: tmp_36_cast (87)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:10  %tmp_36_cast = sext i4 %tmp_34 to i12

ST_6: tmp_47 (88)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:451
_ifconv:11  %tmp_47 = add i12 %tmp_63_cast, %tmp_36_cast

ST_6: notlhs (92)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:451
_ifconv:15  %notlhs = icmp ne i3 %n_cast, %tmp_37

ST_6: StgValue_103 (101)  [1/1] 0.00ns
.preheader5.loopexit:0  br label %.preheader5


 <State 7>: 3.25ns
ST_7: tmp_64_cast (79)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:2  %tmp_64_cast = zext i11 %tmp_45 to i64

ST_7: weight_addr (80)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:3  %weight_addr = getelementptr [864 x float]* %weight, i64 0, i64 %tmp_64_cast

ST_7: weight_load (81)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:451
_ifconv:4  %weight_load = load float* %weight_addr, align 4

ST_7: tmp_65_cast (89)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:12  %tmp_65_cast = zext i12 %tmp_47 to i64

ST_7: input_0_addr (90)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451
_ifconv:13  %input_0_addr = getelementptr [1536 x float]* %input_0, i64 0, i64 %tmp_65_cast

ST_7: input_0_load (91)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:451
_ifconv:14  %input_0_load = load float* %input_0_addr, align 4


 <State 8>: 5.32ns
ST_8: weight_load (81)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:451
_ifconv:4  %weight_load = load float* %weight_addr, align 4

ST_8: input_0_load (91)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:451
_ifconv:14  %input_0_load = load float* %input_0_addr, align 4

ST_8: tmp6 (93)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451 (grouped into LUT with out node tmp_38)
_ifconv:16  %tmp6 = and i1 %icmp, %notlhs

ST_8: tmp7 (94)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451 (grouped into LUT with out node tmp_38)
_ifconv:17  %tmp7 = and i1 %tmp_30, %icmp5

ST_8: sel_tmp2 (95)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:451 (grouped into LUT with out node tmp_38)
_ifconv:18  %sel_tmp2 = and i1 %tmp7, %tmp6

ST_8: tmp_38 (96)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:451 (out node of the LUT)
_ifconv:19  %tmp_38 = select i1 %sel_tmp2, float %input_0_load, float 0.000000e+00


 <State 9>: 5.70ns
ST_9: tmp_39 (97)  [4/4] 5.70ns  loc: accelerator_hls/components.cpp:451
_ifconv:20  %tmp_39 = fmul float %weight_load, %tmp_38


 <State 10>: 5.70ns
ST_10: tmp_39 (97)  [3/4] 5.70ns  loc: accelerator_hls/components.cpp:451
_ifconv:20  %tmp_39 = fmul float %weight_load, %tmp_38


 <State 11>: 5.70ns
ST_11: tmp_39 (97)  [2/4] 5.70ns  loc: accelerator_hls/components.cpp:451
_ifconv:20  %tmp_39 = fmul float %weight_load, %tmp_38


 <State 12>: 5.70ns
ST_12: tmp_39 (97)  [1/4] 5.70ns  loc: accelerator_hls/components.cpp:451
_ifconv:20  %tmp_39 = fmul float %weight_load, %tmp_38


 <State 13>: 7.26ns
ST_13: sum_4 (98)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:21  %sum_4 = fadd float %sum_1, %tmp_39


 <State 14>: 7.26ns
ST_14: sum_4 (98)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:21  %sum_4 = fadd float %sum_1, %tmp_39


 <State 15>: 7.26ns
ST_15: sum_4 (98)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:21  %sum_4 = fadd float %sum_1, %tmp_39


 <State 16>: 7.26ns
ST_16: sum_4 (98)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:21  %sum_4 = fadd float %sum_1, %tmp_39


 <State 17>: 7.26ns
ST_17: sum_4 (98)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:451
_ifconv:21  %sum_4 = fadd float %sum_1, %tmp_39

ST_17: StgValue_125 (99)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:450
_ifconv:22  br label %.preheader


 <State 18>: 3.25ns
ST_18: bias_load (103)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:454
:0  %bias_load = load float* %bias_addr, align 4


 <State 19>: 7.26ns
ST_19: result (104)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:454
:1  %result = fadd float %sum, %bias_load


 <State 20>: 7.26ns
ST_20: result (104)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:454
:1  %result = fadd float %sum, %bias_load


 <State 21>: 7.26ns
ST_21: result (104)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:454
:1  %result = fadd float %sum, %bias_load


 <State 22>: 7.26ns
ST_22: result (104)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:454
:1  %result = fadd float %sum, %bias_load


 <State 23>: 7.26ns
ST_23: result (104)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:454
:1  %result = fadd float %sum, %bias_load


 <State 24>: 3.25ns
ST_24: tmp_57_cast (107)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:455
:4  %tmp_57_cast = zext i12 %tmp_40 to i64

ST_24: output_0_addr (108)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:455
:5  %output_0_addr = getelementptr [1536 x float]* %output_0, i64 0, i64 %tmp_57_cast

ST_24: StgValue_134 (109)  [1/1] 3.25ns  loc: accelerator_hls/components.cpp:455
:6  store float %result, float* %output_0_addr, align 4

ST_24: StgValue_135 (110)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:447
:7  br label %.preheader6



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:445) [7]  (1.59 ns)

 <State 2>: 2.91ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:445) [7]  (0 ns)
	'icmp' operation ('exitcond4', accelerator_hls/components.cpp:445) [8]  (2.91 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_hls/components.cpp:446) [23]  (0 ns)
	'add' operation ('tmp_36', accelerator_hls/components.cpp:455) [31]  (2.32 ns)

 <State 4>: 2.26ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_hls/components.cpp:447) [35]  (0 ns)
	'add' operation ('w', accelerator_hls/components.cpp:447) [39]  (2.26 ns)

 <State 5>: 6.76ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', accelerator_hls/components.cpp:449) [46]  (0 ns)
	'add' operation ('tmp4', accelerator_hls/components.cpp:451) [59]  (2.17 ns)
	'add' operation ('tmp_31', accelerator_hls/components.cpp:451) [61]  (2.26 ns)
	'add' operation ('tmp_43', accelerator_hls/components.cpp:451) [63]  (2.32 ns)

 <State 6>: 6.76ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', accelerator_hls/components.cpp:450) [70]  (0 ns)
	'add' operation ('tmp5', accelerator_hls/components.cpp:451) [82]  (2.17 ns)
	'add' operation ('tmp_34', accelerator_hls/components.cpp:451) [84]  (2.26 ns)
	'add' operation ('tmp_47', accelerator_hls/components.cpp:451) [88]  (2.33 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('weight_addr', accelerator_hls/components.cpp:451) [80]  (0 ns)
	'load' operation ('weight_load', accelerator_hls/components.cpp:451) on array 'weight' [81]  (3.25 ns)

 <State 8>: 5.32ns
The critical path consists of the following:
	'load' operation ('input_0_load', accelerator_hls/components.cpp:451) on array 'input_0' [91]  (3.25 ns)
	'select' operation ('tmp_38', accelerator_hls/components.cpp:451) [96]  (2.07 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_39', accelerator_hls/components.cpp:451) [97]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_39', accelerator_hls/components.cpp:451) [97]  (5.7 ns)

 <State 11>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_39', accelerator_hls/components.cpp:451) [97]  (5.7 ns)

 <State 12>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_39', accelerator_hls/components.cpp:451) [97]  (5.7 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:451) [98]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:451) [98]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:451) [98]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:451) [98]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:451) [98]  (7.26 ns)

 <State 18>: 3.25ns
The critical path consists of the following:
	'load' operation ('bias_load', accelerator_hls/components.cpp:454) on array 'bias' [103]  (3.25 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:454) [104]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:454) [104]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:454) [104]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:454) [104]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:454) [104]  (7.26 ns)

 <State 24>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('output_0_addr', accelerator_hls/components.cpp:455) [108]  (0 ns)
	'store' operation (accelerator_hls/components.cpp:455) of variable 'result', accelerator_hls/components.cpp:454 on array 'output_0' [109]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
