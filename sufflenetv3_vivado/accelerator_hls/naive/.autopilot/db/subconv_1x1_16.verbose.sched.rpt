

================================================================
== Vivado HLS Report for 'subconv_1x1_16'
================================================================
* Date:           Tue Dec 11 23:30:28 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_hls
* Solution:       naive
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.53|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1684273|  1684273|  1684273|  1684273|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1             |  1684272|  1684272|     70178|          -|          -|    24|    no    |
        | + Loop 1.1          |    70176|    70176|      4386|          -|          -|    16|    no    |
        |  ++ Loop 1.1.1      |     4384|     4384|       274|          -|          -|    16|    no    |
        |   +++ Loop 1.1.1.1  |      264|      264|        11|          -|          -|    24|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 23
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
3 --> 
	4  / (!exitcond2)
	2  / (exitcond2)
4 --> 
	5  / (!exitcond1)
	3  / (exitcond1)
5 --> 
	6  / (!exitcond)
	16  / (exitcond)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	5  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_24 (5)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:59
:0  br label %.loopexit


 <State 2>: 3.31ns
ST_2: co (7)  [1/1] 0.00ns
.loopexit:0  %co = phi i5 [ 0, %0 ], [ %co_12, %.loopexit.loopexit ]

ST_2: exitcond3 (8)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:59
.loopexit:1  %exitcond3 = icmp eq i5 %co, -8

ST_2: empty (9)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24)

ST_2: co_12 (10)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:59
.loopexit:3  %co_12 = add i5 %co, 1

ST_2: StgValue_29 (11)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:59
.loopexit:4  br i1 %exitcond3, label %3, label %.preheader5.preheader

ST_2: tmp (13)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
.preheader5.preheader:0  %tmp = zext i5 %co to i64

ST_2: tmp_s (14)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:59
.preheader5.preheader:1  %tmp_s = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %co, i5 0)

ST_2: p_shl_cast (15)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:59
.preheader5.preheader:2  %p_shl_cast = zext i10 %tmp_s to i11

ST_2: tmp_132 (16)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:59
.preheader5.preheader:3  %tmp_132 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %co, i3 0)

ST_2: p_shl1_cast (17)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
.preheader5.preheader:4  %p_shl1_cast = zext i8 %tmp_132 to i11

ST_2: tmp_133 (18)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:64
.preheader5.preheader:5  %tmp_133 = sub i11 %p_shl_cast, %p_shl1_cast

ST_2: tmp_134 (19)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:59
.preheader5.preheader:6  %tmp_134 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %co, i4 0)

ST_2: tmp_206_cast (20)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70
.preheader5.preheader:7  %tmp_206_cast = zext i9 %tmp_134 to i10

ST_2: bias_addr (21)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70
.preheader5.preheader:8  %bias_addr = getelementptr [24 x float]* %bias, i64 0, i64 %tmp

ST_2: StgValue_39 (22)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:60
.preheader5.preheader:9  br label %.preheader5

ST_2: StgValue_40 (89)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:75
:0  ret void


 <State 3>: 3.31ns
ST_3: h (24)  [1/1] 0.00ns
.preheader5:0  %h = phi i5 [ 0, %.preheader5.preheader ], [ %h_12, %.preheader5.loopexit ]

ST_3: exitcond2 (25)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:60
.preheader5:1  %exitcond2 = icmp eq i5 %h, -16

ST_3: empty_59 (26)  [1/1] 0.00ns
.preheader5:2  %empty_59 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: h_12 (27)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:60
.preheader5:3  %h_12 = add i5 %h, 1

ST_3: StgValue_45 (28)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:60
.preheader5:4  br i1 %exitcond2, label %.loopexit.loopexit, label %.preheader4.preheader

ST_3: tmp_cast (30)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:71
.preheader4.preheader:0  %tmp_cast = zext i5 %h to i10

ST_3: tmp_135 (31)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:71
.preheader4.preheader:1  %tmp_135 = add i10 %tmp_cast, %tmp_206_cast

ST_3: tmp_209_cast (32)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:61
.preheader4.preheader:2  %tmp_209_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_135, i4 0)

ST_3: StgValue_49 (33)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:61
.preheader4.preheader:3  br label %.preheader4

ST_3: StgValue_50 (87)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.31ns
ST_4: w (35)  [1/1] 0.00ns
.preheader4:0  %w = phi i5 [ %w_12, %2 ], [ 0, %.preheader4.preheader ]

ST_4: exitcond1 (36)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:61
.preheader4:1  %exitcond1 = icmp eq i5 %w, -16

ST_4: empty_60 (37)  [1/1] 0.00ns
.preheader4:2  %empty_60 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: w_12 (38)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:61
.preheader4:3  %w_12 = add i5 %w, 1

ST_4: StgValue_55 (39)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:61
.preheader4:4  br i1 %exitcond1, label %.preheader5.loopexit, label %.preheader.preheader

ST_4: tmp_94_cast (41)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:71
.preheader.preheader:0  %tmp_94_cast = zext i5 %w to i14

ST_4: tmp_136 (42)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:71
.preheader.preheader:1  %tmp_136 = add i14 %tmp_209_cast, %tmp_94_cast

ST_4: tmp_210_cast (43)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:71
.preheader.preheader:2  %tmp_210_cast = zext i14 %tmp_136 to i64

ST_4: output_addr (44)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:71
.preheader.preheader:3  %output_addr = getelementptr [6144 x float]* %output_r, i64 0, i64 %tmp_210_cast

ST_4: StgValue_60 (45)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:63
.preheader.preheader:4  br label %.preheader

ST_4: StgValue_61 (85)  [1/1] 0.00ns
.preheader5.loopexit:0  br label %.preheader5


 <State 5>: 7.92ns
ST_5: sum (47)  [1/1] 0.00ns
.preheader:0  %sum = phi float [ %sum_13, %1 ], [ 0.000000e+00, %.preheader.preheader ]

ST_5: ci (48)  [1/1] 0.00ns
.preheader:1  %ci = phi i5 [ %ci_6, %1 ], [ 0, %.preheader.preheader ]

ST_5: exitcond (49)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:63
.preheader:2  %exitcond = icmp eq i5 %ci, -8

ST_5: empty_61 (50)  [1/1] 0.00ns
.preheader:3  %empty_61 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24)

ST_5: ci_6 (51)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:63
.preheader:4  %ci_6 = add i5 %ci, 1

ST_5: StgValue_67 (52)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:63
.preheader:5  br i1 %exitcond, label %2, label %1

ST_5: tmp_95_cast (54)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:63
:0  %tmp_95_cast = zext i5 %ci to i11

ST_5: tmp_137 (55)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:63
:1  %tmp_137 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %ci, i4 0)

ST_5: tmp_212_cast (56)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:2  %tmp_212_cast = zext i9 %tmp_137 to i10

ST_5: tmp_138 (57)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:64
:3  %tmp_138 = add i10 %tmp_cast, %tmp_212_cast

ST_5: tmp_215_cast (58)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:4  %tmp_215_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_138, i4 0)

ST_5: tmp_139 (59)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:64
:5  %tmp_139 = add i14 %tmp_94_cast, %tmp_215_cast

ST_5: tmp_216_cast (60)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:6  %tmp_216_cast = zext i14 %tmp_139 to i64

ST_5: input_addr (61)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:7  %input_addr = getelementptr [6144 x float]* %input_r, i64 0, i64 %tmp_216_cast

ST_5: tmp_140 (62)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:64
:8  %tmp_140 = add i11 %tmp_95_cast, %tmp_133

ST_5: tmp_217_cast (63)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:9  %tmp_217_cast = sext i11 %tmp_140 to i64

ST_5: weight_addr (64)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:64
:10  %weight_addr = getelementptr [576 x float]* %weight, i64 0, i64 %tmp_217_cast

ST_5: weight_load (65)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:64
:11  %weight_load = load float* %weight_addr, align 4

ST_5: input_load (66)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:64
:12  %input_load = load float* %input_addr, align 4

ST_5: bias_load (71)  [2/2] 2.32ns  loc: accelerator_hls/components.cpp:70
:0  %bias_load = load float* %bias_addr, align 4


 <State 6>: 3.25ns
ST_6: weight_load (65)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:64
:11  %weight_load = load float* %weight_addr, align 4

ST_6: input_load (66)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:64
:12  %input_load = load float* %input_addr, align 4


 <State 7>: 5.70ns
ST_7: tmp_96 (67)  [4/4] 5.70ns  loc: accelerator_hls/components.cpp:64
:13  %tmp_96 = fmul float %weight_load, %input_load


 <State 8>: 5.70ns
ST_8: tmp_96 (67)  [3/4] 5.70ns  loc: accelerator_hls/components.cpp:64
:13  %tmp_96 = fmul float %weight_load, %input_load


 <State 9>: 5.70ns
ST_9: tmp_96 (67)  [2/4] 5.70ns  loc: accelerator_hls/components.cpp:64
:13  %tmp_96 = fmul float %weight_load, %input_load


 <State 10>: 5.70ns
ST_10: tmp_96 (67)  [1/4] 5.70ns  loc: accelerator_hls/components.cpp:64
:13  %tmp_96 = fmul float %weight_load, %input_load


 <State 11>: 7.26ns
ST_11: sum_13 (68)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:64
:14  %sum_13 = fadd float %sum, %tmp_96


 <State 12>: 7.26ns
ST_12: sum_13 (68)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:64
:14  %sum_13 = fadd float %sum, %tmp_96


 <State 13>: 7.26ns
ST_13: sum_13 (68)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:64
:14  %sum_13 = fadd float %sum, %tmp_96


 <State 14>: 7.26ns
ST_14: sum_13 (68)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:64
:14  %sum_13 = fadd float %sum, %tmp_96


 <State 15>: 7.26ns
ST_15: sum_13 (68)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:64
:14  %sum_13 = fadd float %sum, %tmp_96

ST_15: StgValue_93 (69)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:63
:15  br label %.preheader


 <State 16>: 2.32ns
ST_16: bias_load (71)  [1/2] 2.32ns  loc: accelerator_hls/components.cpp:70
:0  %bias_load = load float* %bias_addr, align 4


 <State 17>: 7.26ns
ST_17: result (72)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:70
:1  %result = fadd float %sum, %bias_load


 <State 18>: 7.26ns
ST_18: result (72)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:70
:1  %result = fadd float %sum, %bias_load


 <State 19>: 7.26ns
ST_19: result (72)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:70
:1  %result = fadd float %sum, %bias_load


 <State 20>: 7.26ns
ST_20: result (72)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:70
:1  %result = fadd float %sum, %bias_load


 <State 21>: 7.26ns
ST_21: result (72)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:70
:1  %result = fadd float %sum, %bias_load


 <State 22>: 6.79ns
ST_22: tmp_29 (79)  [1/1] 6.79ns  loc: accelerator_hls/components.cpp:71
:8  %tmp_29 = fcmp ogt float %result, 0.000000e+00


 <State 23>: 8.53ns
ST_23: result_to_int (73)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70
:2  %result_to_int = bitcast float %result to i32

ST_23: tmp_26 (74)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70
:3  %tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %result_to_int, i32 23, i32 30)

ST_23: tmp_93 (75)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70
:4  %tmp_93 = trunc i32 %result_to_int to i23

ST_23: notlhs (76)  [1/1] 2.91ns  loc: accelerator_hls/components.cpp:70
:5  %notlhs = icmp ne i8 %tmp_26, -1

ST_23: notrhs (77)  [1/1] 3.20ns  loc: accelerator_hls/components.cpp:70
:6  %notrhs = icmp eq i23 %tmp_93, 0

ST_23: tmp_28 (78)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:70 (grouped into LUT with out node result_6)
:7  %tmp_28 = or i1 %notrhs, %notlhs

ST_23: tmp_30 (80)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:71 (grouped into LUT with out node result_6)
:9  %tmp_30 = and i1 %tmp_28, %tmp_29

ST_23: result_6 (81)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:71 (out node of the LUT)
:10  %result_6 = select i1 %tmp_30, float %result, float 0.000000e+00

ST_23: StgValue_109 (82)  [1/1] 3.25ns  loc: accelerator_hls/components.cpp:71
:11  store float %result_6, float* %output_addr, align 4

ST_23: StgValue_110 (83)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:61
:12  br label %.preheader4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:59) [7]  (1.59 ns)

 <State 2>: 3.31ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:59) [7]  (0 ns)
	'icmp' operation ('exitcond3', accelerator_hls/components.cpp:59) [8]  (3.31 ns)

 <State 3>: 3.31ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_hls/components.cpp:60) [24]  (0 ns)
	'icmp' operation ('exitcond2', accelerator_hls/components.cpp:60) [25]  (3.31 ns)

 <State 4>: 3.31ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_hls/components.cpp:61) [35]  (0 ns)
	'icmp' operation ('exitcond1', accelerator_hls/components.cpp:61) [36]  (3.31 ns)

 <State 5>: 7.92ns
The critical path consists of the following:
	'phi' operation ('ci') with incoming values : ('ci', accelerator_hls/components.cpp:63) [48]  (0 ns)
	'add' operation ('tmp_138', accelerator_hls/components.cpp:64) [57]  (2.32 ns)
	'add' operation ('tmp_139', accelerator_hls/components.cpp:64) [59]  (2.34 ns)
	'getelementptr' operation ('input_addr', accelerator_hls/components.cpp:64) [61]  (0 ns)
	'load' operation ('input_load', accelerator_hls/components.cpp:64) on array 'input_r' [66]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('weight_load', accelerator_hls/components.cpp:64) on array 'weight' [65]  (3.25 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_96', accelerator_hls/components.cpp:64) [67]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_96', accelerator_hls/components.cpp:64) [67]  (5.7 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_96', accelerator_hls/components.cpp:64) [67]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_96', accelerator_hls/components.cpp:64) [67]  (5.7 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:64) [68]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:64) [68]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:64) [68]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:64) [68]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:64) [68]  (7.26 ns)

 <State 16>: 2.32ns
The critical path consists of the following:
	'load' operation ('bias_load', accelerator_hls/components.cpp:70) on array 'bias' [71]  (2.32 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:70) [72]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:70) [72]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:70) [72]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:70) [72]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:70) [72]  (7.26 ns)

 <State 22>: 6.79ns
The critical path consists of the following:
	'fcmp' operation ('tmp_29', accelerator_hls/components.cpp:71) [79]  (6.79 ns)

 <State 23>: 8.53ns
The critical path consists of the following:
	'icmp' operation ('notrhs', accelerator_hls/components.cpp:70) [77]  (3.2 ns)
	'or' operation ('tmp_28', accelerator_hls/components.cpp:70) [78]  (0 ns)
	'and' operation ('tmp_30', accelerator_hls/components.cpp:71) [80]  (0 ns)
	'select' operation ('result', accelerator_hls/components.cpp:71) [81]  (2.07 ns)
	'store' operation (accelerator_hls/components.cpp:71) of variable 'result', accelerator_hls/components.cpp:71 on array 'output_r' [82]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
