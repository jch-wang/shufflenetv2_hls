

================================================================
== Vivado HLS Report for 'subconv_1x1_8'
================================================================
* Date:           Tue Dec 11 23:30:29 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_hls
* Solution:       naive
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.53|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1653601|  1653601|  1653601|  1653601|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1             |  1653600|  1653600|     34450|          -|          -|    48|    no    |
        | + Loop 1.1          |    34448|    34448|      4306|          -|          -|     8|    no    |
        |  ++ Loop 1.1.1      |     4304|     4304|       538|          -|          -|     8|    no    |
        |   +++ Loop 1.1.1.1  |      528|      528|        11|          -|          -|    48|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 23
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
3 --> 
	4  / (!exitcond2)
	2  / (exitcond2)
4 --> 
	5  / (!exitcond1)
	3  / (exitcond1)
5 --> 
	6  / (!exitcond)
	16  / (exitcond)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	5  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_24 (5)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:257
:0  br label %.loopexit


 <State 2>: 3.88ns
ST_2: co (7)  [1/1] 0.00ns
.loopexit:0  %co = phi i6 [ 0, %0 ], [ %co_8, %.loopexit.loopexit ]

ST_2: exitcond3 (8)  [1/1] 3.88ns  loc: accelerator_hls/components.cpp:257
.loopexit:1  %exitcond3 = icmp eq i6 %co, -16

ST_2: empty (9)  [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)

ST_2: co_8 (10)  [1/1] 2.31ns  loc: accelerator_hls/components.cpp:257
.loopexit:3  %co_8 = add i6 %co, 1

ST_2: StgValue_29 (11)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:257
.loopexit:4  br i1 %exitcond3, label %3, label %.preheader5.preheader

ST_2: tmp (13)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
.preheader5.preheader:0  %tmp = zext i6 %co to i64

ST_2: tmp_s (14)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:257
.preheader5.preheader:1  %tmp_s = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %co, i6 0)

ST_2: p_shl_cast (15)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:257
.preheader5.preheader:2  %p_shl_cast = zext i12 %tmp_s to i13

ST_2: tmp_98 (16)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:257
.preheader5.preheader:3  %tmp_98 = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %co, i4 0)

ST_2: p_shl1_cast (17)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
.preheader5.preheader:4  %p_shl1_cast = zext i10 %tmp_98 to i13

ST_2: tmp_99 (18)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:262
.preheader5.preheader:5  %tmp_99 = sub i13 %p_shl_cast, %p_shl1_cast

ST_2: tmp_100 (19)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:257
.preheader5.preheader:6  %tmp_100 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %co, i3 0)

ST_2: tmp_142_cast (20)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264
.preheader5.preheader:7  %tmp_142_cast = zext i9 %tmp_100 to i10

ST_2: bias_addr (21)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264
.preheader5.preheader:8  %bias_addr = getelementptr [48 x float]* %bias, i64 0, i64 %tmp

ST_2: StgValue_39 (22)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:258
.preheader5.preheader:9  br label %.preheader5

ST_2: StgValue_40 (89)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:269
:0  ret void


 <State 3>: 3.10ns
ST_3: h (24)  [1/1] 0.00ns
.preheader5:0  %h = phi i4 [ 0, %.preheader5.preheader ], [ %h_8, %.preheader5.loopexit ]

ST_3: exitcond2 (25)  [1/1] 3.10ns  loc: accelerator_hls/components.cpp:258
.preheader5:1  %exitcond2 = icmp eq i4 %h, -8

ST_3: empty_47 (26)  [1/1] 0.00ns
.preheader5:2  %empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_3: h_8 (27)  [1/1] 2.35ns  loc: accelerator_hls/components.cpp:258
.preheader5:3  %h_8 = add i4 %h, 1

ST_3: StgValue_45 (28)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:258
.preheader5:4  br i1 %exitcond2, label %.loopexit.loopexit, label %.preheader4.preheader

ST_3: tmp_cast (30)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:265
.preheader4.preheader:0  %tmp_cast = zext i4 %h to i10

ST_3: tmp_101 (31)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:265
.preheader4.preheader:1  %tmp_101 = add i10 %tmp_cast, %tmp_142_cast

ST_3: tmp_145_cast (32)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:259
.preheader4.preheader:2  %tmp_145_cast = call i13 @_ssdm_op_BitConcatenate.i13.i10.i3(i10 %tmp_101, i3 0)

ST_3: StgValue_49 (33)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:259
.preheader4.preheader:3  br label %.preheader4

ST_3: StgValue_50 (87)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.10ns
ST_4: w (35)  [1/1] 0.00ns
.preheader4:0  %w = phi i4 [ %w_8, %2 ], [ 0, %.preheader4.preheader ]

ST_4: exitcond1 (36)  [1/1] 3.10ns  loc: accelerator_hls/components.cpp:259
.preheader4:1  %exitcond1 = icmp eq i4 %w, -8

ST_4: empty_48 (37)  [1/1] 0.00ns
.preheader4:2  %empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_4: w_8 (38)  [1/1] 2.35ns  loc: accelerator_hls/components.cpp:259
.preheader4:3  %w_8 = add i4 %w, 1

ST_4: StgValue_55 (39)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:259
.preheader4:4  br i1 %exitcond1, label %.preheader5.loopexit, label %.preheader.preheader

ST_4: tmp_82_cast (41)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:265
.preheader.preheader:0  %tmp_82_cast = zext i4 %w to i13

ST_4: tmp_102 (42)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:265
.preheader.preheader:1  %tmp_102 = add i13 %tmp_145_cast, %tmp_82_cast

ST_4: tmp_146_cast (43)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:265
.preheader.preheader:2  %tmp_146_cast = zext i13 %tmp_102 to i64

ST_4: output_addr (44)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:265
.preheader.preheader:3  %output_addr = getelementptr [3072 x float]* %output_r, i64 0, i64 %tmp_146_cast

ST_4: StgValue_60 (45)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:261
.preheader.preheader:4  br label %.preheader

ST_4: StgValue_61 (85)  [1/1] 0.00ns
.preheader5.loopexit:0  br label %.preheader5


 <State 5>: 7.91ns
ST_5: sum (47)  [1/1] 0.00ns
.preheader:0  %sum = phi float [ %sum_9, %1 ], [ 0.000000e+00, %.preheader.preheader ]

ST_5: ci (48)  [1/1] 0.00ns
.preheader:1  %ci = phi i6 [ %ci_2, %1 ], [ 0, %.preheader.preheader ]

ST_5: exitcond (49)  [1/1] 3.88ns  loc: accelerator_hls/components.cpp:261
.preheader:2  %exitcond = icmp eq i6 %ci, -16

ST_5: empty_49 (50)  [1/1] 0.00ns
.preheader:3  %empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)

ST_5: ci_2 (51)  [1/1] 2.31ns  loc: accelerator_hls/components.cpp:261
.preheader:4  %ci_2 = add i6 %ci, 1

ST_5: StgValue_67 (52)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:261
.preheader:5  br i1 %exitcond, label %2, label %1

ST_5: tmp_83_cast (54)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:261
:0  %tmp_83_cast = zext i6 %ci to i13

ST_5: tmp_103 (55)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:261
:1  %tmp_103 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %ci, i3 0)

ST_5: tmp_148_cast (56)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:2  %tmp_148_cast = zext i9 %tmp_103 to i10

ST_5: tmp_104 (57)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:262
:3  %tmp_104 = add i10 %tmp_cast, %tmp_148_cast

ST_5: tmp_151_cast (58)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:4  %tmp_151_cast = call i13 @_ssdm_op_BitConcatenate.i13.i10.i3(i10 %tmp_104, i3 0)

ST_5: tmp_105 (59)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:262
:5  %tmp_105 = add i13 %tmp_82_cast, %tmp_151_cast

ST_5: tmp_152_cast (60)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:6  %tmp_152_cast = zext i13 %tmp_105 to i64

ST_5: input_addr (61)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:7  %input_addr = getelementptr [3072 x float]* %input_r, i64 0, i64 %tmp_152_cast

ST_5: tmp_106 (62)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:262
:8  %tmp_106 = add i13 %tmp_83_cast, %tmp_99

ST_5: tmp_153_cast (63)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:9  %tmp_153_cast = sext i13 %tmp_106 to i64

ST_5: weight_addr (64)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:262
:10  %weight_addr = getelementptr [2304 x float]* %weight, i64 0, i64 %tmp_153_cast

ST_5: weight_load (65)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:262
:11  %weight_load = load float* %weight_addr, align 4

ST_5: input_load (66)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:262
:12  %input_load = load float* %input_addr, align 4

ST_5: bias_load (71)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:264
:0  %bias_load = load float* %bias_addr, align 4


 <State 6>: 3.25ns
ST_6: weight_load (65)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:262
:11  %weight_load = load float* %weight_addr, align 4

ST_6: input_load (66)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:262
:12  %input_load = load float* %input_addr, align 4


 <State 7>: 5.70ns
ST_7: tmp_84 (67)  [4/4] 5.70ns  loc: accelerator_hls/components.cpp:262
:13  %tmp_84 = fmul float %weight_load, %input_load


 <State 8>: 5.70ns
ST_8: tmp_84 (67)  [3/4] 5.70ns  loc: accelerator_hls/components.cpp:262
:13  %tmp_84 = fmul float %weight_load, %input_load


 <State 9>: 5.70ns
ST_9: tmp_84 (67)  [2/4] 5.70ns  loc: accelerator_hls/components.cpp:262
:13  %tmp_84 = fmul float %weight_load, %input_load


 <State 10>: 5.70ns
ST_10: tmp_84 (67)  [1/4] 5.70ns  loc: accelerator_hls/components.cpp:262
:13  %tmp_84 = fmul float %weight_load, %input_load


 <State 11>: 7.26ns
ST_11: sum_9 (68)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:262
:14  %sum_9 = fadd float %sum, %tmp_84


 <State 12>: 7.26ns
ST_12: sum_9 (68)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:262
:14  %sum_9 = fadd float %sum, %tmp_84


 <State 13>: 7.26ns
ST_13: sum_9 (68)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:262
:14  %sum_9 = fadd float %sum, %tmp_84


 <State 14>: 7.26ns
ST_14: sum_9 (68)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:262
:14  %sum_9 = fadd float %sum, %tmp_84


 <State 15>: 7.26ns
ST_15: sum_9 (68)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:262
:14  %sum_9 = fadd float %sum, %tmp_84

ST_15: StgValue_93 (69)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:261
:15  br label %.preheader


 <State 16>: 3.25ns
ST_16: bias_load (71)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:264
:0  %bias_load = load float* %bias_addr, align 4


 <State 17>: 7.26ns
ST_17: result (72)  [5/5] 7.26ns  loc: accelerator_hls/components.cpp:264
:1  %result = fadd float %sum, %bias_load


 <State 18>: 7.26ns
ST_18: result (72)  [4/5] 7.26ns  loc: accelerator_hls/components.cpp:264
:1  %result = fadd float %sum, %bias_load


 <State 19>: 7.26ns
ST_19: result (72)  [3/5] 7.26ns  loc: accelerator_hls/components.cpp:264
:1  %result = fadd float %sum, %bias_load


 <State 20>: 7.26ns
ST_20: result (72)  [2/5] 7.26ns  loc: accelerator_hls/components.cpp:264
:1  %result = fadd float %sum, %bias_load


 <State 21>: 7.26ns
ST_21: result (72)  [1/5] 7.26ns  loc: accelerator_hls/components.cpp:264
:1  %result = fadd float %sum, %bias_load


 <State 22>: 6.79ns
ST_22: tmp_9 (79)  [1/1] 6.79ns  loc: accelerator_hls/components.cpp:265
:8  %tmp_9 = fcmp ogt float %result, 0.000000e+00


 <State 23>: 8.53ns
ST_23: result_to_int (73)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264
:2  %result_to_int = bitcast float %result to i32

ST_23: tmp_6 (74)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264
:3  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %result_to_int, i32 23, i32 30)

ST_23: tmp_89 (75)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264
:4  %tmp_89 = trunc i32 %result_to_int to i23

ST_23: notlhs (76)  [1/1] 2.91ns  loc: accelerator_hls/components.cpp:264
:5  %notlhs = icmp ne i8 %tmp_6, -1

ST_23: notrhs (77)  [1/1] 3.20ns  loc: accelerator_hls/components.cpp:264
:6  %notrhs = icmp eq i23 %tmp_89, 0

ST_23: tmp_8 (78)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:264 (grouped into LUT with out node result_2)
:7  %tmp_8 = or i1 %notrhs, %notlhs

ST_23: tmp_10 (80)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:265 (grouped into LUT with out node result_2)
:9  %tmp_10 = and i1 %tmp_8, %tmp_9

ST_23: result_2 (81)  [1/1] 2.07ns  loc: accelerator_hls/components.cpp:265 (out node of the LUT)
:10  %result_2 = select i1 %tmp_10, float %result, float 0.000000e+00

ST_23: StgValue_109 (82)  [1/1] 3.25ns  loc: accelerator_hls/components.cpp:265
:11  store float %result_2, float* %output_addr, align 4

ST_23: StgValue_110 (83)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:259
:12  br label %.preheader4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:257) [7]  (1.59 ns)

 <State 2>: 3.88ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:257) [7]  (0 ns)
	'icmp' operation ('exitcond3', accelerator_hls/components.cpp:257) [8]  (3.88 ns)

 <State 3>: 3.1ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_hls/components.cpp:258) [24]  (0 ns)
	'icmp' operation ('exitcond2', accelerator_hls/components.cpp:258) [25]  (3.1 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_hls/components.cpp:259) [35]  (0 ns)
	'icmp' operation ('exitcond1', accelerator_hls/components.cpp:259) [36]  (3.1 ns)

 <State 5>: 7.91ns
The critical path consists of the following:
	'phi' operation ('ci') with incoming values : ('ci', accelerator_hls/components.cpp:261) [48]  (0 ns)
	'add' operation ('tmp_104', accelerator_hls/components.cpp:262) [57]  (2.32 ns)
	'add' operation ('tmp_105', accelerator_hls/components.cpp:262) [59]  (2.34 ns)
	'getelementptr' operation ('input_addr', accelerator_hls/components.cpp:262) [61]  (0 ns)
	'load' operation ('input_load', accelerator_hls/components.cpp:262) on array 'input_r' [66]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('weight_load', accelerator_hls/components.cpp:262) on array 'weight' [65]  (3.25 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_84', accelerator_hls/components.cpp:262) [67]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_84', accelerator_hls/components.cpp:262) [67]  (5.7 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_84', accelerator_hls/components.cpp:262) [67]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_84', accelerator_hls/components.cpp:262) [67]  (5.7 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:262) [68]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:262) [68]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:262) [68]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:262) [68]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', accelerator_hls/components.cpp:262) [68]  (7.26 ns)

 <State 16>: 3.25ns
The critical path consists of the following:
	'load' operation ('bias_load', accelerator_hls/components.cpp:264) on array 'bias' [71]  (3.25 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:264) [72]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:264) [72]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:264) [72]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:264) [72]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('result', accelerator_hls/components.cpp:264) [72]  (7.26 ns)

 <State 22>: 6.79ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', accelerator_hls/components.cpp:265) [79]  (6.79 ns)

 <State 23>: 8.53ns
The critical path consists of the following:
	'icmp' operation ('notrhs', accelerator_hls/components.cpp:264) [77]  (3.2 ns)
	'or' operation ('tmp_8', accelerator_hls/components.cpp:264) [78]  (0 ns)
	'and' operation ('tmp_10', accelerator_hls/components.cpp:265) [80]  (0 ns)
	'select' operation ('result', accelerator_hls/components.cpp:265) [81]  (2.07 ns)
	'store' operation (accelerator_hls/components.cpp:265) of variable 'result', accelerator_hls/components.cpp:265 on array 'output_r' [82]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
