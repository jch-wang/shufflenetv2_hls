

================================================================
== Vivado HLS Report for 'shuffle_24_l'
================================================================
* Date:           Tue Dec 11 23:30:28 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        accelerator_hls
* Solution:       naive
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.51|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  26209|  26209|  26209|  26209|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-------+-------+----------+-----------+-----------+------+----------+
        |                 |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  26208|  26208|       546|          -|          -|    48|    no    |
        | + Loop 1.1      |    544|    544|        34|          -|          -|    16|    no    |
        |  ++ Loop 1.1.1  |     32|     32|         2|          -|          -|    16|    no    |
        +-----------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	2  / (exitcond1)
4 --> 
	5  / (!exitcond)
	3  / (exitcond)
5 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_6 (3)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:133
:0  br label %.loopexit


 <State 2>: 3.88ns
ST_2: co (5)  [1/1] 0.00ns
.loopexit:0  %co = phi i6 [ 0, %0 ], [ %co_20, %.loopexit.loopexit ]

ST_2: tmp_101 (6)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.loopexit:1  %tmp_101 = trunc i6 %co to i1

ST_2: exitcond2 (7)  [1/1] 3.88ns  loc: accelerator_hls/components.cpp:133
.loopexit:2  %exitcond2 = icmp eq i6 %co, -16

ST_2: empty (8)  [1/1] 0.00ns
.loopexit:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)

ST_2: co_20 (9)  [1/1] 2.31ns  loc: accelerator_hls/components.cpp:133
.loopexit:4  %co_20 = add i6 1, %co

ST_2: StgValue_12 (10)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.loopexit:5  br i1 %exitcond2, label %3, label %.preheader3.preheader

ST_2: tmp (12)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.preheader3.preheader:0  %tmp = call i5 @_ssdm_op_PartSelect.i5.i6.i32.i32(i6 %co, i32 1, i32 5)

ST_2: tmp_s (13)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.preheader3.preheader:1  %tmp_s = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %tmp, i4 0)

ST_2: tmp_303_cast (14)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.preheader3.preheader:2  %tmp_303_cast = zext i9 %tmp_s to i10

ST_2: tmp_176 (15)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:133
.preheader3.preheader:3  %tmp_176 = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %co, i4 0)

ST_2: tmp_305_cast (16)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:134
.preheader3.preheader:4  %tmp_305_cast = zext i10 %tmp_176 to i11

ST_2: StgValue_18 (17)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:134
.preheader3.preheader:5  br label %.preheader3

ST_2: StgValue_19 (59)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:141
:0  ret void


 <State 3>: 3.31ns
ST_3: h (19)  [1/1] 0.00ns
.preheader3:0  %h = phi i5 [ 0, %.preheader3.preheader ], [ %h_20, %.preheader3.loopexit ]

ST_3: exitcond1 (20)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:134
.preheader3:1  %exitcond1 = icmp eq i5 %h, -16

ST_3: empty_76 (21)  [1/1] 0.00ns
.preheader3:2  %empty_76 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_3: h_20 (22)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:134
.preheader3:3  %h_20 = add i5 %h, 1

ST_3: StgValue_24 (23)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:134
.preheader3:4  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_3: tmp_cast2 (25)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
.preheader.preheader:0  %tmp_cast2 = zext i5 %h to i11

ST_3: tmp_cast (26)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
.preheader.preheader:1  %tmp_cast = zext i5 %h to i10

ST_3: tmp_177 (27)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:136
.preheader.preheader:2  %tmp_177 = add i10 %tmp_cast, %tmp_303_cast

ST_3: tmp_308_cast (28)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
.preheader.preheader:3  %tmp_308_cast = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %tmp_177, i4 0)

ST_3: tmp_178 (29)  [1/1] 2.32ns  loc: accelerator_hls/components.cpp:136
.preheader.preheader:4  %tmp_178 = add i11 %tmp_cast2, %tmp_305_cast

ST_3: tmp_311_cast (30)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:135
.preheader.preheader:5  %tmp_311_cast = call i15 @_ssdm_op_BitConcatenate.i15.i11.i4(i11 %tmp_178, i4 0)

ST_3: StgValue_31 (31)  [1/1] 1.59ns  loc: accelerator_hls/components.cpp:135
.preheader.preheader:6  br label %.preheader

ST_3: StgValue_32 (57)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 5.60ns
ST_4: w (33)  [1/1] 0.00ns
.preheader:0  %w = phi i5 [ %w_20, %._crit_edge ], [ 0, %.preheader.preheader ]

ST_4: exitcond (34)  [1/1] 3.31ns  loc: accelerator_hls/components.cpp:135
.preheader:1  %exitcond = icmp eq i5 %w, -16

ST_4: empty_77 (35)  [1/1] 0.00ns
.preheader:2  %empty_77 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_4: w_20 (36)  [1/1] 2.33ns  loc: accelerator_hls/components.cpp:135
.preheader:3  %w_20 = add i5 %w, 1

ST_4: StgValue_37 (37)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:135
.preheader:4  br i1 %exitcond, label %.preheader3.loopexit, label %1

ST_4: StgValue_38 (39)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:0  br i1 %tmp_101, label %._crit_edge, label %2

ST_4: tmp_104_cast1 (41)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:0  %tmp_104_cast1 = zext i5 %w to i15

ST_4: tmp_104_cast (42)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:1  %tmp_104_cast = zext i5 %w to i14

ST_4: tmp_179 (43)  [1/1] 2.34ns  loc: accelerator_hls/components.cpp:136
:2  %tmp_179 = add i14 %tmp_308_cast, %tmp_104_cast

ST_4: tmp_312_cast (44)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:3  %tmp_312_cast = zext i14 %tmp_179 to i64

ST_4: left_addr (45)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:4  %left_addr = getelementptr [6144 x float]* %left_r, i64 0, i64 %tmp_312_cast

ST_4: tmp_180 (46)  [1/1] 2.35ns  loc: accelerator_hls/components.cpp:136
:5  %tmp_180 = add i15 %tmp_311_cast, %tmp_104_cast1

ST_4: left_load (49)  [2/2] 3.25ns  loc: accelerator_hls/components.cpp:136
:8  %left_load = load float* %left_addr, align 4

ST_4: StgValue_46 (55)  [1/1] 0.00ns
.preheader3.loopexit:0  br label %.preheader3


 <State 5>: 6.51ns
ST_5: tmp_313_cast (47)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:6  %tmp_313_cast = zext i15 %tmp_180 to i64

ST_5: output_addr (48)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:7  %output_addr = getelementptr [12288 x float]* %output_r, i64 0, i64 %tmp_313_cast

ST_5: left_load (49)  [1/2] 3.25ns  loc: accelerator_hls/components.cpp:136
:8  %left_load = load float* %left_addr, align 4

ST_5: StgValue_50 (50)  [1/1] 3.25ns  loc: accelerator_hls/components.cpp:136
:9  store float %left_load, float* %output_addr, align 4

ST_5: StgValue_51 (51)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:136
:10  br label %._crit_edge

ST_5: StgValue_52 (53)  [1/1] 0.00ns  loc: accelerator_hls/components.cpp:135
._crit_edge:0  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:133) [5]  (1.59 ns)

 <State 2>: 3.88ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', accelerator_hls/components.cpp:133) [5]  (0 ns)
	'icmp' operation ('exitcond2', accelerator_hls/components.cpp:133) [7]  (3.88 ns)

 <State 3>: 3.31ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', accelerator_hls/components.cpp:134) [19]  (0 ns)
	'icmp' operation ('exitcond1', accelerator_hls/components.cpp:134) [20]  (3.31 ns)

 <State 4>: 5.6ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', accelerator_hls/components.cpp:135) [33]  (0 ns)
	'add' operation ('tmp_179', accelerator_hls/components.cpp:136) [43]  (2.34 ns)
	'getelementptr' operation ('left_addr', accelerator_hls/components.cpp:136) [45]  (0 ns)
	'load' operation ('left_load', accelerator_hls/components.cpp:136) on array 'left_r' [49]  (3.25 ns)

 <State 5>: 6.51ns
The critical path consists of the following:
	'load' operation ('left_load', accelerator_hls/components.cpp:136) on array 'left_r' [49]  (3.25 ns)
	'store' operation (accelerator_hls/components.cpp:136) of variable 'left_load', accelerator_hls/components.cpp:136 on array 'output_r' [50]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
