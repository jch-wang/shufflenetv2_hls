// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_1x1_8p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_1x1_8p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_1x1_8p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state1 = "1";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state2 = "10";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state3 = "100";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state4 = "1000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state5 = "10000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state6 = "100000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> subconv_1x1_8p::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_1x1_8p::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_3 = "11";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_4 = "100";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_9 = "1001";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_E = "1110";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_F = "1111";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_14 = "10100";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_15 = "10101";
const sc_lv<7> subconv_1x1_8p::ap_const_lv7_0 = "0000000";
const sc_lv<1> subconv_1x1_8p::ap_const_lv1_1 = "1";
const sc_lv<4> subconv_1x1_8p::ap_const_lv4_0 = "0000";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_16 = "10110";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_A = "1010";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_6 = "110";
const sc_lv<7> subconv_1x1_8p::ap_const_lv7_60 = "1100000";
const sc_lv<7> subconv_1x1_8p::ap_const_lv7_1 = "1";
const sc_lv<5> subconv_1x1_8p::ap_const_lv5_0 = "00000";
const sc_lv<3> subconv_1x1_8p::ap_const_lv3_0 = "000";
const sc_lv<4> subconv_1x1_8p::ap_const_lv4_8 = "1000";
const sc_lv<4> subconv_1x1_8p::ap_const_lv4_1 = "1";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_17 = "10111";
const sc_lv<32> subconv_1x1_8p::ap_const_lv32_1E = "11110";
const sc_lv<8> subconv_1x1_8p::ap_const_lv8_FF = "11111111";
const sc_lv<23> subconv_1x1_8p::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> subconv_1x1_8p::ap_const_lv5_2 = "10";
const bool subconv_1x1_8p::ap_const_boolean_1 = true;

subconv_1x1_8p::subconv_1x1_8p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U74 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U74");
    ShuffleNetV2_faddbkb_x_U74->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U74->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U74->din0(sum_reg_131);
    ShuffleNetV2_faddbkb_x_U74->din1(grp_fu_154_p1);
    ShuffleNetV2_faddbkb_x_U74->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U74->dout(grp_fu_154_p2);
    ShuffleNetV2_fmulcud_x_U75 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U75");
    ShuffleNetV2_fmulcud_x_U75->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U75->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U75->din0(weight_load_reg_468);
    ShuffleNetV2_fmulcud_x_U75->din1(shuffleunit1_7_outpu_1_reg_473);
    ShuffleNetV2_fmulcud_x_U75->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U75->dout(grp_fu_159_p2);
    ShuffleNetV2_fcmpdEe_x_U76 = new ShuffleNetV2_fcmpdEe<1,1,32,32,1>("ShuffleNetV2_fcmpdEe_x_U76");
    ShuffleNetV2_fcmpdEe_x_U76->din0(result_reg_493);
    ShuffleNetV2_fcmpdEe_x_U76->din1(ap_var_for_const1);
    ShuffleNetV2_fcmpdEe_x_U76->opcode(ap_var_for_const2);
    ShuffleNetV2_fcmpdEe_x_U76->dout(tmp_4_fu_163_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ShuffleConvs_2_Downs_address0);
    sensitive << ( ShuffleConvs_2_Downs_reg_445 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_d0);
    sensitive << ( result_reg_493 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_5_fu_378_p2 );

    SC_METHOD(thread_ShuffleConvs_2_Downs_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_168_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_168_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_409 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ci_1_fu_288_p2);
    sensitive << ( ci_reg_143 );

    SC_METHOD(thread_co_7_fu_174_p2);
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_exitcond1_fu_256_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_120 );

    SC_METHOD(thread_exitcond2_fu_227_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_109 );

    SC_METHOD(thread_exitcond3_fu_168_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_exitcond_fu_282_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_143 );

    SC_METHOD(thread_grp_fu_154_p1);
    sensitive << ( tmp_81_reg_478 );
    sensitive << ( bias_load_reg_488 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_h_7_fu_233_p2);
    sensitive << ( h_reg_109 );

    SC_METHOD(thread_notlhs_fu_360_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_1_fu_346_p4 );

    SC_METHOD(thread_notrhs_fu_366_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_88_fu_356_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_205_p1);
    sensitive << ( tmp_89_fu_197_p3 );

    SC_METHOD(thread_p_shl_cast_fu_193_p1);
    sensitive << ( tmp_s_fu_185_p3 );

    SC_METHOD(thread_result_to_int_fu_343_p1);
    sensitive << ( result_reg_493 );

    SC_METHOD(thread_shuffleunit1_7_outpu_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_137_cast_fu_338_p1 );

    SC_METHOD(thread_shuffleunit1_7_outpu_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_126_cast_fu_223_p1);
    sensitive << ( tmp_91_fu_215_p3 );

    SC_METHOD(thread_tmp_129_cast_fu_248_p3);
    sensitive << ( tmp_92_fu_243_p2 );

    SC_METHOD(thread_tmp_130_cast_fu_277_p1);
    sensitive << ( tmp_93_fu_272_p2 );

    SC_METHOD(thread_tmp_131_cast_fu_303_p1);
    sensitive << ( tmp_94_fu_298_p2 );

    SC_METHOD(thread_tmp_133_cast_fu_316_p1);
    sensitive << ( tmp_95_fu_308_p3 );

    SC_METHOD(thread_tmp_136_cast_fu_325_p3);
    sensitive << ( tmp_96_fu_320_p2 );

    SC_METHOD(thread_tmp_137_cast_fu_338_p1);
    sensitive << ( tmp_97_fu_333_p2 );

    SC_METHOD(thread_tmp_1_fu_346_p4);
    sensitive << ( result_to_int_fu_343_p1 );

    SC_METHOD(thread_tmp_3_fu_372_p2);
    sensitive << ( notrhs_fu_366_p2 );
    sensitive << ( notlhs_fu_360_p2 );

    SC_METHOD(thread_tmp_5_fu_378_p2);
    sensitive << ( tmp_4_reg_500 );
    sensitive << ( tmp_3_fu_372_p2 );

    SC_METHOD(thread_tmp_79_cast_fu_268_p1);
    sensitive << ( w_reg_120 );

    SC_METHOD(thread_tmp_80_cast_fu_294_p1);
    sensitive << ( ci_reg_143 );

    SC_METHOD(thread_tmp_88_fu_356_p1);
    sensitive << ( result_to_int_fu_343_p1 );

    SC_METHOD(thread_tmp_89_fu_197_p3);
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_tmp_90_fu_209_p2);
    sensitive << ( p_shl_cast_fu_193_p1 );
    sensitive << ( p_shl1_cast_fu_205_p1 );

    SC_METHOD(thread_tmp_91_fu_215_p3);
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_tmp_92_fu_243_p2);
    sensitive << ( tmp_126_cast_reg_404 );
    sensitive << ( tmp_cast_fu_239_p1 );

    SC_METHOD(thread_tmp_93_fu_272_p2);
    sensitive << ( tmp_129_cast_reg_427 );
    sensitive << ( tmp_79_cast_fu_268_p1 );

    SC_METHOD(thread_tmp_94_fu_298_p2);
    sensitive << ( tmp_90_reg_399 );
    sensitive << ( tmp_80_cast_fu_294_p1 );

    SC_METHOD(thread_tmp_95_fu_308_p3);
    sensitive << ( ci_reg_143 );

    SC_METHOD(thread_tmp_96_fu_320_p2);
    sensitive << ( tmp_cast_reg_422 );
    sensitive << ( tmp_133_cast_fu_316_p1 );

    SC_METHOD(thread_tmp_97_fu_333_p2);
    sensitive << ( tmp_79_cast_reg_440 );
    sensitive << ( tmp_136_cast_fu_325_p3 );

    SC_METHOD(thread_tmp_cast_fu_239_p1);
    sensitive << ( h_reg_109 );

    SC_METHOD(thread_tmp_fu_180_p1);
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_tmp_s_fu_185_p3);
    sensitive << ( co_reg_98 );

    SC_METHOD(thread_w_7_fu_262_p2);
    sensitive << ( w_reg_120 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_131_cast_fu_303_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_168_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_227_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_282_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_1x1_8p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_address0, "(port)shuffleunit1_7_outpu_address0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_ce0, "(port)shuffleunit1_7_outpu_ce0");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_q0, "(port)shuffleunit1_7_outpu_q0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_address0, "(port)ShuffleConvs_2_Downs_address0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_ce0, "(port)ShuffleConvs_2_Downs_ce0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_we0, "(port)ShuffleConvs_2_Downs_we0");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_d0, "(port)ShuffleConvs_2_Downs_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_7_fu_174_p2, "co_7_fu_174_p2");
    sc_trace(mVcdFile, co_7_reg_394, "co_7_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_90_fu_209_p2, "tmp_90_fu_209_p2");
    sc_trace(mVcdFile, tmp_90_reg_399, "tmp_90_reg_399");
    sc_trace(mVcdFile, exitcond3_fu_168_p2, "exitcond3_fu_168_p2");
    sc_trace(mVcdFile, tmp_126_cast_fu_223_p1, "tmp_126_cast_fu_223_p1");
    sc_trace(mVcdFile, tmp_126_cast_reg_404, "tmp_126_cast_reg_404");
    sc_trace(mVcdFile, bias_addr_reg_409, "bias_addr_reg_409");
    sc_trace(mVcdFile, h_7_fu_233_p2, "h_7_fu_233_p2");
    sc_trace(mVcdFile, h_7_reg_417, "h_7_reg_417");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast_fu_239_p1, "tmp_cast_fu_239_p1");
    sc_trace(mVcdFile, tmp_cast_reg_422, "tmp_cast_reg_422");
    sc_trace(mVcdFile, exitcond2_fu_227_p2, "exitcond2_fu_227_p2");
    sc_trace(mVcdFile, tmp_129_cast_fu_248_p3, "tmp_129_cast_fu_248_p3");
    sc_trace(mVcdFile, tmp_129_cast_reg_427, "tmp_129_cast_reg_427");
    sc_trace(mVcdFile, w_7_fu_262_p2, "w_7_fu_262_p2");
    sc_trace(mVcdFile, w_7_reg_435, "w_7_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_79_cast_fu_268_p1, "tmp_79_cast_fu_268_p1");
    sc_trace(mVcdFile, tmp_79_cast_reg_440, "tmp_79_cast_reg_440");
    sc_trace(mVcdFile, exitcond1_fu_256_p2, "exitcond1_fu_256_p2");
    sc_trace(mVcdFile, ShuffleConvs_2_Downs_reg_445, "ShuffleConvs_2_Downs_reg_445");
    sc_trace(mVcdFile, ci_1_fu_288_p2, "ci_1_fu_288_p2");
    sc_trace(mVcdFile, ci_1_reg_453, "ci_1_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_282_p2, "exitcond_fu_282_p2");
    sc_trace(mVcdFile, weight_load_reg_468, "weight_load_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, shuffleunit1_7_outpu_1_reg_473, "shuffleunit1_7_outpu_1_reg_473");
    sc_trace(mVcdFile, grp_fu_159_p2, "grp_fu_159_p2");
    sc_trace(mVcdFile, tmp_81_reg_478, "tmp_81_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_154_p2, "grp_fu_154_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, bias_load_reg_488, "bias_load_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, result_reg_493, "result_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_4_fu_163_p2, "tmp_4_fu_163_p2");
    sc_trace(mVcdFile, tmp_4_reg_500, "tmp_4_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_98, "co_reg_98");
    sc_trace(mVcdFile, h_reg_109, "h_reg_109");
    sc_trace(mVcdFile, w_reg_120, "w_reg_120");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_reg_131, "sum_reg_131");
    sc_trace(mVcdFile, ci_reg_143, "ci_reg_143");
    sc_trace(mVcdFile, tmp_fu_180_p1, "tmp_fu_180_p1");
    sc_trace(mVcdFile, tmp_130_cast_fu_277_p1, "tmp_130_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_131_cast_fu_303_p1, "tmp_131_cast_fu_303_p1");
    sc_trace(mVcdFile, tmp_137_cast_fu_338_p1, "tmp_137_cast_fu_338_p1");
    sc_trace(mVcdFile, grp_fu_154_p1, "grp_fu_154_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_s_fu_185_p3, "tmp_s_fu_185_p3");
    sc_trace(mVcdFile, tmp_89_fu_197_p3, "tmp_89_fu_197_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_193_p1, "p_shl_cast_fu_193_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_205_p1, "p_shl1_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp_91_fu_215_p3, "tmp_91_fu_215_p3");
    sc_trace(mVcdFile, tmp_92_fu_243_p2, "tmp_92_fu_243_p2");
    sc_trace(mVcdFile, tmp_93_fu_272_p2, "tmp_93_fu_272_p2");
    sc_trace(mVcdFile, tmp_80_cast_fu_294_p1, "tmp_80_cast_fu_294_p1");
    sc_trace(mVcdFile, tmp_94_fu_298_p2, "tmp_94_fu_298_p2");
    sc_trace(mVcdFile, tmp_95_fu_308_p3, "tmp_95_fu_308_p3");
    sc_trace(mVcdFile, tmp_133_cast_fu_316_p1, "tmp_133_cast_fu_316_p1");
    sc_trace(mVcdFile, tmp_96_fu_320_p2, "tmp_96_fu_320_p2");
    sc_trace(mVcdFile, tmp_136_cast_fu_325_p3, "tmp_136_cast_fu_325_p3");
    sc_trace(mVcdFile, tmp_97_fu_333_p2, "tmp_97_fu_333_p2");
    sc_trace(mVcdFile, result_to_int_fu_343_p1, "result_to_int_fu_343_p1");
    sc_trace(mVcdFile, tmp_1_fu_346_p4, "tmp_1_fu_346_p4");
    sc_trace(mVcdFile, tmp_88_fu_356_p1, "tmp_88_fu_356_p1");
    sc_trace(mVcdFile, notrhs_fu_366_p2, "notrhs_fu_366_p2");
    sc_trace(mVcdFile, notlhs_fu_360_p2, "notlhs_fu_360_p2");
    sc_trace(mVcdFile, tmp_3_fu_372_p2, "tmp_3_fu_372_p2");
    sc_trace(mVcdFile, tmp_5_fu_378_p2, "tmp_5_fu_378_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_1x1_8p::~subconv_1x1_8p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U74;
    delete ShuffleNetV2_fmulcud_x_U75;
    delete ShuffleNetV2_fcmpdEe_x_U76;
}

void subconv_1x1_8p::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_1x1_8p::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void subconv_1x1_8p::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void subconv_1x1_8p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_256_p2.read()))) {
        ci_reg_143 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ci_reg_143 = ci_1_reg_453.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_227_p2.read(), ap_const_lv1_1))) {
        co_reg_98 = co_7_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_98 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_256_p2.read(), ap_const_lv1_1))) {
        h_reg_109 = h_7_reg_417.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_168_p2.read(), ap_const_lv1_0))) {
        h_reg_109 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_256_p2.read()))) {
        sum_reg_131 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sum_reg_131 = grp_fu_154_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_227_p2.read()))) {
        w_reg_120 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        w_reg_120 = w_7_reg_435.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_256_p2.read()))) {
        ShuffleConvs_2_Downs_reg_445 =  (sc_lv<13>) (tmp_130_cast_fu_277_p1.read());
        tmp_79_cast_reg_440 = tmp_79_cast_fu_268_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_168_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_409 =  (sc_lv<7>) (tmp_fu_180_p1.read());
        tmp_126_cast_reg_404 = tmp_126_cast_fu_223_p1.read();
        tmp_90_reg_399 = tmp_90_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        bias_load_reg_488 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_1_reg_453 = ci_1_fu_288_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_7_reg_394 = co_7_fu_174_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_7_reg_417 = h_7_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        result_reg_493 = grp_fu_154_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shuffleunit1_7_outpu_1_reg_473 = shuffleunit1_7_outpu_q0.read();
        weight_load_reg_468 = weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_227_p2.read()))) {
        tmp_129_cast_reg_427 = tmp_129_cast_fu_248_p3.read();
        tmp_cast_reg_422 = tmp_cast_fu_239_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_4_reg_500 = tmp_4_fu_163_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_81_reg_478 = grp_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_7_reg_435 = w_7_fu_262_p2.read();
    }
}

void subconv_1x1_8p::thread_ShuffleConvs_2_Downs_address0() {
    ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_reg_445.read();
}

void subconv_1x1_8p::thread_ShuffleConvs_2_Downs_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ShuffleConvs_2_Downs_ce0 = ap_const_logic_1;
    } else {
        ShuffleConvs_2_Downs_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ShuffleConvs_2_Downs_d0() {
    ShuffleConvs_2_Downs_d0 = (!tmp_5_fu_378_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_5_fu_378_p2.read()[0].to_bool())? result_reg_493.read(): ap_const_lv32_0);
}

void subconv_1x1_8p::thread_ShuffleConvs_2_Downs_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ShuffleConvs_2_Downs_we0 = ap_const_logic_1;
    } else {
        ShuffleConvs_2_Downs_we0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_1x1_8p::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_1x1_8p::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_168_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_168_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_bias_address0() {
    bias_address0 = bias_addr_reg_409.read();
}

void subconv_1x1_8p::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ci_1_fu_288_p2() {
    ci_1_fu_288_p2 = (!ci_reg_143.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ci_reg_143.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void subconv_1x1_8p::thread_co_7_fu_174_p2() {
    co_7_fu_174_p2 = (!co_reg_98.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_reg_98.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void subconv_1x1_8p::thread_exitcond1_fu_256_p2() {
    exitcond1_fu_256_p2 = (!w_reg_120.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_120.read() == ap_const_lv4_8);
}

void subconv_1x1_8p::thread_exitcond2_fu_227_p2() {
    exitcond2_fu_227_p2 = (!h_reg_109.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_109.read() == ap_const_lv4_8);
}

void subconv_1x1_8p::thread_exitcond3_fu_168_p2() {
    exitcond3_fu_168_p2 = (!co_reg_98.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_98.read() == ap_const_lv7_60);
}

void subconv_1x1_8p::thread_exitcond_fu_282_p2() {
    exitcond_fu_282_p2 = (!ci_reg_143.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_143.read() == ap_const_lv7_60);
}

void subconv_1x1_8p::thread_grp_fu_154_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_154_p1 = bias_load_reg_488.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_154_p1 = tmp_81_reg_478.read();
    } else {
        grp_fu_154_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_1x1_8p::thread_h_7_fu_233_p2() {
    h_7_fu_233_p2 = (!h_reg_109.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(h_reg_109.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void subconv_1x1_8p::thread_notlhs_fu_360_p2() {
    notlhs_fu_360_p2 = (!tmp_1_fu_346_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_346_p4.read() != ap_const_lv8_FF);
}

void subconv_1x1_8p::thread_notrhs_fu_366_p2() {
    notrhs_fu_366_p2 = (!tmp_88_fu_356_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_88_fu_356_p1.read() == ap_const_lv23_0);
}

void subconv_1x1_8p::thread_p_shl1_cast_fu_205_p1() {
    p_shl1_cast_fu_205_p1 = esl_zext<15,12>(tmp_89_fu_197_p3.read());
}

void subconv_1x1_8p::thread_p_shl_cast_fu_193_p1() {
    p_shl_cast_fu_193_p1 = esl_zext<15,14>(tmp_s_fu_185_p3.read());
}

void subconv_1x1_8p::thread_result_to_int_fu_343_p1() {
    result_to_int_fu_343_p1 = result_reg_493.read();
}

void subconv_1x1_8p::thread_shuffleunit1_7_outpu_address0() {
    shuffleunit1_7_outpu_address0 =  (sc_lv<13>) (tmp_137_cast_fu_338_p1.read());
}

void subconv_1x1_8p::thread_shuffleunit1_7_outpu_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shuffleunit1_7_outpu_ce0 = ap_const_logic_1;
    } else {
        shuffleunit1_7_outpu_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_tmp_126_cast_fu_223_p1() {
    tmp_126_cast_fu_223_p1 = esl_zext<11,10>(tmp_91_fu_215_p3.read());
}

void subconv_1x1_8p::thread_tmp_129_cast_fu_248_p3() {
    tmp_129_cast_fu_248_p3 = esl_concat<11,3>(tmp_92_fu_243_p2.read(), ap_const_lv3_0);
}

void subconv_1x1_8p::thread_tmp_130_cast_fu_277_p1() {
    tmp_130_cast_fu_277_p1 = esl_zext<64,14>(tmp_93_fu_272_p2.read());
}

void subconv_1x1_8p::thread_tmp_131_cast_fu_303_p1() {
    tmp_131_cast_fu_303_p1 = esl_sext<64,15>(tmp_94_fu_298_p2.read());
}

void subconv_1x1_8p::thread_tmp_133_cast_fu_316_p1() {
    tmp_133_cast_fu_316_p1 = esl_zext<11,10>(tmp_95_fu_308_p3.read());
}

void subconv_1x1_8p::thread_tmp_136_cast_fu_325_p3() {
    tmp_136_cast_fu_325_p3 = esl_concat<11,3>(tmp_96_fu_320_p2.read(), ap_const_lv3_0);
}

void subconv_1x1_8p::thread_tmp_137_cast_fu_338_p1() {
    tmp_137_cast_fu_338_p1 = esl_zext<64,14>(tmp_97_fu_333_p2.read());
}

void subconv_1x1_8p::thread_tmp_1_fu_346_p4() {
    tmp_1_fu_346_p4 = result_to_int_fu_343_p1.read().range(30, 23);
}

void subconv_1x1_8p::thread_tmp_3_fu_372_p2() {
    tmp_3_fu_372_p2 = (notrhs_fu_366_p2.read() | notlhs_fu_360_p2.read());
}

void subconv_1x1_8p::thread_tmp_5_fu_378_p2() {
    tmp_5_fu_378_p2 = (tmp_3_fu_372_p2.read() & tmp_4_reg_500.read());
}

void subconv_1x1_8p::thread_tmp_79_cast_fu_268_p1() {
    tmp_79_cast_fu_268_p1 = esl_zext<14,4>(w_reg_120.read());
}

void subconv_1x1_8p::thread_tmp_80_cast_fu_294_p1() {
    tmp_80_cast_fu_294_p1 = esl_zext<15,7>(ci_reg_143.read());
}

void subconv_1x1_8p::thread_tmp_88_fu_356_p1() {
    tmp_88_fu_356_p1 = result_to_int_fu_343_p1.read().range(23-1, 0);
}

void subconv_1x1_8p::thread_tmp_89_fu_197_p3() {
    tmp_89_fu_197_p3 = esl_concat<7,5>(co_reg_98.read(), ap_const_lv5_0);
}

void subconv_1x1_8p::thread_tmp_90_fu_209_p2() {
    tmp_90_fu_209_p2 = (!p_shl_cast_fu_193_p1.read().is_01() || !p_shl1_cast_fu_205_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl_cast_fu_193_p1.read()) - sc_biguint<15>(p_shl1_cast_fu_205_p1.read()));
}

void subconv_1x1_8p::thread_tmp_91_fu_215_p3() {
    tmp_91_fu_215_p3 = esl_concat<7,3>(co_reg_98.read(), ap_const_lv3_0);
}

void subconv_1x1_8p::thread_tmp_92_fu_243_p2() {
    tmp_92_fu_243_p2 = (!tmp_cast_fu_239_p1.read().is_01() || !tmp_126_cast_reg_404.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast_fu_239_p1.read()) + sc_biguint<11>(tmp_126_cast_reg_404.read()));
}

void subconv_1x1_8p::thread_tmp_93_fu_272_p2() {
    tmp_93_fu_272_p2 = (!tmp_129_cast_reg_427.read().is_01() || !tmp_79_cast_fu_268_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_129_cast_reg_427.read()) + sc_biguint<14>(tmp_79_cast_fu_268_p1.read()));
}

void subconv_1x1_8p::thread_tmp_94_fu_298_p2() {
    tmp_94_fu_298_p2 = (!tmp_80_cast_fu_294_p1.read().is_01() || !tmp_90_reg_399.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_80_cast_fu_294_p1.read()) + sc_biguint<15>(tmp_90_reg_399.read()));
}

void subconv_1x1_8p::thread_tmp_95_fu_308_p3() {
    tmp_95_fu_308_p3 = esl_concat<7,3>(ci_reg_143.read(), ap_const_lv3_0);
}

void subconv_1x1_8p::thread_tmp_96_fu_320_p2() {
    tmp_96_fu_320_p2 = (!tmp_cast_reg_422.read().is_01() || !tmp_133_cast_fu_316_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast_reg_422.read()) + sc_biguint<11>(tmp_133_cast_fu_316_p1.read()));
}

void subconv_1x1_8p::thread_tmp_97_fu_333_p2() {
    tmp_97_fu_333_p2 = (!tmp_79_cast_reg_440.read().is_01() || !tmp_136_cast_fu_325_p3.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_79_cast_reg_440.read()) + sc_biguint<14>(tmp_136_cast_fu_325_p3.read()));
}

void subconv_1x1_8p::thread_tmp_cast_fu_239_p1() {
    tmp_cast_fu_239_p1 = esl_zext<11,4>(h_reg_109.read());
}

void subconv_1x1_8p::thread_tmp_fu_180_p1() {
    tmp_fu_180_p1 = esl_zext<64,7>(co_reg_98.read());
}

void subconv_1x1_8p::thread_tmp_s_fu_185_p3() {
    tmp_s_fu_185_p3 = esl_concat<7,7>(co_reg_98.read(), ap_const_lv7_0);
}

void subconv_1x1_8p::thread_w_7_fu_262_p2() {
    w_7_fu_262_p2 = (!w_reg_120.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(w_reg_120.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void subconv_1x1_8p::thread_weight_address0() {
    weight_address0 =  (sc_lv<14>) (tmp_131_cast_fu_303_p1.read());
}

void subconv_1x1_8p::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_1x1_8p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_256_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_282_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

