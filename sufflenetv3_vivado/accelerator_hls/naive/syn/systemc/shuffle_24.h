// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_24_HH_
#define _shuffle_24_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct shuffle_24 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > left_r_address0;
    sc_out< sc_logic > left_r_ce0;
    sc_in< sc_lv<32> > left_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_out< sc_lv<13> > buffer1_1_24_16x16_address0;
    sc_out< sc_logic > buffer1_1_24_16x16_ce0;
    sc_in< sc_lv<32> > buffer1_1_24_16x16_q0;


    // Module declarations
    shuffle_24(sc_module_name name);
    SC_HAS_PROCESS(shuffle_24);

    ~shuffle_24();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_102_fu_122_p1;
    sc_signal< sc_lv<1> > tmp_102_reg_259;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > co_21_fu_132_p2;
    sc_signal< sc_lv<6> > co_21_reg_266;
    sc_signal< sc_lv<10> > tmp_315_cast_fu_156_p1;
    sc_signal< sc_lv<10> > tmp_315_cast_reg_271;
    sc_signal< sc_lv<1> > exitcond2_fu_126_p2;
    sc_signal< sc_lv<11> > tmp_317_cast_fu_168_p1;
    sc_signal< sc_lv<11> > tmp_317_cast_reg_276;
    sc_signal< sc_lv<5> > h_21_fu_178_p2;
    sc_signal< sc_lv<5> > h_21_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp_320_cast_fu_197_p3;
    sc_signal< sc_lv<14> > tmp_320_cast_reg_289;
    sc_signal< sc_lv<1> > exitcond1_fu_172_p2;
    sc_signal< sc_lv<15> > tmp_323_cast_fu_210_p3;
    sc_signal< sc_lv<15> > tmp_323_cast_reg_294;
    sc_signal< sc_lv<5> > w_21_fu_224_p2;
    sc_signal< sc_lv<5> > w_21_reg_302;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_fu_218_p2;
    sc_signal< sc_lv<14> > output_addr_reg_312;
    sc_signal< sc_lv<6> > co_reg_77;
    sc_signal< sc_lv<5> > h_reg_88;
    sc_signal< sc_lv<5> > w_reg_99;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > storemerge_phi_fu_113_p4;
    sc_signal< sc_lv<64> > tmp_324_cast_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_325_cast_fu_254_p1;
    sc_signal< sc_lv<5> > tmp_fu_138_p4;
    sc_signal< sc_lv<9> > tmp_s_fu_148_p3;
    sc_signal< sc_lv<10> > tmp_181_fu_160_p3;
    sc_signal< sc_lv<10> > tmp_cast_fu_188_p1;
    sc_signal< sc_lv<10> > tmp_182_fu_192_p2;
    sc_signal< sc_lv<11> > tmp_cast2_fu_184_p1;
    sc_signal< sc_lv<11> > tmp_183_fu_205_p2;
    sc_signal< sc_lv<14> > tmp_105_cast_fu_234_p1;
    sc_signal< sc_lv<14> > tmp_184_fu_238_p2;
    sc_signal< sc_lv<15> > tmp_105_cast1_fu_230_p1;
    sc_signal< sc_lv<15> > tmp_185_fu_249_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer1_1_24_16x16_address0();
    void thread_buffer1_1_24_16x16_ce0();
    void thread_co_21_fu_132_p2();
    void thread_exitcond1_fu_172_p2();
    void thread_exitcond2_fu_126_p2();
    void thread_exitcond_fu_218_p2();
    void thread_h_21_fu_178_p2();
    void thread_left_r_address0();
    void thread_left_r_ce0();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_storemerge_phi_fu_113_p4();
    void thread_tmp_102_fu_122_p1();
    void thread_tmp_105_cast1_fu_230_p1();
    void thread_tmp_105_cast_fu_234_p1();
    void thread_tmp_181_fu_160_p3();
    void thread_tmp_182_fu_192_p2();
    void thread_tmp_183_fu_205_p2();
    void thread_tmp_184_fu_238_p2();
    void thread_tmp_185_fu_249_p2();
    void thread_tmp_315_cast_fu_156_p1();
    void thread_tmp_317_cast_fu_168_p1();
    void thread_tmp_320_cast_fu_197_p3();
    void thread_tmp_323_cast_fu_210_p3();
    void thread_tmp_324_cast_fu_243_p1();
    void thread_tmp_325_cast_fu_254_p1();
    void thread_tmp_cast2_fu_184_p1();
    void thread_tmp_cast_fu_188_p1();
    void thread_tmp_fu_138_p4();
    void thread_tmp_s_fu_148_p3();
    void thread_w_21_fu_224_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
