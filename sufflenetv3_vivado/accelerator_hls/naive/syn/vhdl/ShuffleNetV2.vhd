-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ShuffleNetV2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    image_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    image_r_ce0 : OUT STD_LOGIC;
    image_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv1_weight_ce0 : OUT STD_LOGIC;
    conv1_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    shuffle_conv_3x3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    shuffle_conv_3x3_ce0 : OUT STD_LOGIC;
    shuffle_conv_3x3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    shuffle_conv_3x3_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    shuffle_conv_3x3_ce1 : OUT STD_LOGIC;
    shuffle_conv_3x3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    shuffle_conv_1x1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    shuffle_conv_1x1_ce0 : OUT STD_LOGIC;
    shuffle_conv_1x1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    shuffle_conv_1x1_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    shuffle_conv_1x1_ce1 : OUT STD_LOGIC;
    shuffle_conv_1x1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_last_weight_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    conv_last_weight_ce0 : OUT STD_LOGIC;
    conv_last_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fc_weight_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    fc_weight_ce0 : OUT STD_LOGIC;
    fc_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    bias_ce0 : OUT STD_LOGIC;
    bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    bias_ce1 : OUT STD_LOGIC;
    bias_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fc_output_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    fc_output_ce0 : OUT STD_LOGIC;
    fc_output_we0 : OUT STD_LOGIC;
    fc_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ShuffleNetV2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ShuffleNetV2,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.537750,HLS_SYN_LAT=110591624,HLS_SYN_TPT=none,HLS_SYN_MEM=1276,HLS_SYN_DSP=95,HLS_SYN_FF=36393,HLS_SYN_LUT=43353}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (143 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (143 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (143 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (143 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (143 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (143 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (143 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (143 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (143 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (143 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (143 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (143 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv8_A8 : STD_LOGIC_VECTOR (7 downto 0) := "10101000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_D8 : STD_LOGIC_VECTOR (8 downto 0) := "011011000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_138 : STD_LOGIC_VECTOR (8 downto 0) := "100111000";
    constant ap_const_lv9_198 : STD_LOGIC_VECTOR (8 downto 0) := "110011000";
    constant ap_const_lv10_1F8 : STD_LOGIC_VECTOR (9 downto 0) := "0111111000";
    constant ap_const_lv9_178 : STD_LOGIC_VECTOR (8 downto 0) := "101111000";
    constant ap_const_lv10_258 : STD_LOGIC_VECTOR (9 downto 0) := "1001011000";
    constant ap_const_lv10_2B8 : STD_LOGIC_VECTOR (9 downto 0) := "1010111000";
    constant ap_const_lv10_318 : STD_LOGIC_VECTOR (9 downto 0) := "1100011000";
    constant ap_const_lv11_3D8 : STD_LOGIC_VECTOR (10 downto 0) := "01111011000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_498 : STD_LOGIC_VECTOR (10 downto 0) := "10010011000";
    constant ap_const_lv11_4F8 : STD_LOGIC_VECTOR (10 downto 0) := "10011111000";
    constant ap_const_lv11_558 : STD_LOGIC_VECTOR (10 downto 0) := "10101011000";
    constant ap_const_lv11_5B8 : STD_LOGIC_VECTOR (10 downto 0) := "10110111000";
    constant ap_const_lv11_618 : STD_LOGIC_VECTOR (10 downto 0) := "11000011000";
    constant ap_const_lv10_278 : STD_LOGIC_VECTOR (9 downto 0) := "1001111000";
    constant ap_const_lv10_2D8 : STD_LOGIC_VECTOR (9 downto 0) := "1011011000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv12_7F8 : STD_LOGIC_VECTOR (11 downto 0) := "011111111000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_978 : STD_LOGIC_VECTOR (11 downto 0) := "100101111000";
    constant ap_const_lv12_AF8 : STD_LOGIC_VECTOR (11 downto 0) := "101011111000";
    constant ap_const_lv12_C78 : STD_LOGIC_VECTOR (11 downto 0) := "110001111000";
    constant ap_const_lv11_5F8 : STD_LOGIC_VECTOR (10 downto 0) := "10111111000";
    constant ap_const_lv13_F78 : STD_LOGIC_VECTOR (12 downto 0) := "0111101111000";
    constant ap_const_lv13_10F8 : STD_LOGIC_VECTOR (12 downto 0) := "1000011111000";
    constant ap_const_lv13_1278 : STD_LOGIC_VECTOR (12 downto 0) := "1001001111000";
    constant ap_const_lv13_13F8 : STD_LOGIC_VECTOR (12 downto 0) := "1001111111000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv9_108 : STD_LOGIC_VECTOR (8 downto 0) := "100001000";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv8_98 : STD_LOGIC_VECTOR (7 downto 0) := "10011000";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv10_228 : STD_LOGIC_VECTOR (9 downto 0) := "1000101000";
    constant ap_const_lv15_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv9_150 : STD_LOGIC_VECTOR (8 downto 0) := "101010000";
    constant ap_const_lv10_288 : STD_LOGIC_VECTOR (9 downto 0) := "1010001000";
    constant ap_const_lv10_2E8 : STD_LOGIC_VECTOR (9 downto 0) := "1011101000";
    constant ap_const_lv9_118 : STD_LOGIC_VECTOR (8 downto 0) := "100011000";
    constant ap_const_lv9_148 : STD_LOGIC_VECTOR (8 downto 0) := "101001000";
    constant ap_const_lv11_408 : STD_LOGIC_VECTOR (10 downto 0) := "10000001000";
    constant ap_const_lv11_468 : STD_LOGIC_VECTOR (10 downto 0) := "10001101000";
    constant ap_const_lv11_4C8 : STD_LOGIC_VECTOR (10 downto 0) := "10011001000";
    constant ap_const_lv11_528 : STD_LOGIC_VECTOR (10 downto 0) := "10100101000";
    constant ap_const_lv11_588 : STD_LOGIC_VECTOR (10 downto 0) := "10110001000";
    constant ap_const_lv11_5E8 : STD_LOGIC_VECTOR (10 downto 0) := "10111101000";
    constant ap_const_lv10_218 : STD_LOGIC_VECTOR (9 downto 0) := "1000011000";
    constant ap_const_lv10_248 : STD_LOGIC_VECTOR (9 downto 0) := "1001001000";
    constant ap_const_lv10_2A8 : STD_LOGIC_VECTOR (9 downto 0) := "1010101000";
    constant ap_const_lv12_858 : STD_LOGIC_VECTOR (11 downto 0) := "100001011000";
    constant ap_const_lv12_8B8 : STD_LOGIC_VECTOR (11 downto 0) := "100010111000";
    constant ap_const_lv12_918 : STD_LOGIC_VECTOR (11 downto 0) := "100100011000";
    constant ap_const_lv12_9D8 : STD_LOGIC_VECTOR (11 downto 0) := "100111011000";
    constant ap_const_lv12_A38 : STD_LOGIC_VECTOR (11 downto 0) := "101000111000";
    constant ap_const_lv12_A98 : STD_LOGIC_VECTOR (11 downto 0) := "101010011000";
    constant ap_const_lv12_B58 : STD_LOGIC_VECTOR (11 downto 0) := "101101011000";
    constant ap_const_lv12_BB8 : STD_LOGIC_VECTOR (11 downto 0) := "101110111000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_418 : STD_LOGIC_VECTOR (10 downto 0) := "10000011000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ShuffleConvs_0_Downs_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Downs_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_7_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Downs_10_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_10_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Downs_8_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_8_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_5_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_7_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_8_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_8_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_11_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_11_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_13_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_13_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_0_Shuff_18_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_18_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Downs_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_7_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_10_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Downs_10_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_10_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_8_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Downs_8_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_8_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_1_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_5_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_7_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_11_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_11_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_11_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_13_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_13_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_13_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_19_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_19_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_19_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_21_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_21_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_21_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_25_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_25_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_25_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_27_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_27_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_27_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_31_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_31_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_31_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_33_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_33_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_33_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_33_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_37_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_37_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_37_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_37_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_41_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_41_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_41_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_41_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_45_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_45_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_45_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_45_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_47_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_47_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_47_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_47_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_50_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_1_Shuff_50_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_50_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_50_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_7_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Downs_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_7_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_10_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Downs_10_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_10_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_8_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Downs_8_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_8_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_5_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_5_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_7_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_7_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_7_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_8_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_8_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_8_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_11_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_11_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_11_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_13_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_13_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_13_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_18_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ShuffleConvs_2_Shuff_18_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_18_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ShuffleConvs_0_Downs_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_9_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ShuffleConvs_0_Downs_6_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_6_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ShuffleConvs_0_Shuff_6_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_6_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ShuffleConvs_0_Shuff_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_9_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ShuffleConvs_0_Shuff_15_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_15_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_9_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Downs_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_9_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_6_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Downs_6_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_6_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_3_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_9_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_9_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_15_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_15_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_15_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_23_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_23_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_23_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_29_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_29_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_29_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_35_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_35_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_35_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_35_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_43_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_43_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_43_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_43_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_49_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ShuffleConvs_1_Shuff_49_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_49_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_49_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_2_Downs_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_9_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_2_Downs_6_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_6_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_2_Shuff_6_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_6_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_2_Shuff_9_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_9_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ShuffleConvs_2_Shuff_15_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_15_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv1_bias_ce0 : STD_LOGIC;
    signal conv1_bias_we0 : STD_LOGIC;
    signal conv1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Downs_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_3_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Downs_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_5_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Downs_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Downs_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_1_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Downs_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Downs_4_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_4_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Downs_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_19_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_19_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_20_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_20_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_21_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_21_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_22_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_22_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_1_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_3_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_4_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_4_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_17_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_17_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_0_Shuff_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_0_Shuff_ce0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_we0 : STD_LOGIC;
    signal ShuffleConvs_0_Shuff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_3_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_5_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_1_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Downs_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_4_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_4_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Downs_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_51_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_51_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_51_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_51_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_52_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_52_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_52_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_52_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_53_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_53_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_53_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_53_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_54_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_54_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_54_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_54_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_56_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_56_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_56_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_56_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_57_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_57_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_57_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_57_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_58_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_58_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_58_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_58_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_59_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_59_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_59_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_59_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_60_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_60_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_60_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_60_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_61_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_61_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_61_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_61_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_62_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_62_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_62_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_62_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_63_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_63_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_63_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_63_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_64_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_64_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_64_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_64_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_65_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_65_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_65_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_65_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_67_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_67_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_67_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_67_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_68_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_68_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_68_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_68_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_69_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_69_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_69_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_69_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_70_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_70_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_70_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_70_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_71_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_71_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_71_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_71_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_17_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_17_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_39_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_39_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_39_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_39_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_55_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_55_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_55_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_55_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_66_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_66_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_66_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_66_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_1_Shuff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Shuff_ce0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_we0 : STD_LOGIC;
    signal ShuffleConvs_1_Shuff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Downs_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_3_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Downs_5_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_5_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Downs_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Downs_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_1_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Downs_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Downs_4_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_4_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Downs_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_19_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_19_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_19_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_20_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_20_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_20_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_21_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_21_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_21_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_22_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_22_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_22_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_1_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_1_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_3_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_3_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_4_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_4_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_17_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_17_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_17_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ShuffleConvs_2_Shuff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ShuffleConvs_2_Shuff_ce0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_we0 : STD_LOGIC;
    signal ShuffleConvs_2_Shuff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_last_bias_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_last_bias_ce0 : STD_LOGIC;
    signal conv_last_bias_we0 : STD_LOGIC;
    signal conv_last_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fc_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc_bias_ce0 : STD_LOGIC;
    signal fc_bias_we0 : STD_LOGIC;
    signal fc_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_output_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal conv1_output_ce0 : STD_LOGIC;
    signal conv1_output_we0 : STD_LOGIC;
    signal conv1_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit0_outp_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal downsampleunit0_outp_ce0 : STD_LOGIC;
    signal downsampleunit0_outp_we0 : STD_LOGIC;
    signal downsampleunit0_outp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit0_outp_ce1 : STD_LOGIC;
    signal downsampleunit0_outp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit0_0_outpu_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shuffleunit0_0_outpu_ce0 : STD_LOGIC;
    signal shuffleunit0_0_outpu_we0 : STD_LOGIC;
    signal shuffleunit0_0_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit0_0_outpu_ce1 : STD_LOGIC;
    signal shuffleunit0_0_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit0_1_outpu_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shuffleunit0_1_outpu_ce0 : STD_LOGIC;
    signal shuffleunit0_1_outpu_we0 : STD_LOGIC;
    signal shuffleunit0_1_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit0_1_outpu_ce1 : STD_LOGIC;
    signal shuffleunit0_1_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit0_2_outpu_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shuffleunit0_2_outpu_ce0 : STD_LOGIC;
    signal shuffleunit0_2_outpu_we0 : STD_LOGIC;
    signal shuffleunit0_2_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit1_outp_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal downsampleunit1_outp_ce0 : STD_LOGIC;
    signal downsampleunit1_outp_we0 : STD_LOGIC;
    signal downsampleunit1_outp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit1_outp_ce1 : STD_LOGIC;
    signal downsampleunit1_outp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_0_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_0_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_0_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_0_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_0_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_0_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_1_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_1_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_1_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_1_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_1_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_1_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_2_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_2_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_2_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_2_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_2_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_2_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_3_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_3_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_3_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_3_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_3_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_3_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_4_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_4_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_4_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_4_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_4_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_4_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_5_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_5_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_5_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_5_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_5_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_5_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_6_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_6_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_6_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_6_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_6_outpu_ce1 : STD_LOGIC;
    signal shuffleunit1_6_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit1_7_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffleunit1_7_outpu_ce0 : STD_LOGIC;
    signal shuffleunit1_7_outpu_we0 : STD_LOGIC;
    signal shuffleunit1_7_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit2_outp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal downsampleunit2_outp_ce0 : STD_LOGIC;
    signal downsampleunit2_outp_we0 : STD_LOGIC;
    signal downsampleunit2_outp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal downsampleunit2_outp_ce1 : STD_LOGIC;
    signal downsampleunit2_outp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit2_0_outpu_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal shuffleunit2_0_outpu_ce0 : STD_LOGIC;
    signal shuffleunit2_0_outpu_we0 : STD_LOGIC;
    signal shuffleunit2_0_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit2_0_outpu_ce1 : STD_LOGIC;
    signal shuffleunit2_0_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit2_1_outpu_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal shuffleunit2_1_outpu_ce0 : STD_LOGIC;
    signal shuffleunit2_1_outpu_we0 : STD_LOGIC;
    signal shuffleunit2_1_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit2_1_outpu_ce1 : STD_LOGIC;
    signal shuffleunit2_1_outpu_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shuffleunit2_2_outpu_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal shuffleunit2_2_outpu_ce0 : STD_LOGIC;
    signal shuffleunit2_2_outpu_we0 : STD_LOGIC;
    signal shuffleunit2_2_outpu_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_last_output_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_last_output_ce0 : STD_LOGIC;
    signal conv_last_output_we0 : STD_LOGIC;
    signal conv_last_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal avgpool_output_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal avgpool_output_ce0 : STD_LOGIC;
    signal avgpool_output_we0 : STD_LOGIC;
    signal avgpool_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal co_cast1_fu_3590_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal co_cast1_reg_8874 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal co_cast2_fu_3594_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_cast2_reg_8882 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_cast144_cast_fu_3598_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal co_cast144_cast_reg_8891 : STD_LOGIC_VECTOR (10 downto 0);
    signal co_cast143_cast1_fu_3602_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal co_cast143_cast1_reg_8903 : STD_LOGIC_VECTOR (8 downto 0);
    signal co_cast143_cast_fu_3606_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_cast143_cast_reg_8910 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_22_fu_3628_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_22_reg_8924 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_362_cast_fu_3664_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_362_cast_reg_8929 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_fu_3622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_368_cast_fu_3704_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_368_cast_reg_8934 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_439_cast_fu_3744_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_439_cast_reg_8939 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_442_cast_fu_3784_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_442_cast_reg_8944 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_447_cast_fu_3830_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_447_cast_reg_8949 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_cast_fu_3870_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_450_cast_reg_8954 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_453_cast_fu_3910_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_453_cast_reg_8959 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_456_cast_fu_3950_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_456_cast_reg_8964 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_461_cast_fu_3996_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_461_cast_reg_8969 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_175_fu_4028_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_175_reg_8974 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_186_cast_fu_4044_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_186_cast_reg_8979 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_176_fu_4074_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_reg_8984 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_189_cast_fu_4090_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_189_cast_reg_8989 : STD_LOGIC_VECTOR (7 downto 0);
    signal ci_cast_fu_4094_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ci_cast_reg_8994 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ci_9_fu_4108_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ci_9_reg_9002 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_477_cast_fu_4127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_477_cast_reg_9007 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond2_fu_4102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_fu_4142_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_187_reg_9030 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_414_fu_4171_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_414_reg_9045 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_416_fu_4194_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_416_reg_9060 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_417_fu_4199_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_417_reg_9065 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_418_fu_4204_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_418_reg_9070 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_186_cast1_fu_4221_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_186_cast1_reg_9090 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_186_cast2_fu_4225_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_186_cast2_reg_9104 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_186_cast3_fu_4229_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_186_cast3_reg_9114 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_186_cast4_fu_4233_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_186_cast4_reg_9120 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_188_cast_fu_4237_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_188_cast_reg_9134 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_1_fu_4246_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_9142 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_221_fu_4280_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_221_reg_9147 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond5_fu_4240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_330_cast127_cast_1_fu_4286_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_330_cast127_cast_1_reg_9153 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_222_fu_4296_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_222_reg_9159 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_436_fu_4362_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_436_reg_9165 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_225_fu_4373_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_225_reg_9170 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_220_cast_fu_4382_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_220_cast_reg_9176 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_330_cast127_cast_fu_4386_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_330_cast127_cast_reg_9181 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp3_fu_4473_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_reg_9200 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_226_fu_4482_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_226_reg_9205 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_227_fu_4493_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_227_reg_9211 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_234_fu_4503_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_234_reg_9217 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_509_fu_4524_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_509_reg_9223 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_514_cast_fu_4530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_514_cast_reg_9228 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_228_fu_4624_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_228_reg_9259 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_229_fu_4634_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_229_reg_9265 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_268_fu_4646_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_268_reg_9271 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_460_fu_4779_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_460_reg_9287 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_466_fu_4824_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_466_reg_9292 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_330_cast1_fu_4829_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_330_cast1_reg_9297 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_239_fu_4846_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_239_reg_9316 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_fu_4857_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_reg_9322 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_247_fu_4951_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_247_reg_9338 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_250_fu_4961_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_250_reg_9344 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_514_fu_4998_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_514_reg_9350 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_253_fu_5092_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_253_reg_9365 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_256_fu_5102_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_256_reg_9371 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_259_fu_5112_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_259_reg_9377 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_262_fu_5206_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_262_reg_9393 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_265_fu_5216_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_265_reg_9399 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_506_fu_5353_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_506_reg_9415 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_510_fu_5361_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_510_reg_9420 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_3_fu_5384_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_3_reg_9443 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_310_fu_5422_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_310_reg_9448 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond11_fu_5378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_438_cast_fu_5428_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_438_cast_reg_9454 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_311_fu_5438_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_311_reg_9460 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_527_fu_5490_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_527_reg_9466 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_314_fu_5501_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_314_reg_9471 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal tmp_315_fu_5595_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_315_reg_9487 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_316_fu_5605_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_316_reg_9493 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_438_cast1_fu_5610_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_438_cast1_reg_9499 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal tmp_614_cast_fu_5616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_614_cast_reg_9506 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_317_fu_5711_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_317_reg_9527 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_318_fu_5722_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_318_reg_9533 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_319_fu_5820_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_319_reg_9549 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_320_fu_5830_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_320_reg_9555 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_321_fu_5840_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_321_reg_9561 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_561_fu_5949_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_561_reg_9577 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal co2_cast1_fu_5958_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal co2_cast1_reg_9587 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal co2_cast2_fu_5962_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal co2_cast2_reg_9592 : STD_LOGIC_VECTOR (9 downto 0);
    signal co2_cast120_cast_fu_5966_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal co2_cast120_cast_reg_9601 : STD_LOGIC_VECTOR (8 downto 0);
    signal co2_cast119_cast_fu_5970_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal co2_cast119_cast_reg_9610 : STD_LOGIC_VECTOR (7 downto 0);
    signal co2_cast5_fu_5974_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal co2_cast5_reg_9619 : STD_LOGIC_VECTOR (6 downto 0);
    signal co_23_fu_5988_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_23_reg_9627 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_467_cast_fu_6012_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_467_cast_reg_9632 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_5982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_402_fu_6038_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_402_reg_9637 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_404_fu_6066_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_404_reg_9642 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_406_fu_6094_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_406_reg_9647 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_476_cast_fu_6140_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_476_cast_reg_9652 : STD_LOGIC_VECTOR (10 downto 0);
    signal w_22_fu_6150_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_22_reg_9660 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_218_cast1_fu_6156_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_218_cast1_reg_9665 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond4_fu_6144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_218_cast2_fu_6160_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_218_cast2_reg_9673 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_218_cast3_fu_6164_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_218_cast3_reg_9678 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_218_cast4_fu_6168_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_218_cast4_reg_9684 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_218_cast5_fu_6172_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_218_cast5_reg_9690 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_218_cast6_fu_6176_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_218_cast6_reg_9701 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_420_fu_6209_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_420_reg_9706 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_422_fu_6236_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_422_reg_9711 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_424_fu_6263_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_424_reg_9716 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_426_fu_6290_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_426_reg_9721 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_428_fu_6317_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_428_reg_9726 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_22_fu_6329_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal h_22_reg_9734 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_309_cast_fu_6335_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_309_cast_reg_9739 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond10_fu_6323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_597_cast_fu_6344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_597_cast_reg_9761 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal tmp_309_cast1_fu_6386_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_309_cast1_reg_9795 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal tmp_309_cast2_fu_6390_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_309_cast2_reg_9800 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_6_fu_6400_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_6_reg_9808 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_353_fu_6434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_353_reg_9813 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond13_fu_6394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_356_fu_6440_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_356_reg_9821 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_470_cast110_cast_fu_6445_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_470_cast110_cast_reg_9827 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal tmp_564_fu_6485_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_564_reg_9833 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_135_fu_6527_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_135_reg_9839 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_136_fu_6531_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_136_reg_9844 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_575_fu_6568_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_575_reg_9849 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp31_fu_6573_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp31_reg_9855 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_572_fu_6623_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_572_reg_9865 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_580_fu_6696_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_580_reg_9875 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_585_fu_6738_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_585_reg_9881 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_590_fu_6776_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_590_reg_9887 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_595_fu_6814_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_595_reg_9893 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_601_fu_6859_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_601_reg_9899 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_376_fu_6869_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_376_reg_9905 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_cast_fu_6877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_665_cast_reg_9911 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal tmp_607_fu_6966_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_607_reg_9933 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_378_fu_6977_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_378_reg_9939 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_617_fu_7015_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_617_reg_9945 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal tmp_603_fu_7100_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_603_reg_9961 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_609_fu_7121_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_609_reg_9966 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_614_fu_7177_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_614_reg_9971 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_619_fu_7198_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_619_reg_9976 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal i_7_fu_7225_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_10004 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal tmp_382_fu_7259_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_382_reg_10009 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond12_fu_7219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_505_cast_fu_7268_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_505_cast_reg_10017 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_623_fu_7307_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_623_reg_10023 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_143_fu_7355_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_143_reg_10029 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_144_fu_7359_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_144_reg_10034 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_391_fu_7369_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_391_reg_10039 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_650_fu_7411_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_650_reg_10045 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal tmp_631_fu_7454_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_631_reg_10056 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_634_fu_7491_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_634_reg_10061 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_639_fu_7528_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_639_reg_10067 : STD_LOGIC_VECTOR (12 downto 0);
    signal shuffle_conv_3x3_loa_15_reg_10073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal tmp_647_fu_7644_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_647_reg_10088 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_652_fu_7659_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_652_reg_10093 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_738_cast_fu_7664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_738_cast_reg_10098 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal i5_cast1_fu_7678_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal i5_cast1_reg_10114 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal i5_cast2_fu_7682_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal i5_cast2_reg_10130 : STD_LOGIC_VECTOR (10 downto 0);
    signal i5_cast105_cast1_fu_7686_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal i5_cast105_cast1_reg_10146 : STD_LOGIC_VECTOR (8 downto 0);
    signal i5_cast105_cast_fu_7690_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal i5_cast105_cast_reg_10159 : STD_LOGIC_VECTOR (9 downto 0);
    signal i5_cast104_cast1_fu_7694_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i5_cast104_cast1_reg_10174 : STD_LOGIC_VECTOR (7 downto 0);
    signal i5_cast102_cast_fu_7698_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal i5_cast102_cast_reg_10185 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_5_fu_7712_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_reg_10196 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_189_fu_7718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_189_reg_10201 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond3_fu_7706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal k_1_fu_7891_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_1_reg_10298 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal tmp_238_fu_7925_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_238_reg_10303 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond6_fu_7885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_238_cast96_cast_fu_7931_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_238_cast96_cast_reg_10313 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal tmp_238_cast96_cast1_fu_7950_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_238_cast96_cast1_reg_10325 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal bias_load_16_reg_10330 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_238_cast97_cast_fu_7993_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_238_cast97_cast_reg_10345 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal tmp_243_fu_8004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_243_reg_10357 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_275_fu_8048_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_275_reg_10397 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal tmp_273_fu_8156_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_273_reg_10432 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal tmp_238_cast1_fu_8177_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_238_cast1_reg_10447 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal k_2_fu_8451_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_reg_10544 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal tmp_322_fu_8485_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_322_reg_10549 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond9_fu_8445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_391_cast_cast1_fu_8491_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_391_cast_cast1_reg_10557 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal tmp_391_cast_fu_8537_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_391_cast_reg_10572 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal tmp_326_fu_8548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_326_reg_10586 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal i_2_fu_8753_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_reg_10665 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal exitcond8_fu_8747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_8789_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_10678 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal exitcond7_fu_8783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal co_24_fu_8821_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal co_24_reg_10691 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal tmp_i_fu_8827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_10696 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_i_fu_8815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_723_cast_fu_8839_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_723_cast_reg_10702 : STD_LOGIC_VECTOR (13 downto 0);
    signal ci_10_fu_8849_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ci_10_reg_10710 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal exitcond_i_fu_8843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc_weight_load_reg_10730 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal avgpool_output_load_reg_10735 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_i_reg_10740 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal grp_fu_3581_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal fc_bias_load_reg_10750 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal result_reg_10755 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state143 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state143 : signal is "none";
    signal grp_DownsampleUnit0_fu_3317_ap_start : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_ap_done : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_ap_idle : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_ap_ready : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_input_r_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_DownsampleUnit0_fu_3317_input_r_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv1r_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv1r_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv2r_weight_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv2r_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv3r_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv3r_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv1l_weight_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv1l_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv2l_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_conv2l_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0 : STD_LOGIC;
    signal grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DownsampleUnit1_fu_3345_ap_start : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_ap_done : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_ap_idle : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_ap_ready : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv1r_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv1r_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv2r_weight_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv2r_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv3r_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv3r_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv1l_weight_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv1l_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv2l_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_conv2l_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0 : STD_LOGIC;
    signal grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DownsampleUnit2_fu_3373_ap_start : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_ap_done : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_ap_idle : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_ap_ready : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv1r_weight_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv1r_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv2r_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv2r_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv3r_weight_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv3r_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv1l_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv1l_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv2l_weight_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_conv2l_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0 : STD_LOGIC;
    signal grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_ap_start : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_ap_done : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_ap_idle : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_ap_ready : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ShuffleUnit0_fu_3401_input_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_input_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_input_r_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ShuffleUnit0_fu_3401_input_r_ce1 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_input_r_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv1_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv1_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv1_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv1_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv2_weight_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv2_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv2_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv2_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv2_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv2_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv3_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv3_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv3_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv3_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ShuffleUnit0_fu_3401_conv3_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_conv3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit0_fu_3401_output_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ShuffleUnit0_fu_3401_output_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_output_r_we0 : STD_LOGIC;
    signal grp_ShuffleUnit0_fu_3401_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_ap_start : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_ap_done : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_ap_idle : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_ap_ready : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_input_r_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_ShuffleUnit1_fu_3437_input_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_input_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_input_r_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_ShuffleUnit1_fu_3437_input_r_ce1 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_input_r_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv1_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv1_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv1_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv1_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv2_weight_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv2_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv2_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv2_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv2_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv2_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv3_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv3_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv3_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv3_bias_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ShuffleUnit1_fu_3437_conv3_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_conv3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit1_fu_3437_output_r_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_ShuffleUnit1_fu_3437_output_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_output_r_we0 : STD_LOGIC;
    signal grp_ShuffleUnit1_fu_3437_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_ap_start : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_ap_done : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_ap_idle : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_ap_ready : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_input_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_ShuffleUnit2_fu_3513_input_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_input_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_input_r_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_ShuffleUnit2_fu_3513_input_r_ce1 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_input_r_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv1_weight_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv1_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv1_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv1_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv2_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv2_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv2_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv2_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv2_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv2_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv3_weight_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv3_weight_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv3_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv3_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_ShuffleUnit2_fu_3513_conv3_bias_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_conv3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ShuffleUnit2_fu_3513_output_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_ShuffleUnit2_fu_3513_output_r_ce0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_output_r_we0 : STD_LOGIC;
    signal grp_ShuffleUnit2_fu_3513_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_fu_3549_ap_start : STD_LOGIC;
    signal grp_conv1_fu_3549_ap_done : STD_LOGIC;
    signal grp_conv1_fu_3549_ap_idle : STD_LOGIC;
    signal grp_conv1_fu_3549_ap_ready : STD_LOGIC;
    signal grp_conv1_fu_3549_input_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv1_fu_3549_input_r_ce0 : STD_LOGIC;
    signal grp_conv1_fu_3549_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv1_fu_3549_weight_ce0 : STD_LOGIC;
    signal grp_conv1_fu_3549_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv1_fu_3549_bias_ce0 : STD_LOGIC;
    signal grp_conv1_fu_3549_conv1_output_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_conv1_fu_3549_conv1_output_ce0 : STD_LOGIC;
    signal grp_conv1_fu_3549_conv1_output_we0 : STD_LOGIC;
    signal grp_conv1_fu_3549_conv1_output_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_last_fu_3561_ap_start : STD_LOGIC;
    signal grp_conv_last_fu_3561_ap_done : STD_LOGIC;
    signal grp_conv_last_fu_3561_ap_idle : STD_LOGIC;
    signal grp_conv_last_fu_3561_ap_ready : STD_LOGIC;
    signal grp_conv_last_fu_3561_weight_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_conv_last_fu_3561_weight_ce0 : STD_LOGIC;
    signal grp_conv_last_fu_3561_bias_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_conv_last_fu_3561_bias_ce0 : STD_LOGIC;
    signal grp_conv_last_fu_3561_output_r_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_conv_last_fu_3561_output_r_ce0 : STD_LOGIC;
    signal grp_conv_last_fu_3561_output_r_we0 : STD_LOGIC;
    signal grp_conv_last_fu_3561_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0 : STD_LOGIC;
    signal grp_avgpool_fu_3573_ap_start : STD_LOGIC;
    signal grp_avgpool_fu_3573_ap_done : STD_LOGIC;
    signal grp_avgpool_fu_3573_ap_idle : STD_LOGIC;
    signal grp_avgpool_fu_3573_ap_ready : STD_LOGIC;
    signal grp_avgpool_fu_3573_output_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_avgpool_fu_3573_output_r_ce0 : STD_LOGIC;
    signal grp_avgpool_fu_3573_output_r_we0 : STD_LOGIC;
    signal grp_avgpool_fu_3573_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avgpool_fu_3573_conv_last_output_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_avgpool_fu_3573_conv_last_output_ce0 : STD_LOGIC;
    signal co_reg_3124 : STD_LOGIC_VECTOR (4 downto 0);
    signal ci_reg_3135 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_3147 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i1_reg_3158 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal co2_reg_3169 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_reg_3180 : STD_LOGIC_VECTOR (1 downto 0);
    signal h_reg_3191 : STD_LOGIC_VECTOR (1 downto 0);
    signal i3_reg_3203 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal i4_reg_3214 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal i5_reg_3225 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_reg_3237 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal k6_reg_3248 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal i7_reg_3259 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal i8_reg_3271 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal co_i_reg_3283 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal ap_CS_fsm_state144 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state144 : signal is "none";
    signal sum_i_reg_3294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ci_i_reg_3306 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_grp_DownsampleUnit0_fu_3317_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_reg_grp_DownsampleUnit1_fu_3345_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_reg_grp_DownsampleUnit2_fu_3373_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal ap_reg_grp_ShuffleUnit0_fu_3401_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_reg_grp_ShuffleUnit1_fu_3437_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal ap_reg_grp_ShuffleUnit2_fu_3513_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ap_reg_grp_conv1_fu_3549_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal ap_reg_grp_conv_last_fu_3561_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal ap_reg_grp_avgpool_fu_3573_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal tmp_478_cast_fu_4137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_479_cast_fu_4156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_480_cast_fu_4166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_481_cast_fu_4180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_482_cast_fu_4189_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_483_cast_fu_4209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_484_cast_fu_4213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_485_cast_fu_4217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_506_cast_fu_4426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_518_cast_fu_4468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_522_cast_fu_4572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_526_cast_fu_4614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_530_cast_fu_4688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_534_cast_fu_4730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_538_cast_fu_4832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_544_cast_fu_4836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_548_cast_fu_4899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_552_cast_fu_4941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_556_cast_fu_5040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_560_cast_fu_5082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_564_cast_fu_5154_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_568_cast_fu_5196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_572_cast_fu_5258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_578_cast_fu_5308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_584_cast_fu_5366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_590_cast_fu_5370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_594_cast_fu_5374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_607_cast_fu_5543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_618_cast_fu_5585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_622_cast_fu_5658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_626_cast_fu_5700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_632_cast_fu_5772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_636_cast_fu_5810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_640_cast_fu_5878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_644_cast_fu_5916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_648_cast_fu_5954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_598_cast_fu_6354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_599_cast_fu_6363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_600_cast_fu_6372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_601_cast_fu_6381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_658_cast_fu_6606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_671_cast_fu_6653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_677_cast_fu_6903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_683_cast_fu_6929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_689_cast_fu_7045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_695_cast_fu_7075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_702_cast_fu_7203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_709_cast_fu_7207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_715_cast_fu_7211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_721_cast_fu_7215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_731_cast_fu_7437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_744_cast_fu_7554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_750_cast_fu_7580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_757_cast_fu_7670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_763_cast_fu_7674_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_191_fu_7729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_193_fu_7739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_195_fu_7749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_197_fu_7766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_199_fu_7776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_201_fu_7786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_203_fu_7796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_205_fu_7813_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_207_fu_7827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_209_fu_7837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_211_fu_7847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_213_fu_7860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_215_fu_7870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_217_fu_7880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_241_fu_7945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_246_fu_7968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_249_fu_7988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_252_fu_8022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_255_fu_8038_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_258_fu_8063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_261_fu_8078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_264_fu_8093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_267_fu_8108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_270_fu_8127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_272_fu_8146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_274_fu_8164_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_276_fu_8172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_278_fu_8198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_280_fu_8214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_282_fu_8229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_284_fu_8244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_286_fu_8259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_288_fu_8274_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_290_fu_8289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_292_fu_8304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_294_fu_8319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_296_fu_8334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_298_fu_8349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_300_fu_8364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_302_fu_8383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_304_fu_8402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_306_fu_8421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_308_fu_8440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_324_fu_8512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_328_fu_8532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_330_fu_8572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_332_fu_8588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_334_fu_8603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_336_fu_8618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_338_fu_8633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_340_fu_8648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_342_fu_8663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_344_fu_8678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_346_fu_8693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_348_fu_8708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_350_fu_8723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_352_fu_8738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_232_fu_8769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_233_fu_8774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_236_fu_8805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_237_fu_8810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_764_cast_fu_8869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_419_fu_8855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_3581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal tmp_fu_3634_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_218_fu_3646_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl35_cast_fu_3642_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl36_cast_fu_3654_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_220_fu_3658_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal co_cast137_cast_fu_3618_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_3668_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_309_fu_3674_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_355_fu_3686_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl33_cast_fu_3682_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl34_cast_fu_3694_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_357_fu_3698_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_cast138_cast_fu_3614_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_170_fu_3708_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_359_fu_3714_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_360_fu_3726_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl31_cast_fu_3722_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl32_cast_fu_3734_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_362_fu_3738_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_171_fu_3748_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_363_fu_3754_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_364_fu_3766_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl29_cast_fu_3762_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl30_cast_fu_3774_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_366_fu_3778_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_367_fu_3788_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_368_fu_3798_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_370_fu_3806_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_371_fu_3816_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl27_cast_fu_3802_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl28_cast_fu_3820_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_373_fu_3824_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal co_cast8_fu_3610_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_172_fu_3834_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_375_fu_3840_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_377_fu_3852_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl25_cast_fu_3848_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl26_cast_fu_3860_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_379_fu_3864_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_173_fu_3874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_381_fu_3880_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_384_fu_3892_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl23_cast_fu_3888_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl24_cast_fu_3900_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_386_fu_3904_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_174_fu_3914_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_388_fu_3920_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_390_fu_3932_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl21_cast_fu_3928_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl22_cast_fu_3940_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_392_fu_3944_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_394_fu_3954_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_395_fu_3964_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_396_fu_3972_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_397_fu_3982_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl19_cast_fu_3968_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl20_cast_fu_3986_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_398_fu_3990_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_120_fu_4000_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_fu_4004_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_fu_4016_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_4012_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_4024_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lshr_f1_cast_fu_4034_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_121_fu_4048_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_4052_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_122_fu_4064_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_cast_fu_4060_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_fu_4070_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_lshr_f_cast_fu_4080_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_186_cast8_fu_4118_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_410_fu_4122_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_186_cast7_fu_4114_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_411_fu_4132_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ci_cast1_fu_4098_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_186_cast6_fu_4147_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_412_fu_4151_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_413_fu_4161_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_186_cast5_fu_4176_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_415_fu_4184_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_128_fu_4252_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl6_fu_4256_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl7_fu_4268_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl6_cast_fu_4264_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl7_cast_fu_4276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_4290_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_fu_4301_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl9_fu_4313_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl8_cast_fu_4309_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl9_cast_fu_4321_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_223_fu_4325_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_224_fu_4331_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_434_fu_4344_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_433_fu_4336_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl74_cast_fu_4352_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_435_fu_4356_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp2_fu_4367_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_219_fu_4378_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_429_fu_4389_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_430_fu_4400_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl75_cast_fu_4396_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl76_cast_fu_4407_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_431_fu_4411_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_505_cast2_fu_4417_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_432_fu_4421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_437_fu_4431_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_438_fu_4442_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl71_cast_fu_4438_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl72_cast_fu_4449_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_439_fu_4453_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_517_cast_fu_4459_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_440_fu_4463_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_cast_fu_4478_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_fu_4487_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp8_fu_4498_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_507_fu_4508_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_508_fu_4516_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl39_cast_fu_4512_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl40_cast_fu_4520_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_441_fu_4535_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_442_fu_4546_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl69_cast_fu_4542_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl70_cast_fu_4553_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_443_fu_4557_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_521_cast_fu_4563_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_444_fu_4567_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_445_fu_4577_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_446_fu_4588_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl67_cast_fu_4584_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl68_cast_fu_4595_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_447_fu_4599_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_525_cast_fu_4605_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_448_fu_4609_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp5_fu_4619_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp6_fu_4629_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp19_cast1_fu_4639_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp19_cast_fu_4642_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_449_fu_4651_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_450_fu_4662_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl65_cast_fu_4658_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl66_cast_fu_4669_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_451_fu_4673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_529_cast_fu_4679_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_452_fu_4683_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_453_fu_4693_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_454_fu_4704_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl63_cast_fu_4700_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl64_cast_fu_4711_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_455_fu_4715_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_533_cast_fu_4721_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_456_fu_4725_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp7_fu_4735_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_230_fu_4740_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_457_fu_4745_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_458_fu_4757_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl61_cast_fu_4753_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl62_cast_fu_4765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_459_fu_4769_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_537_cast_fu_4775_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_461_fu_4784_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_462_fu_4791_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_463_fu_4799_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_464_fu_4806_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl59_cast_fu_4795_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl60_cast_fu_4810_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_465_fu_4814_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_543_cast_fu_4820_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_fu_4840_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp10_fu_4851_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_467_fu_4862_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_468_fu_4873_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl57_cast_fu_4869_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl58_cast_fu_4880_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_469_fu_4884_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_547_cast_fu_4890_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_470_fu_4894_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_471_fu_4904_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_472_fu_4915_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl55_cast_fu_4911_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl56_cast_fu_4922_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_473_fu_4926_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_551_cast_fu_4932_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_474_fu_4936_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_fu_4946_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp12_fu_4956_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_511_fu_4966_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_512_fu_4977_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl37_cast_fu_4973_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl38_cast_fu_4984_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_513_fu_4988_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_593_cast_fu_4994_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_475_fu_5003_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_476_fu_5014_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl53_cast_fu_5010_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl54_cast_fu_5021_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_477_fu_5025_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_555_cast_fu_5031_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_478_fu_5035_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_479_fu_5045_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_480_fu_5056_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl51_cast_fu_5052_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl52_cast_fu_5063_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_481_fu_5067_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_559_cast_fu_5073_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_482_fu_5077_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp13_fu_5087_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp14_fu_5097_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp15_fu_5107_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_483_fu_5117_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_484_fu_5128_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl49_cast_fu_5124_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl50_cast_fu_5135_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_485_fu_5139_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_563_cast_fu_5145_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_486_fu_5149_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_487_fu_5159_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_488_fu_5170_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl47_cast_fu_5166_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl48_cast_fu_5177_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_489_fu_5181_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_567_cast_fu_5187_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_490_fu_5191_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp16_fu_5201_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp17_fu_5211_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_491_fu_5221_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_492_fu_5232_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl45_cast_fu_5228_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl46_cast_fu_5239_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_493_fu_5243_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_571_cast_fu_5249_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_494_fu_5253_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_495_fu_5263_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_496_fu_5270_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_497_fu_5278_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_498_fu_5285_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl43_cast_fu_5274_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl44_cast_fu_5289_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_499_fu_5293_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_577_cast_fu_5299_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_500_fu_5303_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_501_fu_5313_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_502_fu_5320_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_503_fu_5328_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_504_fu_5335_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl41_cast_fu_5324_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl42_cast_fu_5339_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_505_fu_5343_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_583_cast_fu_5349_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_589_cast_fu_5358_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_130_fu_5390_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_fu_5394_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl12_fu_5406_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl12_cast_fu_5402_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl13_cast_fu_5418_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp20_fu_5432_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_131_fu_5443_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl13_cast1_fu_5414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl14_cast_fu_5449_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_312_fu_5453_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_313_fu_5459_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_525_fu_5472_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_524_fu_5464_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl94_cast_fu_5480_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_526_fu_5484_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp21_fu_5495_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_520_fu_5506_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_521_fu_5517_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl95_cast_fu_5513_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl96_cast_fu_5524_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_522_fu_5528_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_606_cast_fu_5534_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_523_fu_5538_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_528_fu_5548_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_529_fu_5559_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl91_cast_fu_5555_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl92_cast_fu_5566_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_530_fu_5570_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_617_cast_fu_5576_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_531_fu_5580_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp22_fu_5590_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp23_fu_5600_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_532_fu_5621_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_533_fu_5632_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl89_cast_fu_5628_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl90_cast_fu_5639_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_534_fu_5643_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_621_cast_fu_5649_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_535_fu_5653_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_536_fu_5663_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_537_fu_5674_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl87_cast_fu_5670_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl88_cast_fu_5681_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_538_fu_5685_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_625_cast_fu_5691_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_539_fu_5695_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_438_cast_cast_fu_5613_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp24_fu_5705_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp25_fu_5716_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_540_fu_5727_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_541_fu_5734_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_542_fu_5742_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_543_fu_5749_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl85_cast_fu_5738_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl86_cast_fu_5753_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_544_fu_5757_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_631_cast_fu_5763_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_545_fu_5767_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_546_fu_5777_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_547_fu_5788_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl83_cast_fu_5784_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl84_cast_fu_5795_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_548_fu_5799_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_549_fu_5805_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp26_fu_5815_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp27_fu_5825_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp28_fu_5835_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_550_fu_5845_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_551_fu_5856_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl81_cast_fu_5852_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl82_cast_fu_5863_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_552_fu_5867_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_553_fu_5873_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_554_fu_5883_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_555_fu_5894_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl79_cast_fu_5890_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl80_cast_fu_5901_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_556_fu_5905_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_557_fu_5911_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_558_fu_5921_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_559_fu_5932_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl77_cast_fu_5928_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl78_cast_fu_5939_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_560_fu_5943_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_399_fu_5994_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl101_cast_fu_6002_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_400_fu_6006_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal co2_cast117_cast_fu_5978_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_178_fu_6016_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_401_fu_6026_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl100_cast_fu_6034_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_179_cast_fu_6022_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_180_fu_6044_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_403_fu_6054_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl99_cast_fu_6062_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_181_cast_fu_6050_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_182_fu_6072_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_405_fu_6082_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl98_cast_fu_6090_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_183_cast_fu_6078_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_184_fu_6100_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_197_cast_fu_6108_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_407_fu_6116_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_408_fu_6126_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl97_cast_fu_6130_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_185_cast_fu_6112_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_409_fu_6134_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_218_cast_fu_6184_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_419_fu_6188_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_123_fu_6197_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl106_cast_fu_6205_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_486_cast_fu_6193_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_421_fu_6215_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_124_fu_6224_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl105_cast_fu_6232_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_489_cast_fu_6220_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_218_cast7_fu_6180_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_423_fu_6242_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_125_fu_6251_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl104_cast_fu_6259_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_492_cast1_fu_6247_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_425_fu_6269_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_126_fu_6278_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl103_cast_fu_6286_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_495_cast1_fu_6274_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_427_fu_6296_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_127_fu_6305_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl102_cast_fu_6313_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_498_cast_fu_6301_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_515_fu_6339_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_516_fu_6349_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_517_fu_6359_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_518_fu_6368_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_519_fu_6377_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_133_fu_6406_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl13_fu_6410_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl14_fu_6422_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl15_cast_fu_6418_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl16_cast_fu_6430_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp29_fu_6448_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_354_fu_6454_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_562_fu_6463_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl128_cast_fu_6471_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_355_cast_fu_6459_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_563_fu_6475_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_654_cast_fu_6481_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_474_cast_fu_6490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_567_fu_6497_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_568_fu_6504_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl126_cast_fu_6508_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_357_cast_fu_6493_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_569_fu_6512_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_661_cast_fu_6518_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_570_fu_6522_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp30_fu_6535_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_358_fu_6541_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_573_fu_6550_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl124_cast_fu_6558_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_359_cast_fu_6546_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_574_fu_6562_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_134_fu_6584_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl127_cast_fu_6591_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_655_cast_fu_6581_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_565_fu_6595_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_566_fu_6601_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl125_cast_fu_6611_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_571_fu_6618_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_137_fu_6631_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl123_cast_fu_6638_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_668_cast_fu_6628_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_576_fu_6642_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_577_fu_6648_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp31_cast1_fu_6658_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp31_cast_fu_6661_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_361_fu_6665_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_578_fu_6674_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl122_cast_fu_6682_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_363_cast_fu_6670_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_579_fu_6686_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_673_cast_fu_6692_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_470_cast2_fu_6578_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp32_fu_6701_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_365_fu_6707_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_583_fu_6716_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl120_cast_fu_6724_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_367_cast_fu_6712_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_584_fu_6728_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_679_cast_fu_6734_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp33_fu_6743_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_369_fu_6749_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_588_fu_6758_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl118_cast_fu_6766_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_371_cast_fu_6754_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_589_fu_6770_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp34_fu_6781_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_372_fu_6787_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_593_fu_6796_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl116_cast_fu_6804_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_373_cast_fu_6792_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_594_fu_6808_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp35_fu_6819_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_374_fu_6824_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_492_cast_fu_6829_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_598_fu_6837_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_599_fu_6845_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl114_cast_fu_6849_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_375_cast_fu_6833_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_600_fu_6853_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp36_fu_6864_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl121_cast_fu_6885_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_674_cast_fu_6882_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_581_fu_6892_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_582_fu_6898_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl119_cast_fu_6911_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_680_cast_fu_6908_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_586_fu_6918_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_587_fu_6924_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_495_cast_fu_6934_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_604_fu_6941_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_605_fu_6948_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl112_cast_fu_6952_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_377_cast_fu_6937_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_606_fu_6956_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_705_cast_fu_6962_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_470_cast1_fu_6874_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp37_fu_6971_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp38_fu_6982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_380_fu_6988_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_615_fu_6997_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl108_cast_fu_7005_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_381_cast_fu_6993_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_616_fu_7009_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_138_fu_7023_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl117_cast_fu_7030_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_686_cast_fu_7020_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_591_fu_7034_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_592_fu_7040_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_139_fu_7053_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl115_cast_fu_7060_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_692_cast_fu_7050_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_596_fu_7064_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_597_fu_7070_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_140_fu_7083_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl113_cast_fu_7090_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_699_cast_fu_7080_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_602_fu_7094_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl111_cast_fu_7108_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_706_cast_fu_7105_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_608_fu_7115_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_610_fu_7129_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl110_cast_fu_7136_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_379_cast_fu_7126_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_611_fu_7140_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_711_cast_fu_7146_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_612_fu_7150_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_141_fu_7159_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl109_cast_fu_7163_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_712_cast_fu_7155_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_613_fu_7171_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl107_cast_fu_7185_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_718_cast_fu_7182_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_618_fu_7192_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_142_fu_7231_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl15_fu_7235_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl16_fu_7247_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl17_cast_fu_7243_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl18_cast_fu_7255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp39_fu_7274_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_383_fu_7280_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_621_fu_7289_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl140_cast_fu_7297_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_384_cast_fu_7285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_622_fu_7301_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_385_fu_7312_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_509_cast_fu_7316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_626_fu_7324_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_627_fu_7332_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl138_cast_fu_7336_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_386_cast_fu_7320_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_628_fu_7340_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_734_cast_fu_7346_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_629_fu_7350_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_505_cast_cast_fu_7271_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp42_fu_7363_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_505_cast1_fu_7265_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp43_fu_7374_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_393_fu_7380_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_648_fu_7389_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl130_cast_fu_7397_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_394_cast_fu_7385_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_649_fu_7401_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_759_cast_fu_7407_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl139_cast_fu_7419_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_728_cast_fu_7416_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_624_fu_7426_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_625_fu_7432_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl137_cast_fu_7442_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_630_fu_7449_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp40_fu_7459_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_387_fu_7464_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_632_fu_7473_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl136_cast_fu_7481_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_388_cast_fu_7469_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_633_fu_7485_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp41_fu_7496_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_389_fu_7501_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_637_fu_7510_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl134_cast_fu_7518_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_390_cast_fu_7506_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_638_fu_7522_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl135_cast_fu_7536_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_741_cast_fu_7533_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_635_fu_7543_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_636_fu_7549_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl133_cast_fu_7562_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_747_cast_fu_7559_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_640_fu_7569_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_641_fu_7575_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_515_cast_fu_7585_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_642_fu_7592_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_643_fu_7599_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl132_cast_fu_7603_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_392_cast_fu_7588_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_644_fu_7607_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_753_cast_fu_7613_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_645_fu_7617_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_145_fu_7626_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl131_cast_fu_7630_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_754_cast_fu_7622_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_646_fu_7638_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_146_fu_7649_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_651_fu_7654_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i5_cast101_cast_fu_7702_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_190_fu_7723_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_192_fu_7734_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_194_fu_7744_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_196_fu_7754_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_206_cast_fu_7762_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_198_fu_7771_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_200_fu_7781_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_202_fu_7791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_204_fu_7801_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_214_cast_fu_7809_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_206_fu_7818_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_216_cast_fu_7823_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_208_fu_7832_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_210_fu_7842_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_212_fu_7852_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_214_fu_7865_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_216_fu_7875_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_129_fu_7897_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl4_fu_7901_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl5_fu_7913_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_7909_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_cast_fu_7921_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp44_fu_7934_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_240_fu_7940_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp45_fu_7953_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_245_fu_7959_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_245_cast_fu_7964_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp46_fu_7973_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_248_fu_7979_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_248_cast_fu_7984_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_242_fu_7996_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_242_cast_fu_8000_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp47_fu_8011_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_251_fu_8017_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp48_fu_8027_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_254_fu_8033_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp56_fu_8043_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp49_fu_8053_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_257_fu_8058_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp50_fu_8068_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_260_fu_8073_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp51_fu_8083_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_263_fu_8088_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp52_fu_8098_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_266_fu_8103_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp53_fu_8113_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_269_fu_8118_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_269_cast_fu_8123_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp54_fu_8132_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_271_fu_8137_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_272_cast_fu_8142_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp55_fu_8151_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_275_cast_fu_8161_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_278_cast_fu_8169_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp57_fu_8180_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp57_cast1_fu_8185_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp57_cast_fu_8189_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_277_fu_8193_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp58_fu_8203_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_279_fu_8209_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp59_fu_8219_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_281_fu_8224_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp60_fu_8234_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_283_fu_8239_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp61_fu_8249_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_285_fu_8254_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp62_fu_8264_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_287_fu_8269_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp63_fu_8279_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_289_fu_8284_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp64_fu_8294_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_291_fu_8299_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp65_fu_8309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_293_fu_8314_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp66_fu_8324_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_295_fu_8329_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp67_fu_8339_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_297_fu_8344_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp68_fu_8354_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_299_fu_8359_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp69_fu_8369_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_301_fu_8374_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_317_cast_fu_8379_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp70_fu_8388_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_303_fu_8393_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_320_cast_fu_8398_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp71_fu_8407_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_305_fu_8412_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_323_cast_fu_8417_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp72_fu_8426_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_307_fu_8431_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_326_cast_fu_8436_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_132_fu_8457_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl10_fu_8461_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl11_fu_8473_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl10_cast_fu_8469_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl11_cast_fu_8481_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_391_cast_cast_fu_8494_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp73_fu_8497_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_323_fu_8503_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_393_cast_fu_8508_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp74_fu_8517_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_327_fu_8523_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_398_cast_fu_8528_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_325_fu_8540_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_395_cast_fu_8544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp75_fu_8554_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp75_cast1_fu_8559_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp75_cast_fu_8563_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_329_fu_8567_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp76_fu_8577_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_331_fu_8583_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp77_fu_8593_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_333_fu_8598_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp78_fu_8608_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_335_fu_8613_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp79_fu_8623_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_337_fu_8628_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp80_fu_8638_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_339_fu_8643_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp81_fu_8653_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_341_fu_8658_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp82_fu_8668_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_343_fu_8673_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp83_fu_8683_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_345_fu_8688_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp84_fu_8698_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_347_fu_8703_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp85_fu_8713_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_349_fu_8718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp86_fu_8728_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_351_fu_8733_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i7_cast92_cast_fu_8743_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_231_fu_8759_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_231_cast_fu_8765_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal i8_cast90_cast_fu_8779_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_235_fu_8795_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_235_cast_fu_8801_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_620_fu_8831_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_i_cast_fu_8860_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_653_fu_8864_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (143 downto 0);

    component DownsampleUnit0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1r_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv1r_weight_ce0 : OUT STD_LOGIC;
        conv1r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv1r_bias_ce0 : OUT STD_LOGIC;
        conv1r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv2r_weight_ce0 : OUT STD_LOGIC;
        conv2r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv2r_bias_ce0 : OUT STD_LOGIC;
        conv2r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3r_weight_ce0 : OUT STD_LOGIC;
        conv3r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv3r_bias_ce0 : OUT STD_LOGIC;
        conv3r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1l_weight_ce0 : OUT STD_LOGIC;
        conv1l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv1l_bias_ce0 : OUT STD_LOGIC;
        conv1l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2l_weight_ce0 : OUT STD_LOGIC;
        conv2l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv2l_bias_ce0 : OUT STD_LOGIC;
        conv2l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        downsampleunit0_outp_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        downsampleunit0_outp_ce0 : OUT STD_LOGIC;
        downsampleunit0_outp_we0 : OUT STD_LOGIC;
        downsampleunit0_outp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DownsampleUnit1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1r_weight_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1r_weight_ce0 : OUT STD_LOGIC;
        conv1r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1r_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1r_bias_ce0 : OUT STD_LOGIC;
        conv1r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_weight_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2r_weight_ce0 : OUT STD_LOGIC;
        conv2r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv2r_bias_ce0 : OUT STD_LOGIC;
        conv2r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_weight_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv3r_weight_ce0 : OUT STD_LOGIC;
        conv3r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv3r_bias_ce0 : OUT STD_LOGIC;
        conv3r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_weight_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv1l_weight_ce0 : OUT STD_LOGIC;
        conv1l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1l_bias_ce0 : OUT STD_LOGIC;
        conv1l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_weight_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv2l_weight_ce0 : OUT STD_LOGIC;
        conv2l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv2l_bias_ce0 : OUT STD_LOGIC;
        conv2l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shuffleunit0_2_outpu_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        shuffleunit0_2_outpu_ce0 : OUT STD_LOGIC;
        shuffleunit0_2_outpu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        downsampleunit1_outp_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        downsampleunit1_outp_ce0 : OUT STD_LOGIC;
        downsampleunit1_outp_we0 : OUT STD_LOGIC;
        downsampleunit1_outp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DownsampleUnit2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1r_weight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1r_weight_ce0 : OUT STD_LOGIC;
        conv1r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1r_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1r_bias_ce0 : OUT STD_LOGIC;
        conv1r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2r_weight_ce0 : OUT STD_LOGIC;
        conv2r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2r_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv2r_bias_ce0 : OUT STD_LOGIC;
        conv2r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_weight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv3r_weight_ce0 : OUT STD_LOGIC;
        conv3r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3r_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv3r_bias_ce0 : OUT STD_LOGIC;
        conv3r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv1l_weight_ce0 : OUT STD_LOGIC;
        conv1l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1l_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1l_bias_ce0 : OUT STD_LOGIC;
        conv1l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_weight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2l_weight_ce0 : OUT STD_LOGIC;
        conv2l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2l_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv2l_bias_ce0 : OUT STD_LOGIC;
        conv2l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        shuffleunit1_7_outpu_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        shuffleunit1_7_outpu_ce0 : OUT STD_LOGIC;
        shuffleunit1_7_outpu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        downsampleunit2_outp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        downsampleunit2_outp_ce0 : OUT STD_LOGIC;
        downsampleunit2_outp_we0 : OUT STD_LOGIC;
        downsampleunit2_outp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleUnit0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv1_weight_ce0 : OUT STD_LOGIC;
        conv1_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv1_bias_ce0 : OUT STD_LOGIC;
        conv1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv2_weight_ce0 : OUT STD_LOGIC;
        conv2_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv2_bias_ce0 : OUT STD_LOGIC;
        conv2_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_weight_ce0 : OUT STD_LOGIC;
        conv3_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        conv3_bias_ce0 : OUT STD_LOGIC;
        conv3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleUnit1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_weight_ce0 : OUT STD_LOGIC;
        conv1_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1_bias_ce0 : OUT STD_LOGIC;
        conv1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_weight_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2_weight_ce0 : OUT STD_LOGIC;
        conv2_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv2_bias_ce0 : OUT STD_LOGIC;
        conv2_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_weight_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv3_weight_ce0 : OUT STD_LOGIC;
        conv3_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_bias_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv3_bias_ce0 : OUT STD_LOGIC;
        conv3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleUnit2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_weight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_weight_ce0 : OUT STD_LOGIC;
        conv1_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_bias_ce0 : OUT STD_LOGIC;
        conv1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_weight_ce0 : OUT STD_LOGIC;
        conv2_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv2_bias_ce0 : OUT STD_LOGIC;
        conv2_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_weight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv3_weight_ce0 : OUT STD_LOGIC;
        conv3_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv3_bias_ce0 : OUT STD_LOGIC;
        conv3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_output_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        conv1_output_ce0 : OUT STD_LOGIC;
        conv1_output_we0 : OUT STD_LOGIC;
        conv1_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_last IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        shuffleunit2_2_outpu_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        shuffleunit2_2_outpu_ce0 : OUT STD_LOGIC;
        shuffleunit2_2_outpu_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component avgpool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_last_output_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_last_output_ce0 : OUT STD_LOGIC;
        conv_last_output_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_faddbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_fmulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_ShufIfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_ShufRg6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_Shufbak IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_Shufbjl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_Shufbom IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_Shufbyn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_convbDo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_ShufbSr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_Shufclv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_convczy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_fc_bcAy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_convcBy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_downcCy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_shufcFz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_downcGz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_shufcOA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_downcPA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_shufcSB IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ShuffleNetV2_convcTB IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    ShuffleConvs_0_Downs_7_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_7_address0,
        ce0 => ShuffleConvs_0_Downs_7_ce0,
        we0 => ShuffleConvs_0_Downs_7_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_0_Downs_7_q0);

    ShuffleConvs_0_Downs_10_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_10_address0,
        ce0 => ShuffleConvs_0_Downs_10_ce0,
        we0 => ShuffleConvs_0_Downs_10_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_0_Downs_10_q0);

    ShuffleConvs_0_Downs_8_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_8_address0,
        ce0 => ShuffleConvs_0_Downs_8_ce0,
        we0 => ShuffleConvs_0_Downs_8_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_0_Downs_8_q0);

    ShuffleConvs_0_Shuff_5_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_5_address0,
        ce0 => ShuffleConvs_0_Shuff_5_ce0,
        we0 => ShuffleConvs_0_Shuff_5_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_0_Shuff_5_q0);

    ShuffleConvs_0_Shuff_7_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_7_address0,
        ce0 => ShuffleConvs_0_Shuff_7_ce0,
        we0 => ShuffleConvs_0_Shuff_7_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_0_Shuff_7_q0);

    ShuffleConvs_0_Shuff_8_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_8_address0,
        ce0 => ShuffleConvs_0_Shuff_8_ce0,
        we0 => ShuffleConvs_0_Shuff_8_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_0_Shuff_8_q0);

    ShuffleConvs_0_Shuff_11_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_11_address0,
        ce0 => ShuffleConvs_0_Shuff_11_ce0,
        we0 => ShuffleConvs_0_Shuff_11_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_0_Shuff_11_q0);

    ShuffleConvs_0_Shuff_13_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_13_address0,
        ce0 => ShuffleConvs_0_Shuff_13_ce0,
        we0 => ShuffleConvs_0_Shuff_13_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_0_Shuff_13_q0);

    ShuffleConvs_0_Shuff_18_U : component ShuffleNetV2_ShufIfE
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_18_address0,
        ce0 => ShuffleConvs_0_Shuff_18_ce0,
        we0 => ShuffleConvs_0_Shuff_18_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_0_Shuff_18_q0);

    ShuffleConvs_1_Downs_7_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_7_address0,
        ce0 => ShuffleConvs_1_Downs_7_ce0,
        we0 => ShuffleConvs_1_Downs_7_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Downs_7_q0);

    ShuffleConvs_1_Downs_10_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_10_address0,
        ce0 => ShuffleConvs_1_Downs_10_ce0,
        we0 => ShuffleConvs_1_Downs_10_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Downs_10_q0);

    ShuffleConvs_1_Downs_8_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_8_address0,
        ce0 => ShuffleConvs_1_Downs_8_ce0,
        we0 => ShuffleConvs_1_Downs_8_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Downs_8_q0);

    ShuffleConvs_1_Shuff_1_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_1_address0,
        ce0 => ShuffleConvs_1_Shuff_1_ce0,
        we0 => ShuffleConvs_1_Shuff_1_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_1_q0);

    ShuffleConvs_1_Shuff_5_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_5_address0,
        ce0 => ShuffleConvs_1_Shuff_5_ce0,
        we0 => ShuffleConvs_1_Shuff_5_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_5_q0);

    ShuffleConvs_1_Shuff_7_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_7_address0,
        ce0 => ShuffleConvs_1_Shuff_7_ce0,
        we0 => ShuffleConvs_1_Shuff_7_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_7_q0);

    ShuffleConvs_1_Shuff_11_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_11_address0,
        ce0 => ShuffleConvs_1_Shuff_11_ce0,
        we0 => ShuffleConvs_1_Shuff_11_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_11_q0);

    ShuffleConvs_1_Shuff_13_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_13_address0,
        ce0 => ShuffleConvs_1_Shuff_13_ce0,
        we0 => ShuffleConvs_1_Shuff_13_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_13_q0);

    ShuffleConvs_1_Shuff_19_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_19_address0,
        ce0 => ShuffleConvs_1_Shuff_19_ce0,
        we0 => ShuffleConvs_1_Shuff_19_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_19_q0);

    ShuffleConvs_1_Shuff_21_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_21_address0,
        ce0 => ShuffleConvs_1_Shuff_21_ce0,
        we0 => ShuffleConvs_1_Shuff_21_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_21_q0);

    ShuffleConvs_1_Shuff_25_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_25_address0,
        ce0 => ShuffleConvs_1_Shuff_25_ce0,
        we0 => ShuffleConvs_1_Shuff_25_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_25_q0);

    ShuffleConvs_1_Shuff_27_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_27_address0,
        ce0 => ShuffleConvs_1_Shuff_27_ce0,
        we0 => ShuffleConvs_1_Shuff_27_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_27_q0);

    ShuffleConvs_1_Shuff_31_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_31_address0,
        ce0 => ShuffleConvs_1_Shuff_31_ce0,
        we0 => ShuffleConvs_1_Shuff_31_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_31_q0);

    ShuffleConvs_1_Shuff_33_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_33_address0,
        ce0 => ShuffleConvs_1_Shuff_33_ce0,
        we0 => ShuffleConvs_1_Shuff_33_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_33_q0);

    ShuffleConvs_1_Shuff_37_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_37_address0,
        ce0 => ShuffleConvs_1_Shuff_37_ce0,
        we0 => ShuffleConvs_1_Shuff_37_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_37_q0);

    ShuffleConvs_1_Shuff_41_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_41_address0,
        ce0 => ShuffleConvs_1_Shuff_41_ce0,
        we0 => ShuffleConvs_1_Shuff_41_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_41_q0);

    ShuffleConvs_1_Shuff_45_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_45_address0,
        ce0 => ShuffleConvs_1_Shuff_45_ce0,
        we0 => ShuffleConvs_1_Shuff_45_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_45_q0);

    ShuffleConvs_1_Shuff_47_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_47_address0,
        ce0 => ShuffleConvs_1_Shuff_47_ce0,
        we0 => ShuffleConvs_1_Shuff_47_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_1_Shuff_47_q0);

    ShuffleConvs_1_Shuff_50_U : component ShuffleNetV2_ShufRg6
    generic map (
        DataWidth => 32,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_50_address0,
        ce0 => ShuffleConvs_1_Shuff_50_ce0,
        we0 => ShuffleConvs_1_Shuff_50_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_1_Shuff_50_q0);

    ShuffleConvs_2_Downs_7_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_7_address0,
        ce0 => ShuffleConvs_2_Downs_7_ce0,
        we0 => ShuffleConvs_2_Downs_7_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_2_Downs_7_q0);

    ShuffleConvs_2_Downs_10_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_10_address0,
        ce0 => ShuffleConvs_2_Downs_10_ce0,
        we0 => ShuffleConvs_2_Downs_10_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_2_Downs_10_q0);

    ShuffleConvs_2_Downs_8_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_8_address0,
        ce0 => ShuffleConvs_2_Downs_8_ce0,
        we0 => ShuffleConvs_2_Downs_8_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_2_Downs_8_q0);

    ShuffleConvs_2_Shuff_5_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_5_address0,
        ce0 => ShuffleConvs_2_Shuff_5_ce0,
        we0 => ShuffleConvs_2_Shuff_5_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_2_Shuff_5_q0);

    ShuffleConvs_2_Shuff_7_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_7_address0,
        ce0 => ShuffleConvs_2_Shuff_7_ce0,
        we0 => ShuffleConvs_2_Shuff_7_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_2_Shuff_7_q0);

    ShuffleConvs_2_Shuff_8_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_8_address0,
        ce0 => ShuffleConvs_2_Shuff_8_ce0,
        we0 => ShuffleConvs_2_Shuff_8_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_2_Shuff_8_q0);

    ShuffleConvs_2_Shuff_11_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_11_address0,
        ce0 => ShuffleConvs_2_Shuff_11_ce0,
        we0 => ShuffleConvs_2_Shuff_11_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_2_Shuff_11_q0);

    ShuffleConvs_2_Shuff_13_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_13_address0,
        ce0 => ShuffleConvs_2_Shuff_13_ce0,
        we0 => ShuffleConvs_2_Shuff_13_we0,
        d0 => shuffle_conv_1x1_q1,
        q0 => ShuffleConvs_2_Shuff_13_q0);

    ShuffleConvs_2_Shuff_18_U : component ShuffleNetV2_Shufbak
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_18_address0,
        ce0 => ShuffleConvs_2_Shuff_18_ce0,
        we0 => ShuffleConvs_2_Shuff_18_we0,
        d0 => shuffle_conv_1x1_q0,
        q0 => ShuffleConvs_2_Shuff_18_q0);

    ShuffleConvs_0_Downs_9_U : component ShuffleNetV2_Shufbjl
    generic map (
        DataWidth => 32,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_9_address0,
        ce0 => ShuffleConvs_0_Downs_9_ce0,
        we0 => ShuffleConvs_0_Downs_9_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_0_Downs_9_q0);

    ShuffleConvs_0_Downs_6_U : component ShuffleNetV2_Shufbjl
    generic map (
        DataWidth => 32,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_6_address0,
        ce0 => ShuffleConvs_0_Downs_6_ce0,
        we0 => ShuffleConvs_0_Downs_6_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_0_Downs_6_q0);

    ShuffleConvs_0_Shuff_6_U : component ShuffleNetV2_Shufbjl
    generic map (
        DataWidth => 32,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_6_address0,
        ce0 => ShuffleConvs_0_Shuff_6_ce0,
        we0 => ShuffleConvs_0_Shuff_6_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_0_Shuff_6_q0);

    ShuffleConvs_0_Shuff_9_U : component ShuffleNetV2_Shufbjl
    generic map (
        DataWidth => 32,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_9_address0,
        ce0 => ShuffleConvs_0_Shuff_9_ce0,
        we0 => ShuffleConvs_0_Shuff_9_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_0_Shuff_9_q0);

    ShuffleConvs_0_Shuff_15_U : component ShuffleNetV2_Shufbjl
    generic map (
        DataWidth => 32,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_15_address0,
        ce0 => ShuffleConvs_0_Shuff_15_ce0,
        we0 => ShuffleConvs_0_Shuff_15_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_0_Shuff_15_q0);

    ShuffleConvs_1_Downs_9_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_9_address0,
        ce0 => ShuffleConvs_1_Downs_9_ce0,
        we0 => ShuffleConvs_1_Downs_9_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_1_Downs_9_q0);

    ShuffleConvs_1_Downs_6_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_6_address0,
        ce0 => ShuffleConvs_1_Downs_6_ce0,
        we0 => ShuffleConvs_1_Downs_6_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_1_Downs_6_q0);

    ShuffleConvs_1_Shuff_3_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_3_address0,
        ce0 => ShuffleConvs_1_Shuff_3_ce0,
        we0 => ShuffleConvs_1_Shuff_3_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_1_Shuff_3_q0);

    ShuffleConvs_1_Shuff_9_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_9_address0,
        ce0 => ShuffleConvs_1_Shuff_9_ce0,
        we0 => ShuffleConvs_1_Shuff_9_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_1_Shuff_9_q0);

    ShuffleConvs_1_Shuff_15_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_15_address0,
        ce0 => ShuffleConvs_1_Shuff_15_ce0,
        we0 => ShuffleConvs_1_Shuff_15_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_1_Shuff_15_q0);

    ShuffleConvs_1_Shuff_23_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_23_address0,
        ce0 => ShuffleConvs_1_Shuff_23_ce0,
        we0 => ShuffleConvs_1_Shuff_23_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_1_Shuff_23_q0);

    ShuffleConvs_1_Shuff_29_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_29_address0,
        ce0 => ShuffleConvs_1_Shuff_29_ce0,
        we0 => ShuffleConvs_1_Shuff_29_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_1_Shuff_29_q0);

    ShuffleConvs_1_Shuff_35_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_35_address0,
        ce0 => ShuffleConvs_1_Shuff_35_ce0,
        we0 => ShuffleConvs_1_Shuff_35_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_1_Shuff_35_q0);

    ShuffleConvs_1_Shuff_43_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_43_address0,
        ce0 => ShuffleConvs_1_Shuff_43_ce0,
        we0 => ShuffleConvs_1_Shuff_43_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_1_Shuff_43_q0);

    ShuffleConvs_1_Shuff_49_U : component ShuffleNetV2_Shufbom
    generic map (
        DataWidth => 32,
        AddressRange => 432,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_49_address0,
        ce0 => ShuffleConvs_1_Shuff_49_ce0,
        we0 => ShuffleConvs_1_Shuff_49_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_1_Shuff_49_q0);

    ShuffleConvs_2_Downs_9_U : component ShuffleNetV2_Shufbyn
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_9_address0,
        ce0 => ShuffleConvs_2_Downs_9_ce0,
        we0 => ShuffleConvs_2_Downs_9_we0,
        d0 => shuffle_conv_3x3_loa_15_reg_10073,
        q0 => ShuffleConvs_2_Downs_9_q0);

    ShuffleConvs_2_Downs_6_U : component ShuffleNetV2_Shufbyn
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_6_address0,
        ce0 => ShuffleConvs_2_Downs_6_ce0,
        we0 => ShuffleConvs_2_Downs_6_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_2_Downs_6_q0);

    ShuffleConvs_2_Shuff_6_U : component ShuffleNetV2_Shufbyn
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_6_address0,
        ce0 => ShuffleConvs_2_Shuff_6_ce0,
        we0 => ShuffleConvs_2_Shuff_6_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_2_Shuff_6_q0);

    ShuffleConvs_2_Shuff_9_U : component ShuffleNetV2_Shufbyn
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_9_address0,
        ce0 => ShuffleConvs_2_Shuff_9_ce0,
        we0 => ShuffleConvs_2_Shuff_9_we0,
        d0 => shuffle_conv_3x3_q0,
        q0 => ShuffleConvs_2_Shuff_9_q0);

    ShuffleConvs_2_Shuff_15_U : component ShuffleNetV2_Shufbyn
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_15_address0,
        ce0 => ShuffleConvs_2_Shuff_15_ce0,
        we0 => ShuffleConvs_2_Shuff_15_we0,
        d0 => shuffle_conv_3x3_q1,
        q0 => ShuffleConvs_2_Shuff_15_q0);

    conv1_bias_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_bias_address0,
        ce0 => conv1_bias_ce0,
        we0 => conv1_bias_we0,
        d0 => bias_q0,
        q0 => conv1_bias_q0);

    ShuffleConvs_0_Downs_3_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_3_address0,
        ce0 => ShuffleConvs_0_Downs_3_ce0,
        we0 => ShuffleConvs_0_Downs_3_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Downs_3_q0);

    ShuffleConvs_0_Downs_5_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_5_address0,
        ce0 => ShuffleConvs_0_Downs_5_ce0,
        we0 => ShuffleConvs_0_Downs_5_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Downs_5_q0);

    ShuffleConvs_0_Downs_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_address0,
        ce0 => ShuffleConvs_0_Downs_ce0,
        we0 => ShuffleConvs_0_Downs_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Downs_q0);

    ShuffleConvs_0_Downs_1_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_1_address0,
        ce0 => ShuffleConvs_0_Downs_1_ce0,
        we0 => ShuffleConvs_0_Downs_1_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Downs_1_q0);

    ShuffleConvs_0_Downs_4_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Downs_4_address0,
        ce0 => ShuffleConvs_0_Downs_4_ce0,
        we0 => ShuffleConvs_0_Downs_4_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Downs_4_q0);

    ShuffleConvs_0_Shuff_19_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_19_address0,
        ce0 => ShuffleConvs_0_Shuff_19_ce0,
        we0 => ShuffleConvs_0_Shuff_19_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Shuff_19_q0);

    ShuffleConvs_0_Shuff_20_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_20_address0,
        ce0 => ShuffleConvs_0_Shuff_20_ce0,
        we0 => ShuffleConvs_0_Shuff_20_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Shuff_20_q0);

    ShuffleConvs_0_Shuff_21_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_21_address0,
        ce0 => ShuffleConvs_0_Shuff_21_ce0,
        we0 => ShuffleConvs_0_Shuff_21_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Shuff_21_q0);

    ShuffleConvs_0_Shuff_22_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_22_address0,
        ce0 => ShuffleConvs_0_Shuff_22_ce0,
        we0 => ShuffleConvs_0_Shuff_22_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Shuff_22_q0);

    ShuffleConvs_0_Shuff_1_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_1_address0,
        ce0 => ShuffleConvs_0_Shuff_1_ce0,
        we0 => ShuffleConvs_0_Shuff_1_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Shuff_1_q0);

    ShuffleConvs_0_Shuff_3_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_3_address0,
        ce0 => ShuffleConvs_0_Shuff_3_ce0,
        we0 => ShuffleConvs_0_Shuff_3_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Shuff_3_q0);

    ShuffleConvs_0_Shuff_4_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_4_address0,
        ce0 => ShuffleConvs_0_Shuff_4_ce0,
        we0 => ShuffleConvs_0_Shuff_4_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Shuff_4_q0);

    ShuffleConvs_0_Shuff_17_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_17_address0,
        ce0 => ShuffleConvs_0_Shuff_17_ce0,
        we0 => ShuffleConvs_0_Shuff_17_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_0_Shuff_17_q0);

    ShuffleConvs_0_Shuff_U : component ShuffleNetV2_convbDo
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_0_Shuff_address0,
        ce0 => ShuffleConvs_0_Shuff_ce0,
        we0 => ShuffleConvs_0_Shuff_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_0_Shuff_q0);

    ShuffleConvs_1_Downs_3_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_3_address0,
        ce0 => ShuffleConvs_1_Downs_3_ce0,
        we0 => ShuffleConvs_1_Downs_3_we0,
        d0 => bias_load_16_reg_10330,
        q0 => ShuffleConvs_1_Downs_3_q0);

    ShuffleConvs_1_Downs_5_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_5_address0,
        ce0 => ShuffleConvs_1_Downs_5_ce0,
        we0 => ShuffleConvs_1_Downs_5_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Downs_5_q0);

    ShuffleConvs_1_Downs_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_address0,
        ce0 => ShuffleConvs_1_Downs_ce0,
        we0 => ShuffleConvs_1_Downs_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Downs_q0);

    ShuffleConvs_1_Downs_1_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_1_address0,
        ce0 => ShuffleConvs_1_Downs_1_ce0,
        we0 => ShuffleConvs_1_Downs_1_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Downs_1_q0);

    ShuffleConvs_1_Downs_4_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Downs_4_address0,
        ce0 => ShuffleConvs_1_Downs_4_ce0,
        we0 => ShuffleConvs_1_Downs_4_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Downs_4_q0);

    ShuffleConvs_1_Shuff_51_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_51_address0,
        ce0 => ShuffleConvs_1_Shuff_51_ce0,
        we0 => ShuffleConvs_1_Shuff_51_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_51_q0);

    ShuffleConvs_1_Shuff_52_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_52_address0,
        ce0 => ShuffleConvs_1_Shuff_52_ce0,
        we0 => ShuffleConvs_1_Shuff_52_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_52_q0);

    ShuffleConvs_1_Shuff_53_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_53_address0,
        ce0 => ShuffleConvs_1_Shuff_53_ce0,
        we0 => ShuffleConvs_1_Shuff_53_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_53_q0);

    ShuffleConvs_1_Shuff_54_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_54_address0,
        ce0 => ShuffleConvs_1_Shuff_54_ce0,
        we0 => ShuffleConvs_1_Shuff_54_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_54_q0);

    ShuffleConvs_1_Shuff_56_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_56_address0,
        ce0 => ShuffleConvs_1_Shuff_56_ce0,
        we0 => ShuffleConvs_1_Shuff_56_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_56_q0);

    ShuffleConvs_1_Shuff_57_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_57_address0,
        ce0 => ShuffleConvs_1_Shuff_57_ce0,
        we0 => ShuffleConvs_1_Shuff_57_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_57_q0);

    ShuffleConvs_1_Shuff_58_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_58_address0,
        ce0 => ShuffleConvs_1_Shuff_58_ce0,
        we0 => ShuffleConvs_1_Shuff_58_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_58_q0);

    ShuffleConvs_1_Shuff_59_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_59_address0,
        ce0 => ShuffleConvs_1_Shuff_59_ce0,
        we0 => ShuffleConvs_1_Shuff_59_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_59_q0);

    ShuffleConvs_1_Shuff_60_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_60_address0,
        ce0 => ShuffleConvs_1_Shuff_60_ce0,
        we0 => ShuffleConvs_1_Shuff_60_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_60_q0);

    ShuffleConvs_1_Shuff_61_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_61_address0,
        ce0 => ShuffleConvs_1_Shuff_61_ce0,
        we0 => ShuffleConvs_1_Shuff_61_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_61_q0);

    ShuffleConvs_1_Shuff_62_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_62_address0,
        ce0 => ShuffleConvs_1_Shuff_62_ce0,
        we0 => ShuffleConvs_1_Shuff_62_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_62_q0);

    ShuffleConvs_1_Shuff_63_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_63_address0,
        ce0 => ShuffleConvs_1_Shuff_63_ce0,
        we0 => ShuffleConvs_1_Shuff_63_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_63_q0);

    ShuffleConvs_1_Shuff_64_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_64_address0,
        ce0 => ShuffleConvs_1_Shuff_64_ce0,
        we0 => ShuffleConvs_1_Shuff_64_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_64_q0);

    ShuffleConvs_1_Shuff_65_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_65_address0,
        ce0 => ShuffleConvs_1_Shuff_65_ce0,
        we0 => ShuffleConvs_1_Shuff_65_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_65_q0);

    ShuffleConvs_1_Shuff_67_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_67_address0,
        ce0 => ShuffleConvs_1_Shuff_67_ce0,
        we0 => ShuffleConvs_1_Shuff_67_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_67_q0);

    ShuffleConvs_1_Shuff_68_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_68_address0,
        ce0 => ShuffleConvs_1_Shuff_68_ce0,
        we0 => ShuffleConvs_1_Shuff_68_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_68_q0);

    ShuffleConvs_1_Shuff_69_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_69_address0,
        ce0 => ShuffleConvs_1_Shuff_69_ce0,
        we0 => ShuffleConvs_1_Shuff_69_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_69_q0);

    ShuffleConvs_1_Shuff_70_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_70_address0,
        ce0 => ShuffleConvs_1_Shuff_70_ce0,
        we0 => ShuffleConvs_1_Shuff_70_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_70_q0);

    ShuffleConvs_1_Shuff_71_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_71_address0,
        ce0 => ShuffleConvs_1_Shuff_71_ce0,
        we0 => ShuffleConvs_1_Shuff_71_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_71_q0);

    ShuffleConvs_1_Shuff_17_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_17_address0,
        ce0 => ShuffleConvs_1_Shuff_17_ce0,
        we0 => ShuffleConvs_1_Shuff_17_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_17_q0);

    ShuffleConvs_1_Shuff_39_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_39_address0,
        ce0 => ShuffleConvs_1_Shuff_39_ce0,
        we0 => ShuffleConvs_1_Shuff_39_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_39_q0);

    ShuffleConvs_1_Shuff_55_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_55_address0,
        ce0 => ShuffleConvs_1_Shuff_55_ce0,
        we0 => ShuffleConvs_1_Shuff_55_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_55_q0);

    ShuffleConvs_1_Shuff_66_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_66_address0,
        ce0 => ShuffleConvs_1_Shuff_66_ce0,
        we0 => ShuffleConvs_1_Shuff_66_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_1_Shuff_66_q0);

    ShuffleConvs_1_Shuff_U : component ShuffleNetV2_ShufbSr
    generic map (
        DataWidth => 32,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_1_Shuff_address0,
        ce0 => ShuffleConvs_1_Shuff_ce0,
        we0 => ShuffleConvs_1_Shuff_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_1_Shuff_q0);

    ShuffleConvs_2_Downs_3_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_3_address0,
        ce0 => ShuffleConvs_2_Downs_3_ce0,
        we0 => ShuffleConvs_2_Downs_3_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Downs_3_q0);

    ShuffleConvs_2_Downs_5_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_5_address0,
        ce0 => ShuffleConvs_2_Downs_5_ce0,
        we0 => ShuffleConvs_2_Downs_5_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Downs_5_q0);

    ShuffleConvs_2_Downs_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_address0,
        ce0 => ShuffleConvs_2_Downs_ce0,
        we0 => ShuffleConvs_2_Downs_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Downs_q0);

    ShuffleConvs_2_Downs_1_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_1_address0,
        ce0 => ShuffleConvs_2_Downs_1_ce0,
        we0 => ShuffleConvs_2_Downs_1_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Downs_1_q0);

    ShuffleConvs_2_Downs_4_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Downs_4_address0,
        ce0 => ShuffleConvs_2_Downs_4_ce0,
        we0 => ShuffleConvs_2_Downs_4_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Downs_4_q0);

    ShuffleConvs_2_Shuff_19_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_19_address0,
        ce0 => ShuffleConvs_2_Shuff_19_ce0,
        we0 => ShuffleConvs_2_Shuff_19_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Shuff_19_q0);

    ShuffleConvs_2_Shuff_20_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_20_address0,
        ce0 => ShuffleConvs_2_Shuff_20_ce0,
        we0 => ShuffleConvs_2_Shuff_20_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Shuff_20_q0);

    ShuffleConvs_2_Shuff_21_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_21_address0,
        ce0 => ShuffleConvs_2_Shuff_21_ce0,
        we0 => ShuffleConvs_2_Shuff_21_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Shuff_21_q0);

    ShuffleConvs_2_Shuff_22_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_22_address0,
        ce0 => ShuffleConvs_2_Shuff_22_ce0,
        we0 => ShuffleConvs_2_Shuff_22_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Shuff_22_q0);

    ShuffleConvs_2_Shuff_1_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_1_address0,
        ce0 => ShuffleConvs_2_Shuff_1_ce0,
        we0 => ShuffleConvs_2_Shuff_1_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Shuff_1_q0);

    ShuffleConvs_2_Shuff_3_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_3_address0,
        ce0 => ShuffleConvs_2_Shuff_3_ce0,
        we0 => ShuffleConvs_2_Shuff_3_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Shuff_3_q0);

    ShuffleConvs_2_Shuff_4_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_4_address0,
        ce0 => ShuffleConvs_2_Shuff_4_ce0,
        we0 => ShuffleConvs_2_Shuff_4_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Shuff_4_q0);

    ShuffleConvs_2_Shuff_17_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_17_address0,
        ce0 => ShuffleConvs_2_Shuff_17_ce0,
        we0 => ShuffleConvs_2_Shuff_17_we0,
        d0 => bias_q0,
        q0 => ShuffleConvs_2_Shuff_17_q0);

    ShuffleConvs_2_Shuff_U : component ShuffleNetV2_Shufclv
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ShuffleConvs_2_Shuff_address0,
        ce0 => ShuffleConvs_2_Shuff_ce0,
        we0 => ShuffleConvs_2_Shuff_we0,
        d0 => bias_q1,
        q0 => ShuffleConvs_2_Shuff_q0);

    conv_last_bias_U : component ShuffleNetV2_convczy
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_last_bias_address0,
        ce0 => conv_last_bias_ce0,
        we0 => conv_last_bias_we0,
        d0 => bias_q0,
        q0 => conv_last_bias_q0);

    fc_bias_U : component ShuffleNetV2_fc_bcAy
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fc_bias_address0,
        ce0 => fc_bias_ce0,
        we0 => fc_bias_we0,
        d0 => bias_q1,
        q0 => fc_bias_q0);

    conv1_output_U : component ShuffleNetV2_convcBy
    generic map (
        DataWidth => 32,
        AddressRange => 24576,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_output_address0,
        ce0 => conv1_output_ce0,
        we0 => conv1_output_we0,
        d0 => grp_conv1_fu_3549_conv1_output_d0,
        q0 => conv1_output_q0);

    downsampleunit0_outp_U : component ShuffleNetV2_downcCy
    generic map (
        DataWidth => 32,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => downsampleunit0_outp_address0,
        ce0 => downsampleunit0_outp_ce0,
        we0 => downsampleunit0_outp_we0,
        d0 => grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0,
        q0 => downsampleunit0_outp_q0,
        address1 => grp_ShuffleUnit0_fu_3401_input_r_address1,
        ce1 => downsampleunit0_outp_ce1,
        q1 => downsampleunit0_outp_q1);

    shuffleunit0_0_outpu_U : component ShuffleNetV2_downcCy
    generic map (
        DataWidth => 32,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit0_0_outpu_address0,
        ce0 => shuffleunit0_0_outpu_ce0,
        we0 => shuffleunit0_0_outpu_we0,
        d0 => grp_ShuffleUnit0_fu_3401_output_r_d0,
        q0 => shuffleunit0_0_outpu_q0,
        address1 => grp_ShuffleUnit0_fu_3401_input_r_address1,
        ce1 => shuffleunit0_0_outpu_ce1,
        q1 => shuffleunit0_0_outpu_q1);

    shuffleunit0_1_outpu_U : component ShuffleNetV2_downcCy
    generic map (
        DataWidth => 32,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit0_1_outpu_address0,
        ce0 => shuffleunit0_1_outpu_ce0,
        we0 => shuffleunit0_1_outpu_we0,
        d0 => grp_ShuffleUnit0_fu_3401_output_r_d0,
        q0 => shuffleunit0_1_outpu_q0,
        address1 => grp_ShuffleUnit0_fu_3401_input_r_address1,
        ce1 => shuffleunit0_1_outpu_ce1,
        q1 => shuffleunit0_1_outpu_q1);

    shuffleunit0_2_outpu_U : component ShuffleNetV2_shufcFz
    generic map (
        DataWidth => 32,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit0_2_outpu_address0,
        ce0 => shuffleunit0_2_outpu_ce0,
        we0 => shuffleunit0_2_outpu_we0,
        d0 => grp_ShuffleUnit0_fu_3401_output_r_d0,
        q0 => shuffleunit0_2_outpu_q0);

    downsampleunit1_outp_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => downsampleunit1_outp_address0,
        ce0 => downsampleunit1_outp_ce0,
        we0 => downsampleunit1_outp_we0,
        d0 => grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0,
        q0 => downsampleunit1_outp_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => downsampleunit1_outp_ce1,
        q1 => downsampleunit1_outp_q1);

    shuffleunit1_0_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_0_outpu_address0,
        ce0 => shuffleunit1_0_outpu_ce0,
        we0 => shuffleunit1_0_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_0_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_0_outpu_ce1,
        q1 => shuffleunit1_0_outpu_q1);

    shuffleunit1_1_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_1_outpu_address0,
        ce0 => shuffleunit1_1_outpu_ce0,
        we0 => shuffleunit1_1_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_1_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_1_outpu_ce1,
        q1 => shuffleunit1_1_outpu_q1);

    shuffleunit1_2_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_2_outpu_address0,
        ce0 => shuffleunit1_2_outpu_ce0,
        we0 => shuffleunit1_2_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_2_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_2_outpu_ce1,
        q1 => shuffleunit1_2_outpu_q1);

    shuffleunit1_3_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_3_outpu_address0,
        ce0 => shuffleunit1_3_outpu_ce0,
        we0 => shuffleunit1_3_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_3_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_3_outpu_ce1,
        q1 => shuffleunit1_3_outpu_q1);

    shuffleunit1_4_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_4_outpu_address0,
        ce0 => shuffleunit1_4_outpu_ce0,
        we0 => shuffleunit1_4_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_4_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_4_outpu_ce1,
        q1 => shuffleunit1_4_outpu_q1);

    shuffleunit1_5_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_5_outpu_address0,
        ce0 => shuffleunit1_5_outpu_ce0,
        we0 => shuffleunit1_5_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_5_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_5_outpu_ce1,
        q1 => shuffleunit1_5_outpu_q1);

    shuffleunit1_6_outpu_U : component ShuffleNetV2_downcGz
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_6_outpu_address0,
        ce0 => shuffleunit1_6_outpu_ce0,
        we0 => shuffleunit1_6_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_6_outpu_q0,
        address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        ce1 => shuffleunit1_6_outpu_ce1,
        q1 => shuffleunit1_6_outpu_q1);

    shuffleunit1_7_outpu_U : component ShuffleNetV2_shufcOA
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit1_7_outpu_address0,
        ce0 => shuffleunit1_7_outpu_ce0,
        we0 => shuffleunit1_7_outpu_we0,
        d0 => grp_ShuffleUnit1_fu_3437_output_r_d0,
        q0 => shuffleunit1_7_outpu_q0);

    downsampleunit2_outp_U : component ShuffleNetV2_downcPA
    generic map (
        DataWidth => 32,
        AddressRange => 3072,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => downsampleunit2_outp_address0,
        ce0 => downsampleunit2_outp_ce0,
        we0 => downsampleunit2_outp_we0,
        d0 => grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0,
        q0 => downsampleunit2_outp_q0,
        address1 => grp_ShuffleUnit2_fu_3513_input_r_address1,
        ce1 => downsampleunit2_outp_ce1,
        q1 => downsampleunit2_outp_q1);

    shuffleunit2_0_outpu_U : component ShuffleNetV2_downcPA
    generic map (
        DataWidth => 32,
        AddressRange => 3072,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit2_0_outpu_address0,
        ce0 => shuffleunit2_0_outpu_ce0,
        we0 => shuffleunit2_0_outpu_we0,
        d0 => grp_ShuffleUnit2_fu_3513_output_r_d0,
        q0 => shuffleunit2_0_outpu_q0,
        address1 => grp_ShuffleUnit2_fu_3513_input_r_address1,
        ce1 => shuffleunit2_0_outpu_ce1,
        q1 => shuffleunit2_0_outpu_q1);

    shuffleunit2_1_outpu_U : component ShuffleNetV2_downcPA
    generic map (
        DataWidth => 32,
        AddressRange => 3072,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit2_1_outpu_address0,
        ce0 => shuffleunit2_1_outpu_ce0,
        we0 => shuffleunit2_1_outpu_we0,
        d0 => grp_ShuffleUnit2_fu_3513_output_r_d0,
        q0 => shuffleunit2_1_outpu_q0,
        address1 => grp_ShuffleUnit2_fu_3513_input_r_address1,
        ce1 => shuffleunit2_1_outpu_ce1,
        q1 => shuffleunit2_1_outpu_q1);

    shuffleunit2_2_outpu_U : component ShuffleNetV2_shufcSB
    generic map (
        DataWidth => 32,
        AddressRange => 3072,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => shuffleunit2_2_outpu_address0,
        ce0 => shuffleunit2_2_outpu_ce0,
        we0 => shuffleunit2_2_outpu_we0,
        d0 => grp_ShuffleUnit2_fu_3513_output_r_d0,
        q0 => shuffleunit2_2_outpu_q0);

    conv_last_output_U : component ShuffleNetV2_convcTB
    generic map (
        DataWidth => 32,
        AddressRange => 8192,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_last_output_address0,
        ce0 => conv_last_output_ce0,
        we0 => conv_last_output_we0,
        d0 => grp_conv_last_fu_3561_output_r_d0,
        q0 => conv_last_output_q0);

    avgpool_output_U : component ShuffleNetV2_convczy
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => avgpool_output_address0,
        ce0 => avgpool_output_ce0,
        we0 => avgpool_output_we0,
        d0 => grp_avgpool_fu_3573_output_r_d0,
        q0 => avgpool_output_q0);

    grp_DownsampleUnit0_fu_3317 : component DownsampleUnit0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DownsampleUnit0_fu_3317_ap_start,
        ap_done => grp_DownsampleUnit0_fu_3317_ap_done,
        ap_idle => grp_DownsampleUnit0_fu_3317_ap_idle,
        ap_ready => grp_DownsampleUnit0_fu_3317_ap_ready,
        input_r_address0 => grp_DownsampleUnit0_fu_3317_input_r_address0,
        input_r_ce0 => grp_DownsampleUnit0_fu_3317_input_r_ce0,
        input_r_q0 => conv1_output_q0,
        conv1r_weight_address0 => grp_DownsampleUnit0_fu_3317_conv1r_weight_address0,
        conv1r_weight_ce0 => grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0,
        conv1r_weight_q0 => ShuffleConvs_0_Downs_7_q0,
        conv1r_bias_address0 => grp_DownsampleUnit0_fu_3317_conv1r_bias_address0,
        conv1r_bias_ce0 => grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0,
        conv1r_bias_q0 => ShuffleConvs_0_Downs_3_q0,
        conv2r_weight_address0 => grp_DownsampleUnit0_fu_3317_conv2r_weight_address0,
        conv2r_weight_ce0 => grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0,
        conv2r_weight_q0 => ShuffleConvs_0_Downs_9_q0,
        conv2r_bias_address0 => grp_DownsampleUnit0_fu_3317_conv2r_bias_address0,
        conv2r_bias_ce0 => grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0,
        conv2r_bias_q0 => ShuffleConvs_0_Downs_5_q0,
        conv3r_weight_address0 => grp_DownsampleUnit0_fu_3317_conv3r_weight_address0,
        conv3r_weight_ce0 => grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0,
        conv3r_weight_q0 => ShuffleConvs_0_Downs_10_q0,
        conv3r_bias_address0 => grp_DownsampleUnit0_fu_3317_conv3r_bias_address0,
        conv3r_bias_ce0 => grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0,
        conv3r_bias_q0 => ShuffleConvs_0_Downs_q0,
        conv1l_weight_address0 => grp_DownsampleUnit0_fu_3317_conv1l_weight_address0,
        conv1l_weight_ce0 => grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0,
        conv1l_weight_q0 => ShuffleConvs_0_Downs_6_q0,
        conv1l_bias_address0 => grp_DownsampleUnit0_fu_3317_conv1l_bias_address0,
        conv1l_bias_ce0 => grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0,
        conv1l_bias_q0 => ShuffleConvs_0_Downs_1_q0,
        conv2l_weight_address0 => grp_DownsampleUnit0_fu_3317_conv2l_weight_address0,
        conv2l_weight_ce0 => grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0,
        conv2l_weight_q0 => ShuffleConvs_0_Downs_8_q0,
        conv2l_bias_address0 => grp_DownsampleUnit0_fu_3317_conv2l_bias_address0,
        conv2l_bias_ce0 => grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0,
        conv2l_bias_q0 => ShuffleConvs_0_Downs_4_q0,
        downsampleunit0_outp_address0 => grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0,
        downsampleunit0_outp_ce0 => grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0,
        downsampleunit0_outp_we0 => grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0,
        downsampleunit0_outp_d0 => grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0);

    grp_DownsampleUnit1_fu_3345 : component DownsampleUnit1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DownsampleUnit1_fu_3345_ap_start,
        ap_done => grp_DownsampleUnit1_fu_3345_ap_done,
        ap_idle => grp_DownsampleUnit1_fu_3345_ap_idle,
        ap_ready => grp_DownsampleUnit1_fu_3345_ap_ready,
        conv1r_weight_address0 => grp_DownsampleUnit1_fu_3345_conv1r_weight_address0,
        conv1r_weight_ce0 => grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0,
        conv1r_weight_q0 => ShuffleConvs_1_Downs_7_q0,
        conv1r_bias_address0 => grp_DownsampleUnit1_fu_3345_conv1r_bias_address0,
        conv1r_bias_ce0 => grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0,
        conv1r_bias_q0 => ShuffleConvs_1_Downs_3_q0,
        conv2r_weight_address0 => grp_DownsampleUnit1_fu_3345_conv2r_weight_address0,
        conv2r_weight_ce0 => grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0,
        conv2r_weight_q0 => ShuffleConvs_1_Downs_9_q0,
        conv2r_bias_address0 => grp_DownsampleUnit1_fu_3345_conv2r_bias_address0,
        conv2r_bias_ce0 => grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0,
        conv2r_bias_q0 => ShuffleConvs_1_Downs_5_q0,
        conv3r_weight_address0 => grp_DownsampleUnit1_fu_3345_conv3r_weight_address0,
        conv3r_weight_ce0 => grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0,
        conv3r_weight_q0 => ShuffleConvs_1_Downs_10_q0,
        conv3r_bias_address0 => grp_DownsampleUnit1_fu_3345_conv3r_bias_address0,
        conv3r_bias_ce0 => grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0,
        conv3r_bias_q0 => ShuffleConvs_1_Downs_q0,
        conv1l_weight_address0 => grp_DownsampleUnit1_fu_3345_conv1l_weight_address0,
        conv1l_weight_ce0 => grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0,
        conv1l_weight_q0 => ShuffleConvs_1_Downs_6_q0,
        conv1l_bias_address0 => grp_DownsampleUnit1_fu_3345_conv1l_bias_address0,
        conv1l_bias_ce0 => grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0,
        conv1l_bias_q0 => ShuffleConvs_1_Downs_1_q0,
        conv2l_weight_address0 => grp_DownsampleUnit1_fu_3345_conv2l_weight_address0,
        conv2l_weight_ce0 => grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0,
        conv2l_weight_q0 => ShuffleConvs_1_Downs_8_q0,
        conv2l_bias_address0 => grp_DownsampleUnit1_fu_3345_conv2l_bias_address0,
        conv2l_bias_ce0 => grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0,
        conv2l_bias_q0 => ShuffleConvs_1_Downs_4_q0,
        shuffleunit0_2_outpu_address0 => grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0,
        shuffleunit0_2_outpu_ce0 => grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0,
        shuffleunit0_2_outpu_q0 => shuffleunit0_2_outpu_q0,
        downsampleunit1_outp_address0 => grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0,
        downsampleunit1_outp_ce0 => grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0,
        downsampleunit1_outp_we0 => grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0,
        downsampleunit1_outp_d0 => grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0);

    grp_DownsampleUnit2_fu_3373 : component DownsampleUnit2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DownsampleUnit2_fu_3373_ap_start,
        ap_done => grp_DownsampleUnit2_fu_3373_ap_done,
        ap_idle => grp_DownsampleUnit2_fu_3373_ap_idle,
        ap_ready => grp_DownsampleUnit2_fu_3373_ap_ready,
        conv1r_weight_address0 => grp_DownsampleUnit2_fu_3373_conv1r_weight_address0,
        conv1r_weight_ce0 => grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0,
        conv1r_weight_q0 => ShuffleConvs_2_Downs_7_q0,
        conv1r_bias_address0 => grp_DownsampleUnit2_fu_3373_conv1r_bias_address0,
        conv1r_bias_ce0 => grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0,
        conv1r_bias_q0 => ShuffleConvs_2_Downs_3_q0,
        conv2r_weight_address0 => grp_DownsampleUnit2_fu_3373_conv2r_weight_address0,
        conv2r_weight_ce0 => grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0,
        conv2r_weight_q0 => ShuffleConvs_2_Downs_9_q0,
        conv2r_bias_address0 => grp_DownsampleUnit2_fu_3373_conv2r_bias_address0,
        conv2r_bias_ce0 => grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0,
        conv2r_bias_q0 => ShuffleConvs_2_Downs_5_q0,
        conv3r_weight_address0 => grp_DownsampleUnit2_fu_3373_conv3r_weight_address0,
        conv3r_weight_ce0 => grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0,
        conv3r_weight_q0 => ShuffleConvs_2_Downs_10_q0,
        conv3r_bias_address0 => grp_DownsampleUnit2_fu_3373_conv3r_bias_address0,
        conv3r_bias_ce0 => grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0,
        conv3r_bias_q0 => ShuffleConvs_2_Downs_q0,
        conv1l_weight_address0 => grp_DownsampleUnit2_fu_3373_conv1l_weight_address0,
        conv1l_weight_ce0 => grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0,
        conv1l_weight_q0 => ShuffleConvs_2_Downs_6_q0,
        conv1l_bias_address0 => grp_DownsampleUnit2_fu_3373_conv1l_bias_address0,
        conv1l_bias_ce0 => grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0,
        conv1l_bias_q0 => ShuffleConvs_2_Downs_1_q0,
        conv2l_weight_address0 => grp_DownsampleUnit2_fu_3373_conv2l_weight_address0,
        conv2l_weight_ce0 => grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0,
        conv2l_weight_q0 => ShuffleConvs_2_Downs_8_q0,
        conv2l_bias_address0 => grp_DownsampleUnit2_fu_3373_conv2l_bias_address0,
        conv2l_bias_ce0 => grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0,
        conv2l_bias_q0 => ShuffleConvs_2_Downs_4_q0,
        shuffleunit1_7_outpu_address0 => grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0,
        shuffleunit1_7_outpu_ce0 => grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0,
        shuffleunit1_7_outpu_q0 => shuffleunit1_7_outpu_q0,
        downsampleunit2_outp_address0 => grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0,
        downsampleunit2_outp_ce0 => grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0,
        downsampleunit2_outp_we0 => grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0,
        downsampleunit2_outp_d0 => grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0);

    grp_ShuffleUnit0_fu_3401 : component ShuffleUnit0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ShuffleUnit0_fu_3401_ap_start,
        ap_done => grp_ShuffleUnit0_fu_3401_ap_done,
        ap_idle => grp_ShuffleUnit0_fu_3401_ap_idle,
        ap_ready => grp_ShuffleUnit0_fu_3401_ap_ready,
        input_r_address0 => grp_ShuffleUnit0_fu_3401_input_r_address0,
        input_r_ce0 => grp_ShuffleUnit0_fu_3401_input_r_ce0,
        input_r_q0 => grp_ShuffleUnit0_fu_3401_input_r_q0,
        input_r_address1 => grp_ShuffleUnit0_fu_3401_input_r_address1,
        input_r_ce1 => grp_ShuffleUnit0_fu_3401_input_r_ce1,
        input_r_q1 => grp_ShuffleUnit0_fu_3401_input_r_q1,
        conv1_weight_address0 => grp_ShuffleUnit0_fu_3401_conv1_weight_address0,
        conv1_weight_ce0 => grp_ShuffleUnit0_fu_3401_conv1_weight_ce0,
        conv1_weight_q0 => grp_ShuffleUnit0_fu_3401_conv1_weight_q0,
        conv1_bias_address0 => grp_ShuffleUnit0_fu_3401_conv1_bias_address0,
        conv1_bias_ce0 => grp_ShuffleUnit0_fu_3401_conv1_bias_ce0,
        conv1_bias_q0 => grp_ShuffleUnit0_fu_3401_conv1_bias_q0,
        conv2_weight_address0 => grp_ShuffleUnit0_fu_3401_conv2_weight_address0,
        conv2_weight_ce0 => grp_ShuffleUnit0_fu_3401_conv2_weight_ce0,
        conv2_weight_q0 => grp_ShuffleUnit0_fu_3401_conv2_weight_q0,
        conv2_bias_address0 => grp_ShuffleUnit0_fu_3401_conv2_bias_address0,
        conv2_bias_ce0 => grp_ShuffleUnit0_fu_3401_conv2_bias_ce0,
        conv2_bias_q0 => grp_ShuffleUnit0_fu_3401_conv2_bias_q0,
        conv3_weight_address0 => grp_ShuffleUnit0_fu_3401_conv3_weight_address0,
        conv3_weight_ce0 => grp_ShuffleUnit0_fu_3401_conv3_weight_ce0,
        conv3_weight_q0 => grp_ShuffleUnit0_fu_3401_conv3_weight_q0,
        conv3_bias_address0 => grp_ShuffleUnit0_fu_3401_conv3_bias_address0,
        conv3_bias_ce0 => grp_ShuffleUnit0_fu_3401_conv3_bias_ce0,
        conv3_bias_q0 => grp_ShuffleUnit0_fu_3401_conv3_bias_q0,
        output_r_address0 => grp_ShuffleUnit0_fu_3401_output_r_address0,
        output_r_ce0 => grp_ShuffleUnit0_fu_3401_output_r_ce0,
        output_r_we0 => grp_ShuffleUnit0_fu_3401_output_r_we0,
        output_r_d0 => grp_ShuffleUnit0_fu_3401_output_r_d0);

    grp_ShuffleUnit1_fu_3437 : component ShuffleUnit1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ShuffleUnit1_fu_3437_ap_start,
        ap_done => grp_ShuffleUnit1_fu_3437_ap_done,
        ap_idle => grp_ShuffleUnit1_fu_3437_ap_idle,
        ap_ready => grp_ShuffleUnit1_fu_3437_ap_ready,
        input_r_address0 => grp_ShuffleUnit1_fu_3437_input_r_address0,
        input_r_ce0 => grp_ShuffleUnit1_fu_3437_input_r_ce0,
        input_r_q0 => grp_ShuffleUnit1_fu_3437_input_r_q0,
        input_r_address1 => grp_ShuffleUnit1_fu_3437_input_r_address1,
        input_r_ce1 => grp_ShuffleUnit1_fu_3437_input_r_ce1,
        input_r_q1 => grp_ShuffleUnit1_fu_3437_input_r_q1,
        conv1_weight_address0 => grp_ShuffleUnit1_fu_3437_conv1_weight_address0,
        conv1_weight_ce0 => grp_ShuffleUnit1_fu_3437_conv1_weight_ce0,
        conv1_weight_q0 => grp_ShuffleUnit1_fu_3437_conv1_weight_q0,
        conv1_bias_address0 => grp_ShuffleUnit1_fu_3437_conv1_bias_address0,
        conv1_bias_ce0 => grp_ShuffleUnit1_fu_3437_conv1_bias_ce0,
        conv1_bias_q0 => grp_ShuffleUnit1_fu_3437_conv1_bias_q0,
        conv2_weight_address0 => grp_ShuffleUnit1_fu_3437_conv2_weight_address0,
        conv2_weight_ce0 => grp_ShuffleUnit1_fu_3437_conv2_weight_ce0,
        conv2_weight_q0 => grp_ShuffleUnit1_fu_3437_conv2_weight_q0,
        conv2_bias_address0 => grp_ShuffleUnit1_fu_3437_conv2_bias_address0,
        conv2_bias_ce0 => grp_ShuffleUnit1_fu_3437_conv2_bias_ce0,
        conv2_bias_q0 => grp_ShuffleUnit1_fu_3437_conv2_bias_q0,
        conv3_weight_address0 => grp_ShuffleUnit1_fu_3437_conv3_weight_address0,
        conv3_weight_ce0 => grp_ShuffleUnit1_fu_3437_conv3_weight_ce0,
        conv3_weight_q0 => grp_ShuffleUnit1_fu_3437_conv3_weight_q0,
        conv3_bias_address0 => grp_ShuffleUnit1_fu_3437_conv3_bias_address0,
        conv3_bias_ce0 => grp_ShuffleUnit1_fu_3437_conv3_bias_ce0,
        conv3_bias_q0 => grp_ShuffleUnit1_fu_3437_conv3_bias_q0,
        output_r_address0 => grp_ShuffleUnit1_fu_3437_output_r_address0,
        output_r_ce0 => grp_ShuffleUnit1_fu_3437_output_r_ce0,
        output_r_we0 => grp_ShuffleUnit1_fu_3437_output_r_we0,
        output_r_d0 => grp_ShuffleUnit1_fu_3437_output_r_d0);

    grp_ShuffleUnit2_fu_3513 : component ShuffleUnit2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ShuffleUnit2_fu_3513_ap_start,
        ap_done => grp_ShuffleUnit2_fu_3513_ap_done,
        ap_idle => grp_ShuffleUnit2_fu_3513_ap_idle,
        ap_ready => grp_ShuffleUnit2_fu_3513_ap_ready,
        input_r_address0 => grp_ShuffleUnit2_fu_3513_input_r_address0,
        input_r_ce0 => grp_ShuffleUnit2_fu_3513_input_r_ce0,
        input_r_q0 => grp_ShuffleUnit2_fu_3513_input_r_q0,
        input_r_address1 => grp_ShuffleUnit2_fu_3513_input_r_address1,
        input_r_ce1 => grp_ShuffleUnit2_fu_3513_input_r_ce1,
        input_r_q1 => grp_ShuffleUnit2_fu_3513_input_r_q1,
        conv1_weight_address0 => grp_ShuffleUnit2_fu_3513_conv1_weight_address0,
        conv1_weight_ce0 => grp_ShuffleUnit2_fu_3513_conv1_weight_ce0,
        conv1_weight_q0 => grp_ShuffleUnit2_fu_3513_conv1_weight_q0,
        conv1_bias_address0 => grp_ShuffleUnit2_fu_3513_conv1_bias_address0,
        conv1_bias_ce0 => grp_ShuffleUnit2_fu_3513_conv1_bias_ce0,
        conv1_bias_q0 => grp_ShuffleUnit2_fu_3513_conv1_bias_q0,
        conv2_weight_address0 => grp_ShuffleUnit2_fu_3513_conv2_weight_address0,
        conv2_weight_ce0 => grp_ShuffleUnit2_fu_3513_conv2_weight_ce0,
        conv2_weight_q0 => grp_ShuffleUnit2_fu_3513_conv2_weight_q0,
        conv2_bias_address0 => grp_ShuffleUnit2_fu_3513_conv2_bias_address0,
        conv2_bias_ce0 => grp_ShuffleUnit2_fu_3513_conv2_bias_ce0,
        conv2_bias_q0 => grp_ShuffleUnit2_fu_3513_conv2_bias_q0,
        conv3_weight_address0 => grp_ShuffleUnit2_fu_3513_conv3_weight_address0,
        conv3_weight_ce0 => grp_ShuffleUnit2_fu_3513_conv3_weight_ce0,
        conv3_weight_q0 => grp_ShuffleUnit2_fu_3513_conv3_weight_q0,
        conv3_bias_address0 => grp_ShuffleUnit2_fu_3513_conv3_bias_address0,
        conv3_bias_ce0 => grp_ShuffleUnit2_fu_3513_conv3_bias_ce0,
        conv3_bias_q0 => grp_ShuffleUnit2_fu_3513_conv3_bias_q0,
        output_r_address0 => grp_ShuffleUnit2_fu_3513_output_r_address0,
        output_r_ce0 => grp_ShuffleUnit2_fu_3513_output_r_ce0,
        output_r_we0 => grp_ShuffleUnit2_fu_3513_output_r_we0,
        output_r_d0 => grp_ShuffleUnit2_fu_3513_output_r_d0);

    grp_conv1_fu_3549 : component conv1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_fu_3549_ap_start,
        ap_done => grp_conv1_fu_3549_ap_done,
        ap_idle => grp_conv1_fu_3549_ap_idle,
        ap_ready => grp_conv1_fu_3549_ap_ready,
        input_r_address0 => grp_conv1_fu_3549_input_r_address0,
        input_r_ce0 => grp_conv1_fu_3549_input_r_ce0,
        input_r_q0 => image_r_q0,
        weight_address0 => grp_conv1_fu_3549_weight_address0,
        weight_ce0 => grp_conv1_fu_3549_weight_ce0,
        weight_q0 => conv1_weight_q0,
        bias_address0 => grp_conv1_fu_3549_bias_address0,
        bias_ce0 => grp_conv1_fu_3549_bias_ce0,
        bias_q0 => conv1_bias_q0,
        conv1_output_address0 => grp_conv1_fu_3549_conv1_output_address0,
        conv1_output_ce0 => grp_conv1_fu_3549_conv1_output_ce0,
        conv1_output_we0 => grp_conv1_fu_3549_conv1_output_we0,
        conv1_output_d0 => grp_conv1_fu_3549_conv1_output_d0);

    grp_conv_last_fu_3561 : component conv_last
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_last_fu_3561_ap_start,
        ap_done => grp_conv_last_fu_3561_ap_done,
        ap_idle => grp_conv_last_fu_3561_ap_idle,
        ap_ready => grp_conv_last_fu_3561_ap_ready,
        weight_address0 => grp_conv_last_fu_3561_weight_address0,
        weight_ce0 => grp_conv_last_fu_3561_weight_ce0,
        weight_q0 => conv_last_weight_q0,
        bias_address0 => grp_conv_last_fu_3561_bias_address0,
        bias_ce0 => grp_conv_last_fu_3561_bias_ce0,
        bias_q0 => conv_last_bias_q0,
        output_r_address0 => grp_conv_last_fu_3561_output_r_address0,
        output_r_ce0 => grp_conv_last_fu_3561_output_r_ce0,
        output_r_we0 => grp_conv_last_fu_3561_output_r_we0,
        output_r_d0 => grp_conv_last_fu_3561_output_r_d0,
        shuffleunit2_2_outpu_address0 => grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0,
        shuffleunit2_2_outpu_ce0 => grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0,
        shuffleunit2_2_outpu_q0 => shuffleunit2_2_outpu_q0);

    grp_avgpool_fu_3573 : component avgpool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_avgpool_fu_3573_ap_start,
        ap_done => grp_avgpool_fu_3573_ap_done,
        ap_idle => grp_avgpool_fu_3573_ap_idle,
        ap_ready => grp_avgpool_fu_3573_ap_ready,
        output_r_address0 => grp_avgpool_fu_3573_output_r_address0,
        output_r_ce0 => grp_avgpool_fu_3573_output_r_ce0,
        output_r_we0 => grp_avgpool_fu_3573_output_r_we0,
        output_r_d0 => grp_avgpool_fu_3573_output_r_d0,
        conv_last_output_address0 => grp_avgpool_fu_3573_conv_last_output_address0,
        conv_last_output_ce0 => grp_avgpool_fu_3573_conv_last_output_ce0,
        conv_last_output_q0 => conv_last_output_q0);

    ShuffleNetV2_faddbkb_x_U171 : component ShuffleNetV2_faddbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sum_i_reg_3294,
        din1 => grp_fu_3581_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3581_p2);

    ShuffleNetV2_fmulcud_x_U172 : component ShuffleNetV2_fmulcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => fc_weight_load_reg_10730,
        din1 => avgpool_output_load_reg_10735,
        ce => ap_const_logic_1,
        dout => grp_fu_3586_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_DownsampleUnit0_fu_3317_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
                    ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DownsampleUnit0_fu_3317_ap_ready)) then 
                    ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_DownsampleUnit1_fu_3345_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
                    ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DownsampleUnit1_fu_3345_ap_ready)) then 
                    ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_DownsampleUnit2_fu_3373_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
                    ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DownsampleUnit2_fu_3373_ap_ready)) then 
                    ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_ShuffleUnit0_fu_3401_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state94))) then 
                    ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_ShuffleUnit0_fu_3401_ap_ready)) then 
                    ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_ShuffleUnit1_fu_3437_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state112))) then 
                    ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_ShuffleUnit1_fu_3437_ap_ready)) then 
                    ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_ShuffleUnit2_fu_3513_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state120))) then 
                    ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_ShuffleUnit2_fu_3513_ap_ready)) then 
                    ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_avgpool_fu_3573_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_avgpool_fu_3573_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state124)) then 
                    ap_reg_grp_avgpool_fu_3573_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_avgpool_fu_3573_ap_ready)) then 
                    ap_reg_grp_avgpool_fu_3573_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_conv1_fu_3549_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_conv1_fu_3549_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state85) and (ap_const_lv1_1 = exitcond7_fu_8783_p2))) then 
                    ap_reg_grp_conv1_fu_3549_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_conv1_fu_3549_ap_ready)) then 
                    ap_reg_grp_conv1_fu_3549_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_conv_last_fu_3561_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_conv_last_fu_3561_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state122)) then 
                    ap_reg_grp_conv_last_fu_3561_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_conv_last_fu_3561_ap_ready)) then 
                    ap_reg_grp_conv_last_fu_3561_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ci_i_reg_3306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_0 = exitcond1_i_fu_8815_p2))) then 
                ci_i_reg_3306 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
                ci_i_reg_3306 <= ci_10_reg_10710;
            end if; 
        end if;
    end process;

    ci_reg_3135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_1 = exitcond11_fu_5378_p2))) then 
                ci_reg_3135 <= ci_9_reg_9002;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_3622_p2 = ap_const_lv1_0))) then 
                ci_reg_3135 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    co2_reg_3169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_3622_p2 = ap_const_lv1_1))) then 
                co2_reg_3169 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = exitcond4_fu_6144_p2))) then 
                co2_reg_3169 <= co_23_reg_9627;
            end if; 
        end if;
    end process;

    co_i_reg_3283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
                co_i_reg_3283 <= co_24_reg_10691;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state125) and (grp_avgpool_fu_3573_ap_done = ap_const_logic_1))) then 
                co_i_reg_3283 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    co_reg_3124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond2_fu_4102_p2 = ap_const_lv1_1))) then 
                co_reg_3124 <= co_22_reg_8924;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_3124 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h_reg_3191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_1 = exitcond12_fu_7219_p2))) then 
                h_reg_3191 <= h_22_reg_9734;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = exitcond4_fu_6144_p2))) then 
                h_reg_3191 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i1_reg_3158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond5_fu_4240_p2 = ap_const_lv1_1))) then 
                i1_reg_3158 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i1_reg_3158 <= i_3_reg_9443;
            end if; 
        end if;
    end process;

    i3_reg_3203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                i3_reg_3203 <= i_6_reg_9808;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                i3_reg_3203 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i4_reg_3214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_1 = exitcond13_fu_6394_p2))) then 
                i4_reg_3214 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                i4_reg_3214 <= i_7_reg_10004;
            end if; 
        end if;
    end process;

    i5_reg_3225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond1_fu_5982_p2))) then 
                i5_reg_3225 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) and (ap_const_lv1_1 = exitcond9_fu_8445_p2))) then 
                i5_reg_3225 <= i_5_reg_10196;
            end if; 
        end if;
    end process;

    i7_reg_3259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_1 = exitcond3_fu_7706_p2))) then 
                i7_reg_3259 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                i7_reg_3259 <= i_2_reg_10665;
            end if; 
        end if;
    end process;

    i8_reg_3271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_1 = exitcond8_fu_8747_p2))) then 
                i8_reg_3271 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
                i8_reg_3271 <= i_4_reg_10678;
            end if; 
        end if;
    end process;

    i_reg_3147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_reg_3147 <= i_1_reg_9142;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_reg_3147 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k6_reg_3248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_1 = exitcond6_fu_7885_p2))) then 
                k6_reg_3248 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                k6_reg_3248 <= k_2_reg_10544;
            end if; 
        end if;
    end process;

    k_reg_3237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                k_reg_3237 <= k_1_reg_10298;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                k_reg_3237 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    sum_i_reg_3294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_0 = exitcond1_i_fu_8815_p2))) then 
                sum_i_reg_3294 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
                sum_i_reg_3294 <= grp_fu_3581_p2;
            end if; 
        end if;
    end process;

    w_reg_3180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_const_lv1_1 = exitcond10_fu_6323_p2))) then 
                w_reg_3180 <= w_22_reg_9660;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = exitcond1_fu_5982_p2))) then 
                w_reg_3180 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state128)) then
                avgpool_output_load_reg_10735 <= avgpool_output_q0;
                fc_weight_load_reg_10730 <= fc_weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                bias_load_16_reg_10330 <= bias_q1;
                    tmp_238_cast96_cast1_reg_10325(7 downto 3) <= tmp_238_cast96_cast1_fu_7950_p1(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state127)) then
                ci_10_reg_10710 <= ci_10_fu_8849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ci_9_reg_9002 <= ci_9_fu_4108_p2;
                    ci_cast_reg_8994(4 downto 0) <= ci_cast_fu_4094_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                    co2_cast119_cast_reg_9610(4 downto 0) <= co2_cast119_cast_fu_5970_p1(4 downto 0);
                    co2_cast120_cast_reg_9601(4 downto 0) <= co2_cast120_cast_fu_5966_p1(4 downto 0);
                    co2_cast1_reg_9587(4 downto 0) <= co2_cast1_fu_5958_p1(4 downto 0);
                    co2_cast2_reg_9592(4 downto 0) <= co2_cast2_fu_5962_p1(4 downto 0);
                    co2_cast5_reg_9619(4 downto 0) <= co2_cast5_fu_5974_p1(4 downto 0);
                co_23_reg_9627 <= co_23_fu_5988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                co_22_reg_8924 <= co_22_fu_3628_p2;
                    co_cast143_cast1_reg_8903(4 downto 0) <= co_cast143_cast1_fu_3602_p1(4 downto 0);
                    co_cast143_cast_reg_8910(4 downto 0) <= co_cast143_cast_fu_3606_p1(4 downto 0);
                    co_cast144_cast_reg_8891(4 downto 0) <= co_cast144_cast_fu_3598_p1(4 downto 0);
                    co_cast1_reg_8874(4 downto 0) <= co_cast1_fu_3590_p1(4 downto 0);
                    co_cast2_reg_8882(4 downto 0) <= co_cast2_fu_3594_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state126)) then
                co_24_reg_10691 <= co_24_fu_8821_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state138)) then
                fc_bias_load_reg_10750 <= fc_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                h_22_reg_9734 <= h_22_fu_6329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                    i5_cast102_cast_reg_10185(4 downto 0) <= i5_cast102_cast_fu_7698_p1(4 downto 0);
                    i5_cast104_cast1_reg_10174(4 downto 0) <= i5_cast104_cast1_fu_7694_p1(4 downto 0);
                    i5_cast105_cast1_reg_10146(4 downto 0) <= i5_cast105_cast1_fu_7686_p1(4 downto 0);
                    i5_cast105_cast_reg_10159(4 downto 0) <= i5_cast105_cast_fu_7690_p1(4 downto 0);
                    i5_cast1_reg_10114(4 downto 0) <= i5_cast1_fu_7678_p1(4 downto 0);
                    i5_cast2_reg_10130(4 downto 0) <= i5_cast2_fu_7682_p1(4 downto 0);
                i_5_reg_10196 <= i_5_fu_7712_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_1_reg_9142 <= i_1_fu_4246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                i_2_reg_10665 <= i_2_fu_8753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                i_3_reg_9443 <= i_3_fu_5384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                i_4_reg_10678 <= i_4_fu_8789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                i_6_reg_9808 <= i_6_fu_6400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                i_7_reg_10004 <= i_7_fu_7225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                k_1_reg_10298 <= k_1_fu_7891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                k_2_reg_10544 <= k_2_fu_8451_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state143)) then
                result_reg_10755 <= grp_fu_3581_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                shuffle_conv_3x3_loa_15_reg_10073 <= shuffle_conv_3x3_q1;
                tmp_647_reg_10088 <= tmp_647_fu_7644_p2;
                tmp_652_reg_10093 <= tmp_652_fu_7659_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                    tmp31_reg_9855(6 downto 3) <= tmp31_fu_6573_p2(6 downto 3);
                tmp_135_reg_9839 <= tmp_135_fu_6527_p1;
                tmp_136_reg_9844 <= tmp_136_fu_6531_p1;
                    tmp_470_cast110_cast_reg_9827(7 downto 3) <= tmp_470_cast110_cast_fu_6445_p1(7 downto 3);
                tmp_564_reg_9833 <= tmp_564_fu_6485_p2;
                tmp_575_reg_9849 <= tmp_575_fu_6568_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    tmp3_reg_9200(8 downto 3) <= tmp3_fu_4473_p2(8 downto 3);
                tmp_226_reg_9205 <= tmp_226_fu_4482_p2;
                tmp_227_reg_9211 <= tmp_227_fu_4493_p2;
                tmp_234_reg_9217 <= tmp_234_fu_4503_p2;
                    tmp_330_cast127_cast_reg_9181(9 downto 3) <= tmp_330_cast127_cast_fu_4386_p1(9 downto 3);
                    tmp_509_reg_9223(16 downto 3) <= tmp_509_fu_4524_p2(16 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state132)) then
                tmp_130_i_reg_10740 <= grp_fu_3586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                tmp_143_reg_10029 <= tmp_143_fu_7355_p1;
                tmp_144_reg_10034 <= tmp_144_fu_7359_p1;
                tmp_391_reg_10039 <= tmp_391_fu_7369_p2;
                    tmp_505_cast_reg_10017(9 downto 3) <= tmp_505_cast_fu_7268_p1(9 downto 3);
                tmp_623_reg_10023 <= tmp_623_fu_7307_p2;
                tmp_650_reg_10045 <= tmp_650_fu_7411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_3622_p2 = ap_const_lv1_0))) then
                    tmp_175_reg_8974(6 downto 3) <= tmp_175_fu_4028_p2(6 downto 3);
                    tmp_176_reg_8984(7 downto 3) <= tmp_176_fu_4074_p2(7 downto 3);
                    tmp_186_cast_reg_8979(3 downto 0) <= tmp_186_cast_fu_4044_p1(3 downto 0);
                    tmp_189_cast_reg_8989(2 downto 0) <= tmp_189_cast_fu_4090_p1(2 downto 0);
                    tmp_362_cast_reg_8929(11 downto 3) <= tmp_362_cast_fu_3664_p1(11 downto 3);
                    tmp_368_cast_reg_8934(12 downto 3) <= tmp_368_cast_fu_3704_p1(12 downto 3);
                    tmp_439_cast_reg_8939(13 downto 3) <= tmp_439_cast_fu_3744_p1(13 downto 3);
                    tmp_442_cast_reg_8944(13 downto 3) <= tmp_442_cast_fu_3784_p1(13 downto 3);
                    tmp_447_cast_reg_8949(13 downto 3) <= tmp_447_cast_fu_3830_p1(13 downto 3);
                    tmp_450_cast_reg_8954(14 downto 3) <= tmp_450_cast_fu_3870_p1(14 downto 3);
                    tmp_453_cast_reg_8959(14 downto 3) <= tmp_453_cast_fu_3910_p1(14 downto 3);
                    tmp_456_cast_reg_8964(14 downto 3) <= tmp_456_cast_fu_3950_p1(14 downto 3);
                    tmp_461_cast_reg_8969(14 downto 3) <= tmp_461_cast_fu_3996_p1(14 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    tmp_186_cast1_reg_9090(4 downto 0) <= tmp_186_cast1_fu_4221_p1(4 downto 0);
                    tmp_186_cast2_reg_9104(4 downto 0) <= tmp_186_cast2_fu_4225_p1(4 downto 0);
                    tmp_186_cast3_reg_9114(4 downto 0) <= tmp_186_cast3_fu_4229_p1(4 downto 0);
                    tmp_186_cast4_reg_9120(4 downto 0) <= tmp_186_cast4_fu_4233_p1(4 downto 0);
                tmp_188_cast_reg_9134 <= tmp_188_cast_fu_4237_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond2_fu_4102_p2))) then
                tmp_187_reg_9030 <= tmp_187_fu_4142_p2;
                tmp_477_cast_reg_9007 <= tmp_477_cast_fu_4127_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_0 = exitcond3_fu_7706_p2))) then
                    tmp_189_reg_10201(4 downto 0) <= tmp_189_fu_7718_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = exitcond4_fu_6144_p2))) then
                    tmp_218_cast1_reg_9665(1 downto 0) <= tmp_218_cast1_fu_6156_p1(1 downto 0);
                    tmp_218_cast2_reg_9673(1 downto 0) <= tmp_218_cast2_fu_6160_p1(1 downto 0);
                    tmp_218_cast3_reg_9678(1 downto 0) <= tmp_218_cast3_fu_6164_p1(1 downto 0);
                    tmp_218_cast4_reg_9684(1 downto 0) <= tmp_218_cast4_fu_6168_p1(1 downto 0);
                    tmp_218_cast5_reg_9690(1 downto 0) <= tmp_218_cast5_fu_6172_p1(1 downto 0);
                    tmp_218_cast6_reg_9701(1 downto 0) <= tmp_218_cast6_fu_6176_p1(1 downto 0);
                tmp_420_reg_9706 <= tmp_420_fu_6209_p2;
                tmp_422_reg_9711 <= tmp_422_fu_6236_p2;
                tmp_424_reg_9716 <= tmp_424_fu_6263_p2;
                tmp_426_reg_9721 <= tmp_426_fu_6290_p2;
                tmp_428_reg_9726 <= tmp_428_fu_6317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond5_fu_4240_p2 = ap_const_lv1_1))) then
                tmp_220_cast_reg_9176 <= tmp_220_cast_fu_4382_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = exitcond5_fu_4240_p2))) then
                    tmp_221_reg_9147(7 downto 3) <= tmp_221_fu_4280_p2(7 downto 3);
                tmp_222_reg_9159 <= tmp_222_fu_4296_p2;
                tmp_225_reg_9170 <= tmp_225_fu_4373_p2;
                    tmp_330_cast127_cast_1_reg_9153(8 downto 3) <= tmp_330_cast127_cast_1_fu_4286_p1(8 downto 3);
                tmp_436_reg_9165 <= tmp_436_fu_4362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_228_reg_9259 <= tmp_228_fu_4624_p2;
                tmp_229_reg_9265 <= tmp_229_fu_4634_p2;
                tmp_268_reg_9271 <= tmp_268_fu_4646_p2;
                tmp_514_cast_reg_9228 <= tmp_514_cast_fu_4530_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                    tmp_238_cast1_reg_10447(10 downto 3) <= tmp_238_cast1_fu_8177_p1(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                    tmp_238_cast96_cast_reg_10313(8 downto 3) <= tmp_238_cast96_cast_fu_7931_p1(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                    tmp_238_cast97_cast_reg_10345(9 downto 3) <= tmp_238_cast97_cast_fu_7993_p1(9 downto 3);
                    tmp_243_reg_10357(31 downto 0) <= tmp_243_fu_8004_p1(31 downto 0);
                tmp_275_reg_10397 <= tmp_275_fu_8048_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_0 = exitcond6_fu_7885_p2))) then
                    tmp_238_reg_10303(6 downto 3) <= tmp_238_fu_7925_p2(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                tmp_239_reg_9316 <= tmp_239_fu_4846_p2;
                tmp_244_reg_9322 <= tmp_244_fu_4857_p2;
                    tmp_330_cast1_reg_9297(10 downto 3) <= tmp_330_cast1_fu_4829_p1(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_247_reg_9338 <= tmp_247_fu_4951_p2;
                tmp_250_reg_9344 <= tmp_250_fu_4961_p2;
                tmp_514_reg_9350 <= tmp_514_fu_4998_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_253_reg_9365 <= tmp_253_fu_5092_p2;
                tmp_256_reg_9371 <= tmp_256_fu_5102_p2;
                tmp_259_reg_9377 <= tmp_259_fu_5112_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_262_reg_9393 <= tmp_262_fu_5206_p2;
                tmp_265_reg_9399 <= tmp_265_fu_5216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                tmp_273_reg_10432 <= tmp_273_fu_8156_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                    tmp_309_cast1_reg_9795(1 downto 0) <= tmp_309_cast1_fu_6386_p1(1 downto 0);
                    tmp_309_cast2_reg_9800(1 downto 0) <= tmp_309_cast2_fu_6390_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_const_lv1_0 = exitcond10_fu_6323_p2))) then
                    tmp_309_cast_reg_9739(1 downto 0) <= tmp_309_cast_fu_6335_p1(1 downto 0);
                    tmp_597_cast_reg_9761(14 downto 0) <= tmp_597_cast_fu_6344_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_0 = exitcond11_fu_5378_p2))) then
                    tmp_310_reg_9448(9 downto 3) <= tmp_310_fu_5422_p2(9 downto 3);
                tmp_311_reg_9460 <= tmp_311_fu_5438_p2;
                tmp_314_reg_9471 <= tmp_314_fu_5501_p2;
                    tmp_438_cast_reg_9454(11 downto 3) <= tmp_438_cast_fu_5428_p1(11 downto 3);
                tmp_527_reg_9466 <= tmp_527_fu_5490_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                tmp_315_reg_9487 <= tmp_315_fu_5595_p2;
                tmp_316_reg_9493 <= tmp_316_fu_5605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                tmp_317_reg_9527 <= tmp_317_fu_5711_p2;
                tmp_318_reg_9533 <= tmp_318_fu_5722_p2;
                    tmp_438_cast1_reg_9499(12 downto 3) <= tmp_438_cast1_fu_5610_p1(12 downto 3);
                tmp_614_cast_reg_9506 <= tmp_614_cast_fu_5616_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                tmp_319_reg_9549 <= tmp_319_fu_5820_p2;
                tmp_320_reg_9555 <= tmp_320_fu_5830_p2;
                tmp_321_reg_9561 <= tmp_321_fu_5840_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state74) and (ap_const_lv1_0 = exitcond9_fu_8445_p2))) then
                    tmp_322_reg_10549(7 downto 3) <= tmp_322_fu_8485_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                    tmp_326_reg_10586(31 downto 0) <= tmp_326_fu_8548_p1(31 downto 0);
                    tmp_391_cast_reg_10572(11 downto 3) <= tmp_391_cast_fu_8537_p1(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_0 = exitcond13_fu_6394_p2))) then
                    tmp_353_reg_9813(6 downto 3) <= tmp_353_fu_6434_p2(6 downto 3);
                tmp_356_reg_9821 <= tmp_356_fu_6440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                tmp_376_reg_9905 <= tmp_376_fu_6869_p2;
                tmp_572_reg_9865 <= tmp_572_fu_6623_p2;
                tmp_580_reg_9875 <= tmp_580_fu_6696_p2;
                tmp_585_reg_9881 <= tmp_585_fu_6738_p2;
                tmp_590_reg_9887 <= tmp_590_fu_6776_p2;
                tmp_595_reg_9893 <= tmp_595_fu_6814_p2;
                tmp_601_reg_9899 <= tmp_601_fu_6859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                tmp_378_reg_9939 <= tmp_378_fu_6977_p2;
                tmp_607_reg_9933 <= tmp_607_fu_6966_p2;
                tmp_617_reg_9945 <= tmp_617_fu_7015_p2;
                    tmp_665_cast_reg_9911(9 downto 0) <= tmp_665_cast_fu_6877_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_0 = exitcond12_fu_7219_p2))) then
                    tmp_382_reg_10009(7 downto 3) <= tmp_382_fu_7259_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                    tmp_391_cast_cast1_reg_10557(8 downto 3) <= tmp_391_cast_cast1_fu_8491_p1(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = exitcond1_fu_5982_p2))) then
                tmp_402_reg_9637 <= tmp_402_fu_6038_p2;
                tmp_404_reg_9642 <= tmp_404_fu_6066_p2;
                tmp_406_reg_9647 <= tmp_406_fu_6094_p2;
                tmp_467_cast_reg_9632 <= tmp_467_cast_fu_6012_p1;
                tmp_476_cast_reg_9652 <= tmp_476_cast_fu_6140_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_414_reg_9045 <= tmp_414_fu_4171_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_416_reg_9060 <= tmp_416_fu_4194_p2;
                tmp_417_reg_9065 <= tmp_417_fu_4199_p2;
                tmp_418_reg_9070 <= tmp_418_fu_4204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                tmp_460_reg_9287 <= tmp_460_fu_4779_p2;
                tmp_466_reg_9292 <= tmp_466_fu_4824_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                tmp_506_reg_9415 <= tmp_506_fu_5353_p2;
                tmp_510_reg_9420 <= tmp_510_fu_5361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                tmp_561_reg_9577 <= tmp_561_fu_5949_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                tmp_603_reg_9961 <= tmp_603_fu_7100_p2;
                tmp_609_reg_9966 <= tmp_609_fu_7121_p2;
                tmp_614_reg_9971 <= tmp_614_fu_7177_p2;
                tmp_619_reg_9976 <= tmp_619_fu_7198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                tmp_631_reg_10056 <= tmp_631_fu_7454_p2;
                tmp_634_reg_10061 <= tmp_634_fu_7491_p2;
                tmp_639_reg_10067 <= tmp_639_fu_7528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_0 = exitcond1_i_fu_8815_p2))) then
                    tmp_723_cast_reg_10702(12 downto 9) <= tmp_723_cast_fu_8839_p1(12 downto 9);
                    tmp_i_reg_10696(3 downto 0) <= tmp_i_fu_8827_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                    tmp_738_cast_reg_10098(10 downto 0) <= tmp_738_cast_fu_7664_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                w_22_reg_9660 <= w_22_fu_6150_p2;
            end if;
        end if;
    end process;
    co_cast1_reg_8874(12 downto 5) <= "00000000";
    co_cast2_reg_8882(11 downto 5) <= "0000000";
    co_cast144_cast_reg_8891(10 downto 5) <= "000000";
    co_cast143_cast1_reg_8903(8 downto 5) <= "0000";
    co_cast143_cast_reg_8910(9 downto 5) <= "00000";
    tmp_362_cast_reg_8929(2 downto 0) <= "000";
    tmp_368_cast_reg_8934(2 downto 0) <= "000";
    tmp_439_cast_reg_8939(2 downto 0) <= "000";
    tmp_442_cast_reg_8944(2 downto 0) <= "000";
    tmp_447_cast_reg_8949(2 downto 0) <= "000";
    tmp_450_cast_reg_8954(2 downto 0) <= "000";
    tmp_453_cast_reg_8959(2 downto 0) <= "000";
    tmp_456_cast_reg_8964(2 downto 0) <= "000";
    tmp_461_cast_reg_8969(2 downto 0) <= "000";
    tmp_175_reg_8974(2 downto 0) <= "000";
    tmp_186_cast_reg_8979(6 downto 4) <= "000";
    tmp_176_reg_8984(2 downto 0) <= "000";
    tmp_189_cast_reg_8989(7 downto 3) <= "00000";
    ci_cast_reg_8994(7 downto 5) <= "000";
    tmp_186_cast1_reg_9090(17 downto 5) <= "0000000000000";
    tmp_186_cast2_reg_9104(16 downto 5) <= "000000000000";
    tmp_186_cast3_reg_9114(15 downto 5) <= "00000000000";
    tmp_186_cast4_reg_9120(18 downto 5) <= "00000000000000";
    tmp_221_reg_9147(2 downto 0) <= "000";
    tmp_330_cast127_cast_1_reg_9153(2 downto 0) <= "000";
    tmp_330_cast127_cast_reg_9181(2 downto 0) <= "000";
    tmp3_reg_9200(2 downto 0) <= "000";
    tmp_509_reg_9223(2 downto 0) <= "000";
    tmp_330_cast1_reg_9297(2 downto 0) <= "000";
    tmp_310_reg_9448(2 downto 0) <= "000";
    tmp_438_cast_reg_9454(2 downto 0) <= "000";
    tmp_438_cast1_reg_9499(2 downto 0) <= "000";
    co2_cast1_reg_9587(10 downto 5) <= "000000";
    co2_cast2_reg_9592(9 downto 5) <= "00000";
    co2_cast120_cast_reg_9601(8 downto 5) <= "0000";
    co2_cast119_cast_reg_9610(7 downto 5) <= "000";
    co2_cast5_reg_9619(6 downto 5) <= "00";
    tmp_218_cast1_reg_9665(11 downto 2) <= "0000000000";
    tmp_218_cast2_reg_9673(14 downto 2) <= "0000000000000";
    tmp_218_cast3_reg_9678(13 downto 2) <= "000000000000";
    tmp_218_cast4_reg_9684(35 downto 2) <= "0000000000000000000000000000000000";
    tmp_218_cast5_reg_9690(12 downto 2) <= "00000000000";
    tmp_218_cast6_reg_9701(10 downto 2) <= "000000000";
    tmp_309_cast_reg_9739(14 downto 2) <= "0000000000000";
    tmp_597_cast_reg_9761(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    tmp_309_cast1_reg_9795(9 downto 2) <= "00000000";
    tmp_309_cast2_reg_9800(10 downto 2) <= "000000000";
    tmp_353_reg_9813(2 downto 0) <= "000";
    tmp_470_cast110_cast_reg_9827(2 downto 0) <= "000";
    tmp31_reg_9855(2 downto 0) <= "000";
    tmp_665_cast_reg_9911(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_382_reg_10009(2 downto 0) <= "000";
    tmp_505_cast_reg_10017(2 downto 0) <= "000";
    tmp_738_cast_reg_10098(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    i5_cast1_reg_10114(11 downto 5) <= "0000000";
    i5_cast2_reg_10130(10 downto 5) <= "000000";
    i5_cast105_cast1_reg_10146(8 downto 5) <= "0000";
    i5_cast105_cast_reg_10159(9 downto 5) <= "00000";
    i5_cast104_cast1_reg_10174(7 downto 5) <= "000";
    i5_cast102_cast_reg_10185(6 downto 5) <= "00";
    tmp_189_reg_10201(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_238_reg_10303(2 downto 0) <= "000";
    tmp_238_cast96_cast_reg_10313(2 downto 0) <= "000";
    tmp_238_cast96_cast1_reg_10325(2 downto 0) <= "000";
    tmp_238_cast97_cast_reg_10345(2 downto 0) <= "000";
    tmp_243_reg_10357(63 downto 32) <= "00000000000000000000000000000000";
    tmp_238_cast1_reg_10447(2 downto 0) <= "000";
    tmp_322_reg_10549(2 downto 0) <= "000";
    tmp_391_cast_cast1_reg_10557(2 downto 0) <= "000";
    tmp_391_cast_reg_10572(2 downto 0) <= "000";
    tmp_326_reg_10586(63 downto 32) <= "00000000000000000000000000000000";
    tmp_i_reg_10696(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_723_cast_reg_10702(8 downto 0) <= "000000000";
    tmp_723_cast_reg_10702(13) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_3622_p2, ap_CS_fsm_state3, exitcond2_fu_4102_p2, ap_CS_fsm_state9, exitcond5_fu_4240_p2, ap_CS_fsm_state21, exitcond11_fu_5378_p2, ap_CS_fsm_state28, exitcond1_fu_5982_p2, ap_CS_fsm_state29, exitcond4_fu_6144_p2, ap_CS_fsm_state30, exitcond10_fu_6323_p2, ap_CS_fsm_state34, exitcond13_fu_6394_p2, ap_CS_fsm_state42, exitcond12_fu_7219_p2, ap_CS_fsm_state48, exitcond3_fu_7706_p2, ap_CS_fsm_state57, exitcond6_fu_7885_p2, ap_CS_fsm_state74, exitcond9_fu_8445_p2, ap_CS_fsm_state83, exitcond8_fu_8747_p2, ap_CS_fsm_state85, exitcond7_fu_8783_p2, ap_CS_fsm_state126, exitcond1_i_fu_8815_p2, ap_CS_fsm_state127, exitcond_i_fu_8843_p2, grp_DownsampleUnit0_fu_3317_ap_done, grp_DownsampleUnit1_fu_3345_ap_done, grp_DownsampleUnit2_fu_3373_ap_done, grp_ShuffleUnit0_fu_3401_ap_done, grp_ShuffleUnit1_fu_3437_ap_done, grp_ShuffleUnit2_fu_3513_ap_done, grp_conv1_fu_3549_ap_done, grp_conv_last_fu_3561_ap_done, grp_avgpool_fu_3573_ap_done, ap_CS_fsm_state125, ap_CS_fsm_state89, ap_CS_fsm_state97, ap_CS_fsm_state115, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121, ap_CS_fsm_state87, ap_CS_fsm_state123)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_3622_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond2_fu_4102_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond5_fu_4240_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_1 = exitcond11_fu_5378_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond1_fu_5982_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = exitcond4_fu_6144_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_const_lv1_1 = exitcond10_fu_6323_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_1 = exitcond13_fu_6394_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state42 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_1 = exitcond12_fu_7219_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state48 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state48) and (ap_const_lv1_1 = exitcond3_fu_7706_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_lv1_1 = exitcond6_fu_7885_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state74 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state74) and (ap_const_lv1_1 = exitcond9_fu_8445_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_lv1_1 = exitcond8_fu_8747_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state85 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state85) and (ap_const_lv1_1 = exitcond7_fu_8783_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state87;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state87 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state87) and (grp_conv1_fu_3549_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state89) and (grp_DownsampleUnit0_fu_3317_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state91) and (grp_ShuffleUnit0_fu_3401_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state93) and (grp_ShuffleUnit0_fu_3401_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state94;
                else
                    ap_NS_fsm <= ap_ST_fsm_state93;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state95) and (grp_ShuffleUnit0_fu_3401_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_state95;
                end if;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state97) and (grp_DownsampleUnit1_fu_3345_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state99) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state100;
                else
                    ap_NS_fsm <= ap_ST_fsm_state99;
                end if;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state101) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_state101;
                end if;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state103) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state104;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state105) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state106;
                else
                    ap_NS_fsm <= ap_ST_fsm_state105;
                end if;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state107) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state108;
                else
                    ap_NS_fsm <= ap_ST_fsm_state107;
                end if;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state109) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state111) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state112;
                else
                    ap_NS_fsm <= ap_ST_fsm_state111;
                end if;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state113) and (grp_ShuffleUnit1_fu_3437_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state114;
                else
                    ap_NS_fsm <= ap_ST_fsm_state113;
                end if;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state115) and (grp_DownsampleUnit2_fu_3373_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_state115;
                end if;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state117) and (grp_ShuffleUnit2_fu_3513_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state118;
                else
                    ap_NS_fsm <= ap_ST_fsm_state117;
                end if;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state119) and (grp_ShuffleUnit2_fu_3513_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state120;
                else
                    ap_NS_fsm <= ap_ST_fsm_state119;
                end if;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state121) and (grp_ShuffleUnit2_fu_3513_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state122;
                else
                    ap_NS_fsm <= ap_ST_fsm_state121;
                end if;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state123) and (grp_conv_last_fu_3561_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_state123;
                end if;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state125) and (grp_avgpool_fu_3573_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state126;
                else
                    ap_NS_fsm <= ap_ST_fsm_state125;
                end if;
            when ap_ST_fsm_state126 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_1 = exitcond1_i_fu_8815_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state127;
                end if;
            when ap_ST_fsm_state127 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state127) and (ap_const_lv1_1 = exitcond_i_fu_8843_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state138;
                else
                    ap_NS_fsm <= ap_ST_fsm_state128;
                end if;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ShuffleConvs_0_Downs_10_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state4, grp_DownsampleUnit0_fu_3317_conv3r_weight_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_10_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_10_address0 <= grp_DownsampleUnit0_fu_3317_conv3r_weight_address0;
        else 
            ShuffleConvs_0_Downs_10_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_10_ce0_assign_proc : process(ap_CS_fsm_state4, grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_10_ce0 <= grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0;
        else 
            ShuffleConvs_0_Downs_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_10_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_10_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state51, grp_DownsampleUnit0_fu_3317_conv1l_bias_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_1_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_1_address0 <= grp_DownsampleUnit0_fu_3317_conv1l_bias_address0;
        else 
            ShuffleConvs_0_Downs_1_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_ce0_assign_proc : process(ap_CS_fsm_state51, grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_1_ce0 <= grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0;
        else 
            ShuffleConvs_0_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_we0_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state49, grp_DownsampleUnit0_fu_3317_conv1r_bias_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ShuffleConvs_0_Downs_3_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_3_address0 <= grp_DownsampleUnit0_fu_3317_conv1r_bias_address0;
        else 
            ShuffleConvs_0_Downs_3_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_ce0_assign_proc : process(ap_CS_fsm_state49, grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ShuffleConvs_0_Downs_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_3_ce0 <= grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0;
        else 
            ShuffleConvs_0_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_we0_assign_proc : process(ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ShuffleConvs_0_Downs_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state52, grp_DownsampleUnit0_fu_3317_conv2l_bias_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Downs_4_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_4_address0 <= grp_DownsampleUnit0_fu_3317_conv2l_bias_address0;
        else 
            ShuffleConvs_0_Downs_4_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_ce0_assign_proc : process(ap_CS_fsm_state52, grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Downs_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_4_ce0 <= grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0;
        else 
            ShuffleConvs_0_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Downs_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state50, grp_DownsampleUnit0_fu_3317_conv2r_bias_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ShuffleConvs_0_Downs_5_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_5_address0 <= grp_DownsampleUnit0_fu_3317_conv2r_bias_address0;
        else 
            ShuffleConvs_0_Downs_5_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_ce0_assign_proc : process(ap_CS_fsm_state50, grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ShuffleConvs_0_Downs_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_5_ce0 <= grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0;
        else 
            ShuffleConvs_0_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_we0_assign_proc : process(ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ShuffleConvs_0_Downs_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_address0_assign_proc : process(tmp_597_cast_reg_9761, ap_CS_fsm_state31, grp_DownsampleUnit0_fu_3317_conv1l_weight_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_6_address0 <= tmp_597_cast_reg_9761(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_6_address0 <= grp_DownsampleUnit0_fu_3317_conv1l_weight_address0;
        else 
            ShuffleConvs_0_Downs_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_ce0_assign_proc : process(ap_CS_fsm_state31, grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_6_ce0 <= grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0;
        else 
            ShuffleConvs_0_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_we0_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state4, grp_DownsampleUnit0_fu_3317_conv1r_weight_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_7_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_7_address0 <= grp_DownsampleUnit0_fu_3317_conv1r_weight_address0;
        else 
            ShuffleConvs_0_Downs_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_ce0_assign_proc : process(ap_CS_fsm_state4, grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_7_ce0 <= grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0;
        else 
            ShuffleConvs_0_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ShuffleConvs_0_Downs_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_8_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state5, grp_DownsampleUnit0_fu_3317_conv2l_weight_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Downs_8_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_8_address0 <= grp_DownsampleUnit0_fu_3317_conv2l_weight_address0;
        else 
            ShuffleConvs_0_Downs_8_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_8_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Downs_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_8_ce0 <= grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0;
        else 
            ShuffleConvs_0_Downs_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_8_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Downs_8_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_9_address0_assign_proc : process(tmp_597_cast_reg_9761, ap_CS_fsm_state31, grp_DownsampleUnit0_fu_3317_conv2r_weight_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_9_address0 <= tmp_597_cast_reg_9761(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_9_address0 <= grp_DownsampleUnit0_fu_3317_conv2r_weight_address0;
        else 
            ShuffleConvs_0_Downs_9_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_9_ce0_assign_proc : process(ap_CS_fsm_state31, grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_9_ce0 <= grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0;
        else 
            ShuffleConvs_0_Downs_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_9_we0_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ShuffleConvs_0_Downs_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state51, grp_DownsampleUnit0_fu_3317_conv3r_bias_address0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_address0 <= grp_DownsampleUnit0_fu_3317_conv3r_bias_address0;
        else 
            ShuffleConvs_0_Downs_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Downs_ce0_assign_proc : process(ap_CS_fsm_state51, grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            ShuffleConvs_0_Downs_ce0 <= grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0;
        else 
            ShuffleConvs_0_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_we0_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ShuffleConvs_0_Downs_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_11_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state7, grp_ShuffleUnit0_fu_3401_conv3_weight_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_11_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_11_address0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
        else 
            ShuffleConvs_0_Shuff_11_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_11_ce0_assign_proc : process(ap_CS_fsm_state7, grp_ShuffleUnit0_fu_3401_conv3_weight_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_11_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_11_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_11_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_13_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state7, grp_ShuffleUnit0_fu_3401_conv1_weight_address0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_13_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_13_address0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
        else 
            ShuffleConvs_0_Shuff_13_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_13_ce0_assign_proc : process(ap_CS_fsm_state7, grp_ShuffleUnit0_fu_3401_conv1_weight_ce0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_13_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_13_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ShuffleConvs_0_Shuff_13_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_15_address0_assign_proc : process(tmp_597_cast_reg_9761, ap_CS_fsm_state33, grp_ShuffleUnit0_fu_3401_conv2_weight_address0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ShuffleConvs_0_Shuff_15_address0 <= tmp_597_cast_reg_9761(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_15_address0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
        else 
            ShuffleConvs_0_Shuff_15_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_15_ce0_assign_proc : process(ap_CS_fsm_state33, grp_ShuffleUnit0_fu_3401_conv2_weight_ce0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ShuffleConvs_0_Shuff_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_15_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_15_we0_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ShuffleConvs_0_Shuff_15_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_17_address0_assign_proc : process(tmp_189_reg_10201, grp_ShuffleUnit0_fu_3401_conv2_bias_address0, ap_CS_fsm_state56, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_17_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_17_address0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
        else 
            ShuffleConvs_0_Shuff_17_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_17_ce0_assign_proc : process(grp_ShuffleUnit0_fu_3401_conv2_bias_ce0, ap_CS_fsm_state56, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_17_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_17_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_17_we0_assign_proc : process(ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_17_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_18_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state8, grp_ShuffleUnit0_fu_3401_conv3_weight_address0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ShuffleConvs_0_Shuff_18_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_18_address0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
        else 
            ShuffleConvs_0_Shuff_18_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_18_ce0_assign_proc : process(ap_CS_fsm_state8, grp_ShuffleUnit0_fu_3401_conv3_weight_ce0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ShuffleConvs_0_Shuff_18_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_18_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_18_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ShuffleConvs_0_Shuff_18_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_19_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state52, grp_ShuffleUnit0_fu_3401_conv1_bias_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Shuff_19_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_19_address0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
        else 
            ShuffleConvs_0_Shuff_19_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_19_ce0_assign_proc : process(ap_CS_fsm_state52, grp_ShuffleUnit0_fu_3401_conv1_bias_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Shuff_19_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_19_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_19_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ShuffleConvs_0_Shuff_19_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_1_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state54, grp_ShuffleUnit0_fu_3401_conv2_bias_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_1_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_1_address0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
        else 
            ShuffleConvs_0_Shuff_1_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_1_ce0_assign_proc : process(ap_CS_fsm_state54, grp_ShuffleUnit0_fu_3401_conv2_bias_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_1_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_1_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_20_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state53, grp_ShuffleUnit0_fu_3401_conv2_bias_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_20_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_20_address0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
        else 
            ShuffleConvs_0_Shuff_20_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_20_ce0_assign_proc : process(ap_CS_fsm_state53, grp_ShuffleUnit0_fu_3401_conv2_bias_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_20_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_20_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_20_we0_assign_proc : process(ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_20_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_21_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state53, grp_ShuffleUnit0_fu_3401_conv3_bias_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_21_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_21_address0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
        else 
            ShuffleConvs_0_Shuff_21_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_21_ce0_assign_proc : process(ap_CS_fsm_state53, grp_ShuffleUnit0_fu_3401_conv3_bias_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_21_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_21_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_21_we0_assign_proc : process(ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ShuffleConvs_0_Shuff_21_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_22_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state54, grp_ShuffleUnit0_fu_3401_conv1_bias_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_22_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_22_address0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
        else 
            ShuffleConvs_0_Shuff_22_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_22_ce0_assign_proc : process(ap_CS_fsm_state54, grp_ShuffleUnit0_fu_3401_conv1_bias_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_22_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_22_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_22_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ShuffleConvs_0_Shuff_22_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_3_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state55, grp_ShuffleUnit0_fu_3401_conv3_bias_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_3_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_3_address0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
        else 
            ShuffleConvs_0_Shuff_3_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_3_ce0_assign_proc : process(ap_CS_fsm_state55, grp_ShuffleUnit0_fu_3401_conv3_bias_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_3_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_3_we0_assign_proc : process(ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_4_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state55, grp_ShuffleUnit0_fu_3401_conv1_bias_address0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_4_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_4_address0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
        else 
            ShuffleConvs_0_Shuff_4_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_4_ce0_assign_proc : process(ap_CS_fsm_state55, grp_ShuffleUnit0_fu_3401_conv1_bias_ce0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_4_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_4_we0_assign_proc : process(ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ShuffleConvs_0_Shuff_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_5_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state5, grp_ShuffleUnit0_fu_3401_conv1_weight_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Shuff_5_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_5_address0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
        else 
            ShuffleConvs_0_Shuff_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_5_ce0_assign_proc : process(ap_CS_fsm_state5, grp_ShuffleUnit0_fu_3401_conv1_weight_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Shuff_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_5_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_5_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ShuffleConvs_0_Shuff_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_6_address0_assign_proc : process(tmp_597_cast_reg_9761, ap_CS_fsm_state32, grp_ShuffleUnit0_fu_3401_conv2_weight_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_6_address0 <= tmp_597_cast_reg_9761(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_6_address0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
        else 
            ShuffleConvs_0_Shuff_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_6_ce0_assign_proc : process(ap_CS_fsm_state32, grp_ShuffleUnit0_fu_3401_conv2_weight_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_6_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_6_we0_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_7_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state6, grp_ShuffleUnit0_fu_3401_conv3_weight_address0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_7_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_7_address0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
        else 
            ShuffleConvs_0_Shuff_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_7_ce0_assign_proc : process(ap_CS_fsm_state6, grp_ShuffleUnit0_fu_3401_conv3_weight_ce0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            ShuffleConvs_0_Shuff_7_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_7_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_8_address0_assign_proc : process(tmp_477_cast_reg_9007, ap_CS_fsm_state6, grp_ShuffleUnit0_fu_3401_conv1_weight_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_8_address0 <= tmp_477_cast_reg_9007(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_8_address0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
        else 
            ShuffleConvs_0_Shuff_8_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_8_ce0_assign_proc : process(ap_CS_fsm_state6, grp_ShuffleUnit0_fu_3401_conv1_weight_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_8_ce0 <= grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_8_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_0_Shuff_8_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_9_address0_assign_proc : process(tmp_597_cast_reg_9761, ap_CS_fsm_state32, grp_ShuffleUnit0_fu_3401_conv2_weight_address0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_9_address0 <= tmp_597_cast_reg_9761(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_9_address0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
        else 
            ShuffleConvs_0_Shuff_9_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_9_ce0_assign_proc : process(ap_CS_fsm_state32, grp_ShuffleUnit0_fu_3401_conv2_weight_ce0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            ShuffleConvs_0_Shuff_9_ce0 <= grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
        else 
            ShuffleConvs_0_Shuff_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_9_we0_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ShuffleConvs_0_Shuff_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_address0_assign_proc : process(tmp_189_reg_10201, grp_ShuffleUnit0_fu_3401_conv3_bias_address0, ap_CS_fsm_state56, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_address0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
        else 
            ShuffleConvs_0_Shuff_address0 <= "XXXXX";
        end if; 
    end process;


    ShuffleConvs_0_Shuff_ce0_assign_proc : process(grp_ShuffleUnit0_fu_3401_conv3_bias_ce0, ap_CS_fsm_state56, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            ShuffleConvs_0_Shuff_ce0 <= grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
        else 
            ShuffleConvs_0_Shuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Shuff_we0_assign_proc : process(ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ShuffleConvs_0_Shuff_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Shuff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_10_address0_assign_proc : process(tmp_514_cast_fu_4530_p1, ap_CS_fsm_state11, grp_DownsampleUnit1_fu_3345_conv3r_weight_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_10_address0 <= tmp_514_cast_fu_4530_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_10_address0 <= grp_DownsampleUnit1_fu_3345_conv3r_weight_address0;
        else 
            ShuffleConvs_1_Downs_10_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_10_ce0_assign_proc : process(ap_CS_fsm_state11, grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_10_ce0 <= grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0;
        else 
            ShuffleConvs_1_Downs_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_10_we0_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_10_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state61, grp_DownsampleUnit1_fu_3345_conv1l_bias_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_1_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_1_address0 <= grp_DownsampleUnit1_fu_3345_conv1l_bias_address0;
        else 
            ShuffleConvs_1_Downs_1_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_ce0_assign_proc : process(ap_CS_fsm_state61, grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_1_ce0 <= grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0;
        else 
            ShuffleConvs_1_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_we0_assign_proc : process(ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_address0_assign_proc : process(ap_CS_fsm_state60, tmp_243_fu_8004_p1, grp_DownsampleUnit1_fu_3345_conv1r_bias_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_3_address0 <= tmp_243_fu_8004_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_3_address0 <= grp_DownsampleUnit1_fu_3345_conv1r_bias_address0;
        else 
            ShuffleConvs_1_Downs_3_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_ce0_assign_proc : process(ap_CS_fsm_state60, grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_3_ce0 <= grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0;
        else 
            ShuffleConvs_1_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_we0_assign_proc : process(ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state61, grp_DownsampleUnit1_fu_3345_conv2l_bias_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_4_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_4_address0 <= grp_DownsampleUnit1_fu_3345_conv2l_bias_address0;
        else 
            ShuffleConvs_1_Downs_4_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_ce0_assign_proc : process(ap_CS_fsm_state61, grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_4_ce0 <= grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0;
        else 
            ShuffleConvs_1_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_we0_assign_proc : process(ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ShuffleConvs_1_Downs_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_address0_assign_proc : process(ap_CS_fsm_state60, tmp_243_fu_8004_p1, grp_DownsampleUnit1_fu_3345_conv2r_bias_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_5_address0 <= tmp_243_fu_8004_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_5_address0 <= grp_DownsampleUnit1_fu_3345_conv2r_bias_address0;
        else 
            ShuffleConvs_1_Downs_5_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_ce0_assign_proc : process(ap_CS_fsm_state60, grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_5_ce0 <= grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0;
        else 
            ShuffleConvs_1_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_we0_assign_proc : process(ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_address0_assign_proc : process(tmp_665_cast_fu_6877_p1, ap_CS_fsm_state37, grp_DownsampleUnit1_fu_3345_conv1l_weight_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_6_address0 <= tmp_665_cast_fu_6877_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_6_address0 <= grp_DownsampleUnit1_fu_3345_conv1l_weight_address0;
        else 
            ShuffleConvs_1_Downs_6_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_ce0_assign_proc : process(ap_CS_fsm_state37, grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_6_ce0 <= grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0;
        else 
            ShuffleConvs_1_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_we0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_address0_assign_proc : process(tmp_514_cast_fu_4530_p1, ap_CS_fsm_state11, grp_DownsampleUnit1_fu_3345_conv1r_weight_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_7_address0 <= tmp_514_cast_fu_4530_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_7_address0 <= grp_DownsampleUnit1_fu_3345_conv1r_weight_address0;
        else 
            ShuffleConvs_1_Downs_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_ce0_assign_proc : process(ap_CS_fsm_state11, grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_7_ce0 <= grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0;
        else 
            ShuffleConvs_1_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_we0_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ShuffleConvs_1_Downs_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_8_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state12, grp_DownsampleUnit1_fu_3345_conv2l_weight_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Downs_8_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_8_address0 <= grp_DownsampleUnit1_fu_3345_conv2l_weight_address0;
        else 
            ShuffleConvs_1_Downs_8_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_8_ce0_assign_proc : process(ap_CS_fsm_state12, grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Downs_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_8_ce0 <= grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0;
        else 
            ShuffleConvs_1_Downs_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_8_we0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Downs_8_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_9_address0_assign_proc : process(tmp_665_cast_fu_6877_p1, ap_CS_fsm_state37, grp_DownsampleUnit1_fu_3345_conv2r_weight_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_9_address0 <= tmp_665_cast_fu_6877_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_9_address0 <= grp_DownsampleUnit1_fu_3345_conv2r_weight_address0;
        else 
            ShuffleConvs_1_Downs_9_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_9_ce0_assign_proc : process(ap_CS_fsm_state37, grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_9_ce0 <= grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0;
        else 
            ShuffleConvs_1_Downs_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_9_we0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ShuffleConvs_1_Downs_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_address0_assign_proc : process(ap_CS_fsm_state60, tmp_243_fu_8004_p1, grp_DownsampleUnit1_fu_3345_conv3r_bias_address0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_address0 <= tmp_243_fu_8004_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_address0 <= grp_DownsampleUnit1_fu_3345_conv3r_bias_address0;
        else 
            ShuffleConvs_1_Downs_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Downs_ce0_assign_proc : process(ap_CS_fsm_state60, grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            ShuffleConvs_1_Downs_ce0 <= grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0;
        else 
            ShuffleConvs_1_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_we0_assign_proc : process(ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            ShuffleConvs_1_Downs_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_11_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state14, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_11_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_11_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_11_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_11_ce0_assign_proc : process(ap_CS_fsm_state14, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_11_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_11_we0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_11_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_13_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state14, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_13_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_13_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_13_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_13_ce0_assign_proc : process(ap_CS_fsm_state14, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_13_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_13_we0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Shuff_13_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_15_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state39, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_15_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_15_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_15_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_15_ce0_assign_proc : process(ap_CS_fsm_state39, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_15_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_15_we0_assign_proc : process(ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_15_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_17_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state71, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_17_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_17_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_17_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_17_ce0_assign_proc : process(ap_CS_fsm_state71, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_17_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_17_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_17_we0_assign_proc : process(ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_17_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_19_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state15, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_19_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_19_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_19_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_19_ce0_assign_proc : process(ap_CS_fsm_state15, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_19_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_19_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_19_we0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_19_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_1_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state12, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Shuff_1_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_1_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_1_ce0_assign_proc : process(ap_CS_fsm_state12, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Shuff_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_1_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_1_we0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ShuffleConvs_1_Shuff_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_21_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state15, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_21_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_21_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_21_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_21_ce0_assign_proc : process(ap_CS_fsm_state15, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_21_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_21_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_21_we0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ShuffleConvs_1_Shuff_21_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_23_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state39, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_23_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_23_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_23_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_23_ce0_assign_proc : process(ap_CS_fsm_state39, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_23_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_23_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_23_we0_assign_proc : process(ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ShuffleConvs_1_Shuff_23_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_23_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_25_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state16, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_25_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_25_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_25_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_25_ce0_assign_proc : process(ap_CS_fsm_state16, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_25_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_25_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_25_we0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_25_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_27_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state16, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_27_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_27_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_27_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_27_ce0_assign_proc : process(ap_CS_fsm_state16, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_27_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_27_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_27_we0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ShuffleConvs_1_Shuff_27_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_29_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state40, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_29_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_29_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_29_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_29_ce0_assign_proc : process(ap_CS_fsm_state40, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_29_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_29_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_29_we0_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_29_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_31_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state17, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_31_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_31_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_31_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_31_ce0_assign_proc : process(ap_CS_fsm_state17, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_31_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_31_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_31_we0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_31_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_33_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state17, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_33_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_33_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_33_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_33_ce0_assign_proc : process(ap_CS_fsm_state17, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_33_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_33_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_33_we0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ShuffleConvs_1_Shuff_33_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_33_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_35_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state40, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_35_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_35_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_35_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_35_ce0_assign_proc : process(ap_CS_fsm_state40, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_35_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_35_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_35_we0_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ShuffleConvs_1_Shuff_35_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_35_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_37_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state18, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_37_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_37_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_37_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_37_ce0_assign_proc : process(ap_CS_fsm_state18, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_37_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_37_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_37_we0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_37_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_37_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_39_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state72, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_39_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_39_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_39_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_39_ce0_assign_proc : process(ap_CS_fsm_state72, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_39_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_39_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_39_we0_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_39_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_39_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_3_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state38, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_3_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_3_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_3_ce0_assign_proc : process(ap_CS_fsm_state38, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_3_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_3_we0_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_41_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state18, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_41_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_41_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_41_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_41_ce0_assign_proc : process(ap_CS_fsm_state18, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_41_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_41_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_41_we0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ShuffleConvs_1_Shuff_41_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_41_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_43_address0_assign_proc : process(tmp_665_cast_reg_9911, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state41, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_43_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_43_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_43_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_43_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state41, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_43_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_43_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_43_we0_assign_proc : process(ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_43_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_43_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_45_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state19, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_45_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_45_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_45_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_45_ce0_assign_proc : process(ap_CS_fsm_state19, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_45_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_45_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_45_we0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_45_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_45_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_47_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state19, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_47_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_47_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_47_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_47_ce0_assign_proc : process(ap_CS_fsm_state19, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_47_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_47_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_47_we0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ShuffleConvs_1_Shuff_47_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_47_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_49_address0_assign_proc : process(tmp_665_cast_reg_9911, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state41, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_49_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_49_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_49_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_49_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state41, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_49_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_49_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_49_we0_assign_proc : process(ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ShuffleConvs_1_Shuff_49_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_49_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_50_address0_assign_proc : process(tmp_514_cast_reg_9228, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state20, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ShuffleConvs_1_Shuff_50_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_50_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_50_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_50_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state20, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ShuffleConvs_1_Shuff_50_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_50_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_50_we0_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ShuffleConvs_1_Shuff_50_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_50_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_51_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state62, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_51_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_51_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_51_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_51_ce0_assign_proc : process(ap_CS_fsm_state62, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_51_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_51_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_51_we0_assign_proc : process(ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_51_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_51_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_52_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state62, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_52_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_52_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_52_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_52_ce0_assign_proc : process(ap_CS_fsm_state62, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_52_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_52_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_52_we0_assign_proc : process(ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ShuffleConvs_1_Shuff_52_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_52_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_53_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state63, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_53_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_53_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_53_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_53_ce0_assign_proc : process(ap_CS_fsm_state63, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_53_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_53_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_53_we0_assign_proc : process(ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_53_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_53_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_54_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state63, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_54_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_54_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_54_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_54_ce0_assign_proc : process(ap_CS_fsm_state63, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_54_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_54_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_54_we0_assign_proc : process(ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ShuffleConvs_1_Shuff_54_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_54_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_55_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state72, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_55_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_55_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_55_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_55_ce0_assign_proc : process(ap_CS_fsm_state72, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_55_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_55_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_55_we0_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ShuffleConvs_1_Shuff_55_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_55_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_56_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state64, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_56_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_56_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_56_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_56_ce0_assign_proc : process(ap_CS_fsm_state64, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_56_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_56_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_56_we0_assign_proc : process(ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_56_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_56_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_57_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state64, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_57_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_57_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_57_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_57_ce0_assign_proc : process(ap_CS_fsm_state64, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_57_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_57_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_57_we0_assign_proc : process(ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ShuffleConvs_1_Shuff_57_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_57_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_58_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state65, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_58_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_58_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_58_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_58_ce0_assign_proc : process(ap_CS_fsm_state65, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_58_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_58_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_58_we0_assign_proc : process(ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_58_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_58_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_59_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state65, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_59_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_59_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_59_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_59_ce0_assign_proc : process(ap_CS_fsm_state65, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_59_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_59_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_59_we0_assign_proc : process(ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ShuffleConvs_1_Shuff_59_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_59_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_5_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state13, grp_ShuffleUnit1_fu_3437_conv3_weight_address0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_5_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_5_address0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
        else 
            ShuffleConvs_1_Shuff_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_5_ce0_assign_proc : process(ap_CS_fsm_state13, grp_ShuffleUnit1_fu_3437_conv3_weight_ce0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            ShuffleConvs_1_Shuff_5_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_5_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_60_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state66, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_60_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_60_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_60_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_60_ce0_assign_proc : process(ap_CS_fsm_state66, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_60_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            ShuffleConvs_1_Shuff_60_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_60_we0_assign_proc : process(ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_60_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_60_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_61_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state66, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_61_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_61_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_61_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_61_ce0_assign_proc : process(ap_CS_fsm_state66, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_61_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_61_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_61_we0_assign_proc : process(ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            ShuffleConvs_1_Shuff_61_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_61_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_62_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state67, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_62_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_62_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_62_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_62_ce0_assign_proc : process(ap_CS_fsm_state67, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_62_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_62_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_62_we0_assign_proc : process(ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_62_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_62_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_63_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state67, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_63_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_63_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_63_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_63_ce0_assign_proc : process(ap_CS_fsm_state67, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_63_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            ShuffleConvs_1_Shuff_63_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_63_we0_assign_proc : process(ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            ShuffleConvs_1_Shuff_63_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_63_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_64_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state68, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_64_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_64_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_64_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_64_ce0_assign_proc : process(ap_CS_fsm_state68, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_64_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_64_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_64_we0_assign_proc : process(ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_64_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_64_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_65_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state68, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_65_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_65_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_65_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_65_ce0_assign_proc : process(ap_CS_fsm_state68, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_65_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_65_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_65_we0_assign_proc : process(ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            ShuffleConvs_1_Shuff_65_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_65_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_66_address0_assign_proc : process(tmp_243_reg_10357, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state73, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_66_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_66_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_66_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_66_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state73, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_66_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_66_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_66_we0_assign_proc : process(ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_66_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_66_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_67_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state69, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_67_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_67_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_67_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_67_ce0_assign_proc : process(ap_CS_fsm_state69, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_67_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            ShuffleConvs_1_Shuff_67_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_67_we0_assign_proc : process(ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_67_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_67_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_68_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state69, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_68_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_68_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_68_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_68_ce0_assign_proc : process(ap_CS_fsm_state69, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_68_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_68_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_68_we0_assign_proc : process(ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            ShuffleConvs_1_Shuff_68_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_68_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_69_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state70, grp_ShuffleUnit1_fu_3437_conv2_bias_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_69_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_69_address0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
        else 
            ShuffleConvs_1_Shuff_69_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_69_ce0_assign_proc : process(ap_CS_fsm_state70, grp_ShuffleUnit1_fu_3437_conv2_bias_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_69_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_69_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_69_we0_assign_proc : process(ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_69_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_69_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_70_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state70, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_70_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_70_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_70_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_70_ce0_assign_proc : process(ap_CS_fsm_state70, grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_70_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            ShuffleConvs_1_Shuff_70_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_70_we0_assign_proc : process(ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            ShuffleConvs_1_Shuff_70_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_70_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_71_address0_assign_proc : process(tmp_243_reg_10357, ap_CS_fsm_state71, grp_ShuffleUnit1_fu_3437_conv1_bias_address0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_71_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_71_address0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
        else 
            ShuffleConvs_1_Shuff_71_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_71_ce0_assign_proc : process(ap_CS_fsm_state71, grp_ShuffleUnit1_fu_3437_conv1_bias_ce0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_71_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            ShuffleConvs_1_Shuff_71_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_71_we0_assign_proc : process(ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            ShuffleConvs_1_Shuff_71_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_71_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_7_address0_assign_proc : process(tmp_514_cast_reg_9228, ap_CS_fsm_state13, grp_ShuffleUnit1_fu_3437_conv1_weight_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_7_address0 <= tmp_514_cast_reg_9228(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_7_address0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
        else 
            ShuffleConvs_1_Shuff_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_7_ce0_assign_proc : process(ap_CS_fsm_state13, grp_ShuffleUnit1_fu_3437_conv1_weight_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_7_ce0 <= grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_7_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ShuffleConvs_1_Shuff_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_9_address0_assign_proc : process(tmp_665_cast_reg_9911, ap_CS_fsm_state38, grp_ShuffleUnit1_fu_3437_conv2_weight_address0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_9_address0 <= tmp_665_cast_reg_9911(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_9_address0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
        else 
            ShuffleConvs_1_Shuff_9_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_9_ce0_assign_proc : process(ap_CS_fsm_state38, grp_ShuffleUnit1_fu_3437_conv2_weight_ce0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            ShuffleConvs_1_Shuff_9_ce0 <= grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
        else 
            ShuffleConvs_1_Shuff_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_9_we0_assign_proc : process(ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ShuffleConvs_1_Shuff_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_address0_assign_proc : process(tmp_243_reg_10357, grp_ShuffleUnit1_fu_3437_conv3_bias_address0, ap_CS_fsm_state73, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_address0 <= tmp_243_reg_10357(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_address0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
        else 
            ShuffleConvs_1_Shuff_address0 <= "XXXXXX";
        end if; 
    end process;


    ShuffleConvs_1_Shuff_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_conv3_bias_ce0, ap_CS_fsm_state73, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            ShuffleConvs_1_Shuff_ce0 <= grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
        else 
            ShuffleConvs_1_Shuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Shuff_we0_assign_proc : process(ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            ShuffleConvs_1_Shuff_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Shuff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_10_address0_assign_proc : process(ap_CS_fsm_state23, tmp_614_cast_fu_5616_p1, grp_DownsampleUnit2_fu_3373_conv3r_weight_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_10_address0 <= tmp_614_cast_fu_5616_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_10_address0 <= grp_DownsampleUnit2_fu_3373_conv3r_weight_address0;
        else 
            ShuffleConvs_2_Downs_10_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_10_ce0_assign_proc : process(ap_CS_fsm_state23, grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_10_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_10_ce0 <= grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0;
        else 
            ShuffleConvs_2_Downs_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_10_we0_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_10_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_1_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state77, grp_DownsampleUnit2_fu_3373_conv1l_bias_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_1_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_1_address0 <= grp_DownsampleUnit2_fu_3373_conv1l_bias_address0;
        else 
            ShuffleConvs_2_Downs_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_1_ce0_assign_proc : process(ap_CS_fsm_state77, grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_1_ce0 <= grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0;
        else 
            ShuffleConvs_2_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_1_we0_assign_proc : process(ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_3_address0_assign_proc : process(ap_CS_fsm_state76, tmp_326_fu_8548_p1, grp_DownsampleUnit2_fu_3373_conv1r_bias_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_3_address0 <= tmp_326_fu_8548_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_3_address0 <= grp_DownsampleUnit2_fu_3373_conv1r_bias_address0;
        else 
            ShuffleConvs_2_Downs_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_3_ce0_assign_proc : process(ap_CS_fsm_state76, grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_3_ce0 <= grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0;
        else 
            ShuffleConvs_2_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_3_we0_assign_proc : process(ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_4_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state78, grp_DownsampleUnit2_fu_3373_conv2l_bias_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Downs_4_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_4_address0 <= grp_DownsampleUnit2_fu_3373_conv2l_bias_address0;
        else 
            ShuffleConvs_2_Downs_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_4_ce0_assign_proc : process(ap_CS_fsm_state78, grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Downs_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_4_ce0 <= grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0;
        else 
            ShuffleConvs_2_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_4_we0_assign_proc : process(ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Downs_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_5_address0_assign_proc : process(ap_CS_fsm_state76, tmp_326_fu_8548_p1, grp_DownsampleUnit2_fu_3373_conv2r_bias_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_5_address0 <= tmp_326_fu_8548_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_5_address0 <= grp_DownsampleUnit2_fu_3373_conv2r_bias_address0;
        else 
            ShuffleConvs_2_Downs_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_5_ce0_assign_proc : process(ap_CS_fsm_state76, grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_5_ce0 <= grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0;
        else 
            ShuffleConvs_2_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_5_we0_assign_proc : process(ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            ShuffleConvs_2_Downs_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_6_address0_assign_proc : process(tmp_738_cast_fu_7664_p1, ap_CS_fsm_state46, grp_DownsampleUnit2_fu_3373_conv1l_weight_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_6_address0 <= tmp_738_cast_fu_7664_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_6_address0 <= grp_DownsampleUnit2_fu_3373_conv1l_weight_address0;
        else 
            ShuffleConvs_2_Downs_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_6_ce0_assign_proc : process(ap_CS_fsm_state46, grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_6_ce0 <= grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0;
        else 
            ShuffleConvs_2_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_6_we0_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_7_address0_assign_proc : process(ap_CS_fsm_state23, tmp_614_cast_fu_5616_p1, grp_DownsampleUnit2_fu_3373_conv1r_weight_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_7_address0 <= tmp_614_cast_fu_5616_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_7_address0 <= grp_DownsampleUnit2_fu_3373_conv1r_weight_address0;
        else 
            ShuffleConvs_2_Downs_7_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_7_ce0_assign_proc : process(ap_CS_fsm_state23, grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_7_ce0 <= grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0;
        else 
            ShuffleConvs_2_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_7_we0_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ShuffleConvs_2_Downs_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_8_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state24, grp_DownsampleUnit2_fu_3373_conv2l_weight_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Downs_8_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_8_address0 <= grp_DownsampleUnit2_fu_3373_conv2l_weight_address0;
        else 
            ShuffleConvs_2_Downs_8_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_8_ce0_assign_proc : process(ap_CS_fsm_state24, grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Downs_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_8_ce0 <= grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0;
        else 
            ShuffleConvs_2_Downs_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_8_we0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Downs_8_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_9_address0_assign_proc : process(tmp_738_cast_fu_7664_p1, ap_CS_fsm_state46, grp_DownsampleUnit2_fu_3373_conv2r_weight_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_9_address0 <= tmp_738_cast_fu_7664_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_9_address0 <= grp_DownsampleUnit2_fu_3373_conv2r_weight_address0;
        else 
            ShuffleConvs_2_Downs_9_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_9_ce0_assign_proc : process(ap_CS_fsm_state46, grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_9_ce0 <= grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0;
        else 
            ShuffleConvs_2_Downs_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_9_we0_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Downs_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state77, grp_DownsampleUnit2_fu_3373_conv3r_bias_address0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_address0 <= grp_DownsampleUnit2_fu_3373_conv3r_bias_address0;
        else 
            ShuffleConvs_2_Downs_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Downs_ce0_assign_proc : process(ap_CS_fsm_state77, grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            ShuffleConvs_2_Downs_ce0 <= grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0;
        else 
            ShuffleConvs_2_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Downs_we0_assign_proc : process(ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            ShuffleConvs_2_Downs_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_11_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state26, grp_ShuffleUnit2_fu_3513_conv3_weight_address0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_11_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_11_address0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
        else 
            ShuffleConvs_2_Shuff_11_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_11_ce0_assign_proc : process(ap_CS_fsm_state26, grp_ShuffleUnit2_fu_3513_conv3_weight_ce0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_11_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_11_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_11_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_11_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_13_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state26, grp_ShuffleUnit2_fu_3513_conv1_weight_address0, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_13_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_13_address0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
        else 
            ShuffleConvs_2_Shuff_13_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_13_ce0_assign_proc : process(ap_CS_fsm_state26, grp_ShuffleUnit2_fu_3513_conv1_weight_ce0, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_13_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_13_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_13_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ShuffleConvs_2_Shuff_13_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_15_address0_assign_proc : process(tmp_738_cast_reg_10098, grp_ShuffleUnit2_fu_3513_conv2_weight_address0, ap_CS_fsm_state47, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_15_address0 <= tmp_738_cast_reg_10098(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_15_address0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
        else 
            ShuffleConvs_2_Shuff_15_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_15_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_conv2_weight_ce0, ap_CS_fsm_state47, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_15_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_15_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_15_we0_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_15_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_17_address0_assign_proc : process(tmp_326_reg_10586, grp_ShuffleUnit2_fu_3513_conv2_bias_address0, ap_CS_fsm_state82, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_17_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_17_address0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
        else 
            ShuffleConvs_2_Shuff_17_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_17_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_conv2_bias_ce0, ap_CS_fsm_state82, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_17_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_17_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_17_we0_assign_proc : process(ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_17_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_18_address0_assign_proc : process(tmp_614_cast_reg_9506, grp_ShuffleUnit2_fu_3513_conv3_weight_address0, ap_CS_fsm_state27, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ShuffleConvs_2_Shuff_18_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_18_address0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
        else 
            ShuffleConvs_2_Shuff_18_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_18_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_conv3_weight_ce0, ap_CS_fsm_state27, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ShuffleConvs_2_Shuff_18_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_18_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_18_we0_assign_proc : process(ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ShuffleConvs_2_Shuff_18_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_19_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state78, grp_ShuffleUnit2_fu_3513_conv1_bias_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Shuff_19_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_19_address0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
        else 
            ShuffleConvs_2_Shuff_19_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_19_ce0_assign_proc : process(ap_CS_fsm_state78, grp_ShuffleUnit2_fu_3513_conv1_bias_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Shuff_19_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_19_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_19_we0_assign_proc : process(ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ShuffleConvs_2_Shuff_19_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_1_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state80, grp_ShuffleUnit2_fu_3513_conv2_bias_address0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_1_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_1_address0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
        else 
            ShuffleConvs_2_Shuff_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_1_ce0_assign_proc : process(ap_CS_fsm_state80, grp_ShuffleUnit2_fu_3513_conv2_bias_ce0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_1_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_1_we0_assign_proc : process(ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_20_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state79, grp_ShuffleUnit2_fu_3513_conv2_bias_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_20_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_20_address0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
        else 
            ShuffleConvs_2_Shuff_20_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_20_ce0_assign_proc : process(ap_CS_fsm_state79, grp_ShuffleUnit2_fu_3513_conv2_bias_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_20_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_20_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_20_we0_assign_proc : process(ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_20_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_21_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state79, grp_ShuffleUnit2_fu_3513_conv3_bias_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_21_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_21_address0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
        else 
            ShuffleConvs_2_Shuff_21_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_21_ce0_assign_proc : process(ap_CS_fsm_state79, grp_ShuffleUnit2_fu_3513_conv3_bias_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_21_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_21_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_21_we0_assign_proc : process(ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            ShuffleConvs_2_Shuff_21_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_22_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state80, grp_ShuffleUnit2_fu_3513_conv1_bias_address0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_22_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_22_address0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
        else 
            ShuffleConvs_2_Shuff_22_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_22_ce0_assign_proc : process(ap_CS_fsm_state80, grp_ShuffleUnit2_fu_3513_conv1_bias_ce0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_22_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_22_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_22_we0_assign_proc : process(ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            ShuffleConvs_2_Shuff_22_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_3_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state81, grp_ShuffleUnit2_fu_3513_conv3_bias_address0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_3_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_3_address0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
        else 
            ShuffleConvs_2_Shuff_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_3_ce0_assign_proc : process(ap_CS_fsm_state81, grp_ShuffleUnit2_fu_3513_conv3_bias_ce0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_3_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_3_we0_assign_proc : process(ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_4_address0_assign_proc : process(tmp_326_reg_10586, ap_CS_fsm_state81, grp_ShuffleUnit2_fu_3513_conv1_bias_address0, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_4_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_4_address0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
        else 
            ShuffleConvs_2_Shuff_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_4_ce0_assign_proc : process(ap_CS_fsm_state81, grp_ShuffleUnit2_fu_3513_conv1_bias_ce0, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_4_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_4_we0_assign_proc : process(ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ShuffleConvs_2_Shuff_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_5_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state24, grp_ShuffleUnit2_fu_3513_conv1_weight_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Shuff_5_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_5_address0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
        else 
            ShuffleConvs_2_Shuff_5_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_5_ce0_assign_proc : process(ap_CS_fsm_state24, grp_ShuffleUnit2_fu_3513_conv1_weight_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Shuff_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_5_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_5_we0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ShuffleConvs_2_Shuff_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_6_address0_assign_proc : process(tmp_738_cast_fu_7664_p1, ap_CS_fsm_state46, grp_ShuffleUnit2_fu_3513_conv2_weight_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Shuff_6_address0 <= tmp_738_cast_fu_7664_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_6_address0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
        else 
            ShuffleConvs_2_Shuff_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_6_ce0_assign_proc : process(ap_CS_fsm_state46, grp_ShuffleUnit2_fu_3513_conv2_weight_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Shuff_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_6_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_6_we0_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ShuffleConvs_2_Shuff_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_7_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state25, grp_ShuffleUnit2_fu_3513_conv3_weight_address0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_7_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_7_address0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
        else 
            ShuffleConvs_2_Shuff_7_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_7_ce0_assign_proc : process(ap_CS_fsm_state25, grp_ShuffleUnit2_fu_3513_conv3_weight_ce0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            ShuffleConvs_2_Shuff_7_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_7_we0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_8_address0_assign_proc : process(tmp_614_cast_reg_9506, ap_CS_fsm_state25, grp_ShuffleUnit2_fu_3513_conv1_weight_address0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_8_address0 <= tmp_614_cast_reg_9506(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_8_address0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
        else 
            ShuffleConvs_2_Shuff_8_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_8_ce0_assign_proc : process(ap_CS_fsm_state25, grp_ShuffleUnit2_fu_3513_conv1_weight_ce0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_8_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_8_ce0 <= grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_8_we0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ShuffleConvs_2_Shuff_8_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_9_address0_assign_proc : process(tmp_738_cast_reg_10098, grp_ShuffleUnit2_fu_3513_conv2_weight_address0, ap_CS_fsm_state47, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_9_address0 <= tmp_738_cast_reg_10098(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_9_address0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
        else 
            ShuffleConvs_2_Shuff_9_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_9_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_conv2_weight_ce0, ap_CS_fsm_state47, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            ShuffleConvs_2_Shuff_9_ce0 <= grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
        else 
            ShuffleConvs_2_Shuff_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_9_we0_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ShuffleConvs_2_Shuff_9_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_address0_assign_proc : process(tmp_326_reg_10586, grp_ShuffleUnit2_fu_3513_conv3_bias_address0, ap_CS_fsm_state82, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_address0 <= tmp_326_reg_10586(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_address0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
        else 
            ShuffleConvs_2_Shuff_address0 <= "XXXXXXX";
        end if; 
    end process;


    ShuffleConvs_2_Shuff_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_conv3_bias_ce0, ap_CS_fsm_state82, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ShuffleConvs_2_Shuff_ce0 <= grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
        else 
            ShuffleConvs_2_Shuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_2_Shuff_we0_assign_proc : process(ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ShuffleConvs_2_Shuff_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Shuff_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state119 <= ap_CS_fsm(118);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state120 <= ap_CS_fsm(119);
    ap_CS_fsm_state121 <= ap_CS_fsm(120);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state137 <= ap_CS_fsm(136);
    ap_CS_fsm_state138 <= ap_CS_fsm(137);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state143 <= ap_CS_fsm(142);
    ap_CS_fsm_state144 <= ap_CS_fsm(143);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_done_assign_proc : process(ap_CS_fsm_state126, exitcond1_i_fu_8815_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_1 = exitcond1_i_fu_8815_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state126, exitcond1_i_fu_8815_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state126) and (ap_const_lv1_1 = exitcond1_i_fu_8815_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    avgpool_output_address0_assign_proc : process(ap_CS_fsm_state127, grp_avgpool_fu_3573_output_r_address0, ap_CS_fsm_state125, tmp_i_419_fu_8855_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            avgpool_output_address0 <= tmp_i_419_fu_8855_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            avgpool_output_address0 <= grp_avgpool_fu_3573_output_r_address0;
        else 
            avgpool_output_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    avgpool_output_ce0_assign_proc : process(ap_CS_fsm_state127, grp_avgpool_fu_3573_output_r_ce0, ap_CS_fsm_state125)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            avgpool_output_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            avgpool_output_ce0 <= grp_avgpool_fu_3573_output_r_ce0;
        else 
            avgpool_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    avgpool_output_we0_assign_proc : process(grp_avgpool_fu_3573_output_r_we0, ap_CS_fsm_state125)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            avgpool_output_we0 <= grp_avgpool_fu_3573_output_r_we0;
        else 
            avgpool_output_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_address0_assign_proc : process(ap_CS_fsm_state48, tmp_189_fu_7718_p1, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state83, tmp_193_fu_7739_p1, tmp_197_fu_7766_p1, tmp_201_fu_7786_p1, tmp_205_fu_7813_p1, tmp_209_fu_7837_p1, tmp_213_fu_7860_p1, tmp_217_fu_7880_p1, tmp_246_fu_7968_p1, tmp_252_fu_8022_p1, tmp_258_fu_8063_p1, tmp_264_fu_8093_p1, tmp_270_fu_8127_p1, tmp_274_fu_8164_p1, tmp_278_fu_8198_p1, tmp_282_fu_8229_p1, tmp_286_fu_8259_p1, tmp_290_fu_8289_p1, tmp_294_fu_8319_p1, tmp_298_fu_8349_p1, tmp_302_fu_8383_p1, tmp_306_fu_8421_p1, tmp_324_fu_8512_p1, tmp_330_fu_8572_p1, tmp_334_fu_8603_p1, tmp_338_fu_8633_p1, tmp_342_fu_8663_p1, tmp_346_fu_8693_p1, tmp_350_fu_8723_p1, tmp_232_fu_8769_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            bias_address0 <= tmp_232_fu_8769_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            bias_address0 <= tmp_350_fu_8723_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            bias_address0 <= tmp_346_fu_8693_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            bias_address0 <= tmp_342_fu_8663_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            bias_address0 <= tmp_338_fu_8633_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            bias_address0 <= tmp_334_fu_8603_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            bias_address0 <= tmp_330_fu_8572_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_address0 <= tmp_324_fu_8512_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            bias_address0 <= tmp_306_fu_8421_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            bias_address0 <= tmp_302_fu_8383_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            bias_address0 <= tmp_298_fu_8349_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            bias_address0 <= tmp_294_fu_8319_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            bias_address0 <= tmp_290_fu_8289_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            bias_address0 <= tmp_286_fu_8259_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            bias_address0 <= tmp_282_fu_8229_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            bias_address0 <= tmp_278_fu_8198_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            bias_address0 <= tmp_274_fu_8164_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            bias_address0 <= tmp_270_fu_8127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            bias_address0 <= tmp_264_fu_8093_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            bias_address0 <= tmp_258_fu_8063_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            bias_address0 <= tmp_252_fu_8022_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            bias_address0 <= tmp_246_fu_7968_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            bias_address0 <= tmp_217_fu_7880_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            bias_address0 <= tmp_213_fu_7860_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            bias_address0 <= tmp_209_fu_7837_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            bias_address0 <= tmp_205_fu_7813_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            bias_address0 <= tmp_201_fu_7786_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            bias_address0 <= tmp_197_fu_7766_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            bias_address0 <= tmp_193_fu_7739_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            bias_address0 <= tmp_189_fu_7718_p1(12 - 1 downto 0);
        else 
            bias_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    bias_address1_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state85, tmp_191_fu_7729_p1, tmp_195_fu_7749_p1, tmp_199_fu_7776_p1, tmp_203_fu_7796_p1, tmp_207_fu_7827_p1, tmp_211_fu_7847_p1, tmp_215_fu_7870_p1, tmp_241_fu_7945_p1, tmp_249_fu_7988_p1, tmp_255_fu_8038_p1, tmp_261_fu_8078_p1, tmp_267_fu_8108_p1, tmp_272_fu_8146_p1, tmp_276_fu_8172_p1, tmp_280_fu_8214_p1, tmp_284_fu_8244_p1, tmp_288_fu_8274_p1, tmp_292_fu_8304_p1, tmp_296_fu_8334_p1, tmp_300_fu_8364_p1, tmp_304_fu_8402_p1, tmp_308_fu_8440_p1, tmp_328_fu_8532_p1, tmp_332_fu_8588_p1, tmp_336_fu_8618_p1, tmp_340_fu_8648_p1, tmp_344_fu_8678_p1, tmp_348_fu_8708_p1, tmp_352_fu_8738_p1, tmp_236_fu_8805_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            bias_address1 <= tmp_236_fu_8805_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            bias_address1 <= tmp_352_fu_8738_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            bias_address1 <= tmp_348_fu_8708_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            bias_address1 <= tmp_344_fu_8678_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            bias_address1 <= tmp_340_fu_8648_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            bias_address1 <= tmp_336_fu_8618_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            bias_address1 <= tmp_332_fu_8588_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_address1 <= tmp_328_fu_8532_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            bias_address1 <= tmp_308_fu_8440_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            bias_address1 <= tmp_304_fu_8402_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            bias_address1 <= tmp_300_fu_8364_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            bias_address1 <= tmp_296_fu_8334_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            bias_address1 <= tmp_292_fu_8304_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            bias_address1 <= tmp_288_fu_8274_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            bias_address1 <= tmp_284_fu_8244_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            bias_address1 <= tmp_280_fu_8214_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            bias_address1 <= tmp_276_fu_8172_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            bias_address1 <= tmp_272_fu_8146_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            bias_address1 <= tmp_267_fu_8108_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            bias_address1 <= tmp_261_fu_8078_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            bias_address1 <= tmp_255_fu_8038_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            bias_address1 <= tmp_249_fu_7988_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            bias_address1 <= tmp_241_fu_7945_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            bias_address1 <= tmp_215_fu_7870_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            bias_address1 <= tmp_211_fu_7847_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            bias_address1 <= tmp_207_fu_7827_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            bias_address1 <= tmp_203_fu_7796_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            bias_address1 <= tmp_199_fu_7776_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            bias_address1 <= tmp_195_fu_7749_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            bias_address1 <= tmp_191_fu_7729_p1(12 - 1 downto 0);
        else 
            bias_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    bias_ce0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state83)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            bias_ce0 <= ap_const_logic_1;
        else 
            bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce1_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            bias_ce1 <= ap_const_logic_1;
        else 
            bias_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ci_10_fu_8849_p2 <= std_logic_vector(unsigned(ci_i_reg_3306) + unsigned(ap_const_lv10_1));
    ci_9_fu_4108_p2 <= std_logic_vector(unsigned(ci_reg_3135) + unsigned(ap_const_lv5_1));
    ci_cast1_fu_4098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),7));
    ci_cast_fu_4094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),8));
    co2_cast117_cast_fu_5978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),6));
    co2_cast119_cast_fu_5970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),8));
    co2_cast120_cast_fu_5966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),9));
    co2_cast1_fu_5958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),11));
    co2_cast2_fu_5962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),10));
    co2_cast5_fu_5974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co2_reg_3169),7));
    co_22_fu_3628_p2 <= std_logic_vector(unsigned(co_reg_3124) + unsigned(ap_const_lv5_1));
    co_23_fu_5988_p2 <= std_logic_vector(unsigned(co2_reg_3169) + unsigned(ap_const_lv5_1));
    co_24_fu_8821_p2 <= std_logic_vector(unsigned(co_i_reg_3283) + unsigned(ap_const_lv4_1));
    co_cast137_cast_fu_3618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),6));
    co_cast138_cast_fu_3614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),7));
    co_cast143_cast1_fu_3602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),9));
    co_cast143_cast_fu_3606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),10));
    co_cast144_cast_fu_3598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),11));
    co_cast1_fu_3590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),13));
    co_cast2_fu_3594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),12));
    co_cast8_fu_3610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_3124),8));

    conv1_bias_address0_assign_proc : process(tmp_189_reg_10201, ap_CS_fsm_state49, grp_conv1_fu_3549_bias_address0, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            conv1_bias_address0 <= tmp_189_reg_10201(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            conv1_bias_address0 <= grp_conv1_fu_3549_bias_address0;
        else 
            conv1_bias_address0 <= "XXXXX";
        end if; 
    end process;


    conv1_bias_ce0_assign_proc : process(ap_CS_fsm_state49, grp_conv1_fu_3549_bias_ce0, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            conv1_bias_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            conv1_bias_ce0 <= grp_conv1_fu_3549_bias_ce0;
        else 
            conv1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_bias_we0_assign_proc : process(ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            conv1_bias_we0 <= ap_const_logic_1;
        else 
            conv1_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_address0_assign_proc : process(grp_DownsampleUnit0_fu_3317_input_r_address0, grp_conv1_fu_3549_conv1_output_address0, ap_CS_fsm_state89, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            conv1_output_address0 <= grp_conv1_fu_3549_conv1_output_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            conv1_output_address0 <= grp_DownsampleUnit0_fu_3317_input_r_address0;
        else 
            conv1_output_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_output_ce0_assign_proc : process(grp_DownsampleUnit0_fu_3317_input_r_ce0, grp_conv1_fu_3549_conv1_output_ce0, ap_CS_fsm_state89, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            conv1_output_ce0 <= grp_conv1_fu_3549_conv1_output_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            conv1_output_ce0 <= grp_DownsampleUnit0_fu_3317_input_r_ce0;
        else 
            conv1_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_we0_assign_proc : process(grp_conv1_fu_3549_conv1_output_we0, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            conv1_output_we0 <= grp_conv1_fu_3549_conv1_output_we0;
        else 
            conv1_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_weight_address0 <= grp_conv1_fu_3549_weight_address0;
    conv1_weight_ce0 <= grp_conv1_fu_3549_weight_ce0;

    conv_last_bias_address0_assign_proc : process(grp_conv_last_fu_3561_bias_address0, ap_CS_fsm_state84, ap_CS_fsm_state123, tmp_233_fu_8774_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            conv_last_bias_address0 <= tmp_233_fu_8774_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            conv_last_bias_address0 <= grp_conv_last_fu_3561_bias_address0;
        else 
            conv_last_bias_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv_last_bias_ce0_assign_proc : process(grp_conv_last_fu_3561_bias_ce0, ap_CS_fsm_state84, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            conv_last_bias_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            conv_last_bias_ce0 <= grp_conv_last_fu_3561_bias_ce0;
        else 
            conv_last_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_bias_we0_assign_proc : process(ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            conv_last_bias_we0 <= ap_const_logic_1;
        else 
            conv_last_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_address0_assign_proc : process(grp_conv_last_fu_3561_output_r_address0, grp_avgpool_fu_3573_conv_last_output_address0, ap_CS_fsm_state125, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            conv_last_output_address0 <= grp_avgpool_fu_3573_conv_last_output_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            conv_last_output_address0 <= grp_conv_last_fu_3561_output_r_address0;
        else 
            conv_last_output_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_ce0_assign_proc : process(grp_conv_last_fu_3561_output_r_ce0, grp_avgpool_fu_3573_conv_last_output_ce0, ap_CS_fsm_state125, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            conv_last_output_ce0 <= grp_avgpool_fu_3573_conv_last_output_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            conv_last_output_ce0 <= grp_conv_last_fu_3561_output_r_ce0;
        else 
            conv_last_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_we0_assign_proc : process(grp_conv_last_fu_3561_output_r_we0, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            conv_last_output_we0 <= grp_conv_last_fu_3561_output_r_we0;
        else 
            conv_last_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_last_weight_address0 <= grp_conv_last_fu_3561_weight_address0;
    conv_last_weight_ce0 <= grp_conv_last_fu_3561_weight_ce0;

    downsampleunit0_outp_address0_assign_proc : process(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0, grp_ShuffleUnit0_fu_3401_input_r_address0, ap_CS_fsm_state89, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            downsampleunit0_outp_address0 <= grp_ShuffleUnit0_fu_3401_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            downsampleunit0_outp_address0 <= grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0;
        else 
            downsampleunit0_outp_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    downsampleunit0_outp_ce0_assign_proc : process(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0, grp_ShuffleUnit0_fu_3401_input_r_ce0, ap_CS_fsm_state89, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            downsampleunit0_outp_ce0 <= grp_ShuffleUnit0_fu_3401_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            downsampleunit0_outp_ce0 <= grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0;
        else 
            downsampleunit0_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit0_outp_ce1_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_ce1, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            downsampleunit0_outp_ce1 <= grp_ShuffleUnit0_fu_3401_input_r_ce1;
        else 
            downsampleunit0_outp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit0_outp_we0_assign_proc : process(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            downsampleunit0_outp_we0 <= grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0;
        else 
            downsampleunit0_outp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit1_outp_address0_assign_proc : process(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0, grp_ShuffleUnit1_fu_3437_input_r_address0, ap_CS_fsm_state97, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            downsampleunit1_outp_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            downsampleunit1_outp_address0 <= grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0;
        else 
            downsampleunit1_outp_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    downsampleunit1_outp_ce0_assign_proc : process(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0, grp_ShuffleUnit1_fu_3437_input_r_ce0, ap_CS_fsm_state97, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            downsampleunit1_outp_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            downsampleunit1_outp_ce0 <= grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0;
        else 
            downsampleunit1_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit1_outp_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            downsampleunit1_outp_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            downsampleunit1_outp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit1_outp_we0_assign_proc : process(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            downsampleunit1_outp_we0 <= grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0;
        else 
            downsampleunit1_outp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit2_outp_address0_assign_proc : process(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0, grp_ShuffleUnit2_fu_3513_input_r_address0, ap_CS_fsm_state115, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            downsampleunit2_outp_address0 <= grp_ShuffleUnit2_fu_3513_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            downsampleunit2_outp_address0 <= grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0;
        else 
            downsampleunit2_outp_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    downsampleunit2_outp_ce0_assign_proc : process(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0, grp_ShuffleUnit2_fu_3513_input_r_ce0, ap_CS_fsm_state115, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            downsampleunit2_outp_ce0 <= grp_ShuffleUnit2_fu_3513_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            downsampleunit2_outp_ce0 <= grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0;
        else 
            downsampleunit2_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit2_outp_ce1_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_ce1, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            downsampleunit2_outp_ce1 <= grp_ShuffleUnit2_fu_3513_input_r_ce1;
        else 
            downsampleunit2_outp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    downsampleunit2_outp_we0_assign_proc : process(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0, ap_CS_fsm_state115)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            downsampleunit2_outp_we0 <= grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0;
        else 
            downsampleunit2_outp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_6323_p2 <= "1" when (h_reg_3191 = ap_const_lv2_3) else "0";
    exitcond11_fu_5378_p2 <= "1" when (i1_reg_3158 = ap_const_lv5_10) else "0";
    exitcond12_fu_7219_p2 <= "1" when (i4_reg_3214 = ap_const_lv3_4) else "0";
    exitcond13_fu_6394_p2 <= "1" when (i3_reg_3203 = ap_const_lv2_2) else "0";
    exitcond1_fu_5982_p2 <= "1" when (co2_reg_3169 = ap_const_lv5_18) else "0";
    exitcond1_i_fu_8815_p2 <= "1" when (co_i_reg_3283 = ap_const_lv4_A) else "0";
    exitcond2_fu_4102_p2 <= "1" when (ci_reg_3135 = ap_const_lv5_18) else "0";
    exitcond3_fu_7706_p2 <= "1" when (i5_reg_3225 = ap_const_lv5_18) else "0";
    exitcond4_fu_6144_p2 <= "1" when (w_reg_3180 = ap_const_lv2_3) else "0";
    exitcond5_fu_4240_p2 <= "1" when (i_reg_3147 = ap_const_lv3_4) else "0";
    exitcond6_fu_7885_p2 <= "1" when (k_reg_3237 = ap_const_lv2_2) else "0";
    exitcond7_fu_8783_p2 <= "1" when (i8_reg_3271 = ap_const_lv4_A) else "0";
    exitcond8_fu_8747_p2 <= "1" when (i7_reg_3259 = ap_const_lv10_200) else "0";
    exitcond9_fu_8445_p2 <= "1" when (k6_reg_3248 = ap_const_lv3_4) else "0";
    exitcond_fu_3622_p2 <= "1" when (co_reg_3124 = ap_const_lv5_18) else "0";
    exitcond_i_fu_8843_p2 <= "1" when (ci_i_reg_3306 = ap_const_lv10_200) else "0";

    fc_bias_address0_assign_proc : process(tmp_i_reg_10696, ap_CS_fsm_state127, ap_CS_fsm_state86, tmp_237_fu_8810_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            fc_bias_address0 <= tmp_i_reg_10696(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            fc_bias_address0 <= tmp_237_fu_8810_p1(4 - 1 downto 0);
        else 
            fc_bias_address0 <= "XXXX";
        end if; 
    end process;


    fc_bias_ce0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state86))) then 
            fc_bias_ce0 <= ap_const_logic_1;
        else 
            fc_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias_we0_assign_proc : process(ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            fc_bias_we0 <= ap_const_logic_1;
        else 
            fc_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_output_address0 <= tmp_i_reg_10696(10 - 1 downto 0);

    fc_output_ce0_assign_proc : process(ap_CS_fsm_state144)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            fc_output_ce0 <= ap_const_logic_1;
        else 
            fc_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_output_d0 <= result_reg_10755;

    fc_output_we0_assign_proc : process(ap_CS_fsm_state144)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            fc_output_we0 <= ap_const_logic_1;
        else 
            fc_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_weight_address0 <= tmp_764_cast_fu_8869_p1(13 - 1 downto 0);

    fc_weight_ce0_assign_proc : process(ap_CS_fsm_state127)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            fc_weight_ce0 <= ap_const_logic_1;
        else 
            fc_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_DownsampleUnit0_fu_3317_ap_start <= ap_reg_grp_DownsampleUnit0_fu_3317_ap_start;
    grp_DownsampleUnit1_fu_3345_ap_start <= ap_reg_grp_DownsampleUnit1_fu_3345_ap_start;
    grp_DownsampleUnit2_fu_3373_ap_start <= ap_reg_grp_DownsampleUnit2_fu_3373_ap_start;
    grp_ShuffleUnit0_fu_3401_ap_start <= ap_reg_grp_ShuffleUnit0_fu_3401_ap_start;

    grp_ShuffleUnit0_fu_3401_conv1_bias_q0_assign_proc : process(ShuffleConvs_0_Shuff_19_q0, ShuffleConvs_0_Shuff_22_q0, ShuffleConvs_0_Shuff_4_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv1_bias_q0 <= ShuffleConvs_0_Shuff_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv1_bias_q0 <= ShuffleConvs_0_Shuff_22_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv1_bias_q0 <= ShuffleConvs_0_Shuff_19_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv1_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_conv1_weight_q0_assign_proc : process(ShuffleConvs_0_Shuff_5_q0, ShuffleConvs_0_Shuff_8_q0, ShuffleConvs_0_Shuff_13_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv1_weight_q0 <= ShuffleConvs_0_Shuff_13_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv1_weight_q0 <= ShuffleConvs_0_Shuff_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv1_weight_q0 <= ShuffleConvs_0_Shuff_5_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv1_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_conv2_bias_q0_assign_proc : process(ShuffleConvs_0_Shuff_20_q0, ShuffleConvs_0_Shuff_1_q0, ShuffleConvs_0_Shuff_17_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv2_bias_q0 <= ShuffleConvs_0_Shuff_17_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv2_bias_q0 <= ShuffleConvs_0_Shuff_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv2_bias_q0 <= ShuffleConvs_0_Shuff_20_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv2_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_conv2_weight_q0_assign_proc : process(ShuffleConvs_0_Shuff_6_q0, ShuffleConvs_0_Shuff_9_q0, ShuffleConvs_0_Shuff_15_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv2_weight_q0 <= ShuffleConvs_0_Shuff_15_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv2_weight_q0 <= ShuffleConvs_0_Shuff_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv2_weight_q0 <= ShuffleConvs_0_Shuff_6_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv2_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_conv3_bias_q0_assign_proc : process(ShuffleConvs_0_Shuff_21_q0, ShuffleConvs_0_Shuff_3_q0, ShuffleConvs_0_Shuff_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv3_bias_q0 <= ShuffleConvs_0_Shuff_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv3_bias_q0 <= ShuffleConvs_0_Shuff_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv3_bias_q0 <= ShuffleConvs_0_Shuff_21_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv3_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_conv3_weight_q0_assign_proc : process(ShuffleConvs_0_Shuff_7_q0, ShuffleConvs_0_Shuff_11_q0, ShuffleConvs_0_Shuff_18_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_conv3_weight_q0 <= ShuffleConvs_0_Shuff_18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_conv3_weight_q0 <= ShuffleConvs_0_Shuff_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_conv3_weight_q0 <= ShuffleConvs_0_Shuff_7_q0;
        else 
            grp_ShuffleUnit0_fu_3401_conv3_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_input_r_q0_assign_proc : process(downsampleunit0_outp_q0, shuffleunit0_0_outpu_q0, shuffleunit0_1_outpu_q0, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q0 <= shuffleunit0_1_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q0 <= shuffleunit0_0_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q0 <= downsampleunit0_outp_q0;
        else 
            grp_ShuffleUnit0_fu_3401_input_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit0_fu_3401_input_r_q1_assign_proc : process(downsampleunit0_outp_q1, shuffleunit0_0_outpu_q1, shuffleunit0_1_outpu_q1, ap_CS_fsm_state91, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q1 <= shuffleunit0_1_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q1 <= shuffleunit0_0_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_ShuffleUnit0_fu_3401_input_r_q1 <= downsampleunit0_outp_q1;
        else 
            grp_ShuffleUnit0_fu_3401_input_r_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_ShuffleUnit1_fu_3437_ap_start <= ap_reg_grp_ShuffleUnit1_fu_3437_ap_start;

    grp_ShuffleUnit1_fu_3437_conv1_bias_q0_assign_proc : process(ShuffleConvs_1_Shuff_51_q0, ShuffleConvs_1_Shuff_54_q0, ShuffleConvs_1_Shuff_58_q0, ShuffleConvs_1_Shuff_61_q0, ShuffleConvs_1_Shuff_64_q0, ShuffleConvs_1_Shuff_68_q0, ShuffleConvs_1_Shuff_71_q0, ShuffleConvs_1_Shuff_55_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_55_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_71_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_68_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_64_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_61_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_58_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_54_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= ShuffleConvs_1_Shuff_51_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv1_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_conv1_weight_q0_assign_proc : process(ShuffleConvs_1_Shuff_1_q0, ShuffleConvs_1_Shuff_7_q0, ShuffleConvs_1_Shuff_13_q0, ShuffleConvs_1_Shuff_21_q0, ShuffleConvs_1_Shuff_27_q0, ShuffleConvs_1_Shuff_33_q0, ShuffleConvs_1_Shuff_41_q0, ShuffleConvs_1_Shuff_47_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_47_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_41_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_33_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_27_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_21_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_13_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= ShuffleConvs_1_Shuff_1_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv1_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_conv2_bias_q0_assign_proc : process(ShuffleConvs_1_Shuff_52_q0, ShuffleConvs_1_Shuff_56_q0, ShuffleConvs_1_Shuff_59_q0, ShuffleConvs_1_Shuff_62_q0, ShuffleConvs_1_Shuff_65_q0, ShuffleConvs_1_Shuff_69_q0, ShuffleConvs_1_Shuff_17_q0, ShuffleConvs_1_Shuff_66_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_66_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_17_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_69_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_65_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_62_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_59_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_56_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= ShuffleConvs_1_Shuff_52_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv2_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_conv2_weight_q0_assign_proc : process(ShuffleConvs_1_Shuff_3_q0, ShuffleConvs_1_Shuff_9_q0, ShuffleConvs_1_Shuff_15_q0, ShuffleConvs_1_Shuff_23_q0, ShuffleConvs_1_Shuff_29_q0, ShuffleConvs_1_Shuff_35_q0, ShuffleConvs_1_Shuff_43_q0, ShuffleConvs_1_Shuff_49_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_49_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_43_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_35_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_29_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_23_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_15_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= ShuffleConvs_1_Shuff_3_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv2_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_conv3_bias_q0_assign_proc : process(ShuffleConvs_1_Shuff_53_q0, ShuffleConvs_1_Shuff_57_q0, ShuffleConvs_1_Shuff_60_q0, ShuffleConvs_1_Shuff_63_q0, ShuffleConvs_1_Shuff_67_q0, ShuffleConvs_1_Shuff_70_q0, ShuffleConvs_1_Shuff_39_q0, ShuffleConvs_1_Shuff_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_39_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_70_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_67_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_63_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_60_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_57_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= ShuffleConvs_1_Shuff_53_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv3_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_conv3_weight_q0_assign_proc : process(ShuffleConvs_1_Shuff_5_q0, ShuffleConvs_1_Shuff_11_q0, ShuffleConvs_1_Shuff_19_q0, ShuffleConvs_1_Shuff_25_q0, ShuffleConvs_1_Shuff_31_q0, ShuffleConvs_1_Shuff_37_q0, ShuffleConvs_1_Shuff_45_q0, ShuffleConvs_1_Shuff_50_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_50_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_45_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_37_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_31_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_25_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_19_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= ShuffleConvs_1_Shuff_5_q0;
        else 
            grp_ShuffleUnit1_fu_3437_conv3_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_input_r_q0_assign_proc : process(downsampleunit1_outp_q0, shuffleunit1_0_outpu_q0, shuffleunit1_1_outpu_q0, shuffleunit1_2_outpu_q0, shuffleunit1_3_outpu_q0, shuffleunit1_4_outpu_q0, shuffleunit1_5_outpu_q0, shuffleunit1_6_outpu_q0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_6_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_5_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_4_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_3_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_2_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_1_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= shuffleunit1_0_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= downsampleunit1_outp_q0;
        else 
            grp_ShuffleUnit1_fu_3437_input_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit1_fu_3437_input_r_q1_assign_proc : process(downsampleunit1_outp_q1, shuffleunit1_0_outpu_q1, shuffleunit1_1_outpu_q1, shuffleunit1_2_outpu_q1, shuffleunit1_3_outpu_q1, shuffleunit1_4_outpu_q1, shuffleunit1_5_outpu_q1, shuffleunit1_6_outpu_q1, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state107, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_6_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_5_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_4_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_3_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_2_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_1_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= shuffleunit1_0_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= downsampleunit1_outp_q1;
        else 
            grp_ShuffleUnit1_fu_3437_input_r_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_ShuffleUnit2_fu_3513_ap_start <= ap_reg_grp_ShuffleUnit2_fu_3513_ap_start;

    grp_ShuffleUnit2_fu_3513_conv1_bias_q0_assign_proc : process(ShuffleConvs_2_Shuff_19_q0, ShuffleConvs_2_Shuff_22_q0, ShuffleConvs_2_Shuff_4_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv1_bias_q0 <= ShuffleConvs_2_Shuff_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv1_bias_q0 <= ShuffleConvs_2_Shuff_22_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv1_bias_q0 <= ShuffleConvs_2_Shuff_19_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv1_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_conv1_weight_q0_assign_proc : process(ShuffleConvs_2_Shuff_5_q0, ShuffleConvs_2_Shuff_8_q0, ShuffleConvs_2_Shuff_13_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv1_weight_q0 <= ShuffleConvs_2_Shuff_13_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv1_weight_q0 <= ShuffleConvs_2_Shuff_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv1_weight_q0 <= ShuffleConvs_2_Shuff_5_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv1_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_conv2_bias_q0_assign_proc : process(ShuffleConvs_2_Shuff_20_q0, ShuffleConvs_2_Shuff_1_q0, ShuffleConvs_2_Shuff_17_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv2_bias_q0 <= ShuffleConvs_2_Shuff_17_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv2_bias_q0 <= ShuffleConvs_2_Shuff_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv2_bias_q0 <= ShuffleConvs_2_Shuff_20_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv2_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_conv2_weight_q0_assign_proc : process(ShuffleConvs_2_Shuff_6_q0, ShuffleConvs_2_Shuff_9_q0, ShuffleConvs_2_Shuff_15_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv2_weight_q0 <= ShuffleConvs_2_Shuff_15_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv2_weight_q0 <= ShuffleConvs_2_Shuff_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv2_weight_q0 <= ShuffleConvs_2_Shuff_6_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv2_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_conv3_bias_q0_assign_proc : process(ShuffleConvs_2_Shuff_21_q0, ShuffleConvs_2_Shuff_3_q0, ShuffleConvs_2_Shuff_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv3_bias_q0 <= ShuffleConvs_2_Shuff_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv3_bias_q0 <= ShuffleConvs_2_Shuff_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv3_bias_q0 <= ShuffleConvs_2_Shuff_21_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv3_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_conv3_weight_q0_assign_proc : process(ShuffleConvs_2_Shuff_7_q0, ShuffleConvs_2_Shuff_11_q0, ShuffleConvs_2_Shuff_18_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_conv3_weight_q0 <= ShuffleConvs_2_Shuff_18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_conv3_weight_q0 <= ShuffleConvs_2_Shuff_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_conv3_weight_q0 <= ShuffleConvs_2_Shuff_7_q0;
        else 
            grp_ShuffleUnit2_fu_3513_conv3_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_input_r_q0_assign_proc : process(downsampleunit2_outp_q0, shuffleunit2_0_outpu_q0, shuffleunit2_1_outpu_q0, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q0 <= shuffleunit2_1_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q0 <= shuffleunit2_0_outpu_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q0 <= downsampleunit2_outp_q0;
        else 
            grp_ShuffleUnit2_fu_3513_input_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ShuffleUnit2_fu_3513_input_r_q1_assign_proc : process(downsampleunit2_outp_q1, shuffleunit2_0_outpu_q1, shuffleunit2_1_outpu_q1, ap_CS_fsm_state117, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q1 <= shuffleunit2_1_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q1 <= shuffleunit2_0_outpu_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            grp_ShuffleUnit2_fu_3513_input_r_q1 <= downsampleunit2_outp_q1;
        else 
            grp_ShuffleUnit2_fu_3513_input_r_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_avgpool_fu_3573_ap_start <= ap_reg_grp_avgpool_fu_3573_ap_start;
    grp_conv1_fu_3549_ap_start <= ap_reg_grp_conv1_fu_3549_ap_start;
    grp_conv_last_fu_3561_ap_start <= ap_reg_grp_conv_last_fu_3561_ap_start;

    grp_fu_3581_p1_assign_proc : process(tmp_130_i_reg_10740, fc_bias_load_reg_10750, ap_CS_fsm_state133, ap_CS_fsm_state139)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_3581_p1 <= fc_bias_load_reg_10750;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_fu_3581_p1 <= tmp_130_i_reg_10740;
        else 
            grp_fu_3581_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    h_22_fu_6329_p2 <= std_logic_vector(unsigned(h_reg_3191) + unsigned(ap_const_lv2_1));
    i5_cast101_cast_fu_7702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),6));
    i5_cast102_cast_fu_7698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),7));
    i5_cast104_cast1_fu_7694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),8));
    i5_cast105_cast1_fu_7686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),9));
    i5_cast105_cast_fu_7690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),10));
    i5_cast1_fu_7678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),12));
    i5_cast2_fu_7682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),11));
    i7_cast92_cast_fu_8743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_3259),11));
    i8_cast90_cast_fu_8779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_reg_3271),10));
    i_1_fu_4246_p2 <= std_logic_vector(unsigned(i_reg_3147) + unsigned(ap_const_lv3_1));
    i_2_fu_8753_p2 <= std_logic_vector(unsigned(i7_reg_3259) + unsigned(ap_const_lv10_1));
    i_3_fu_5384_p2 <= std_logic_vector(unsigned(i1_reg_3158) + unsigned(ap_const_lv5_1));
    i_4_fu_8789_p2 <= std_logic_vector(unsigned(i8_reg_3271) + unsigned(ap_const_lv4_1));
    i_5_fu_7712_p2 <= std_logic_vector(unsigned(i5_reg_3225) + unsigned(ap_const_lv5_1));
    i_6_fu_6400_p2 <= std_logic_vector(unsigned(i3_reg_3203) + unsigned(ap_const_lv2_1));
    i_7_fu_7225_p2 <= std_logic_vector(unsigned(i4_reg_3214) + unsigned(ap_const_lv3_1));
    image_r_address0 <= grp_conv1_fu_3549_input_r_address0;
    image_r_ce0 <= grp_conv1_fu_3549_input_r_ce0;
    k_1_fu_7891_p2 <= std_logic_vector(unsigned(k_reg_3237) + unsigned(ap_const_lv2_1));
    k_2_fu_8451_p2 <= std_logic_vector(unsigned(k6_reg_3248) + unsigned(ap_const_lv3_1));
    p_lshr_f1_cast_fu_4034_p4 <= co_reg_3124(4 downto 1);
    p_lshr_f_cast_fu_4080_p4 <= co_reg_3124(4 downto 2);
    p_shl100_cast_fu_6034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_401_fu_6026_p3),9));
    p_shl101_cast_fu_6002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_399_fu_5994_p3),8));
        p_shl102_cast_fu_6313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_127_fu_6305_p3),15));

        p_shl103_cast_fu_6286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_126_fu_6278_p3),15));

        p_shl104_cast_fu_6259_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_125_fu_6251_p3),15));

        p_shl105_cast_fu_6232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_124_fu_6224_p3),15));

        p_shl106_cast_fu_6205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_123_fu_6197_p3),15));

    p_shl107_cast_fu_7185_p3 <= (tmp_617_reg_9945 & ap_const_lv2_0);
    p_shl108_cast_fu_7005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_615_fu_6997_p3),13));
    p_shl109_cast_fu_7163_p3 <= (tmp_141_fu_7159_p1 & ap_const_lv2_0);
    p_shl10_cast_fu_8469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl10_fu_8461_p3),8));
    p_shl10_fu_8461_p3 <= (tmp_132_fu_8457_p1 & ap_const_lv5_0);
    p_shl110_cast_fu_7136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_610_fu_7129_p3),13));
    p_shl111_cast_fu_7108_p3 <= (tmp_607_reg_9933 & ap_const_lv2_0);
    p_shl112_cast_fu_6952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_605_fu_6948_p1),12));
        p_shl113_cast_fu_7090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_140_fu_7083_p3),15));

    p_shl114_cast_fu_6849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_599_fu_6845_p1),12));
        p_shl115_cast_fu_7060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_139_fu_7053_p3),15));

    p_shl116_cast_fu_6804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_593_fu_6796_p3),12));
        p_shl117_cast_fu_7030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_138_fu_7023_p3),15));

    p_shl118_cast_fu_6766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_588_fu_6758_p3),12));
    p_shl119_cast_fu_6911_p3 <= (tmp_585_reg_9881 & ap_const_lv2_0);
    p_shl11_cast_fu_8481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_fu_8473_p3),8));
    p_shl11_fu_8473_p3 <= (tmp_132_fu_8457_p1 & ap_const_lv3_0);
    p_shl120_cast_fu_6724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_583_fu_6716_p3),12));
    p_shl121_cast_fu_6885_p3 <= (tmp_580_reg_9875 & ap_const_lv2_0);
    p_shl122_cast_fu_6682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_578_fu_6674_p3),12));
        p_shl123_cast_fu_6638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_137_fu_6631_p3),15));

    p_shl124_cast_fu_6558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_573_fu_6550_p3),11));
    p_shl125_cast_fu_6611_p3 <= (tmp_136_reg_9844 & ap_const_lv2_0);
    p_shl126_cast_fu_6508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_568_fu_6504_p1),35));
        p_shl127_cast_fu_6591_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_134_fu_6584_p3),15));

    p_shl128_cast_fu_6471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_562_fu_6463_p3),11));
    p_shl12_cast_fu_5402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_5394_p3),10));
    p_shl12_fu_5406_p3 <= (tmp_130_fu_5390_p1 & ap_const_lv3_0);
    p_shl130_cast_fu_7397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_648_fu_7389_p3),14));
    p_shl131_cast_fu_7630_p3 <= (tmp_145_fu_7626_p1 & ap_const_lv2_0);
    p_shl132_cast_fu_7603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_643_fu_7599_p1),13));
    p_shl133_cast_fu_7562_p3 <= (tmp_639_reg_10067 & ap_const_lv2_0);
    p_shl134_cast_fu_7518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_637_fu_7510_p3),13));
    p_shl135_cast_fu_7536_p3 <= (tmp_634_reg_10061 & ap_const_lv2_0);
    p_shl136_cast_fu_7481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_632_fu_7473_p3),13));
    p_shl137_cast_fu_7442_p3 <= (tmp_144_reg_10034 & ap_const_lv2_0);
    p_shl138_cast_fu_7336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_627_fu_7332_p1),35));
    p_shl139_cast_fu_7419_p3 <= (tmp_623_reg_10023 & ap_const_lv2_0);
    p_shl13_cast1_fu_5414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_fu_5406_p3),8));
    p_shl13_cast_fu_5418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_fu_5406_p3),10));
    p_shl13_fu_6410_p3 <= (tmp_133_fu_6406_p1 & ap_const_lv5_0);
    p_shl140_cast_fu_7297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_621_fu_7289_p3),13));
    p_shl14_cast_fu_5449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_131_fu_5443_p2),8));
    p_shl14_fu_6422_p3 <= (tmp_133_fu_6406_p1 & ap_const_lv3_0);
    p_shl15_cast_fu_6418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_fu_6410_p3),7));
    p_shl15_fu_7235_p3 <= (tmp_142_fu_7231_p1 & ap_const_lv5_0);
    p_shl16_cast_fu_6430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl14_fu_6422_p3),7));
    p_shl16_fu_7247_p3 <= (tmp_142_fu_7231_p1 & ap_const_lv3_0);
    p_shl17_cast_fu_7243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl15_fu_7235_p3),8));
    p_shl18_cast_fu_7255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl16_fu_7247_p3),8));
    p_shl19_cast_fu_3968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_395_fu_3964_p1),14));
    p_shl1_cast_fu_4012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_4004_p3),7));
    p_shl1_fu_4004_p3 <= (tmp_120_fu_4000_p1 & ap_const_lv5_0);
    p_shl20_cast_fu_3986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_397_fu_3982_p1),14));
    p_shl21_cast_fu_3928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_388_fu_3920_p3),14));
    p_shl22_cast_fu_3940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_390_fu_3932_p3),14));
    p_shl23_cast_fu_3888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_381_fu_3880_p3),14));
    p_shl24_cast_fu_3900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_384_fu_3892_p3),14));
    p_shl25_cast_fu_3848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_375_fu_3840_p3),14));
    p_shl26_cast_fu_3860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_377_fu_3852_p3),14));
    p_shl27_cast_fu_3802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_368_fu_3798_p1),13));
    p_shl28_cast_fu_3820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_371_fu_3816_p1),13));
    p_shl29_cast_fu_3762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_363_fu_3754_p3),13));
    p_shl2_cast_fu_4024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_4016_p3),7));
    p_shl2_fu_4016_p3 <= (tmp_120_fu_4000_p1 & ap_const_lv3_0);
    p_shl30_cast_fu_3774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_364_fu_3766_p3),13));
    p_shl31_cast_fu_3722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_359_fu_3714_p3),13));
    p_shl32_cast_fu_3734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_360_fu_3726_p3),13));
    p_shl33_cast_fu_3682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_309_fu_3674_p3),12));
    p_shl34_cast_fu_3694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_355_fu_3686_p3),12));
    p_shl35_cast_fu_3642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_3634_p3),11));
    p_shl36_cast_fu_3654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_218_fu_3646_p3),11));
    p_shl37_cast_fu_4973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_511_fu_4966_p3),18));
    p_shl38_cast_fu_4984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_512_fu_4977_p3),18));
    p_shl39_cast_fu_4512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_507_fu_4508_p1),17));
    p_shl3_cast_fu_4070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_4064_p2),8));
    p_shl3_fu_5394_p3 <= (tmp_130_fu_5390_p1 & ap_const_lv5_0);
    p_shl40_cast_fu_4520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_508_fu_4516_p1),17));
    p_shl41_cast_fu_5324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_502_fu_5320_p1),17));
    p_shl42_cast_fu_5339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_504_fu_5335_p1),17));
    p_shl43_cast_fu_5274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_496_fu_5270_p1),17));
    p_shl44_cast_fu_5289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_498_fu_5285_p1),17));
    p_shl45_cast_fu_5228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_491_fu_5221_p3),17));
    p_shl46_cast_fu_5239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_492_fu_5232_p3),17));
    p_shl47_cast_fu_5166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_487_fu_5159_p3),17));
    p_shl48_cast_fu_5177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_488_fu_5170_p3),17));
    p_shl49_cast_fu_5124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_483_fu_5117_p3),17));
    p_shl4_cast_fu_7909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_7901_p3),7));
    p_shl4_fu_7901_p3 <= (tmp_129_fu_7897_p1 & ap_const_lv5_0);
    p_shl50_cast_fu_5135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_484_fu_5128_p3),17));
    p_shl51_cast_fu_5052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_479_fu_5045_p3),17));
    p_shl52_cast_fu_5063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_480_fu_5056_p3),17));
    p_shl53_cast_fu_5010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_475_fu_5003_p3),17));
    p_shl54_cast_fu_5021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_476_fu_5014_p3),17));
    p_shl55_cast_fu_4911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_471_fu_4904_p3),17));
    p_shl56_cast_fu_4922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_472_fu_4915_p3),17));
    p_shl57_cast_fu_4869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_467_fu_4862_p3),17));
    p_shl58_cast_fu_4880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_468_fu_4873_p3),17));
    p_shl59_cast_fu_4795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_462_fu_4791_p1),16));
    p_shl5_cast_fu_7921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_7913_p3),7));
    p_shl5_fu_7913_p3 <= (tmp_129_fu_7897_p1 & ap_const_lv3_0);
    p_shl60_cast_fu_4810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_464_fu_4806_p1),16));
    p_shl61_cast_fu_4753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_457_fu_4745_p3),16));
    p_shl62_cast_fu_4765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_458_fu_4757_p3),16));
    p_shl63_cast_fu_4700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_453_fu_4693_p3),16));
    p_shl64_cast_fu_4711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_454_fu_4704_p3),16));
    p_shl65_cast_fu_4658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_449_fu_4651_p3),16));
    p_shl66_cast_fu_4669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_450_fu_4662_p3),16));
    p_shl67_cast_fu_4584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_445_fu_4577_p3),16));
    p_shl68_cast_fu_4595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_446_fu_4588_p3),16));
    p_shl69_cast_fu_4542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_441_fu_4535_p3),16));
    p_shl6_cast_fu_4264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_fu_4256_p3),8));
    p_shl6_fu_4256_p3 <= (tmp_128_fu_4252_p1 & ap_const_lv5_0);
    p_shl70_cast_fu_4553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_442_fu_4546_p3),16));
    p_shl71_cast_fu_4438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_437_fu_4431_p3),15));
    p_shl72_cast_fu_4449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_438_fu_4442_p3),15));
        p_shl74_cast_fu_4352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_434_fu_4344_p3),13));

    p_shl75_cast_fu_4396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_429_fu_4389_p3),15));
    p_shl76_cast_fu_4407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_430_fu_4400_p3),15));
    p_shl77_cast_fu_5928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_558_fu_5921_p3),19));
    p_shl78_cast_fu_5939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_559_fu_5932_p3),19));
    p_shl79_cast_fu_5890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_554_fu_5883_p3),19));
    p_shl7_cast_fu_4276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_4268_p3),8));
    p_shl7_fu_4268_p3 <= (tmp_128_fu_4252_p1 & ap_const_lv3_0);
    p_shl80_cast_fu_5901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_555_fu_5894_p3),19));
    p_shl81_cast_fu_5852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_550_fu_5845_p3),19));
    p_shl82_cast_fu_5863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_551_fu_5856_p3),19));
    p_shl83_cast_fu_5784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_546_fu_5777_p3),19));
    p_shl84_cast_fu_5795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_547_fu_5788_p3),19));
    p_shl85_cast_fu_5738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_541_fu_5734_p1),18));
    p_shl86_cast_fu_5753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_543_fu_5749_p1),18));
    p_shl87_cast_fu_5670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_536_fu_5663_p3),18));
    p_shl88_cast_fu_5681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_537_fu_5674_p3),18));
    p_shl89_cast_fu_5628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_532_fu_5621_p3),18));
    p_shl8_cast_fu_4309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_fu_4301_p3),7));
    p_shl8_fu_4301_p3 <= (tmp_128_fu_4252_p1 & ap_const_lv4_0);
    p_shl90_cast_fu_5639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_533_fu_5632_p3),18));
    p_shl91_cast_fu_5555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_528_fu_5548_p3),18));
    p_shl92_cast_fu_5566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_529_fu_5559_p3),18));
        p_shl94_cast_fu_5480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_525_fu_5472_p3),15));

    p_shl95_cast_fu_5513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_520_fu_5506_p3),18));
    p_shl96_cast_fu_5524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_521_fu_5517_p3),18));
    p_shl97_cast_fu_6130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_408_fu_6126_p1),10));
    p_shl98_cast_fu_6090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_405_fu_6082_p3),10));
    p_shl99_cast_fu_6062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_403_fu_6054_p3),10));
    p_shl9_cast_fu_4321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl9_fu_4313_p3),7));
    p_shl9_fu_4313_p3 <= (tmp_128_fu_4252_p1 & ap_const_lv2_0);
    p_shl_cast_fu_4060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_4052_p3),8));
    p_shl_fu_4052_p3 <= (tmp_121_fu_4048_p1 & ap_const_lv5_0);

    shuffle_conv_1x1_address0_assign_proc : process(ap_CS_fsm_state3, tmp_477_cast_fu_4127_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, tmp_479_cast_fu_4156_p1, tmp_481_cast_fu_4180_p1, tmp_483_cast_fu_4209_p1, tmp_485_cast_fu_4217_p1, tmp_518_cast_fu_4468_p1, tmp_526_cast_fu_4614_p1, tmp_534_cast_fu_4730_p1, tmp_544_cast_fu_4836_p1, tmp_552_cast_fu_4941_p1, tmp_560_cast_fu_5082_p1, tmp_568_cast_fu_5196_p1, tmp_578_cast_fu_5308_p1, tmp_590_cast_fu_5370_p1, tmp_607_cast_fu_5543_p1, tmp_622_cast_fu_5658_p1, tmp_632_cast_fu_5772_p1, tmp_640_cast_fu_5878_p1, tmp_648_cast_fu_5954_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            shuffle_conv_1x1_address0 <= tmp_648_cast_fu_5954_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            shuffle_conv_1x1_address0 <= tmp_640_cast_fu_5878_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            shuffle_conv_1x1_address0 <= tmp_632_cast_fu_5772_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            shuffle_conv_1x1_address0 <= tmp_622_cast_fu_5658_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            shuffle_conv_1x1_address0 <= tmp_607_cast_fu_5543_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            shuffle_conv_1x1_address0 <= tmp_590_cast_fu_5370_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            shuffle_conv_1x1_address0 <= tmp_578_cast_fu_5308_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shuffle_conv_1x1_address0 <= tmp_568_cast_fu_5196_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            shuffle_conv_1x1_address0 <= tmp_560_cast_fu_5082_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            shuffle_conv_1x1_address0 <= tmp_552_cast_fu_4941_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            shuffle_conv_1x1_address0 <= tmp_544_cast_fu_4836_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            shuffle_conv_1x1_address0 <= tmp_534_cast_fu_4730_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            shuffle_conv_1x1_address0 <= tmp_526_cast_fu_4614_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            shuffle_conv_1x1_address0 <= tmp_518_cast_fu_4468_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            shuffle_conv_1x1_address0 <= tmp_485_cast_fu_4217_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            shuffle_conv_1x1_address0 <= tmp_483_cast_fu_4209_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            shuffle_conv_1x1_address0 <= tmp_481_cast_fu_4180_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shuffle_conv_1x1_address0 <= tmp_479_cast_fu_4156_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            shuffle_conv_1x1_address0 <= tmp_477_cast_fu_4127_p1(18 - 1 downto 0);
        else 
            shuffle_conv_1x1_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffle_conv_1x1_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, tmp_478_cast_fu_4137_p1, tmp_480_cast_fu_4166_p1, tmp_482_cast_fu_4189_p1, tmp_484_cast_fu_4213_p1, tmp_506_cast_fu_4426_p1, tmp_522_cast_fu_4572_p1, tmp_530_cast_fu_4688_p1, tmp_538_cast_fu_4832_p1, tmp_548_cast_fu_4899_p1, tmp_556_cast_fu_5040_p1, tmp_564_cast_fu_5154_p1, tmp_572_cast_fu_5258_p1, tmp_584_cast_fu_5366_p1, tmp_594_cast_fu_5374_p1, tmp_618_cast_fu_5585_p1, tmp_626_cast_fu_5700_p1, tmp_636_cast_fu_5810_p1, tmp_644_cast_fu_5916_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            shuffle_conv_1x1_address1 <= tmp_644_cast_fu_5916_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            shuffle_conv_1x1_address1 <= tmp_636_cast_fu_5810_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            shuffle_conv_1x1_address1 <= tmp_626_cast_fu_5700_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            shuffle_conv_1x1_address1 <= tmp_618_cast_fu_5585_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            shuffle_conv_1x1_address1 <= tmp_594_cast_fu_5374_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            shuffle_conv_1x1_address1 <= tmp_584_cast_fu_5366_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            shuffle_conv_1x1_address1 <= tmp_572_cast_fu_5258_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            shuffle_conv_1x1_address1 <= tmp_564_cast_fu_5154_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            shuffle_conv_1x1_address1 <= tmp_556_cast_fu_5040_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            shuffle_conv_1x1_address1 <= tmp_548_cast_fu_4899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            shuffle_conv_1x1_address1 <= tmp_538_cast_fu_4832_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            shuffle_conv_1x1_address1 <= tmp_530_cast_fu_4688_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            shuffle_conv_1x1_address1 <= tmp_522_cast_fu_4572_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            shuffle_conv_1x1_address1 <= tmp_506_cast_fu_4426_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            shuffle_conv_1x1_address1 <= tmp_484_cast_fu_4213_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            shuffle_conv_1x1_address1 <= tmp_482_cast_fu_4189_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            shuffle_conv_1x1_address1 <= tmp_480_cast_fu_4166_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            shuffle_conv_1x1_address1 <= tmp_478_cast_fu_4137_p1(18 - 1 downto 0);
        else 
            shuffle_conv_1x1_address1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffle_conv_1x1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            shuffle_conv_1x1_ce0 <= ap_const_logic_1;
        else 
            shuffle_conv_1x1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffle_conv_1x1_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            shuffle_conv_1x1_ce1 <= ap_const_logic_1;
        else 
            shuffle_conv_1x1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffle_conv_3x3_address0_assign_proc : process(ap_CS_fsm_state30, tmp_597_cast_fu_6344_p1, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state45, ap_CS_fsm_state46, tmp_599_cast_fu_6363_p1, tmp_601_cast_fu_6381_p1, tmp_671_cast_fu_6653_p1, tmp_683_cast_fu_6929_p1, tmp_695_cast_fu_7075_p1, tmp_709_cast_fu_7207_p1, tmp_721_cast_fu_7215_p1, tmp_744_cast_fu_7554_p1, tmp_757_cast_fu_7670_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            shuffle_conv_3x3_address0 <= tmp_757_cast_fu_7670_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            shuffle_conv_3x3_address0 <= tmp_744_cast_fu_7554_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            shuffle_conv_3x3_address0 <= tmp_721_cast_fu_7215_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            shuffle_conv_3x3_address0 <= tmp_709_cast_fu_7207_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            shuffle_conv_3x3_address0 <= tmp_695_cast_fu_7075_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            shuffle_conv_3x3_address0 <= tmp_683_cast_fu_6929_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            shuffle_conv_3x3_address0 <= tmp_671_cast_fu_6653_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            shuffle_conv_3x3_address0 <= tmp_601_cast_fu_6381_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            shuffle_conv_3x3_address0 <= tmp_599_cast_fu_6363_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            shuffle_conv_3x3_address0 <= tmp_597_cast_fu_6344_p1(14 - 1 downto 0);
        else 
            shuffle_conv_3x3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffle_conv_3x3_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, tmp_598_cast_fu_6354_p1, tmp_600_cast_fu_6372_p1, tmp_658_cast_fu_6606_p1, tmp_677_cast_fu_6903_p1, tmp_689_cast_fu_7045_p1, tmp_702_cast_fu_7203_p1, tmp_715_cast_fu_7211_p1, tmp_731_cast_fu_7437_p1, tmp_750_cast_fu_7580_p1, tmp_763_cast_fu_7674_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            shuffle_conv_3x3_address1 <= tmp_763_cast_fu_7674_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            shuffle_conv_3x3_address1 <= tmp_750_cast_fu_7580_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            shuffle_conv_3x3_address1 <= tmp_731_cast_fu_7437_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            shuffle_conv_3x3_address1 <= tmp_715_cast_fu_7211_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            shuffle_conv_3x3_address1 <= tmp_702_cast_fu_7203_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            shuffle_conv_3x3_address1 <= tmp_689_cast_fu_7045_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            shuffle_conv_3x3_address1 <= tmp_677_cast_fu_6903_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            shuffle_conv_3x3_address1 <= tmp_658_cast_fu_6606_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            shuffle_conv_3x3_address1 <= tmp_600_cast_fu_6372_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            shuffle_conv_3x3_address1 <= tmp_598_cast_fu_6354_p1(14 - 1 downto 0);
        else 
            shuffle_conv_3x3_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffle_conv_3x3_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            shuffle_conv_3x3_ce0 <= ap_const_logic_1;
        else 
            shuffle_conv_3x3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffle_conv_3x3_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            shuffle_conv_3x3_ce1 <= ap_const_logic_1;
        else 
            shuffle_conv_3x3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_0_outpu_address0_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_address0, grp_ShuffleUnit0_fu_3401_output_r_address0, ap_CS_fsm_state91, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            shuffleunit0_0_outpu_address0 <= grp_ShuffleUnit0_fu_3401_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_0_outpu_address0 <= grp_ShuffleUnit0_fu_3401_input_r_address0;
        else 
            shuffleunit0_0_outpu_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit0_0_outpu_ce0_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_ce0, grp_ShuffleUnit0_fu_3401_output_r_ce0, ap_CS_fsm_state91, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            shuffleunit0_0_outpu_ce0 <= grp_ShuffleUnit0_fu_3401_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_0_outpu_ce0 <= grp_ShuffleUnit0_fu_3401_input_r_ce0;
        else 
            shuffleunit0_0_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_0_outpu_ce1_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_ce1, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_0_outpu_ce1 <= grp_ShuffleUnit0_fu_3401_input_r_ce1;
        else 
            shuffleunit0_0_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_0_outpu_we0_assign_proc : process(grp_ShuffleUnit0_fu_3401_output_r_we0, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            shuffleunit0_0_outpu_we0 <= grp_ShuffleUnit0_fu_3401_output_r_we0;
        else 
            shuffleunit0_0_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_1_outpu_address0_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_address0, grp_ShuffleUnit0_fu_3401_output_r_address0, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_1_outpu_address0 <= grp_ShuffleUnit0_fu_3401_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_1_outpu_address0 <= grp_ShuffleUnit0_fu_3401_input_r_address0;
        else 
            shuffleunit0_1_outpu_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit0_1_outpu_ce0_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_ce0, grp_ShuffleUnit0_fu_3401_output_r_ce0, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_1_outpu_ce0 <= grp_ShuffleUnit0_fu_3401_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_1_outpu_ce0 <= grp_ShuffleUnit0_fu_3401_input_r_ce0;
        else 
            shuffleunit0_1_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_1_outpu_ce1_assign_proc : process(grp_ShuffleUnit0_fu_3401_input_r_ce1, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_1_outpu_ce1 <= grp_ShuffleUnit0_fu_3401_input_r_ce1;
        else 
            shuffleunit0_1_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_1_outpu_we0_assign_proc : process(grp_ShuffleUnit0_fu_3401_output_r_we0, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            shuffleunit0_1_outpu_we0 <= grp_ShuffleUnit0_fu_3401_output_r_we0;
        else 
            shuffleunit0_1_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_2_outpu_address0_assign_proc : process(grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0, grp_ShuffleUnit0_fu_3401_output_r_address0, ap_CS_fsm_state97, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_2_outpu_address0 <= grp_ShuffleUnit0_fu_3401_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            shuffleunit0_2_outpu_address0 <= grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0;
        else 
            shuffleunit0_2_outpu_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit0_2_outpu_ce0_assign_proc : process(grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0, grp_ShuffleUnit0_fu_3401_output_r_ce0, ap_CS_fsm_state97, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_2_outpu_ce0 <= grp_ShuffleUnit0_fu_3401_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            shuffleunit0_2_outpu_ce0 <= grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0;
        else 
            shuffleunit0_2_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit0_2_outpu_we0_assign_proc : process(grp_ShuffleUnit0_fu_3401_output_r_we0, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            shuffleunit0_2_outpu_we0 <= grp_ShuffleUnit0_fu_3401_output_r_we0;
        else 
            shuffleunit0_2_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_0_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state99, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            shuffleunit1_0_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_0_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_0_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_0_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state99, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            shuffleunit1_0_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_0_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_0_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_0_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_0_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_0_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_0_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            shuffleunit1_0_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_0_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_1_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state101, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_1_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_1_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_1_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_1_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state101, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_1_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_1_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_1_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_1_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_1_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_1_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_1_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            shuffleunit1_1_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_1_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_2_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state103, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_2_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_2_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_2_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_2_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state103, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_2_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_2_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_2_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_2_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_2_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_2_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_2_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            shuffleunit1_2_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_2_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_3_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state105, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_3_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_3_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_3_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_3_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state105, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_3_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_3_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_3_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_3_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_3_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_3_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_3_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state105)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            shuffleunit1_3_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_3_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_4_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state107, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_4_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_4_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_4_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_4_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state107, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_4_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_4_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_4_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_4_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_4_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_4_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_4_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state107)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            shuffleunit1_4_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_4_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_5_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state109, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_5_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_5_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_5_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_5_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state109, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_5_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_5_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_5_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_5_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_5_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_5_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_5_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            shuffleunit1_5_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_5_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_6_outpu_address0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_6_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_6_outpu_address0 <= grp_ShuffleUnit1_fu_3437_input_r_address0;
        else 
            shuffleunit1_6_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_6_outpu_ce0_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state111, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_6_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_6_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_input_r_ce0;
        else 
            shuffleunit1_6_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_6_outpu_ce1_assign_proc : process(grp_ShuffleUnit1_fu_3437_input_r_ce1, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_6_outpu_ce1 <= grp_ShuffleUnit1_fu_3437_input_r_ce1;
        else 
            shuffleunit1_6_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_6_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            shuffleunit1_6_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_6_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_7_outpu_address0_assign_proc : process(grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0, grp_ShuffleUnit1_fu_3437_output_r_address0, ap_CS_fsm_state115, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_7_outpu_address0 <= grp_ShuffleUnit1_fu_3437_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            shuffleunit1_7_outpu_address0 <= grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0;
        else 
            shuffleunit1_7_outpu_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit1_7_outpu_ce0_assign_proc : process(grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0, grp_ShuffleUnit1_fu_3437_output_r_ce0, ap_CS_fsm_state115, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_7_outpu_ce0 <= grp_ShuffleUnit1_fu_3437_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            shuffleunit1_7_outpu_ce0 <= grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0;
        else 
            shuffleunit1_7_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit1_7_outpu_we0_assign_proc : process(grp_ShuffleUnit1_fu_3437_output_r_we0, ap_CS_fsm_state113)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            shuffleunit1_7_outpu_we0 <= grp_ShuffleUnit1_fu_3437_output_r_we0;
        else 
            shuffleunit1_7_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_0_outpu_address0_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_address0, grp_ShuffleUnit2_fu_3513_output_r_address0, ap_CS_fsm_state117, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            shuffleunit2_0_outpu_address0 <= grp_ShuffleUnit2_fu_3513_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_0_outpu_address0 <= grp_ShuffleUnit2_fu_3513_input_r_address0;
        else 
            shuffleunit2_0_outpu_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit2_0_outpu_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_ce0, grp_ShuffleUnit2_fu_3513_output_r_ce0, ap_CS_fsm_state117, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            shuffleunit2_0_outpu_ce0 <= grp_ShuffleUnit2_fu_3513_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_0_outpu_ce0 <= grp_ShuffleUnit2_fu_3513_input_r_ce0;
        else 
            shuffleunit2_0_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_0_outpu_ce1_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_ce1, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_0_outpu_ce1 <= grp_ShuffleUnit2_fu_3513_input_r_ce1;
        else 
            shuffleunit2_0_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_0_outpu_we0_assign_proc : process(grp_ShuffleUnit2_fu_3513_output_r_we0, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            shuffleunit2_0_outpu_we0 <= grp_ShuffleUnit2_fu_3513_output_r_we0;
        else 
            shuffleunit2_0_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_1_outpu_address0_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_address0, grp_ShuffleUnit2_fu_3513_output_r_address0, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_1_outpu_address0 <= grp_ShuffleUnit2_fu_3513_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_1_outpu_address0 <= grp_ShuffleUnit2_fu_3513_input_r_address0;
        else 
            shuffleunit2_1_outpu_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit2_1_outpu_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_ce0, grp_ShuffleUnit2_fu_3513_output_r_ce0, ap_CS_fsm_state119, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_1_outpu_ce0 <= grp_ShuffleUnit2_fu_3513_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_1_outpu_ce0 <= grp_ShuffleUnit2_fu_3513_input_r_ce0;
        else 
            shuffleunit2_1_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_1_outpu_ce1_assign_proc : process(grp_ShuffleUnit2_fu_3513_input_r_ce1, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_1_outpu_ce1 <= grp_ShuffleUnit2_fu_3513_input_r_ce1;
        else 
            shuffleunit2_1_outpu_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_1_outpu_we0_assign_proc : process(grp_ShuffleUnit2_fu_3513_output_r_we0, ap_CS_fsm_state119)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            shuffleunit2_1_outpu_we0 <= grp_ShuffleUnit2_fu_3513_output_r_we0;
        else 
            shuffleunit2_1_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_2_outpu_address0_assign_proc : process(grp_ShuffleUnit2_fu_3513_output_r_address0, grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0, ap_CS_fsm_state121, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            shuffleunit2_2_outpu_address0 <= grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_2_outpu_address0 <= grp_ShuffleUnit2_fu_3513_output_r_address0;
        else 
            shuffleunit2_2_outpu_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    shuffleunit2_2_outpu_ce0_assign_proc : process(grp_ShuffleUnit2_fu_3513_output_r_ce0, grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0, ap_CS_fsm_state121, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            shuffleunit2_2_outpu_ce0 <= grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_2_outpu_ce0 <= grp_ShuffleUnit2_fu_3513_output_r_ce0;
        else 
            shuffleunit2_2_outpu_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    shuffleunit2_2_outpu_we0_assign_proc : process(grp_ShuffleUnit2_fu_3513_output_r_we0, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            shuffleunit2_2_outpu_we0 <= grp_ShuffleUnit2_fu_3513_output_r_we0;
        else 
            shuffleunit2_2_outpu_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_4851_p2 <= std_logic_vector(signed(ap_const_lv11_438) + signed(tmp_330_cast1_fu_4829_p1));
    tmp11_fu_4946_p2 <= std_logic_vector(signed(ap_const_lv11_498) + signed(tmp_330_cast1_reg_9297));
    tmp12_fu_4956_p2 <= std_logic_vector(signed(ap_const_lv11_4F8) + signed(tmp_330_cast1_reg_9297));
    tmp13_fu_5087_p2 <= std_logic_vector(signed(ap_const_lv11_558) + signed(tmp_330_cast1_reg_9297));
    tmp14_fu_5097_p2 <= std_logic_vector(signed(ap_const_lv11_5B8) + signed(tmp_330_cast1_reg_9297));
    tmp15_fu_5107_p2 <= std_logic_vector(signed(ap_const_lv11_618) + signed(tmp_330_cast1_reg_9297));
    tmp16_fu_5201_p2 <= std_logic_vector(signed(ap_const_lv10_278) + signed(tmp_330_cast127_cast_reg_9181));
    tmp17_fu_5211_p2 <= std_logic_vector(signed(ap_const_lv10_2D8) + signed(tmp_330_cast127_cast_reg_9181));
        tmp19_cast1_fu_4639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_reg_9200),11));

    tmp19_cast_fu_4642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_cast1_fu_4639_p1),12));
    tmp1_fu_4290_p2 <= std_logic_vector(unsigned(ap_const_lv9_D8) + unsigned(tmp_330_cast127_cast_1_fu_4286_p1));
    tmp20_fu_5432_p2 <= std_logic_vector(unsigned(ap_const_lv12_7F8) + unsigned(tmp_438_cast_fu_5428_p1));
    tmp21_fu_5495_p2 <= std_logic_vector(signed(ap_const_lv12_978) + signed(tmp_438_cast_fu_5428_p1));
    tmp22_fu_5590_p2 <= std_logic_vector(signed(ap_const_lv12_AF8) + signed(tmp_438_cast_reg_9454));
    tmp23_fu_5600_p2 <= std_logic_vector(signed(ap_const_lv12_C78) + signed(tmp_438_cast_reg_9454));
    tmp24_fu_5705_p2 <= std_logic_vector(signed(ap_const_lv11_5F8) + signed(tmp_438_cast_cast_fu_5613_p1));
    tmp25_fu_5716_p2 <= std_logic_vector(unsigned(ap_const_lv13_F78) + unsigned(tmp_438_cast1_fu_5610_p1));
    tmp26_fu_5815_p2 <= std_logic_vector(signed(ap_const_lv13_10F8) + signed(tmp_438_cast1_reg_9499));
    tmp27_fu_5825_p2 <= std_logic_vector(signed(ap_const_lv13_1278) + signed(tmp_438_cast1_reg_9499));
    tmp28_fu_5835_p2 <= std_logic_vector(signed(ap_const_lv13_13F8) + signed(tmp_438_cast1_reg_9499));
    tmp29_fu_6448_p2 <= std_logic_vector(unsigned(ap_const_lv8_78) + unsigned(tmp_470_cast110_cast_fu_6445_p1));
    tmp2_fu_4367_p2 <= std_logic_vector(signed(ap_const_lv9_138) + signed(tmp_330_cast127_cast_1_fu_4286_p1));
    tmp30_fu_6535_p2 <= std_logic_vector(signed(ap_const_lv8_A8) + signed(tmp_470_cast110_cast_fu_6445_p1));
        tmp31_cast1_fu_6658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp31_reg_9855),8));

    tmp31_cast_fu_6661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp31_cast1_fu_6658_p1),9));
    tmp31_fu_6573_p2 <= std_logic_vector(signed(ap_const_lv7_58) + signed(tmp_353_reg_9813));
    tmp32_fu_6701_p2 <= std_logic_vector(signed(ap_const_lv9_108) + signed(tmp_470_cast2_fu_6578_p1));
    tmp33_fu_6743_p2 <= std_logic_vector(signed(ap_const_lv9_138) + signed(tmp_470_cast2_fu_6578_p1));
    tmp34_fu_6781_p2 <= std_logic_vector(signed(ap_const_lv9_168) + signed(tmp_470_cast2_fu_6578_p1));
    tmp35_fu_6819_p2 <= std_logic_vector(signed(ap_const_lv8_98) + signed(tmp_470_cast110_cast_reg_9827));
    tmp36_fu_6864_p2 <= std_logic_vector(signed(ap_const_lv8_C8) + signed(tmp_470_cast110_cast_reg_9827));
    tmp37_fu_6971_p2 <= std_logic_vector(unsigned(ap_const_lv10_1F8) + unsigned(tmp_470_cast1_fu_6874_p1));
    tmp38_fu_6982_p2 <= std_logic_vector(signed(ap_const_lv10_228) + signed(tmp_470_cast1_fu_6874_p1));
    tmp39_fu_7274_p2 <= std_logic_vector(signed(ap_const_lv10_258) + signed(tmp_505_cast_fu_7268_p1));
    tmp3_cast_fu_4478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_4473_p2),10));
    tmp3_fu_4473_p2 <= std_logic_vector(signed(ap_const_lv9_198) + signed(tmp_330_cast127_cast_1_reg_9153));
    tmp40_fu_7459_p2 <= std_logic_vector(signed(ap_const_lv10_2B8) + signed(tmp_505_cast_reg_10017));
    tmp41_fu_7496_p2 <= std_logic_vector(signed(ap_const_lv10_318) + signed(tmp_505_cast_reg_10017));
    tmp42_fu_7363_p2 <= std_logic_vector(signed(ap_const_lv9_178) + signed(tmp_505_cast_cast_fu_7271_p1));
    tmp43_fu_7374_p2 <= std_logic_vector(unsigned(ap_const_lv11_3D8) + unsigned(tmp_505_cast1_fu_7265_p1));
    tmp44_fu_7934_p2 <= std_logic_vector(signed(ap_const_lv9_168) + signed(tmp_238_cast96_cast_fu_7931_p1));
    tmp45_fu_7953_p2 <= std_logic_vector(signed(ap_const_lv8_98) + signed(tmp_238_cast96_cast1_fu_7950_p1));
    tmp46_fu_7973_p2 <= std_logic_vector(signed(ap_const_lv8_C8) + signed(tmp_238_cast96_cast1_fu_7950_p1));
    tmp47_fu_8011_p2 <= std_logic_vector(unsigned(ap_const_lv10_1F8) + unsigned(tmp_238_cast97_cast_fu_7993_p1));
    tmp48_fu_8027_p2 <= std_logic_vector(signed(ap_const_lv10_228) + signed(tmp_238_cast97_cast_fu_7993_p1));
    tmp49_fu_8053_p2 <= std_logic_vector(signed(ap_const_lv10_258) + signed(tmp_238_cast97_cast_reg_10345));
    tmp4_fu_4487_p2 <= std_logic_vector(unsigned(ap_const_lv10_1F8) + unsigned(tmp_330_cast127_cast_fu_4386_p1));
    tmp50_fu_8068_p2 <= std_logic_vector(signed(ap_const_lv10_288) + signed(tmp_238_cast97_cast_reg_10345));
    tmp51_fu_8083_p2 <= std_logic_vector(signed(ap_const_lv10_2B8) + signed(tmp_238_cast97_cast_reg_10345));
    tmp52_fu_8098_p2 <= std_logic_vector(signed(ap_const_lv10_2E8) + signed(tmp_238_cast97_cast_reg_10345));
    tmp53_fu_8113_p2 <= std_logic_vector(signed(ap_const_lv9_118) + signed(tmp_238_cast96_cast_reg_10313));
    tmp54_fu_8132_p2 <= std_logic_vector(signed(ap_const_lv9_148) + signed(tmp_238_cast96_cast_reg_10313));
    tmp55_fu_8151_p2 <= std_logic_vector(signed(ap_const_lv9_178) + signed(tmp_238_cast96_cast_reg_10313));
    tmp56_fu_8043_p2 <= std_logic_vector(signed(ap_const_lv8_A8) + signed(tmp_238_cast96_cast1_reg_10325));
        tmp57_cast1_fu_8185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp57_fu_8180_p2),10));

    tmp57_cast_fu_8189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp57_cast1_fu_8185_p1),11));
    tmp57_fu_8180_p2 <= std_logic_vector(signed(ap_const_lv7_58) + signed(tmp_238_reg_10303));
    tmp58_fu_8203_p2 <= std_logic_vector(signed(ap_const_lv11_408) + signed(tmp_238_cast1_fu_8177_p1));
    tmp59_fu_8219_p2 <= std_logic_vector(signed(ap_const_lv11_438) + signed(tmp_238_cast1_reg_10447));
    tmp5_fu_4619_p2 <= std_logic_vector(signed(ap_const_lv10_258) + signed(tmp_330_cast127_cast_reg_9181));
    tmp60_fu_8234_p2 <= std_logic_vector(signed(ap_const_lv11_468) + signed(tmp_238_cast1_reg_10447));
    tmp61_fu_8249_p2 <= std_logic_vector(signed(ap_const_lv11_498) + signed(tmp_238_cast1_reg_10447));
    tmp62_fu_8264_p2 <= std_logic_vector(signed(ap_const_lv11_4C8) + signed(tmp_238_cast1_reg_10447));
    tmp63_fu_8279_p2 <= std_logic_vector(signed(ap_const_lv11_4F8) + signed(tmp_238_cast1_reg_10447));
    tmp64_fu_8294_p2 <= std_logic_vector(signed(ap_const_lv11_528) + signed(tmp_238_cast1_reg_10447));
    tmp65_fu_8309_p2 <= std_logic_vector(signed(ap_const_lv11_558) + signed(tmp_238_cast1_reg_10447));
    tmp66_fu_8324_p2 <= std_logic_vector(signed(ap_const_lv11_588) + signed(tmp_238_cast1_reg_10447));
    tmp67_fu_8339_p2 <= std_logic_vector(signed(ap_const_lv11_5B8) + signed(tmp_238_cast1_reg_10447));
    tmp68_fu_8354_p2 <= std_logic_vector(signed(ap_const_lv11_5E8) + signed(tmp_238_cast1_reg_10447));
    tmp69_fu_8369_p2 <= std_logic_vector(signed(ap_const_lv10_218) + signed(tmp_238_cast97_cast_reg_10345));
    tmp6_fu_4629_p2 <= std_logic_vector(signed(ap_const_lv10_2B8) + signed(tmp_330_cast127_cast_reg_9181));
    tmp70_fu_8388_p2 <= std_logic_vector(signed(ap_const_lv10_248) + signed(tmp_238_cast97_cast_reg_10345));
    tmp71_fu_8407_p2 <= std_logic_vector(signed(ap_const_lv10_278) + signed(tmp_238_cast97_cast_reg_10345));
    tmp72_fu_8426_p2 <= std_logic_vector(signed(ap_const_lv10_2A8) + signed(tmp_238_cast97_cast_reg_10345));
    tmp73_fu_8497_p2 <= std_logic_vector(signed(ap_const_lv10_2D8) + signed(tmp_391_cast_cast_fu_8494_p1));
    tmp74_fu_8517_p2 <= std_logic_vector(signed(ap_const_lv9_138) + signed(tmp_391_cast_cast1_fu_8491_p1));
        tmp75_cast1_fu_8559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp75_fu_8554_p2),11));

    tmp75_cast_fu_8563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp75_cast1_fu_8559_p1),12));
    tmp75_fu_8554_p2 <= std_logic_vector(signed(ap_const_lv9_198) + signed(tmp_391_cast_cast1_reg_10557));
    tmp76_fu_8577_p2 <= std_logic_vector(unsigned(ap_const_lv12_7F8) + unsigned(tmp_391_cast_fu_8537_p1));
    tmp77_fu_8593_p2 <= std_logic_vector(signed(ap_const_lv12_858) + signed(tmp_391_cast_reg_10572));
    tmp78_fu_8608_p2 <= std_logic_vector(signed(ap_const_lv12_8B8) + signed(tmp_391_cast_reg_10572));
    tmp79_fu_8623_p2 <= std_logic_vector(signed(ap_const_lv12_918) + signed(tmp_391_cast_reg_10572));
    tmp7_fu_4735_p2 <= std_logic_vector(signed(ap_const_lv10_318) + signed(tmp_330_cast127_cast_reg_9181));
    tmp80_fu_8638_p2 <= std_logic_vector(signed(ap_const_lv12_978) + signed(tmp_391_cast_reg_10572));
    tmp81_fu_8653_p2 <= std_logic_vector(signed(ap_const_lv12_9D8) + signed(tmp_391_cast_reg_10572));
    tmp82_fu_8668_p2 <= std_logic_vector(signed(ap_const_lv12_A38) + signed(tmp_391_cast_reg_10572));
    tmp83_fu_8683_p2 <= std_logic_vector(signed(ap_const_lv12_A98) + signed(tmp_391_cast_reg_10572));
    tmp84_fu_8698_p2 <= std_logic_vector(signed(ap_const_lv12_AF8) + signed(tmp_391_cast_reg_10572));
    tmp85_fu_8713_p2 <= std_logic_vector(signed(ap_const_lv12_B58) + signed(tmp_391_cast_reg_10572));
    tmp86_fu_8728_p2 <= std_logic_vector(signed(ap_const_lv12_BB8) + signed(tmp_391_cast_reg_10572));
    tmp8_fu_4498_p2 <= std_logic_vector(signed(ap_const_lv9_178) + signed(tmp_330_cast127_cast_1_reg_9153));
    tmp9_fu_4840_p2 <= std_logic_vector(unsigned(ap_const_lv11_3D8) + unsigned(tmp_330_cast1_fu_4829_p1));
    tmp_120_fu_4000_p1 <= co_reg_3124(1 - 1 downto 0);
    tmp_121_fu_4048_p1 <= co_reg_3124(2 - 1 downto 0);
    tmp_122_fu_4064_p2 <= std_logic_vector(shift_left(unsigned(co_reg_3124),to_integer(unsigned('0' & ap_const_lv5_3(5-1 downto 0)))));
    tmp_123_fu_6197_p3 <= (tmp_419_fu_6188_p2 & ap_const_lv2_0);
    tmp_124_fu_6224_p3 <= (tmp_421_fu_6215_p2 & ap_const_lv2_0);
    tmp_125_fu_6251_p3 <= (tmp_423_fu_6242_p2 & ap_const_lv2_0);
    tmp_126_fu_6278_p3 <= (tmp_425_fu_6269_p2 & ap_const_lv2_0);
    tmp_127_fu_6305_p3 <= (tmp_427_fu_6296_p2 & ap_const_lv2_0);
    tmp_128_fu_4252_p1 <= i_reg_3147(2 - 1 downto 0);
    tmp_129_fu_7897_p1 <= k_reg_3237(1 - 1 downto 0);
    tmp_130_fu_5390_p1 <= i1_reg_3158(4 - 1 downto 0);
    tmp_131_fu_5443_p2 <= std_logic_vector(shift_left(unsigned(i1_reg_3158),to_integer(unsigned('0' & ap_const_lv5_1(5-1 downto 0)))));
    tmp_132_fu_8457_p1 <= k6_reg_3248(2 - 1 downto 0);
    tmp_133_fu_6406_p1 <= i3_reg_3203(1 - 1 downto 0);
    tmp_134_fu_6584_p3 <= (tmp_564_reg_9833 & ap_const_lv2_0);
    tmp_135_fu_6527_p1 <= tmp_570_fu_6522_p2(10 - 1 downto 0);
    tmp_136_fu_6531_p1 <= tmp_570_fu_6522_p2(8 - 1 downto 0);
    tmp_137_fu_6631_p3 <= (tmp_575_reg_9849 & ap_const_lv2_0);
    tmp_138_fu_7023_p3 <= (tmp_590_reg_9887 & ap_const_lv2_0);
    tmp_139_fu_7053_p3 <= (tmp_595_reg_9893 & ap_const_lv2_0);
    tmp_140_fu_7083_p3 <= (tmp_601_reg_9899 & ap_const_lv2_0);
    tmp_141_fu_7159_p1 <= tmp_612_fu_7150_p2(13 - 1 downto 0);
    tmp_142_fu_7231_p1 <= i4_reg_3214(2 - 1 downto 0);
    tmp_143_fu_7355_p1 <= tmp_629_fu_7350_p2(11 - 1 downto 0);
    tmp_144_fu_7359_p1 <= tmp_629_fu_7350_p2(9 - 1 downto 0);
    tmp_145_fu_7626_p1 <= tmp_645_fu_7617_p2(13 - 1 downto 0);
    tmp_146_fu_7649_p2 <= std_logic_vector(shift_left(unsigned(tmp_650_reg_10045),to_integer(unsigned('0' & ap_const_lv15_2(15-1 downto 0)))));
    tmp_170_fu_3708_p2 <= std_logic_vector(unsigned(ap_const_lv7_30) + unsigned(co_cast138_cast_fu_3614_p1));
    tmp_171_fu_3748_p2 <= std_logic_vector(signed(ap_const_lv7_48) + signed(co_cast138_cast_fu_3614_p1));
    tmp_172_fu_3834_p2 <= std_logic_vector(unsigned(ap_const_lv8_78) + unsigned(co_cast8_fu_3610_p1));
    tmp_173_fu_3874_p2 <= std_logic_vector(signed(ap_const_lv8_90) + signed(co_cast8_fu_3610_p1));
    tmp_174_fu_3914_p2 <= std_logic_vector(signed(ap_const_lv8_A8) + signed(co_cast8_fu_3610_p1));
    tmp_175_fu_4028_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_4012_p1) - unsigned(p_shl2_cast_fu_4024_p1));
    tmp_176_fu_4074_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_4060_p1) - unsigned(p_shl3_cast_fu_4070_p1));
    tmp_178_fu_6016_p2 <= std_logic_vector(unsigned(co2_cast117_cast_fu_5978_p1) + unsigned(ap_const_lv6_18));
    tmp_179_cast_fu_6022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_178_fu_6016_p2),9));
    tmp_180_fu_6044_p2 <= std_logic_vector(unsigned(co2_cast5_fu_5974_p1) + unsigned(ap_const_lv7_30));
    tmp_181_cast_fu_6050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_180_fu_6044_p2),10));
    tmp_182_fu_6072_p2 <= std_logic_vector(unsigned(co2_cast5_fu_5974_p1) + unsigned(ap_const_lv7_48));
    tmp_183_cast_fu_6078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_182_fu_6072_p2),10));
    tmp_184_fu_6100_p3 <= (ap_const_lv1_1 & co2_reg_3169);
    tmp_185_cast_fu_6112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_197_cast_fu_6108_p1),10));
    tmp_186_cast1_fu_4221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),18));
    tmp_186_cast2_fu_4225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),17));
    tmp_186_cast3_fu_4229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),16));
    tmp_186_cast4_fu_4233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),19));
    tmp_186_cast5_fu_4176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),15));
    tmp_186_cast6_fu_4147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),14));
    tmp_186_cast7_fu_4114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),13));
    tmp_186_cast8_fu_4118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_3135),12));
    tmp_186_cast_fu_4044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f1_cast_fu_4034_p4),7));
    tmp_187_fu_4142_p2 <= std_logic_vector(unsigned(tmp_175_reg_8974) + unsigned(ci_cast1_fu_4098_p1));
        tmp_188_cast_fu_4237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_187_reg_9030),13));

    tmp_189_cast_fu_4090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_cast_fu_4080_p4),8));
    tmp_189_fu_7718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_3225),64));
    tmp_190_fu_7723_p2 <= std_logic_vector(unsigned(i5_cast101_cast_fu_7702_p1) + unsigned(ap_const_lv6_18));
    tmp_191_fu_7729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_190_fu_7723_p2),64));
    tmp_192_fu_7734_p2 <= std_logic_vector(unsigned(i5_cast102_cast_reg_10185) + unsigned(ap_const_lv7_30));
    tmp_193_fu_7739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_192_fu_7734_p2),64));
    tmp_194_fu_7744_p2 <= std_logic_vector(unsigned(i5_cast102_cast_reg_10185) + unsigned(ap_const_lv7_48));
    tmp_195_fu_7749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_194_fu_7744_p2),64));
    tmp_196_fu_7754_p3 <= (ap_const_lv1_1 & i5_reg_3225);
        tmp_197_cast_fu_6108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_184_fu_6100_p3),7));

    tmp_197_fu_7766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_206_cast_fu_7762_p1),64));
    tmp_198_fu_7771_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(ap_const_lv8_78));
    tmp_199_fu_7776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_198_fu_7771_p2),64));
    tmp_200_fu_7781_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(ap_const_lv8_90));
    tmp_201_fu_7786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_200_fu_7781_p2),64));
    tmp_202_fu_7791_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(ap_const_lv8_A8));
    tmp_203_fu_7796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_202_fu_7791_p2),64));
    tmp_204_fu_7801_p3 <= (ap_const_lv2_2 & i5_reg_3225);
    tmp_205_fu_7813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_214_cast_fu_7809_p1),64));
        tmp_206_cast_fu_7762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_196_fu_7754_p3),7));

    tmp_206_fu_7818_p2 <= std_logic_vector(unsigned(i5_cast102_cast_reg_10185) + unsigned(ap_const_lv7_58));
    tmp_207_fu_7827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_216_cast_fu_7823_p1),64));
    tmp_208_fu_7832_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(ap_const_lv9_F0));
    tmp_209_fu_7837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_208_fu_7832_p2),64));
    tmp_210_fu_7842_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(ap_const_lv9_108));
    tmp_211_fu_7847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_210_fu_7842_p2),64));
    tmp_212_fu_7852_p3 <= (ap_const_lv4_9 & i5_reg_3225);
    tmp_213_fu_7860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_212_fu_7852_p3),64));
        tmp_214_cast_fu_7809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_204_fu_7801_p3),8));

    tmp_214_fu_7865_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(ap_const_lv9_138));
    tmp_215_fu_7870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_214_fu_7865_p2),64));
        tmp_216_cast_fu_7823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_206_fu_7818_p2),8));

    tmp_216_fu_7875_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(ap_const_lv9_150));
    tmp_217_fu_7880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_216_fu_7875_p2),64));
    tmp_218_cast1_fu_6156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),12));
    tmp_218_cast2_fu_6160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),15));
    tmp_218_cast3_fu_6164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),14));
    tmp_218_cast4_fu_6168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),36));
    tmp_218_cast5_fu_6172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),13));
    tmp_218_cast6_fu_6176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),11));
    tmp_218_cast7_fu_6180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),10));
    tmp_218_cast_fu_6184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_3180),9));
    tmp_218_fu_3646_p3 <= (co_reg_3124 & ap_const_lv3_0);
    tmp_219_fu_4378_p2 <= std_logic_vector(unsigned(tmp_176_reg_8984) + unsigned(ci_cast_reg_8994));
        tmp_220_cast_fu_4382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_219_fu_4378_p2),15));

    tmp_220_fu_3658_p2 <= std_logic_vector(unsigned(p_shl35_cast_fu_3642_p1) - unsigned(p_shl36_cast_fu_3654_p1));
    tmp_221_fu_4280_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_4264_p1) - unsigned(p_shl7_cast_fu_4276_p1));
    tmp_222_fu_4296_p2 <= std_logic_vector(unsigned(tmp1_fu_4290_p2) + unsigned(co_cast143_cast1_reg_8903));
    tmp_223_fu_4325_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_4309_p1) - unsigned(p_shl9_cast_fu_4321_p1));
    tmp_224_fu_4331_p2 <= std_logic_vector(unsigned(tmp_223_fu_4325_p2) + unsigned(tmp_186_cast_reg_8979));
    tmp_225_fu_4373_p2 <= std_logic_vector(unsigned(tmp2_fu_4367_p2) + unsigned(co_cast143_cast1_reg_8903));
    tmp_226_fu_4482_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_4478_p1) + unsigned(co_cast143_cast_reg_8910));
    tmp_227_fu_4493_p2 <= std_logic_vector(unsigned(tmp4_fu_4487_p2) + unsigned(co_cast143_cast_reg_8910));
    tmp_228_fu_4624_p2 <= std_logic_vector(unsigned(tmp5_fu_4619_p2) + unsigned(co_cast143_cast_reg_8910));
    tmp_229_fu_4634_p2 <= std_logic_vector(unsigned(tmp6_fu_4629_p2) + unsigned(co_cast143_cast_reg_8910));
    tmp_230_fu_4740_p2 <= std_logic_vector(unsigned(tmp7_fu_4735_p2) + unsigned(co_cast143_cast_reg_8910));
        tmp_231_cast_fu_8765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_231_fu_8759_p2),12));

    tmp_231_fu_8759_p2 <= std_logic_vector(unsigned(i7_cast92_cast_fu_8743_p1) + unsigned(ap_const_lv11_418));
    tmp_232_fu_8769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_231_cast_fu_8765_p1),64));
    tmp_233_fu_8774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_3259),64));
    tmp_234_fu_4503_p2 <= std_logic_vector(unsigned(tmp8_fu_4498_p2) + unsigned(co_cast143_cast1_reg_8903));
        tmp_235_cast_fu_8801_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_235_fu_8795_p2),12));

    tmp_235_fu_8795_p2 <= std_logic_vector(unsigned(i8_cast90_cast_fu_8779_p1) + unsigned(ap_const_lv10_218));
    tmp_236_fu_8805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_235_cast_fu_8801_p1),64));
    tmp_237_fu_8810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_reg_3271),64));
        tmp_238_cast1_fu_8177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_238_reg_10303),11));

        tmp_238_cast96_cast1_fu_7950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_238_reg_10303),8));

        tmp_238_cast96_cast_fu_7931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_238_reg_10303),9));

        tmp_238_cast97_cast_fu_7993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_238_reg_10303),10));

    tmp_238_fu_7925_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_7909_p1) - unsigned(p_shl5_cast_fu_7921_p1));
    tmp_239_fu_4846_p2 <= std_logic_vector(unsigned(tmp9_fu_4840_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_240_fu_7940_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(tmp44_fu_7934_p2));
    tmp_241_fu_7945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_240_fu_7940_p2),64));
        tmp_242_cast_fu_8000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_242_fu_7996_p2),32));

    tmp_242_fu_7996_p2 <= std_logic_vector(unsigned(tmp_238_reg_10303) + unsigned(i5_cast102_cast_reg_10185));
    tmp_243_fu_8004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_242_cast_fu_8000_p1),64));
    tmp_244_fu_4857_p2 <= std_logic_vector(unsigned(tmp10_fu_4851_p2) + unsigned(co_cast144_cast_reg_8891));
        tmp_245_cast_fu_7964_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_245_fu_7959_p2),9));

    tmp_245_fu_7959_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(tmp45_fu_7953_p2));
    tmp_246_fu_7968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_245_cast_fu_7964_p1),64));
    tmp_247_fu_4951_p2 <= std_logic_vector(unsigned(tmp11_fu_4946_p2) + unsigned(co_cast144_cast_reg_8891));
        tmp_248_cast_fu_7984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_248_fu_7979_p2),9));

    tmp_248_fu_7979_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(tmp46_fu_7973_p2));
    tmp_249_fu_7988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_248_cast_fu_7984_p1),64));
    tmp_250_fu_4961_p2 <= std_logic_vector(unsigned(tmp12_fu_4956_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_251_fu_8017_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp47_fu_8011_p2));
    tmp_252_fu_8022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_251_fu_8017_p2),64));
    tmp_253_fu_5092_p2 <= std_logic_vector(unsigned(tmp13_fu_5087_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_254_fu_8033_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp48_fu_8027_p2));
    tmp_255_fu_8038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_254_fu_8033_p2),64));
    tmp_256_fu_5102_p2 <= std_logic_vector(unsigned(tmp14_fu_5097_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_257_fu_8058_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp49_fu_8053_p2));
    tmp_258_fu_8063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_257_fu_8058_p2),64));
    tmp_259_fu_5112_p2 <= std_logic_vector(unsigned(tmp15_fu_5107_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_260_fu_8073_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp50_fu_8068_p2));
    tmp_261_fu_8078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_260_fu_8073_p2),64));
    tmp_262_fu_5206_p2 <= std_logic_vector(unsigned(tmp16_fu_5201_p2) + unsigned(co_cast143_cast_reg_8910));
    tmp_263_fu_8088_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp51_fu_8083_p2));
    tmp_264_fu_8093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_263_fu_8088_p2),64));
    tmp_265_fu_5216_p2 <= std_logic_vector(unsigned(tmp17_fu_5211_p2) + unsigned(co_cast143_cast_reg_8910));
    tmp_266_fu_8103_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp52_fu_8098_p2));
    tmp_267_fu_8108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_266_fu_8103_p2),64));
    tmp_268_fu_4646_p2 <= std_logic_vector(unsigned(tmp19_cast_fu_4642_p1) + unsigned(co_cast2_reg_8882));
        tmp_269_cast_fu_8123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_fu_8118_p2),10));

    tmp_269_fu_8118_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(tmp53_fu_8113_p2));
    tmp_270_fu_8127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_269_cast_fu_8123_p1),64));
    tmp_271_fu_8137_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(tmp54_fu_8132_p2));
        tmp_272_cast_fu_8142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_271_fu_8137_p2),10));

    tmp_272_fu_8146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_272_cast_fu_8142_p1),64));
    tmp_273_fu_8156_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(tmp55_fu_8151_p2));
    tmp_274_fu_8164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_275_cast_fu_8161_p1),64));
        tmp_275_cast_fu_8161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_273_reg_10432),10));

    tmp_275_fu_8048_p2 <= std_logic_vector(unsigned(i5_cast104_cast1_reg_10174) + unsigned(tmp56_fu_8043_p2));
    tmp_276_fu_8172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_278_cast_fu_8169_p1),64));
    tmp_277_fu_8193_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp57_cast_fu_8189_p1));
        tmp_278_cast_fu_8169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_275_reg_10397),10));

    tmp_278_fu_8198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_fu_8193_p2),64));
    tmp_279_fu_8209_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp58_fu_8203_p2));
    tmp_280_fu_8214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_279_fu_8209_p2),64));
    tmp_281_fu_8224_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp59_fu_8219_p2));
    tmp_282_fu_8229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_281_fu_8224_p2),64));
    tmp_283_fu_8239_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp60_fu_8234_p2));
    tmp_284_fu_8244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_283_fu_8239_p2),64));
    tmp_285_fu_8254_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp61_fu_8249_p2));
    tmp_286_fu_8259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_285_fu_8254_p2),64));
    tmp_287_fu_8269_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp62_fu_8264_p2));
    tmp_288_fu_8274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_287_fu_8269_p2),64));
    tmp_289_fu_8284_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp63_fu_8279_p2));
    tmp_290_fu_8289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_289_fu_8284_p2),64));
    tmp_291_fu_8299_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp64_fu_8294_p2));
    tmp_292_fu_8304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_291_fu_8299_p2),64));
    tmp_293_fu_8314_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp65_fu_8309_p2));
    tmp_294_fu_8319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_293_fu_8314_p2),64));
    tmp_295_fu_8329_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp66_fu_8324_p2));
    tmp_296_fu_8334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_295_fu_8329_p2),64));
    tmp_297_fu_8344_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp67_fu_8339_p2));
    tmp_298_fu_8349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_297_fu_8344_p2),64));
    tmp_299_fu_8359_p2 <= std_logic_vector(unsigned(i5_cast2_reg_10130) + unsigned(tmp68_fu_8354_p2));
    tmp_300_fu_8364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_299_fu_8359_p2),64));
    tmp_301_fu_8374_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp69_fu_8369_p2));
    tmp_302_fu_8383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_317_cast_fu_8379_p1),64));
    tmp_303_fu_8393_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp70_fu_8388_p2));
    tmp_304_fu_8402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_320_cast_fu_8398_p1),64));
    tmp_305_fu_8412_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp71_fu_8407_p2));
    tmp_306_fu_8421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_323_cast_fu_8417_p1),64));
    tmp_307_fu_8431_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp72_fu_8426_p2));
    tmp_308_fu_8440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_326_cast_fu_8436_p1),64));
    tmp_309_cast1_fu_6386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_3191),10));
    tmp_309_cast2_fu_6390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_3191),11));
    tmp_309_cast_fu_6335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_3191),15));
    tmp_309_fu_3674_p3 <= (tmp_s_fu_3668_p2 & ap_const_lv5_0);
    tmp_310_fu_5422_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_5402_p1) - unsigned(p_shl13_cast_fu_5418_p1));
    tmp_311_fu_5438_p2 <= std_logic_vector(unsigned(tmp20_fu_5432_p2) + unsigned(co_cast2_reg_8882));
    tmp_312_fu_5453_p2 <= std_logic_vector(unsigned(p_shl13_cast1_fu_5414_p1) - unsigned(p_shl14_cast_fu_5449_p1));
    tmp_313_fu_5459_p2 <= std_logic_vector(unsigned(tmp_312_fu_5453_p2) + unsigned(tmp_189_cast_reg_8989));
    tmp_314_fu_5501_p2 <= std_logic_vector(unsigned(tmp21_fu_5495_p2) + unsigned(co_cast2_reg_8882));
    tmp_315_fu_5595_p2 <= std_logic_vector(unsigned(tmp22_fu_5590_p2) + unsigned(co_cast2_reg_8882));
    tmp_316_fu_5605_p2 <= std_logic_vector(unsigned(tmp23_fu_5600_p2) + unsigned(co_cast2_reg_8882));
        tmp_317_cast_fu_8379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_301_fu_8374_p2),11));

    tmp_317_fu_5711_p2 <= std_logic_vector(unsigned(tmp24_fu_5705_p2) + unsigned(co_cast144_cast_reg_8891));
    tmp_318_fu_5722_p2 <= std_logic_vector(unsigned(tmp25_fu_5716_p2) + unsigned(co_cast1_reg_8874));
    tmp_319_fu_5820_p2 <= std_logic_vector(unsigned(tmp26_fu_5815_p2) + unsigned(co_cast1_reg_8874));
        tmp_320_cast_fu_8398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_303_fu_8393_p2),11));

    tmp_320_fu_5830_p2 <= std_logic_vector(unsigned(tmp27_fu_5825_p2) + unsigned(co_cast1_reg_8874));
    tmp_321_fu_5840_p2 <= std_logic_vector(unsigned(tmp28_fu_5835_p2) + unsigned(co_cast1_reg_8874));
    tmp_322_fu_8485_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_8469_p1) - unsigned(p_shl11_cast_fu_8481_p1));
        tmp_323_cast_fu_8417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_305_fu_8412_p2),11));

    tmp_323_fu_8503_p2 <= std_logic_vector(unsigned(i5_cast105_cast_reg_10159) + unsigned(tmp73_fu_8497_p2));
    tmp_324_fu_8512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_393_cast_fu_8508_p1),64));
    tmp_325_fu_8540_p2 <= std_logic_vector(unsigned(tmp_322_reg_10549) + unsigned(i5_cast104_cast1_reg_10174));
        tmp_326_cast_fu_8436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_307_fu_8431_p2),11));

    tmp_326_fu_8548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_395_cast_fu_8544_p1),64));
    tmp_327_fu_8523_p2 <= std_logic_vector(unsigned(i5_cast105_cast1_reg_10146) + unsigned(tmp74_fu_8517_p2));
    tmp_328_fu_8532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_398_cast_fu_8528_p1),64));
    tmp_329_fu_8567_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp75_cast_fu_8563_p1));
        tmp_330_cast127_cast_1_fu_4286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_221_fu_4280_p2),9));

        tmp_330_cast127_cast_fu_4386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_221_reg_9147),10));

        tmp_330_cast1_fu_4829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_221_reg_9147),11));

    tmp_330_fu_8572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_329_fu_8567_p2),64));
    tmp_331_fu_8583_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp76_fu_8577_p2));
    tmp_332_fu_8588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_331_fu_8583_p2),64));
    tmp_333_fu_8598_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp77_fu_8593_p2));
    tmp_334_fu_8603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_333_fu_8598_p2),64));
    tmp_335_fu_8613_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp78_fu_8608_p2));
    tmp_336_fu_8618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_335_fu_8613_p2),64));
    tmp_337_fu_8628_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp79_fu_8623_p2));
    tmp_338_fu_8633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_337_fu_8628_p2),64));
    tmp_339_fu_8643_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp80_fu_8638_p2));
    tmp_340_fu_8648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_339_fu_8643_p2),64));
    tmp_341_fu_8658_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp81_fu_8653_p2));
    tmp_342_fu_8663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_341_fu_8658_p2),64));
    tmp_343_fu_8673_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp82_fu_8668_p2));
    tmp_344_fu_8678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_343_fu_8673_p2),64));
    tmp_345_fu_8688_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp83_fu_8683_p2));
    tmp_346_fu_8693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_345_fu_8688_p2),64));
    tmp_347_fu_8703_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp84_fu_8698_p2));
    tmp_348_fu_8708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_347_fu_8703_p2),64));
    tmp_349_fu_8718_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp85_fu_8713_p2));
    tmp_350_fu_8723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_349_fu_8718_p2),64));
    tmp_351_fu_8733_p2 <= std_logic_vector(unsigned(i5_cast1_reg_10114) + unsigned(tmp86_fu_8728_p2));
    tmp_352_fu_8738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_351_fu_8733_p2),64));
    tmp_353_fu_6434_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_6418_p1) - unsigned(p_shl16_cast_fu_6430_p1));
    tmp_354_fu_6454_p2 <= std_logic_vector(unsigned(tmp29_fu_6448_p2) + unsigned(co2_cast119_cast_reg_9610));
    tmp_355_cast_fu_6459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_354_fu_6454_p2),11));
    tmp_355_fu_3686_p3 <= (tmp_s_fu_3668_p2 & ap_const_lv3_0);
    tmp_356_fu_6440_p2 <= std_logic_vector(unsigned(co2_cast5_reg_9619) + unsigned(tmp_353_fu_6434_p2));
    tmp_357_cast_fu_6493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_474_cast_fu_6490_p1),35));
    tmp_357_fu_3698_p2 <= std_logic_vector(unsigned(p_shl33_cast_fu_3682_p1) - unsigned(p_shl34_cast_fu_3694_p1));
    tmp_358_fu_6541_p2 <= std_logic_vector(unsigned(tmp30_fu_6535_p2) + unsigned(co2_cast119_cast_reg_9610));
    tmp_359_cast_fu_6546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_358_fu_6541_p2),11));
    tmp_359_fu_3714_p3 <= (tmp_170_fu_3708_p2 & ap_const_lv5_0);
    tmp_360_fu_3726_p3 <= (tmp_170_fu_3708_p2 & ap_const_lv3_0);
    tmp_361_fu_6665_p2 <= std_logic_vector(unsigned(tmp31_cast_fu_6661_p1) + unsigned(co2_cast120_cast_reg_9601));
        tmp_362_cast_fu_3664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_220_fu_3658_p2),12));

    tmp_362_fu_3738_p2 <= std_logic_vector(unsigned(p_shl31_cast_fu_3722_p1) - unsigned(p_shl32_cast_fu_3734_p1));
    tmp_363_cast_fu_6670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_361_fu_6665_p2),12));
    tmp_363_fu_3754_p3 <= (tmp_171_fu_3748_p2 & ap_const_lv5_0);
    tmp_364_fu_3766_p3 <= (tmp_171_fu_3748_p2 & ap_const_lv3_0);
    tmp_365_fu_6707_p2 <= std_logic_vector(unsigned(tmp32_fu_6701_p2) + unsigned(co2_cast120_cast_reg_9601));
    tmp_366_fu_3778_p2 <= std_logic_vector(unsigned(p_shl29_cast_fu_3762_p1) - unsigned(p_shl30_cast_fu_3774_p1));
    tmp_367_cast_fu_6712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_365_fu_6707_p2),12));
    tmp_367_fu_3788_p4 <= ((ap_const_lv1_1 & co_reg_3124) & ap_const_lv5_0);
        tmp_368_cast_fu_3704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_357_fu_3698_p2),13));

        tmp_368_fu_3798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_367_fu_3788_p4),12));

    tmp_369_fu_6749_p2 <= std_logic_vector(unsigned(tmp33_fu_6743_p2) + unsigned(co2_cast120_cast_reg_9601));
    tmp_370_fu_3806_p4 <= ((ap_const_lv1_1 & co_reg_3124) & ap_const_lv3_0);
    tmp_371_cast_fu_6754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_369_fu_6749_p2),12));
        tmp_371_fu_3816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_370_fu_3806_p4),10));

    tmp_372_fu_6787_p2 <= std_logic_vector(unsigned(tmp34_fu_6781_p2) + unsigned(co2_cast120_cast_reg_9601));
    tmp_373_cast_fu_6792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_372_fu_6787_p2),12));
    tmp_373_fu_3824_p2 <= std_logic_vector(unsigned(p_shl27_cast_fu_3802_p1) - unsigned(p_shl28_cast_fu_3820_p1));
    tmp_374_fu_6824_p2 <= std_logic_vector(unsigned(tmp35_fu_6819_p2) + unsigned(co2_cast119_cast_reg_9610));
    tmp_375_cast_fu_6833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_492_cast_fu_6829_p1),12));
    tmp_375_fu_3840_p3 <= (tmp_172_fu_3834_p2 & ap_const_lv5_0);
    tmp_376_fu_6869_p2 <= std_logic_vector(unsigned(tmp36_fu_6864_p2) + unsigned(co2_cast119_cast_reg_9610));
    tmp_377_cast_fu_6937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_495_cast_fu_6934_p1),12));
    tmp_377_fu_3852_p3 <= (tmp_172_fu_3834_p2 & ap_const_lv3_0);
    tmp_378_fu_6977_p2 <= std_logic_vector(unsigned(tmp37_fu_6971_p2) + unsigned(co2_cast2_reg_9592));
    tmp_379_cast_fu_7126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_378_reg_9939),13));
    tmp_379_fu_3864_p2 <= std_logic_vector(unsigned(p_shl25_cast_fu_3848_p1) - unsigned(p_shl26_cast_fu_3860_p1));
    tmp_380_fu_6988_p2 <= std_logic_vector(unsigned(tmp38_fu_6982_p2) + unsigned(co2_cast2_reg_9592));
    tmp_381_cast_fu_6993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_380_fu_6988_p2),13));
    tmp_381_fu_3880_p3 <= (tmp_173_fu_3874_p2 & ap_const_lv5_0);
    tmp_382_fu_7259_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_7243_p1) - unsigned(p_shl18_cast_fu_7255_p1));
    tmp_383_fu_7280_p2 <= std_logic_vector(unsigned(co2_cast2_reg_9592) + unsigned(tmp39_fu_7274_p2));
    tmp_384_cast_fu_7285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_383_fu_7280_p2),13));
    tmp_384_fu_3892_p3 <= (tmp_173_fu_3874_p2 & ap_const_lv3_0);
    tmp_385_fu_7312_p2 <= std_logic_vector(unsigned(tmp_382_reg_10009) + unsigned(co2_cast119_cast_reg_9610));
    tmp_386_cast_fu_7320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_509_cast_fu_7316_p1),35));
    tmp_386_fu_3904_p2 <= std_logic_vector(unsigned(p_shl23_cast_fu_3888_p1) - unsigned(p_shl24_cast_fu_3900_p1));
    tmp_387_fu_7464_p2 <= std_logic_vector(unsigned(co2_cast2_reg_9592) + unsigned(tmp40_fu_7459_p2));
    tmp_388_cast_fu_7469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_387_fu_7464_p2),13));
    tmp_388_fu_3920_p3 <= (tmp_174_fu_3914_p2 & ap_const_lv5_0);
    tmp_389_fu_7501_p2 <= std_logic_vector(unsigned(co2_cast2_reg_9592) + unsigned(tmp41_fu_7496_p2));
    tmp_390_cast_fu_7506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_389_fu_7501_p2),13));
    tmp_390_fu_3932_p3 <= (tmp_174_fu_3914_p2 & ap_const_lv3_0);
        tmp_391_cast_cast1_fu_8491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_reg_10549),9));

        tmp_391_cast_cast_fu_8494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_reg_10549),10));

        tmp_391_cast_fu_8537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_reg_10549),12));

    tmp_391_fu_7369_p2 <= std_logic_vector(unsigned(co2_cast120_cast_reg_9601) + unsigned(tmp42_fu_7363_p2));
    tmp_392_cast_fu_7588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_515_cast_fu_7585_p1),13));
    tmp_392_fu_3944_p2 <= std_logic_vector(unsigned(p_shl21_cast_fu_3928_p1) - unsigned(p_shl22_cast_fu_3940_p1));
        tmp_393_cast_fu_8508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_323_fu_8503_p2),11));

    tmp_393_fu_7380_p2 <= std_logic_vector(unsigned(co2_cast1_reg_9587) + unsigned(tmp43_fu_7374_p2));
    tmp_394_cast_fu_7385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_393_fu_7380_p2),14));
    tmp_394_fu_3954_p4 <= ((ap_const_lv2_2 & co_reg_3124) & ap_const_lv5_0);
        tmp_395_cast_fu_8544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_325_fu_8540_p2),32));

        tmp_395_fu_3964_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_394_fu_3954_p4),13));

    tmp_396_fu_3972_p4 <= ((ap_const_lv2_2 & co_reg_3124) & ap_const_lv3_0);
        tmp_397_fu_3982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_396_fu_3972_p4),11));

        tmp_398_cast_fu_8528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_327_fu_8523_p2),11));

    tmp_398_fu_3990_p2 <= std_logic_vector(unsigned(p_shl19_cast_fu_3968_p1) - unsigned(p_shl20_cast_fu_3986_p1));
    tmp_399_fu_5994_p3 <= (co2_reg_3169 & ap_const_lv2_0);
    tmp_400_fu_6006_p2 <= std_logic_vector(unsigned(p_shl101_cast_fu_6002_p1) - unsigned(co2_cast119_cast_fu_5970_p1));
    tmp_401_fu_6026_p3 <= (tmp_178_fu_6016_p2 & ap_const_lv2_0);
    tmp_402_fu_6038_p2 <= std_logic_vector(unsigned(p_shl100_cast_fu_6034_p1) - unsigned(tmp_179_cast_fu_6022_p1));
    tmp_403_fu_6054_p3 <= (tmp_180_fu_6044_p2 & ap_const_lv2_0);
    tmp_404_fu_6066_p2 <= std_logic_vector(unsigned(p_shl99_cast_fu_6062_p1) - unsigned(tmp_181_cast_fu_6050_p1));
    tmp_405_fu_6082_p3 <= (tmp_182_fu_6072_p2 & ap_const_lv2_0);
    tmp_406_fu_6094_p2 <= std_logic_vector(unsigned(p_shl98_cast_fu_6090_p1) - unsigned(tmp_183_cast_fu_6078_p1));
    tmp_407_fu_6116_p4 <= ((ap_const_lv1_1 & co2_reg_3169) & ap_const_lv2_0);
        tmp_408_fu_6126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_407_fu_6116_p4),9));

    tmp_409_fu_6134_p2 <= std_logic_vector(unsigned(p_shl97_cast_fu_6130_p1) - unsigned(tmp_185_cast_fu_6112_p1));
    tmp_410_fu_4122_p2 <= std_logic_vector(unsigned(tmp_186_cast8_fu_4118_p1) + unsigned(tmp_362_cast_reg_8929));
    tmp_411_fu_4132_p2 <= std_logic_vector(unsigned(tmp_186_cast7_fu_4114_p1) + unsigned(tmp_368_cast_reg_8934));
    tmp_412_fu_4151_p2 <= std_logic_vector(unsigned(tmp_186_cast6_fu_4147_p1) + unsigned(tmp_439_cast_reg_8939));
    tmp_413_fu_4161_p2 <= std_logic_vector(unsigned(tmp_186_cast6_fu_4147_p1) + unsigned(tmp_442_cast_reg_8944));
    tmp_414_fu_4171_p2 <= std_logic_vector(unsigned(tmp_186_cast6_fu_4147_p1) + unsigned(tmp_447_cast_reg_8949));
    tmp_415_fu_4184_p2 <= std_logic_vector(unsigned(tmp_186_cast5_fu_4176_p1) + unsigned(tmp_450_cast_reg_8954));
    tmp_416_fu_4194_p2 <= std_logic_vector(unsigned(tmp_186_cast5_fu_4176_p1) + unsigned(tmp_453_cast_reg_8959));
    tmp_417_fu_4199_p2 <= std_logic_vector(unsigned(tmp_186_cast5_fu_4176_p1) + unsigned(tmp_456_cast_reg_8964));
    tmp_418_fu_4204_p2 <= std_logic_vector(unsigned(tmp_186_cast5_fu_4176_p1) + unsigned(tmp_461_cast_reg_8969));
    tmp_419_fu_6188_p2 <= std_logic_vector(unsigned(tmp_218_cast_fu_6184_p1) + unsigned(tmp_467_cast_reg_9632));
    tmp_420_fu_6209_p2 <= std_logic_vector(signed(p_shl106_cast_fu_6205_p1) - signed(tmp_486_cast_fu_6193_p1));
    tmp_421_fu_6215_p2 <= std_logic_vector(unsigned(tmp_218_cast_fu_6184_p1) + unsigned(tmp_402_reg_9637));
    tmp_422_fu_6236_p2 <= std_logic_vector(signed(p_shl105_cast_fu_6232_p1) - signed(tmp_489_cast_fu_6220_p1));
    tmp_423_fu_6242_p2 <= std_logic_vector(unsigned(tmp_218_cast7_fu_6180_p1) + unsigned(tmp_404_reg_9642));
    tmp_424_fu_6263_p2 <= std_logic_vector(signed(p_shl104_cast_fu_6259_p1) - signed(tmp_492_cast1_fu_6247_p1));
    tmp_425_fu_6269_p2 <= std_logic_vector(unsigned(tmp_218_cast7_fu_6180_p1) + unsigned(tmp_406_reg_9647));
    tmp_426_fu_6290_p2 <= std_logic_vector(signed(p_shl103_cast_fu_6286_p1) - signed(tmp_495_cast1_fu_6274_p1));
    tmp_427_fu_6296_p2 <= std_logic_vector(unsigned(tmp_218_cast6_fu_6176_p1) + unsigned(tmp_476_cast_reg_9652));
    tmp_428_fu_6317_p2 <= std_logic_vector(signed(p_shl102_cast_fu_6313_p1) - signed(tmp_498_cast_fu_6301_p1));
    tmp_429_fu_4389_p3 <= (tmp_222_reg_9159 & ap_const_lv5_0);
    tmp_430_fu_4400_p3 <= (tmp_222_reg_9159 & ap_const_lv3_0);
    tmp_431_fu_4411_p2 <= std_logic_vector(unsigned(p_shl75_cast_fu_4396_p1) - unsigned(p_shl76_cast_fu_4407_p1));
    tmp_432_fu_4421_p2 <= std_logic_vector(unsigned(tmp_186_cast3_reg_9114) + unsigned(tmp_505_cast2_fu_4417_p1));
    tmp_433_fu_4336_p3 <= (tmp_224_fu_4331_p2 & ap_const_lv6_0);
    tmp_434_fu_4344_p3 <= (tmp_224_fu_4331_p2 & ap_const_lv4_0);
    tmp_435_fu_4356_p2 <= std_logic_vector(unsigned(tmp_433_fu_4336_p3) - unsigned(p_shl74_cast_fu_4352_p1));
    tmp_436_fu_4362_p2 <= std_logic_vector(signed(tmp_188_cast_reg_9134) + signed(tmp_435_fu_4356_p2));
    tmp_437_fu_4431_p3 <= (tmp_225_reg_9170 & ap_const_lv5_0);
        tmp_438_cast1_fu_5610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_310_reg_9448),13));

        tmp_438_cast_cast_fu_5613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_310_reg_9448),11));

        tmp_438_cast_fu_5428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_310_fu_5422_p2),12));

    tmp_438_fu_4442_p3 <= (tmp_225_reg_9170 & ap_const_lv3_0);
        tmp_439_cast_fu_3744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_362_fu_3738_p2),14));

    tmp_439_fu_4453_p2 <= std_logic_vector(unsigned(p_shl71_cast_fu_4438_p1) - unsigned(p_shl72_cast_fu_4449_p1));
    tmp_440_fu_4463_p2 <= std_logic_vector(unsigned(tmp_186_cast3_reg_9114) + unsigned(tmp_517_cast_fu_4459_p1));
    tmp_441_fu_4535_p3 <= (tmp_226_reg_9205 & ap_const_lv5_0);
        tmp_442_cast_fu_3784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_366_fu_3778_p2),14));

    tmp_442_fu_4546_p3 <= (tmp_226_reg_9205 & ap_const_lv3_0);
    tmp_443_fu_4557_p2 <= std_logic_vector(unsigned(p_shl69_cast_fu_4542_p1) - unsigned(p_shl70_cast_fu_4553_p1));
    tmp_444_fu_4567_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_521_cast_fu_4563_p1));
    tmp_445_fu_4577_p3 <= (tmp_227_reg_9211 & ap_const_lv5_0);
    tmp_446_fu_4588_p3 <= (tmp_227_reg_9211 & ap_const_lv3_0);
        tmp_447_cast_fu_3830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_373_fu_3824_p2),14));

    tmp_447_fu_4599_p2 <= std_logic_vector(unsigned(p_shl67_cast_fu_4584_p1) - unsigned(p_shl68_cast_fu_4595_p1));
    tmp_448_fu_4609_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_525_cast_fu_4605_p1));
    tmp_449_fu_4651_p3 <= (tmp_228_reg_9259 & ap_const_lv5_0);
        tmp_450_cast_fu_3870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_379_fu_3864_p2),15));

    tmp_450_fu_4662_p3 <= (tmp_228_reg_9259 & ap_const_lv3_0);
    tmp_451_fu_4673_p2 <= std_logic_vector(unsigned(p_shl65_cast_fu_4658_p1) - unsigned(p_shl66_cast_fu_4669_p1));
    tmp_452_fu_4683_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_529_cast_fu_4679_p1));
        tmp_453_cast_fu_3910_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_386_fu_3904_p2),15));

    tmp_453_fu_4693_p3 <= (tmp_229_reg_9265 & ap_const_lv5_0);
    tmp_454_fu_4704_p3 <= (tmp_229_reg_9265 & ap_const_lv3_0);
    tmp_455_fu_4715_p2 <= std_logic_vector(unsigned(p_shl63_cast_fu_4700_p1) - unsigned(p_shl64_cast_fu_4711_p1));
        tmp_456_cast_fu_3950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_392_fu_3944_p2),15));

    tmp_456_fu_4725_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_533_cast_fu_4721_p1));
    tmp_457_fu_4745_p3 <= (tmp_230_fu_4740_p2 & ap_const_lv5_0);
    tmp_458_fu_4757_p3 <= (tmp_230_fu_4740_p2 & ap_const_lv3_0);
    tmp_459_fu_4769_p2 <= std_logic_vector(unsigned(p_shl61_cast_fu_4753_p1) - unsigned(p_shl62_cast_fu_4765_p1));
    tmp_460_fu_4779_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_537_cast_fu_4775_p1));
        tmp_461_cast_fu_3996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_398_fu_3990_p2),15));

    tmp_461_fu_4784_p3 <= (tmp_234_reg_9217 & ap_const_lv5_0);
        tmp_462_fu_4791_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_461_fu_4784_p3),15));

    tmp_463_fu_4799_p3 <= (tmp_234_reg_9217 & ap_const_lv3_0);
        tmp_464_fu_4806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_463_fu_4799_p3),13));

    tmp_465_fu_4814_p2 <= std_logic_vector(unsigned(p_shl59_cast_fu_4795_p1) - unsigned(p_shl60_cast_fu_4810_p1));
    tmp_466_fu_4824_p2 <= std_logic_vector(unsigned(tmp_186_cast2_reg_9104) + unsigned(tmp_543_cast_fu_4820_p1));
        tmp_467_cast_fu_6012_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_400_fu_6006_p2),9));

    tmp_467_fu_4862_p3 <= (tmp_239_reg_9316 & ap_const_lv5_0);
    tmp_468_fu_4873_p3 <= (tmp_239_reg_9316 & ap_const_lv3_0);
    tmp_469_fu_4884_p2 <= std_logic_vector(unsigned(p_shl57_cast_fu_4869_p1) - unsigned(p_shl58_cast_fu_4880_p1));
        tmp_470_cast110_cast_fu_6445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_353_reg_9813),8));

        tmp_470_cast1_fu_6874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_353_reg_9813),10));

        tmp_470_cast2_fu_6578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_353_reg_9813),9));

    tmp_470_fu_4894_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_547_cast_fu_4890_p1));
    tmp_471_fu_4904_p3 <= (tmp_244_reg_9322 & ap_const_lv5_0);
    tmp_472_fu_4915_p3 <= (tmp_244_reg_9322 & ap_const_lv3_0);
    tmp_473_fu_4926_p2 <= std_logic_vector(unsigned(p_shl55_cast_fu_4911_p1) - unsigned(p_shl56_cast_fu_4922_p1));
        tmp_474_cast_fu_6490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_356_reg_9821),32));

    tmp_474_fu_4936_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_551_cast_fu_4932_p1));
    tmp_475_fu_5003_p3 <= (tmp_247_reg_9338 & ap_const_lv5_0);
        tmp_476_cast_fu_6140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_409_fu_6134_p2),11));

    tmp_476_fu_5014_p3 <= (tmp_247_reg_9338 & ap_const_lv3_0);
        tmp_477_cast_fu_4127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_410_fu_4122_p2),64));

    tmp_477_fu_5025_p2 <= std_logic_vector(unsigned(p_shl53_cast_fu_5010_p1) - unsigned(p_shl54_cast_fu_5021_p1));
        tmp_478_cast_fu_4137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_411_fu_4132_p2),64));

    tmp_478_fu_5035_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_555_cast_fu_5031_p1));
        tmp_479_cast_fu_4156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_412_fu_4151_p2),64));

    tmp_479_fu_5045_p3 <= (tmp_250_reg_9344 & ap_const_lv5_0);
        tmp_480_cast_fu_4166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_413_fu_4161_p2),64));

    tmp_480_fu_5056_p3 <= (tmp_250_reg_9344 & ap_const_lv3_0);
        tmp_481_cast_fu_4180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_414_reg_9045),64));

    tmp_481_fu_5067_p2 <= std_logic_vector(unsigned(p_shl51_cast_fu_5052_p1) - unsigned(p_shl52_cast_fu_5063_p1));
        tmp_482_cast_fu_4189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_415_fu_4184_p2),64));

    tmp_482_fu_5077_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_559_cast_fu_5073_p1));
        tmp_483_cast_fu_4209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_416_reg_9060),64));

    tmp_483_fu_5117_p3 <= (tmp_253_reg_9365 & ap_const_lv5_0);
        tmp_484_cast_fu_4213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_417_reg_9065),64));

    tmp_484_fu_5128_p3 <= (tmp_253_reg_9365 & ap_const_lv3_0);
        tmp_485_cast_fu_4217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_418_reg_9070),64));

    tmp_485_fu_5139_p2 <= std_logic_vector(unsigned(p_shl49_cast_fu_5124_p1) - unsigned(p_shl50_cast_fu_5135_p1));
        tmp_486_cast_fu_6193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_419_fu_6188_p2),15));

    tmp_486_fu_5149_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_563_cast_fu_5145_p1));
    tmp_487_fu_5159_p3 <= (tmp_256_reg_9371 & ap_const_lv5_0);
    tmp_488_fu_5170_p3 <= (tmp_256_reg_9371 & ap_const_lv3_0);
        tmp_489_cast_fu_6220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_421_fu_6215_p2),15));

    tmp_489_fu_5181_p2 <= std_logic_vector(unsigned(p_shl47_cast_fu_5166_p1) - unsigned(p_shl48_cast_fu_5177_p1));
    tmp_490_fu_5191_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_567_cast_fu_5187_p1));
    tmp_491_fu_5221_p3 <= (tmp_259_reg_9377 & ap_const_lv5_0);
        tmp_492_cast1_fu_6247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_423_fu_6242_p2),15));

        tmp_492_cast_fu_6829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_374_fu_6824_p2),9));

    tmp_492_fu_5232_p3 <= (tmp_259_reg_9377 & ap_const_lv3_0);
    tmp_493_fu_5243_p2 <= std_logic_vector(unsigned(p_shl45_cast_fu_5228_p1) - unsigned(p_shl46_cast_fu_5239_p1));
    tmp_494_fu_5253_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_571_cast_fu_5249_p1));
        tmp_495_cast1_fu_6274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_425_fu_6269_p2),15));

        tmp_495_cast_fu_6934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_376_reg_9905),9));

    tmp_495_fu_5263_p3 <= (tmp_262_reg_9393 & ap_const_lv5_0);
        tmp_496_fu_5270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_495_fu_5263_p3),16));

    tmp_497_fu_5278_p3 <= (tmp_262_reg_9393 & ap_const_lv3_0);
        tmp_498_cast_fu_6301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_427_fu_6296_p2),15));

        tmp_498_fu_5285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_497_fu_5278_p3),14));

    tmp_499_fu_5293_p2 <= std_logic_vector(unsigned(p_shl43_cast_fu_5274_p1) - unsigned(p_shl44_cast_fu_5289_p1));
    tmp_500_fu_5303_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_577_cast_fu_5299_p1));
    tmp_501_fu_5313_p3 <= (tmp_265_reg_9399 & ap_const_lv5_0);
        tmp_502_fu_5320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_501_fu_5313_p3),16));

    tmp_503_fu_5328_p3 <= (tmp_265_reg_9399 & ap_const_lv3_0);
        tmp_504_fu_5335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_503_fu_5328_p3),14));

        tmp_505_cast1_fu_7265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_382_reg_10009),11));

        tmp_505_cast2_fu_4417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_431_fu_4411_p2),16));

        tmp_505_cast_cast_fu_7271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_382_reg_10009),9));

        tmp_505_cast_fu_7268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_382_reg_10009),10));

    tmp_505_fu_5343_p2 <= std_logic_vector(unsigned(p_shl41_cast_fu_5324_p1) - unsigned(p_shl42_cast_fu_5339_p1));
        tmp_506_cast_fu_4426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_432_fu_4421_p2),64));

    tmp_506_fu_5353_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_583_cast_fu_5349_p1));
        tmp_507_fu_4508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_437_fu_4431_p3),16));

        tmp_508_fu_4516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_438_fu_4442_p3),14));

        tmp_509_cast_fu_7316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_385_fu_7312_p2),32));

    tmp_509_fu_4524_p2 <= std_logic_vector(unsigned(p_shl39_cast_fu_4512_p1) - unsigned(p_shl40_cast_fu_4520_p1));
    tmp_510_fu_5361_p2 <= std_logic_vector(unsigned(tmp_186_cast1_reg_9090) + unsigned(tmp_589_cast_fu_5358_p1));
    tmp_511_fu_4966_p3 <= (tmp_268_reg_9271 & ap_const_lv5_0);
    tmp_512_fu_4977_p3 <= (tmp_268_reg_9271 & ap_const_lv3_0);
    tmp_513_fu_4988_p2 <= std_logic_vector(unsigned(p_shl37_cast_fu_4973_p1) - unsigned(p_shl38_cast_fu_4984_p1));
        tmp_514_cast_fu_4530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_436_reg_9165),64));

    tmp_514_fu_4998_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_593_cast_fu_4994_p1));
        tmp_515_cast_fu_7585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_391_reg_10039),10));

    tmp_515_fu_6339_p2 <= std_logic_vector(unsigned(tmp_420_reg_9706) + unsigned(tmp_309_cast_fu_6335_p1));
    tmp_516_fu_6349_p2 <= std_logic_vector(unsigned(tmp_422_reg_9711) + unsigned(tmp_309_cast_fu_6335_p1));
        tmp_517_cast_fu_4459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_439_fu_4453_p2),16));

    tmp_517_fu_6359_p2 <= std_logic_vector(unsigned(tmp_424_reg_9716) + unsigned(tmp_309_cast_reg_9739));
        tmp_518_cast_fu_4468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_440_fu_4463_p2),64));

    tmp_518_fu_6368_p2 <= std_logic_vector(unsigned(tmp_426_reg_9721) + unsigned(tmp_309_cast_reg_9739));
    tmp_519_fu_6377_p2 <= std_logic_vector(unsigned(tmp_428_reg_9726) + unsigned(tmp_309_cast_reg_9739));
    tmp_520_fu_5506_p3 <= (tmp_311_reg_9460 & ap_const_lv5_0);
        tmp_521_cast_fu_4563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_443_fu_4557_p2),17));

    tmp_521_fu_5517_p3 <= (tmp_311_reg_9460 & ap_const_lv3_0);
        tmp_522_cast_fu_4572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_444_fu_4567_p2),64));

    tmp_522_fu_5528_p2 <= std_logic_vector(unsigned(p_shl95_cast_fu_5513_p1) - unsigned(p_shl96_cast_fu_5524_p1));
    tmp_523_fu_5538_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_606_cast_fu_5534_p1));
    tmp_524_fu_5464_p3 <= (tmp_313_fu_5459_p2 & ap_const_lv7_0);
        tmp_525_cast_fu_4605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_447_fu_4599_p2),17));

    tmp_525_fu_5472_p3 <= (tmp_313_fu_5459_p2 & ap_const_lv5_0);
        tmp_526_cast_fu_4614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_448_fu_4609_p2),64));

    tmp_526_fu_5484_p2 <= std_logic_vector(unsigned(tmp_524_fu_5464_p3) - unsigned(p_shl94_cast_fu_5480_p1));
    tmp_527_fu_5490_p2 <= std_logic_vector(signed(tmp_220_cast_reg_9176) + signed(tmp_526_fu_5484_p2));
    tmp_528_fu_5548_p3 <= (tmp_314_reg_9471 & ap_const_lv5_0);
        tmp_529_cast_fu_4679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_451_fu_4673_p2),17));

    tmp_529_fu_5559_p3 <= (tmp_314_reg_9471 & ap_const_lv3_0);
        tmp_530_cast_fu_4688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_452_fu_4683_p2),64));

    tmp_530_fu_5570_p2 <= std_logic_vector(unsigned(p_shl91_cast_fu_5555_p1) - unsigned(p_shl92_cast_fu_5566_p1));
    tmp_531_fu_5580_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_617_cast_fu_5576_p1));
    tmp_532_fu_5621_p3 <= (tmp_315_reg_9487 & ap_const_lv5_0);
        tmp_533_cast_fu_4721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_455_fu_4715_p2),17));

    tmp_533_fu_5632_p3 <= (tmp_315_reg_9487 & ap_const_lv3_0);
        tmp_534_cast_fu_4730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_456_fu_4725_p2),64));

    tmp_534_fu_5643_p2 <= std_logic_vector(unsigned(p_shl89_cast_fu_5628_p1) - unsigned(p_shl90_cast_fu_5639_p1));
    tmp_535_fu_5653_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_621_cast_fu_5649_p1));
    tmp_536_fu_5663_p3 <= (tmp_316_reg_9493 & ap_const_lv5_0);
        tmp_537_cast_fu_4775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_459_fu_4769_p2),17));

    tmp_537_fu_5674_p3 <= (tmp_316_reg_9493 & ap_const_lv3_0);
        tmp_538_cast_fu_4832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_460_reg_9287),64));

    tmp_538_fu_5685_p2 <= std_logic_vector(unsigned(p_shl87_cast_fu_5670_p1) - unsigned(p_shl88_cast_fu_5681_p1));
    tmp_539_fu_5695_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_625_cast_fu_5691_p1));
    tmp_540_fu_5727_p3 <= (tmp_317_reg_9527 & ap_const_lv5_0);
        tmp_541_fu_5734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_540_fu_5727_p3),17));

    tmp_542_fu_5742_p3 <= (tmp_317_reg_9527 & ap_const_lv3_0);
        tmp_543_cast_fu_4820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_465_fu_4814_p2),17));

        tmp_543_fu_5749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_542_fu_5742_p3),15));

        tmp_544_cast_fu_4836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_466_reg_9292),64));

    tmp_544_fu_5757_p2 <= std_logic_vector(unsigned(p_shl85_cast_fu_5738_p1) - unsigned(p_shl86_cast_fu_5753_p1));
    tmp_545_fu_5767_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_631_cast_fu_5763_p1));
    tmp_546_fu_5777_p3 <= (tmp_318_reg_9533 & ap_const_lv5_0);
        tmp_547_cast_fu_4890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_469_fu_4884_p2),18));

    tmp_547_fu_5788_p3 <= (tmp_318_reg_9533 & ap_const_lv3_0);
        tmp_548_cast_fu_4899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_470_fu_4894_p2),64));

    tmp_548_fu_5799_p2 <= std_logic_vector(unsigned(p_shl83_cast_fu_5784_p1) - unsigned(p_shl84_cast_fu_5795_p1));
    tmp_549_fu_5805_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_548_fu_5799_p2));
    tmp_550_fu_5845_p3 <= (tmp_319_reg_9549 & ap_const_lv5_0);
        tmp_551_cast_fu_4932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_473_fu_4926_p2),18));

    tmp_551_fu_5856_p3 <= (tmp_319_reg_9549 & ap_const_lv3_0);
        tmp_552_cast_fu_4941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_474_fu_4936_p2),64));

    tmp_552_fu_5867_p2 <= std_logic_vector(unsigned(p_shl81_cast_fu_5852_p1) - unsigned(p_shl82_cast_fu_5863_p1));
    tmp_553_fu_5873_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_552_fu_5867_p2));
    tmp_554_fu_5883_p3 <= (tmp_320_reg_9555 & ap_const_lv5_0);
        tmp_555_cast_fu_5031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_477_fu_5025_p2),18));

    tmp_555_fu_5894_p3 <= (tmp_320_reg_9555 & ap_const_lv3_0);
        tmp_556_cast_fu_5040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_478_fu_5035_p2),64));

    tmp_556_fu_5905_p2 <= std_logic_vector(unsigned(p_shl79_cast_fu_5890_p1) - unsigned(p_shl80_cast_fu_5901_p1));
    tmp_557_fu_5911_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_556_fu_5905_p2));
    tmp_558_fu_5921_p3 <= (tmp_321_reg_9561 & ap_const_lv5_0);
        tmp_559_cast_fu_5073_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_481_fu_5067_p2),18));

    tmp_559_fu_5932_p3 <= (tmp_321_reg_9561 & ap_const_lv3_0);
        tmp_560_cast_fu_5082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_482_fu_5077_p2),64));

    tmp_560_fu_5943_p2 <= std_logic_vector(unsigned(p_shl77_cast_fu_5928_p1) - unsigned(p_shl78_cast_fu_5939_p1));
    tmp_561_fu_5949_p2 <= std_logic_vector(unsigned(tmp_186_cast4_reg_9120) + unsigned(tmp_560_fu_5943_p2));
    tmp_562_fu_6463_p3 <= (tmp_354_fu_6454_p2 & ap_const_lv2_0);
        tmp_563_cast_fu_5145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_485_fu_5139_p2),18));

    tmp_563_fu_6475_p2 <= std_logic_vector(unsigned(p_shl128_cast_fu_6471_p1) - unsigned(tmp_355_cast_fu_6459_p1));
        tmp_564_cast_fu_5154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_486_fu_5149_p2),64));

    tmp_564_fu_6485_p2 <= std_logic_vector(unsigned(tmp_218_cast1_reg_9665) + unsigned(tmp_654_cast_fu_6481_p1));
    tmp_565_fu_6595_p2 <= std_logic_vector(signed(p_shl127_cast_fu_6591_p1) - signed(tmp_655_cast_fu_6581_p1));
    tmp_566_fu_6601_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_565_fu_6595_p2));
        tmp_567_cast_fu_5187_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_489_fu_5181_p2),18));

    tmp_567_fu_6497_p3 <= (tmp_356_reg_9821 & ap_const_lv2_0);
        tmp_568_cast_fu_5196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_490_fu_5191_p2),64));

        tmp_568_fu_6504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_567_fu_6497_p3),34));

    tmp_569_fu_6512_p2 <= std_logic_vector(unsigned(p_shl126_cast_fu_6508_p1) - unsigned(tmp_357_cast_fu_6493_p1));
    tmp_570_fu_6522_p2 <= std_logic_vector(unsigned(tmp_218_cast4_reg_9684) + unsigned(tmp_661_cast_fu_6518_p1));
        tmp_571_cast_fu_5249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_493_fu_5243_p2),18));

    tmp_571_fu_6618_p2 <= std_logic_vector(unsigned(p_shl125_cast_fu_6611_p3) - unsigned(tmp_135_reg_9839));
        tmp_572_cast_fu_5258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_494_fu_5253_p2),64));

    tmp_572_fu_6623_p2 <= std_logic_vector(unsigned(tmp_309_cast1_reg_9795) + unsigned(tmp_571_fu_6618_p2));
    tmp_573_fu_6550_p3 <= (tmp_358_fu_6541_p2 & ap_const_lv2_0);
    tmp_574_fu_6562_p2 <= std_logic_vector(unsigned(p_shl124_cast_fu_6558_p1) - unsigned(tmp_359_cast_fu_6546_p1));
    tmp_575_fu_6568_p2 <= std_logic_vector(unsigned(tmp_218_cast6_reg_9701) + unsigned(tmp_574_fu_6562_p2));
    tmp_576_fu_6642_p2 <= std_logic_vector(signed(p_shl123_cast_fu_6638_p1) - signed(tmp_668_cast_fu_6628_p1));
        tmp_577_cast_fu_5299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_499_fu_5293_p2),18));

    tmp_577_fu_6648_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_576_fu_6642_p2));
        tmp_578_cast_fu_5308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_500_fu_5303_p2),64));

    tmp_578_fu_6674_p3 <= (tmp_361_fu_6665_p2 & ap_const_lv2_0);
    tmp_579_fu_6686_p2 <= std_logic_vector(unsigned(p_shl122_cast_fu_6682_p1) - unsigned(tmp_363_cast_fu_6670_p1));
    tmp_580_fu_6696_p2 <= std_logic_vector(unsigned(tmp_218_cast5_reg_9690) + unsigned(tmp_673_cast_fu_6692_p1));
    tmp_581_fu_6892_p2 <= std_logic_vector(unsigned(p_shl121_cast_fu_6885_p3) - unsigned(tmp_674_cast_fu_6882_p1));
    tmp_582_fu_6898_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_581_fu_6892_p2));
        tmp_583_cast_fu_5349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_505_fu_5343_p2),18));

    tmp_583_fu_6716_p3 <= (tmp_365_fu_6707_p2 & ap_const_lv2_0);
        tmp_584_cast_fu_5366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_506_reg_9415),64));

    tmp_584_fu_6728_p2 <= std_logic_vector(unsigned(p_shl120_cast_fu_6724_p1) - unsigned(tmp_367_cast_fu_6712_p1));
    tmp_585_fu_6738_p2 <= std_logic_vector(unsigned(tmp_218_cast5_reg_9690) + unsigned(tmp_679_cast_fu_6734_p1));
    tmp_586_fu_6918_p2 <= std_logic_vector(unsigned(p_shl119_cast_fu_6911_p3) - unsigned(tmp_680_cast_fu_6908_p1));
    tmp_587_fu_6924_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_586_fu_6918_p2));
    tmp_588_fu_6758_p3 <= (tmp_369_fu_6749_p2 & ap_const_lv2_0);
        tmp_589_cast_fu_5358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_509_reg_9223),18));

    tmp_589_fu_6770_p2 <= std_logic_vector(unsigned(p_shl118_cast_fu_6766_p1) - unsigned(tmp_371_cast_fu_6754_p1));
        tmp_590_cast_fu_5370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_510_reg_9420),64));

    tmp_590_fu_6776_p2 <= std_logic_vector(unsigned(tmp_218_cast1_reg_9665) + unsigned(tmp_589_fu_6770_p2));
    tmp_591_fu_7034_p2 <= std_logic_vector(signed(p_shl117_cast_fu_7030_p1) - signed(tmp_686_cast_fu_7020_p1));
    tmp_592_fu_7040_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_591_fu_7034_p2));
        tmp_593_cast_fu_4994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_513_fu_4988_p2),19));

    tmp_593_fu_6796_p3 <= (tmp_372_fu_6787_p2 & ap_const_lv2_0);
        tmp_594_cast_fu_5374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_514_reg_9350),64));

    tmp_594_fu_6808_p2 <= std_logic_vector(unsigned(p_shl116_cast_fu_6804_p1) - unsigned(tmp_373_cast_fu_6792_p1));
    tmp_595_fu_6814_p2 <= std_logic_vector(unsigned(tmp_218_cast1_reg_9665) + unsigned(tmp_594_fu_6808_p2));
    tmp_596_fu_7064_p2 <= std_logic_vector(signed(p_shl115_cast_fu_7060_p1) - signed(tmp_692_cast_fu_7050_p1));
    tmp_597_cast_fu_6344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_515_fu_6339_p2),64));
    tmp_597_fu_7070_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_596_fu_7064_p2));
    tmp_598_cast_fu_6354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_516_fu_6349_p2),64));
    tmp_598_fu_6837_p3 <= (tmp_374_fu_6824_p2 & ap_const_lv2_0);
    tmp_599_cast_fu_6363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_517_fu_6359_p2),64));
        tmp_599_fu_6845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_598_fu_6837_p3),11));

    tmp_600_cast_fu_6372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_518_fu_6368_p2),64));
    tmp_600_fu_6853_p2 <= std_logic_vector(unsigned(p_shl114_cast_fu_6849_p1) - unsigned(tmp_375_cast_fu_6833_p1));
    tmp_601_cast_fu_6381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_519_fu_6377_p2),64));
    tmp_601_fu_6859_p2 <= std_logic_vector(unsigned(tmp_218_cast1_reg_9665) + unsigned(tmp_600_fu_6853_p2));
    tmp_602_fu_7094_p2 <= std_logic_vector(signed(p_shl113_cast_fu_7090_p1) - signed(tmp_699_cast_fu_7080_p1));
    tmp_603_fu_7100_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_602_fu_7094_p2));
    tmp_604_fu_6941_p3 <= (tmp_376_reg_9905 & ap_const_lv2_0);
        tmp_605_fu_6948_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_604_fu_6941_p3),11));

        tmp_606_cast_fu_5534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_522_fu_5528_p2),19));

    tmp_606_fu_6956_p2 <= std_logic_vector(unsigned(p_shl112_cast_fu_6952_p1) - unsigned(tmp_377_cast_fu_6937_p1));
        tmp_607_cast_fu_5543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_523_fu_5538_p2),64));

    tmp_607_fu_6966_p2 <= std_logic_vector(unsigned(tmp_218_cast5_reg_9690) + unsigned(tmp_705_cast_fu_6962_p1));
    tmp_608_fu_7115_p2 <= std_logic_vector(unsigned(p_shl111_cast_fu_7108_p3) - unsigned(tmp_706_cast_fu_7105_p1));
    tmp_609_fu_7121_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_608_fu_7115_p2));
    tmp_610_fu_7129_p3 <= (tmp_378_reg_9939 & ap_const_lv2_0);
    tmp_611_fu_7140_p2 <= std_logic_vector(unsigned(p_shl110_cast_fu_7136_p1) - unsigned(tmp_379_cast_fu_7126_p1));
    tmp_612_fu_7150_p2 <= std_logic_vector(unsigned(tmp_218_cast3_reg_9678) + unsigned(tmp_711_cast_fu_7146_p1));
    tmp_613_fu_7171_p2 <= std_logic_vector(unsigned(p_shl109_cast_fu_7163_p3) - unsigned(tmp_712_cast_fu_7155_p1));
        tmp_614_cast_fu_5616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_527_reg_9466),64));

    tmp_614_fu_7177_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_613_fu_7171_p2));
    tmp_615_fu_6997_p3 <= (tmp_380_fu_6988_p2 & ap_const_lv2_0);
    tmp_616_fu_7009_p2 <= std_logic_vector(unsigned(p_shl108_cast_fu_7005_p1) - unsigned(tmp_381_cast_fu_6993_p1));
        tmp_617_cast_fu_5576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_530_fu_5570_p2),19));

    tmp_617_fu_7015_p2 <= std_logic_vector(unsigned(tmp_218_cast5_reg_9690) + unsigned(tmp_616_fu_7009_p2));
        tmp_618_cast_fu_5585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_531_fu_5580_p2),64));

    tmp_618_fu_7192_p2 <= std_logic_vector(unsigned(p_shl107_cast_fu_7185_p3) - unsigned(tmp_718_cast_fu_7182_p1));
    tmp_619_fu_7198_p2 <= std_logic_vector(unsigned(tmp_309_cast_reg_9739) + unsigned(tmp_618_fu_7192_p2));
    tmp_620_fu_8831_p3 <= (co_i_reg_3283 & ap_const_lv9_0);
        tmp_621_cast_fu_5649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_534_fu_5643_p2),19));

    tmp_621_fu_7289_p3 <= (tmp_383_fu_7280_p2 & ap_const_lv2_0);
        tmp_622_cast_fu_5658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_535_fu_5653_p2),64));

    tmp_622_fu_7301_p2 <= std_logic_vector(unsigned(p_shl140_cast_fu_7297_p1) - unsigned(tmp_384_cast_fu_7285_p1));
    tmp_623_fu_7307_p2 <= std_logic_vector(unsigned(tmp_622_fu_7301_p2) + unsigned(tmp_218_cast5_reg_9690));
    tmp_624_fu_7426_p2 <= std_logic_vector(unsigned(p_shl139_cast_fu_7419_p3) - unsigned(tmp_728_cast_fu_7416_p1));
        tmp_625_cast_fu_5691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_538_fu_5685_p2),19));

    tmp_625_fu_7432_p2 <= std_logic_vector(unsigned(tmp_624_fu_7426_p2) + unsigned(tmp_309_cast_reg_9739));
        tmp_626_cast_fu_5700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_539_fu_5695_p2),64));

    tmp_626_fu_7324_p3 <= (tmp_385_fu_7312_p2 & ap_const_lv2_0);
        tmp_627_fu_7332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_626_fu_7324_p3),34));

    tmp_628_fu_7340_p2 <= std_logic_vector(unsigned(p_shl138_cast_fu_7336_p1) - unsigned(tmp_386_cast_fu_7320_p1));
    tmp_629_fu_7350_p2 <= std_logic_vector(signed(tmp_734_cast_fu_7346_p1) + signed(tmp_218_cast4_reg_9684));
    tmp_630_fu_7449_p2 <= std_logic_vector(unsigned(p_shl137_cast_fu_7442_p3) - unsigned(tmp_143_reg_10029));
        tmp_631_cast_fu_5763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_544_fu_5757_p2),19));

    tmp_631_fu_7454_p2 <= std_logic_vector(unsigned(tmp_630_fu_7449_p2) + unsigned(tmp_309_cast2_reg_9800));
        tmp_632_cast_fu_5772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_545_fu_5767_p2),64));

    tmp_632_fu_7473_p3 <= (tmp_387_fu_7464_p2 & ap_const_lv2_0);
    tmp_633_fu_7485_p2 <= std_logic_vector(unsigned(p_shl136_cast_fu_7481_p1) - unsigned(tmp_388_cast_fu_7469_p1));
    tmp_634_fu_7491_p2 <= std_logic_vector(unsigned(tmp_633_fu_7485_p2) + unsigned(tmp_218_cast5_reg_9690));
    tmp_635_fu_7543_p2 <= std_logic_vector(unsigned(p_shl135_cast_fu_7536_p3) - unsigned(tmp_741_cast_fu_7533_p1));
        tmp_636_cast_fu_5810_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_549_fu_5805_p2),64));

    tmp_636_fu_7549_p2 <= std_logic_vector(unsigned(tmp_635_fu_7543_p2) + unsigned(tmp_309_cast_reg_9739));
    tmp_637_fu_7510_p3 <= (tmp_389_fu_7501_p2 & ap_const_lv2_0);
    tmp_638_fu_7522_p2 <= std_logic_vector(unsigned(p_shl134_cast_fu_7518_p1) - unsigned(tmp_390_cast_fu_7506_p1));
    tmp_639_fu_7528_p2 <= std_logic_vector(unsigned(tmp_638_fu_7522_p2) + unsigned(tmp_218_cast5_reg_9690));
        tmp_640_cast_fu_5878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_553_fu_5873_p2),64));

    tmp_640_fu_7569_p2 <= std_logic_vector(unsigned(p_shl133_cast_fu_7562_p3) - unsigned(tmp_747_cast_fu_7559_p1));
    tmp_641_fu_7575_p2 <= std_logic_vector(unsigned(tmp_640_fu_7569_p2) + unsigned(tmp_309_cast_reg_9739));
    tmp_642_fu_7592_p3 <= (tmp_391_reg_10039 & ap_const_lv2_0);
        tmp_643_fu_7599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_642_fu_7592_p3),12));

        tmp_644_cast_fu_5916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_557_fu_5911_p2),64));

    tmp_644_fu_7607_p2 <= std_logic_vector(unsigned(p_shl132_cast_fu_7603_p1) - unsigned(tmp_392_cast_fu_7588_p1));
    tmp_645_fu_7617_p2 <= std_logic_vector(signed(tmp_753_cast_fu_7613_p1) + signed(tmp_218_cast3_reg_9678));
    tmp_646_fu_7638_p2 <= std_logic_vector(unsigned(p_shl131_cast_fu_7630_p3) - unsigned(tmp_754_cast_fu_7622_p1));
    tmp_647_fu_7644_p2 <= std_logic_vector(unsigned(tmp_646_fu_7638_p2) + unsigned(tmp_309_cast_reg_9739));
        tmp_648_cast_fu_5954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_561_reg_9577),64));

    tmp_648_fu_7389_p3 <= (tmp_393_fu_7380_p2 & ap_const_lv2_0);
    tmp_649_fu_7401_p2 <= std_logic_vector(unsigned(p_shl130_cast_fu_7397_p1) - unsigned(tmp_394_cast_fu_7385_p1));
    tmp_650_fu_7411_p2 <= std_logic_vector(signed(tmp_759_cast_fu_7407_p1) + signed(tmp_218_cast2_reg_9673));
    tmp_651_fu_7654_p2 <= std_logic_vector(unsigned(tmp_146_fu_7649_p2) - unsigned(tmp_650_reg_10045));
    tmp_652_fu_7659_p2 <= std_logic_vector(unsigned(tmp_651_fu_7654_p2) + unsigned(tmp_309_cast_reg_9739));
    tmp_653_fu_8864_p2 <= std_logic_vector(unsigned(tmp_723_cast_reg_10702) + unsigned(tmp_i_cast_fu_8860_p1));
        tmp_654_cast_fu_6481_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_563_fu_6475_p2),12));

        tmp_655_cast_fu_6581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_564_reg_9833),15));

    tmp_658_cast_fu_6606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_566_fu_6601_p2),64));
        tmp_661_cast_fu_6518_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_569_fu_6512_p2),36));

    tmp_665_cast_fu_6877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_572_reg_9865),64));
        tmp_668_cast_fu_6628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_575_reg_9849),15));

    tmp_671_cast_fu_6653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_577_fu_6648_p2),64));
        tmp_673_cast_fu_6692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_579_fu_6686_p2),13));

        tmp_674_cast_fu_6882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_580_reg_9875),15));

    tmp_677_cast_fu_6903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_582_fu_6898_p2),64));
        tmp_679_cast_fu_6734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_584_fu_6728_p2),13));

        tmp_680_cast_fu_6908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_585_reg_9881),15));

    tmp_683_cast_fu_6929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_587_fu_6924_p2),64));
        tmp_686_cast_fu_7020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_590_reg_9887),15));

    tmp_689_cast_fu_7045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_592_fu_7040_p2),64));
        tmp_692_cast_fu_7050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_595_reg_9893),15));

    tmp_695_cast_fu_7075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_597_fu_7070_p2),64));
        tmp_699_cast_fu_7080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_601_reg_9899),15));

    tmp_702_cast_fu_7203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_603_reg_9961),64));
        tmp_705_cast_fu_6962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_606_fu_6956_p2),13));

        tmp_706_cast_fu_7105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_607_reg_9933),15));

    tmp_709_cast_fu_7207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_609_reg_9966),64));
        tmp_711_cast_fu_7146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_611_fu_7140_p2),14));

        tmp_712_cast_fu_7155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_612_fu_7150_p2),15));

    tmp_715_cast_fu_7211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_614_reg_9971),64));
        tmp_718_cast_fu_7182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_617_reg_9945),15));

    tmp_721_cast_fu_7215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_619_reg_9976),64));
    tmp_723_cast_fu_8839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_620_fu_8831_p3),14));
        tmp_728_cast_fu_7416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_623_reg_10023),15));

    tmp_731_cast_fu_7437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_625_fu_7432_p2),64));
        tmp_734_cast_fu_7346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_628_fu_7340_p2),36));

    tmp_738_cast_fu_7664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_631_reg_10056),64));
        tmp_741_cast_fu_7533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_634_reg_10061),15));

    tmp_744_cast_fu_7554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_636_fu_7549_p2),64));
        tmp_747_cast_fu_7559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_639_reg_10067),15));

    tmp_750_cast_fu_7580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_641_fu_7575_p2),64));
        tmp_753_cast_fu_7613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_644_fu_7607_p2),14));

        tmp_754_cast_fu_7622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_645_fu_7617_p2),15));

    tmp_757_cast_fu_7670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_647_reg_10088),64));
        tmp_759_cast_fu_7407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_649_fu_7401_p2),15));

    tmp_763_cast_fu_7674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_652_reg_10093),64));
    tmp_764_cast_fu_8869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_653_fu_8864_p2),64));
    tmp_fu_3634_p3 <= (co_reg_3124 & ap_const_lv5_0);
    tmp_i_419_fu_8855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_i_reg_3306),64));
    tmp_i_cast_fu_8860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_i_reg_3306),14));
    tmp_i_fu_8827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_i_reg_3283),64));
    tmp_s_fu_3668_p2 <= std_logic_vector(unsigned(ap_const_lv6_18) + unsigned(co_cast137_cast_fu_3618_p1));
    w_22_fu_6150_p2 <= std_logic_vector(unsigned(w_reg_3180) + unsigned(ap_const_lv2_1));
end behav;
