// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ShuffleUnit1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv1_weight_address0,
        conv1_weight_ce0,
        conv1_weight_q0,
        conv1_bias_address0,
        conv1_bias_ce0,
        conv1_bias_q0,
        conv2_weight_address0,
        conv2_weight_ce0,
        conv2_weight_q0,
        conv2_bias_address0,
        conv2_bias_ce0,
        conv2_bias_q0,
        conv3_weight_address0,
        conv3_weight_ce0,
        conv3_weight_q0,
        conv3_bias_address0,
        conv3_bias_ce0,
        conv3_bias_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [12:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [11:0] conv1_weight_address0;
output   conv1_weight_ce0;
input  [31:0] conv1_weight_q0;
output  [5:0] conv1_bias_address0;
output   conv1_bias_ce0;
input  [31:0] conv1_bias_q0;
output  [8:0] conv2_weight_address0;
output   conv2_weight_ce0;
input  [31:0] conv2_weight_q0;
output  [5:0] conv2_bias_address0;
output   conv2_bias_ce0;
input  [31:0] conv2_bias_q0;
output  [11:0] conv3_weight_address0;
output   conv3_weight_ce0;
input  [31:0] conv3_weight_q0;
output  [5:0] conv3_bias_address0;
output   conv3_bias_ce0;
input  [31:0] conv3_bias_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg input_r_ce1;
reg conv1_weight_ce0;
reg conv1_bias_ce0;
reg conv3_weight_ce0;
reg conv3_bias_ce0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] indvarinc7_fu_435_p2;
reg   [5:0] indvarinc7_reg_822;
wire    ap_CS_fsm_state2;
wire   [2:0] indvarinc11_fu_441_p2;
reg   [2:0] indvarinc11_reg_827;
wire    ap_CS_fsm_state3;
wire   [2:0] indvarinc_fu_447_p2;
wire    ap_CS_fsm_state4;
wire   [5:0] indvarinc15_fu_486_p2;
reg   [5:0] indvarinc15_reg_846;
wire    ap_CS_fsm_state5;
wire   [2:0] indvarinc16_fu_492_p2;
reg   [2:0] indvarinc16_reg_851;
wire    ap_CS_fsm_state6;
wire   [2:0] indvarinc17_fu_498_p2;
wire    ap_CS_fsm_state7;
wire   [5:0] indvarinc18_fu_537_p2;
reg   [5:0] indvarinc18_reg_870;
wire    ap_CS_fsm_state8;
wire   [2:0] indvarinc19_fu_543_p2;
reg   [2:0] indvarinc19_reg_875;
wire    ap_CS_fsm_state9;
wire   [2:0] indvarinc20_fu_549_p2;
wire    ap_CS_fsm_state10;
wire   [5:0] indvarinc21_fu_588_p2;
reg   [5:0] indvarinc21_reg_894;
wire    ap_CS_fsm_state11;
wire   [2:0] indvarinc22_fu_594_p2;
reg   [2:0] indvarinc22_reg_899;
wire    ap_CS_fsm_state12;
wire   [2:0] indvarinc23_fu_600_p2;
wire    ap_CS_fsm_state13;
wire   [5:0] indvarinc24_fu_639_p2;
reg   [5:0] indvarinc24_reg_918;
wire    ap_CS_fsm_state14;
wire   [2:0] indvarinc25_fu_645_p2;
reg   [2:0] indvarinc25_reg_923;
wire    ap_CS_fsm_state15;
wire   [2:0] indvarinc26_fu_651_p2;
wire    ap_CS_fsm_state16;
wire   [5:0] co_20_fu_700_p2;
reg   [5:0] co_20_reg_945;
wire    ap_CS_fsm_state17;
wire   [10:0] tmp_328_cast_fu_720_p1;
reg   [10:0] tmp_328_cast_reg_950;
wire   [0:0] exitcond2_fu_694_p2;
wire   [9:0] tmp_330_cast_fu_732_p1;
reg   [9:0] tmp_330_cast_reg_955;
wire   [3:0] h_20_fu_742_p2;
reg   [3:0] h_20_reg_963;
wire    ap_CS_fsm_state18;
wire   [13:0] tmp_333_cast_fu_761_p3;
reg   [13:0] tmp_333_cast_reg_968;
wire   [0:0] exitcond1_fu_736_p2;
wire   [13:0] tmp_336_cast_fu_782_p1;
reg   [13:0] tmp_336_cast_reg_973;
wire   [3:0] w_20_fu_792_p2;
reg   [3:0] w_20_reg_981;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond_fu_786_p2;
wire   [63:0] tmp_338_cast_fu_817_p1;
reg   [63:0] tmp_338_cast_reg_991;
reg   [11:0] left_part_0_address0;
reg    left_part_0_ce0;
reg    left_part_0_we0;
reg   [31:0] left_part_0_d0;
wire   [31:0] left_part_0_q0;
reg   [11:0] right_part_0_address0;
reg    right_part_0_ce0;
reg    right_part_0_we0;
reg   [31:0] right_part_0_d0;
wire   [31:0] right_part_0_q0;
reg   [11:0] conv1_output_0_address0;
reg    conv1_output_0_ce0;
reg    conv1_output_0_we0;
reg   [31:0] conv1_output_0_d0;
wire   [31:0] conv1_output_0_q0;
reg   [11:0] conv2_output_0_address0;
reg    conv2_output_0_ce0;
reg    conv2_output_0_we0;
reg   [31:0] conv2_output_0_d0;
wire   [31:0] conv2_output_0_q0;
reg   [11:0] conv3_output_0_address0;
reg    conv3_output_0_ce0;
reg    conv3_output_0_we0;
reg   [31:0] conv3_output_0_d0;
wire   [31:0] conv3_output_0_q0;
wire    grp_subconv_3x3_8_no_rel_fu_405_ap_start;
wire    grp_subconv_3x3_8_no_rel_fu_405_ap_done;
wire    grp_subconv_3x3_8_no_rel_fu_405_ap_idle;
wire    grp_subconv_3x3_8_no_rel_fu_405_ap_ready;
wire   [11:0] grp_subconv_3x3_8_no_rel_fu_405_input_0_address0;
wire    grp_subconv_3x3_8_no_rel_fu_405_input_0_ce0;
wire   [8:0] grp_subconv_3x3_8_no_rel_fu_405_weight_address0;
wire    grp_subconv_3x3_8_no_rel_fu_405_weight_ce0;
wire   [5:0] grp_subconv_3x3_8_no_rel_fu_405_bias_address0;
wire    grp_subconv_3x3_8_no_rel_fu_405_bias_ce0;
wire   [11:0] grp_subconv_3x3_8_no_rel_fu_405_output_0_address0;
wire    grp_subconv_3x3_8_no_rel_fu_405_output_0_ce0;
wire    grp_subconv_3x3_8_no_rel_fu_405_output_0_we0;
wire   [31:0] grp_subconv_3x3_8_no_rel_fu_405_output_0_d0;
wire    grp_subconv_1x1_89_fu_415_ap_start;
wire    grp_subconv_1x1_89_fu_415_ap_done;
wire    grp_subconv_1x1_89_fu_415_ap_idle;
wire    grp_subconv_1x1_89_fu_415_ap_ready;
wire   [11:0] grp_subconv_1x1_89_fu_415_input_0_address0;
wire    grp_subconv_1x1_89_fu_415_input_0_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_415_input_0_q0;
wire   [11:0] grp_subconv_1x1_89_fu_415_weight_address0;
wire    grp_subconv_1x1_89_fu_415_weight_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_415_weight_q0;
wire   [5:0] grp_subconv_1x1_89_fu_415_bias_address0;
wire    grp_subconv_1x1_89_fu_415_bias_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_415_bias_q0;
wire   [11:0] grp_subconv_1x1_89_fu_415_output_0_address0;
wire    grp_subconv_1x1_89_fu_415_output_0_ce0;
wire    grp_subconv_1x1_89_fu_415_output_0_we0;
wire   [31:0] grp_subconv_1x1_89_fu_415_output_0_d0;
wire    grp_shuffle_4811_fu_427_ap_start;
wire    grp_shuffle_4811_fu_427_ap_done;
wire    grp_shuffle_4811_fu_427_ap_idle;
wire    grp_shuffle_4811_fu_427_ap_ready;
wire   [11:0] grp_shuffle_4811_fu_427_left_0_address0;
wire    grp_shuffle_4811_fu_427_left_0_ce0;
wire   [11:0] grp_shuffle_4811_fu_427_right_0_address0;
wire    grp_shuffle_4811_fu_427_right_0_ce0;
wire   [12:0] grp_shuffle_4811_fu_427_output_r_address0;
wire    grp_shuffle_4811_fu_427_output_r_ce0;
wire    grp_shuffle_4811_fu_427_output_r_we0;
wire   [31:0] grp_shuffle_4811_fu_427_output_r_d0;
reg   [5:0] invdar6_reg_197;
wire   [0:0] tmp_137_fu_480_p2;
wire   [0:0] tmp_s_fu_468_p2;
wire   [0:0] tmp_136_fu_474_p2;
reg   [2:0] invdar10_reg_209;
reg   [2:0] invdar14_reg_221;
reg   [5:0] invdar_reg_232;
wire   [0:0] tmp_140_fu_531_p2;
wire   [0:0] tmp_138_fu_519_p2;
wire   [0:0] tmp_139_fu_525_p2;
reg   [2:0] invdar15_reg_244;
reg   [2:0] invdar16_reg_256;
reg   [5:0] invdar17_reg_267;
wire   [0:0] tmp_143_fu_582_p2;
wire   [0:0] tmp_141_fu_570_p2;
wire   [0:0] tmp_142_fu_576_p2;
reg   [2:0] invdar18_reg_279;
reg   [2:0] invdar19_reg_291;
reg   [5:0] invdar20_reg_302;
wire   [0:0] tmp_146_fu_633_p2;
wire   [0:0] tmp_144_fu_621_p2;
wire   [0:0] tmp_145_fu_627_p2;
reg   [2:0] invdar21_reg_314;
reg   [2:0] invdar22_reg_326;
reg   [5:0] invdar23_reg_337;
wire   [0:0] tmp_149_fu_684_p2;
wire   [0:0] tmp_147_fu_672_p2;
wire   [0:0] tmp_148_fu_678_p2;
reg   [2:0] invdar24_reg_349;
reg   [2:0] invdar25_reg_361;
reg   [5:0] co_reg_372;
reg   [3:0] h_reg_383;
reg   [3:0] w_reg_394;
wire    ap_CS_fsm_state20;
reg    ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_subconv_1x1_89_fu_415_ap_start;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
reg    ap_reg_grp_shuffle_4811_fu_427_ap_start;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_191_fu_463_p1;
wire   [63:0] tmp_192_fu_514_p1;
wire   [63:0] tmp_193_fu_565_p1;
wire   [63:0] tmp_194_fu_616_p1;
wire   [63:0] tmp_195_fu_667_p1;
wire   [63:0] tmp_337_cast_fu_807_p1;
wire   [11:0] tmp_fu_453_p4;
wire   [11:0] tmp_110_fu_504_p4;
wire   [11:0] tmp_111_fu_555_p4;
wire   [11:0] tmp_112_fu_606_p4;
wire   [11:0] tmp_113_fu_657_p4;
wire   [6:0] co_cast_fu_690_p1;
wire   [6:0] tmp_150_fu_706_p2;
wire   [9:0] tmp_196_fu_712_p3;
wire   [8:0] tmp_197_fu_724_p3;
wire   [10:0] tmp_151_cast_fu_752_p1;
wire   [10:0] tmp_198_fu_756_p2;
wire   [9:0] tmp_151_cast1_fu_748_p1;
wire   [9:0] tmp_199_fu_769_p2;
wire   [12:0] tmp_114_fu_774_p3;
wire   [13:0] tmp_152_cast_fu_798_p1;
wire   [13:0] tmp_200_fu_802_p2;
wire   [13:0] tmp_201_fu_812_p2;
reg   [26:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start = 1'b0;
#0 ap_reg_grp_subconv_1x1_89_fu_415_ap_start = 1'b0;
#0 ap_reg_grp_shuffle_4811_fu_427_ap_start = 1'b0;
end

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
left_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(left_part_0_address0),
    .ce0(left_part_0_ce0),
    .we0(left_part_0_we0),
    .d0(left_part_0_d0),
    .q0(left_part_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
right_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(right_part_0_address0),
    .ce0(right_part_0_ce0),
    .we0(right_part_0_we0),
    .d0(right_part_0_d0),
    .q0(right_part_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv1_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_output_0_address0),
    .ce0(conv1_output_0_ce0),
    .we0(conv1_output_0_we0),
    .d0(conv1_output_0_d0),
    .q0(conv1_output_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv2_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_output_0_address0),
    .ce0(conv2_output_0_ce0),
    .we0(conv2_output_0_we0),
    .d0(conv2_output_0_d0),
    .q0(conv2_output_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv3_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv3_output_0_address0),
    .ce0(conv3_output_0_ce0),
    .we0(conv3_output_0_we0),
    .d0(conv3_output_0_d0),
    .q0(conv3_output_0_q0)
);

subconv_3x3_8_no_rel grp_subconv_3x3_8_no_rel_fu_405(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_3x3_8_no_rel_fu_405_ap_start),
    .ap_done(grp_subconv_3x3_8_no_rel_fu_405_ap_done),
    .ap_idle(grp_subconv_3x3_8_no_rel_fu_405_ap_idle),
    .ap_ready(grp_subconv_3x3_8_no_rel_fu_405_ap_ready),
    .input_0_address0(grp_subconv_3x3_8_no_rel_fu_405_input_0_address0),
    .input_0_ce0(grp_subconv_3x3_8_no_rel_fu_405_input_0_ce0),
    .input_0_q0(conv1_output_0_q0),
    .weight_address0(grp_subconv_3x3_8_no_rel_fu_405_weight_address0),
    .weight_ce0(grp_subconv_3x3_8_no_rel_fu_405_weight_ce0),
    .weight_q0(conv2_weight_q0),
    .bias_address0(grp_subconv_3x3_8_no_rel_fu_405_bias_address0),
    .bias_ce0(grp_subconv_3x3_8_no_rel_fu_405_bias_ce0),
    .bias_q0(conv2_bias_q0),
    .output_0_address0(grp_subconv_3x3_8_no_rel_fu_405_output_0_address0),
    .output_0_ce0(grp_subconv_3x3_8_no_rel_fu_405_output_0_ce0),
    .output_0_we0(grp_subconv_3x3_8_no_rel_fu_405_output_0_we0),
    .output_0_d0(grp_subconv_3x3_8_no_rel_fu_405_output_0_d0)
);

subconv_1x1_89 grp_subconv_1x1_89_fu_415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_89_fu_415_ap_start),
    .ap_done(grp_subconv_1x1_89_fu_415_ap_done),
    .ap_idle(grp_subconv_1x1_89_fu_415_ap_idle),
    .ap_ready(grp_subconv_1x1_89_fu_415_ap_ready),
    .input_0_address0(grp_subconv_1x1_89_fu_415_input_0_address0),
    .input_0_ce0(grp_subconv_1x1_89_fu_415_input_0_ce0),
    .input_0_q0(grp_subconv_1x1_89_fu_415_input_0_q0),
    .weight_address0(grp_subconv_1x1_89_fu_415_weight_address0),
    .weight_ce0(grp_subconv_1x1_89_fu_415_weight_ce0),
    .weight_q0(grp_subconv_1x1_89_fu_415_weight_q0),
    .bias_address0(grp_subconv_1x1_89_fu_415_bias_address0),
    .bias_ce0(grp_subconv_1x1_89_fu_415_bias_ce0),
    .bias_q0(grp_subconv_1x1_89_fu_415_bias_q0),
    .output_0_address0(grp_subconv_1x1_89_fu_415_output_0_address0),
    .output_0_ce0(grp_subconv_1x1_89_fu_415_output_0_ce0),
    .output_0_we0(grp_subconv_1x1_89_fu_415_output_0_we0),
    .output_0_d0(grp_subconv_1x1_89_fu_415_output_0_d0)
);

shuffle_4811 grp_shuffle_4811_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shuffle_4811_fu_427_ap_start),
    .ap_done(grp_shuffle_4811_fu_427_ap_done),
    .ap_idle(grp_shuffle_4811_fu_427_ap_idle),
    .ap_ready(grp_shuffle_4811_fu_427_ap_ready),
    .left_0_address0(grp_shuffle_4811_fu_427_left_0_address0),
    .left_0_ce0(grp_shuffle_4811_fu_427_left_0_ce0),
    .left_0_q0(left_part_0_q0),
    .right_0_address0(grp_shuffle_4811_fu_427_right_0_address0),
    .right_0_ce0(grp_shuffle_4811_fu_427_right_0_ce0),
    .right_0_q0(conv3_output_0_q0),
    .output_r_address0(grp_shuffle_4811_fu_427_output_r_address0),
    .output_r_ce0(grp_shuffle_4811_fu_427_output_r_ce0),
    .output_r_we0(grp_shuffle_4811_fu_427_output_r_we0),
    .output_r_d0(grp_shuffle_4811_fu_427_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_shuffle_4811_fu_427_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_reg_grp_shuffle_4811_fu_427_ap_start <= 1'b1;
        end else if ((1'b1 == grp_shuffle_4811_fu_427_ap_ready)) begin
            ap_reg_grp_shuffle_4811_fu_427_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_89_fu_415_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state24))) begin
            ap_reg_grp_subconv_1x1_89_fu_415_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_89_fu_415_ap_ready)) begin
            ap_reg_grp_subconv_1x1_89_fu_415_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_3x3_8_no_rel_fu_405_ap_ready)) begin
            ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_147_fu_672_p2) & (1'd1 == tmp_148_fu_678_p2) & (1'd1 == tmp_149_fu_684_p2))) begin
        co_reg_372 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_736_p2 == 1'd1))) begin
        co_reg_372 <= co_20_reg_945;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_786_p2 == 1'd1))) begin
        h_reg_383 <= h_20_reg_963;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
        h_reg_383 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd0 == tmp_136_fu_474_p2))) begin
        invdar10_reg_209 <= indvarinc11_reg_827;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar10_reg_209 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_s_fu_468_p2))) begin
        invdar14_reg_221 <= indvarinc_fu_447_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar14_reg_221 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_138_fu_519_p2) & (1'd0 == tmp_139_fu_525_p2))) begin
        invdar15_reg_244 <= indvarinc16_reg_851;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar15_reg_244 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_138_fu_519_p2))) begin
        invdar16_reg_256 <= indvarinc17_fu_498_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        invdar16_reg_256 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_138_fu_519_p2) & (1'd1 == tmp_139_fu_525_p2) & (1'd1 == tmp_140_fu_531_p2))) begin
        invdar17_reg_267 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_143_fu_582_p2) & (1'd1 == tmp_141_fu_570_p2) & (1'd1 == tmp_142_fu_576_p2))) begin
        invdar17_reg_267 <= indvarinc18_reg_870;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_141_fu_570_p2) & (1'd0 == tmp_142_fu_576_p2))) begin
        invdar18_reg_279 <= indvarinc19_reg_875;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar18_reg_279 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_141_fu_570_p2))) begin
        invdar19_reg_291 <= indvarinc20_fu_549_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        invdar19_reg_291 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_141_fu_570_p2) & (1'd1 == tmp_142_fu_576_p2) & (1'd1 == tmp_143_fu_582_p2))) begin
        invdar20_reg_302 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_146_fu_633_p2) & (1'd1 == tmp_144_fu_621_p2) & (1'd1 == tmp_145_fu_627_p2))) begin
        invdar20_reg_302 <= indvarinc21_reg_894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_144_fu_621_p2) & (1'd0 == tmp_145_fu_627_p2))) begin
        invdar21_reg_314 <= indvarinc22_reg_899;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        invdar21_reg_314 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_144_fu_621_p2))) begin
        invdar22_reg_326 <= indvarinc23_fu_600_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar22_reg_326 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_144_fu_621_p2) & (1'd1 == tmp_145_fu_627_p2) & (1'd1 == tmp_146_fu_633_p2))) begin
        invdar23_reg_337 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_149_fu_684_p2) & (1'd1 == tmp_147_fu_672_p2) & (1'd1 == tmp_148_fu_678_p2))) begin
        invdar23_reg_337 <= indvarinc24_reg_918;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_147_fu_672_p2) & (1'd0 == tmp_148_fu_678_p2))) begin
        invdar24_reg_349 <= indvarinc25_reg_923;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        invdar24_reg_349 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_147_fu_672_p2))) begin
        invdar25_reg_361 <= indvarinc26_fu_651_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar25_reg_361 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_137_fu_480_p2) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_136_fu_474_p2))) begin
        invdar6_reg_197 <= indvarinc7_reg_822;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar6_reg_197 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_136_fu_474_p2) & (tmp_137_fu_480_p2 == 1'd1))) begin
        invdar_reg_232 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_140_fu_531_p2) & (1'd1 == tmp_138_fu_519_p2) & (1'd1 == tmp_139_fu_525_p2))) begin
        invdar_reg_232 <= indvarinc15_reg_846;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_736_p2))) begin
        w_reg_394 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        w_reg_394 <= w_20_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        co_20_reg_945 <= co_20_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h_20_reg_963 <= h_20_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc11_reg_827 <= indvarinc11_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc15_reg_846 <= indvarinc15_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc16_reg_851 <= indvarinc16_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc18_reg_870 <= indvarinc18_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc19_reg_875 <= indvarinc19_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc21_reg_894 <= indvarinc21_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvarinc22_reg_899 <= indvarinc22_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvarinc24_reg_918 <= indvarinc24_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvarinc25_reg_923 <= indvarinc25_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc7_reg_822 <= indvarinc7_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
        tmp_328_cast_reg_950[9 : 3] <= tmp_328_cast_fu_720_p1[9 : 3];
        tmp_330_cast_reg_955[8 : 3] <= tmp_330_cast_fu_732_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_736_p2))) begin
        tmp_333_cast_reg_968[13 : 3] <= tmp_333_cast_fu_761_p3[13 : 3];
        tmp_336_cast_reg_973[12 : 3] <= tmp_336_cast_fu_782_p1[12 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond_fu_786_p2))) begin
        tmp_338_cast_reg_991[13 : 0] <= tmp_338_cast_fu_817_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_20_reg_981 <= w_20_fu_792_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_4811_fu_427_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_4811_fu_427_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_bias_ce0 = grp_subconv_1x1_89_fu_415_bias_ce0;
    end else begin
        conv1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_address0 = tmp_193_fu_565_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_address0 = grp_subconv_1x1_89_fu_415_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_address0 = grp_subconv_3x3_8_no_rel_fu_405_input_0_address0;
    end else begin
        conv1_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_ce0 = grp_subconv_1x1_89_fu_415_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_ce0 = grp_subconv_3x3_8_no_rel_fu_405_input_0_ce0;
    end else begin
        conv1_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_d0 = grp_subconv_1x1_89_fu_415_output_0_d0;
    end else begin
        conv1_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_we0 = grp_subconv_1x1_89_fu_415_output_0_we0;
    end else begin
        conv1_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_weight_ce0 = grp_subconv_1x1_89_fu_415_weight_ce0;
    end else begin
        conv1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_address0 = tmp_194_fu_616_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_address0 = grp_subconv_1x1_89_fu_415_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_address0 = grp_subconv_3x3_8_no_rel_fu_405_output_0_address0;
    end else begin
        conv2_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_ce0 = grp_subconv_1x1_89_fu_415_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_ce0 = grp_subconv_3x3_8_no_rel_fu_405_output_0_ce0;
    end else begin
        conv2_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_d0 = grp_subconv_3x3_8_no_rel_fu_405_output_0_d0;
    end else begin
        conv2_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_we0 = grp_subconv_3x3_8_no_rel_fu_405_output_0_we0;
    end else begin
        conv2_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_bias_ce0 = grp_subconv_1x1_89_fu_415_bias_ce0;
    end else begin
        conv3_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_address0 = tmp_195_fu_667_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_address0 = grp_shuffle_4811_fu_427_right_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_address0 = grp_subconv_1x1_89_fu_415_output_0_address0;
    end else begin
        conv3_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_ce0 = grp_shuffle_4811_fu_427_right_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_ce0 = grp_subconv_1x1_89_fu_415_output_0_ce0;
    end else begin
        conv3_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_d0 = grp_subconv_1x1_89_fu_415_output_0_d0;
    end else begin
        conv3_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_we0 = grp_subconv_1x1_89_fu_415_output_0_we0;
    end else begin
        conv3_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_weight_ce0 = grp_subconv_1x1_89_fu_415_weight_ce0;
    end else begin
        conv3_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_89_fu_415_bias_q0 = conv3_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_415_bias_q0 = conv1_bias_q0;
    end else begin
        grp_subconv_1x1_89_fu_415_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_89_fu_415_input_0_q0 = conv2_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_415_input_0_q0 = right_part_0_q0;
    end else begin
        grp_subconv_1x1_89_fu_415_input_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_89_fu_415_weight_q0 = conv3_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_415_weight_q0 = conv1_weight_q0;
    end else begin
        grp_subconv_1x1_89_fu_415_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_address0 = tmp_338_cast_reg_991;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_address0 = tmp_191_fu_463_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_address0 = grp_shuffle_4811_fu_427_left_0_address0;
    end else begin
        left_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_ce0 = grp_shuffle_4811_fu_427_left_0_ce0;
    end else begin
        left_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_d0 = input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_d0 = 32'd0;
    end else begin
        left_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_we0 = 1'b1;
    end else begin
        left_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_address0 = tmp_338_cast_reg_991;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_address0 = tmp_192_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_address0 = grp_subconv_1x1_89_fu_415_input_0_address0;
    end else begin
        right_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_ce0 = grp_subconv_1x1_89_fu_415_input_0_ce0;
    end else begin
        right_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_d0 = input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_d0 = 32'd0;
    end else begin
        right_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_we0 = 1'b1;
    end else begin
        right_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_136_fu_474_p2) & (tmp_137_fu_480_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_137_fu_480_p2) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_136_fu_474_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd0 == tmp_136_fu_474_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_138_fu_519_p2) & (1'd1 == tmp_139_fu_525_p2) & (1'd1 == tmp_140_fu_531_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_140_fu_531_p2) & (1'd1 == tmp_138_fu_519_p2) & (1'd1 == tmp_139_fu_525_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_138_fu_519_p2) & (1'd0 == tmp_139_fu_525_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_141_fu_570_p2) & (1'd1 == tmp_142_fu_576_p2) & (1'd1 == tmp_143_fu_582_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_143_fu_582_p2) & (1'd1 == tmp_141_fu_570_p2) & (1'd1 == tmp_142_fu_576_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_141_fu_570_p2) & (1'd0 == tmp_142_fu_576_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_144_fu_621_p2) & (1'd1 == tmp_145_fu_627_p2) & (1'd1 == tmp_146_fu_633_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_146_fu_633_p2) & (1'd1 == tmp_144_fu_621_p2) & (1'd1 == tmp_145_fu_627_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_144_fu_621_p2) & (1'd0 == tmp_145_fu_627_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_147_fu_672_p2) & (1'd1 == tmp_148_fu_678_p2) & (1'd1 == tmp_149_fu_684_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_149_fu_684_p2) & (1'd1 == tmp_147_fu_672_p2) & (1'd1 == tmp_148_fu_678_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_147_fu_672_p2) & (1'd0 == tmp_148_fu_678_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_736_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_subconv_1x1_89_fu_415_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_subconv_3x3_8_no_rel_fu_405_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_subconv_1x1_89_fu_415_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_4811_fu_427_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign co_20_fu_700_p2 = (co_reg_372 + 6'd1);

assign co_cast_fu_690_p1 = co_reg_372;

assign conv1_bias_address0 = grp_subconv_1x1_89_fu_415_bias_address0;

assign conv1_weight_address0 = grp_subconv_1x1_89_fu_415_weight_address0;

assign conv2_bias_address0 = grp_subconv_3x3_8_no_rel_fu_405_bias_address0;

assign conv2_bias_ce0 = grp_subconv_3x3_8_no_rel_fu_405_bias_ce0;

assign conv2_weight_address0 = grp_subconv_3x3_8_no_rel_fu_405_weight_address0;

assign conv2_weight_ce0 = grp_subconv_3x3_8_no_rel_fu_405_weight_ce0;

assign conv3_bias_address0 = grp_subconv_1x1_89_fu_415_bias_address0;

assign conv3_weight_address0 = grp_subconv_1x1_89_fu_415_weight_address0;

assign exitcond1_fu_736_p2 = ((h_reg_383 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond2_fu_694_p2 = ((co_reg_372 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond_fu_786_p2 = ((w_reg_394 == 4'd8) ? 1'b1 : 1'b0);

assign grp_shuffle_4811_fu_427_ap_start = ap_reg_grp_shuffle_4811_fu_427_ap_start;

assign grp_subconv_1x1_89_fu_415_ap_start = ap_reg_grp_subconv_1x1_89_fu_415_ap_start;

assign grp_subconv_3x3_8_no_rel_fu_405_ap_start = ap_reg_grp_subconv_3x3_8_no_rel_fu_405_ap_start;

assign h_20_fu_742_p2 = (h_reg_383 + 4'd1);

assign indvarinc11_fu_441_p2 = (invdar10_reg_209 + 3'd1);

assign indvarinc15_fu_486_p2 = (invdar_reg_232 + 6'd1);

assign indvarinc16_fu_492_p2 = (invdar15_reg_244 + 3'd1);

assign indvarinc17_fu_498_p2 = (invdar16_reg_256 + 3'd1);

assign indvarinc18_fu_537_p2 = (invdar17_reg_267 + 6'd1);

assign indvarinc19_fu_543_p2 = (invdar18_reg_279 + 3'd1);

assign indvarinc20_fu_549_p2 = (invdar19_reg_291 + 3'd1);

assign indvarinc21_fu_588_p2 = (invdar20_reg_302 + 6'd1);

assign indvarinc22_fu_594_p2 = (invdar21_reg_314 + 3'd1);

assign indvarinc23_fu_600_p2 = (invdar22_reg_326 + 3'd1);

assign indvarinc24_fu_639_p2 = (invdar23_reg_337 + 6'd1);

assign indvarinc25_fu_645_p2 = (invdar24_reg_349 + 3'd1);

assign indvarinc26_fu_651_p2 = (invdar25_reg_361 + 3'd1);

assign indvarinc7_fu_435_p2 = (invdar6_reg_197 + 6'd1);

assign indvarinc_fu_447_p2 = (invdar14_reg_221 + 3'd1);

assign input_r_address0 = tmp_337_cast_fu_807_p1;

assign input_r_address1 = tmp_338_cast_fu_817_p1;

assign output_r_address0 = grp_shuffle_4811_fu_427_output_r_address0;

assign output_r_ce0 = grp_shuffle_4811_fu_427_output_r_ce0;

assign output_r_d0 = grp_shuffle_4811_fu_427_output_r_d0;

assign output_r_we0 = grp_shuffle_4811_fu_427_output_r_we0;

assign tmp_110_fu_504_p4 = {{{invdar_reg_232}, {invdar15_reg_244}}, {invdar16_reg_256}};

assign tmp_111_fu_555_p4 = {{{invdar17_reg_267}, {invdar18_reg_279}}, {invdar19_reg_291}};

assign tmp_112_fu_606_p4 = {{{invdar20_reg_302}, {invdar21_reg_314}}, {invdar22_reg_326}};

assign tmp_113_fu_657_p4 = {{{invdar23_reg_337}, {invdar24_reg_349}}, {invdar25_reg_361}};

assign tmp_114_fu_774_p3 = {{tmp_199_fu_769_p2}, {3'd0}};

assign tmp_136_fu_474_p2 = ((invdar10_reg_209 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_137_fu_480_p2 = ((invdar6_reg_197 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_138_fu_519_p2 = ((invdar16_reg_256 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_139_fu_525_p2 = ((invdar15_reg_244 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_140_fu_531_p2 = ((invdar_reg_232 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_141_fu_570_p2 = ((invdar19_reg_291 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_142_fu_576_p2 = ((invdar18_reg_279 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_143_fu_582_p2 = ((invdar17_reg_267 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_144_fu_621_p2 = ((invdar22_reg_326 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_145_fu_627_p2 = ((invdar21_reg_314 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_146_fu_633_p2 = ((invdar20_reg_302 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_147_fu_672_p2 = ((invdar25_reg_361 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_148_fu_678_p2 = ((invdar24_reg_349 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_149_fu_684_p2 = ((invdar23_reg_337 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_150_fu_706_p2 = (co_cast_fu_690_p1 + 7'd48);

assign tmp_151_cast1_fu_748_p1 = h_reg_383;

assign tmp_151_cast_fu_752_p1 = h_reg_383;

assign tmp_152_cast_fu_798_p1 = w_reg_394;

assign tmp_191_fu_463_p1 = tmp_fu_453_p4;

assign tmp_192_fu_514_p1 = tmp_110_fu_504_p4;

assign tmp_193_fu_565_p1 = tmp_111_fu_555_p4;

assign tmp_194_fu_616_p1 = tmp_112_fu_606_p4;

assign tmp_195_fu_667_p1 = tmp_113_fu_657_p4;

assign tmp_196_fu_712_p3 = {{tmp_150_fu_706_p2}, {3'd0}};

assign tmp_197_fu_724_p3 = {{co_reg_372}, {3'd0}};

assign tmp_198_fu_756_p2 = (tmp_328_cast_reg_950 + tmp_151_cast_fu_752_p1);

assign tmp_199_fu_769_p2 = (tmp_330_cast_reg_955 + tmp_151_cast1_fu_748_p1);

assign tmp_200_fu_802_p2 = (tmp_333_cast_reg_968 + tmp_152_cast_fu_798_p1);

assign tmp_201_fu_812_p2 = (tmp_336_cast_reg_973 + tmp_152_cast_fu_798_p1);

assign tmp_328_cast_fu_720_p1 = tmp_196_fu_712_p3;

assign tmp_330_cast_fu_732_p1 = tmp_197_fu_724_p3;

assign tmp_333_cast_fu_761_p3 = {{tmp_198_fu_756_p2}, {3'd0}};

assign tmp_336_cast_fu_782_p1 = tmp_114_fu_774_p3;

assign tmp_337_cast_fu_807_p1 = tmp_200_fu_802_p2;

assign tmp_338_cast_fu_817_p1 = tmp_201_fu_812_p2;

assign tmp_fu_453_p4 = {{{invdar6_reg_197}, {invdar10_reg_209}}, {invdar14_reg_221}};

assign tmp_s_fu_468_p2 = ((invdar14_reg_221 == 3'd7) ? 1'b1 : 1'b0);

assign w_20_fu_792_p2 = (w_reg_394 + 4'd1);

always @ (posedge ap_clk) begin
    tmp_328_cast_reg_950[2:0] <= 3'b000;
    tmp_328_cast_reg_950[10] <= 1'b0;
    tmp_330_cast_reg_955[2:0] <= 3'b000;
    tmp_330_cast_reg_955[9] <= 1'b0;
    tmp_333_cast_reg_968[2:0] <= 3'b000;
    tmp_336_cast_reg_973[2:0] <= 3'b000;
    tmp_336_cast_reg_973[13] <= 1'b0;
    tmp_338_cast_reg_991[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
end

endmodule //ShuffleUnit1
