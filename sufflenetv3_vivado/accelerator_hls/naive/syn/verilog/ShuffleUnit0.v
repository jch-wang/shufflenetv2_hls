// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ShuffleUnit0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv1_weight_address0,
        conv1_weight_ce0,
        conv1_weight_q0,
        conv1_bias_address0,
        conv1_bias_ce0,
        conv1_bias_q0,
        conv2_weight_address0,
        conv2_weight_ce0,
        conv2_weight_q0,
        conv2_bias_address0,
        conv2_bias_ce0,
        conv2_bias_q0,
        conv3_weight_address0,
        conv3_weight_ce0,
        conv3_weight_q0,
        conv3_bias_address0,
        conv3_bias_ce0,
        conv3_bias_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [9:0] conv1_weight_address0;
output   conv1_weight_ce0;
input  [31:0] conv1_weight_q0;
output  [4:0] conv1_bias_address0;
output   conv1_bias_ce0;
input  [31:0] conv1_bias_q0;
output  [7:0] conv2_weight_address0;
output   conv2_weight_ce0;
input  [31:0] conv2_weight_q0;
output  [4:0] conv2_bias_address0;
output   conv2_bias_ce0;
input  [31:0] conv2_bias_q0;
output  [9:0] conv3_weight_address0;
output   conv3_weight_ce0;
input  [31:0] conv3_weight_q0;
output  [4:0] conv3_bias_address0;
output   conv3_bias_ce0;
input  [31:0] conv3_bias_q0;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg input_r_ce1;
reg conv1_weight_ce0;
reg conv1_bias_ce0;
reg conv3_weight_ce0;
reg conv3_bias_ce0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] indvarinc7_fu_431_p2;
reg   [4:0] indvarinc7_reg_818;
wire    ap_CS_fsm_state2;
wire   [3:0] indvarinc11_fu_437_p2;
reg   [3:0] indvarinc11_reg_823;
wire    ap_CS_fsm_state3;
wire   [3:0] indvarinc15_fu_443_p2;
wire    ap_CS_fsm_state4;
wire   [4:0] indvarinc22_fu_482_p2;
reg   [4:0] indvarinc22_reg_842;
wire    ap_CS_fsm_state5;
wire   [3:0] indvarinc26_fu_488_p2;
reg   [3:0] indvarinc26_reg_847;
wire    ap_CS_fsm_state6;
wire   [3:0] indvarinc_fu_494_p2;
wire    ap_CS_fsm_state7;
wire   [4:0] indvarinc27_fu_533_p2;
reg   [4:0] indvarinc27_reg_866;
wire    ap_CS_fsm_state8;
wire   [3:0] indvarinc28_fu_539_p2;
reg   [3:0] indvarinc28_reg_871;
wire    ap_CS_fsm_state9;
wire   [3:0] indvarinc29_fu_545_p2;
wire    ap_CS_fsm_state10;
wire   [4:0] indvarinc30_fu_584_p2;
reg   [4:0] indvarinc30_reg_890;
wire    ap_CS_fsm_state11;
wire   [3:0] indvarinc31_fu_590_p2;
reg   [3:0] indvarinc31_reg_895;
wire    ap_CS_fsm_state12;
wire   [3:0] indvarinc32_fu_596_p2;
wire    ap_CS_fsm_state13;
wire   [4:0] indvarinc33_fu_635_p2;
reg   [4:0] indvarinc33_reg_914;
wire    ap_CS_fsm_state14;
wire   [3:0] indvarinc34_fu_641_p2;
reg   [3:0] indvarinc34_reg_919;
wire    ap_CS_fsm_state15;
wire   [3:0] indvarinc35_fu_647_p2;
wire    ap_CS_fsm_state16;
wire   [4:0] co_21_fu_696_p2;
reg   [4:0] co_21_reg_941;
wire    ap_CS_fsm_state17;
wire   [10:0] tmp_349_cast_fu_716_p1;
reg   [10:0] tmp_349_cast_reg_946;
wire   [0:0] exitcond2_fu_690_p2;
wire   [9:0] tmp_351_cast_fu_728_p1;
reg   [9:0] tmp_351_cast_reg_951;
wire   [4:0] h_21_fu_738_p2;
reg   [4:0] h_21_reg_959;
wire    ap_CS_fsm_state18;
wire   [14:0] tmp_354_cast_fu_757_p3;
reg   [14:0] tmp_354_cast_reg_964;
wire   [0:0] exitcond1_fu_732_p2;
wire   [14:0] tmp_357_cast_fu_778_p1;
reg   [14:0] tmp_357_cast_reg_969;
wire   [4:0] w_21_fu_788_p2;
reg   [4:0] w_21_reg_977;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond_fu_782_p2;
wire   [63:0] tmp_359_cast_fu_813_p1;
reg   [63:0] tmp_359_cast_reg_987;
reg   [12:0] left_part_0_address0;
reg    left_part_0_ce0;
reg    left_part_0_we0;
reg   [31:0] left_part_0_d0;
wire   [31:0] left_part_0_q0;
reg   [12:0] right_part_0_address0;
reg    right_part_0_ce0;
reg    right_part_0_we0;
reg   [31:0] right_part_0_d0;
wire   [31:0] right_part_0_q0;
reg   [12:0] conv1_output_0_address0;
reg    conv1_output_0_ce0;
reg    conv1_output_0_we0;
reg   [31:0] conv1_output_0_d0;
wire   [31:0] conv1_output_0_q0;
reg   [12:0] conv2_output_0_address0;
reg    conv2_output_0_ce0;
reg    conv2_output_0_we0;
reg   [31:0] conv2_output_0_d0;
wire   [31:0] conv2_output_0_q0;
reg   [12:0] conv3_output_0_address0;
reg    conv3_output_0_ce0;
reg    conv3_output_0_we0;
reg   [31:0] conv3_output_0_d0;
wire   [31:0] conv3_output_0_q0;
wire    grp_subconv_3x3_16_no_re_fu_401_ap_start;
wire    grp_subconv_3x3_16_no_re_fu_401_ap_done;
wire    grp_subconv_3x3_16_no_re_fu_401_ap_idle;
wire    grp_subconv_3x3_16_no_re_fu_401_ap_ready;
wire   [12:0] grp_subconv_3x3_16_no_re_fu_401_input_0_address0;
wire    grp_subconv_3x3_16_no_re_fu_401_input_0_ce0;
wire   [7:0] grp_subconv_3x3_16_no_re_fu_401_weight_address0;
wire    grp_subconv_3x3_16_no_re_fu_401_weight_ce0;
wire   [4:0] grp_subconv_3x3_16_no_re_fu_401_bias_address0;
wire    grp_subconv_3x3_16_no_re_fu_401_bias_ce0;
wire   [12:0] grp_subconv_3x3_16_no_re_fu_401_output_0_address0;
wire    grp_subconv_3x3_16_no_re_fu_401_output_0_ce0;
wire    grp_subconv_3x3_16_no_re_fu_401_output_0_we0;
wire   [31:0] grp_subconv_3x3_16_no_re_fu_401_output_0_d0;
wire    grp_subconv_1x1_1612_fu_411_ap_start;
wire    grp_subconv_1x1_1612_fu_411_ap_done;
wire    grp_subconv_1x1_1612_fu_411_ap_idle;
wire    grp_subconv_1x1_1612_fu_411_ap_ready;
wire   [12:0] grp_subconv_1x1_1612_fu_411_input_0_address0;
wire    grp_subconv_1x1_1612_fu_411_input_0_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_411_input_0_q0;
wire   [9:0] grp_subconv_1x1_1612_fu_411_weight_address0;
wire    grp_subconv_1x1_1612_fu_411_weight_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_411_weight_q0;
wire   [4:0] grp_subconv_1x1_1612_fu_411_bias_address0;
wire    grp_subconv_1x1_1612_fu_411_bias_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_411_bias_q0;
wire   [12:0] grp_subconv_1x1_1612_fu_411_output_0_address0;
wire    grp_subconv_1x1_1612_fu_411_output_0_ce0;
wire    grp_subconv_1x1_1612_fu_411_output_0_we0;
wire   [31:0] grp_subconv_1x1_1612_fu_411_output_0_d0;
wire    grp_shuffle_2415_fu_423_ap_start;
wire    grp_shuffle_2415_fu_423_ap_done;
wire    grp_shuffle_2415_fu_423_ap_idle;
wire    grp_shuffle_2415_fu_423_ap_ready;
wire   [12:0] grp_shuffle_2415_fu_423_left_0_address0;
wire    grp_shuffle_2415_fu_423_left_0_ce0;
wire   [12:0] grp_shuffle_2415_fu_423_right_0_address0;
wire    grp_shuffle_2415_fu_423_right_0_ce0;
wire   [13:0] grp_shuffle_2415_fu_423_output_r_address0;
wire    grp_shuffle_2415_fu_423_output_r_ce0;
wire    grp_shuffle_2415_fu_423_output_r_we0;
wire   [31:0] grp_shuffle_2415_fu_423_output_r_d0;
reg   [4:0] invdar6_reg_193;
wire   [0:0] tmp_154_fu_476_p2;
wire   [0:0] tmp_s_fu_464_p2;
wire   [0:0] tmp_153_fu_470_p2;
reg   [3:0] invdar10_reg_205;
reg   [3:0] invdar14_reg_217;
reg   [4:0] invdar21_reg_228;
wire   [0:0] tmp_157_fu_527_p2;
wire   [0:0] tmp_155_fu_515_p2;
wire   [0:0] tmp_156_fu_521_p2;
reg   [3:0] invdar25_reg_240;
reg   [3:0] invdar_reg_252;
reg   [4:0] invdar26_reg_263;
wire   [0:0] tmp_160_fu_578_p2;
wire   [0:0] tmp_158_fu_566_p2;
wire   [0:0] tmp_159_fu_572_p2;
reg   [3:0] invdar27_reg_275;
reg   [3:0] invdar28_reg_287;
reg   [4:0] invdar29_reg_298;
wire   [0:0] tmp_163_fu_629_p2;
wire   [0:0] tmp_161_fu_617_p2;
wire   [0:0] tmp_162_fu_623_p2;
reg   [3:0] invdar30_reg_310;
reg   [3:0] invdar31_reg_322;
reg   [4:0] invdar32_reg_333;
wire   [0:0] tmp_169_fu_680_p2;
wire   [0:0] tmp_165_fu_668_p2;
wire   [0:0] tmp_166_fu_674_p2;
reg   [3:0] invdar33_reg_345;
reg   [3:0] invdar34_reg_357;
reg   [4:0] co_reg_368;
reg   [4:0] h_reg_379;
reg   [4:0] w_reg_390;
wire    ap_CS_fsm_state20;
reg    ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_subconv_1x1_1612_fu_411_ap_start;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
reg    ap_reg_grp_shuffle_2415_fu_423_ap_start;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_202_fu_459_p1;
wire   [63:0] tmp_203_fu_510_p1;
wire   [63:0] tmp_204_fu_561_p1;
wire   [63:0] tmp_205_fu_612_p1;
wire   [63:0] tmp_206_fu_663_p1;
wire   [63:0] tmp_358_cast_fu_803_p1;
wire   [12:0] tmp_fu_449_p4;
wire   [12:0] tmp_115_fu_500_p4;
wire   [12:0] tmp_116_fu_551_p4;
wire   [12:0] tmp_117_fu_602_p4;
wire   [12:0] tmp_118_fu_653_p4;
wire   [5:0] co_cast_fu_686_p1;
wire   [5:0] tmp_164_fu_702_p2;
wire   [9:0] tmp_207_fu_708_p3;
wire   [8:0] tmp_208_fu_720_p3;
wire   [10:0] tmp_167_cast_fu_748_p1;
wire   [10:0] tmp_209_fu_752_p2;
wire   [9:0] tmp_167_cast1_fu_744_p1;
wire   [9:0] tmp_210_fu_765_p2;
wire   [13:0] tmp_119_fu_770_p3;
wire   [14:0] tmp_168_cast_fu_794_p1;
wire   [14:0] tmp_211_fu_798_p2;
wire   [14:0] tmp_212_fu_808_p2;
reg   [26:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start = 1'b0;
#0 ap_reg_grp_subconv_1x1_1612_fu_411_ap_start = 1'b0;
#0 ap_reg_grp_shuffle_2415_fu_423_ap_start = 1'b0;
end

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
left_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(left_part_0_address0),
    .ce0(left_part_0_ce0),
    .we0(left_part_0_we0),
    .d0(left_part_0_d0),
    .q0(left_part_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
right_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(right_part_0_address0),
    .ce0(right_part_0_ce0),
    .we0(right_part_0_we0),
    .d0(right_part_0_d0),
    .q0(right_part_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv1_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_output_0_address0),
    .ce0(conv1_output_0_ce0),
    .we0(conv1_output_0_we0),
    .d0(conv1_output_0_d0),
    .q0(conv1_output_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv2_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_output_0_address0),
    .ce0(conv2_output_0_ce0),
    .we0(conv2_output_0_we0),
    .d0(conv2_output_0_d0),
    .q0(conv2_output_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv3_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv3_output_0_address0),
    .ce0(conv3_output_0_ce0),
    .we0(conv3_output_0_we0),
    .d0(conv3_output_0_d0),
    .q0(conv3_output_0_q0)
);

subconv_3x3_16_no_re grp_subconv_3x3_16_no_re_fu_401(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_3x3_16_no_re_fu_401_ap_start),
    .ap_done(grp_subconv_3x3_16_no_re_fu_401_ap_done),
    .ap_idle(grp_subconv_3x3_16_no_re_fu_401_ap_idle),
    .ap_ready(grp_subconv_3x3_16_no_re_fu_401_ap_ready),
    .input_0_address0(grp_subconv_3x3_16_no_re_fu_401_input_0_address0),
    .input_0_ce0(grp_subconv_3x3_16_no_re_fu_401_input_0_ce0),
    .input_0_q0(conv1_output_0_q0),
    .weight_address0(grp_subconv_3x3_16_no_re_fu_401_weight_address0),
    .weight_ce0(grp_subconv_3x3_16_no_re_fu_401_weight_ce0),
    .weight_q0(conv2_weight_q0),
    .bias_address0(grp_subconv_3x3_16_no_re_fu_401_bias_address0),
    .bias_ce0(grp_subconv_3x3_16_no_re_fu_401_bias_ce0),
    .bias_q0(conv2_bias_q0),
    .output_0_address0(grp_subconv_3x3_16_no_re_fu_401_output_0_address0),
    .output_0_ce0(grp_subconv_3x3_16_no_re_fu_401_output_0_ce0),
    .output_0_we0(grp_subconv_3x3_16_no_re_fu_401_output_0_we0),
    .output_0_d0(grp_subconv_3x3_16_no_re_fu_401_output_0_d0)
);

subconv_1x1_1612 grp_subconv_1x1_1612_fu_411(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_1612_fu_411_ap_start),
    .ap_done(grp_subconv_1x1_1612_fu_411_ap_done),
    .ap_idle(grp_subconv_1x1_1612_fu_411_ap_idle),
    .ap_ready(grp_subconv_1x1_1612_fu_411_ap_ready),
    .input_0_address0(grp_subconv_1x1_1612_fu_411_input_0_address0),
    .input_0_ce0(grp_subconv_1x1_1612_fu_411_input_0_ce0),
    .input_0_q0(grp_subconv_1x1_1612_fu_411_input_0_q0),
    .weight_address0(grp_subconv_1x1_1612_fu_411_weight_address0),
    .weight_ce0(grp_subconv_1x1_1612_fu_411_weight_ce0),
    .weight_q0(grp_subconv_1x1_1612_fu_411_weight_q0),
    .bias_address0(grp_subconv_1x1_1612_fu_411_bias_address0),
    .bias_ce0(grp_subconv_1x1_1612_fu_411_bias_ce0),
    .bias_q0(grp_subconv_1x1_1612_fu_411_bias_q0),
    .output_0_address0(grp_subconv_1x1_1612_fu_411_output_0_address0),
    .output_0_ce0(grp_subconv_1x1_1612_fu_411_output_0_ce0),
    .output_0_we0(grp_subconv_1x1_1612_fu_411_output_0_we0),
    .output_0_d0(grp_subconv_1x1_1612_fu_411_output_0_d0)
);

shuffle_2415 grp_shuffle_2415_fu_423(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shuffle_2415_fu_423_ap_start),
    .ap_done(grp_shuffle_2415_fu_423_ap_done),
    .ap_idle(grp_shuffle_2415_fu_423_ap_idle),
    .ap_ready(grp_shuffle_2415_fu_423_ap_ready),
    .left_0_address0(grp_shuffle_2415_fu_423_left_0_address0),
    .left_0_ce0(grp_shuffle_2415_fu_423_left_0_ce0),
    .left_0_q0(left_part_0_q0),
    .right_0_address0(grp_shuffle_2415_fu_423_right_0_address0),
    .right_0_ce0(grp_shuffle_2415_fu_423_right_0_ce0),
    .right_0_q0(conv3_output_0_q0),
    .output_r_address0(grp_shuffle_2415_fu_423_output_r_address0),
    .output_r_ce0(grp_shuffle_2415_fu_423_output_r_ce0),
    .output_r_we0(grp_shuffle_2415_fu_423_output_r_we0),
    .output_r_d0(grp_shuffle_2415_fu_423_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_shuffle_2415_fu_423_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_reg_grp_shuffle_2415_fu_423_ap_start <= 1'b1;
        end else if ((1'b1 == grp_shuffle_2415_fu_423_ap_ready)) begin
            ap_reg_grp_shuffle_2415_fu_423_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_1612_fu_411_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_690_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state24))) begin
            ap_reg_grp_subconv_1x1_1612_fu_411_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_1612_fu_411_ap_ready)) begin
            ap_reg_grp_subconv_1x1_1612_fu_411_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_3x3_16_no_re_fu_401_ap_ready)) begin
            ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_165_fu_668_p2) & (1'd1 == tmp_166_fu_674_p2) & (1'd1 == tmp_169_fu_680_p2))) begin
        co_reg_368 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_732_p2 == 1'd1))) begin
        co_reg_368 <= co_21_reg_941;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_782_p2 == 1'd1))) begin
        h_reg_379 <= h_21_reg_959;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_690_p2 == 1'd0))) begin
        h_reg_379 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_464_p2 == 1'd1) & (1'd0 == tmp_153_fu_470_p2))) begin
        invdar10_reg_205 <= indvarinc11_reg_823;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar10_reg_205 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_s_fu_464_p2))) begin
        invdar14_reg_217 <= indvarinc15_fu_443_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar14_reg_217 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_464_p2 == 1'd1) & (1'd1 == tmp_153_fu_470_p2) & (tmp_154_fu_476_p2 == 1'd1))) begin
        invdar21_reg_228 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_157_fu_527_p2) & (1'd1 == tmp_155_fu_515_p2) & (1'd1 == tmp_156_fu_521_p2))) begin
        invdar21_reg_228 <= indvarinc22_reg_842;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_155_fu_515_p2) & (1'd0 == tmp_156_fu_521_p2))) begin
        invdar25_reg_240 <= indvarinc26_reg_847;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar25_reg_240 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_155_fu_515_p2) & (1'd1 == tmp_156_fu_521_p2) & (1'd1 == tmp_157_fu_527_p2))) begin
        invdar26_reg_263 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_160_fu_578_p2) & (1'd1 == tmp_158_fu_566_p2) & (1'd1 == tmp_159_fu_572_p2))) begin
        invdar26_reg_263 <= indvarinc27_reg_866;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_158_fu_566_p2) & (1'd0 == tmp_159_fu_572_p2))) begin
        invdar27_reg_275 <= indvarinc28_reg_871;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar27_reg_275 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_158_fu_566_p2))) begin
        invdar28_reg_287 <= indvarinc29_fu_545_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        invdar28_reg_287 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_158_fu_566_p2) & (1'd1 == tmp_159_fu_572_p2) & (1'd1 == tmp_160_fu_578_p2))) begin
        invdar29_reg_298 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_163_fu_629_p2) & (1'd1 == tmp_161_fu_617_p2) & (1'd1 == tmp_162_fu_623_p2))) begin
        invdar29_reg_298 <= indvarinc30_reg_890;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_161_fu_617_p2) & (1'd0 == tmp_162_fu_623_p2))) begin
        invdar30_reg_310 <= indvarinc31_reg_895;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        invdar30_reg_310 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_161_fu_617_p2))) begin
        invdar31_reg_322 <= indvarinc32_fu_596_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar31_reg_322 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_161_fu_617_p2) & (1'd1 == tmp_162_fu_623_p2) & (1'd1 == tmp_163_fu_629_p2))) begin
        invdar32_reg_333 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_169_fu_680_p2) & (1'd1 == tmp_165_fu_668_p2) & (1'd1 == tmp_166_fu_674_p2))) begin
        invdar32_reg_333 <= indvarinc33_reg_914;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_165_fu_668_p2) & (1'd0 == tmp_166_fu_674_p2))) begin
        invdar33_reg_345 <= indvarinc34_reg_919;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        invdar33_reg_345 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_165_fu_668_p2))) begin
        invdar34_reg_357 <= indvarinc35_fu_647_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar34_reg_357 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_154_fu_476_p2) & (tmp_s_fu_464_p2 == 1'd1) & (1'd1 == tmp_153_fu_470_p2))) begin
        invdar6_reg_193 <= indvarinc7_reg_818;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar6_reg_193 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_155_fu_515_p2))) begin
        invdar_reg_252 <= indvarinc_fu_494_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        invdar_reg_252 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_732_p2))) begin
        w_reg_390 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        w_reg_390 <= w_21_reg_977;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        co_21_reg_941 <= co_21_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h_21_reg_959 <= h_21_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc11_reg_823 <= indvarinc11_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc22_reg_842 <= indvarinc22_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc26_reg_847 <= indvarinc26_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc27_reg_866 <= indvarinc27_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc28_reg_871 <= indvarinc28_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc30_reg_890 <= indvarinc30_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvarinc31_reg_895 <= indvarinc31_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvarinc33_reg_914 <= indvarinc33_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvarinc34_reg_919 <= indvarinc34_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc7_reg_818 <= indvarinc7_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_690_p2 == 1'd0))) begin
        tmp_349_cast_reg_946[9 : 4] <= tmp_349_cast_fu_716_p1[9 : 4];
        tmp_351_cast_reg_951[8 : 4] <= tmp_351_cast_fu_728_p1[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_732_p2))) begin
        tmp_354_cast_reg_964[14 : 4] <= tmp_354_cast_fu_757_p3[14 : 4];
        tmp_357_cast_reg_969[13 : 4] <= tmp_357_cast_fu_778_p1[13 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond_fu_782_p2))) begin
        tmp_359_cast_reg_987[14 : 0] <= tmp_359_cast_fu_813_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_21_reg_977 <= w_21_fu_788_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_2415_fu_423_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_2415_fu_423_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_bias_ce0 = grp_subconv_1x1_1612_fu_411_bias_ce0;
    end else begin
        conv1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_address0 = tmp_204_fu_561_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_address0 = grp_subconv_1x1_1612_fu_411_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_address0 = grp_subconv_3x3_16_no_re_fu_401_input_0_address0;
    end else begin
        conv1_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_ce0 = grp_subconv_1x1_1612_fu_411_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_ce0 = grp_subconv_3x3_16_no_re_fu_401_input_0_ce0;
    end else begin
        conv1_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_d0 = grp_subconv_1x1_1612_fu_411_output_0_d0;
    end else begin
        conv1_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_we0 = grp_subconv_1x1_1612_fu_411_output_0_we0;
    end else begin
        conv1_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_weight_ce0 = grp_subconv_1x1_1612_fu_411_weight_ce0;
    end else begin
        conv1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_address0 = tmp_205_fu_612_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_address0 = grp_subconv_1x1_1612_fu_411_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_address0 = grp_subconv_3x3_16_no_re_fu_401_output_0_address0;
    end else begin
        conv2_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_ce0 = grp_subconv_1x1_1612_fu_411_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_ce0 = grp_subconv_3x3_16_no_re_fu_401_output_0_ce0;
    end else begin
        conv2_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_d0 = grp_subconv_3x3_16_no_re_fu_401_output_0_d0;
    end else begin
        conv2_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_we0 = grp_subconv_3x3_16_no_re_fu_401_output_0_we0;
    end else begin
        conv2_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_bias_ce0 = grp_subconv_1x1_1612_fu_411_bias_ce0;
    end else begin
        conv3_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_address0 = tmp_206_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_address0 = grp_shuffle_2415_fu_423_right_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_address0 = grp_subconv_1x1_1612_fu_411_output_0_address0;
    end else begin
        conv3_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_ce0 = grp_shuffle_2415_fu_423_right_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_ce0 = grp_subconv_1x1_1612_fu_411_output_0_ce0;
    end else begin
        conv3_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_d0 = grp_subconv_1x1_1612_fu_411_output_0_d0;
    end else begin
        conv3_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_we0 = grp_subconv_1x1_1612_fu_411_output_0_we0;
    end else begin
        conv3_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_weight_ce0 = grp_subconv_1x1_1612_fu_411_weight_ce0;
    end else begin
        conv3_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_1612_fu_411_bias_q0 = conv3_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_411_bias_q0 = conv1_bias_q0;
    end else begin
        grp_subconv_1x1_1612_fu_411_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_1612_fu_411_input_0_q0 = conv2_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_411_input_0_q0 = right_part_0_q0;
    end else begin
        grp_subconv_1x1_1612_fu_411_input_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_1612_fu_411_weight_q0 = conv3_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_411_weight_q0 = conv1_weight_q0;
    end else begin
        grp_subconv_1x1_1612_fu_411_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_address0 = tmp_359_cast_reg_987;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_address0 = tmp_202_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_address0 = grp_shuffle_2415_fu_423_left_0_address0;
    end else begin
        left_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_ce0 = grp_shuffle_2415_fu_423_left_0_ce0;
    end else begin
        left_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_d0 = input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_d0 = 32'd0;
    end else begin
        left_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_we0 = 1'b1;
    end else begin
        left_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_address0 = tmp_359_cast_reg_987;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_address0 = tmp_203_fu_510_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_address0 = grp_subconv_1x1_1612_fu_411_input_0_address0;
    end else begin
        right_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_ce0 = grp_subconv_1x1_1612_fu_411_input_0_ce0;
    end else begin
        right_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_d0 = input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_d0 = 32'd0;
    end else begin
        right_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_we0 = 1'b1;
    end else begin
        right_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_464_p2 == 1'd1) & (1'd1 == tmp_153_fu_470_p2) & (tmp_154_fu_476_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_154_fu_476_p2) & (tmp_s_fu_464_p2 == 1'd1) & (1'd1 == tmp_153_fu_470_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_464_p2 == 1'd1) & (1'd0 == tmp_153_fu_470_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_155_fu_515_p2) & (1'd1 == tmp_156_fu_521_p2) & (1'd1 == tmp_157_fu_527_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_157_fu_527_p2) & (1'd1 == tmp_155_fu_515_p2) & (1'd1 == tmp_156_fu_521_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_155_fu_515_p2) & (1'd0 == tmp_156_fu_521_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_158_fu_566_p2) & (1'd1 == tmp_159_fu_572_p2) & (1'd1 == tmp_160_fu_578_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_160_fu_578_p2) & (1'd1 == tmp_158_fu_566_p2) & (1'd1 == tmp_159_fu_572_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_158_fu_566_p2) & (1'd0 == tmp_159_fu_572_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_161_fu_617_p2) & (1'd1 == tmp_162_fu_623_p2) & (1'd1 == tmp_163_fu_629_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_163_fu_629_p2) & (1'd1 == tmp_161_fu_617_p2) & (1'd1 == tmp_162_fu_623_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_161_fu_617_p2) & (1'd0 == tmp_162_fu_623_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_165_fu_668_p2) & (1'd1 == tmp_166_fu_674_p2) & (1'd1 == tmp_169_fu_680_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_169_fu_680_p2) & (1'd1 == tmp_165_fu_668_p2) & (1'd1 == tmp_166_fu_674_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_165_fu_668_p2) & (1'd0 == tmp_166_fu_674_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_690_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_732_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_782_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_subconv_1x1_1612_fu_411_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_subconv_3x3_16_no_re_fu_401_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_subconv_1x1_1612_fu_411_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_2415_fu_423_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign co_21_fu_696_p2 = (co_reg_368 + 5'd1);

assign co_cast_fu_686_p1 = co_reg_368;

assign conv1_bias_address0 = grp_subconv_1x1_1612_fu_411_bias_address0;

assign conv1_weight_address0 = grp_subconv_1x1_1612_fu_411_weight_address0;

assign conv2_bias_address0 = grp_subconv_3x3_16_no_re_fu_401_bias_address0;

assign conv2_bias_ce0 = grp_subconv_3x3_16_no_re_fu_401_bias_ce0;

assign conv2_weight_address0 = grp_subconv_3x3_16_no_re_fu_401_weight_address0;

assign conv2_weight_ce0 = grp_subconv_3x3_16_no_re_fu_401_weight_ce0;

assign conv3_bias_address0 = grp_subconv_1x1_1612_fu_411_bias_address0;

assign conv3_weight_address0 = grp_subconv_1x1_1612_fu_411_weight_address0;

assign exitcond1_fu_732_p2 = ((h_reg_379 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond2_fu_690_p2 = ((co_reg_368 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_fu_782_p2 = ((w_reg_390 == 5'd16) ? 1'b1 : 1'b0);

assign grp_shuffle_2415_fu_423_ap_start = ap_reg_grp_shuffle_2415_fu_423_ap_start;

assign grp_subconv_1x1_1612_fu_411_ap_start = ap_reg_grp_subconv_1x1_1612_fu_411_ap_start;

assign grp_subconv_3x3_16_no_re_fu_401_ap_start = ap_reg_grp_subconv_3x3_16_no_re_fu_401_ap_start;

assign h_21_fu_738_p2 = (h_reg_379 + 5'd1);

assign indvarinc11_fu_437_p2 = (invdar10_reg_205 + 4'd1);

assign indvarinc15_fu_443_p2 = (invdar14_reg_217 + 4'd1);

assign indvarinc22_fu_482_p2 = (invdar21_reg_228 + 5'd1);

assign indvarinc26_fu_488_p2 = (invdar25_reg_240 + 4'd1);

assign indvarinc27_fu_533_p2 = (invdar26_reg_263 + 5'd1);

assign indvarinc28_fu_539_p2 = (invdar27_reg_275 + 4'd1);

assign indvarinc29_fu_545_p2 = (invdar28_reg_287 + 4'd1);

assign indvarinc30_fu_584_p2 = (invdar29_reg_298 + 5'd1);

assign indvarinc31_fu_590_p2 = (invdar30_reg_310 + 4'd1);

assign indvarinc32_fu_596_p2 = (invdar31_reg_322 + 4'd1);

assign indvarinc33_fu_635_p2 = (invdar32_reg_333 + 5'd1);

assign indvarinc34_fu_641_p2 = (invdar33_reg_345 + 4'd1);

assign indvarinc35_fu_647_p2 = (invdar34_reg_357 + 4'd1);

assign indvarinc7_fu_431_p2 = (invdar6_reg_193 + 5'd1);

assign indvarinc_fu_494_p2 = (invdar_reg_252 + 4'd1);

assign input_r_address0 = tmp_358_cast_fu_803_p1;

assign input_r_address1 = tmp_359_cast_fu_813_p1;

assign output_r_address0 = grp_shuffle_2415_fu_423_output_r_address0;

assign output_r_ce0 = grp_shuffle_2415_fu_423_output_r_ce0;

assign output_r_d0 = grp_shuffle_2415_fu_423_output_r_d0;

assign output_r_we0 = grp_shuffle_2415_fu_423_output_r_we0;

assign tmp_115_fu_500_p4 = {{{invdar21_reg_228}, {invdar25_reg_240}}, {invdar_reg_252}};

assign tmp_116_fu_551_p4 = {{{invdar26_reg_263}, {invdar27_reg_275}}, {invdar28_reg_287}};

assign tmp_117_fu_602_p4 = {{{invdar29_reg_298}, {invdar30_reg_310}}, {invdar31_reg_322}};

assign tmp_118_fu_653_p4 = {{{invdar32_reg_333}, {invdar33_reg_345}}, {invdar34_reg_357}};

assign tmp_119_fu_770_p3 = {{tmp_210_fu_765_p2}, {4'd0}};

assign tmp_153_fu_470_p2 = ((invdar10_reg_205 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_154_fu_476_p2 = ((invdar6_reg_193 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_155_fu_515_p2 = ((invdar_reg_252 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_156_fu_521_p2 = ((invdar25_reg_240 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_157_fu_527_p2 = ((invdar21_reg_228 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_158_fu_566_p2 = ((invdar28_reg_287 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_159_fu_572_p2 = ((invdar27_reg_275 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_160_fu_578_p2 = ((invdar26_reg_263 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_161_fu_617_p2 = ((invdar31_reg_322 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_162_fu_623_p2 = ((invdar30_reg_310 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_163_fu_629_p2 = ((invdar29_reg_298 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_164_fu_702_p2 = (co_cast_fu_686_p1 + 6'd24);

assign tmp_165_fu_668_p2 = ((invdar34_reg_357 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_166_fu_674_p2 = ((invdar33_reg_345 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_167_cast1_fu_744_p1 = h_reg_379;

assign tmp_167_cast_fu_748_p1 = h_reg_379;

assign tmp_168_cast_fu_794_p1 = w_reg_390;

assign tmp_169_fu_680_p2 = ((invdar32_reg_333 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_202_fu_459_p1 = tmp_fu_449_p4;

assign tmp_203_fu_510_p1 = tmp_115_fu_500_p4;

assign tmp_204_fu_561_p1 = tmp_116_fu_551_p4;

assign tmp_205_fu_612_p1 = tmp_117_fu_602_p4;

assign tmp_206_fu_663_p1 = tmp_118_fu_653_p4;

assign tmp_207_fu_708_p3 = {{tmp_164_fu_702_p2}, {4'd0}};

assign tmp_208_fu_720_p3 = {{co_reg_368}, {4'd0}};

assign tmp_209_fu_752_p2 = (tmp_349_cast_reg_946 + tmp_167_cast_fu_748_p1);

assign tmp_210_fu_765_p2 = (tmp_351_cast_reg_951 + tmp_167_cast1_fu_744_p1);

assign tmp_211_fu_798_p2 = (tmp_354_cast_reg_964 + tmp_168_cast_fu_794_p1);

assign tmp_212_fu_808_p2 = (tmp_357_cast_reg_969 + tmp_168_cast_fu_794_p1);

assign tmp_349_cast_fu_716_p1 = tmp_207_fu_708_p3;

assign tmp_351_cast_fu_728_p1 = tmp_208_fu_720_p3;

assign tmp_354_cast_fu_757_p3 = {{tmp_209_fu_752_p2}, {4'd0}};

assign tmp_357_cast_fu_778_p1 = tmp_119_fu_770_p3;

assign tmp_358_cast_fu_803_p1 = tmp_211_fu_798_p2;

assign tmp_359_cast_fu_813_p1 = tmp_212_fu_808_p2;

assign tmp_fu_449_p4 = {{{invdar6_reg_193}, {invdar10_reg_205}}, {invdar14_reg_217}};

assign tmp_s_fu_464_p2 = ((invdar14_reg_217 == 4'd15) ? 1'b1 : 1'b0);

assign w_21_fu_788_p2 = (w_reg_390 + 5'd1);

always @ (posedge ap_clk) begin
    tmp_349_cast_reg_946[3:0] <= 4'b0000;
    tmp_349_cast_reg_946[10] <= 1'b0;
    tmp_351_cast_reg_951[3:0] <= 4'b0000;
    tmp_351_cast_reg_951[9] <= 1'b0;
    tmp_354_cast_reg_964[3:0] <= 4'b0000;
    tmp_357_cast_reg_969[3:0] <= 4'b0000;
    tmp_357_cast_reg_969[14] <= 1'b0;
    tmp_359_cast_reg_987[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //ShuffleUnit0
