// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DownsampleUnit0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        conv1r_weight_address0,
        conv1r_weight_ce0,
        conv1r_weight_q0,
        conv1r_bias_address0,
        conv1r_bias_ce0,
        conv1r_bias_q0,
        conv2r_weight_address0,
        conv2r_weight_ce0,
        conv2r_weight_q0,
        conv2r_bias_address0,
        conv2r_bias_ce0,
        conv2r_bias_q0,
        conv3r_weight_address0,
        conv3r_weight_ce0,
        conv3r_weight_q0,
        conv3r_bias_address0,
        conv3r_bias_ce0,
        conv3r_bias_q0,
        conv1l_weight_address0,
        conv1l_weight_ce0,
        conv1l_weight_q0,
        conv1l_bias_address0,
        conv1l_bias_ce0,
        conv1l_bias_q0,
        conv2l_weight_address0,
        conv2l_weight_ce0,
        conv2l_weight_q0,
        conv2l_bias_address0,
        conv2l_bias_ce0,
        conv2l_bias_q0,
        downsampleunit0_outp_address0,
        downsampleunit0_outp_ce0,
        downsampleunit0_outp_we0,
        downsampleunit0_outp_d0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [9:0] conv1r_weight_address0;
output   conv1r_weight_ce0;
input  [31:0] conv1r_weight_q0;
output  [4:0] conv1r_bias_address0;
output   conv1r_bias_ce0;
input  [31:0] conv1r_bias_q0;
output  [7:0] conv2r_weight_address0;
output   conv2r_weight_ce0;
input  [31:0] conv2r_weight_q0;
output  [4:0] conv2r_bias_address0;
output   conv2r_bias_ce0;
input  [31:0] conv2r_bias_q0;
output  [9:0] conv3r_weight_address0;
output   conv3r_weight_ce0;
input  [31:0] conv3r_weight_q0;
output  [4:0] conv3r_bias_address0;
output   conv3r_bias_ce0;
input  [31:0] conv3r_bias_q0;
output  [7:0] conv1l_weight_address0;
output   conv1l_weight_ce0;
input  [31:0] conv1l_weight_q0;
output  [4:0] conv1l_bias_address0;
output   conv1l_bias_ce0;
input  [31:0] conv1l_bias_q0;
output  [9:0] conv2l_weight_address0;
output   conv2l_weight_ce0;
input  [31:0] conv2l_weight_q0;
output  [4:0] conv2l_bias_address0;
output   conv2l_bias_ce0;
input  [31:0] conv2l_bias_q0;
output  [13:0] downsampleunit0_outp_address0;
output   downsampleunit0_outp_ce0;
output   downsampleunit0_outp_we0;
output  [31:0] downsampleunit0_outp_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] input_r_address0;
reg input_r_ce0;
reg conv2r_weight_ce0;
reg conv2r_bias_ce0;
reg conv3r_weight_ce0;
reg conv3r_bias_ce0;
reg conv1l_weight_ce0;
reg conv1l_bias_ce0;
reg conv2l_weight_ce0;
reg conv2l_bias_ce0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] indvarinc4_fu_375_p2;
reg   [4:0] indvarinc4_reg_630;
wire    ap_CS_fsm_state2;
wire   [4:0] indvarinc8_fu_381_p2;
reg   [4:0] indvarinc8_reg_635;
wire    ap_CS_fsm_state3;
wire   [4:0] indvarinc12_fu_387_p2;
wire    ap_CS_fsm_state4;
wire   [4:0] indvarinc19_fu_426_p2;
reg   [4:0] indvarinc19_reg_654;
wire    ap_CS_fsm_state5;
wire   [3:0] indvarinc23_fu_432_p2;
reg   [3:0] indvarinc23_reg_659;
wire    ap_CS_fsm_state6;
wire   [3:0] indvarinc28_fu_438_p2;
wire    ap_CS_fsm_state7;
wire   [4:0] indvarinc35_fu_477_p2;
reg   [4:0] indvarinc35_reg_678;
wire    ap_CS_fsm_state8;
wire   [3:0] indvarinc39_fu_483_p2;
reg   [3:0] indvarinc39_reg_683;
wire    ap_CS_fsm_state9;
wire   [3:0] indvarinc43_fu_489_p2;
wire    ap_CS_fsm_state10;
wire   [4:0] indvarinc_fu_528_p2;
reg   [4:0] indvarinc_reg_702;
wire    ap_CS_fsm_state11;
wire   [3:0] indvarinc49_fu_534_p2;
reg   [3:0] indvarinc49_reg_707;
wire    ap_CS_fsm_state12;
wire   [3:0] indvarinc50_fu_540_p2;
wire    ap_CS_fsm_state13;
wire   [4:0] indvarinc51_fu_579_p2;
reg   [4:0] indvarinc51_reg_726;
wire    ap_CS_fsm_state14;
wire   [3:0] indvarinc52_fu_585_p2;
reg   [3:0] indvarinc52_reg_731;
wire    ap_CS_fsm_state15;
wire   [3:0] indvarinc53_fu_591_p2;
wire    ap_CS_fsm_state16;
reg   [14:0] conv1r_output_address0;
reg    conv1r_output_ce0;
reg    conv1r_output_we0;
reg   [31:0] conv1r_output_d0;
wire   [31:0] conv1r_output_q0;
reg   [12:0] conv2r_ourput_0_address0;
reg    conv2r_ourput_0_ce0;
reg    conv2r_ourput_0_we0;
reg   [31:0] conv2r_ourput_0_d0;
wire   [31:0] conv2r_ourput_0_q0;
reg   [12:0] conv3r_ourput_0_address0;
reg    conv3r_ourput_0_ce0;
reg    conv3r_ourput_0_we0;
reg   [31:0] conv3r_ourput_0_d0;
wire   [31:0] conv3r_ourput_0_q0;
reg   [12:0] conv1l_output_0_address0;
reg    conv1l_output_0_ce0;
reg    conv1l_output_0_we0;
reg   [31:0] conv1l_output_0_d0;
wire   [31:0] conv1l_output_0_q0;
reg   [12:0] conv2l_output_0_address0;
reg    conv2l_output_0_ce0;
reg    conv2l_output_0_we0;
reg   [31:0] conv2l_output_0_d0;
wire   [31:0] conv2l_output_0_q0;
wire    grp_subconv_1x1_3214_fu_331_ap_start;
wire    grp_subconv_1x1_3214_fu_331_ap_done;
wire    grp_subconv_1x1_3214_fu_331_ap_idle;
wire    grp_subconv_1x1_3214_fu_331_ap_ready;
wire   [14:0] grp_subconv_1x1_3214_fu_331_input_r_address0;
wire    grp_subconv_1x1_3214_fu_331_input_r_ce0;
wire   [9:0] grp_subconv_1x1_3214_fu_331_weight_address0;
wire    grp_subconv_1x1_3214_fu_331_weight_ce0;
wire   [4:0] grp_subconv_1x1_3214_fu_331_bias_address0;
wire    grp_subconv_1x1_3214_fu_331_bias_ce0;
wire   [14:0] grp_subconv_1x1_3214_fu_331_output_r_address0;
wire    grp_subconv_1x1_3214_fu_331_output_r_ce0;
wire    grp_subconv_1x1_3214_fu_331_output_r_we0;
wire   [31:0] grp_subconv_1x1_3214_fu_331_output_r_d0;
wire    grp_subconv_3x3_32_strid_fu_342_ap_start;
wire    grp_subconv_3x3_32_strid_fu_342_ap_done;
wire    grp_subconv_3x3_32_strid_fu_342_ap_idle;
wire    grp_subconv_3x3_32_strid_fu_342_ap_ready;
wire   [14:0] grp_subconv_3x3_32_strid_fu_342_input_r_address0;
wire    grp_subconv_3x3_32_strid_fu_342_input_r_ce0;
reg   [31:0] grp_subconv_3x3_32_strid_fu_342_input_r_q0;
wire   [7:0] grp_subconv_3x3_32_strid_fu_342_weight_address0;
wire    grp_subconv_3x3_32_strid_fu_342_weight_ce0;
reg   [31:0] grp_subconv_3x3_32_strid_fu_342_weight_q0;
wire   [4:0] grp_subconv_3x3_32_strid_fu_342_bias_address0;
wire    grp_subconv_3x3_32_strid_fu_342_bias_ce0;
reg   [31:0] grp_subconv_3x3_32_strid_fu_342_bias_q0;
wire   [12:0] grp_subconv_3x3_32_strid_fu_342_output_0_address0;
wire    grp_subconv_3x3_32_strid_fu_342_output_0_ce0;
wire    grp_subconv_3x3_32_strid_fu_342_output_0_we0;
wire   [31:0] grp_subconv_3x3_32_strid_fu_342_output_0_d0;
wire    grp_subconv_1x1_1612_fu_355_ap_start;
wire    grp_subconv_1x1_1612_fu_355_ap_done;
wire    grp_subconv_1x1_1612_fu_355_ap_idle;
wire    grp_subconv_1x1_1612_fu_355_ap_ready;
wire   [12:0] grp_subconv_1x1_1612_fu_355_input_0_address0;
wire    grp_subconv_1x1_1612_fu_355_input_0_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_355_input_0_q0;
wire   [9:0] grp_subconv_1x1_1612_fu_355_weight_address0;
wire    grp_subconv_1x1_1612_fu_355_weight_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_355_weight_q0;
wire   [4:0] grp_subconv_1x1_1612_fu_355_bias_address0;
wire    grp_subconv_1x1_1612_fu_355_bias_ce0;
reg   [31:0] grp_subconv_1x1_1612_fu_355_bias_q0;
wire   [12:0] grp_subconv_1x1_1612_fu_355_output_0_address0;
wire    grp_subconv_1x1_1612_fu_355_output_0_ce0;
wire    grp_subconv_1x1_1612_fu_355_output_0_we0;
wire   [31:0] grp_subconv_1x1_1612_fu_355_output_0_d0;
wire    grp_shuffle_2415_fu_367_ap_start;
wire    grp_shuffle_2415_fu_367_ap_done;
wire    grp_shuffle_2415_fu_367_ap_idle;
wire    grp_shuffle_2415_fu_367_ap_ready;
wire   [12:0] grp_shuffle_2415_fu_367_left_0_address0;
wire    grp_shuffle_2415_fu_367_left_0_ce0;
wire   [12:0] grp_shuffle_2415_fu_367_right_0_address0;
wire    grp_shuffle_2415_fu_367_right_0_ce0;
wire   [13:0] grp_shuffle_2415_fu_367_output_r_address0;
wire    grp_shuffle_2415_fu_367_output_r_ce0;
wire    grp_shuffle_2415_fu_367_output_r_we0;
wire   [31:0] grp_shuffle_2415_fu_367_output_r_d0;
reg   [4:0] invdar3_reg_156;
wire   [0:0] tmp_424_fu_420_p2;
wire   [0:0] tmp_s_fu_408_p2;
wire   [0:0] tmp_423_fu_414_p2;
reg   [4:0] invdar7_reg_168;
reg   [4:0] invdar11_reg_180;
reg   [4:0] invdar18_reg_191;
wire   [0:0] tmp_427_fu_471_p2;
wire   [0:0] tmp_425_fu_459_p2;
wire   [0:0] tmp_426_fu_465_p2;
reg   [3:0] invdar22_reg_203;
reg   [3:0] invdar27_reg_215;
reg   [4:0] invdar34_reg_226;
wire   [0:0] tmp_430_fu_522_p2;
wire   [0:0] tmp_428_fu_510_p2;
wire   [0:0] tmp_429_fu_516_p2;
reg   [3:0] invdar38_reg_238;
reg   [3:0] invdar42_reg_250;
reg   [4:0] invdar_reg_261;
wire   [0:0] tmp_433_fu_573_p2;
wire   [0:0] tmp_431_fu_561_p2;
wire   [0:0] tmp_432_fu_567_p2;
reg   [3:0] invdar48_reg_273;
reg   [3:0] invdar49_reg_285;
reg   [4:0] invdar50_reg_296;
wire   [0:0] tmp_436_fu_624_p2;
wire   [0:0] tmp_434_fu_612_p2;
wire   [0:0] tmp_435_fu_618_p2;
reg   [3:0] invdar51_reg_308;
reg   [3:0] invdar52_reg_320;
reg    ap_reg_grp_subconv_1x1_3214_fu_331_ap_start;
wire    ap_CS_fsm_state17;
reg    ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
reg    ap_reg_grp_subconv_1x1_1612_fu_355_ap_start;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_shuffle_2415_fu_367_ap_start;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_664_fu_403_p1;
wire   [63:0] tmp_665_fu_454_p1;
wire   [63:0] tmp_666_fu_505_p1;
wire   [63:0] tmp_667_fu_556_p1;
wire   [63:0] tmp_668_fu_607_p1;
wire   [14:0] tmp_fu_393_p4;
wire   [12:0] tmp_155_fu_444_p4;
wire   [12:0] tmp_156_fu_495_p4;
wire   [12:0] tmp_157_fu_546_p4;
wire   [12:0] tmp_158_fu_597_p4;
reg   [24:0] ap_NS_fsm;
reg    ap_block_state21_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_reg_grp_subconv_1x1_3214_fu_331_ap_start = 1'b0;
#0 ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start = 1'b0;
#0 ap_reg_grp_subconv_1x1_1612_fu_355_ap_start = 1'b0;
#0 ap_reg_grp_shuffle_2415_fu_367_ap_start = 1'b0;
end

DownsampleUnit0_ceOg #(
    .DataWidth( 32 ),
    .AddressRange( 24576 ),
    .AddressWidth( 15 ))
conv1r_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1r_output_address0),
    .ce0(conv1r_output_ce0),
    .we0(conv1r_output_we0),
    .d0(conv1r_output_d0),
    .q0(conv1r_output_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv2r_ourput_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2r_ourput_0_address0),
    .ce0(conv2r_ourput_0_ce0),
    .we0(conv2r_ourput_0_we0),
    .d0(conv2r_ourput_0_d0),
    .q0(conv2r_ourput_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv3r_ourput_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv3r_ourput_0_address0),
    .ce0(conv3r_ourput_0_ce0),
    .we0(conv3r_ourput_0_we0),
    .d0(conv3r_ourput_0_d0),
    .q0(conv3r_ourput_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv1l_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1l_output_0_address0),
    .ce0(conv1l_output_0_ce0),
    .we0(conv1l_output_0_we0),
    .d0(conv1l_output_0_d0),
    .q0(conv1l_output_0_q0)
);

DownsampleUnit0_cfYi #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
conv2l_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2l_output_0_address0),
    .ce0(conv2l_output_0_ce0),
    .we0(conv2l_output_0_we0),
    .d0(conv2l_output_0_d0),
    .q0(conv2l_output_0_q0)
);

subconv_1x1_3214 grp_subconv_1x1_3214_fu_331(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_3214_fu_331_ap_start),
    .ap_done(grp_subconv_1x1_3214_fu_331_ap_done),
    .ap_idle(grp_subconv_1x1_3214_fu_331_ap_idle),
    .ap_ready(grp_subconv_1x1_3214_fu_331_ap_ready),
    .input_r_address0(grp_subconv_1x1_3214_fu_331_input_r_address0),
    .input_r_ce0(grp_subconv_1x1_3214_fu_331_input_r_ce0),
    .input_r_q0(input_r_q0),
    .weight_address0(grp_subconv_1x1_3214_fu_331_weight_address0),
    .weight_ce0(grp_subconv_1x1_3214_fu_331_weight_ce0),
    .weight_q0(conv1r_weight_q0),
    .bias_address0(grp_subconv_1x1_3214_fu_331_bias_address0),
    .bias_ce0(grp_subconv_1x1_3214_fu_331_bias_ce0),
    .bias_q0(conv1r_bias_q0),
    .output_r_address0(grp_subconv_1x1_3214_fu_331_output_r_address0),
    .output_r_ce0(grp_subconv_1x1_3214_fu_331_output_r_ce0),
    .output_r_we0(grp_subconv_1x1_3214_fu_331_output_r_we0),
    .output_r_d0(grp_subconv_1x1_3214_fu_331_output_r_d0)
);

subconv_3x3_32_strid grp_subconv_3x3_32_strid_fu_342(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_3x3_32_strid_fu_342_ap_start),
    .ap_done(grp_subconv_3x3_32_strid_fu_342_ap_done),
    .ap_idle(grp_subconv_3x3_32_strid_fu_342_ap_idle),
    .ap_ready(grp_subconv_3x3_32_strid_fu_342_ap_ready),
    .input_r_address0(grp_subconv_3x3_32_strid_fu_342_input_r_address0),
    .input_r_ce0(grp_subconv_3x3_32_strid_fu_342_input_r_ce0),
    .input_r_q0(grp_subconv_3x3_32_strid_fu_342_input_r_q0),
    .weight_address0(grp_subconv_3x3_32_strid_fu_342_weight_address0),
    .weight_ce0(grp_subconv_3x3_32_strid_fu_342_weight_ce0),
    .weight_q0(grp_subconv_3x3_32_strid_fu_342_weight_q0),
    .bias_address0(grp_subconv_3x3_32_strid_fu_342_bias_address0),
    .bias_ce0(grp_subconv_3x3_32_strid_fu_342_bias_ce0),
    .bias_q0(grp_subconv_3x3_32_strid_fu_342_bias_q0),
    .output_0_address0(grp_subconv_3x3_32_strid_fu_342_output_0_address0),
    .output_0_ce0(grp_subconv_3x3_32_strid_fu_342_output_0_ce0),
    .output_0_we0(grp_subconv_3x3_32_strid_fu_342_output_0_we0),
    .output_0_d0(grp_subconv_3x3_32_strid_fu_342_output_0_d0)
);

subconv_1x1_1612 grp_subconv_1x1_1612_fu_355(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_1612_fu_355_ap_start),
    .ap_done(grp_subconv_1x1_1612_fu_355_ap_done),
    .ap_idle(grp_subconv_1x1_1612_fu_355_ap_idle),
    .ap_ready(grp_subconv_1x1_1612_fu_355_ap_ready),
    .input_0_address0(grp_subconv_1x1_1612_fu_355_input_0_address0),
    .input_0_ce0(grp_subconv_1x1_1612_fu_355_input_0_ce0),
    .input_0_q0(grp_subconv_1x1_1612_fu_355_input_0_q0),
    .weight_address0(grp_subconv_1x1_1612_fu_355_weight_address0),
    .weight_ce0(grp_subconv_1x1_1612_fu_355_weight_ce0),
    .weight_q0(grp_subconv_1x1_1612_fu_355_weight_q0),
    .bias_address0(grp_subconv_1x1_1612_fu_355_bias_address0),
    .bias_ce0(grp_subconv_1x1_1612_fu_355_bias_ce0),
    .bias_q0(grp_subconv_1x1_1612_fu_355_bias_q0),
    .output_0_address0(grp_subconv_1x1_1612_fu_355_output_0_address0),
    .output_0_ce0(grp_subconv_1x1_1612_fu_355_output_0_ce0),
    .output_0_we0(grp_subconv_1x1_1612_fu_355_output_0_we0),
    .output_0_d0(grp_subconv_1x1_1612_fu_355_output_0_d0)
);

shuffle_2415 grp_shuffle_2415_fu_367(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shuffle_2415_fu_367_ap_start),
    .ap_done(grp_shuffle_2415_fu_367_ap_done),
    .ap_idle(grp_shuffle_2415_fu_367_ap_idle),
    .ap_ready(grp_shuffle_2415_fu_367_ap_ready),
    .left_0_address0(grp_shuffle_2415_fu_367_left_0_address0),
    .left_0_ce0(grp_shuffle_2415_fu_367_left_0_ce0),
    .left_0_q0(conv3r_ourput_0_q0),
    .right_0_address0(grp_shuffle_2415_fu_367_right_0_address0),
    .right_0_ce0(grp_shuffle_2415_fu_367_right_0_ce0),
    .right_0_q0(conv2l_output_0_q0),
    .output_r_address0(grp_shuffle_2415_fu_367_output_r_address0),
    .output_r_ce0(grp_shuffle_2415_fu_367_output_r_ce0),
    .output_r_we0(grp_shuffle_2415_fu_367_output_r_we0),
    .output_r_d0(grp_shuffle_2415_fu_367_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_shuffle_2415_fu_367_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_reg_grp_shuffle_2415_fu_367_ap_start <= 1'b1;
        end else if ((1'b1 == grp_shuffle_2415_fu_367_ap_ready)) begin
            ap_reg_grp_shuffle_2415_fu_367_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22))) begin
            ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_1612_fu_355_ap_ready)) begin
            ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_434_fu_612_p2) & (1'd1 == tmp_435_fu_618_p2) & (1'd1 == tmp_436_fu_624_p2))) begin
            ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_3214_fu_331_ap_ready)) begin
            ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
            ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_3x3_32_strid_fu_342_ap_ready)) begin
            ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_s_fu_408_p2))) begin
        invdar11_reg_180 <= indvarinc12_fu_387_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar11_reg_180 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_408_p2 == 1'd1) & (1'd1 == tmp_423_fu_414_p2) & (tmp_424_fu_420_p2 == 1'd1))) begin
        invdar18_reg_191 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_427_fu_471_p2) & (1'd1 == tmp_425_fu_459_p2) & (1'd1 == tmp_426_fu_465_p2))) begin
        invdar18_reg_191 <= indvarinc19_reg_654;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_425_fu_459_p2) & (1'd0 == tmp_426_fu_465_p2))) begin
        invdar22_reg_203 <= indvarinc23_reg_659;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar22_reg_203 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_425_fu_459_p2))) begin
        invdar27_reg_215 <= indvarinc28_fu_438_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        invdar27_reg_215 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_425_fu_459_p2) & (1'd1 == tmp_426_fu_465_p2) & (1'd1 == tmp_427_fu_471_p2))) begin
        invdar34_reg_226 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_430_fu_522_p2) & (1'd1 == tmp_428_fu_510_p2) & (1'd1 == tmp_429_fu_516_p2))) begin
        invdar34_reg_226 <= indvarinc35_reg_678;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_428_fu_510_p2) & (1'd0 == tmp_429_fu_516_p2))) begin
        invdar38_reg_238 <= indvarinc39_reg_683;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar38_reg_238 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_424_fu_420_p2 == 1'd0) & (tmp_s_fu_408_p2 == 1'd1) & (1'd1 == tmp_423_fu_414_p2))) begin
        invdar3_reg_156 <= indvarinc4_reg_630;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar3_reg_156 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_428_fu_510_p2))) begin
        invdar42_reg_250 <= indvarinc43_fu_489_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        invdar42_reg_250 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_431_fu_561_p2) & (1'd0 == tmp_432_fu_567_p2))) begin
        invdar48_reg_273 <= indvarinc49_reg_707;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        invdar48_reg_273 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_431_fu_561_p2))) begin
        invdar49_reg_285 <= indvarinc50_fu_540_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar49_reg_285 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_431_fu_561_p2) & (1'd1 == tmp_432_fu_567_p2) & (1'd1 == tmp_433_fu_573_p2))) begin
        invdar50_reg_296 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_436_fu_624_p2) & (1'd1 == tmp_434_fu_612_p2) & (1'd1 == tmp_435_fu_618_p2))) begin
        invdar50_reg_296 <= indvarinc51_reg_726;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_434_fu_612_p2) & (1'd0 == tmp_435_fu_618_p2))) begin
        invdar51_reg_308 <= indvarinc52_reg_731;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        invdar51_reg_308 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_434_fu_612_p2))) begin
        invdar52_reg_320 <= indvarinc53_fu_591_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar52_reg_320 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_408_p2 == 1'd1) & (1'd0 == tmp_423_fu_414_p2))) begin
        invdar7_reg_168 <= indvarinc8_reg_635;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar7_reg_168 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_428_fu_510_p2) & (1'd1 == tmp_429_fu_516_p2) & (1'd1 == tmp_430_fu_522_p2))) begin
        invdar_reg_261 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_433_fu_573_p2) & (1'd1 == tmp_431_fu_561_p2) & (1'd1 == tmp_432_fu_567_p2))) begin
        invdar_reg_261 <= indvarinc_reg_702;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc19_reg_654 <= indvarinc19_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc23_reg_659 <= indvarinc23_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc35_reg_678 <= indvarinc35_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc39_reg_683 <= indvarinc39_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvarinc49_reg_707 <= indvarinc49_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc4_reg_630 <= indvarinc4_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvarinc51_reg_726 <= indvarinc51_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvarinc52_reg_731 <= indvarinc52_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc8_reg_635 <= indvarinc8_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc_reg_702 <= indvarinc_fu_528_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_2415_fu_367_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_2415_fu_367_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_bias_ce0 = grp_subconv_3x3_32_strid_fu_342_bias_ce0;
    end else begin
        conv1l_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_address0 = tmp_667_fu_556_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1l_output_0_address0 = grp_subconv_1x1_1612_fu_355_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_address0 = grp_subconv_3x3_32_strid_fu_342_output_0_address0;
    end else begin
        conv1l_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1l_output_0_ce0 = grp_subconv_1x1_1612_fu_355_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_ce0 = grp_subconv_3x3_32_strid_fu_342_output_0_ce0;
    end else begin
        conv1l_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_d0 = grp_subconv_3x3_32_strid_fu_342_output_0_d0;
    end else begin
        conv1l_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_we0 = grp_subconv_3x3_32_strid_fu_342_output_0_we0;
    end else begin
        conv1l_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_weight_ce0 = grp_subconv_3x3_32_strid_fu_342_weight_ce0;
    end else begin
        conv1l_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_address0 = tmp_664_fu_403_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv1r_output_address0 = grp_subconv_3x3_32_strid_fu_342_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_address0 = grp_subconv_1x1_3214_fu_331_output_r_address0;
    end else begin
        conv1r_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv1r_output_ce0 = grp_subconv_3x3_32_strid_fu_342_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_ce0 = grp_subconv_1x1_3214_fu_331_output_r_ce0;
    end else begin
        conv1r_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_d0 = grp_subconv_1x1_3214_fu_331_output_r_d0;
    end else begin
        conv1r_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_we0 = grp_subconv_1x1_3214_fu_331_output_r_we0;
    end else begin
        conv1r_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_bias_ce0 = grp_subconv_1x1_1612_fu_355_bias_ce0;
    end else begin
        conv2l_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_address0 = tmp_668_fu_607_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2l_output_0_address0 = grp_shuffle_2415_fu_367_right_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_address0 = grp_subconv_1x1_1612_fu_355_output_0_address0;
    end else begin
        conv2l_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2l_output_0_ce0 = grp_shuffle_2415_fu_367_right_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_ce0 = grp_subconv_1x1_1612_fu_355_output_0_ce0;
    end else begin
        conv2l_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_d0 = grp_subconv_1x1_1612_fu_355_output_0_d0;
    end else begin
        conv2l_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_we0 = grp_subconv_1x1_1612_fu_355_output_0_we0;
    end else begin
        conv2l_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_weight_ce0 = grp_subconv_1x1_1612_fu_355_weight_ce0;
    end else begin
        conv2l_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_bias_ce0 = grp_subconv_3x3_32_strid_fu_342_bias_ce0;
    end else begin
        conv2r_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_address0 = tmp_665_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv2r_ourput_0_address0 = grp_subconv_1x1_1612_fu_355_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_address0 = grp_subconv_3x3_32_strid_fu_342_output_0_address0;
    end else begin
        conv2r_ourput_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv2r_ourput_0_ce0 = grp_subconv_1x1_1612_fu_355_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_ce0 = grp_subconv_3x3_32_strid_fu_342_output_0_ce0;
    end else begin
        conv2r_ourput_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_d0 = grp_subconv_3x3_32_strid_fu_342_output_0_d0;
    end else begin
        conv2r_ourput_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_we0 = grp_subconv_3x3_32_strid_fu_342_output_0_we0;
    end else begin
        conv2r_ourput_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_weight_ce0 = grp_subconv_3x3_32_strid_fu_342_weight_ce0;
    end else begin
        conv2r_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_bias_ce0 = grp_subconv_1x1_1612_fu_355_bias_ce0;
    end else begin
        conv3r_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_address0 = tmp_666_fu_505_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3r_ourput_0_address0 = grp_shuffle_2415_fu_367_left_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_address0 = grp_subconv_1x1_1612_fu_355_output_0_address0;
    end else begin
        conv3r_ourput_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3r_ourput_0_ce0 = grp_shuffle_2415_fu_367_left_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_ce0 = grp_subconv_1x1_1612_fu_355_output_0_ce0;
    end else begin
        conv3r_ourput_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_d0 = grp_subconv_1x1_1612_fu_355_output_0_d0;
    end else begin
        conv3r_ourput_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_we0 = grp_subconv_1x1_1612_fu_355_output_0_we0;
    end else begin
        conv3r_ourput_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_weight_ce0 = grp_subconv_1x1_1612_fu_355_weight_ce0;
    end else begin
        conv3r_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_1612_fu_355_bias_q0 = conv2l_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_355_bias_q0 = conv3r_bias_q0;
    end else begin
        grp_subconv_1x1_1612_fu_355_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_1612_fu_355_input_0_q0 = conv1l_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_355_input_0_q0 = conv2r_ourput_0_q0;
    end else begin
        grp_subconv_1x1_1612_fu_355_input_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_1612_fu_355_weight_q0 = conv2l_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_1612_fu_355_weight_q0 = conv3r_weight_q0;
    end else begin
        grp_subconv_1x1_1612_fu_355_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_32_strid_fu_342_bias_q0 = conv1l_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_32_strid_fu_342_bias_q0 = conv2r_bias_q0;
    end else begin
        grp_subconv_3x3_32_strid_fu_342_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_32_strid_fu_342_input_r_q0 = input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_32_strid_fu_342_input_r_q0 = conv1r_output_q0;
    end else begin
        grp_subconv_3x3_32_strid_fu_342_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_32_strid_fu_342_weight_q0 = conv1l_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_32_strid_fu_342_weight_q0 = conv2r_weight_q0;
    end else begin
        grp_subconv_3x3_32_strid_fu_342_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        input_r_address0 = grp_subconv_3x3_32_strid_fu_342_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_r_address0 = grp_subconv_1x1_3214_fu_331_input_r_address0;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        input_r_ce0 = grp_subconv_3x3_32_strid_fu_342_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_r_ce0 = grp_subconv_1x1_3214_fu_331_input_r_ce0;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_408_p2 == 1'd1) & (1'd1 == tmp_423_fu_414_p2) & (tmp_424_fu_420_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_424_fu_420_p2 == 1'd0) & (tmp_s_fu_408_p2 == 1'd1) & (1'd1 == tmp_423_fu_414_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_408_p2 == 1'd1) & (1'd0 == tmp_423_fu_414_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_425_fu_459_p2) & (1'd1 == tmp_426_fu_465_p2) & (1'd1 == tmp_427_fu_471_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_427_fu_471_p2) & (1'd1 == tmp_425_fu_459_p2) & (1'd1 == tmp_426_fu_465_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_425_fu_459_p2) & (1'd0 == tmp_426_fu_465_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_428_fu_510_p2) & (1'd1 == tmp_429_fu_516_p2) & (1'd1 == tmp_430_fu_522_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_430_fu_522_p2) & (1'd1 == tmp_428_fu_510_p2) & (1'd1 == tmp_429_fu_516_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_428_fu_510_p2) & (1'd0 == tmp_429_fu_516_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_431_fu_561_p2) & (1'd1 == tmp_432_fu_567_p2) & (1'd1 == tmp_433_fu_573_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_433_fu_573_p2) & (1'd1 == tmp_431_fu_561_p2) & (1'd1 == tmp_432_fu_567_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_431_fu_561_p2) & (1'd0 == tmp_432_fu_567_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_434_fu_612_p2) & (1'd1 == tmp_435_fu_618_p2) & (1'd1 == tmp_436_fu_624_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_436_fu_624_p2) & (1'd1 == tmp_434_fu_612_p2) & (1'd1 == tmp_435_fu_618_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_434_fu_612_p2) & (1'd0 == tmp_435_fu_618_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (grp_subconv_1x1_3214_fu_331_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_subconv_3x3_32_strid_fu_342_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (ap_block_state21_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_subconv_1x1_1612_fu_355_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_2415_fu_367_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state21_on_subcall_done = ((1'b0 == grp_subconv_3x3_32_strid_fu_342_ap_done) | (1'b0 == grp_subconv_1x1_1612_fu_355_ap_done));
end

assign conv1l_bias_address0 = grp_subconv_3x3_32_strid_fu_342_bias_address0;

assign conv1l_weight_address0 = grp_subconv_3x3_32_strid_fu_342_weight_address0;

assign conv1r_bias_address0 = grp_subconv_1x1_3214_fu_331_bias_address0;

assign conv1r_bias_ce0 = grp_subconv_1x1_3214_fu_331_bias_ce0;

assign conv1r_weight_address0 = grp_subconv_1x1_3214_fu_331_weight_address0;

assign conv1r_weight_ce0 = grp_subconv_1x1_3214_fu_331_weight_ce0;

assign conv2l_bias_address0 = grp_subconv_1x1_1612_fu_355_bias_address0;

assign conv2l_weight_address0 = grp_subconv_1x1_1612_fu_355_weight_address0;

assign conv2r_bias_address0 = grp_subconv_3x3_32_strid_fu_342_bias_address0;

assign conv2r_weight_address0 = grp_subconv_3x3_32_strid_fu_342_weight_address0;

assign conv3r_bias_address0 = grp_subconv_1x1_1612_fu_355_bias_address0;

assign conv3r_weight_address0 = grp_subconv_1x1_1612_fu_355_weight_address0;

assign downsampleunit0_outp_address0 = grp_shuffle_2415_fu_367_output_r_address0;

assign downsampleunit0_outp_ce0 = grp_shuffle_2415_fu_367_output_r_ce0;

assign downsampleunit0_outp_d0 = grp_shuffle_2415_fu_367_output_r_d0;

assign downsampleunit0_outp_we0 = grp_shuffle_2415_fu_367_output_r_we0;

assign grp_shuffle_2415_fu_367_ap_start = ap_reg_grp_shuffle_2415_fu_367_ap_start;

assign grp_subconv_1x1_1612_fu_355_ap_start = ap_reg_grp_subconv_1x1_1612_fu_355_ap_start;

assign grp_subconv_1x1_3214_fu_331_ap_start = ap_reg_grp_subconv_1x1_3214_fu_331_ap_start;

assign grp_subconv_3x3_32_strid_fu_342_ap_start = ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start;

assign indvarinc12_fu_387_p2 = (invdar11_reg_180 + 5'd1);

assign indvarinc19_fu_426_p2 = (invdar18_reg_191 + 5'd1);

assign indvarinc23_fu_432_p2 = (invdar22_reg_203 + 4'd1);

assign indvarinc28_fu_438_p2 = (invdar27_reg_215 + 4'd1);

assign indvarinc35_fu_477_p2 = (invdar34_reg_226 + 5'd1);

assign indvarinc39_fu_483_p2 = (invdar38_reg_238 + 4'd1);

assign indvarinc43_fu_489_p2 = (invdar42_reg_250 + 4'd1);

assign indvarinc49_fu_534_p2 = (invdar48_reg_273 + 4'd1);

assign indvarinc4_fu_375_p2 = (invdar3_reg_156 + 5'd1);

assign indvarinc50_fu_540_p2 = (invdar49_reg_285 + 4'd1);

assign indvarinc51_fu_579_p2 = (invdar50_reg_296 + 5'd1);

assign indvarinc52_fu_585_p2 = (invdar51_reg_308 + 4'd1);

assign indvarinc53_fu_591_p2 = (invdar52_reg_320 + 4'd1);

assign indvarinc8_fu_381_p2 = (invdar7_reg_168 + 5'd1);

assign indvarinc_fu_528_p2 = (invdar_reg_261 + 5'd1);

assign tmp_155_fu_444_p4 = {{{invdar18_reg_191}, {invdar22_reg_203}}, {invdar27_reg_215}};

assign tmp_156_fu_495_p4 = {{{invdar34_reg_226}, {invdar38_reg_238}}, {invdar42_reg_250}};

assign tmp_157_fu_546_p4 = {{{invdar_reg_261}, {invdar48_reg_273}}, {invdar49_reg_285}};

assign tmp_158_fu_597_p4 = {{{invdar50_reg_296}, {invdar51_reg_308}}, {invdar52_reg_320}};

assign tmp_423_fu_414_p2 = ((invdar7_reg_168 == 5'd31) ? 1'b1 : 1'b0);

assign tmp_424_fu_420_p2 = ((invdar3_reg_156 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_425_fu_459_p2 = ((invdar27_reg_215 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_426_fu_465_p2 = ((invdar22_reg_203 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_427_fu_471_p2 = ((invdar18_reg_191 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_428_fu_510_p2 = ((invdar42_reg_250 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_429_fu_516_p2 = ((invdar38_reg_238 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_430_fu_522_p2 = ((invdar34_reg_226 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_431_fu_561_p2 = ((invdar49_reg_285 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_432_fu_567_p2 = ((invdar48_reg_273 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_433_fu_573_p2 = ((invdar_reg_261 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_434_fu_612_p2 = ((invdar52_reg_320 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_435_fu_618_p2 = ((invdar51_reg_308 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_436_fu_624_p2 = ((invdar50_reg_296 == 5'd23) ? 1'b1 : 1'b0);

assign tmp_664_fu_403_p1 = tmp_fu_393_p4;

assign tmp_665_fu_454_p1 = tmp_155_fu_444_p4;

assign tmp_666_fu_505_p1 = tmp_156_fu_495_p4;

assign tmp_667_fu_556_p1 = tmp_157_fu_546_p4;

assign tmp_668_fu_607_p1 = tmp_158_fu_597_p4;

assign tmp_fu_393_p4 = {{{invdar3_reg_156}, {invdar7_reg_168}}, {invdar11_reg_180}};

assign tmp_s_fu_408_p2 = ((invdar11_reg_180 == 5'd31) ? 1'b1 : 1'b0);

endmodule //DownsampleUnit0
