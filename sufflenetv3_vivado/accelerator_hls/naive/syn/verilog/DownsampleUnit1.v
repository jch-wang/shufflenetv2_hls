// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DownsampleUnit1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv1r_weight_address0,
        conv1r_weight_ce0,
        conv1r_weight_q0,
        conv1r_bias_address0,
        conv1r_bias_ce0,
        conv1r_bias_q0,
        conv2r_weight_address0,
        conv2r_weight_ce0,
        conv2r_weight_q0,
        conv2r_bias_address0,
        conv2r_bias_ce0,
        conv2r_bias_q0,
        conv3r_weight_address0,
        conv3r_weight_ce0,
        conv3r_weight_q0,
        conv3r_bias_address0,
        conv3r_bias_ce0,
        conv3r_bias_q0,
        conv1l_weight_address0,
        conv1l_weight_ce0,
        conv1l_weight_q0,
        conv1l_bias_address0,
        conv1l_bias_ce0,
        conv1l_bias_q0,
        conv2l_weight_address0,
        conv2l_weight_ce0,
        conv2l_weight_q0,
        conv2l_bias_address0,
        conv2l_bias_ce0,
        conv2l_bias_q0,
        shuffleunit0_2_outpu_address0,
        shuffleunit0_2_outpu_ce0,
        shuffleunit0_2_outpu_q0,
        downsampleunit1_outp_address0,
        downsampleunit1_outp_ce0,
        downsampleunit1_outp_we0,
        downsampleunit1_outp_d0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv1r_weight_address0;
output   conv1r_weight_ce0;
input  [31:0] conv1r_weight_q0;
output  [5:0] conv1r_bias_address0;
output   conv1r_bias_ce0;
input  [31:0] conv1r_bias_q0;
output  [8:0] conv2r_weight_address0;
output   conv2r_weight_ce0;
input  [31:0] conv2r_weight_q0;
output  [5:0] conv2r_bias_address0;
output   conv2r_bias_ce0;
input  [31:0] conv2r_bias_q0;
output  [11:0] conv3r_weight_address0;
output   conv3r_weight_ce0;
input  [31:0] conv3r_weight_q0;
output  [5:0] conv3r_bias_address0;
output   conv3r_bias_ce0;
input  [31:0] conv3r_bias_q0;
output  [8:0] conv1l_weight_address0;
output   conv1l_weight_ce0;
input  [31:0] conv1l_weight_q0;
output  [5:0] conv1l_bias_address0;
output   conv1l_bias_ce0;
input  [31:0] conv1l_bias_q0;
output  [11:0] conv2l_weight_address0;
output   conv2l_weight_ce0;
input  [31:0] conv2l_weight_q0;
output  [5:0] conv2l_bias_address0;
output   conv2l_bias_ce0;
input  [31:0] conv2l_bias_q0;
output  [13:0] shuffleunit0_2_outpu_address0;
output   shuffleunit0_2_outpu_ce0;
input  [31:0] shuffleunit0_2_outpu_q0;
output  [12:0] downsampleunit1_outp_address0;
output   downsampleunit1_outp_ce0;
output   downsampleunit1_outp_we0;
output  [31:0] downsampleunit1_outp_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg conv2r_weight_ce0;
reg conv2r_bias_ce0;
reg conv3r_weight_ce0;
reg conv3r_bias_ce0;
reg conv1l_weight_ce0;
reg conv1l_bias_ce0;
reg conv2l_weight_ce0;
reg conv2l_bias_ce0;
reg[13:0] shuffleunit0_2_outpu_address0;
reg shuffleunit0_2_outpu_ce0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] indvarinc4_fu_379_p2;
reg   [5:0] indvarinc4_reg_634;
wire    ap_CS_fsm_state2;
wire   [3:0] indvarinc8_fu_385_p2;
reg   [3:0] indvarinc8_reg_639;
wire    ap_CS_fsm_state3;
wire   [3:0] indvarinc12_fu_391_p2;
wire    ap_CS_fsm_state4;
wire   [5:0] indvarinc19_fu_430_p2;
reg   [5:0] indvarinc19_reg_658;
wire    ap_CS_fsm_state5;
wire   [2:0] indvarinc23_fu_436_p2;
reg   [2:0] indvarinc23_reg_663;
wire    ap_CS_fsm_state6;
wire   [2:0] indvarinc28_fu_442_p2;
wire    ap_CS_fsm_state7;
wire   [5:0] indvarinc35_fu_481_p2;
reg   [5:0] indvarinc35_reg_682;
wire    ap_CS_fsm_state8;
wire   [2:0] indvarinc39_fu_487_p2;
reg   [2:0] indvarinc39_reg_687;
wire    ap_CS_fsm_state9;
wire   [2:0] indvarinc_fu_493_p2;
wire    ap_CS_fsm_state10;
wire   [5:0] indvarinc43_fu_532_p2;
reg   [5:0] indvarinc43_reg_706;
wire    ap_CS_fsm_state11;
wire   [2:0] indvarinc44_fu_538_p2;
reg   [2:0] indvarinc44_reg_711;
wire    ap_CS_fsm_state12;
wire   [2:0] indvarinc45_fu_544_p2;
wire    ap_CS_fsm_state13;
wire   [5:0] indvarinc46_fu_583_p2;
reg   [5:0] indvarinc46_reg_730;
wire    ap_CS_fsm_state14;
wire   [2:0] indvarinc47_fu_589_p2;
reg   [2:0] indvarinc47_reg_735;
wire    ap_CS_fsm_state15;
wire   [2:0] indvarinc48_fu_595_p2;
wire    ap_CS_fsm_state16;
reg   [13:0] conv1r_output_address0;
reg    conv1r_output_ce0;
reg    conv1r_output_we0;
reg   [31:0] conv1r_output_d0;
wire   [31:0] conv1r_output_q0;
reg   [11:0] conv2r_ourput_0_address0;
reg    conv2r_ourput_0_ce0;
reg    conv2r_ourput_0_we0;
reg   [31:0] conv2r_ourput_0_d0;
wire   [31:0] conv2r_ourput_0_q0;
reg   [11:0] conv3r_ourput_0_address0;
reg    conv3r_ourput_0_ce0;
reg    conv3r_ourput_0_we0;
reg   [31:0] conv3r_ourput_0_d0;
wire   [31:0] conv3r_ourput_0_q0;
reg   [11:0] conv1l_output_0_address0;
reg    conv1l_output_0_ce0;
reg    conv1l_output_0_we0;
reg   [31:0] conv1l_output_0_d0;
wire   [31:0] conv1l_output_0_q0;
reg   [11:0] conv2l_output_0_address0;
reg    conv2l_output_0_ce0;
reg    conv2l_output_0_we0;
reg   [31:0] conv2l_output_0_d0;
wire   [31:0] conv2l_output_0_q0;
wire    grp_subconv_1x1_16p16_fu_335_ap_start;
wire    grp_subconv_1x1_16p16_fu_335_ap_done;
wire    grp_subconv_1x1_16p16_fu_335_ap_idle;
wire    grp_subconv_1x1_16p16_fu_335_ap_ready;
wire   [11:0] grp_subconv_1x1_16p16_fu_335_weight_address0;
wire    grp_subconv_1x1_16p16_fu_335_weight_ce0;
wire   [5:0] grp_subconv_1x1_16p16_fu_335_bias_address0;
wire    grp_subconv_1x1_16p16_fu_335_bias_ce0;
wire   [13:0] grp_subconv_1x1_16p16_fu_335_output_r_address0;
wire    grp_subconv_1x1_16p16_fu_335_output_r_ce0;
wire    grp_subconv_1x1_16p16_fu_335_output_r_we0;
wire   [31:0] grp_subconv_1x1_16p16_fu_335_output_r_d0;
wire   [13:0] grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_address0;
wire    grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_ce0;
wire    grp_subconv_3x3_16_strid_fu_346_ap_start;
wire    grp_subconv_3x3_16_strid_fu_346_ap_done;
wire    grp_subconv_3x3_16_strid_fu_346_ap_idle;
wire    grp_subconv_3x3_16_strid_fu_346_ap_ready;
wire   [13:0] grp_subconv_3x3_16_strid_fu_346_input_r_address0;
wire    grp_subconv_3x3_16_strid_fu_346_input_r_ce0;
reg   [31:0] grp_subconv_3x3_16_strid_fu_346_input_r_q0;
wire   [8:0] grp_subconv_3x3_16_strid_fu_346_weight_address0;
wire    grp_subconv_3x3_16_strid_fu_346_weight_ce0;
reg   [31:0] grp_subconv_3x3_16_strid_fu_346_weight_q0;
wire   [5:0] grp_subconv_3x3_16_strid_fu_346_bias_address0;
wire    grp_subconv_3x3_16_strid_fu_346_bias_ce0;
reg   [31:0] grp_subconv_3x3_16_strid_fu_346_bias_q0;
wire   [11:0] grp_subconv_3x3_16_strid_fu_346_output_0_address0;
wire    grp_subconv_3x3_16_strid_fu_346_output_0_ce0;
wire    grp_subconv_3x3_16_strid_fu_346_output_0_we0;
wire   [31:0] grp_subconv_3x3_16_strid_fu_346_output_0_d0;
wire    grp_subconv_1x1_89_fu_359_ap_start;
wire    grp_subconv_1x1_89_fu_359_ap_done;
wire    grp_subconv_1x1_89_fu_359_ap_idle;
wire    grp_subconv_1x1_89_fu_359_ap_ready;
wire   [11:0] grp_subconv_1x1_89_fu_359_input_0_address0;
wire    grp_subconv_1x1_89_fu_359_input_0_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_359_input_0_q0;
wire   [11:0] grp_subconv_1x1_89_fu_359_weight_address0;
wire    grp_subconv_1x1_89_fu_359_weight_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_359_weight_q0;
wire   [5:0] grp_subconv_1x1_89_fu_359_bias_address0;
wire    grp_subconv_1x1_89_fu_359_bias_ce0;
reg   [31:0] grp_subconv_1x1_89_fu_359_bias_q0;
wire   [11:0] grp_subconv_1x1_89_fu_359_output_0_address0;
wire    grp_subconv_1x1_89_fu_359_output_0_ce0;
wire    grp_subconv_1x1_89_fu_359_output_0_we0;
wire   [31:0] grp_subconv_1x1_89_fu_359_output_0_d0;
wire    grp_shuffle_4811_fu_371_ap_start;
wire    grp_shuffle_4811_fu_371_ap_done;
wire    grp_shuffle_4811_fu_371_ap_idle;
wire    grp_shuffle_4811_fu_371_ap_ready;
wire   [11:0] grp_shuffle_4811_fu_371_left_0_address0;
wire    grp_shuffle_4811_fu_371_left_0_ce0;
wire   [11:0] grp_shuffle_4811_fu_371_right_0_address0;
wire    grp_shuffle_4811_fu_371_right_0_ce0;
wire   [12:0] grp_shuffle_4811_fu_371_output_r_address0;
wire    grp_shuffle_4811_fu_371_output_r_ce0;
wire    grp_shuffle_4811_fu_371_output_r_we0;
wire   [31:0] grp_shuffle_4811_fu_371_output_r_d0;
reg   [5:0] invdar3_reg_160;
wire   [0:0] tmp_410_fu_424_p2;
wire   [0:0] tmp_s_fu_412_p2;
wire   [0:0] tmp_409_fu_418_p2;
reg   [3:0] invdar7_reg_172;
reg   [3:0] invdar11_reg_184;
reg   [5:0] invdar18_reg_195;
wire   [0:0] tmp_413_fu_475_p2;
wire   [0:0] tmp_411_fu_463_p2;
wire   [0:0] tmp_412_fu_469_p2;
reg   [2:0] invdar22_reg_207;
reg   [2:0] invdar27_reg_219;
reg   [5:0] invdar34_reg_230;
wire   [0:0] tmp_416_fu_526_p2;
wire   [0:0] tmp_414_fu_514_p2;
wire   [0:0] tmp_415_fu_520_p2;
reg   [2:0] invdar38_reg_242;
reg   [2:0] invdar_reg_254;
reg   [5:0] invdar42_reg_265;
wire   [0:0] tmp_419_fu_577_p2;
wire   [0:0] tmp_417_fu_565_p2;
wire   [0:0] tmp_418_fu_571_p2;
reg   [2:0] invdar43_reg_277;
reg   [2:0] invdar44_reg_289;
reg   [5:0] invdar45_reg_300;
wire   [0:0] tmp_422_fu_628_p2;
wire   [0:0] tmp_420_fu_616_p2;
wire   [0:0] tmp_421_fu_622_p2;
reg   [2:0] invdar46_reg_312;
reg   [2:0] invdar47_reg_324;
reg    ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start;
wire    ap_CS_fsm_state17;
reg    ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
reg    ap_reg_grp_subconv_1x1_89_fu_359_ap_start;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_shuffle_4811_fu_371_ap_start;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_659_fu_407_p1;
wire   [63:0] tmp_660_fu_458_p1;
wire   [63:0] tmp_661_fu_509_p1;
wire   [63:0] tmp_662_fu_560_p1;
wire   [63:0] tmp_663_fu_611_p1;
wire   [13:0] tmp_fu_397_p4;
wire   [11:0] tmp_151_fu_448_p4;
wire   [11:0] tmp_152_fu_499_p4;
wire   [11:0] tmp_153_fu_550_p4;
wire   [11:0] tmp_154_fu_601_p4;
reg   [24:0] ap_NS_fsm;
reg    ap_block_state21_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start = 1'b0;
#0 ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start = 1'b0;
#0 ap_reg_grp_subconv_1x1_89_fu_359_ap_start = 1'b0;
#0 ap_reg_grp_shuffle_4811_fu_371_ap_start = 1'b0;
end

DownsampleUnit1_cocq #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
conv1r_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1r_output_address0),
    .ce0(conv1r_output_ce0),
    .we0(conv1r_output_we0),
    .d0(conv1r_output_d0),
    .q0(conv1r_output_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv2r_ourput_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2r_ourput_0_address0),
    .ce0(conv2r_ourput_0_ce0),
    .we0(conv2r_ourput_0_we0),
    .d0(conv2r_ourput_0_d0),
    .q0(conv2r_ourput_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv3r_ourput_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv3r_ourput_0_address0),
    .ce0(conv3r_ourput_0_ce0),
    .we0(conv3r_ourput_0_we0),
    .d0(conv3r_ourput_0_d0),
    .q0(conv3r_ourput_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv1l_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1l_output_0_address0),
    .ce0(conv1l_output_0_ce0),
    .we0(conv1l_output_0_we0),
    .d0(conv1l_output_0_d0),
    .q0(conv1l_output_0_q0)
);

DownsampleUnit1_cpcA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv2l_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2l_output_0_address0),
    .ce0(conv2l_output_0_ce0),
    .we0(conv2l_output_0_we0),
    .d0(conv2l_output_0_d0),
    .q0(conv2l_output_0_q0)
);

subconv_1x1_16p16 grp_subconv_1x1_16p16_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_16p16_fu_335_ap_start),
    .ap_done(grp_subconv_1x1_16p16_fu_335_ap_done),
    .ap_idle(grp_subconv_1x1_16p16_fu_335_ap_idle),
    .ap_ready(grp_subconv_1x1_16p16_fu_335_ap_ready),
    .weight_address0(grp_subconv_1x1_16p16_fu_335_weight_address0),
    .weight_ce0(grp_subconv_1x1_16p16_fu_335_weight_ce0),
    .weight_q0(conv1r_weight_q0),
    .bias_address0(grp_subconv_1x1_16p16_fu_335_bias_address0),
    .bias_ce0(grp_subconv_1x1_16p16_fu_335_bias_ce0),
    .bias_q0(conv1r_bias_q0),
    .output_r_address0(grp_subconv_1x1_16p16_fu_335_output_r_address0),
    .output_r_ce0(grp_subconv_1x1_16p16_fu_335_output_r_ce0),
    .output_r_we0(grp_subconv_1x1_16p16_fu_335_output_r_we0),
    .output_r_d0(grp_subconv_1x1_16p16_fu_335_output_r_d0),
    .shuffleunit0_2_outpu_address0(grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_address0),
    .shuffleunit0_2_outpu_ce0(grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_ce0),
    .shuffleunit0_2_outpu_q0(shuffleunit0_2_outpu_q0)
);

subconv_3x3_16_strid grp_subconv_3x3_16_strid_fu_346(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_3x3_16_strid_fu_346_ap_start),
    .ap_done(grp_subconv_3x3_16_strid_fu_346_ap_done),
    .ap_idle(grp_subconv_3x3_16_strid_fu_346_ap_idle),
    .ap_ready(grp_subconv_3x3_16_strid_fu_346_ap_ready),
    .input_r_address0(grp_subconv_3x3_16_strid_fu_346_input_r_address0),
    .input_r_ce0(grp_subconv_3x3_16_strid_fu_346_input_r_ce0),
    .input_r_q0(grp_subconv_3x3_16_strid_fu_346_input_r_q0),
    .weight_address0(grp_subconv_3x3_16_strid_fu_346_weight_address0),
    .weight_ce0(grp_subconv_3x3_16_strid_fu_346_weight_ce0),
    .weight_q0(grp_subconv_3x3_16_strid_fu_346_weight_q0),
    .bias_address0(grp_subconv_3x3_16_strid_fu_346_bias_address0),
    .bias_ce0(grp_subconv_3x3_16_strid_fu_346_bias_ce0),
    .bias_q0(grp_subconv_3x3_16_strid_fu_346_bias_q0),
    .output_0_address0(grp_subconv_3x3_16_strid_fu_346_output_0_address0),
    .output_0_ce0(grp_subconv_3x3_16_strid_fu_346_output_0_ce0),
    .output_0_we0(grp_subconv_3x3_16_strid_fu_346_output_0_we0),
    .output_0_d0(grp_subconv_3x3_16_strid_fu_346_output_0_d0)
);

subconv_1x1_89 grp_subconv_1x1_89_fu_359(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_89_fu_359_ap_start),
    .ap_done(grp_subconv_1x1_89_fu_359_ap_done),
    .ap_idle(grp_subconv_1x1_89_fu_359_ap_idle),
    .ap_ready(grp_subconv_1x1_89_fu_359_ap_ready),
    .input_0_address0(grp_subconv_1x1_89_fu_359_input_0_address0),
    .input_0_ce0(grp_subconv_1x1_89_fu_359_input_0_ce0),
    .input_0_q0(grp_subconv_1x1_89_fu_359_input_0_q0),
    .weight_address0(grp_subconv_1x1_89_fu_359_weight_address0),
    .weight_ce0(grp_subconv_1x1_89_fu_359_weight_ce0),
    .weight_q0(grp_subconv_1x1_89_fu_359_weight_q0),
    .bias_address0(grp_subconv_1x1_89_fu_359_bias_address0),
    .bias_ce0(grp_subconv_1x1_89_fu_359_bias_ce0),
    .bias_q0(grp_subconv_1x1_89_fu_359_bias_q0),
    .output_0_address0(grp_subconv_1x1_89_fu_359_output_0_address0),
    .output_0_ce0(grp_subconv_1x1_89_fu_359_output_0_ce0),
    .output_0_we0(grp_subconv_1x1_89_fu_359_output_0_we0),
    .output_0_d0(grp_subconv_1x1_89_fu_359_output_0_d0)
);

shuffle_4811 grp_shuffle_4811_fu_371(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shuffle_4811_fu_371_ap_start),
    .ap_done(grp_shuffle_4811_fu_371_ap_done),
    .ap_idle(grp_shuffle_4811_fu_371_ap_idle),
    .ap_ready(grp_shuffle_4811_fu_371_ap_ready),
    .left_0_address0(grp_shuffle_4811_fu_371_left_0_address0),
    .left_0_ce0(grp_shuffle_4811_fu_371_left_0_ce0),
    .left_0_q0(conv3r_ourput_0_q0),
    .right_0_address0(grp_shuffle_4811_fu_371_right_0_address0),
    .right_0_ce0(grp_shuffle_4811_fu_371_right_0_ce0),
    .right_0_q0(conv2l_output_0_q0),
    .output_r_address0(grp_shuffle_4811_fu_371_output_r_address0),
    .output_r_ce0(grp_shuffle_4811_fu_371_output_r_ce0),
    .output_r_we0(grp_shuffle_4811_fu_371_output_r_we0),
    .output_r_d0(grp_shuffle_4811_fu_371_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_shuffle_4811_fu_371_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_reg_grp_shuffle_4811_fu_371_ap_start <= 1'b1;
        end else if ((1'b1 == grp_shuffle_4811_fu_371_ap_ready)) begin
            ap_reg_grp_shuffle_4811_fu_371_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_420_fu_616_p2) & (1'd1 == tmp_421_fu_622_p2) & (1'd1 == tmp_422_fu_628_p2))) begin
            ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_16p16_fu_335_ap_ready)) begin
            ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_89_fu_359_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22))) begin
            ap_reg_grp_subconv_1x1_89_fu_359_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_89_fu_359_ap_ready)) begin
            ap_reg_grp_subconv_1x1_89_fu_359_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
            ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_3x3_16_strid_fu_346_ap_ready)) begin
            ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_s_fu_412_p2))) begin
        invdar11_reg_184 <= indvarinc12_fu_391_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar11_reg_184 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_412_p2 == 1'd1) & (1'd1 == tmp_409_fu_418_p2) & (tmp_410_fu_424_p2 == 1'd1))) begin
        invdar18_reg_195 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_413_fu_475_p2) & (1'd1 == tmp_411_fu_463_p2) & (1'd1 == tmp_412_fu_469_p2))) begin
        invdar18_reg_195 <= indvarinc19_reg_658;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_411_fu_463_p2) & (1'd0 == tmp_412_fu_469_p2))) begin
        invdar22_reg_207 <= indvarinc23_reg_663;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar22_reg_207 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_411_fu_463_p2))) begin
        invdar27_reg_219 <= indvarinc28_fu_442_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        invdar27_reg_219 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_411_fu_463_p2) & (1'd1 == tmp_412_fu_469_p2) & (1'd1 == tmp_413_fu_475_p2))) begin
        invdar34_reg_230 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_416_fu_526_p2) & (1'd1 == tmp_414_fu_514_p2) & (1'd1 == tmp_415_fu_520_p2))) begin
        invdar34_reg_230 <= indvarinc35_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_414_fu_514_p2) & (1'd0 == tmp_415_fu_520_p2))) begin
        invdar38_reg_242 <= indvarinc39_reg_687;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar38_reg_242 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_410_fu_424_p2 == 1'd0) & (tmp_s_fu_412_p2 == 1'd1) & (1'd1 == tmp_409_fu_418_p2))) begin
        invdar3_reg_160 <= indvarinc4_reg_634;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar3_reg_160 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_414_fu_514_p2) & (1'd1 == tmp_415_fu_520_p2) & (1'd1 == tmp_416_fu_526_p2))) begin
        invdar42_reg_265 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_419_fu_577_p2) & (1'd1 == tmp_417_fu_565_p2) & (1'd1 == tmp_418_fu_571_p2))) begin
        invdar42_reg_265 <= indvarinc43_reg_706;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_417_fu_565_p2) & (1'd0 == tmp_418_fu_571_p2))) begin
        invdar43_reg_277 <= indvarinc44_reg_711;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        invdar43_reg_277 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_417_fu_565_p2))) begin
        invdar44_reg_289 <= indvarinc45_fu_544_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar44_reg_289 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_417_fu_565_p2) & (1'd1 == tmp_418_fu_571_p2) & (1'd1 == tmp_419_fu_577_p2))) begin
        invdar45_reg_300 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_422_fu_628_p2) & (1'd1 == tmp_420_fu_616_p2) & (1'd1 == tmp_421_fu_622_p2))) begin
        invdar45_reg_300 <= indvarinc46_reg_730;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_420_fu_616_p2) & (1'd0 == tmp_421_fu_622_p2))) begin
        invdar46_reg_312 <= indvarinc47_reg_735;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        invdar46_reg_312 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_420_fu_616_p2))) begin
        invdar47_reg_324 <= indvarinc48_fu_595_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar47_reg_324 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_412_p2 == 1'd1) & (1'd0 == tmp_409_fu_418_p2))) begin
        invdar7_reg_172 <= indvarinc8_reg_639;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar7_reg_172 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_414_fu_514_p2))) begin
        invdar_reg_254 <= indvarinc_fu_493_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        invdar_reg_254 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc19_reg_658 <= indvarinc19_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc23_reg_663 <= indvarinc23_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc35_reg_682 <= indvarinc35_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc39_reg_687 <= indvarinc39_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc43_reg_706 <= indvarinc43_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvarinc44_reg_711 <= indvarinc44_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvarinc46_reg_730 <= indvarinc46_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvarinc47_reg_735 <= indvarinc47_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc4_reg_634 <= indvarinc4_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc8_reg_639 <= indvarinc8_fu_385_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_4811_fu_371_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_4811_fu_371_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_bias_ce0 = grp_subconv_3x3_16_strid_fu_346_bias_ce0;
    end else begin
        conv1l_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_address0 = tmp_662_fu_560_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1l_output_0_address0 = grp_subconv_1x1_89_fu_359_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_address0 = grp_subconv_3x3_16_strid_fu_346_output_0_address0;
    end else begin
        conv1l_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1l_output_0_ce0 = grp_subconv_1x1_89_fu_359_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_ce0 = grp_subconv_3x3_16_strid_fu_346_output_0_ce0;
    end else begin
        conv1l_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_d0 = grp_subconv_3x3_16_strid_fu_346_output_0_d0;
    end else begin
        conv1l_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1l_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_output_0_we0 = grp_subconv_3x3_16_strid_fu_346_output_0_we0;
    end else begin
        conv1l_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1l_weight_ce0 = grp_subconv_3x3_16_strid_fu_346_weight_ce0;
    end else begin
        conv1l_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_address0 = tmp_659_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv1r_output_address0 = grp_subconv_3x3_16_strid_fu_346_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_address0 = grp_subconv_1x1_16p16_fu_335_output_r_address0;
    end else begin
        conv1r_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv1r_output_ce0 = grp_subconv_3x3_16_strid_fu_346_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_ce0 = grp_subconv_1x1_16p16_fu_335_output_r_ce0;
    end else begin
        conv1r_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_d0 = grp_subconv_1x1_16p16_fu_335_output_r_d0;
    end else begin
        conv1r_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1r_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1r_output_we0 = grp_subconv_1x1_16p16_fu_335_output_r_we0;
    end else begin
        conv1r_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_bias_ce0 = grp_subconv_1x1_89_fu_359_bias_ce0;
    end else begin
        conv2l_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_address0 = tmp_663_fu_611_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2l_output_0_address0 = grp_shuffle_4811_fu_371_right_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_address0 = grp_subconv_1x1_89_fu_359_output_0_address0;
    end else begin
        conv2l_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2l_output_0_ce0 = grp_shuffle_4811_fu_371_right_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_ce0 = grp_subconv_1x1_89_fu_359_output_0_ce0;
    end else begin
        conv2l_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_d0 = grp_subconv_1x1_89_fu_359_output_0_d0;
    end else begin
        conv2l_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv2l_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_output_0_we0 = grp_subconv_1x1_89_fu_359_output_0_we0;
    end else begin
        conv2l_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2l_weight_ce0 = grp_subconv_1x1_89_fu_359_weight_ce0;
    end else begin
        conv2l_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_bias_ce0 = grp_subconv_3x3_16_strid_fu_346_bias_ce0;
    end else begin
        conv2r_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_address0 = tmp_660_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv2r_ourput_0_address0 = grp_subconv_1x1_89_fu_359_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_address0 = grp_subconv_3x3_16_strid_fu_346_output_0_address0;
    end else begin
        conv2r_ourput_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv2r_ourput_0_ce0 = grp_subconv_1x1_89_fu_359_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_ce0 = grp_subconv_3x3_16_strid_fu_346_output_0_ce0;
    end else begin
        conv2r_ourput_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_d0 = grp_subconv_3x3_16_strid_fu_346_output_0_d0;
    end else begin
        conv2r_ourput_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv2r_ourput_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_ourput_0_we0 = grp_subconv_3x3_16_strid_fu_346_output_0_we0;
    end else begin
        conv2r_ourput_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2r_weight_ce0 = grp_subconv_3x3_16_strid_fu_346_weight_ce0;
    end else begin
        conv2r_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_bias_ce0 = grp_subconv_1x1_89_fu_359_bias_ce0;
    end else begin
        conv3r_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_address0 = tmp_661_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3r_ourput_0_address0 = grp_shuffle_4811_fu_371_left_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_address0 = grp_subconv_1x1_89_fu_359_output_0_address0;
    end else begin
        conv3r_ourput_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3r_ourput_0_ce0 = grp_shuffle_4811_fu_371_left_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_ce0 = grp_subconv_1x1_89_fu_359_output_0_ce0;
    end else begin
        conv3r_ourput_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_d0 = grp_subconv_1x1_89_fu_359_output_0_d0;
    end else begin
        conv3r_ourput_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv3r_ourput_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_ourput_0_we0 = grp_subconv_1x1_89_fu_359_output_0_we0;
    end else begin
        conv3r_ourput_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv3r_weight_ce0 = grp_subconv_1x1_89_fu_359_weight_ce0;
    end else begin
        conv3r_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_89_fu_359_bias_q0 = conv2l_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_359_bias_q0 = conv3r_bias_q0;
    end else begin
        grp_subconv_1x1_89_fu_359_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_89_fu_359_input_0_q0 = conv1l_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_359_input_0_q0 = conv2r_ourput_0_q0;
    end else begin
        grp_subconv_1x1_89_fu_359_input_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_subconv_1x1_89_fu_359_weight_q0 = conv2l_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_89_fu_359_weight_q0 = conv3r_weight_q0;
    end else begin
        grp_subconv_1x1_89_fu_359_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_16_strid_fu_346_bias_q0 = conv1l_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_16_strid_fu_346_bias_q0 = conv2r_bias_q0;
    end else begin
        grp_subconv_3x3_16_strid_fu_346_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_16_strid_fu_346_input_r_q0 = shuffleunit0_2_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_16_strid_fu_346_input_r_q0 = conv1r_output_q0;
    end else begin
        grp_subconv_3x3_16_strid_fu_346_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_3x3_16_strid_fu_346_weight_q0 = conv1l_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_subconv_3x3_16_strid_fu_346_weight_q0 = conv2r_weight_q0;
    end else begin
        grp_subconv_3x3_16_strid_fu_346_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        shuffleunit0_2_outpu_address0 = grp_subconv_3x3_16_strid_fu_346_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        shuffleunit0_2_outpu_address0 = grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_address0;
    end else begin
        shuffleunit0_2_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        shuffleunit0_2_outpu_ce0 = grp_subconv_3x3_16_strid_fu_346_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        shuffleunit0_2_outpu_ce0 = grp_subconv_1x1_16p16_fu_335_shuffleunit0_2_outpu_ce0;
    end else begin
        shuffleunit0_2_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_412_p2 == 1'd1) & (1'd1 == tmp_409_fu_418_p2) & (tmp_410_fu_424_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_410_fu_424_p2 == 1'd0) & (tmp_s_fu_412_p2 == 1'd1) & (1'd1 == tmp_409_fu_418_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_412_p2 == 1'd1) & (1'd0 == tmp_409_fu_418_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_411_fu_463_p2) & (1'd1 == tmp_412_fu_469_p2) & (1'd1 == tmp_413_fu_475_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_413_fu_475_p2) & (1'd1 == tmp_411_fu_463_p2) & (1'd1 == tmp_412_fu_469_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_411_fu_463_p2) & (1'd0 == tmp_412_fu_469_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_414_fu_514_p2) & (1'd1 == tmp_415_fu_520_p2) & (1'd1 == tmp_416_fu_526_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_416_fu_526_p2) & (1'd1 == tmp_414_fu_514_p2) & (1'd1 == tmp_415_fu_520_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_414_fu_514_p2) & (1'd0 == tmp_415_fu_520_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_417_fu_565_p2) & (1'd1 == tmp_418_fu_571_p2) & (1'd1 == tmp_419_fu_577_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_419_fu_577_p2) & (1'd1 == tmp_417_fu_565_p2) & (1'd1 == tmp_418_fu_571_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_417_fu_565_p2) & (1'd0 == tmp_418_fu_571_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_420_fu_616_p2) & (1'd1 == tmp_421_fu_622_p2) & (1'd1 == tmp_422_fu_628_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_422_fu_628_p2) & (1'd1 == tmp_420_fu_616_p2) & (1'd1 == tmp_421_fu_622_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_420_fu_616_p2) & (1'd0 == tmp_421_fu_622_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (grp_subconv_1x1_16p16_fu_335_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_subconv_3x3_16_strid_fu_346_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (ap_block_state21_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_subconv_1x1_89_fu_359_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_shuffle_4811_fu_371_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state21_on_subcall_done = ((1'b0 == grp_subconv_3x3_16_strid_fu_346_ap_done) | (1'b0 == grp_subconv_1x1_89_fu_359_ap_done));
end

assign conv1l_bias_address0 = grp_subconv_3x3_16_strid_fu_346_bias_address0;

assign conv1l_weight_address0 = grp_subconv_3x3_16_strid_fu_346_weight_address0;

assign conv1r_bias_address0 = grp_subconv_1x1_16p16_fu_335_bias_address0;

assign conv1r_bias_ce0 = grp_subconv_1x1_16p16_fu_335_bias_ce0;

assign conv1r_weight_address0 = grp_subconv_1x1_16p16_fu_335_weight_address0;

assign conv1r_weight_ce0 = grp_subconv_1x1_16p16_fu_335_weight_ce0;

assign conv2l_bias_address0 = grp_subconv_1x1_89_fu_359_bias_address0;

assign conv2l_weight_address0 = grp_subconv_1x1_89_fu_359_weight_address0;

assign conv2r_bias_address0 = grp_subconv_3x3_16_strid_fu_346_bias_address0;

assign conv2r_weight_address0 = grp_subconv_3x3_16_strid_fu_346_weight_address0;

assign conv3r_bias_address0 = grp_subconv_1x1_89_fu_359_bias_address0;

assign conv3r_weight_address0 = grp_subconv_1x1_89_fu_359_weight_address0;

assign downsampleunit1_outp_address0 = grp_shuffle_4811_fu_371_output_r_address0;

assign downsampleunit1_outp_ce0 = grp_shuffle_4811_fu_371_output_r_ce0;

assign downsampleunit1_outp_d0 = grp_shuffle_4811_fu_371_output_r_d0;

assign downsampleunit1_outp_we0 = grp_shuffle_4811_fu_371_output_r_we0;

assign grp_shuffle_4811_fu_371_ap_start = ap_reg_grp_shuffle_4811_fu_371_ap_start;

assign grp_subconv_1x1_16p16_fu_335_ap_start = ap_reg_grp_subconv_1x1_16p16_fu_335_ap_start;

assign grp_subconv_1x1_89_fu_359_ap_start = ap_reg_grp_subconv_1x1_89_fu_359_ap_start;

assign grp_subconv_3x3_16_strid_fu_346_ap_start = ap_reg_grp_subconv_3x3_16_strid_fu_346_ap_start;

assign indvarinc12_fu_391_p2 = (invdar11_reg_184 + 4'd1);

assign indvarinc19_fu_430_p2 = (invdar18_reg_195 + 6'd1);

assign indvarinc23_fu_436_p2 = (invdar22_reg_207 + 3'd1);

assign indvarinc28_fu_442_p2 = (invdar27_reg_219 + 3'd1);

assign indvarinc35_fu_481_p2 = (invdar34_reg_230 + 6'd1);

assign indvarinc39_fu_487_p2 = (invdar38_reg_242 + 3'd1);

assign indvarinc43_fu_532_p2 = (invdar42_reg_265 + 6'd1);

assign indvarinc44_fu_538_p2 = (invdar43_reg_277 + 3'd1);

assign indvarinc45_fu_544_p2 = (invdar44_reg_289 + 3'd1);

assign indvarinc46_fu_583_p2 = (invdar45_reg_300 + 6'd1);

assign indvarinc47_fu_589_p2 = (invdar46_reg_312 + 3'd1);

assign indvarinc48_fu_595_p2 = (invdar47_reg_324 + 3'd1);

assign indvarinc4_fu_379_p2 = (invdar3_reg_160 + 6'd1);

assign indvarinc8_fu_385_p2 = (invdar7_reg_172 + 4'd1);

assign indvarinc_fu_493_p2 = (invdar_reg_254 + 3'd1);

assign tmp_151_fu_448_p4 = {{{invdar18_reg_195}, {invdar22_reg_207}}, {invdar27_reg_219}};

assign tmp_152_fu_499_p4 = {{{invdar34_reg_230}, {invdar38_reg_242}}, {invdar_reg_254}};

assign tmp_153_fu_550_p4 = {{{invdar42_reg_265}, {invdar43_reg_277}}, {invdar44_reg_289}};

assign tmp_154_fu_601_p4 = {{{invdar45_reg_300}, {invdar46_reg_312}}, {invdar47_reg_324}};

assign tmp_409_fu_418_p2 = ((invdar7_reg_172 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_410_fu_424_p2 = ((invdar3_reg_160 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_411_fu_463_p2 = ((invdar27_reg_219 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_412_fu_469_p2 = ((invdar22_reg_207 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_413_fu_475_p2 = ((invdar18_reg_195 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_414_fu_514_p2 = ((invdar_reg_254 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_415_fu_520_p2 = ((invdar38_reg_242 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_416_fu_526_p2 = ((invdar34_reg_230 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_417_fu_565_p2 = ((invdar44_reg_289 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_418_fu_571_p2 = ((invdar43_reg_277 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_419_fu_577_p2 = ((invdar42_reg_265 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_420_fu_616_p2 = ((invdar47_reg_324 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_421_fu_622_p2 = ((invdar46_reg_312 == 3'd7) ? 1'b1 : 1'b0);

assign tmp_422_fu_628_p2 = ((invdar45_reg_300 == 6'd47) ? 1'b1 : 1'b0);

assign tmp_659_fu_407_p1 = tmp_fu_397_p4;

assign tmp_660_fu_458_p1 = tmp_151_fu_448_p4;

assign tmp_661_fu_509_p1 = tmp_152_fu_499_p4;

assign tmp_662_fu_560_p1 = tmp_153_fu_550_p4;

assign tmp_663_fu_611_p1 = tmp_154_fu_601_p4;

assign tmp_fu_397_p4 = {{{invdar3_reg_160}, {invdar7_reg_172}}, {invdar11_reg_184}};

assign tmp_s_fu_412_p2 = ((invdar11_reg_184 == 4'd15) ? 1'b1 : 1'b0);

endmodule //DownsampleUnit1
