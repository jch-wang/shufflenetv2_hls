// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _subconv_1x1_3214_HH_
#define _subconv_1x1_3214_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_faddbkb.h"
#include "ShuffleNetV2_fmulcud.h"
#include "ShuffleNetV2_fcmpdEe.h"

namespace ap_rtl {

struct subconv_1x1_3214 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<10> > weight_address0;
    sc_out< sc_logic > weight_ce0;
    sc_in< sc_lv<32> > weight_q0;
    sc_out< sc_lv<5> > bias_address0;
    sc_out< sc_logic > bias_ce0;
    sc_in< sc_lv<32> > bias_q0;
    sc_out< sc_lv<15> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    subconv_1x1_3214(sc_module_name name);
    SC_HAS_PROCESS(subconv_1x1_3214);

    ~subconv_1x1_3214();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_faddbkb<1,5,32,32,32>* ShuffleNetV2_faddbkb_x_U8;
    ShuffleNetV2_fmulcud<1,4,32,32,32>* ShuffleNetV2_fmulcud_x_U9;
    ShuffleNetV2_fcmpdEe<1,1,32,32,1>* ShuffleNetV2_fcmpdEe_x_U10;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > co_10_fu_170_p2;
    sc_signal< sc_lv<5> > co_10_reg_378;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > p_shl_cast_fu_189_p1;
    sc_signal< sc_lv<11> > p_shl_cast_reg_383;
    sc_signal< sc_lv<1> > exitcond3_fu_164_p2;
    sc_signal< sc_lv<11> > tmp_117_fu_205_p2;
    sc_signal< sc_lv<11> > tmp_117_reg_388;
    sc_signal< sc_lv<5> > bias_addr_reg_393;
    sc_signal< sc_lv<6> > h_10_fu_217_p2;
    sc_signal< sc_lv<6> > h_10_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > tmp_cast_fu_223_p1;
    sc_signal< sc_lv<11> > tmp_cast_reg_406;
    sc_signal< sc_lv<1> > exitcond2_fu_211_p2;
    sc_signal< sc_lv<16> > tmp_177_cast_fu_232_p3;
    sc_signal< sc_lv<16> > tmp_177_cast_reg_411;
    sc_signal< sc_lv<6> > w_10_fu_246_p2;
    sc_signal< sc_lv<6> > w_10_reg_419;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > tmp_88_cast_fu_252_p1;
    sc_signal< sc_lv<16> > tmp_88_cast_reg_424;
    sc_signal< sc_lv<1> > exitcond1_fu_240_p2;
    sc_signal< sc_lv<15> > output_addr_reg_429;
    sc_signal< sc_lv<5> > ci_4_fu_272_p2;
    sc_signal< sc_lv<5> > ci_4_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_266_p2;
    sc_signal< sc_lv<32> > weight_load_reg_452;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > input_load_reg_457;
    sc_signal< sc_lv<32> > grp_fu_155_p2;
    sc_signal< sc_lv<32> > tmp_90_reg_462;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_150_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > bias_load_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > result_reg_477;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > tmp_19_fu_159_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_484;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<5> > co_reg_94;
    sc_signal< sc_lv<6> > h_reg_105;
    sc_signal< sc_lv<6> > w_reg_116;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > sum_reg_127;
    sc_signal< sc_lv<5> > ci_reg_139;
    sc_signal< sc_lv<64> > tmp_fu_176_p1;
    sc_signal< sc_lv<64> > tmp_178_cast_fu_261_p1;
    sc_signal< sc_lv<64> > tmp_184_cast_fu_312_p1;
    sc_signal< sc_lv<64> > tmp_185_cast_fu_322_p1;
    sc_signal< sc_lv<32> > grp_fu_150_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<10> > tmp_s_fu_181_p3;
    sc_signal< sc_lv<8> > tmp_116_fu_193_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_201_p1;
    sc_signal< sc_lv<11> > tmp_118_fu_227_p2;
    sc_signal< sc_lv<16> > tmp_119_fu_256_p2;
    sc_signal< sc_lv<10> > tmp_120_fu_282_p3;
    sc_signal< sc_lv<11> > tmp_180_cast_fu_290_p1;
    sc_signal< sc_lv<11> > tmp_121_fu_294_p2;
    sc_signal< sc_lv<16> > tmp_183_cast_fu_299_p3;
    sc_signal< sc_lv<16> > tmp_122_fu_307_p2;
    sc_signal< sc_lv<11> > tmp_89_cast_fu_278_p1;
    sc_signal< sc_lv<11> > tmp_123_fu_317_p2;
    sc_signal< sc_lv<32> > result_to_int_fu_327_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_330_p4;
    sc_signal< sc_lv<23> > tmp_91_fu_340_p1;
    sc_signal< sc_lv<1> > notrhs_fu_350_p2;
    sc_signal< sc_lv<1> > notlhs_fu_344_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_356_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_362_p2;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_address0();
    void thread_bias_ce0();
    void thread_ci_4_fu_272_p2();
    void thread_co_10_fu_170_p2();
    void thread_exitcond1_fu_240_p2();
    void thread_exitcond2_fu_211_p2();
    void thread_exitcond3_fu_164_p2();
    void thread_exitcond_fu_266_p2();
    void thread_grp_fu_150_p1();
    void thread_h_10_fu_217_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_notlhs_fu_344_p2();
    void thread_notrhs_fu_350_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_201_p1();
    void thread_p_shl_cast_fu_189_p1();
    void thread_result_to_int_fu_327_p1();
    void thread_tmp_116_fu_193_p3();
    void thread_tmp_117_fu_205_p2();
    void thread_tmp_118_fu_227_p2();
    void thread_tmp_119_fu_256_p2();
    void thread_tmp_120_fu_282_p3();
    void thread_tmp_121_fu_294_p2();
    void thread_tmp_122_fu_307_p2();
    void thread_tmp_123_fu_317_p2();
    void thread_tmp_16_fu_330_p4();
    void thread_tmp_177_cast_fu_232_p3();
    void thread_tmp_178_cast_fu_261_p1();
    void thread_tmp_180_cast_fu_290_p1();
    void thread_tmp_183_cast_fu_299_p3();
    void thread_tmp_184_cast_fu_312_p1();
    void thread_tmp_185_cast_fu_322_p1();
    void thread_tmp_18_fu_356_p2();
    void thread_tmp_20_fu_362_p2();
    void thread_tmp_88_cast_fu_252_p1();
    void thread_tmp_89_cast_fu_278_p1();
    void thread_tmp_91_fu_340_p1();
    void thread_tmp_cast_fu_223_p1();
    void thread_tmp_fu_176_p1();
    void thread_tmp_s_fu_181_p3();
    void thread_w_10_fu_246_p2();
    void thread_weight_address0();
    void thread_weight_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
