// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "subconv_3x3_32_strid.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic subconv_3x3_32_strid::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic subconv_3x3_32_strid::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state1 = "1";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state2 = "10";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state3 = "100";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state4 = "1000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state5 = "10000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state6 = "100000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> subconv_3x3_32_strid::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_1 = "1";
const sc_lv<1> subconv_3x3_32_strid::ap_const_lv1_0 = "0";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_2 = "10";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_3 = "11";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_4 = "100";
const sc_lv<1> subconv_3x3_32_strid::ap_const_lv1_1 = "1";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_5 = "101";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_6 = "110";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_7 = "111";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_B = "1011";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_10 = "10000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_11 = "10001";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_16 = "10110";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_0 = "00000";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_17 = "10111";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_0 = "00";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_C = "1100";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_12 = "10010";
const sc_lv<32> subconv_3x3_32_strid::ap_const_lv32_8 = "1000";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_18 = "11000";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_1 = "1";
const sc_lv<4> subconv_3x3_32_strid::ap_const_lv4_0 = "0000";
const sc_lv<5> subconv_3x3_32_strid::ap_const_lv5_10 = "10000";
const sc_lv<6> subconv_3x3_32_strid::ap_const_lv6_0 = "000000";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_3 = "11";
const sc_lv<2> subconv_3x3_32_strid::ap_const_lv2_1 = "1";
const sc_lv<9> subconv_3x3_32_strid::ap_const_lv9_2 = "10";
const sc_lv<3> subconv_3x3_32_strid::ap_const_lv3_0 = "000";
const bool subconv_3x3_32_strid::ap_const_boolean_1 = true;

subconv_3x3_32_strid::subconv_3x3_32_strid(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_faddbkb_x_U15 = new ShuffleNetV2_faddbkb<1,5,32,32,32>("ShuffleNetV2_faddbkb_x_U15");
    ShuffleNetV2_faddbkb_x_U15->clk(ap_clk);
    ShuffleNetV2_faddbkb_x_U15->reset(ap_rst);
    ShuffleNetV2_faddbkb_x_U15->din0(grp_fu_179_p0);
    ShuffleNetV2_faddbkb_x_U15->din1(grp_fu_179_p1);
    ShuffleNetV2_faddbkb_x_U15->ce(ap_var_for_const0);
    ShuffleNetV2_faddbkb_x_U15->dout(grp_fu_179_p2);
    ShuffleNetV2_fmulcud_x_U16 = new ShuffleNetV2_fmulcud<1,4,32,32,32>("ShuffleNetV2_fmulcud_x_U16");
    ShuffleNetV2_fmulcud_x_U16->clk(ap_clk);
    ShuffleNetV2_fmulcud_x_U16->reset(ap_rst);
    ShuffleNetV2_fmulcud_x_U16->din0(weight_load_reg_620);
    ShuffleNetV2_fmulcud_x_U16->din1(tmp_51_reg_625);
    ShuffleNetV2_fmulcud_x_U16->ce(ap_var_for_const0);
    ShuffleNetV2_fmulcud_x_U16->dout(grp_fu_185_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_189_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_189_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_517 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_co_4_fu_195_p2);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_exitcond1_fu_327_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( m_reg_145 );

    SC_METHOD(thread_exitcond2_fu_295_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_121 );

    SC_METHOD(thread_exitcond3_fu_256_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_110 );

    SC_METHOD(thread_exitcond4_fu_189_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_exitcond_fu_420_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( n_reg_168 );

    SC_METHOD(thread_grp_fu_179_p0);
    sensitive << ( sum_reg_133 );
    sensitive << ( sum_1_reg_156 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_179_p1);
    sensitive << ( tmp_52_reg_630 );
    sensitive << ( bias_load_reg_640 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_h_4_fu_262_p2);
    sensitive << ( h_reg_110 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_85_cast_fu_474_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_m_4_fu_333_p2);
    sensitive << ( m_reg_145 );

    SC_METHOD(thread_m_cast8_cast_fu_323_p1);
    sensitive << ( m_reg_145 );

    SC_METHOD(thread_n_4_fu_426_p2);
    sensitive << ( n_reg_168 );

    SC_METHOD(thread_n_cast6_fu_416_p1);
    sensitive << ( n_reg_168 );

    SC_METHOD(thread_output_0_address0);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_77_cast_fu_490_p1 );

    SC_METHOD(thread_output_0_ce0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_output_0_d0);
    sensitive << ( result_reg_645 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_output_0_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_p_not_fu_441_p2);
    sensitive << ( tmp_47_reg_554 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_420_p2 );
    sensitive << ( n_cast6_fu_416_p1 );

    SC_METHOD(thread_p_shl_cast_fu_230_p1);
    sensitive << ( tmp_49_fu_222_p3 );

    SC_METHOD(thread_sel_tmp1_fu_478_p2);
    sensitive << ( sel_tmp_reg_577 );
    sensitive << ( p_not_reg_600 );

    SC_METHOD(thread_sel_tmp_fu_402_p2);
    sensitive << ( tmp_cast_31_reg_530 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_327_p2 );
    sensitive << ( tmp_50_cast_fu_398_p1 );

    SC_METHOD(thread_tmp3_cast_fu_366_p1);
    sensitive << ( tmp3_fu_360_p2 );

    SC_METHOD(thread_tmp3_fu_360_p2);
    sensitive << ( m_reg_145 );

    SC_METHOD(thread_tmp4_cast_fu_452_p1);
    sensitive << ( tmp4_fu_446_p2 );

    SC_METHOD(thread_tmp4_fu_446_p2);
    sensitive << ( n_reg_168 );

    SC_METHOD(thread_tmp_40_cast_fu_278_p1);
    sensitive << ( h_reg_110 );

    SC_METHOD(thread_tmp_42_cast_fu_407_p1);
    sensitive << ( w_reg_121 );

    SC_METHOD(thread_tmp_43_cast_fu_339_p1);
    sensitive << ( m_reg_145 );

    SC_METHOD(thread_tmp_44_fu_370_p2);
    sensitive << ( tmp_cast_31_reg_530 );
    sensitive << ( tmp3_cast_fu_366_p1 );

    SC_METHOD(thread_tmp_45_cast_fu_375_p1);
    sensitive << ( tmp_44_fu_370_p2 );

    SC_METHOD(thread_tmp_46_cast_fu_432_p1);
    sensitive << ( n_reg_168 );

    SC_METHOD(thread_tmp_47_fu_317_p2);
    sensitive << ( tmp_48_cast_fu_313_p1 );

    SC_METHOD(thread_tmp_48_cast_fu_313_p1);
    sensitive << ( tmp_57_fu_307_p2 );

    SC_METHOD(thread_tmp_48_fu_456_p2);
    sensitive << ( tmp_48_cast_reg_549 );
    sensitive << ( tmp4_cast_fu_452_p1 );

    SC_METHOD(thread_tmp_49_cast_fu_461_p1);
    sensitive << ( tmp_48_fu_456_p2 );

    SC_METHOD(thread_tmp_49_fu_222_p3);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_tmp_50_cast_fu_398_p1);
    sensitive << ( tmp_50_fu_392_p2 );

    SC_METHOD(thread_tmp_50_fu_392_p2);
    sensitive << ( m_cast8_cast_fu_323_p1 );

    SC_METHOD(thread_tmp_51_fu_482_p3);
    sensitive << ( input_r_q0 );
    sensitive << ( sel_tmp1_fu_478_p2 );

    SC_METHOD(thread_tmp_53_fu_234_p2);
    sensitive << ( p_shl_cast_fu_230_p1 );
    sensitive << ( tmp_cast_fu_206_p1 );

    SC_METHOD(thread_tmp_54_fu_244_p3);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_tmp_55_fu_268_p2);
    sensitive << ( h_reg_110 );

    SC_METHOD(thread_tmp_56_fu_282_p2);
    sensitive << ( tmp_71_cast_reg_512 );
    sensitive << ( tmp_40_cast_fu_278_p1 );

    SC_METHOD(thread_tmp_57_fu_307_p2);
    sensitive << ( w_reg_121 );

    SC_METHOD(thread_tmp_58_fu_411_p2);
    sensitive << ( tmp_75_cast_reg_536 );
    sensitive << ( tmp_42_cast_fu_407_p1 );

    SC_METHOD(thread_tmp_59_fu_343_p2);
    sensitive << ( tmp_69_cast_reg_507 );
    sensitive << ( tmp_43_cast_fu_339_p1 );

    SC_METHOD(thread_tmp_60_fu_348_p2);
    sensitive << ( tmp_59_fu_343_p2 );

    SC_METHOD(thread_tmp_61_fu_354_p2);
    sensitive << ( tmp_59_fu_343_p2 );
    sensitive << ( tmp_60_fu_348_p2 );

    SC_METHOD(thread_tmp_62_fu_379_p2);
    sensitive << ( tmp_67_cast_reg_502 );
    sensitive << ( tmp_45_cast_fu_375_p1 );

    SC_METHOD(thread_tmp_63_fu_436_p2);
    sensitive << ( tmp_61_reg_567 );
    sensitive << ( tmp_46_cast_fu_432_p1 );

    SC_METHOD(thread_tmp_64_fu_465_p2);
    sensitive << ( tmp_83_cast_reg_572 );
    sensitive << ( tmp_49_cast_fu_461_p1 );

    SC_METHOD(thread_tmp_67_cast_fu_218_p1);
    sensitive << ( tmp_s_fu_210_p3 );

    SC_METHOD(thread_tmp_69_cast_fu_240_p1);
    sensitive << ( tmp_53_fu_234_p2 );

    SC_METHOD(thread_tmp_71_cast_fu_252_p1);
    sensitive << ( tmp_54_fu_244_p3 );

    SC_METHOD(thread_tmp_75_cast_fu_287_p3);
    sensitive << ( tmp_56_fu_282_p2 );

    SC_METHOD(thread_tmp_77_cast_fu_490_p1);
    sensitive << ( tmp_58_reg_582 );

    SC_METHOD(thread_tmp_83_cast_fu_384_p3);
    sensitive << ( tmp_62_fu_379_p2 );

    SC_METHOD(thread_tmp_84_cast_fu_470_p1);
    sensitive << ( tmp_63_reg_595 );

    SC_METHOD(thread_tmp_85_cast_fu_474_p1);
    sensitive << ( tmp_64_reg_605 );

    SC_METHOD(thread_tmp_cast_31_fu_274_p1);
    sensitive << ( tmp_55_fu_268_p2 );

    SC_METHOD(thread_tmp_cast_fu_206_p1);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_tmp_fu_201_p1);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_tmp_s_fu_210_p3);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_w_4_fu_301_p2);
    sensitive << ( w_reg_121 );

    SC_METHOD(thread_weight_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_84_cast_fu_470_p1 );

    SC_METHOD(thread_weight_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_189_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_327_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_420_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "subconv_3x3_32_strid_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weight_address0, "(port)weight_address0");
    sc_trace(mVcdFile, weight_ce0, "(port)weight_ce0");
    sc_trace(mVcdFile, weight_q0, "(port)weight_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, output_0_address0, "(port)output_0_address0");
    sc_trace(mVcdFile, output_0_ce0, "(port)output_0_ce0");
    sc_trace(mVcdFile, output_0_we0, "(port)output_0_we0");
    sc_trace(mVcdFile, output_0_d0, "(port)output_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_4_fu_195_p2, "co_4_fu_195_p2");
    sc_trace(mVcdFile, co_4_reg_497, "co_4_reg_497");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_67_cast_fu_218_p1, "tmp_67_cast_fu_218_p1");
    sc_trace(mVcdFile, tmp_67_cast_reg_502, "tmp_67_cast_reg_502");
    sc_trace(mVcdFile, exitcond4_fu_189_p2, "exitcond4_fu_189_p2");
    sc_trace(mVcdFile, tmp_69_cast_fu_240_p1, "tmp_69_cast_fu_240_p1");
    sc_trace(mVcdFile, tmp_69_cast_reg_507, "tmp_69_cast_reg_507");
    sc_trace(mVcdFile, tmp_71_cast_fu_252_p1, "tmp_71_cast_fu_252_p1");
    sc_trace(mVcdFile, tmp_71_cast_reg_512, "tmp_71_cast_reg_512");
    sc_trace(mVcdFile, bias_addr_reg_517, "bias_addr_reg_517");
    sc_trace(mVcdFile, h_4_fu_262_p2, "h_4_fu_262_p2");
    sc_trace(mVcdFile, h_4_reg_525, "h_4_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast_31_fu_274_p1, "tmp_cast_31_fu_274_p1");
    sc_trace(mVcdFile, tmp_cast_31_reg_530, "tmp_cast_31_reg_530");
    sc_trace(mVcdFile, exitcond3_fu_256_p2, "exitcond3_fu_256_p2");
    sc_trace(mVcdFile, tmp_75_cast_fu_287_p3, "tmp_75_cast_fu_287_p3");
    sc_trace(mVcdFile, tmp_75_cast_reg_536, "tmp_75_cast_reg_536");
    sc_trace(mVcdFile, w_4_fu_301_p2, "w_4_fu_301_p2");
    sc_trace(mVcdFile, w_4_reg_544, "w_4_reg_544");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_48_cast_fu_313_p1, "tmp_48_cast_fu_313_p1");
    sc_trace(mVcdFile, tmp_48_cast_reg_549, "tmp_48_cast_reg_549");
    sc_trace(mVcdFile, exitcond2_fu_295_p2, "exitcond2_fu_295_p2");
    sc_trace(mVcdFile, tmp_47_fu_317_p2, "tmp_47_fu_317_p2");
    sc_trace(mVcdFile, tmp_47_reg_554, "tmp_47_reg_554");
    sc_trace(mVcdFile, m_4_fu_333_p2, "m_4_fu_333_p2");
    sc_trace(mVcdFile, m_4_reg_562, "m_4_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_61_fu_354_p2, "tmp_61_fu_354_p2");
    sc_trace(mVcdFile, tmp_61_reg_567, "tmp_61_reg_567");
    sc_trace(mVcdFile, exitcond1_fu_327_p2, "exitcond1_fu_327_p2");
    sc_trace(mVcdFile, tmp_83_cast_fu_384_p3, "tmp_83_cast_fu_384_p3");
    sc_trace(mVcdFile, tmp_83_cast_reg_572, "tmp_83_cast_reg_572");
    sc_trace(mVcdFile, sel_tmp_fu_402_p2, "sel_tmp_fu_402_p2");
    sc_trace(mVcdFile, sel_tmp_reg_577, "sel_tmp_reg_577");
    sc_trace(mVcdFile, tmp_58_fu_411_p2, "tmp_58_fu_411_p2");
    sc_trace(mVcdFile, tmp_58_reg_582, "tmp_58_reg_582");
    sc_trace(mVcdFile, n_4_fu_426_p2, "n_4_fu_426_p2");
    sc_trace(mVcdFile, n_4_reg_590, "n_4_reg_590");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_63_fu_436_p2, "tmp_63_fu_436_p2");
    sc_trace(mVcdFile, tmp_63_reg_595, "tmp_63_reg_595");
    sc_trace(mVcdFile, exitcond_fu_420_p2, "exitcond_fu_420_p2");
    sc_trace(mVcdFile, p_not_fu_441_p2, "p_not_fu_441_p2");
    sc_trace(mVcdFile, p_not_reg_600, "p_not_reg_600");
    sc_trace(mVcdFile, tmp_64_fu_465_p2, "tmp_64_fu_465_p2");
    sc_trace(mVcdFile, tmp_64_reg_605, "tmp_64_reg_605");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, weight_load_reg_620, "weight_load_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_51_fu_482_p3, "tmp_51_fu_482_p3");
    sc_trace(mVcdFile, tmp_51_reg_625, "tmp_51_reg_625");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, tmp_52_reg_630, "tmp_52_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_179_p2, "grp_fu_179_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, bias_load_reg_640, "bias_load_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, result_reg_645, "result_reg_645");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, co_reg_99, "co_reg_99");
    sc_trace(mVcdFile, h_reg_110, "h_reg_110");
    sc_trace(mVcdFile, w_reg_121, "w_reg_121");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, sum_reg_133, "sum_reg_133");
    sc_trace(mVcdFile, m_reg_145, "m_reg_145");
    sc_trace(mVcdFile, sum_1_reg_156, "sum_1_reg_156");
    sc_trace(mVcdFile, n_reg_168, "n_reg_168");
    sc_trace(mVcdFile, tmp_fu_201_p1, "tmp_fu_201_p1");
    sc_trace(mVcdFile, tmp_84_cast_fu_470_p1, "tmp_84_cast_fu_470_p1");
    sc_trace(mVcdFile, tmp_85_cast_fu_474_p1, "tmp_85_cast_fu_474_p1");
    sc_trace(mVcdFile, tmp_77_cast_fu_490_p1, "tmp_77_cast_fu_490_p1");
    sc_trace(mVcdFile, grp_fu_179_p0, "grp_fu_179_p0");
    sc_trace(mVcdFile, grp_fu_179_p1, "grp_fu_179_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_s_fu_210_p3, "tmp_s_fu_210_p3");
    sc_trace(mVcdFile, tmp_49_fu_222_p3, "tmp_49_fu_222_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_230_p1, "p_shl_cast_fu_230_p1");
    sc_trace(mVcdFile, tmp_cast_fu_206_p1, "tmp_cast_fu_206_p1");
    sc_trace(mVcdFile, tmp_53_fu_234_p2, "tmp_53_fu_234_p2");
    sc_trace(mVcdFile, tmp_54_fu_244_p3, "tmp_54_fu_244_p3");
    sc_trace(mVcdFile, tmp_55_fu_268_p2, "tmp_55_fu_268_p2");
    sc_trace(mVcdFile, tmp_40_cast_fu_278_p1, "tmp_40_cast_fu_278_p1");
    sc_trace(mVcdFile, tmp_56_fu_282_p2, "tmp_56_fu_282_p2");
    sc_trace(mVcdFile, tmp_57_fu_307_p2, "tmp_57_fu_307_p2");
    sc_trace(mVcdFile, tmp_43_cast_fu_339_p1, "tmp_43_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_59_fu_343_p2, "tmp_59_fu_343_p2");
    sc_trace(mVcdFile, tmp_60_fu_348_p2, "tmp_60_fu_348_p2");
    sc_trace(mVcdFile, tmp3_fu_360_p2, "tmp3_fu_360_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_366_p1, "tmp3_cast_fu_366_p1");
    sc_trace(mVcdFile, tmp_44_fu_370_p2, "tmp_44_fu_370_p2");
    sc_trace(mVcdFile, tmp_45_cast_fu_375_p1, "tmp_45_cast_fu_375_p1");
    sc_trace(mVcdFile, tmp_62_fu_379_p2, "tmp_62_fu_379_p2");
    sc_trace(mVcdFile, m_cast8_cast_fu_323_p1, "m_cast8_cast_fu_323_p1");
    sc_trace(mVcdFile, tmp_50_fu_392_p2, "tmp_50_fu_392_p2");
    sc_trace(mVcdFile, tmp_50_cast_fu_398_p1, "tmp_50_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_42_cast_fu_407_p1, "tmp_42_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_46_cast_fu_432_p1, "tmp_46_cast_fu_432_p1");
    sc_trace(mVcdFile, n_cast6_fu_416_p1, "n_cast6_fu_416_p1");
    sc_trace(mVcdFile, tmp4_fu_446_p2, "tmp4_fu_446_p2");
    sc_trace(mVcdFile, tmp4_cast_fu_452_p1, "tmp4_cast_fu_452_p1");
    sc_trace(mVcdFile, tmp_48_fu_456_p2, "tmp_48_fu_456_p2");
    sc_trace(mVcdFile, tmp_49_cast_fu_461_p1, "tmp_49_cast_fu_461_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_478_p2, "sel_tmp1_fu_478_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

subconv_3x3_32_strid::~subconv_3x3_32_strid() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_faddbkb_x_U15;
    delete ShuffleNetV2_fmulcud_x_U16;
}

void subconv_3x3_32_strid::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void subconv_3x3_32_strid::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_256_p2.read(), ap_const_lv1_1))) {
        co_reg_99 = co_4_reg_497.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_99 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_295_p2.read(), ap_const_lv1_1))) {
        h_reg_110 = h_4_reg_525.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_189_p2.read(), ap_const_lv1_0))) {
        h_reg_110 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_420_p2.read()))) {
        m_reg_145 = m_4_reg_562.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_295_p2.read()))) {
        m_reg_145 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_327_p2.read()))) {
        n_reg_168 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        n_reg_168 = n_4_reg_590.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_327_p2.read()))) {
        sum_1_reg_156 = sum_reg_133.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        sum_1_reg_156 = grp_fu_179_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_420_p2.read()))) {
        sum_reg_133 = sum_1_reg_156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_295_p2.read()))) {
        sum_reg_133 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_256_p2.read()))) {
        w_reg_121 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        w_reg_121 = w_4_reg_544.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_189_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_517 =  (sc_lv<5>) (tmp_fu_201_p1.read());
        tmp_67_cast_reg_502 = tmp_67_cast_fu_218_p1.read();
        tmp_69_cast_reg_507 = tmp_69_cast_fu_240_p1.read();
        tmp_71_cast_reg_512 = tmp_71_cast_fu_252_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        bias_load_reg_640 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_4_reg_497 = co_4_fu_195_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_4_reg_525 = h_4_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_4_reg_562 = m_4_fu_333_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_4_reg_590 = n_4_fu_426_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_420_p2.read()))) {
        p_not_reg_600 = p_not_fu_441_p2.read();
        tmp_63_reg_595 = tmp_63_fu_436_p2.read();
        tmp_64_reg_605 = tmp_64_fu_465_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        result_reg_645 = grp_fu_179_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_327_p2.read()))) {
        sel_tmp_reg_577 = sel_tmp_fu_402_p2.read();
        tmp_61_reg_567 = tmp_61_fu_354_p2.read();
        tmp_83_cast_reg_572 = tmp_83_cast_fu_384_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_295_p2.read()))) {
        tmp_47_reg_554 = tmp_47_fu_317_p2.read();
        tmp_48_cast_reg_549 = tmp_48_cast_fu_313_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_51_reg_625 = tmp_51_fu_482_p3.read();
        weight_load_reg_620 = weight_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_52_reg_630 = grp_fu_185_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_327_p2.read(), ap_const_lv1_1))) {
        tmp_58_reg_582 = tmp_58_fu_411_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_256_p2.read()))) {
        tmp_75_cast_reg_536 = tmp_75_cast_fu_287_p3.read();
        tmp_cast_31_reg_530 = tmp_cast_31_fu_274_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_4_reg_544 = w_4_fu_301_p2.read();
    }
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void subconv_3x3_32_strid::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void subconv_3x3_32_strid::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_189_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_189_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_bias_address0() {
    bias_address0 = bias_addr_reg_517.read();
}

void subconv_3x3_32_strid::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_co_4_fu_195_p2() {
    co_4_fu_195_p2 = (!co_reg_99.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(co_reg_99.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_exitcond1_fu_327_p2() {
    exitcond1_fu_327_p2 = (!m_reg_145.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_145.read() == ap_const_lv2_3);
}

void subconv_3x3_32_strid::thread_exitcond2_fu_295_p2() {
    exitcond2_fu_295_p2 = (!w_reg_121.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_121.read() == ap_const_lv5_10);
}

void subconv_3x3_32_strid::thread_exitcond3_fu_256_p2() {
    exitcond3_fu_256_p2 = (!h_reg_110.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_110.read() == ap_const_lv5_10);
}

void subconv_3x3_32_strid::thread_exitcond4_fu_189_p2() {
    exitcond4_fu_189_p2 = (!co_reg_99.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_99.read() == ap_const_lv5_18);
}

void subconv_3x3_32_strid::thread_exitcond_fu_420_p2() {
    exitcond_fu_420_p2 = (!n_reg_168.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_168.read() == ap_const_lv2_3);
}

void subconv_3x3_32_strid::thread_grp_fu_179_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_179_p0 = sum_reg_133.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_179_p0 = sum_1_reg_156.read();
    } else {
        grp_fu_179_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_32_strid::thread_grp_fu_179_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_179_p1 = bias_load_reg_640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_179_p1 = tmp_52_reg_630.read();
    } else {
        grp_fu_179_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void subconv_3x3_32_strid::thread_h_4_fu_262_p2() {
    h_4_fu_262_p2 = (!h_reg_110.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_reg_110.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<15>) (tmp_85_cast_fu_474_p1.read());
}

void subconv_3x3_32_strid::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_m_4_fu_333_p2() {
    m_4_fu_333_p2 = (!m_reg_145.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_145.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_32_strid::thread_m_cast8_cast_fu_323_p1() {
    m_cast8_cast_fu_323_p1 = esl_zext<3,2>(m_reg_145.read());
}

void subconv_3x3_32_strid::thread_n_4_fu_426_p2() {
    n_4_fu_426_p2 = (!n_reg_168.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_168.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void subconv_3x3_32_strid::thread_n_cast6_fu_416_p1() {
    n_cast6_fu_416_p1 = esl_zext<6,2>(n_reg_168.read());
}

void subconv_3x3_32_strid::thread_output_0_address0() {
    output_0_address0 =  (sc_lv<13>) (tmp_77_cast_fu_490_p1.read());
}

void subconv_3x3_32_strid::thread_output_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        output_0_ce0 = ap_const_logic_1;
    } else {
        output_0_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_output_0_d0() {
    output_0_d0 = result_reg_645.read();
}

void subconv_3x3_32_strid::thread_output_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        output_0_we0 = ap_const_logic_1;
    } else {
        output_0_we0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_p_not_fu_441_p2() {
    p_not_fu_441_p2 = (!n_cast6_fu_416_p1.read().is_01() || !tmp_47_reg_554.read().is_01())? sc_lv<1>(): sc_lv<1>(n_cast6_fu_416_p1.read() == tmp_47_reg_554.read());
}

void subconv_3x3_32_strid::thread_p_shl_cast_fu_230_p1() {
    p_shl_cast_fu_230_p1 = esl_zext<8,7>(tmp_49_fu_222_p3.read());
}

void subconv_3x3_32_strid::thread_sel_tmp1_fu_478_p2() {
    sel_tmp1_fu_478_p2 = (sel_tmp_reg_577.read() | p_not_reg_600.read());
}

void subconv_3x3_32_strid::thread_sel_tmp_fu_402_p2() {
    sel_tmp_fu_402_p2 = (!tmp_cast_31_reg_530.read().is_01() || !tmp_50_cast_fu_398_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_cast_31_reg_530.read() == tmp_50_cast_fu_398_p1.read());
}

void subconv_3x3_32_strid::thread_tmp3_cast_fu_366_p1() {
    tmp3_cast_fu_366_p1 = esl_sext<6,2>(tmp3_fu_360_p2.read());
}

void subconv_3x3_32_strid::thread_tmp3_fu_360_p2() {
    tmp3_fu_360_p2 = (!ap_const_lv2_3.is_01() || !m_reg_145.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(m_reg_145.read()));
}

void subconv_3x3_32_strid::thread_tmp4_cast_fu_452_p1() {
    tmp4_cast_fu_452_p1 = esl_sext<6,2>(tmp4_fu_446_p2.read());
}

void subconv_3x3_32_strid::thread_tmp4_fu_446_p2() {
    tmp4_fu_446_p2 = (!n_reg_168.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_168.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void subconv_3x3_32_strid::thread_tmp_40_cast_fu_278_p1() {
    tmp_40_cast_fu_278_p1 = esl_zext<10,5>(h_reg_110.read());
}

void subconv_3x3_32_strid::thread_tmp_42_cast_fu_407_p1() {
    tmp_42_cast_fu_407_p1 = esl_zext<14,5>(w_reg_121.read());
}

void subconv_3x3_32_strid::thread_tmp_43_cast_fu_339_p1() {
    tmp_43_cast_fu_339_p1 = esl_zext<9,2>(m_reg_145.read());
}

void subconv_3x3_32_strid::thread_tmp_44_fu_370_p2() {
    tmp_44_fu_370_p2 = (!tmp3_cast_fu_366_p1.read().is_01() || !tmp_cast_31_reg_530.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp3_cast_fu_366_p1.read()) + sc_biguint<6>(tmp_cast_31_reg_530.read()));
}

void subconv_3x3_32_strid::thread_tmp_45_cast_fu_375_p1() {
    tmp_45_cast_fu_375_p1 = esl_sext<11,6>(tmp_44_fu_370_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_46_cast_fu_432_p1() {
    tmp_46_cast_fu_432_p1 = esl_zext<9,2>(n_reg_168.read());
}

void subconv_3x3_32_strid::thread_tmp_47_fu_317_p2() {
    tmp_47_fu_317_p2 = (!ap_const_lv6_0.is_01() || !tmp_48_cast_fu_313_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_0) - sc_biguint<6>(tmp_48_cast_fu_313_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_48_cast_fu_313_p1() {
    tmp_48_cast_fu_313_p1 = esl_zext<6,5>(tmp_57_fu_307_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_48_fu_456_p2() {
    tmp_48_fu_456_p2 = (!tmp_48_cast_reg_549.read().is_01() || !tmp4_cast_fu_452_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_48_cast_reg_549.read()) + sc_bigint<6>(tmp4_cast_fu_452_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_49_cast_fu_461_p1() {
    tmp_49_cast_fu_461_p1 = esl_sext<16,6>(tmp_48_fu_456_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_49_fu_222_p3() {
    tmp_49_fu_222_p3 = esl_concat<5,2>(co_reg_99.read(), ap_const_lv2_0);
}

void subconv_3x3_32_strid::thread_tmp_50_cast_fu_398_p1() {
    tmp_50_cast_fu_398_p1 = esl_sext<6,3>(tmp_50_fu_392_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_50_fu_392_p2() {
    tmp_50_fu_392_p2 = (!ap_const_lv3_0.is_01() || !m_cast8_cast_fu_323_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_0) - sc_biguint<3>(m_cast8_cast_fu_323_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_51_fu_482_p3() {
    tmp_51_fu_482_p3 = (!sel_tmp1_fu_478_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_fu_478_p2.read()[0].to_bool())? ap_const_lv32_0: input_r_q0.read());
}

void subconv_3x3_32_strid::thread_tmp_53_fu_234_p2() {
    tmp_53_fu_234_p2 = (!p_shl_cast_fu_230_p1.read().is_01() || !tmp_cast_fu_206_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl_cast_fu_230_p1.read()) - sc_biguint<8>(tmp_cast_fu_206_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_54_fu_244_p3() {
    tmp_54_fu_244_p3 = esl_concat<5,4>(co_reg_99.read(), ap_const_lv4_0);
}

void subconv_3x3_32_strid::thread_tmp_55_fu_268_p2() {
    tmp_55_fu_268_p2 = (!ap_const_lv5_1.is_01())? sc_lv<5>(): h_reg_110.read() << (unsigned short)ap_const_lv5_1.to_uint();
}

void subconv_3x3_32_strid::thread_tmp_56_fu_282_p2() {
    tmp_56_fu_282_p2 = (!tmp_71_cast_reg_512.read().is_01() || !tmp_40_cast_fu_278_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_71_cast_reg_512.read()) + sc_biguint<10>(tmp_40_cast_fu_278_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_57_fu_307_p2() {
    tmp_57_fu_307_p2 = (!ap_const_lv5_1.is_01())? sc_lv<5>(): w_reg_121.read() << (unsigned short)ap_const_lv5_1.to_uint();
}

void subconv_3x3_32_strid::thread_tmp_58_fu_411_p2() {
    tmp_58_fu_411_p2 = (!tmp_75_cast_reg_536.read().is_01() || !tmp_42_cast_fu_407_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_75_cast_reg_536.read()) + sc_biguint<14>(tmp_42_cast_fu_407_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_59_fu_343_p2() {
    tmp_59_fu_343_p2 = (!tmp_43_cast_fu_339_p1.read().is_01() || !tmp_69_cast_reg_507.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_43_cast_fu_339_p1.read()) + sc_bigint<9>(tmp_69_cast_reg_507.read()));
}

void subconv_3x3_32_strid::thread_tmp_60_fu_348_p2() {
    tmp_60_fu_348_p2 = (!ap_const_lv9_2.is_01())? sc_lv<9>(): tmp_59_fu_343_p2.read() << (unsigned short)ap_const_lv9_2.to_uint();
}

void subconv_3x3_32_strid::thread_tmp_61_fu_354_p2() {
    tmp_61_fu_354_p2 = (!tmp_60_fu_348_p2.read().is_01() || !tmp_59_fu_343_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_60_fu_348_p2.read()) - sc_biguint<9>(tmp_59_fu_343_p2.read()));
}

void subconv_3x3_32_strid::thread_tmp_62_fu_379_p2() {
    tmp_62_fu_379_p2 = (!tmp_45_cast_fu_375_p1.read().is_01() || !tmp_67_cast_reg_502.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp_45_cast_fu_375_p1.read()) + sc_biguint<11>(tmp_67_cast_reg_502.read()));
}

void subconv_3x3_32_strid::thread_tmp_63_fu_436_p2() {
    tmp_63_fu_436_p2 = (!tmp_61_reg_567.read().is_01() || !tmp_46_cast_fu_432_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_61_reg_567.read()) + sc_biguint<9>(tmp_46_cast_fu_432_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_64_fu_465_p2() {
    tmp_64_fu_465_p2 = (!tmp_83_cast_reg_572.read().is_01() || !tmp_49_cast_fu_461_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_83_cast_reg_572.read()) + sc_bigint<16>(tmp_49_cast_fu_461_p1.read()));
}

void subconv_3x3_32_strid::thread_tmp_67_cast_fu_218_p1() {
    tmp_67_cast_fu_218_p1 = esl_zext<11,10>(tmp_s_fu_210_p3.read());
}

void subconv_3x3_32_strid::thread_tmp_69_cast_fu_240_p1() {
    tmp_69_cast_fu_240_p1 = esl_sext<9,8>(tmp_53_fu_234_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_71_cast_fu_252_p1() {
    tmp_71_cast_fu_252_p1 = esl_zext<10,9>(tmp_54_fu_244_p3.read());
}

void subconv_3x3_32_strid::thread_tmp_75_cast_fu_287_p3() {
    tmp_75_cast_fu_287_p3 = esl_concat<10,4>(tmp_56_fu_282_p2.read(), ap_const_lv4_0);
}

void subconv_3x3_32_strid::thread_tmp_77_cast_fu_490_p1() {
    tmp_77_cast_fu_490_p1 = esl_zext<64,14>(tmp_58_reg_582.read());
}

void subconv_3x3_32_strid::thread_tmp_83_cast_fu_384_p3() {
    tmp_83_cast_fu_384_p3 = esl_concat<11,5>(tmp_62_fu_379_p2.read(), ap_const_lv5_0);
}

void subconv_3x3_32_strid::thread_tmp_84_cast_fu_470_p1() {
    tmp_84_cast_fu_470_p1 = esl_zext<64,9>(tmp_63_reg_595.read());
}

void subconv_3x3_32_strid::thread_tmp_85_cast_fu_474_p1() {
    tmp_85_cast_fu_474_p1 = esl_zext<64,16>(tmp_64_reg_605.read());
}

void subconv_3x3_32_strid::thread_tmp_cast_31_fu_274_p1() {
    tmp_cast_31_fu_274_p1 = esl_zext<6,5>(tmp_55_fu_268_p2.read());
}

void subconv_3x3_32_strid::thread_tmp_cast_fu_206_p1() {
    tmp_cast_fu_206_p1 = esl_zext<8,5>(co_reg_99.read());
}

void subconv_3x3_32_strid::thread_tmp_fu_201_p1() {
    tmp_fu_201_p1 = esl_zext<64,5>(co_reg_99.read());
}

void subconv_3x3_32_strid::thread_tmp_s_fu_210_p3() {
    tmp_s_fu_210_p3 = esl_concat<5,5>(co_reg_99.read(), ap_const_lv5_0);
}

void subconv_3x3_32_strid::thread_w_4_fu_301_p2() {
    w_4_fu_301_p2 = (!w_reg_121.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(w_reg_121.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void subconv_3x3_32_strid::thread_weight_address0() {
    weight_address0 =  (sc_lv<8>) (tmp_84_cast_fu_470_p1.read());
}

void subconv_3x3_32_strid::thread_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        weight_ce0 = ap_const_logic_1;
    } else {
        weight_ce0 = ap_const_logic_0;
    }
}

void subconv_3x3_32_strid::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_189_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_256_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_295_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_327_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_420_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

