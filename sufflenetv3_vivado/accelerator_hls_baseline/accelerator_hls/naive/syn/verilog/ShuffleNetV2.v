// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ShuffleNetV2,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.537750,HLS_SYN_LAT=110591624,HLS_SYN_TPT=none,HLS_SYN_MEM=1276,HLS_SYN_DSP=95,HLS_SYN_FF=36393,HLS_SYN_LUT=43353}" *)

module ShuffleNetV2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        conv1_weight_address0,
        conv1_weight_ce0,
        conv1_weight_q0,
        shuffle_conv_3x3_address0,
        shuffle_conv_3x3_ce0,
        shuffle_conv_3x3_q0,
        shuffle_conv_3x3_address1,
        shuffle_conv_3x3_ce1,
        shuffle_conv_3x3_q1,
        shuffle_conv_1x1_address0,
        shuffle_conv_1x1_ce0,
        shuffle_conv_1x1_q0,
        shuffle_conv_1x1_address1,
        shuffle_conv_1x1_ce1,
        shuffle_conv_1x1_q1,
        conv_last_weight_address0,
        conv_last_weight_ce0,
        conv_last_weight_q0,
        fc_weight_address0,
        fc_weight_ce0,
        fc_weight_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        bias_address1,
        bias_ce1,
        bias_q1,
        fc_output_address0,
        fc_output_ce0,
        fc_output_we0,
        fc_output_d0
);

parameter    ap_ST_fsm_state1 = 144'd1;
parameter    ap_ST_fsm_state2 = 144'd2;
parameter    ap_ST_fsm_state3 = 144'd4;
parameter    ap_ST_fsm_state4 = 144'd8;
parameter    ap_ST_fsm_state5 = 144'd16;
parameter    ap_ST_fsm_state6 = 144'd32;
parameter    ap_ST_fsm_state7 = 144'd64;
parameter    ap_ST_fsm_state8 = 144'd128;
parameter    ap_ST_fsm_state9 = 144'd256;
parameter    ap_ST_fsm_state10 = 144'd512;
parameter    ap_ST_fsm_state11 = 144'd1024;
parameter    ap_ST_fsm_state12 = 144'd2048;
parameter    ap_ST_fsm_state13 = 144'd4096;
parameter    ap_ST_fsm_state14 = 144'd8192;
parameter    ap_ST_fsm_state15 = 144'd16384;
parameter    ap_ST_fsm_state16 = 144'd32768;
parameter    ap_ST_fsm_state17 = 144'd65536;
parameter    ap_ST_fsm_state18 = 144'd131072;
parameter    ap_ST_fsm_state19 = 144'd262144;
parameter    ap_ST_fsm_state20 = 144'd524288;
parameter    ap_ST_fsm_state21 = 144'd1048576;
parameter    ap_ST_fsm_state22 = 144'd2097152;
parameter    ap_ST_fsm_state23 = 144'd4194304;
parameter    ap_ST_fsm_state24 = 144'd8388608;
parameter    ap_ST_fsm_state25 = 144'd16777216;
parameter    ap_ST_fsm_state26 = 144'd33554432;
parameter    ap_ST_fsm_state27 = 144'd67108864;
parameter    ap_ST_fsm_state28 = 144'd134217728;
parameter    ap_ST_fsm_state29 = 144'd268435456;
parameter    ap_ST_fsm_state30 = 144'd536870912;
parameter    ap_ST_fsm_state31 = 144'd1073741824;
parameter    ap_ST_fsm_state32 = 144'd2147483648;
parameter    ap_ST_fsm_state33 = 144'd4294967296;
parameter    ap_ST_fsm_state34 = 144'd8589934592;
parameter    ap_ST_fsm_state35 = 144'd17179869184;
parameter    ap_ST_fsm_state36 = 144'd34359738368;
parameter    ap_ST_fsm_state37 = 144'd68719476736;
parameter    ap_ST_fsm_state38 = 144'd137438953472;
parameter    ap_ST_fsm_state39 = 144'd274877906944;
parameter    ap_ST_fsm_state40 = 144'd549755813888;
parameter    ap_ST_fsm_state41 = 144'd1099511627776;
parameter    ap_ST_fsm_state42 = 144'd2199023255552;
parameter    ap_ST_fsm_state43 = 144'd4398046511104;
parameter    ap_ST_fsm_state44 = 144'd8796093022208;
parameter    ap_ST_fsm_state45 = 144'd17592186044416;
parameter    ap_ST_fsm_state46 = 144'd35184372088832;
parameter    ap_ST_fsm_state47 = 144'd70368744177664;
parameter    ap_ST_fsm_state48 = 144'd140737488355328;
parameter    ap_ST_fsm_state49 = 144'd281474976710656;
parameter    ap_ST_fsm_state50 = 144'd562949953421312;
parameter    ap_ST_fsm_state51 = 144'd1125899906842624;
parameter    ap_ST_fsm_state52 = 144'd2251799813685248;
parameter    ap_ST_fsm_state53 = 144'd4503599627370496;
parameter    ap_ST_fsm_state54 = 144'd9007199254740992;
parameter    ap_ST_fsm_state55 = 144'd18014398509481984;
parameter    ap_ST_fsm_state56 = 144'd36028797018963968;
parameter    ap_ST_fsm_state57 = 144'd72057594037927936;
parameter    ap_ST_fsm_state58 = 144'd144115188075855872;
parameter    ap_ST_fsm_state59 = 144'd288230376151711744;
parameter    ap_ST_fsm_state60 = 144'd576460752303423488;
parameter    ap_ST_fsm_state61 = 144'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 144'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 144'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 144'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 144'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 144'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 144'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 144'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 144'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 144'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 144'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 144'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 144'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 144'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 144'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 144'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 144'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 144'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 144'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 144'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 144'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 144'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 144'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 144'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 144'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 144'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 144'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 144'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 144'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 144'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 144'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 144'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 144'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 144'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 144'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 144'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 144'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 144'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 144'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 144'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 144'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 144'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 144'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 144'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 144'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 144'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 144'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 144'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 144'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 144'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 144'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 144'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 144'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 144'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 144'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 144'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 144'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 144'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 144'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 144'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 144'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 144'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 144'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 144'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 144'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 144'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 144'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 144'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 144'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 144'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 144'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 144'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 144'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 144'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 144'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 144'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 144'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 144'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 144'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 144'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 144'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 144'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 144'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 144'd11150372599265311570767859136324180752990208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] image_r_address0;
output   image_r_ce0;
input  [31:0] image_r_q0;
output  [9:0] conv1_weight_address0;
output   conv1_weight_ce0;
input  [31:0] conv1_weight_q0;
output  [13:0] shuffle_conv_3x3_address0;
output   shuffle_conv_3x3_ce0;
input  [31:0] shuffle_conv_3x3_q0;
output  [13:0] shuffle_conv_3x3_address1;
output   shuffle_conv_3x3_ce1;
input  [31:0] shuffle_conv_3x3_q1;
output  [17:0] shuffle_conv_1x1_address0;
output   shuffle_conv_1x1_ce0;
input  [31:0] shuffle_conv_1x1_q0;
output  [17:0] shuffle_conv_1x1_address1;
output   shuffle_conv_1x1_ce1;
input  [31:0] shuffle_conv_1x1_q1;
output  [16:0] conv_last_weight_address0;
output   conv_last_weight_ce0;
input  [31:0] conv_last_weight_q0;
output  [12:0] fc_weight_address0;
output   fc_weight_ce0;
input  [31:0] fc_weight_q0;
output  [11:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [11:0] bias_address1;
output   bias_ce1;
input  [31:0] bias_q1;
output  [9:0] fc_output_address0;
output   fc_output_ce0;
output   fc_output_we0;
output  [31:0] fc_output_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] shuffle_conv_3x3_address0;
reg shuffle_conv_3x3_ce0;
reg[13:0] shuffle_conv_3x3_address1;
reg shuffle_conv_3x3_ce1;
reg[17:0] shuffle_conv_1x1_address0;
reg shuffle_conv_1x1_ce0;
reg[17:0] shuffle_conv_1x1_address1;
reg shuffle_conv_1x1_ce1;
reg fc_weight_ce0;
reg[11:0] bias_address0;
reg bias_ce0;
reg[11:0] bias_address1;
reg bias_ce1;
reg fc_output_ce0;
reg fc_output_we0;

(* fsm_encoding = "none" *) reg   [143:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] ShuffleConvs_0_Downs_7_address0;
reg    ShuffleConvs_0_Downs_7_ce0;
reg    ShuffleConvs_0_Downs_7_we0;
wire   [31:0] ShuffleConvs_0_Downs_7_q0;
reg   [9:0] ShuffleConvs_0_Downs_10_address0;
reg    ShuffleConvs_0_Downs_10_ce0;
reg    ShuffleConvs_0_Downs_10_we0;
wire   [31:0] ShuffleConvs_0_Downs_10_q0;
reg   [9:0] ShuffleConvs_0_Downs_8_address0;
reg    ShuffleConvs_0_Downs_8_ce0;
reg    ShuffleConvs_0_Downs_8_we0;
wire   [31:0] ShuffleConvs_0_Downs_8_q0;
reg   [9:0] ShuffleConvs_0_Shuff_5_address0;
reg    ShuffleConvs_0_Shuff_5_ce0;
reg    ShuffleConvs_0_Shuff_5_we0;
wire   [31:0] ShuffleConvs_0_Shuff_5_q0;
reg   [9:0] ShuffleConvs_0_Shuff_7_address0;
reg    ShuffleConvs_0_Shuff_7_ce0;
reg    ShuffleConvs_0_Shuff_7_we0;
wire   [31:0] ShuffleConvs_0_Shuff_7_q0;
reg   [9:0] ShuffleConvs_0_Shuff_8_address0;
reg    ShuffleConvs_0_Shuff_8_ce0;
reg    ShuffleConvs_0_Shuff_8_we0;
wire   [31:0] ShuffleConvs_0_Shuff_8_q0;
reg   [9:0] ShuffleConvs_0_Shuff_11_address0;
reg    ShuffleConvs_0_Shuff_11_ce0;
reg    ShuffleConvs_0_Shuff_11_we0;
wire   [31:0] ShuffleConvs_0_Shuff_11_q0;
reg   [9:0] ShuffleConvs_0_Shuff_13_address0;
reg    ShuffleConvs_0_Shuff_13_ce0;
reg    ShuffleConvs_0_Shuff_13_we0;
wire   [31:0] ShuffleConvs_0_Shuff_13_q0;
reg   [9:0] ShuffleConvs_0_Shuff_18_address0;
reg    ShuffleConvs_0_Shuff_18_ce0;
reg    ShuffleConvs_0_Shuff_18_we0;
wire   [31:0] ShuffleConvs_0_Shuff_18_q0;
reg   [11:0] ShuffleConvs_1_Downs_7_address0;
reg    ShuffleConvs_1_Downs_7_ce0;
reg    ShuffleConvs_1_Downs_7_we0;
wire   [31:0] ShuffleConvs_1_Downs_7_q0;
reg   [11:0] ShuffleConvs_1_Downs_10_address0;
reg    ShuffleConvs_1_Downs_10_ce0;
reg    ShuffleConvs_1_Downs_10_we0;
wire   [31:0] ShuffleConvs_1_Downs_10_q0;
reg   [11:0] ShuffleConvs_1_Downs_8_address0;
reg    ShuffleConvs_1_Downs_8_ce0;
reg    ShuffleConvs_1_Downs_8_we0;
wire   [31:0] ShuffleConvs_1_Downs_8_q0;
reg   [11:0] ShuffleConvs_1_Shuff_1_address0;
reg    ShuffleConvs_1_Shuff_1_ce0;
reg    ShuffleConvs_1_Shuff_1_we0;
wire   [31:0] ShuffleConvs_1_Shuff_1_q0;
reg   [11:0] ShuffleConvs_1_Shuff_5_address0;
reg    ShuffleConvs_1_Shuff_5_ce0;
reg    ShuffleConvs_1_Shuff_5_we0;
wire   [31:0] ShuffleConvs_1_Shuff_5_q0;
reg   [11:0] ShuffleConvs_1_Shuff_7_address0;
reg    ShuffleConvs_1_Shuff_7_ce0;
reg    ShuffleConvs_1_Shuff_7_we0;
wire   [31:0] ShuffleConvs_1_Shuff_7_q0;
reg   [11:0] ShuffleConvs_1_Shuff_11_address0;
reg    ShuffleConvs_1_Shuff_11_ce0;
reg    ShuffleConvs_1_Shuff_11_we0;
wire   [31:0] ShuffleConvs_1_Shuff_11_q0;
reg   [11:0] ShuffleConvs_1_Shuff_13_address0;
reg    ShuffleConvs_1_Shuff_13_ce0;
reg    ShuffleConvs_1_Shuff_13_we0;
wire   [31:0] ShuffleConvs_1_Shuff_13_q0;
reg   [11:0] ShuffleConvs_1_Shuff_19_address0;
reg    ShuffleConvs_1_Shuff_19_ce0;
reg    ShuffleConvs_1_Shuff_19_we0;
wire   [31:0] ShuffleConvs_1_Shuff_19_q0;
reg   [11:0] ShuffleConvs_1_Shuff_21_address0;
reg    ShuffleConvs_1_Shuff_21_ce0;
reg    ShuffleConvs_1_Shuff_21_we0;
wire   [31:0] ShuffleConvs_1_Shuff_21_q0;
reg   [11:0] ShuffleConvs_1_Shuff_25_address0;
reg    ShuffleConvs_1_Shuff_25_ce0;
reg    ShuffleConvs_1_Shuff_25_we0;
wire   [31:0] ShuffleConvs_1_Shuff_25_q0;
reg   [11:0] ShuffleConvs_1_Shuff_27_address0;
reg    ShuffleConvs_1_Shuff_27_ce0;
reg    ShuffleConvs_1_Shuff_27_we0;
wire   [31:0] ShuffleConvs_1_Shuff_27_q0;
reg   [11:0] ShuffleConvs_1_Shuff_31_address0;
reg    ShuffleConvs_1_Shuff_31_ce0;
reg    ShuffleConvs_1_Shuff_31_we0;
wire   [31:0] ShuffleConvs_1_Shuff_31_q0;
reg   [11:0] ShuffleConvs_1_Shuff_33_address0;
reg    ShuffleConvs_1_Shuff_33_ce0;
reg    ShuffleConvs_1_Shuff_33_we0;
wire   [31:0] ShuffleConvs_1_Shuff_33_q0;
reg   [11:0] ShuffleConvs_1_Shuff_37_address0;
reg    ShuffleConvs_1_Shuff_37_ce0;
reg    ShuffleConvs_1_Shuff_37_we0;
wire   [31:0] ShuffleConvs_1_Shuff_37_q0;
reg   [11:0] ShuffleConvs_1_Shuff_41_address0;
reg    ShuffleConvs_1_Shuff_41_ce0;
reg    ShuffleConvs_1_Shuff_41_we0;
wire   [31:0] ShuffleConvs_1_Shuff_41_q0;
reg   [11:0] ShuffleConvs_1_Shuff_45_address0;
reg    ShuffleConvs_1_Shuff_45_ce0;
reg    ShuffleConvs_1_Shuff_45_we0;
wire   [31:0] ShuffleConvs_1_Shuff_45_q0;
reg   [11:0] ShuffleConvs_1_Shuff_47_address0;
reg    ShuffleConvs_1_Shuff_47_ce0;
reg    ShuffleConvs_1_Shuff_47_we0;
wire   [31:0] ShuffleConvs_1_Shuff_47_q0;
reg   [11:0] ShuffleConvs_1_Shuff_50_address0;
reg    ShuffleConvs_1_Shuff_50_ce0;
reg    ShuffleConvs_1_Shuff_50_we0;
wire   [31:0] ShuffleConvs_1_Shuff_50_q0;
reg   [13:0] ShuffleConvs_2_Downs_7_address0;
reg    ShuffleConvs_2_Downs_7_ce0;
reg    ShuffleConvs_2_Downs_7_we0;
wire   [31:0] ShuffleConvs_2_Downs_7_q0;
reg   [13:0] ShuffleConvs_2_Downs_10_address0;
reg    ShuffleConvs_2_Downs_10_ce0;
reg    ShuffleConvs_2_Downs_10_we0;
wire   [31:0] ShuffleConvs_2_Downs_10_q0;
reg   [13:0] ShuffleConvs_2_Downs_8_address0;
reg    ShuffleConvs_2_Downs_8_ce0;
reg    ShuffleConvs_2_Downs_8_we0;
wire   [31:0] ShuffleConvs_2_Downs_8_q0;
reg   [13:0] ShuffleConvs_2_Shuff_5_address0;
reg    ShuffleConvs_2_Shuff_5_ce0;
reg    ShuffleConvs_2_Shuff_5_we0;
wire   [31:0] ShuffleConvs_2_Shuff_5_q0;
reg   [13:0] ShuffleConvs_2_Shuff_7_address0;
reg    ShuffleConvs_2_Shuff_7_ce0;
reg    ShuffleConvs_2_Shuff_7_we0;
wire   [31:0] ShuffleConvs_2_Shuff_7_q0;
reg   [13:0] ShuffleConvs_2_Shuff_8_address0;
reg    ShuffleConvs_2_Shuff_8_ce0;
reg    ShuffleConvs_2_Shuff_8_we0;
wire   [31:0] ShuffleConvs_2_Shuff_8_q0;
reg   [13:0] ShuffleConvs_2_Shuff_11_address0;
reg    ShuffleConvs_2_Shuff_11_ce0;
reg    ShuffleConvs_2_Shuff_11_we0;
wire   [31:0] ShuffleConvs_2_Shuff_11_q0;
reg   [13:0] ShuffleConvs_2_Shuff_13_address0;
reg    ShuffleConvs_2_Shuff_13_ce0;
reg    ShuffleConvs_2_Shuff_13_we0;
wire   [31:0] ShuffleConvs_2_Shuff_13_q0;
reg   [13:0] ShuffleConvs_2_Shuff_18_address0;
reg    ShuffleConvs_2_Shuff_18_ce0;
reg    ShuffleConvs_2_Shuff_18_we0;
wire   [31:0] ShuffleConvs_2_Shuff_18_q0;
reg   [7:0] ShuffleConvs_0_Downs_9_address0;
reg    ShuffleConvs_0_Downs_9_ce0;
reg    ShuffleConvs_0_Downs_9_we0;
wire   [31:0] ShuffleConvs_0_Downs_9_q0;
reg   [7:0] ShuffleConvs_0_Downs_6_address0;
reg    ShuffleConvs_0_Downs_6_ce0;
reg    ShuffleConvs_0_Downs_6_we0;
wire   [31:0] ShuffleConvs_0_Downs_6_q0;
reg   [7:0] ShuffleConvs_0_Shuff_6_address0;
reg    ShuffleConvs_0_Shuff_6_ce0;
reg    ShuffleConvs_0_Shuff_6_we0;
wire   [31:0] ShuffleConvs_0_Shuff_6_q0;
reg   [7:0] ShuffleConvs_0_Shuff_9_address0;
reg    ShuffleConvs_0_Shuff_9_ce0;
reg    ShuffleConvs_0_Shuff_9_we0;
wire   [31:0] ShuffleConvs_0_Shuff_9_q0;
reg   [7:0] ShuffleConvs_0_Shuff_15_address0;
reg    ShuffleConvs_0_Shuff_15_ce0;
reg    ShuffleConvs_0_Shuff_15_we0;
wire   [31:0] ShuffleConvs_0_Shuff_15_q0;
reg   [8:0] ShuffleConvs_1_Downs_9_address0;
reg    ShuffleConvs_1_Downs_9_ce0;
reg    ShuffleConvs_1_Downs_9_we0;
wire   [31:0] ShuffleConvs_1_Downs_9_q0;
reg   [8:0] ShuffleConvs_1_Downs_6_address0;
reg    ShuffleConvs_1_Downs_6_ce0;
reg    ShuffleConvs_1_Downs_6_we0;
wire   [31:0] ShuffleConvs_1_Downs_6_q0;
reg   [8:0] ShuffleConvs_1_Shuff_3_address0;
reg    ShuffleConvs_1_Shuff_3_ce0;
reg    ShuffleConvs_1_Shuff_3_we0;
wire   [31:0] ShuffleConvs_1_Shuff_3_q0;
reg   [8:0] ShuffleConvs_1_Shuff_9_address0;
reg    ShuffleConvs_1_Shuff_9_ce0;
reg    ShuffleConvs_1_Shuff_9_we0;
wire   [31:0] ShuffleConvs_1_Shuff_9_q0;
reg   [8:0] ShuffleConvs_1_Shuff_15_address0;
reg    ShuffleConvs_1_Shuff_15_ce0;
reg    ShuffleConvs_1_Shuff_15_we0;
wire   [31:0] ShuffleConvs_1_Shuff_15_q0;
reg   [8:0] ShuffleConvs_1_Shuff_23_address0;
reg    ShuffleConvs_1_Shuff_23_ce0;
reg    ShuffleConvs_1_Shuff_23_we0;
wire   [31:0] ShuffleConvs_1_Shuff_23_q0;
reg   [8:0] ShuffleConvs_1_Shuff_29_address0;
reg    ShuffleConvs_1_Shuff_29_ce0;
reg    ShuffleConvs_1_Shuff_29_we0;
wire   [31:0] ShuffleConvs_1_Shuff_29_q0;
reg   [8:0] ShuffleConvs_1_Shuff_35_address0;
reg    ShuffleConvs_1_Shuff_35_ce0;
reg    ShuffleConvs_1_Shuff_35_we0;
wire   [31:0] ShuffleConvs_1_Shuff_35_q0;
reg   [8:0] ShuffleConvs_1_Shuff_43_address0;
reg    ShuffleConvs_1_Shuff_43_ce0;
reg    ShuffleConvs_1_Shuff_43_we0;
wire   [31:0] ShuffleConvs_1_Shuff_43_q0;
reg   [8:0] ShuffleConvs_1_Shuff_49_address0;
reg    ShuffleConvs_1_Shuff_49_ce0;
reg    ShuffleConvs_1_Shuff_49_we0;
wire   [31:0] ShuffleConvs_1_Shuff_49_q0;
reg   [9:0] ShuffleConvs_2_Downs_9_address0;
reg    ShuffleConvs_2_Downs_9_ce0;
reg    ShuffleConvs_2_Downs_9_we0;
wire   [31:0] ShuffleConvs_2_Downs_9_q0;
reg   [9:0] ShuffleConvs_2_Downs_6_address0;
reg    ShuffleConvs_2_Downs_6_ce0;
reg    ShuffleConvs_2_Downs_6_we0;
wire   [31:0] ShuffleConvs_2_Downs_6_q0;
reg   [9:0] ShuffleConvs_2_Shuff_6_address0;
reg    ShuffleConvs_2_Shuff_6_ce0;
reg    ShuffleConvs_2_Shuff_6_we0;
wire   [31:0] ShuffleConvs_2_Shuff_6_q0;
reg   [9:0] ShuffleConvs_2_Shuff_9_address0;
reg    ShuffleConvs_2_Shuff_9_ce0;
reg    ShuffleConvs_2_Shuff_9_we0;
wire   [31:0] ShuffleConvs_2_Shuff_9_q0;
reg   [9:0] ShuffleConvs_2_Shuff_15_address0;
reg    ShuffleConvs_2_Shuff_15_ce0;
reg    ShuffleConvs_2_Shuff_15_we0;
wire   [31:0] ShuffleConvs_2_Shuff_15_q0;
reg   [4:0] conv1_bias_address0;
reg    conv1_bias_ce0;
reg    conv1_bias_we0;
wire   [31:0] conv1_bias_q0;
reg   [4:0] ShuffleConvs_0_Downs_3_address0;
reg    ShuffleConvs_0_Downs_3_ce0;
reg    ShuffleConvs_0_Downs_3_we0;
wire   [31:0] ShuffleConvs_0_Downs_3_q0;
reg   [4:0] ShuffleConvs_0_Downs_5_address0;
reg    ShuffleConvs_0_Downs_5_ce0;
reg    ShuffleConvs_0_Downs_5_we0;
wire   [31:0] ShuffleConvs_0_Downs_5_q0;
reg   [4:0] ShuffleConvs_0_Downs_address0;
reg    ShuffleConvs_0_Downs_ce0;
reg    ShuffleConvs_0_Downs_we0;
wire   [31:0] ShuffleConvs_0_Downs_q0;
reg   [4:0] ShuffleConvs_0_Downs_1_address0;
reg    ShuffleConvs_0_Downs_1_ce0;
reg    ShuffleConvs_0_Downs_1_we0;
wire   [31:0] ShuffleConvs_0_Downs_1_q0;
reg   [4:0] ShuffleConvs_0_Downs_4_address0;
reg    ShuffleConvs_0_Downs_4_ce0;
reg    ShuffleConvs_0_Downs_4_we0;
wire   [31:0] ShuffleConvs_0_Downs_4_q0;
reg   [4:0] ShuffleConvs_0_Shuff_19_address0;
reg    ShuffleConvs_0_Shuff_19_ce0;
reg    ShuffleConvs_0_Shuff_19_we0;
wire   [31:0] ShuffleConvs_0_Shuff_19_q0;
reg   [4:0] ShuffleConvs_0_Shuff_20_address0;
reg    ShuffleConvs_0_Shuff_20_ce0;
reg    ShuffleConvs_0_Shuff_20_we0;
wire   [31:0] ShuffleConvs_0_Shuff_20_q0;
reg   [4:0] ShuffleConvs_0_Shuff_21_address0;
reg    ShuffleConvs_0_Shuff_21_ce0;
reg    ShuffleConvs_0_Shuff_21_we0;
wire   [31:0] ShuffleConvs_0_Shuff_21_q0;
reg   [4:0] ShuffleConvs_0_Shuff_22_address0;
reg    ShuffleConvs_0_Shuff_22_ce0;
reg    ShuffleConvs_0_Shuff_22_we0;
wire   [31:0] ShuffleConvs_0_Shuff_22_q0;
reg   [4:0] ShuffleConvs_0_Shuff_1_address0;
reg    ShuffleConvs_0_Shuff_1_ce0;
reg    ShuffleConvs_0_Shuff_1_we0;
wire   [31:0] ShuffleConvs_0_Shuff_1_q0;
reg   [4:0] ShuffleConvs_0_Shuff_3_address0;
reg    ShuffleConvs_0_Shuff_3_ce0;
reg    ShuffleConvs_0_Shuff_3_we0;
wire   [31:0] ShuffleConvs_0_Shuff_3_q0;
reg   [4:0] ShuffleConvs_0_Shuff_4_address0;
reg    ShuffleConvs_0_Shuff_4_ce0;
reg    ShuffleConvs_0_Shuff_4_we0;
wire   [31:0] ShuffleConvs_0_Shuff_4_q0;
reg   [4:0] ShuffleConvs_0_Shuff_17_address0;
reg    ShuffleConvs_0_Shuff_17_ce0;
reg    ShuffleConvs_0_Shuff_17_we0;
wire   [31:0] ShuffleConvs_0_Shuff_17_q0;
reg   [4:0] ShuffleConvs_0_Shuff_address0;
reg    ShuffleConvs_0_Shuff_ce0;
reg    ShuffleConvs_0_Shuff_we0;
wire   [31:0] ShuffleConvs_0_Shuff_q0;
reg   [5:0] ShuffleConvs_1_Downs_3_address0;
reg    ShuffleConvs_1_Downs_3_ce0;
reg    ShuffleConvs_1_Downs_3_we0;
wire   [31:0] ShuffleConvs_1_Downs_3_q0;
reg   [5:0] ShuffleConvs_1_Downs_5_address0;
reg    ShuffleConvs_1_Downs_5_ce0;
reg    ShuffleConvs_1_Downs_5_we0;
wire   [31:0] ShuffleConvs_1_Downs_5_q0;
reg   [5:0] ShuffleConvs_1_Downs_address0;
reg    ShuffleConvs_1_Downs_ce0;
reg    ShuffleConvs_1_Downs_we0;
wire   [31:0] ShuffleConvs_1_Downs_q0;
reg   [5:0] ShuffleConvs_1_Downs_1_address0;
reg    ShuffleConvs_1_Downs_1_ce0;
reg    ShuffleConvs_1_Downs_1_we0;
wire   [31:0] ShuffleConvs_1_Downs_1_q0;
reg   [5:0] ShuffleConvs_1_Downs_4_address0;
reg    ShuffleConvs_1_Downs_4_ce0;
reg    ShuffleConvs_1_Downs_4_we0;
wire   [31:0] ShuffleConvs_1_Downs_4_q0;
reg   [5:0] ShuffleConvs_1_Shuff_51_address0;
reg    ShuffleConvs_1_Shuff_51_ce0;
reg    ShuffleConvs_1_Shuff_51_we0;
wire   [31:0] ShuffleConvs_1_Shuff_51_q0;
reg   [5:0] ShuffleConvs_1_Shuff_52_address0;
reg    ShuffleConvs_1_Shuff_52_ce0;
reg    ShuffleConvs_1_Shuff_52_we0;
wire   [31:0] ShuffleConvs_1_Shuff_52_q0;
reg   [5:0] ShuffleConvs_1_Shuff_53_address0;
reg    ShuffleConvs_1_Shuff_53_ce0;
reg    ShuffleConvs_1_Shuff_53_we0;
wire   [31:0] ShuffleConvs_1_Shuff_53_q0;
reg   [5:0] ShuffleConvs_1_Shuff_54_address0;
reg    ShuffleConvs_1_Shuff_54_ce0;
reg    ShuffleConvs_1_Shuff_54_we0;
wire   [31:0] ShuffleConvs_1_Shuff_54_q0;
reg   [5:0] ShuffleConvs_1_Shuff_56_address0;
reg    ShuffleConvs_1_Shuff_56_ce0;
reg    ShuffleConvs_1_Shuff_56_we0;
wire   [31:0] ShuffleConvs_1_Shuff_56_q0;
reg   [5:0] ShuffleConvs_1_Shuff_57_address0;
reg    ShuffleConvs_1_Shuff_57_ce0;
reg    ShuffleConvs_1_Shuff_57_we0;
wire   [31:0] ShuffleConvs_1_Shuff_57_q0;
reg   [5:0] ShuffleConvs_1_Shuff_58_address0;
reg    ShuffleConvs_1_Shuff_58_ce0;
reg    ShuffleConvs_1_Shuff_58_we0;
wire   [31:0] ShuffleConvs_1_Shuff_58_q0;
reg   [5:0] ShuffleConvs_1_Shuff_59_address0;
reg    ShuffleConvs_1_Shuff_59_ce0;
reg    ShuffleConvs_1_Shuff_59_we0;
wire   [31:0] ShuffleConvs_1_Shuff_59_q0;
reg   [5:0] ShuffleConvs_1_Shuff_60_address0;
reg    ShuffleConvs_1_Shuff_60_ce0;
reg    ShuffleConvs_1_Shuff_60_we0;
wire   [31:0] ShuffleConvs_1_Shuff_60_q0;
reg   [5:0] ShuffleConvs_1_Shuff_61_address0;
reg    ShuffleConvs_1_Shuff_61_ce0;
reg    ShuffleConvs_1_Shuff_61_we0;
wire   [31:0] ShuffleConvs_1_Shuff_61_q0;
reg   [5:0] ShuffleConvs_1_Shuff_62_address0;
reg    ShuffleConvs_1_Shuff_62_ce0;
reg    ShuffleConvs_1_Shuff_62_we0;
wire   [31:0] ShuffleConvs_1_Shuff_62_q0;
reg   [5:0] ShuffleConvs_1_Shuff_63_address0;
reg    ShuffleConvs_1_Shuff_63_ce0;
reg    ShuffleConvs_1_Shuff_63_we0;
wire   [31:0] ShuffleConvs_1_Shuff_63_q0;
reg   [5:0] ShuffleConvs_1_Shuff_64_address0;
reg    ShuffleConvs_1_Shuff_64_ce0;
reg    ShuffleConvs_1_Shuff_64_we0;
wire   [31:0] ShuffleConvs_1_Shuff_64_q0;
reg   [5:0] ShuffleConvs_1_Shuff_65_address0;
reg    ShuffleConvs_1_Shuff_65_ce0;
reg    ShuffleConvs_1_Shuff_65_we0;
wire   [31:0] ShuffleConvs_1_Shuff_65_q0;
reg   [5:0] ShuffleConvs_1_Shuff_67_address0;
reg    ShuffleConvs_1_Shuff_67_ce0;
reg    ShuffleConvs_1_Shuff_67_we0;
wire   [31:0] ShuffleConvs_1_Shuff_67_q0;
reg   [5:0] ShuffleConvs_1_Shuff_68_address0;
reg    ShuffleConvs_1_Shuff_68_ce0;
reg    ShuffleConvs_1_Shuff_68_we0;
wire   [31:0] ShuffleConvs_1_Shuff_68_q0;
reg   [5:0] ShuffleConvs_1_Shuff_69_address0;
reg    ShuffleConvs_1_Shuff_69_ce0;
reg    ShuffleConvs_1_Shuff_69_we0;
wire   [31:0] ShuffleConvs_1_Shuff_69_q0;
reg   [5:0] ShuffleConvs_1_Shuff_70_address0;
reg    ShuffleConvs_1_Shuff_70_ce0;
reg    ShuffleConvs_1_Shuff_70_we0;
wire   [31:0] ShuffleConvs_1_Shuff_70_q0;
reg   [5:0] ShuffleConvs_1_Shuff_71_address0;
reg    ShuffleConvs_1_Shuff_71_ce0;
reg    ShuffleConvs_1_Shuff_71_we0;
wire   [31:0] ShuffleConvs_1_Shuff_71_q0;
reg   [5:0] ShuffleConvs_1_Shuff_17_address0;
reg    ShuffleConvs_1_Shuff_17_ce0;
reg    ShuffleConvs_1_Shuff_17_we0;
wire   [31:0] ShuffleConvs_1_Shuff_17_q0;
reg   [5:0] ShuffleConvs_1_Shuff_39_address0;
reg    ShuffleConvs_1_Shuff_39_ce0;
reg    ShuffleConvs_1_Shuff_39_we0;
wire   [31:0] ShuffleConvs_1_Shuff_39_q0;
reg   [5:0] ShuffleConvs_1_Shuff_55_address0;
reg    ShuffleConvs_1_Shuff_55_ce0;
reg    ShuffleConvs_1_Shuff_55_we0;
wire   [31:0] ShuffleConvs_1_Shuff_55_q0;
reg   [5:0] ShuffleConvs_1_Shuff_66_address0;
reg    ShuffleConvs_1_Shuff_66_ce0;
reg    ShuffleConvs_1_Shuff_66_we0;
wire   [31:0] ShuffleConvs_1_Shuff_66_q0;
reg   [5:0] ShuffleConvs_1_Shuff_address0;
reg    ShuffleConvs_1_Shuff_ce0;
reg    ShuffleConvs_1_Shuff_we0;
wire   [31:0] ShuffleConvs_1_Shuff_q0;
reg   [6:0] ShuffleConvs_2_Downs_3_address0;
reg    ShuffleConvs_2_Downs_3_ce0;
reg    ShuffleConvs_2_Downs_3_we0;
wire   [31:0] ShuffleConvs_2_Downs_3_q0;
reg   [6:0] ShuffleConvs_2_Downs_5_address0;
reg    ShuffleConvs_2_Downs_5_ce0;
reg    ShuffleConvs_2_Downs_5_we0;
wire   [31:0] ShuffleConvs_2_Downs_5_q0;
reg   [6:0] ShuffleConvs_2_Downs_address0;
reg    ShuffleConvs_2_Downs_ce0;
reg    ShuffleConvs_2_Downs_we0;
wire   [31:0] ShuffleConvs_2_Downs_q0;
reg   [6:0] ShuffleConvs_2_Downs_1_address0;
reg    ShuffleConvs_2_Downs_1_ce0;
reg    ShuffleConvs_2_Downs_1_we0;
wire   [31:0] ShuffleConvs_2_Downs_1_q0;
reg   [6:0] ShuffleConvs_2_Downs_4_address0;
reg    ShuffleConvs_2_Downs_4_ce0;
reg    ShuffleConvs_2_Downs_4_we0;
wire   [31:0] ShuffleConvs_2_Downs_4_q0;
reg   [6:0] ShuffleConvs_2_Shuff_19_address0;
reg    ShuffleConvs_2_Shuff_19_ce0;
reg    ShuffleConvs_2_Shuff_19_we0;
wire   [31:0] ShuffleConvs_2_Shuff_19_q0;
reg   [6:0] ShuffleConvs_2_Shuff_20_address0;
reg    ShuffleConvs_2_Shuff_20_ce0;
reg    ShuffleConvs_2_Shuff_20_we0;
wire   [31:0] ShuffleConvs_2_Shuff_20_q0;
reg   [6:0] ShuffleConvs_2_Shuff_21_address0;
reg    ShuffleConvs_2_Shuff_21_ce0;
reg    ShuffleConvs_2_Shuff_21_we0;
wire   [31:0] ShuffleConvs_2_Shuff_21_q0;
reg   [6:0] ShuffleConvs_2_Shuff_22_address0;
reg    ShuffleConvs_2_Shuff_22_ce0;
reg    ShuffleConvs_2_Shuff_22_we0;
wire   [31:0] ShuffleConvs_2_Shuff_22_q0;
reg   [6:0] ShuffleConvs_2_Shuff_1_address0;
reg    ShuffleConvs_2_Shuff_1_ce0;
reg    ShuffleConvs_2_Shuff_1_we0;
wire   [31:0] ShuffleConvs_2_Shuff_1_q0;
reg   [6:0] ShuffleConvs_2_Shuff_3_address0;
reg    ShuffleConvs_2_Shuff_3_ce0;
reg    ShuffleConvs_2_Shuff_3_we0;
wire   [31:0] ShuffleConvs_2_Shuff_3_q0;
reg   [6:0] ShuffleConvs_2_Shuff_4_address0;
reg    ShuffleConvs_2_Shuff_4_ce0;
reg    ShuffleConvs_2_Shuff_4_we0;
wire   [31:0] ShuffleConvs_2_Shuff_4_q0;
reg   [6:0] ShuffleConvs_2_Shuff_17_address0;
reg    ShuffleConvs_2_Shuff_17_ce0;
reg    ShuffleConvs_2_Shuff_17_we0;
wire   [31:0] ShuffleConvs_2_Shuff_17_q0;
reg   [6:0] ShuffleConvs_2_Shuff_address0;
reg    ShuffleConvs_2_Shuff_ce0;
reg    ShuffleConvs_2_Shuff_we0;
wire   [31:0] ShuffleConvs_2_Shuff_q0;
reg   [8:0] conv_last_bias_address0;
reg    conv_last_bias_ce0;
reg    conv_last_bias_we0;
wire   [31:0] conv_last_bias_q0;
reg   [3:0] fc_bias_address0;
reg    fc_bias_ce0;
reg    fc_bias_we0;
wire   [31:0] fc_bias_q0;
reg   [14:0] conv1_output_address0;
reg    conv1_output_ce0;
reg    conv1_output_we0;
wire   [31:0] conv1_output_q0;
reg   [13:0] downsampleunit0_outp_address0;
reg    downsampleunit0_outp_ce0;
reg    downsampleunit0_outp_we0;
wire   [31:0] downsampleunit0_outp_q0;
reg    downsampleunit0_outp_ce1;
wire   [31:0] downsampleunit0_outp_q1;
reg   [13:0] shuffleunit0_0_outpu_address0;
reg    shuffleunit0_0_outpu_ce0;
reg    shuffleunit0_0_outpu_we0;
wire   [31:0] shuffleunit0_0_outpu_q0;
reg    shuffleunit0_0_outpu_ce1;
wire   [31:0] shuffleunit0_0_outpu_q1;
reg   [13:0] shuffleunit0_1_outpu_address0;
reg    shuffleunit0_1_outpu_ce0;
reg    shuffleunit0_1_outpu_we0;
wire   [31:0] shuffleunit0_1_outpu_q0;
reg    shuffleunit0_1_outpu_ce1;
wire   [31:0] shuffleunit0_1_outpu_q1;
reg   [13:0] shuffleunit0_2_outpu_address0;
reg    shuffleunit0_2_outpu_ce0;
reg    shuffleunit0_2_outpu_we0;
wire   [31:0] shuffleunit0_2_outpu_q0;
reg   [12:0] downsampleunit1_outp_address0;
reg    downsampleunit1_outp_ce0;
reg    downsampleunit1_outp_we0;
wire   [31:0] downsampleunit1_outp_q0;
reg    downsampleunit1_outp_ce1;
wire   [31:0] downsampleunit1_outp_q1;
reg   [12:0] shuffleunit1_0_outpu_address0;
reg    shuffleunit1_0_outpu_ce0;
reg    shuffleunit1_0_outpu_we0;
wire   [31:0] shuffleunit1_0_outpu_q0;
reg    shuffleunit1_0_outpu_ce1;
wire   [31:0] shuffleunit1_0_outpu_q1;
reg   [12:0] shuffleunit1_1_outpu_address0;
reg    shuffleunit1_1_outpu_ce0;
reg    shuffleunit1_1_outpu_we0;
wire   [31:0] shuffleunit1_1_outpu_q0;
reg    shuffleunit1_1_outpu_ce1;
wire   [31:0] shuffleunit1_1_outpu_q1;
reg   [12:0] shuffleunit1_2_outpu_address0;
reg    shuffleunit1_2_outpu_ce0;
reg    shuffleunit1_2_outpu_we0;
wire   [31:0] shuffleunit1_2_outpu_q0;
reg    shuffleunit1_2_outpu_ce1;
wire   [31:0] shuffleunit1_2_outpu_q1;
reg   [12:0] shuffleunit1_3_outpu_address0;
reg    shuffleunit1_3_outpu_ce0;
reg    shuffleunit1_3_outpu_we0;
wire   [31:0] shuffleunit1_3_outpu_q0;
reg    shuffleunit1_3_outpu_ce1;
wire   [31:0] shuffleunit1_3_outpu_q1;
reg   [12:0] shuffleunit1_4_outpu_address0;
reg    shuffleunit1_4_outpu_ce0;
reg    shuffleunit1_4_outpu_we0;
wire   [31:0] shuffleunit1_4_outpu_q0;
reg    shuffleunit1_4_outpu_ce1;
wire   [31:0] shuffleunit1_4_outpu_q1;
reg   [12:0] shuffleunit1_5_outpu_address0;
reg    shuffleunit1_5_outpu_ce0;
reg    shuffleunit1_5_outpu_we0;
wire   [31:0] shuffleunit1_5_outpu_q0;
reg    shuffleunit1_5_outpu_ce1;
wire   [31:0] shuffleunit1_5_outpu_q1;
reg   [12:0] shuffleunit1_6_outpu_address0;
reg    shuffleunit1_6_outpu_ce0;
reg    shuffleunit1_6_outpu_we0;
wire   [31:0] shuffleunit1_6_outpu_q0;
reg    shuffleunit1_6_outpu_ce1;
wire   [31:0] shuffleunit1_6_outpu_q1;
reg   [12:0] shuffleunit1_7_outpu_address0;
reg    shuffleunit1_7_outpu_ce0;
reg    shuffleunit1_7_outpu_we0;
wire   [31:0] shuffleunit1_7_outpu_q0;
reg   [11:0] downsampleunit2_outp_address0;
reg    downsampleunit2_outp_ce0;
reg    downsampleunit2_outp_we0;
wire   [31:0] downsampleunit2_outp_q0;
reg    downsampleunit2_outp_ce1;
wire   [31:0] downsampleunit2_outp_q1;
reg   [11:0] shuffleunit2_0_outpu_address0;
reg    shuffleunit2_0_outpu_ce0;
reg    shuffleunit2_0_outpu_we0;
wire   [31:0] shuffleunit2_0_outpu_q0;
reg    shuffleunit2_0_outpu_ce1;
wire   [31:0] shuffleunit2_0_outpu_q1;
reg   [11:0] shuffleunit2_1_outpu_address0;
reg    shuffleunit2_1_outpu_ce0;
reg    shuffleunit2_1_outpu_we0;
wire   [31:0] shuffleunit2_1_outpu_q0;
reg    shuffleunit2_1_outpu_ce1;
wire   [31:0] shuffleunit2_1_outpu_q1;
reg   [11:0] shuffleunit2_2_outpu_address0;
reg    shuffleunit2_2_outpu_ce0;
reg    shuffleunit2_2_outpu_we0;
wire   [31:0] shuffleunit2_2_outpu_q0;
reg   [12:0] conv_last_output_address0;
reg    conv_last_output_ce0;
reg    conv_last_output_we0;
wire   [31:0] conv_last_output_q0;
reg   [8:0] avgpool_output_address0;
reg    avgpool_output_ce0;
reg    avgpool_output_we0;
wire   [31:0] avgpool_output_q0;
wire   [12:0] co_cast1_fu_3590_p1;
reg   [12:0] co_cast1_reg_8874;
wire    ap_CS_fsm_state2;
wire   [11:0] co_cast2_fu_3594_p1;
reg   [11:0] co_cast2_reg_8882;
wire   [10:0] co_cast144_cast_fu_3598_p1;
reg   [10:0] co_cast144_cast_reg_8891;
wire   [8:0] co_cast143_cast1_fu_3602_p1;
reg   [8:0] co_cast143_cast1_reg_8903;
wire   [9:0] co_cast143_cast_fu_3606_p1;
reg   [9:0] co_cast143_cast_reg_8910;
wire   [4:0] co_22_fu_3628_p2;
reg   [4:0] co_22_reg_8924;
wire  signed [11:0] tmp_362_cast_fu_3664_p1;
reg  signed [11:0] tmp_362_cast_reg_8929;
wire   [0:0] exitcond_fu_3622_p2;
wire  signed [12:0] tmp_368_cast_fu_3704_p1;
reg  signed [12:0] tmp_368_cast_reg_8934;
wire  signed [13:0] tmp_439_cast_fu_3744_p1;
reg  signed [13:0] tmp_439_cast_reg_8939;
wire  signed [13:0] tmp_442_cast_fu_3784_p1;
reg  signed [13:0] tmp_442_cast_reg_8944;
wire  signed [13:0] tmp_447_cast_fu_3830_p1;
reg  signed [13:0] tmp_447_cast_reg_8949;
wire  signed [14:0] tmp_450_cast_fu_3870_p1;
reg  signed [14:0] tmp_450_cast_reg_8954;
wire  signed [14:0] tmp_453_cast_fu_3910_p1;
reg  signed [14:0] tmp_453_cast_reg_8959;
wire  signed [14:0] tmp_456_cast_fu_3950_p1;
reg  signed [14:0] tmp_456_cast_reg_8964;
wire  signed [14:0] tmp_461_cast_fu_3996_p1;
reg  signed [14:0] tmp_461_cast_reg_8969;
wire   [6:0] tmp_175_fu_4028_p2;
reg   [6:0] tmp_175_reg_8974;
wire   [6:0] tmp_186_cast_fu_4044_p1;
reg   [6:0] tmp_186_cast_reg_8979;
wire   [7:0] tmp_176_fu_4074_p2;
reg   [7:0] tmp_176_reg_8984;
wire   [7:0] tmp_189_cast_fu_4090_p1;
reg   [7:0] tmp_189_cast_reg_8989;
wire   [7:0] ci_cast_fu_4094_p1;
reg   [7:0] ci_cast_reg_8994;
wire    ap_CS_fsm_state3;
wire   [4:0] ci_9_fu_4108_p2;
reg   [4:0] ci_9_reg_9002;
wire  signed [63:0] tmp_477_cast_fu_4127_p1;
reg  signed [63:0] tmp_477_cast_reg_9007;
wire   [0:0] exitcond2_fu_4102_p2;
wire   [6:0] tmp_187_fu_4142_p2;
reg   [6:0] tmp_187_reg_9030;
wire    ap_CS_fsm_state4;
wire   [13:0] tmp_414_fu_4171_p2;
reg   [13:0] tmp_414_reg_9045;
wire    ap_CS_fsm_state5;
wire   [14:0] tmp_416_fu_4194_p2;
reg   [14:0] tmp_416_reg_9060;
wire   [14:0] tmp_417_fu_4199_p2;
reg   [14:0] tmp_417_reg_9065;
wire   [14:0] tmp_418_fu_4204_p2;
reg   [14:0] tmp_418_reg_9070;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [17:0] tmp_186_cast1_fu_4221_p1;
reg   [17:0] tmp_186_cast1_reg_9090;
wire    ap_CS_fsm_state8;
wire   [16:0] tmp_186_cast2_fu_4225_p1;
reg   [16:0] tmp_186_cast2_reg_9104;
wire   [15:0] tmp_186_cast3_fu_4229_p1;
reg   [15:0] tmp_186_cast3_reg_9114;
wire   [18:0] tmp_186_cast4_fu_4233_p1;
reg   [18:0] tmp_186_cast4_reg_9120;
wire  signed [12:0] tmp_188_cast_fu_4237_p1;
reg  signed [12:0] tmp_188_cast_reg_9134;
wire   [2:0] i_1_fu_4246_p2;
reg   [2:0] i_1_reg_9142;
wire    ap_CS_fsm_state9;
wire   [7:0] tmp_221_fu_4280_p2;
reg   [7:0] tmp_221_reg_9147;
wire   [0:0] exitcond5_fu_4240_p2;
wire  signed [8:0] tmp_330_cast127_cast_1_fu_4286_p1;
reg  signed [8:0] tmp_330_cast127_cast_1_reg_9153;
wire   [8:0] tmp_222_fu_4296_p2;
reg   [8:0] tmp_222_reg_9159;
wire   [12:0] tmp_436_fu_4362_p2;
reg   [12:0] tmp_436_reg_9165;
wire   [8:0] tmp_225_fu_4373_p2;
reg   [8:0] tmp_225_reg_9170;
wire  signed [14:0] tmp_220_cast_fu_4382_p1;
reg  signed [14:0] tmp_220_cast_reg_9176;
wire  signed [9:0] tmp_330_cast127_cast_fu_4386_p1;
reg  signed [9:0] tmp_330_cast127_cast_reg_9181;
wire    ap_CS_fsm_state10;
wire   [8:0] tmp3_fu_4473_p2;
reg   [8:0] tmp3_reg_9200;
wire   [9:0] tmp_226_fu_4482_p2;
reg   [9:0] tmp_226_reg_9205;
wire   [9:0] tmp_227_fu_4493_p2;
reg   [9:0] tmp_227_reg_9211;
wire   [8:0] tmp_234_fu_4503_p2;
reg   [8:0] tmp_234_reg_9217;
wire   [16:0] tmp_509_fu_4524_p2;
reg   [16:0] tmp_509_reg_9223;
wire  signed [63:0] tmp_514_cast_fu_4530_p1;
reg  signed [63:0] tmp_514_cast_reg_9228;
wire    ap_CS_fsm_state11;
wire   [9:0] tmp_228_fu_4624_p2;
reg   [9:0] tmp_228_reg_9259;
wire   [9:0] tmp_229_fu_4634_p2;
reg   [9:0] tmp_229_reg_9265;
wire   [11:0] tmp_268_fu_4646_p2;
reg   [11:0] tmp_268_reg_9271;
wire    ap_CS_fsm_state12;
wire   [16:0] tmp_460_fu_4779_p2;
reg   [16:0] tmp_460_reg_9287;
wire   [16:0] tmp_466_fu_4824_p2;
reg   [16:0] tmp_466_reg_9292;
wire  signed [10:0] tmp_330_cast1_fu_4829_p1;
reg  signed [10:0] tmp_330_cast1_reg_9297;
wire    ap_CS_fsm_state13;
wire   [10:0] tmp_239_fu_4846_p2;
reg   [10:0] tmp_239_reg_9316;
wire   [10:0] tmp_244_fu_4857_p2;
reg   [10:0] tmp_244_reg_9322;
wire    ap_CS_fsm_state14;
wire   [10:0] tmp_247_fu_4951_p2;
reg   [10:0] tmp_247_reg_9338;
wire   [10:0] tmp_250_fu_4961_p2;
reg   [10:0] tmp_250_reg_9344;
wire   [18:0] tmp_514_fu_4998_p2;
reg   [18:0] tmp_514_reg_9350;
wire    ap_CS_fsm_state15;
wire   [10:0] tmp_253_fu_5092_p2;
reg   [10:0] tmp_253_reg_9365;
wire   [10:0] tmp_256_fu_5102_p2;
reg   [10:0] tmp_256_reg_9371;
wire   [10:0] tmp_259_fu_5112_p2;
reg   [10:0] tmp_259_reg_9377;
wire    ap_CS_fsm_state16;
wire   [9:0] tmp_262_fu_5206_p2;
reg   [9:0] tmp_262_reg_9393;
wire   [9:0] tmp_265_fu_5216_p2;
reg   [9:0] tmp_265_reg_9399;
wire    ap_CS_fsm_state17;
wire   [17:0] tmp_506_fu_5353_p2;
reg   [17:0] tmp_506_reg_9415;
wire   [17:0] tmp_510_fu_5361_p2;
reg   [17:0] tmp_510_reg_9420;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire   [4:0] i_3_fu_5384_p2;
reg   [4:0] i_3_reg_9443;
wire    ap_CS_fsm_state21;
wire   [9:0] tmp_310_fu_5422_p2;
reg   [9:0] tmp_310_reg_9448;
wire   [0:0] exitcond11_fu_5378_p2;
wire  signed [11:0] tmp_438_cast_fu_5428_p1;
reg  signed [11:0] tmp_438_cast_reg_9454;
wire   [11:0] tmp_311_fu_5438_p2;
reg   [11:0] tmp_311_reg_9460;
wire   [14:0] tmp_527_fu_5490_p2;
reg   [14:0] tmp_527_reg_9466;
wire   [11:0] tmp_314_fu_5501_p2;
reg   [11:0] tmp_314_reg_9471;
wire    ap_CS_fsm_state22;
wire   [11:0] tmp_315_fu_5595_p2;
reg   [11:0] tmp_315_reg_9487;
wire   [11:0] tmp_316_fu_5605_p2;
reg   [11:0] tmp_316_reg_9493;
wire  signed [12:0] tmp_438_cast1_fu_5610_p1;
reg  signed [12:0] tmp_438_cast1_reg_9499;
wire    ap_CS_fsm_state23;
wire  signed [63:0] tmp_614_cast_fu_5616_p1;
reg  signed [63:0] tmp_614_cast_reg_9506;
wire   [10:0] tmp_317_fu_5711_p2;
reg   [10:0] tmp_317_reg_9527;
wire   [12:0] tmp_318_fu_5722_p2;
reg   [12:0] tmp_318_reg_9533;
wire    ap_CS_fsm_state24;
wire   [12:0] tmp_319_fu_5820_p2;
reg   [12:0] tmp_319_reg_9549;
wire   [12:0] tmp_320_fu_5830_p2;
reg   [12:0] tmp_320_reg_9555;
wire   [12:0] tmp_321_fu_5840_p2;
reg   [12:0] tmp_321_reg_9561;
wire    ap_CS_fsm_state25;
wire   [18:0] tmp_561_fu_5949_p2;
reg   [18:0] tmp_561_reg_9577;
wire    ap_CS_fsm_state26;
wire   [10:0] co2_cast1_fu_5958_p1;
reg   [10:0] co2_cast1_reg_9587;
wire    ap_CS_fsm_state28;
wire   [9:0] co2_cast2_fu_5962_p1;
reg   [9:0] co2_cast2_reg_9592;
wire   [8:0] co2_cast120_cast_fu_5966_p1;
reg   [8:0] co2_cast120_cast_reg_9601;
wire   [7:0] co2_cast119_cast_fu_5970_p1;
reg   [7:0] co2_cast119_cast_reg_9610;
wire   [6:0] co2_cast5_fu_5974_p1;
reg   [6:0] co2_cast5_reg_9619;
wire   [4:0] co_23_fu_5988_p2;
reg   [4:0] co_23_reg_9627;
wire  signed [8:0] tmp_467_cast_fu_6012_p1;
reg  signed [8:0] tmp_467_cast_reg_9632;
wire   [0:0] exitcond1_fu_5982_p2;
wire   [8:0] tmp_402_fu_6038_p2;
reg   [8:0] tmp_402_reg_9637;
wire   [9:0] tmp_404_fu_6066_p2;
reg   [9:0] tmp_404_reg_9642;
wire   [9:0] tmp_406_fu_6094_p2;
reg   [9:0] tmp_406_reg_9647;
wire  signed [10:0] tmp_476_cast_fu_6140_p1;
reg  signed [10:0] tmp_476_cast_reg_9652;
wire   [1:0] w_22_fu_6150_p2;
reg   [1:0] w_22_reg_9660;
wire    ap_CS_fsm_state29;
wire   [11:0] tmp_218_cast1_fu_6156_p1;
reg   [11:0] tmp_218_cast1_reg_9665;
wire   [0:0] exitcond4_fu_6144_p2;
wire   [14:0] tmp_218_cast2_fu_6160_p1;
reg   [14:0] tmp_218_cast2_reg_9673;
wire   [13:0] tmp_218_cast3_fu_6164_p1;
reg   [13:0] tmp_218_cast3_reg_9678;
wire   [35:0] tmp_218_cast4_fu_6168_p1;
reg   [35:0] tmp_218_cast4_reg_9684;
wire   [12:0] tmp_218_cast5_fu_6172_p1;
reg   [12:0] tmp_218_cast5_reg_9690;
wire   [10:0] tmp_218_cast6_fu_6176_p1;
reg   [10:0] tmp_218_cast6_reg_9701;
wire   [14:0] tmp_420_fu_6209_p2;
reg   [14:0] tmp_420_reg_9706;
wire   [14:0] tmp_422_fu_6236_p2;
reg   [14:0] tmp_422_reg_9711;
wire   [14:0] tmp_424_fu_6263_p2;
reg   [14:0] tmp_424_reg_9716;
wire   [14:0] tmp_426_fu_6290_p2;
reg   [14:0] tmp_426_reg_9721;
wire   [14:0] tmp_428_fu_6317_p2;
reg   [14:0] tmp_428_reg_9726;
wire   [1:0] h_22_fu_6329_p2;
reg   [1:0] h_22_reg_9734;
wire    ap_CS_fsm_state30;
wire   [14:0] tmp_309_cast_fu_6335_p1;
reg   [14:0] tmp_309_cast_reg_9739;
wire   [0:0] exitcond10_fu_6323_p2;
wire   [63:0] tmp_597_cast_fu_6344_p1;
reg   [63:0] tmp_597_cast_reg_9761;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire   [9:0] tmp_309_cast1_fu_6386_p1;
reg   [9:0] tmp_309_cast1_reg_9795;
wire    ap_CS_fsm_state33;
wire   [10:0] tmp_309_cast2_fu_6390_p1;
reg   [10:0] tmp_309_cast2_reg_9800;
wire   [1:0] i_6_fu_6400_p2;
reg   [1:0] i_6_reg_9808;
wire    ap_CS_fsm_state34;
wire   [6:0] tmp_353_fu_6434_p2;
reg   [6:0] tmp_353_reg_9813;
wire   [0:0] exitcond13_fu_6394_p2;
wire   [6:0] tmp_356_fu_6440_p2;
reg   [6:0] tmp_356_reg_9821;
wire  signed [7:0] tmp_470_cast110_cast_fu_6445_p1;
reg  signed [7:0] tmp_470_cast110_cast_reg_9827;
wire    ap_CS_fsm_state35;
wire   [11:0] tmp_564_fu_6485_p2;
reg   [11:0] tmp_564_reg_9833;
wire   [9:0] tmp_135_fu_6527_p1;
reg   [9:0] tmp_135_reg_9839;
wire   [7:0] tmp_136_fu_6531_p1;
reg   [7:0] tmp_136_reg_9844;
wire   [10:0] tmp_575_fu_6568_p2;
reg   [10:0] tmp_575_reg_9849;
wire   [6:0] tmp31_fu_6573_p2;
reg   [6:0] tmp31_reg_9855;
wire    ap_CS_fsm_state36;
wire   [9:0] tmp_572_fu_6623_p2;
reg   [9:0] tmp_572_reg_9865;
wire   [12:0] tmp_580_fu_6696_p2;
reg   [12:0] tmp_580_reg_9875;
wire   [12:0] tmp_585_fu_6738_p2;
reg   [12:0] tmp_585_reg_9881;
wire   [11:0] tmp_590_fu_6776_p2;
reg   [11:0] tmp_590_reg_9887;
wire   [11:0] tmp_595_fu_6814_p2;
reg   [11:0] tmp_595_reg_9893;
wire   [11:0] tmp_601_fu_6859_p2;
reg   [11:0] tmp_601_reg_9899;
wire   [7:0] tmp_376_fu_6869_p2;
reg   [7:0] tmp_376_reg_9905;
wire   [63:0] tmp_665_cast_fu_6877_p1;
reg   [63:0] tmp_665_cast_reg_9911;
wire    ap_CS_fsm_state37;
wire   [12:0] tmp_607_fu_6966_p2;
reg   [12:0] tmp_607_reg_9933;
wire   [9:0] tmp_378_fu_6977_p2;
reg   [9:0] tmp_378_reg_9939;
wire   [12:0] tmp_617_fu_7015_p2;
reg   [12:0] tmp_617_reg_9945;
wire    ap_CS_fsm_state38;
wire   [14:0] tmp_603_fu_7100_p2;
reg   [14:0] tmp_603_reg_9961;
wire   [14:0] tmp_609_fu_7121_p2;
reg   [14:0] tmp_609_reg_9966;
wire   [14:0] tmp_614_fu_7177_p2;
reg   [14:0] tmp_614_reg_9971;
wire   [14:0] tmp_619_fu_7198_p2;
reg   [14:0] tmp_619_reg_9976;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire   [2:0] i_7_fu_7225_p2;
reg   [2:0] i_7_reg_10004;
wire    ap_CS_fsm_state42;
wire   [7:0] tmp_382_fu_7259_p2;
reg   [7:0] tmp_382_reg_10009;
wire   [0:0] exitcond12_fu_7219_p2;
wire  signed [9:0] tmp_505_cast_fu_7268_p1;
reg  signed [9:0] tmp_505_cast_reg_10017;
wire    ap_CS_fsm_state43;
wire   [12:0] tmp_623_fu_7307_p2;
reg   [12:0] tmp_623_reg_10023;
wire   [10:0] tmp_143_fu_7355_p1;
reg   [10:0] tmp_143_reg_10029;
wire   [8:0] tmp_144_fu_7359_p1;
reg   [8:0] tmp_144_reg_10034;
wire   [8:0] tmp_391_fu_7369_p2;
reg   [8:0] tmp_391_reg_10039;
wire   [14:0] tmp_650_fu_7411_p2;
reg   [14:0] tmp_650_reg_10045;
wire    ap_CS_fsm_state44;
wire   [10:0] tmp_631_fu_7454_p2;
reg   [10:0] tmp_631_reg_10056;
wire   [12:0] tmp_634_fu_7491_p2;
reg   [12:0] tmp_634_reg_10061;
wire   [12:0] tmp_639_fu_7528_p2;
reg   [12:0] tmp_639_reg_10067;
reg   [31:0] shuffle_conv_3x3_loa_15_reg_10073;
wire    ap_CS_fsm_state45;
wire   [14:0] tmp_647_fu_7644_p2;
reg   [14:0] tmp_647_reg_10088;
wire   [14:0] tmp_652_fu_7659_p2;
reg   [14:0] tmp_652_reg_10093;
wire   [63:0] tmp_738_cast_fu_7664_p1;
reg   [63:0] tmp_738_cast_reg_10098;
wire    ap_CS_fsm_state46;
wire   [11:0] i5_cast1_fu_7678_p1;
reg   [11:0] i5_cast1_reg_10114;
wire    ap_CS_fsm_state48;
wire   [10:0] i5_cast2_fu_7682_p1;
reg   [10:0] i5_cast2_reg_10130;
wire   [8:0] i5_cast105_cast1_fu_7686_p1;
reg   [8:0] i5_cast105_cast1_reg_10146;
wire   [9:0] i5_cast105_cast_fu_7690_p1;
reg   [9:0] i5_cast105_cast_reg_10159;
wire   [7:0] i5_cast104_cast1_fu_7694_p1;
reg   [7:0] i5_cast104_cast1_reg_10174;
wire   [6:0] i5_cast102_cast_fu_7698_p1;
reg   [6:0] i5_cast102_cast_reg_10185;
wire   [4:0] i_5_fu_7712_p2;
reg   [4:0] i_5_reg_10196;
wire   [63:0] tmp_189_fu_7718_p1;
reg   [63:0] tmp_189_reg_10201;
wire   [0:0] exitcond3_fu_7706_p2;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire   [1:0] k_1_fu_7891_p2;
reg   [1:0] k_1_reg_10298;
wire    ap_CS_fsm_state57;
wire   [6:0] tmp_238_fu_7925_p2;
reg   [6:0] tmp_238_reg_10303;
wire   [0:0] exitcond6_fu_7885_p2;
wire  signed [8:0] tmp_238_cast96_cast_fu_7931_p1;
reg  signed [8:0] tmp_238_cast96_cast_reg_10313;
wire    ap_CS_fsm_state58;
wire  signed [7:0] tmp_238_cast96_cast1_fu_7950_p1;
reg  signed [7:0] tmp_238_cast96_cast1_reg_10325;
wire    ap_CS_fsm_state59;
reg   [31:0] bias_load_16_reg_10330;
wire  signed [9:0] tmp_238_cast97_cast_fu_7993_p1;
reg  signed [9:0] tmp_238_cast97_cast_reg_10345;
wire    ap_CS_fsm_state60;
wire   [63:0] tmp_243_fu_8004_p1;
reg   [63:0] tmp_243_reg_10357;
wire   [7:0] tmp_275_fu_8048_p2;
reg   [7:0] tmp_275_reg_10397;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire   [8:0] tmp_273_fu_8156_p2;
reg   [8:0] tmp_273_reg_10432;
wire    ap_CS_fsm_state64;
wire  signed [10:0] tmp_238_cast1_fu_8177_p1;
reg  signed [10:0] tmp_238_cast1_reg_10447;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [2:0] k_2_fu_8451_p2;
reg   [2:0] k_2_reg_10544;
wire    ap_CS_fsm_state74;
wire   [7:0] tmp_322_fu_8485_p2;
reg   [7:0] tmp_322_reg_10549;
wire   [0:0] exitcond9_fu_8445_p2;
wire  signed [8:0] tmp_391_cast_cast1_fu_8491_p1;
reg  signed [8:0] tmp_391_cast_cast1_reg_10557;
wire    ap_CS_fsm_state75;
wire  signed [11:0] tmp_391_cast_fu_8537_p1;
reg  signed [11:0] tmp_391_cast_reg_10572;
wire    ap_CS_fsm_state76;
wire   [63:0] tmp_326_fu_8548_p1;
reg   [63:0] tmp_326_reg_10586;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire   [9:0] i_2_fu_8753_p2;
reg   [9:0] i_2_reg_10665;
wire    ap_CS_fsm_state83;
wire   [0:0] exitcond8_fu_8747_p2;
wire   [3:0] i_4_fu_8789_p2;
reg   [3:0] i_4_reg_10678;
wire    ap_CS_fsm_state85;
wire   [0:0] exitcond7_fu_8783_p2;
wire   [3:0] co_24_fu_8821_p2;
reg   [3:0] co_24_reg_10691;
wire    ap_CS_fsm_state126;
wire   [63:0] tmp_i_fu_8827_p1;
reg   [63:0] tmp_i_reg_10696;
wire   [0:0] exitcond1_i_fu_8815_p2;
wire   [13:0] tmp_723_cast_fu_8839_p1;
reg   [13:0] tmp_723_cast_reg_10702;
wire   [9:0] ci_10_fu_8849_p2;
reg   [9:0] ci_10_reg_10710;
wire    ap_CS_fsm_state127;
wire   [0:0] exitcond_i_fu_8843_p2;
reg   [31:0] fc_weight_load_reg_10730;
wire    ap_CS_fsm_state128;
reg   [31:0] avgpool_output_load_reg_10735;
wire   [31:0] grp_fu_3586_p2;
reg   [31:0] tmp_130_i_reg_10740;
wire    ap_CS_fsm_state132;
wire   [31:0] grp_fu_3581_p2;
wire    ap_CS_fsm_state137;
reg   [31:0] fc_bias_load_reg_10750;
wire    ap_CS_fsm_state138;
reg   [31:0] result_reg_10755;
wire    ap_CS_fsm_state143;
wire    grp_DownsampleUnit0_fu_3317_ap_start;
wire    grp_DownsampleUnit0_fu_3317_ap_done;
wire    grp_DownsampleUnit0_fu_3317_ap_idle;
wire    grp_DownsampleUnit0_fu_3317_ap_ready;
wire   [14:0] grp_DownsampleUnit0_fu_3317_input_r_address0;
wire    grp_DownsampleUnit0_fu_3317_input_r_ce0;
wire   [9:0] grp_DownsampleUnit0_fu_3317_conv1r_weight_address0;
wire    grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0;
wire   [4:0] grp_DownsampleUnit0_fu_3317_conv1r_bias_address0;
wire    grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0;
wire   [7:0] grp_DownsampleUnit0_fu_3317_conv2r_weight_address0;
wire    grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0;
wire   [4:0] grp_DownsampleUnit0_fu_3317_conv2r_bias_address0;
wire    grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0;
wire   [9:0] grp_DownsampleUnit0_fu_3317_conv3r_weight_address0;
wire    grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0;
wire   [4:0] grp_DownsampleUnit0_fu_3317_conv3r_bias_address0;
wire    grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0;
wire   [7:0] grp_DownsampleUnit0_fu_3317_conv1l_weight_address0;
wire    grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0;
wire   [4:0] grp_DownsampleUnit0_fu_3317_conv1l_bias_address0;
wire    grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0;
wire   [9:0] grp_DownsampleUnit0_fu_3317_conv2l_weight_address0;
wire    grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0;
wire   [4:0] grp_DownsampleUnit0_fu_3317_conv2l_bias_address0;
wire    grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0;
wire   [13:0] grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0;
wire    grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0;
wire    grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0;
wire   [31:0] grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0;
wire    grp_DownsampleUnit1_fu_3345_ap_start;
wire    grp_DownsampleUnit1_fu_3345_ap_done;
wire    grp_DownsampleUnit1_fu_3345_ap_idle;
wire    grp_DownsampleUnit1_fu_3345_ap_ready;
wire   [11:0] grp_DownsampleUnit1_fu_3345_conv1r_weight_address0;
wire    grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0;
wire   [5:0] grp_DownsampleUnit1_fu_3345_conv1r_bias_address0;
wire    grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0;
wire   [8:0] grp_DownsampleUnit1_fu_3345_conv2r_weight_address0;
wire    grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0;
wire   [5:0] grp_DownsampleUnit1_fu_3345_conv2r_bias_address0;
wire    grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0;
wire   [11:0] grp_DownsampleUnit1_fu_3345_conv3r_weight_address0;
wire    grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0;
wire   [5:0] grp_DownsampleUnit1_fu_3345_conv3r_bias_address0;
wire    grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0;
wire   [8:0] grp_DownsampleUnit1_fu_3345_conv1l_weight_address0;
wire    grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0;
wire   [5:0] grp_DownsampleUnit1_fu_3345_conv1l_bias_address0;
wire    grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0;
wire   [11:0] grp_DownsampleUnit1_fu_3345_conv2l_weight_address0;
wire    grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0;
wire   [5:0] grp_DownsampleUnit1_fu_3345_conv2l_bias_address0;
wire    grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0;
wire   [13:0] grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0;
wire    grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0;
wire   [12:0] grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0;
wire    grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0;
wire    grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0;
wire   [31:0] grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0;
wire    grp_DownsampleUnit2_fu_3373_ap_start;
wire    grp_DownsampleUnit2_fu_3373_ap_done;
wire    grp_DownsampleUnit2_fu_3373_ap_idle;
wire    grp_DownsampleUnit2_fu_3373_ap_ready;
wire   [13:0] grp_DownsampleUnit2_fu_3373_conv1r_weight_address0;
wire    grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0;
wire   [6:0] grp_DownsampleUnit2_fu_3373_conv1r_bias_address0;
wire    grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0;
wire   [9:0] grp_DownsampleUnit2_fu_3373_conv2r_weight_address0;
wire    grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0;
wire   [6:0] grp_DownsampleUnit2_fu_3373_conv2r_bias_address0;
wire    grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0;
wire   [13:0] grp_DownsampleUnit2_fu_3373_conv3r_weight_address0;
wire    grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0;
wire   [6:0] grp_DownsampleUnit2_fu_3373_conv3r_bias_address0;
wire    grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0;
wire   [9:0] grp_DownsampleUnit2_fu_3373_conv1l_weight_address0;
wire    grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0;
wire   [6:0] grp_DownsampleUnit2_fu_3373_conv1l_bias_address0;
wire    grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0;
wire   [13:0] grp_DownsampleUnit2_fu_3373_conv2l_weight_address0;
wire    grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0;
wire   [6:0] grp_DownsampleUnit2_fu_3373_conv2l_bias_address0;
wire    grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0;
wire   [12:0] grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0;
wire    grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0;
wire   [11:0] grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0;
wire    grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0;
wire    grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0;
wire   [31:0] grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0;
wire    grp_ShuffleUnit0_fu_3401_ap_start;
wire    grp_ShuffleUnit0_fu_3401_ap_done;
wire    grp_ShuffleUnit0_fu_3401_ap_idle;
wire    grp_ShuffleUnit0_fu_3401_ap_ready;
wire   [13:0] grp_ShuffleUnit0_fu_3401_input_r_address0;
wire    grp_ShuffleUnit0_fu_3401_input_r_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_input_r_q0;
wire   [13:0] grp_ShuffleUnit0_fu_3401_input_r_address1;
wire    grp_ShuffleUnit0_fu_3401_input_r_ce1;
reg   [31:0] grp_ShuffleUnit0_fu_3401_input_r_q1;
wire   [9:0] grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
wire    grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv1_weight_q0;
wire   [4:0] grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
wire    grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv1_bias_q0;
wire   [7:0] grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
wire    grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv2_weight_q0;
wire   [4:0] grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
wire    grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv2_bias_q0;
wire   [9:0] grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
wire    grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv3_weight_q0;
wire   [4:0] grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
wire    grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
reg   [31:0] grp_ShuffleUnit0_fu_3401_conv3_bias_q0;
wire   [13:0] grp_ShuffleUnit0_fu_3401_output_r_address0;
wire    grp_ShuffleUnit0_fu_3401_output_r_ce0;
wire    grp_ShuffleUnit0_fu_3401_output_r_we0;
wire   [31:0] grp_ShuffleUnit0_fu_3401_output_r_d0;
wire    grp_ShuffleUnit1_fu_3437_ap_start;
wire    grp_ShuffleUnit1_fu_3437_ap_done;
wire    grp_ShuffleUnit1_fu_3437_ap_idle;
wire    grp_ShuffleUnit1_fu_3437_ap_ready;
wire   [12:0] grp_ShuffleUnit1_fu_3437_input_r_address0;
wire    grp_ShuffleUnit1_fu_3437_input_r_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_input_r_q0;
wire   [12:0] grp_ShuffleUnit1_fu_3437_input_r_address1;
wire    grp_ShuffleUnit1_fu_3437_input_r_ce1;
reg   [31:0] grp_ShuffleUnit1_fu_3437_input_r_q1;
wire   [11:0] grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
wire    grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv1_weight_q0;
wire   [5:0] grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
wire    grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv1_bias_q0;
wire   [8:0] grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
wire    grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv2_weight_q0;
wire   [5:0] grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
wire    grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv2_bias_q0;
wire   [11:0] grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
wire    grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv3_weight_q0;
wire   [5:0] grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
wire    grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
reg   [31:0] grp_ShuffleUnit1_fu_3437_conv3_bias_q0;
wire   [12:0] grp_ShuffleUnit1_fu_3437_output_r_address0;
wire    grp_ShuffleUnit1_fu_3437_output_r_ce0;
wire    grp_ShuffleUnit1_fu_3437_output_r_we0;
wire   [31:0] grp_ShuffleUnit1_fu_3437_output_r_d0;
wire    grp_ShuffleUnit2_fu_3513_ap_start;
wire    grp_ShuffleUnit2_fu_3513_ap_done;
wire    grp_ShuffleUnit2_fu_3513_ap_idle;
wire    grp_ShuffleUnit2_fu_3513_ap_ready;
wire   [11:0] grp_ShuffleUnit2_fu_3513_input_r_address0;
wire    grp_ShuffleUnit2_fu_3513_input_r_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_input_r_q0;
wire   [11:0] grp_ShuffleUnit2_fu_3513_input_r_address1;
wire    grp_ShuffleUnit2_fu_3513_input_r_ce1;
reg   [31:0] grp_ShuffleUnit2_fu_3513_input_r_q1;
wire   [13:0] grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
wire    grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv1_weight_q0;
wire   [6:0] grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
wire    grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv1_bias_q0;
wire   [9:0] grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
wire    grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv2_weight_q0;
wire   [6:0] grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
wire    grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv2_bias_q0;
wire   [13:0] grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
wire    grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv3_weight_q0;
wire   [6:0] grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
wire    grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
reg   [31:0] grp_ShuffleUnit2_fu_3513_conv3_bias_q0;
wire   [11:0] grp_ShuffleUnit2_fu_3513_output_r_address0;
wire    grp_ShuffleUnit2_fu_3513_output_r_ce0;
wire    grp_ShuffleUnit2_fu_3513_output_r_we0;
wire   [31:0] grp_ShuffleUnit2_fu_3513_output_r_d0;
wire    grp_conv1_fu_3549_ap_start;
wire    grp_conv1_fu_3549_ap_done;
wire    grp_conv1_fu_3549_ap_idle;
wire    grp_conv1_fu_3549_ap_ready;
wire   [11:0] grp_conv1_fu_3549_input_r_address0;
wire    grp_conv1_fu_3549_input_r_ce0;
wire   [9:0] grp_conv1_fu_3549_weight_address0;
wire    grp_conv1_fu_3549_weight_ce0;
wire   [4:0] grp_conv1_fu_3549_bias_address0;
wire    grp_conv1_fu_3549_bias_ce0;
wire   [14:0] grp_conv1_fu_3549_conv1_output_address0;
wire    grp_conv1_fu_3549_conv1_output_ce0;
wire    grp_conv1_fu_3549_conv1_output_we0;
wire   [31:0] grp_conv1_fu_3549_conv1_output_d0;
wire    grp_conv_last_fu_3561_ap_start;
wire    grp_conv_last_fu_3561_ap_done;
wire    grp_conv_last_fu_3561_ap_idle;
wire    grp_conv_last_fu_3561_ap_ready;
wire   [16:0] grp_conv_last_fu_3561_weight_address0;
wire    grp_conv_last_fu_3561_weight_ce0;
wire   [8:0] grp_conv_last_fu_3561_bias_address0;
wire    grp_conv_last_fu_3561_bias_ce0;
wire   [12:0] grp_conv_last_fu_3561_output_r_address0;
wire    grp_conv_last_fu_3561_output_r_ce0;
wire    grp_conv_last_fu_3561_output_r_we0;
wire   [31:0] grp_conv_last_fu_3561_output_r_d0;
wire   [11:0] grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0;
wire    grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0;
wire    grp_avgpool_fu_3573_ap_start;
wire    grp_avgpool_fu_3573_ap_done;
wire    grp_avgpool_fu_3573_ap_idle;
wire    grp_avgpool_fu_3573_ap_ready;
wire   [8:0] grp_avgpool_fu_3573_output_r_address0;
wire    grp_avgpool_fu_3573_output_r_ce0;
wire    grp_avgpool_fu_3573_output_r_we0;
wire   [31:0] grp_avgpool_fu_3573_output_r_d0;
wire   [12:0] grp_avgpool_fu_3573_conv_last_output_address0;
wire    grp_avgpool_fu_3573_conv_last_output_ce0;
reg   [4:0] co_reg_3124;
reg   [4:0] ci_reg_3135;
reg   [2:0] i_reg_3147;
wire    ap_CS_fsm_state20;
reg   [4:0] i1_reg_3158;
wire    ap_CS_fsm_state27;
reg   [4:0] co2_reg_3169;
reg   [1:0] w_reg_3180;
reg   [1:0] h_reg_3191;
reg   [1:0] i3_reg_3203;
wire    ap_CS_fsm_state41;
reg   [2:0] i4_reg_3214;
wire    ap_CS_fsm_state47;
reg   [4:0] i5_reg_3225;
reg   [1:0] k_reg_3237;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state73;
reg   [2:0] k6_reg_3248;
wire    ap_CS_fsm_state82;
reg   [9:0] i7_reg_3259;
wire    ap_CS_fsm_state84;
reg   [3:0] i8_reg_3271;
wire    ap_CS_fsm_state86;
reg   [3:0] co_i_reg_3283;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state144;
reg   [31:0] sum_i_reg_3294;
reg   [9:0] ci_i_reg_3306;
reg    ap_reg_grp_DownsampleUnit0_fu_3317_ap_start;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
reg    ap_reg_grp_DownsampleUnit1_fu_3345_ap_start;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
reg    ap_reg_grp_DownsampleUnit2_fu_3373_ap_start;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state115;
reg    ap_reg_grp_ShuffleUnit0_fu_3401_ap_start;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state95;
reg    ap_reg_grp_ShuffleUnit1_fu_3437_ap_start;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state113;
reg    ap_reg_grp_ShuffleUnit2_fu_3513_ap_start;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state121;
reg    ap_reg_grp_conv1_fu_3549_ap_start;
wire    ap_CS_fsm_state87;
reg    ap_reg_grp_conv_last_fu_3561_ap_start;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state123;
reg    ap_reg_grp_avgpool_fu_3573_ap_start;
wire    ap_CS_fsm_state124;
wire  signed [63:0] tmp_478_cast_fu_4137_p1;
wire  signed [63:0] tmp_479_cast_fu_4156_p1;
wire  signed [63:0] tmp_480_cast_fu_4166_p1;
wire  signed [63:0] tmp_481_cast_fu_4180_p1;
wire  signed [63:0] tmp_482_cast_fu_4189_p1;
wire  signed [63:0] tmp_483_cast_fu_4209_p1;
wire  signed [63:0] tmp_484_cast_fu_4213_p1;
wire  signed [63:0] tmp_485_cast_fu_4217_p1;
wire  signed [63:0] tmp_506_cast_fu_4426_p1;
wire  signed [63:0] tmp_518_cast_fu_4468_p1;
wire  signed [63:0] tmp_522_cast_fu_4572_p1;
wire  signed [63:0] tmp_526_cast_fu_4614_p1;
wire  signed [63:0] tmp_530_cast_fu_4688_p1;
wire  signed [63:0] tmp_534_cast_fu_4730_p1;
wire  signed [63:0] tmp_538_cast_fu_4832_p1;
wire  signed [63:0] tmp_544_cast_fu_4836_p1;
wire  signed [63:0] tmp_548_cast_fu_4899_p1;
wire  signed [63:0] tmp_552_cast_fu_4941_p1;
wire  signed [63:0] tmp_556_cast_fu_5040_p1;
wire  signed [63:0] tmp_560_cast_fu_5082_p1;
wire  signed [63:0] tmp_564_cast_fu_5154_p1;
wire  signed [63:0] tmp_568_cast_fu_5196_p1;
wire  signed [63:0] tmp_572_cast_fu_5258_p1;
wire  signed [63:0] tmp_578_cast_fu_5308_p1;
wire  signed [63:0] tmp_584_cast_fu_5366_p1;
wire  signed [63:0] tmp_590_cast_fu_5370_p1;
wire  signed [63:0] tmp_594_cast_fu_5374_p1;
wire  signed [63:0] tmp_607_cast_fu_5543_p1;
wire  signed [63:0] tmp_618_cast_fu_5585_p1;
wire  signed [63:0] tmp_622_cast_fu_5658_p1;
wire  signed [63:0] tmp_626_cast_fu_5700_p1;
wire  signed [63:0] tmp_632_cast_fu_5772_p1;
wire  signed [63:0] tmp_636_cast_fu_5810_p1;
wire  signed [63:0] tmp_640_cast_fu_5878_p1;
wire  signed [63:0] tmp_644_cast_fu_5916_p1;
wire  signed [63:0] tmp_648_cast_fu_5954_p1;
wire   [63:0] tmp_598_cast_fu_6354_p1;
wire   [63:0] tmp_599_cast_fu_6363_p1;
wire   [63:0] tmp_600_cast_fu_6372_p1;
wire   [63:0] tmp_601_cast_fu_6381_p1;
wire   [63:0] tmp_658_cast_fu_6606_p1;
wire   [63:0] tmp_671_cast_fu_6653_p1;
wire   [63:0] tmp_677_cast_fu_6903_p1;
wire   [63:0] tmp_683_cast_fu_6929_p1;
wire   [63:0] tmp_689_cast_fu_7045_p1;
wire   [63:0] tmp_695_cast_fu_7075_p1;
wire   [63:0] tmp_702_cast_fu_7203_p1;
wire   [63:0] tmp_709_cast_fu_7207_p1;
wire   [63:0] tmp_715_cast_fu_7211_p1;
wire   [63:0] tmp_721_cast_fu_7215_p1;
wire   [63:0] tmp_731_cast_fu_7437_p1;
wire   [63:0] tmp_744_cast_fu_7554_p1;
wire   [63:0] tmp_750_cast_fu_7580_p1;
wire   [63:0] tmp_757_cast_fu_7670_p1;
wire   [63:0] tmp_763_cast_fu_7674_p1;
wire   [63:0] tmp_191_fu_7729_p1;
wire   [63:0] tmp_193_fu_7739_p1;
wire   [63:0] tmp_195_fu_7749_p1;
wire   [63:0] tmp_197_fu_7766_p1;
wire   [63:0] tmp_199_fu_7776_p1;
wire   [63:0] tmp_201_fu_7786_p1;
wire   [63:0] tmp_203_fu_7796_p1;
wire   [63:0] tmp_205_fu_7813_p1;
wire   [63:0] tmp_207_fu_7827_p1;
wire   [63:0] tmp_209_fu_7837_p1;
wire   [63:0] tmp_211_fu_7847_p1;
wire   [63:0] tmp_213_fu_7860_p1;
wire   [63:0] tmp_215_fu_7870_p1;
wire   [63:0] tmp_217_fu_7880_p1;
wire   [63:0] tmp_241_fu_7945_p1;
wire   [63:0] tmp_246_fu_7968_p1;
wire   [63:0] tmp_249_fu_7988_p1;
wire   [63:0] tmp_252_fu_8022_p1;
wire   [63:0] tmp_255_fu_8038_p1;
wire   [63:0] tmp_258_fu_8063_p1;
wire   [63:0] tmp_261_fu_8078_p1;
wire   [63:0] tmp_264_fu_8093_p1;
wire   [63:0] tmp_267_fu_8108_p1;
wire   [63:0] tmp_270_fu_8127_p1;
wire   [63:0] tmp_272_fu_8146_p1;
wire   [63:0] tmp_274_fu_8164_p1;
wire   [63:0] tmp_276_fu_8172_p1;
wire   [63:0] tmp_278_fu_8198_p1;
wire   [63:0] tmp_280_fu_8214_p1;
wire   [63:0] tmp_282_fu_8229_p1;
wire   [63:0] tmp_284_fu_8244_p1;
wire   [63:0] tmp_286_fu_8259_p1;
wire   [63:0] tmp_288_fu_8274_p1;
wire   [63:0] tmp_290_fu_8289_p1;
wire   [63:0] tmp_292_fu_8304_p1;
wire   [63:0] tmp_294_fu_8319_p1;
wire   [63:0] tmp_296_fu_8334_p1;
wire   [63:0] tmp_298_fu_8349_p1;
wire   [63:0] tmp_300_fu_8364_p1;
wire   [63:0] tmp_302_fu_8383_p1;
wire   [63:0] tmp_304_fu_8402_p1;
wire   [63:0] tmp_306_fu_8421_p1;
wire   [63:0] tmp_308_fu_8440_p1;
wire   [63:0] tmp_324_fu_8512_p1;
wire   [63:0] tmp_328_fu_8532_p1;
wire   [63:0] tmp_330_fu_8572_p1;
wire   [63:0] tmp_332_fu_8588_p1;
wire   [63:0] tmp_334_fu_8603_p1;
wire   [63:0] tmp_336_fu_8618_p1;
wire   [63:0] tmp_338_fu_8633_p1;
wire   [63:0] tmp_340_fu_8648_p1;
wire   [63:0] tmp_342_fu_8663_p1;
wire   [63:0] tmp_344_fu_8678_p1;
wire   [63:0] tmp_346_fu_8693_p1;
wire   [63:0] tmp_348_fu_8708_p1;
wire   [63:0] tmp_350_fu_8723_p1;
wire   [63:0] tmp_352_fu_8738_p1;
wire   [63:0] tmp_232_fu_8769_p1;
wire   [63:0] tmp_233_fu_8774_p1;
wire   [63:0] tmp_236_fu_8805_p1;
wire   [63:0] tmp_237_fu_8810_p1;
wire   [63:0] tmp_764_cast_fu_8869_p1;
wire   [63:0] tmp_i_419_fu_8855_p1;
reg   [31:0] grp_fu_3581_p1;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state129;
wire   [9:0] tmp_fu_3634_p3;
wire   [7:0] tmp_218_fu_3646_p3;
wire   [10:0] p_shl35_cast_fu_3642_p1;
wire   [10:0] p_shl36_cast_fu_3654_p1;
wire   [10:0] tmp_220_fu_3658_p2;
wire   [5:0] co_cast137_cast_fu_3618_p1;
wire   [5:0] tmp_s_fu_3668_p2;
wire   [10:0] tmp_309_fu_3674_p3;
wire   [8:0] tmp_355_fu_3686_p3;
wire   [11:0] p_shl33_cast_fu_3682_p1;
wire   [11:0] p_shl34_cast_fu_3694_p1;
wire   [11:0] tmp_357_fu_3698_p2;
wire   [6:0] co_cast138_cast_fu_3614_p1;
wire   [6:0] tmp_170_fu_3708_p2;
wire   [11:0] tmp_359_fu_3714_p3;
wire   [9:0] tmp_360_fu_3726_p3;
wire   [12:0] p_shl31_cast_fu_3722_p1;
wire   [12:0] p_shl32_cast_fu_3734_p1;
wire   [12:0] tmp_362_fu_3738_p2;
wire   [6:0] tmp_171_fu_3748_p2;
wire   [11:0] tmp_363_fu_3754_p3;
wire   [9:0] tmp_364_fu_3766_p3;
wire   [12:0] p_shl29_cast_fu_3762_p1;
wire   [12:0] p_shl30_cast_fu_3774_p1;
wire   [12:0] tmp_366_fu_3778_p2;
wire   [10:0] tmp_367_fu_3788_p4;
wire  signed [11:0] tmp_368_fu_3798_p1;
wire   [8:0] tmp_370_fu_3806_p4;
wire  signed [9:0] tmp_371_fu_3816_p1;
wire   [12:0] p_shl27_cast_fu_3802_p1;
wire   [12:0] p_shl28_cast_fu_3820_p1;
wire   [12:0] tmp_373_fu_3824_p2;
wire   [7:0] co_cast8_fu_3610_p1;
wire   [7:0] tmp_172_fu_3834_p2;
wire   [12:0] tmp_375_fu_3840_p3;
wire   [10:0] tmp_377_fu_3852_p3;
wire   [13:0] p_shl25_cast_fu_3848_p1;
wire   [13:0] p_shl26_cast_fu_3860_p1;
wire   [13:0] tmp_379_fu_3864_p2;
wire   [7:0] tmp_173_fu_3874_p2;
wire   [12:0] tmp_381_fu_3880_p3;
wire   [10:0] tmp_384_fu_3892_p3;
wire   [13:0] p_shl23_cast_fu_3888_p1;
wire   [13:0] p_shl24_cast_fu_3900_p1;
wire   [13:0] tmp_386_fu_3904_p2;
wire   [7:0] tmp_174_fu_3914_p2;
wire   [12:0] tmp_388_fu_3920_p3;
wire   [10:0] tmp_390_fu_3932_p3;
wire   [13:0] p_shl21_cast_fu_3928_p1;
wire   [13:0] p_shl22_cast_fu_3940_p1;
wire   [13:0] tmp_392_fu_3944_p2;
wire   [11:0] tmp_394_fu_3954_p4;
wire  signed [12:0] tmp_395_fu_3964_p1;
wire   [9:0] tmp_396_fu_3972_p4;
wire  signed [10:0] tmp_397_fu_3982_p1;
wire   [13:0] p_shl19_cast_fu_3968_p1;
wire   [13:0] p_shl20_cast_fu_3986_p1;
wire   [13:0] tmp_398_fu_3990_p2;
wire   [0:0] tmp_120_fu_4000_p1;
wire   [5:0] p_shl1_fu_4004_p3;
wire   [3:0] p_shl2_fu_4016_p3;
wire   [6:0] p_shl1_cast_fu_4012_p1;
wire   [6:0] p_shl2_cast_fu_4024_p1;
wire   [3:0] p_lshr_f1_cast_fu_4034_p4;
wire   [1:0] tmp_121_fu_4048_p1;
wire   [6:0] p_shl_fu_4052_p3;
wire   [4:0] tmp_122_fu_4064_p2;
wire   [7:0] p_shl_cast_fu_4060_p1;
wire   [7:0] p_shl3_cast_fu_4070_p1;
wire   [2:0] p_lshr_f_cast_fu_4080_p4;
wire   [11:0] tmp_186_cast8_fu_4118_p1;
wire   [11:0] tmp_410_fu_4122_p2;
wire   [12:0] tmp_186_cast7_fu_4114_p1;
wire   [12:0] tmp_411_fu_4132_p2;
wire   [6:0] ci_cast1_fu_4098_p1;
wire   [13:0] tmp_186_cast6_fu_4147_p1;
wire   [13:0] tmp_412_fu_4151_p2;
wire   [13:0] tmp_413_fu_4161_p2;
wire   [14:0] tmp_186_cast5_fu_4176_p1;
wire   [14:0] tmp_415_fu_4184_p2;
wire   [1:0] tmp_128_fu_4252_p1;
wire   [6:0] p_shl6_fu_4256_p3;
wire   [4:0] p_shl7_fu_4268_p3;
wire   [7:0] p_shl6_cast_fu_4264_p1;
wire   [7:0] p_shl7_cast_fu_4276_p1;
wire   [8:0] tmp1_fu_4290_p2;
wire   [5:0] p_shl8_fu_4301_p3;
wire   [3:0] p_shl9_fu_4313_p3;
wire   [6:0] p_shl8_cast_fu_4309_p1;
wire   [6:0] p_shl9_cast_fu_4321_p1;
wire   [6:0] tmp_223_fu_4325_p2;
wire   [6:0] tmp_224_fu_4331_p2;
wire   [10:0] tmp_434_fu_4344_p3;
wire   [12:0] tmp_433_fu_4336_p3;
wire  signed [12:0] p_shl74_cast_fu_4352_p1;
wire   [12:0] tmp_435_fu_4356_p2;
wire   [8:0] tmp2_fu_4367_p2;
wire   [7:0] tmp_219_fu_4378_p2;
wire   [13:0] tmp_429_fu_4389_p3;
wire   [11:0] tmp_430_fu_4400_p3;
wire   [14:0] p_shl75_cast_fu_4396_p1;
wire   [14:0] p_shl76_cast_fu_4407_p1;
wire   [14:0] tmp_431_fu_4411_p2;
wire  signed [15:0] tmp_505_cast2_fu_4417_p1;
wire   [15:0] tmp_432_fu_4421_p2;
wire   [13:0] tmp_437_fu_4431_p3;
wire   [11:0] tmp_438_fu_4442_p3;
wire   [14:0] p_shl71_cast_fu_4438_p1;
wire   [14:0] p_shl72_cast_fu_4449_p1;
wire   [14:0] tmp_439_fu_4453_p2;
wire  signed [15:0] tmp_517_cast_fu_4459_p1;
wire   [15:0] tmp_440_fu_4463_p2;
wire   [9:0] tmp3_cast_fu_4478_p1;
wire   [9:0] tmp4_fu_4487_p2;
wire   [8:0] tmp8_fu_4498_p2;
wire  signed [15:0] tmp_507_fu_4508_p1;
wire  signed [13:0] tmp_508_fu_4516_p1;
wire   [16:0] p_shl39_cast_fu_4512_p1;
wire   [16:0] p_shl40_cast_fu_4520_p1;
wire   [14:0] tmp_441_fu_4535_p3;
wire   [12:0] tmp_442_fu_4546_p3;
wire   [15:0] p_shl69_cast_fu_4542_p1;
wire   [15:0] p_shl70_cast_fu_4553_p1;
wire   [15:0] tmp_443_fu_4557_p2;
wire  signed [16:0] tmp_521_cast_fu_4563_p1;
wire   [16:0] tmp_444_fu_4567_p2;
wire   [14:0] tmp_445_fu_4577_p3;
wire   [12:0] tmp_446_fu_4588_p3;
wire   [15:0] p_shl67_cast_fu_4584_p1;
wire   [15:0] p_shl68_cast_fu_4595_p1;
wire   [15:0] tmp_447_fu_4599_p2;
wire  signed [16:0] tmp_525_cast_fu_4605_p1;
wire   [16:0] tmp_448_fu_4609_p2;
wire   [9:0] tmp5_fu_4619_p2;
wire   [9:0] tmp6_fu_4629_p2;
wire  signed [10:0] tmp19_cast1_fu_4639_p1;
wire   [11:0] tmp19_cast_fu_4642_p1;
wire   [14:0] tmp_449_fu_4651_p3;
wire   [12:0] tmp_450_fu_4662_p3;
wire   [15:0] p_shl65_cast_fu_4658_p1;
wire   [15:0] p_shl66_cast_fu_4669_p1;
wire   [15:0] tmp_451_fu_4673_p2;
wire  signed [16:0] tmp_529_cast_fu_4679_p1;
wire   [16:0] tmp_452_fu_4683_p2;
wire   [14:0] tmp_453_fu_4693_p3;
wire   [12:0] tmp_454_fu_4704_p3;
wire   [15:0] p_shl63_cast_fu_4700_p1;
wire   [15:0] p_shl64_cast_fu_4711_p1;
wire   [15:0] tmp_455_fu_4715_p2;
wire  signed [16:0] tmp_533_cast_fu_4721_p1;
wire   [16:0] tmp_456_fu_4725_p2;
wire   [9:0] tmp7_fu_4735_p2;
wire   [9:0] tmp_230_fu_4740_p2;
wire   [14:0] tmp_457_fu_4745_p3;
wire   [12:0] tmp_458_fu_4757_p3;
wire   [15:0] p_shl61_cast_fu_4753_p1;
wire   [15:0] p_shl62_cast_fu_4765_p1;
wire   [15:0] tmp_459_fu_4769_p2;
wire  signed [16:0] tmp_537_cast_fu_4775_p1;
wire   [13:0] tmp_461_fu_4784_p3;
wire  signed [14:0] tmp_462_fu_4791_p1;
wire   [11:0] tmp_463_fu_4799_p3;
wire  signed [12:0] tmp_464_fu_4806_p1;
wire   [15:0] p_shl59_cast_fu_4795_p1;
wire   [15:0] p_shl60_cast_fu_4810_p1;
wire   [15:0] tmp_465_fu_4814_p2;
wire  signed [16:0] tmp_543_cast_fu_4820_p1;
wire   [10:0] tmp9_fu_4840_p2;
wire   [10:0] tmp10_fu_4851_p2;
wire   [15:0] tmp_467_fu_4862_p3;
wire   [13:0] tmp_468_fu_4873_p3;
wire   [16:0] p_shl57_cast_fu_4869_p1;
wire   [16:0] p_shl58_cast_fu_4880_p1;
wire   [16:0] tmp_469_fu_4884_p2;
wire  signed [17:0] tmp_547_cast_fu_4890_p1;
wire   [17:0] tmp_470_fu_4894_p2;
wire   [15:0] tmp_471_fu_4904_p3;
wire   [13:0] tmp_472_fu_4915_p3;
wire   [16:0] p_shl55_cast_fu_4911_p1;
wire   [16:0] p_shl56_cast_fu_4922_p1;
wire   [16:0] tmp_473_fu_4926_p2;
wire  signed [17:0] tmp_551_cast_fu_4932_p1;
wire   [17:0] tmp_474_fu_4936_p2;
wire   [10:0] tmp11_fu_4946_p2;
wire   [10:0] tmp12_fu_4956_p2;
wire   [16:0] tmp_511_fu_4966_p3;
wire   [14:0] tmp_512_fu_4977_p3;
wire   [17:0] p_shl37_cast_fu_4973_p1;
wire   [17:0] p_shl38_cast_fu_4984_p1;
wire   [17:0] tmp_513_fu_4988_p2;
wire  signed [18:0] tmp_593_cast_fu_4994_p1;
wire   [15:0] tmp_475_fu_5003_p3;
wire   [13:0] tmp_476_fu_5014_p3;
wire   [16:0] p_shl53_cast_fu_5010_p1;
wire   [16:0] p_shl54_cast_fu_5021_p1;
wire   [16:0] tmp_477_fu_5025_p2;
wire  signed [17:0] tmp_555_cast_fu_5031_p1;
wire   [17:0] tmp_478_fu_5035_p2;
wire   [15:0] tmp_479_fu_5045_p3;
wire   [13:0] tmp_480_fu_5056_p3;
wire   [16:0] p_shl51_cast_fu_5052_p1;
wire   [16:0] p_shl52_cast_fu_5063_p1;
wire   [16:0] tmp_481_fu_5067_p2;
wire  signed [17:0] tmp_559_cast_fu_5073_p1;
wire   [17:0] tmp_482_fu_5077_p2;
wire   [10:0] tmp13_fu_5087_p2;
wire   [10:0] tmp14_fu_5097_p2;
wire   [10:0] tmp15_fu_5107_p2;
wire   [15:0] tmp_483_fu_5117_p3;
wire   [13:0] tmp_484_fu_5128_p3;
wire   [16:0] p_shl49_cast_fu_5124_p1;
wire   [16:0] p_shl50_cast_fu_5135_p1;
wire   [16:0] tmp_485_fu_5139_p2;
wire  signed [17:0] tmp_563_cast_fu_5145_p1;
wire   [17:0] tmp_486_fu_5149_p2;
wire   [15:0] tmp_487_fu_5159_p3;
wire   [13:0] tmp_488_fu_5170_p3;
wire   [16:0] p_shl47_cast_fu_5166_p1;
wire   [16:0] p_shl48_cast_fu_5177_p1;
wire   [16:0] tmp_489_fu_5181_p2;
wire  signed [17:0] tmp_567_cast_fu_5187_p1;
wire   [17:0] tmp_490_fu_5191_p2;
wire   [9:0] tmp16_fu_5201_p2;
wire   [9:0] tmp17_fu_5211_p2;
wire   [15:0] tmp_491_fu_5221_p3;
wire   [13:0] tmp_492_fu_5232_p3;
wire   [16:0] p_shl45_cast_fu_5228_p1;
wire   [16:0] p_shl46_cast_fu_5239_p1;
wire   [16:0] tmp_493_fu_5243_p2;
wire  signed [17:0] tmp_571_cast_fu_5249_p1;
wire   [17:0] tmp_494_fu_5253_p2;
wire   [14:0] tmp_495_fu_5263_p3;
wire  signed [15:0] tmp_496_fu_5270_p1;
wire   [12:0] tmp_497_fu_5278_p3;
wire  signed [13:0] tmp_498_fu_5285_p1;
wire   [16:0] p_shl43_cast_fu_5274_p1;
wire   [16:0] p_shl44_cast_fu_5289_p1;
wire   [16:0] tmp_499_fu_5293_p2;
wire  signed [17:0] tmp_577_cast_fu_5299_p1;
wire   [17:0] tmp_500_fu_5303_p2;
wire   [14:0] tmp_501_fu_5313_p3;
wire  signed [15:0] tmp_502_fu_5320_p1;
wire   [12:0] tmp_503_fu_5328_p3;
wire  signed [13:0] tmp_504_fu_5335_p1;
wire   [16:0] p_shl41_cast_fu_5324_p1;
wire   [16:0] p_shl42_cast_fu_5339_p1;
wire   [16:0] tmp_505_fu_5343_p2;
wire  signed [17:0] tmp_583_cast_fu_5349_p1;
wire  signed [17:0] tmp_589_cast_fu_5358_p1;
wire   [3:0] tmp_130_fu_5390_p1;
wire   [8:0] p_shl3_fu_5394_p3;
wire   [6:0] p_shl12_fu_5406_p3;
wire   [9:0] p_shl12_cast_fu_5402_p1;
wire   [9:0] p_shl13_cast_fu_5418_p1;
wire   [11:0] tmp20_fu_5432_p2;
wire   [4:0] tmp_131_fu_5443_p2;
wire   [7:0] p_shl13_cast1_fu_5414_p1;
wire   [7:0] p_shl14_cast_fu_5449_p1;
wire   [7:0] tmp_312_fu_5453_p2;
wire   [7:0] tmp_313_fu_5459_p2;
wire   [12:0] tmp_525_fu_5472_p3;
wire   [14:0] tmp_524_fu_5464_p3;
wire  signed [14:0] p_shl94_cast_fu_5480_p1;
wire   [14:0] tmp_526_fu_5484_p2;
wire   [11:0] tmp21_fu_5495_p2;
wire   [16:0] tmp_520_fu_5506_p3;
wire   [14:0] tmp_521_fu_5517_p3;
wire   [17:0] p_shl95_cast_fu_5513_p1;
wire   [17:0] p_shl96_cast_fu_5524_p1;
wire   [17:0] tmp_522_fu_5528_p2;
wire  signed [18:0] tmp_606_cast_fu_5534_p1;
wire   [18:0] tmp_523_fu_5538_p2;
wire   [16:0] tmp_528_fu_5548_p3;
wire   [14:0] tmp_529_fu_5559_p3;
wire   [17:0] p_shl91_cast_fu_5555_p1;
wire   [17:0] p_shl92_cast_fu_5566_p1;
wire   [17:0] tmp_530_fu_5570_p2;
wire  signed [18:0] tmp_617_cast_fu_5576_p1;
wire   [18:0] tmp_531_fu_5580_p2;
wire   [11:0] tmp22_fu_5590_p2;
wire   [11:0] tmp23_fu_5600_p2;
wire   [16:0] tmp_532_fu_5621_p3;
wire   [14:0] tmp_533_fu_5632_p3;
wire   [17:0] p_shl89_cast_fu_5628_p1;
wire   [17:0] p_shl90_cast_fu_5639_p1;
wire   [17:0] tmp_534_fu_5643_p2;
wire  signed [18:0] tmp_621_cast_fu_5649_p1;
wire   [18:0] tmp_535_fu_5653_p2;
wire   [16:0] tmp_536_fu_5663_p3;
wire   [14:0] tmp_537_fu_5674_p3;
wire   [17:0] p_shl87_cast_fu_5670_p1;
wire   [17:0] p_shl88_cast_fu_5681_p1;
wire   [17:0] tmp_538_fu_5685_p2;
wire  signed [18:0] tmp_625_cast_fu_5691_p1;
wire   [18:0] tmp_539_fu_5695_p2;
wire  signed [10:0] tmp_438_cast_cast_fu_5613_p1;
wire   [10:0] tmp24_fu_5705_p2;
wire   [12:0] tmp25_fu_5716_p2;
wire   [15:0] tmp_540_fu_5727_p3;
wire  signed [16:0] tmp_541_fu_5734_p1;
wire   [13:0] tmp_542_fu_5742_p3;
wire  signed [14:0] tmp_543_fu_5749_p1;
wire   [17:0] p_shl85_cast_fu_5738_p1;
wire   [17:0] p_shl86_cast_fu_5753_p1;
wire   [17:0] tmp_544_fu_5757_p2;
wire  signed [18:0] tmp_631_cast_fu_5763_p1;
wire   [18:0] tmp_545_fu_5767_p2;
wire   [17:0] tmp_546_fu_5777_p3;
wire   [15:0] tmp_547_fu_5788_p3;
wire   [18:0] p_shl83_cast_fu_5784_p1;
wire   [18:0] p_shl84_cast_fu_5795_p1;
wire   [18:0] tmp_548_fu_5799_p2;
wire   [18:0] tmp_549_fu_5805_p2;
wire   [12:0] tmp26_fu_5815_p2;
wire   [12:0] tmp27_fu_5825_p2;
wire   [12:0] tmp28_fu_5835_p2;
wire   [17:0] tmp_550_fu_5845_p3;
wire   [15:0] tmp_551_fu_5856_p3;
wire   [18:0] p_shl81_cast_fu_5852_p1;
wire   [18:0] p_shl82_cast_fu_5863_p1;
wire   [18:0] tmp_552_fu_5867_p2;
wire   [18:0] tmp_553_fu_5873_p2;
wire   [17:0] tmp_554_fu_5883_p3;
wire   [15:0] tmp_555_fu_5894_p3;
wire   [18:0] p_shl79_cast_fu_5890_p1;
wire   [18:0] p_shl80_cast_fu_5901_p1;
wire   [18:0] tmp_556_fu_5905_p2;
wire   [18:0] tmp_557_fu_5911_p2;
wire   [17:0] tmp_558_fu_5921_p3;
wire   [15:0] tmp_559_fu_5932_p3;
wire   [18:0] p_shl77_cast_fu_5928_p1;
wire   [18:0] p_shl78_cast_fu_5939_p1;
wire   [18:0] tmp_560_fu_5943_p2;
wire   [6:0] tmp_399_fu_5994_p3;
wire   [7:0] p_shl101_cast_fu_6002_p1;
wire   [7:0] tmp_400_fu_6006_p2;
wire   [5:0] co2_cast117_cast_fu_5978_p1;
wire   [5:0] tmp_178_fu_6016_p2;
wire   [7:0] tmp_401_fu_6026_p3;
wire   [8:0] p_shl100_cast_fu_6034_p1;
wire   [8:0] tmp_179_cast_fu_6022_p1;
wire   [6:0] tmp_180_fu_6044_p2;
wire   [8:0] tmp_403_fu_6054_p3;
wire   [9:0] p_shl99_cast_fu_6062_p1;
wire   [9:0] tmp_181_cast_fu_6050_p1;
wire   [6:0] tmp_182_fu_6072_p2;
wire   [8:0] tmp_405_fu_6082_p3;
wire   [9:0] p_shl98_cast_fu_6090_p1;
wire   [9:0] tmp_183_cast_fu_6078_p1;
wire   [5:0] tmp_184_fu_6100_p3;
wire  signed [6:0] tmp_197_cast_fu_6108_p1;
wire   [7:0] tmp_407_fu_6116_p4;
wire  signed [8:0] tmp_408_fu_6126_p1;
wire   [9:0] p_shl97_cast_fu_6130_p1;
wire   [9:0] tmp_185_cast_fu_6112_p1;
wire   [9:0] tmp_409_fu_6134_p2;
wire   [8:0] tmp_218_cast_fu_6184_p1;
wire   [8:0] tmp_419_fu_6188_p2;
wire   [10:0] tmp_123_fu_6197_p3;
wire  signed [14:0] p_shl106_cast_fu_6205_p1;
wire  signed [14:0] tmp_486_cast_fu_6193_p1;
wire   [8:0] tmp_421_fu_6215_p2;
wire   [10:0] tmp_124_fu_6224_p3;
wire  signed [14:0] p_shl105_cast_fu_6232_p1;
wire  signed [14:0] tmp_489_cast_fu_6220_p1;
wire   [9:0] tmp_218_cast7_fu_6180_p1;
wire   [9:0] tmp_423_fu_6242_p2;
wire   [11:0] tmp_125_fu_6251_p3;
wire  signed [14:0] p_shl104_cast_fu_6259_p1;
wire  signed [14:0] tmp_492_cast1_fu_6247_p1;
wire   [9:0] tmp_425_fu_6269_p2;
wire   [11:0] tmp_126_fu_6278_p3;
wire  signed [14:0] p_shl103_cast_fu_6286_p1;
wire  signed [14:0] tmp_495_cast1_fu_6274_p1;
wire   [10:0] tmp_427_fu_6296_p2;
wire   [12:0] tmp_127_fu_6305_p3;
wire  signed [14:0] p_shl102_cast_fu_6313_p1;
wire  signed [14:0] tmp_498_cast_fu_6301_p1;
wire   [14:0] tmp_515_fu_6339_p2;
wire   [14:0] tmp_516_fu_6349_p2;
wire   [14:0] tmp_517_fu_6359_p2;
wire   [14:0] tmp_518_fu_6368_p2;
wire   [14:0] tmp_519_fu_6377_p2;
wire   [0:0] tmp_133_fu_6406_p1;
wire   [5:0] p_shl13_fu_6410_p3;
wire   [3:0] p_shl14_fu_6422_p3;
wire   [6:0] p_shl15_cast_fu_6418_p1;
wire   [6:0] p_shl16_cast_fu_6430_p1;
wire   [7:0] tmp29_fu_6448_p2;
wire   [7:0] tmp_354_fu_6454_p2;
wire   [9:0] tmp_562_fu_6463_p3;
wire   [10:0] p_shl128_cast_fu_6471_p1;
wire   [10:0] tmp_355_cast_fu_6459_p1;
wire   [10:0] tmp_563_fu_6475_p2;
wire  signed [11:0] tmp_654_cast_fu_6481_p1;
wire  signed [31:0] tmp_474_cast_fu_6490_p1;
wire   [8:0] tmp_567_fu_6497_p3;
wire  signed [33:0] tmp_568_fu_6504_p1;
wire   [34:0] p_shl126_cast_fu_6508_p1;
wire   [34:0] tmp_357_cast_fu_6493_p1;
wire   [34:0] tmp_569_fu_6512_p2;
wire  signed [35:0] tmp_661_cast_fu_6518_p1;
wire   [35:0] tmp_570_fu_6522_p2;
wire   [7:0] tmp30_fu_6535_p2;
wire   [7:0] tmp_358_fu_6541_p2;
wire   [9:0] tmp_573_fu_6550_p3;
wire   [10:0] p_shl124_cast_fu_6558_p1;
wire   [10:0] tmp_359_cast_fu_6546_p1;
wire   [10:0] tmp_574_fu_6562_p2;
wire   [13:0] tmp_134_fu_6584_p3;
wire  signed [14:0] p_shl127_cast_fu_6591_p1;
wire  signed [14:0] tmp_655_cast_fu_6581_p1;
wire   [14:0] tmp_565_fu_6595_p2;
wire   [14:0] tmp_566_fu_6601_p2;
wire   [9:0] p_shl125_cast_fu_6611_p3;
wire   [9:0] tmp_571_fu_6618_p2;
wire   [12:0] tmp_137_fu_6631_p3;
wire  signed [14:0] p_shl123_cast_fu_6638_p1;
wire  signed [14:0] tmp_668_cast_fu_6628_p1;
wire   [14:0] tmp_576_fu_6642_p2;
wire   [14:0] tmp_577_fu_6648_p2;
wire  signed [7:0] tmp31_cast1_fu_6658_p1;
wire   [8:0] tmp31_cast_fu_6661_p1;
wire   [8:0] tmp_361_fu_6665_p2;
wire   [10:0] tmp_578_fu_6674_p3;
wire   [11:0] p_shl122_cast_fu_6682_p1;
wire   [11:0] tmp_363_cast_fu_6670_p1;
wire   [11:0] tmp_579_fu_6686_p2;
wire  signed [12:0] tmp_673_cast_fu_6692_p1;
wire  signed [8:0] tmp_470_cast2_fu_6578_p1;
wire   [8:0] tmp32_fu_6701_p2;
wire   [8:0] tmp_365_fu_6707_p2;
wire   [10:0] tmp_583_fu_6716_p3;
wire   [11:0] p_shl120_cast_fu_6724_p1;
wire   [11:0] tmp_367_cast_fu_6712_p1;
wire   [11:0] tmp_584_fu_6728_p2;
wire  signed [12:0] tmp_679_cast_fu_6734_p1;
wire   [8:0] tmp33_fu_6743_p2;
wire   [8:0] tmp_369_fu_6749_p2;
wire   [10:0] tmp_588_fu_6758_p3;
wire   [11:0] p_shl118_cast_fu_6766_p1;
wire   [11:0] tmp_371_cast_fu_6754_p1;
wire   [11:0] tmp_589_fu_6770_p2;
wire   [8:0] tmp34_fu_6781_p2;
wire   [8:0] tmp_372_fu_6787_p2;
wire   [10:0] tmp_593_fu_6796_p3;
wire   [11:0] p_shl116_cast_fu_6804_p1;
wire   [11:0] tmp_373_cast_fu_6792_p1;
wire   [11:0] tmp_594_fu_6808_p2;
wire   [7:0] tmp35_fu_6819_p2;
wire   [7:0] tmp_374_fu_6824_p2;
wire  signed [8:0] tmp_492_cast_fu_6829_p1;
wire   [9:0] tmp_598_fu_6837_p3;
wire  signed [10:0] tmp_599_fu_6845_p1;
wire   [11:0] p_shl114_cast_fu_6849_p1;
wire   [11:0] tmp_375_cast_fu_6833_p1;
wire   [11:0] tmp_600_fu_6853_p2;
wire   [7:0] tmp36_fu_6864_p2;
wire   [14:0] p_shl121_cast_fu_6885_p3;
wire  signed [14:0] tmp_674_cast_fu_6882_p1;
wire   [14:0] tmp_581_fu_6892_p2;
wire   [14:0] tmp_582_fu_6898_p2;
wire   [14:0] p_shl119_cast_fu_6911_p3;
wire  signed [14:0] tmp_680_cast_fu_6908_p1;
wire   [14:0] tmp_586_fu_6918_p2;
wire   [14:0] tmp_587_fu_6924_p2;
wire  signed [8:0] tmp_495_cast_fu_6934_p1;
wire   [9:0] tmp_604_fu_6941_p3;
wire  signed [10:0] tmp_605_fu_6948_p1;
wire   [11:0] p_shl112_cast_fu_6952_p1;
wire   [11:0] tmp_377_cast_fu_6937_p1;
wire   [11:0] tmp_606_fu_6956_p2;
wire  signed [12:0] tmp_705_cast_fu_6962_p1;
wire  signed [9:0] tmp_470_cast1_fu_6874_p1;
wire   [9:0] tmp37_fu_6971_p2;
wire   [9:0] tmp38_fu_6982_p2;
wire   [9:0] tmp_380_fu_6988_p2;
wire   [11:0] tmp_615_fu_6997_p3;
wire   [12:0] p_shl108_cast_fu_7005_p1;
wire   [12:0] tmp_381_cast_fu_6993_p1;
wire   [12:0] tmp_616_fu_7009_p2;
wire   [13:0] tmp_138_fu_7023_p3;
wire  signed [14:0] p_shl117_cast_fu_7030_p1;
wire  signed [14:0] tmp_686_cast_fu_7020_p1;
wire   [14:0] tmp_591_fu_7034_p2;
wire   [14:0] tmp_592_fu_7040_p2;
wire   [13:0] tmp_139_fu_7053_p3;
wire  signed [14:0] p_shl115_cast_fu_7060_p1;
wire  signed [14:0] tmp_692_cast_fu_7050_p1;
wire   [14:0] tmp_596_fu_7064_p2;
wire   [14:0] tmp_597_fu_7070_p2;
wire   [13:0] tmp_140_fu_7083_p3;
wire  signed [14:0] p_shl113_cast_fu_7090_p1;
wire  signed [14:0] tmp_699_cast_fu_7080_p1;
wire   [14:0] tmp_602_fu_7094_p2;
wire   [14:0] p_shl111_cast_fu_7108_p3;
wire  signed [14:0] tmp_706_cast_fu_7105_p1;
wire   [14:0] tmp_608_fu_7115_p2;
wire   [11:0] tmp_610_fu_7129_p3;
wire   [12:0] p_shl110_cast_fu_7136_p1;
wire   [12:0] tmp_379_cast_fu_7126_p1;
wire   [12:0] tmp_611_fu_7140_p2;
wire  signed [13:0] tmp_711_cast_fu_7146_p1;
wire   [13:0] tmp_612_fu_7150_p2;
wire   [12:0] tmp_141_fu_7159_p1;
wire   [14:0] p_shl109_cast_fu_7163_p3;
wire  signed [14:0] tmp_712_cast_fu_7155_p1;
wire   [14:0] tmp_613_fu_7171_p2;
wire   [14:0] p_shl107_cast_fu_7185_p3;
wire  signed [14:0] tmp_718_cast_fu_7182_p1;
wire   [14:0] tmp_618_fu_7192_p2;
wire   [1:0] tmp_142_fu_7231_p1;
wire   [6:0] p_shl15_fu_7235_p3;
wire   [4:0] p_shl16_fu_7247_p3;
wire   [7:0] p_shl17_cast_fu_7243_p1;
wire   [7:0] p_shl18_cast_fu_7255_p1;
wire   [9:0] tmp39_fu_7274_p2;
wire   [9:0] tmp_383_fu_7280_p2;
wire   [11:0] tmp_621_fu_7289_p3;
wire   [12:0] p_shl140_cast_fu_7297_p1;
wire   [12:0] tmp_384_cast_fu_7285_p1;
wire   [12:0] tmp_622_fu_7301_p2;
wire   [7:0] tmp_385_fu_7312_p2;
wire  signed [31:0] tmp_509_cast_fu_7316_p1;
wire   [9:0] tmp_626_fu_7324_p3;
wire  signed [33:0] tmp_627_fu_7332_p1;
wire   [34:0] p_shl138_cast_fu_7336_p1;
wire   [34:0] tmp_386_cast_fu_7320_p1;
wire   [34:0] tmp_628_fu_7340_p2;
wire  signed [35:0] tmp_734_cast_fu_7346_p1;
wire   [35:0] tmp_629_fu_7350_p2;
wire  signed [8:0] tmp_505_cast_cast_fu_7271_p1;
wire   [8:0] tmp42_fu_7363_p2;
wire  signed [10:0] tmp_505_cast1_fu_7265_p1;
wire   [10:0] tmp43_fu_7374_p2;
wire   [10:0] tmp_393_fu_7380_p2;
wire   [12:0] tmp_648_fu_7389_p3;
wire   [13:0] p_shl130_cast_fu_7397_p1;
wire   [13:0] tmp_394_cast_fu_7385_p1;
wire   [13:0] tmp_649_fu_7401_p2;
wire  signed [14:0] tmp_759_cast_fu_7407_p1;
wire   [14:0] p_shl139_cast_fu_7419_p3;
wire  signed [14:0] tmp_728_cast_fu_7416_p1;
wire   [14:0] tmp_624_fu_7426_p2;
wire   [14:0] tmp_625_fu_7432_p2;
wire   [10:0] p_shl137_cast_fu_7442_p3;
wire   [10:0] tmp_630_fu_7449_p2;
wire   [9:0] tmp40_fu_7459_p2;
wire   [9:0] tmp_387_fu_7464_p2;
wire   [11:0] tmp_632_fu_7473_p3;
wire   [12:0] p_shl136_cast_fu_7481_p1;
wire   [12:0] tmp_388_cast_fu_7469_p1;
wire   [12:0] tmp_633_fu_7485_p2;
wire   [9:0] tmp41_fu_7496_p2;
wire   [9:0] tmp_389_fu_7501_p2;
wire   [11:0] tmp_637_fu_7510_p3;
wire   [12:0] p_shl134_cast_fu_7518_p1;
wire   [12:0] tmp_390_cast_fu_7506_p1;
wire   [12:0] tmp_638_fu_7522_p2;
wire   [14:0] p_shl135_cast_fu_7536_p3;
wire  signed [14:0] tmp_741_cast_fu_7533_p1;
wire   [14:0] tmp_635_fu_7543_p2;
wire   [14:0] tmp_636_fu_7549_p2;
wire   [14:0] p_shl133_cast_fu_7562_p3;
wire  signed [14:0] tmp_747_cast_fu_7559_p1;
wire   [14:0] tmp_640_fu_7569_p2;
wire   [14:0] tmp_641_fu_7575_p2;
wire  signed [9:0] tmp_515_cast_fu_7585_p1;
wire   [10:0] tmp_642_fu_7592_p3;
wire  signed [11:0] tmp_643_fu_7599_p1;
wire   [12:0] p_shl132_cast_fu_7603_p1;
wire   [12:0] tmp_392_cast_fu_7588_p1;
wire   [12:0] tmp_644_fu_7607_p2;
wire  signed [13:0] tmp_753_cast_fu_7613_p1;
wire   [13:0] tmp_645_fu_7617_p2;
wire   [12:0] tmp_145_fu_7626_p1;
wire   [14:0] p_shl131_cast_fu_7630_p3;
wire  signed [14:0] tmp_754_cast_fu_7622_p1;
wire   [14:0] tmp_646_fu_7638_p2;
wire   [14:0] tmp_146_fu_7649_p2;
wire   [14:0] tmp_651_fu_7654_p2;
wire   [5:0] i5_cast101_cast_fu_7702_p1;
wire   [5:0] tmp_190_fu_7723_p2;
wire   [6:0] tmp_192_fu_7734_p2;
wire   [6:0] tmp_194_fu_7744_p2;
wire   [5:0] tmp_196_fu_7754_p3;
wire  signed [6:0] tmp_206_cast_fu_7762_p1;
wire   [7:0] tmp_198_fu_7771_p2;
wire   [7:0] tmp_200_fu_7781_p2;
wire   [7:0] tmp_202_fu_7791_p2;
wire   [6:0] tmp_204_fu_7801_p3;
wire  signed [7:0] tmp_214_cast_fu_7809_p1;
wire   [6:0] tmp_206_fu_7818_p2;
wire  signed [7:0] tmp_216_cast_fu_7823_p1;
wire   [8:0] tmp_208_fu_7832_p2;
wire   [8:0] tmp_210_fu_7842_p2;
wire   [8:0] tmp_212_fu_7852_p3;
wire   [8:0] tmp_214_fu_7865_p2;
wire   [8:0] tmp_216_fu_7875_p2;
wire   [0:0] tmp_129_fu_7897_p1;
wire   [5:0] p_shl4_fu_7901_p3;
wire   [3:0] p_shl5_fu_7913_p3;
wire   [6:0] p_shl4_cast_fu_7909_p1;
wire   [6:0] p_shl5_cast_fu_7921_p1;
wire   [8:0] tmp44_fu_7934_p2;
wire   [8:0] tmp_240_fu_7940_p2;
wire   [7:0] tmp45_fu_7953_p2;
wire   [7:0] tmp_245_fu_7959_p2;
wire  signed [8:0] tmp_245_cast_fu_7964_p1;
wire   [7:0] tmp46_fu_7973_p2;
wire   [7:0] tmp_248_fu_7979_p2;
wire  signed [8:0] tmp_248_cast_fu_7984_p1;
wire   [6:0] tmp_242_fu_7996_p2;
wire  signed [31:0] tmp_242_cast_fu_8000_p1;
wire   [9:0] tmp47_fu_8011_p2;
wire   [9:0] tmp_251_fu_8017_p2;
wire   [9:0] tmp48_fu_8027_p2;
wire   [9:0] tmp_254_fu_8033_p2;
wire   [7:0] tmp56_fu_8043_p2;
wire   [9:0] tmp49_fu_8053_p2;
wire   [9:0] tmp_257_fu_8058_p2;
wire   [9:0] tmp50_fu_8068_p2;
wire   [9:0] tmp_260_fu_8073_p2;
wire   [9:0] tmp51_fu_8083_p2;
wire   [9:0] tmp_263_fu_8088_p2;
wire   [9:0] tmp52_fu_8098_p2;
wire   [9:0] tmp_266_fu_8103_p2;
wire   [8:0] tmp53_fu_8113_p2;
wire   [8:0] tmp_269_fu_8118_p2;
wire  signed [9:0] tmp_269_cast_fu_8123_p1;
wire   [8:0] tmp54_fu_8132_p2;
wire   [8:0] tmp_271_fu_8137_p2;
wire  signed [9:0] tmp_272_cast_fu_8142_p1;
wire   [8:0] tmp55_fu_8151_p2;
wire  signed [9:0] tmp_275_cast_fu_8161_p1;
wire  signed [9:0] tmp_278_cast_fu_8169_p1;
wire   [6:0] tmp57_fu_8180_p2;
wire  signed [9:0] tmp57_cast1_fu_8185_p1;
wire   [10:0] tmp57_cast_fu_8189_p1;
wire   [10:0] tmp_277_fu_8193_p2;
wire   [10:0] tmp58_fu_8203_p2;
wire   [10:0] tmp_279_fu_8209_p2;
wire   [10:0] tmp59_fu_8219_p2;
wire   [10:0] tmp_281_fu_8224_p2;
wire   [10:0] tmp60_fu_8234_p2;
wire   [10:0] tmp_283_fu_8239_p2;
wire   [10:0] tmp61_fu_8249_p2;
wire   [10:0] tmp_285_fu_8254_p2;
wire   [10:0] tmp62_fu_8264_p2;
wire   [10:0] tmp_287_fu_8269_p2;
wire   [10:0] tmp63_fu_8279_p2;
wire   [10:0] tmp_289_fu_8284_p2;
wire   [10:0] tmp64_fu_8294_p2;
wire   [10:0] tmp_291_fu_8299_p2;
wire   [10:0] tmp65_fu_8309_p2;
wire   [10:0] tmp_293_fu_8314_p2;
wire   [10:0] tmp66_fu_8324_p2;
wire   [10:0] tmp_295_fu_8329_p2;
wire   [10:0] tmp67_fu_8339_p2;
wire   [10:0] tmp_297_fu_8344_p2;
wire   [10:0] tmp68_fu_8354_p2;
wire   [10:0] tmp_299_fu_8359_p2;
wire   [9:0] tmp69_fu_8369_p2;
wire   [9:0] tmp_301_fu_8374_p2;
wire  signed [10:0] tmp_317_cast_fu_8379_p1;
wire   [9:0] tmp70_fu_8388_p2;
wire   [9:0] tmp_303_fu_8393_p2;
wire  signed [10:0] tmp_320_cast_fu_8398_p1;
wire   [9:0] tmp71_fu_8407_p2;
wire   [9:0] tmp_305_fu_8412_p2;
wire  signed [10:0] tmp_323_cast_fu_8417_p1;
wire   [9:0] tmp72_fu_8426_p2;
wire   [9:0] tmp_307_fu_8431_p2;
wire  signed [10:0] tmp_326_cast_fu_8436_p1;
wire   [1:0] tmp_132_fu_8457_p1;
wire   [6:0] p_shl10_fu_8461_p3;
wire   [4:0] p_shl11_fu_8473_p3;
wire   [7:0] p_shl10_cast_fu_8469_p1;
wire   [7:0] p_shl11_cast_fu_8481_p1;
wire  signed [9:0] tmp_391_cast_cast_fu_8494_p1;
wire   [9:0] tmp73_fu_8497_p2;
wire   [9:0] tmp_323_fu_8503_p2;
wire  signed [10:0] tmp_393_cast_fu_8508_p1;
wire   [8:0] tmp74_fu_8517_p2;
wire   [8:0] tmp_327_fu_8523_p2;
wire  signed [10:0] tmp_398_cast_fu_8528_p1;
wire   [7:0] tmp_325_fu_8540_p2;
wire  signed [31:0] tmp_395_cast_fu_8544_p1;
wire   [8:0] tmp75_fu_8554_p2;
wire  signed [10:0] tmp75_cast1_fu_8559_p1;
wire   [11:0] tmp75_cast_fu_8563_p1;
wire   [11:0] tmp_329_fu_8567_p2;
wire   [11:0] tmp76_fu_8577_p2;
wire   [11:0] tmp_331_fu_8583_p2;
wire   [11:0] tmp77_fu_8593_p2;
wire   [11:0] tmp_333_fu_8598_p2;
wire   [11:0] tmp78_fu_8608_p2;
wire   [11:0] tmp_335_fu_8613_p2;
wire   [11:0] tmp79_fu_8623_p2;
wire   [11:0] tmp_337_fu_8628_p2;
wire   [11:0] tmp80_fu_8638_p2;
wire   [11:0] tmp_339_fu_8643_p2;
wire   [11:0] tmp81_fu_8653_p2;
wire   [11:0] tmp_341_fu_8658_p2;
wire   [11:0] tmp82_fu_8668_p2;
wire   [11:0] tmp_343_fu_8673_p2;
wire   [11:0] tmp83_fu_8683_p2;
wire   [11:0] tmp_345_fu_8688_p2;
wire   [11:0] tmp84_fu_8698_p2;
wire   [11:0] tmp_347_fu_8703_p2;
wire   [11:0] tmp85_fu_8713_p2;
wire   [11:0] tmp_349_fu_8718_p2;
wire   [11:0] tmp86_fu_8728_p2;
wire   [11:0] tmp_351_fu_8733_p2;
wire   [10:0] i7_cast92_cast_fu_8743_p1;
wire   [10:0] tmp_231_fu_8759_p2;
wire  signed [11:0] tmp_231_cast_fu_8765_p1;
wire   [9:0] i8_cast90_cast_fu_8779_p1;
wire   [9:0] tmp_235_fu_8795_p2;
wire  signed [11:0] tmp_235_cast_fu_8801_p1;
wire   [12:0] tmp_620_fu_8831_p3;
wire   [13:0] tmp_i_cast_fu_8860_p1;
wire   [13:0] tmp_653_fu_8864_p2;
reg   [143:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 144'd1;
#0 ap_reg_grp_DownsampleUnit0_fu_3317_ap_start = 1'b0;
#0 ap_reg_grp_DownsampleUnit1_fu_3345_ap_start = 1'b0;
#0 ap_reg_grp_DownsampleUnit2_fu_3373_ap_start = 1'b0;
#0 ap_reg_grp_ShuffleUnit0_fu_3401_ap_start = 1'b0;
#0 ap_reg_grp_ShuffleUnit1_fu_3437_ap_start = 1'b0;
#0 ap_reg_grp_ShuffleUnit2_fu_3513_ap_start = 1'b0;
#0 ap_reg_grp_conv1_fu_3549_ap_start = 1'b0;
#0 ap_reg_grp_conv_last_fu_3561_ap_start = 1'b0;
#0 ap_reg_grp_avgpool_fu_3573_ap_start = 1'b0;
end

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Downs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_7_address0),
    .ce0(ShuffleConvs_0_Downs_7_ce0),
    .we0(ShuffleConvs_0_Downs_7_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_0_Downs_7_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Downs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_10_address0),
    .ce0(ShuffleConvs_0_Downs_10_ce0),
    .we0(ShuffleConvs_0_Downs_10_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_0_Downs_10_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Downs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_8_address0),
    .ce0(ShuffleConvs_0_Downs_8_ce0),
    .we0(ShuffleConvs_0_Downs_8_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_0_Downs_8_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_5_address0),
    .ce0(ShuffleConvs_0_Shuff_5_ce0),
    .we0(ShuffleConvs_0_Shuff_5_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_0_Shuff_5_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_7_address0),
    .ce0(ShuffleConvs_0_Shuff_7_ce0),
    .we0(ShuffleConvs_0_Shuff_7_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_0_Shuff_7_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_8_address0),
    .ce0(ShuffleConvs_0_Shuff_8_ce0),
    .we0(ShuffleConvs_0_Shuff_8_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_0_Shuff_8_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_11_address0),
    .ce0(ShuffleConvs_0_Shuff_11_ce0),
    .we0(ShuffleConvs_0_Shuff_11_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_0_Shuff_11_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_13_address0),
    .ce0(ShuffleConvs_0_Shuff_13_ce0),
    .we0(ShuffleConvs_0_Shuff_13_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_0_Shuff_13_q0)
);

ShuffleNetV2_ShufIfE #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
ShuffleConvs_0_Shuff_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_18_address0),
    .ce0(ShuffleConvs_0_Shuff_18_ce0),
    .we0(ShuffleConvs_0_Shuff_18_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_0_Shuff_18_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Downs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_7_address0),
    .ce0(ShuffleConvs_1_Downs_7_ce0),
    .we0(ShuffleConvs_1_Downs_7_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Downs_7_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Downs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_10_address0),
    .ce0(ShuffleConvs_1_Downs_10_ce0),
    .we0(ShuffleConvs_1_Downs_10_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Downs_10_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Downs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_8_address0),
    .ce0(ShuffleConvs_1_Downs_8_ce0),
    .we0(ShuffleConvs_1_Downs_8_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Downs_8_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_1_address0),
    .ce0(ShuffleConvs_1_Shuff_1_ce0),
    .we0(ShuffleConvs_1_Shuff_1_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_1_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_5_address0),
    .ce0(ShuffleConvs_1_Shuff_5_ce0),
    .we0(ShuffleConvs_1_Shuff_5_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_5_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_7_address0),
    .ce0(ShuffleConvs_1_Shuff_7_ce0),
    .we0(ShuffleConvs_1_Shuff_7_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_7_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_11_address0),
    .ce0(ShuffleConvs_1_Shuff_11_ce0),
    .we0(ShuffleConvs_1_Shuff_11_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_11_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_13_address0),
    .ce0(ShuffleConvs_1_Shuff_13_ce0),
    .we0(ShuffleConvs_1_Shuff_13_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_13_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_19_address0),
    .ce0(ShuffleConvs_1_Shuff_19_ce0),
    .we0(ShuffleConvs_1_Shuff_19_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_19_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_21_address0),
    .ce0(ShuffleConvs_1_Shuff_21_ce0),
    .we0(ShuffleConvs_1_Shuff_21_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_21_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_25_address0),
    .ce0(ShuffleConvs_1_Shuff_25_ce0),
    .we0(ShuffleConvs_1_Shuff_25_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_25_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_27_address0),
    .ce0(ShuffleConvs_1_Shuff_27_ce0),
    .we0(ShuffleConvs_1_Shuff_27_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_27_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_31_address0),
    .ce0(ShuffleConvs_1_Shuff_31_ce0),
    .we0(ShuffleConvs_1_Shuff_31_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_31_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_33_address0),
    .ce0(ShuffleConvs_1_Shuff_33_ce0),
    .we0(ShuffleConvs_1_Shuff_33_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_33_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_37_address0),
    .ce0(ShuffleConvs_1_Shuff_37_ce0),
    .we0(ShuffleConvs_1_Shuff_37_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_37_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_41_address0),
    .ce0(ShuffleConvs_1_Shuff_41_ce0),
    .we0(ShuffleConvs_1_Shuff_41_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_41_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_45_address0),
    .ce0(ShuffleConvs_1_Shuff_45_ce0),
    .we0(ShuffleConvs_1_Shuff_45_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_45_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_47_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_47_address0),
    .ce0(ShuffleConvs_1_Shuff_47_ce0),
    .we0(ShuffleConvs_1_Shuff_47_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_1_Shuff_47_q0)
);

ShuffleNetV2_ShufRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
ShuffleConvs_1_Shuff_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_50_address0),
    .ce0(ShuffleConvs_1_Shuff_50_ce0),
    .we0(ShuffleConvs_1_Shuff_50_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_1_Shuff_50_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Downs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_7_address0),
    .ce0(ShuffleConvs_2_Downs_7_ce0),
    .we0(ShuffleConvs_2_Downs_7_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_2_Downs_7_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Downs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_10_address0),
    .ce0(ShuffleConvs_2_Downs_10_ce0),
    .we0(ShuffleConvs_2_Downs_10_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_2_Downs_10_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Downs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_8_address0),
    .ce0(ShuffleConvs_2_Downs_8_ce0),
    .we0(ShuffleConvs_2_Downs_8_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_2_Downs_8_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_5_address0),
    .ce0(ShuffleConvs_2_Shuff_5_ce0),
    .we0(ShuffleConvs_2_Shuff_5_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_2_Shuff_5_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_7_address0),
    .ce0(ShuffleConvs_2_Shuff_7_ce0),
    .we0(ShuffleConvs_2_Shuff_7_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_2_Shuff_7_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_8_address0),
    .ce0(ShuffleConvs_2_Shuff_8_ce0),
    .we0(ShuffleConvs_2_Shuff_8_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_2_Shuff_8_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_11_address0),
    .ce0(ShuffleConvs_2_Shuff_11_ce0),
    .we0(ShuffleConvs_2_Shuff_11_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_2_Shuff_11_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_13_address0),
    .ce0(ShuffleConvs_2_Shuff_13_ce0),
    .we0(ShuffleConvs_2_Shuff_13_we0),
    .d0(shuffle_conv_1x1_q1),
    .q0(ShuffleConvs_2_Shuff_13_q0)
);

ShuffleNetV2_Shufbak #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
ShuffleConvs_2_Shuff_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_18_address0),
    .ce0(ShuffleConvs_2_Shuff_18_ce0),
    .we0(ShuffleConvs_2_Shuff_18_we0),
    .d0(shuffle_conv_1x1_q0),
    .q0(ShuffleConvs_2_Shuff_18_q0)
);

ShuffleNetV2_Shufbjl #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
ShuffleConvs_0_Downs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_9_address0),
    .ce0(ShuffleConvs_0_Downs_9_ce0),
    .we0(ShuffleConvs_0_Downs_9_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_0_Downs_9_q0)
);

ShuffleNetV2_Shufbjl #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
ShuffleConvs_0_Downs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_6_address0),
    .ce0(ShuffleConvs_0_Downs_6_ce0),
    .we0(ShuffleConvs_0_Downs_6_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_0_Downs_6_q0)
);

ShuffleNetV2_Shufbjl #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
ShuffleConvs_0_Shuff_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_6_address0),
    .ce0(ShuffleConvs_0_Shuff_6_ce0),
    .we0(ShuffleConvs_0_Shuff_6_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_0_Shuff_6_q0)
);

ShuffleNetV2_Shufbjl #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
ShuffleConvs_0_Shuff_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_9_address0),
    .ce0(ShuffleConvs_0_Shuff_9_ce0),
    .we0(ShuffleConvs_0_Shuff_9_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_0_Shuff_9_q0)
);

ShuffleNetV2_Shufbjl #(
    .DataWidth( 32 ),
    .AddressRange( 216 ),
    .AddressWidth( 8 ))
ShuffleConvs_0_Shuff_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_15_address0),
    .ce0(ShuffleConvs_0_Shuff_15_ce0),
    .we0(ShuffleConvs_0_Shuff_15_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_0_Shuff_15_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Downs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_9_address0),
    .ce0(ShuffleConvs_1_Downs_9_ce0),
    .we0(ShuffleConvs_1_Downs_9_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_1_Downs_9_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Downs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_6_address0),
    .ce0(ShuffleConvs_1_Downs_6_ce0),
    .we0(ShuffleConvs_1_Downs_6_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_1_Downs_6_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_3_address0),
    .ce0(ShuffleConvs_1_Shuff_3_ce0),
    .we0(ShuffleConvs_1_Shuff_3_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_1_Shuff_3_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_9_address0),
    .ce0(ShuffleConvs_1_Shuff_9_ce0),
    .we0(ShuffleConvs_1_Shuff_9_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_1_Shuff_9_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_15_address0),
    .ce0(ShuffleConvs_1_Shuff_15_ce0),
    .we0(ShuffleConvs_1_Shuff_15_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_1_Shuff_15_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_23_address0),
    .ce0(ShuffleConvs_1_Shuff_23_ce0),
    .we0(ShuffleConvs_1_Shuff_23_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_1_Shuff_23_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_29_address0),
    .ce0(ShuffleConvs_1_Shuff_29_ce0),
    .we0(ShuffleConvs_1_Shuff_29_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_1_Shuff_29_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_35_address0),
    .ce0(ShuffleConvs_1_Shuff_35_ce0),
    .we0(ShuffleConvs_1_Shuff_35_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_1_Shuff_35_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_43_address0),
    .ce0(ShuffleConvs_1_Shuff_43_ce0),
    .we0(ShuffleConvs_1_Shuff_43_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_1_Shuff_43_q0)
);

ShuffleNetV2_Shufbom #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
ShuffleConvs_1_Shuff_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_49_address0),
    .ce0(ShuffleConvs_1_Shuff_49_ce0),
    .we0(ShuffleConvs_1_Shuff_49_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_1_Shuff_49_q0)
);

ShuffleNetV2_Shufbyn #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
ShuffleConvs_2_Downs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_9_address0),
    .ce0(ShuffleConvs_2_Downs_9_ce0),
    .we0(ShuffleConvs_2_Downs_9_we0),
    .d0(shuffle_conv_3x3_loa_15_reg_10073),
    .q0(ShuffleConvs_2_Downs_9_q0)
);

ShuffleNetV2_Shufbyn #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
ShuffleConvs_2_Downs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_6_address0),
    .ce0(ShuffleConvs_2_Downs_6_ce0),
    .we0(ShuffleConvs_2_Downs_6_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_2_Downs_6_q0)
);

ShuffleNetV2_Shufbyn #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
ShuffleConvs_2_Shuff_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_6_address0),
    .ce0(ShuffleConvs_2_Shuff_6_ce0),
    .we0(ShuffleConvs_2_Shuff_6_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_2_Shuff_6_q0)
);

ShuffleNetV2_Shufbyn #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
ShuffleConvs_2_Shuff_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_9_address0),
    .ce0(ShuffleConvs_2_Shuff_9_ce0),
    .we0(ShuffleConvs_2_Shuff_9_we0),
    .d0(shuffle_conv_3x3_q0),
    .q0(ShuffleConvs_2_Shuff_9_q0)
);

ShuffleNetV2_Shufbyn #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
ShuffleConvs_2_Shuff_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_15_address0),
    .ce0(ShuffleConvs_2_Shuff_15_ce0),
    .we0(ShuffleConvs_2_Shuff_15_we0),
    .d0(shuffle_conv_3x3_q1),
    .q0(ShuffleConvs_2_Shuff_15_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_bias_address0),
    .ce0(conv1_bias_ce0),
    .we0(conv1_bias_we0),
    .d0(bias_q0),
    .q0(conv1_bias_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Downs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_3_address0),
    .ce0(ShuffleConvs_0_Downs_3_ce0),
    .we0(ShuffleConvs_0_Downs_3_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Downs_3_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Downs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_5_address0),
    .ce0(ShuffleConvs_0_Downs_5_ce0),
    .we0(ShuffleConvs_0_Downs_5_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Downs_5_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Downs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_address0),
    .ce0(ShuffleConvs_0_Downs_ce0),
    .we0(ShuffleConvs_0_Downs_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Downs_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Downs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_1_address0),
    .ce0(ShuffleConvs_0_Downs_1_ce0),
    .we0(ShuffleConvs_0_Downs_1_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Downs_1_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Downs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Downs_4_address0),
    .ce0(ShuffleConvs_0_Downs_4_ce0),
    .we0(ShuffleConvs_0_Downs_4_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Downs_4_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_19_address0),
    .ce0(ShuffleConvs_0_Shuff_19_ce0),
    .we0(ShuffleConvs_0_Shuff_19_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Shuff_19_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_20_address0),
    .ce0(ShuffleConvs_0_Shuff_20_ce0),
    .we0(ShuffleConvs_0_Shuff_20_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Shuff_20_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_21_address0),
    .ce0(ShuffleConvs_0_Shuff_21_ce0),
    .we0(ShuffleConvs_0_Shuff_21_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Shuff_21_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_22_address0),
    .ce0(ShuffleConvs_0_Shuff_22_ce0),
    .we0(ShuffleConvs_0_Shuff_22_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Shuff_22_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_1_address0),
    .ce0(ShuffleConvs_0_Shuff_1_ce0),
    .we0(ShuffleConvs_0_Shuff_1_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Shuff_1_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_3_address0),
    .ce0(ShuffleConvs_0_Shuff_3_ce0),
    .we0(ShuffleConvs_0_Shuff_3_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Shuff_3_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_4_address0),
    .ce0(ShuffleConvs_0_Shuff_4_ce0),
    .we0(ShuffleConvs_0_Shuff_4_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Shuff_4_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_17_address0),
    .ce0(ShuffleConvs_0_Shuff_17_ce0),
    .we0(ShuffleConvs_0_Shuff_17_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_0_Shuff_17_q0)
);

ShuffleNetV2_convbDo #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ShuffleConvs_0_Shuff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_0_Shuff_address0),
    .ce0(ShuffleConvs_0_Shuff_ce0),
    .we0(ShuffleConvs_0_Shuff_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_0_Shuff_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Downs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_3_address0),
    .ce0(ShuffleConvs_1_Downs_3_ce0),
    .we0(ShuffleConvs_1_Downs_3_we0),
    .d0(bias_load_16_reg_10330),
    .q0(ShuffleConvs_1_Downs_3_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Downs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_5_address0),
    .ce0(ShuffleConvs_1_Downs_5_ce0),
    .we0(ShuffleConvs_1_Downs_5_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Downs_5_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Downs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_address0),
    .ce0(ShuffleConvs_1_Downs_ce0),
    .we0(ShuffleConvs_1_Downs_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Downs_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Downs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_1_address0),
    .ce0(ShuffleConvs_1_Downs_1_ce0),
    .we0(ShuffleConvs_1_Downs_1_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Downs_1_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Downs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Downs_4_address0),
    .ce0(ShuffleConvs_1_Downs_4_ce0),
    .we0(ShuffleConvs_1_Downs_4_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Downs_4_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_51_address0),
    .ce0(ShuffleConvs_1_Shuff_51_ce0),
    .we0(ShuffleConvs_1_Shuff_51_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_51_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_52_address0),
    .ce0(ShuffleConvs_1_Shuff_52_ce0),
    .we0(ShuffleConvs_1_Shuff_52_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_52_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_53_address0),
    .ce0(ShuffleConvs_1_Shuff_53_ce0),
    .we0(ShuffleConvs_1_Shuff_53_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_53_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_54_address0),
    .ce0(ShuffleConvs_1_Shuff_54_ce0),
    .we0(ShuffleConvs_1_Shuff_54_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_54_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_56_address0),
    .ce0(ShuffleConvs_1_Shuff_56_ce0),
    .we0(ShuffleConvs_1_Shuff_56_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_56_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_57_address0),
    .ce0(ShuffleConvs_1_Shuff_57_ce0),
    .we0(ShuffleConvs_1_Shuff_57_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_57_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_58_address0),
    .ce0(ShuffleConvs_1_Shuff_58_ce0),
    .we0(ShuffleConvs_1_Shuff_58_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_58_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_59_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_59_address0),
    .ce0(ShuffleConvs_1_Shuff_59_ce0),
    .we0(ShuffleConvs_1_Shuff_59_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_59_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_60_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_60_address0),
    .ce0(ShuffleConvs_1_Shuff_60_ce0),
    .we0(ShuffleConvs_1_Shuff_60_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_60_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_61_address0),
    .ce0(ShuffleConvs_1_Shuff_61_ce0),
    .we0(ShuffleConvs_1_Shuff_61_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_61_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_62_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_62_address0),
    .ce0(ShuffleConvs_1_Shuff_62_ce0),
    .we0(ShuffleConvs_1_Shuff_62_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_62_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_63_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_63_address0),
    .ce0(ShuffleConvs_1_Shuff_63_ce0),
    .we0(ShuffleConvs_1_Shuff_63_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_63_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_64_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_64_address0),
    .ce0(ShuffleConvs_1_Shuff_64_ce0),
    .we0(ShuffleConvs_1_Shuff_64_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_64_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_65_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_65_address0),
    .ce0(ShuffleConvs_1_Shuff_65_ce0),
    .we0(ShuffleConvs_1_Shuff_65_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_65_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_67_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_67_address0),
    .ce0(ShuffleConvs_1_Shuff_67_ce0),
    .we0(ShuffleConvs_1_Shuff_67_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_67_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_68_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_68_address0),
    .ce0(ShuffleConvs_1_Shuff_68_ce0),
    .we0(ShuffleConvs_1_Shuff_68_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_68_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_69_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_69_address0),
    .ce0(ShuffleConvs_1_Shuff_69_ce0),
    .we0(ShuffleConvs_1_Shuff_69_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_69_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_70_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_70_address0),
    .ce0(ShuffleConvs_1_Shuff_70_ce0),
    .we0(ShuffleConvs_1_Shuff_70_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_70_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_71_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_71_address0),
    .ce0(ShuffleConvs_1_Shuff_71_ce0),
    .we0(ShuffleConvs_1_Shuff_71_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_71_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_17_address0),
    .ce0(ShuffleConvs_1_Shuff_17_ce0),
    .we0(ShuffleConvs_1_Shuff_17_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_17_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_39_address0),
    .ce0(ShuffleConvs_1_Shuff_39_ce0),
    .we0(ShuffleConvs_1_Shuff_39_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_39_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_55_address0),
    .ce0(ShuffleConvs_1_Shuff_55_ce0),
    .we0(ShuffleConvs_1_Shuff_55_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_55_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_66_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_66_address0),
    .ce0(ShuffleConvs_1_Shuff_66_ce0),
    .we0(ShuffleConvs_1_Shuff_66_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_1_Shuff_66_q0)
);

ShuffleNetV2_ShufbSr #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
ShuffleConvs_1_Shuff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_1_Shuff_address0),
    .ce0(ShuffleConvs_1_Shuff_ce0),
    .we0(ShuffleConvs_1_Shuff_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_1_Shuff_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Downs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_3_address0),
    .ce0(ShuffleConvs_2_Downs_3_ce0),
    .we0(ShuffleConvs_2_Downs_3_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Downs_3_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Downs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_5_address0),
    .ce0(ShuffleConvs_2_Downs_5_ce0),
    .we0(ShuffleConvs_2_Downs_5_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Downs_5_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Downs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_address0),
    .ce0(ShuffleConvs_2_Downs_ce0),
    .we0(ShuffleConvs_2_Downs_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Downs_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Downs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_1_address0),
    .ce0(ShuffleConvs_2_Downs_1_ce0),
    .we0(ShuffleConvs_2_Downs_1_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Downs_1_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Downs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Downs_4_address0),
    .ce0(ShuffleConvs_2_Downs_4_ce0),
    .we0(ShuffleConvs_2_Downs_4_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Downs_4_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_19_address0),
    .ce0(ShuffleConvs_2_Shuff_19_ce0),
    .we0(ShuffleConvs_2_Shuff_19_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Shuff_19_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_20_address0),
    .ce0(ShuffleConvs_2_Shuff_20_ce0),
    .we0(ShuffleConvs_2_Shuff_20_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Shuff_20_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_21_address0),
    .ce0(ShuffleConvs_2_Shuff_21_ce0),
    .we0(ShuffleConvs_2_Shuff_21_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Shuff_21_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_22_address0),
    .ce0(ShuffleConvs_2_Shuff_22_ce0),
    .we0(ShuffleConvs_2_Shuff_22_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Shuff_22_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_1_address0),
    .ce0(ShuffleConvs_2_Shuff_1_ce0),
    .we0(ShuffleConvs_2_Shuff_1_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Shuff_1_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_3_address0),
    .ce0(ShuffleConvs_2_Shuff_3_ce0),
    .we0(ShuffleConvs_2_Shuff_3_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Shuff_3_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_4_address0),
    .ce0(ShuffleConvs_2_Shuff_4_ce0),
    .we0(ShuffleConvs_2_Shuff_4_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Shuff_4_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_17_address0),
    .ce0(ShuffleConvs_2_Shuff_17_ce0),
    .we0(ShuffleConvs_2_Shuff_17_we0),
    .d0(bias_q0),
    .q0(ShuffleConvs_2_Shuff_17_q0)
);

ShuffleNetV2_Shufclv #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
ShuffleConvs_2_Shuff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ShuffleConvs_2_Shuff_address0),
    .ce0(ShuffleConvs_2_Shuff_ce0),
    .we0(ShuffleConvs_2_Shuff_we0),
    .d0(bias_q1),
    .q0(ShuffleConvs_2_Shuff_q0)
);

ShuffleNetV2_convczy #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
conv_last_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_last_bias_address0),
    .ce0(conv_last_bias_ce0),
    .we0(conv_last_bias_we0),
    .d0(bias_q0),
    .q0(conv_last_bias_q0)
);

ShuffleNetV2_fc_bcAy #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_bias_address0),
    .ce0(fc_bias_ce0),
    .we0(fc_bias_we0),
    .d0(bias_q1),
    .q0(fc_bias_q0)
);

ShuffleNetV2_convcBy #(
    .DataWidth( 32 ),
    .AddressRange( 24576 ),
    .AddressWidth( 15 ))
conv1_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_output_address0),
    .ce0(conv1_output_ce0),
    .we0(conv1_output_we0),
    .d0(grp_conv1_fu_3549_conv1_output_d0),
    .q0(conv1_output_q0)
);

ShuffleNetV2_downcCy #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
downsampleunit0_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(downsampleunit0_outp_address0),
    .ce0(downsampleunit0_outp_ce0),
    .we0(downsampleunit0_outp_we0),
    .d0(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0),
    .q0(downsampleunit0_outp_q0),
    .address1(grp_ShuffleUnit0_fu_3401_input_r_address1),
    .ce1(downsampleunit0_outp_ce1),
    .q1(downsampleunit0_outp_q1)
);

ShuffleNetV2_downcCy #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
shuffleunit0_0_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit0_0_outpu_address0),
    .ce0(shuffleunit0_0_outpu_ce0),
    .we0(shuffleunit0_0_outpu_we0),
    .d0(grp_ShuffleUnit0_fu_3401_output_r_d0),
    .q0(shuffleunit0_0_outpu_q0),
    .address1(grp_ShuffleUnit0_fu_3401_input_r_address1),
    .ce1(shuffleunit0_0_outpu_ce1),
    .q1(shuffleunit0_0_outpu_q1)
);

ShuffleNetV2_downcCy #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
shuffleunit0_1_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit0_1_outpu_address0),
    .ce0(shuffleunit0_1_outpu_ce0),
    .we0(shuffleunit0_1_outpu_we0),
    .d0(grp_ShuffleUnit0_fu_3401_output_r_d0),
    .q0(shuffleunit0_1_outpu_q0),
    .address1(grp_ShuffleUnit0_fu_3401_input_r_address1),
    .ce1(shuffleunit0_1_outpu_ce1),
    .q1(shuffleunit0_1_outpu_q1)
);

ShuffleNetV2_shufcFz #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
shuffleunit0_2_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit0_2_outpu_address0),
    .ce0(shuffleunit0_2_outpu_ce0),
    .we0(shuffleunit0_2_outpu_we0),
    .d0(grp_ShuffleUnit0_fu_3401_output_r_d0),
    .q0(shuffleunit0_2_outpu_q0)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
downsampleunit1_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(downsampleunit1_outp_address0),
    .ce0(downsampleunit1_outp_ce0),
    .we0(downsampleunit1_outp_we0),
    .d0(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0),
    .q0(downsampleunit1_outp_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(downsampleunit1_outp_ce1),
    .q1(downsampleunit1_outp_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_0_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_0_outpu_address0),
    .ce0(shuffleunit1_0_outpu_ce0),
    .we0(shuffleunit1_0_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_0_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_0_outpu_ce1),
    .q1(shuffleunit1_0_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_1_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_1_outpu_address0),
    .ce0(shuffleunit1_1_outpu_ce0),
    .we0(shuffleunit1_1_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_1_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_1_outpu_ce1),
    .q1(shuffleunit1_1_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_2_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_2_outpu_address0),
    .ce0(shuffleunit1_2_outpu_ce0),
    .we0(shuffleunit1_2_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_2_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_2_outpu_ce1),
    .q1(shuffleunit1_2_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_3_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_3_outpu_address0),
    .ce0(shuffleunit1_3_outpu_ce0),
    .we0(shuffleunit1_3_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_3_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_3_outpu_ce1),
    .q1(shuffleunit1_3_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_4_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_4_outpu_address0),
    .ce0(shuffleunit1_4_outpu_ce0),
    .we0(shuffleunit1_4_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_4_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_4_outpu_ce1),
    .q1(shuffleunit1_4_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_5_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_5_outpu_address0),
    .ce0(shuffleunit1_5_outpu_ce0),
    .we0(shuffleunit1_5_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_5_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_5_outpu_ce1),
    .q1(shuffleunit1_5_outpu_q1)
);

ShuffleNetV2_downcGz #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_6_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_6_outpu_address0),
    .ce0(shuffleunit1_6_outpu_ce0),
    .we0(shuffleunit1_6_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_6_outpu_q0),
    .address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .ce1(shuffleunit1_6_outpu_ce1),
    .q1(shuffleunit1_6_outpu_q1)
);

ShuffleNetV2_shufcOA #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
shuffleunit1_7_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit1_7_outpu_address0),
    .ce0(shuffleunit1_7_outpu_ce0),
    .we0(shuffleunit1_7_outpu_we0),
    .d0(grp_ShuffleUnit1_fu_3437_output_r_d0),
    .q0(shuffleunit1_7_outpu_q0)
);

ShuffleNetV2_downcPA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
downsampleunit2_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(downsampleunit2_outp_address0),
    .ce0(downsampleunit2_outp_ce0),
    .we0(downsampleunit2_outp_we0),
    .d0(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0),
    .q0(downsampleunit2_outp_q0),
    .address1(grp_ShuffleUnit2_fu_3513_input_r_address1),
    .ce1(downsampleunit2_outp_ce1),
    .q1(downsampleunit2_outp_q1)
);

ShuffleNetV2_downcPA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
shuffleunit2_0_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit2_0_outpu_address0),
    .ce0(shuffleunit2_0_outpu_ce0),
    .we0(shuffleunit2_0_outpu_we0),
    .d0(grp_ShuffleUnit2_fu_3513_output_r_d0),
    .q0(shuffleunit2_0_outpu_q0),
    .address1(grp_ShuffleUnit2_fu_3513_input_r_address1),
    .ce1(shuffleunit2_0_outpu_ce1),
    .q1(shuffleunit2_0_outpu_q1)
);

ShuffleNetV2_downcPA #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
shuffleunit2_1_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit2_1_outpu_address0),
    .ce0(shuffleunit2_1_outpu_ce0),
    .we0(shuffleunit2_1_outpu_we0),
    .d0(grp_ShuffleUnit2_fu_3513_output_r_d0),
    .q0(shuffleunit2_1_outpu_q0),
    .address1(grp_ShuffleUnit2_fu_3513_input_r_address1),
    .ce1(shuffleunit2_1_outpu_ce1),
    .q1(shuffleunit2_1_outpu_q1)
);

ShuffleNetV2_shufcSB #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
shuffleunit2_2_outpu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shuffleunit2_2_outpu_address0),
    .ce0(shuffleunit2_2_outpu_ce0),
    .we0(shuffleunit2_2_outpu_we0),
    .d0(grp_ShuffleUnit2_fu_3513_output_r_d0),
    .q0(shuffleunit2_2_outpu_q0)
);

ShuffleNetV2_convcTB #(
    .DataWidth( 32 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
conv_last_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_last_output_address0),
    .ce0(conv_last_output_ce0),
    .we0(conv_last_output_we0),
    .d0(grp_conv_last_fu_3561_output_r_d0),
    .q0(conv_last_output_q0)
);

ShuffleNetV2_convczy #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
avgpool_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(avgpool_output_address0),
    .ce0(avgpool_output_ce0),
    .we0(avgpool_output_we0),
    .d0(grp_avgpool_fu_3573_output_r_d0),
    .q0(avgpool_output_q0)
);

DownsampleUnit0 grp_DownsampleUnit0_fu_3317(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DownsampleUnit0_fu_3317_ap_start),
    .ap_done(grp_DownsampleUnit0_fu_3317_ap_done),
    .ap_idle(grp_DownsampleUnit0_fu_3317_ap_idle),
    .ap_ready(grp_DownsampleUnit0_fu_3317_ap_ready),
    .input_r_address0(grp_DownsampleUnit0_fu_3317_input_r_address0),
    .input_r_ce0(grp_DownsampleUnit0_fu_3317_input_r_ce0),
    .input_r_q0(conv1_output_q0),
    .conv1r_weight_address0(grp_DownsampleUnit0_fu_3317_conv1r_weight_address0),
    .conv1r_weight_ce0(grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0),
    .conv1r_weight_q0(ShuffleConvs_0_Downs_7_q0),
    .conv1r_bias_address0(grp_DownsampleUnit0_fu_3317_conv1r_bias_address0),
    .conv1r_bias_ce0(grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0),
    .conv1r_bias_q0(ShuffleConvs_0_Downs_3_q0),
    .conv2r_weight_address0(grp_DownsampleUnit0_fu_3317_conv2r_weight_address0),
    .conv2r_weight_ce0(grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0),
    .conv2r_weight_q0(ShuffleConvs_0_Downs_9_q0),
    .conv2r_bias_address0(grp_DownsampleUnit0_fu_3317_conv2r_bias_address0),
    .conv2r_bias_ce0(grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0),
    .conv2r_bias_q0(ShuffleConvs_0_Downs_5_q0),
    .conv3r_weight_address0(grp_DownsampleUnit0_fu_3317_conv3r_weight_address0),
    .conv3r_weight_ce0(grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0),
    .conv3r_weight_q0(ShuffleConvs_0_Downs_10_q0),
    .conv3r_bias_address0(grp_DownsampleUnit0_fu_3317_conv3r_bias_address0),
    .conv3r_bias_ce0(grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0),
    .conv3r_bias_q0(ShuffleConvs_0_Downs_q0),
    .conv1l_weight_address0(grp_DownsampleUnit0_fu_3317_conv1l_weight_address0),
    .conv1l_weight_ce0(grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0),
    .conv1l_weight_q0(ShuffleConvs_0_Downs_6_q0),
    .conv1l_bias_address0(grp_DownsampleUnit0_fu_3317_conv1l_bias_address0),
    .conv1l_bias_ce0(grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0),
    .conv1l_bias_q0(ShuffleConvs_0_Downs_1_q0),
    .conv2l_weight_address0(grp_DownsampleUnit0_fu_3317_conv2l_weight_address0),
    .conv2l_weight_ce0(grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0),
    .conv2l_weight_q0(ShuffleConvs_0_Downs_8_q0),
    .conv2l_bias_address0(grp_DownsampleUnit0_fu_3317_conv2l_bias_address0),
    .conv2l_bias_ce0(grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0),
    .conv2l_bias_q0(ShuffleConvs_0_Downs_4_q0),
    .downsampleunit0_outp_address0(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0),
    .downsampleunit0_outp_ce0(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0),
    .downsampleunit0_outp_we0(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0),
    .downsampleunit0_outp_d0(grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_d0)
);

DownsampleUnit1 grp_DownsampleUnit1_fu_3345(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DownsampleUnit1_fu_3345_ap_start),
    .ap_done(grp_DownsampleUnit1_fu_3345_ap_done),
    .ap_idle(grp_DownsampleUnit1_fu_3345_ap_idle),
    .ap_ready(grp_DownsampleUnit1_fu_3345_ap_ready),
    .conv1r_weight_address0(grp_DownsampleUnit1_fu_3345_conv1r_weight_address0),
    .conv1r_weight_ce0(grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0),
    .conv1r_weight_q0(ShuffleConvs_1_Downs_7_q0),
    .conv1r_bias_address0(grp_DownsampleUnit1_fu_3345_conv1r_bias_address0),
    .conv1r_bias_ce0(grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0),
    .conv1r_bias_q0(ShuffleConvs_1_Downs_3_q0),
    .conv2r_weight_address0(grp_DownsampleUnit1_fu_3345_conv2r_weight_address0),
    .conv2r_weight_ce0(grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0),
    .conv2r_weight_q0(ShuffleConvs_1_Downs_9_q0),
    .conv2r_bias_address0(grp_DownsampleUnit1_fu_3345_conv2r_bias_address0),
    .conv2r_bias_ce0(grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0),
    .conv2r_bias_q0(ShuffleConvs_1_Downs_5_q0),
    .conv3r_weight_address0(grp_DownsampleUnit1_fu_3345_conv3r_weight_address0),
    .conv3r_weight_ce0(grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0),
    .conv3r_weight_q0(ShuffleConvs_1_Downs_10_q0),
    .conv3r_bias_address0(grp_DownsampleUnit1_fu_3345_conv3r_bias_address0),
    .conv3r_bias_ce0(grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0),
    .conv3r_bias_q0(ShuffleConvs_1_Downs_q0),
    .conv1l_weight_address0(grp_DownsampleUnit1_fu_3345_conv1l_weight_address0),
    .conv1l_weight_ce0(grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0),
    .conv1l_weight_q0(ShuffleConvs_1_Downs_6_q0),
    .conv1l_bias_address0(grp_DownsampleUnit1_fu_3345_conv1l_bias_address0),
    .conv1l_bias_ce0(grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0),
    .conv1l_bias_q0(ShuffleConvs_1_Downs_1_q0),
    .conv2l_weight_address0(grp_DownsampleUnit1_fu_3345_conv2l_weight_address0),
    .conv2l_weight_ce0(grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0),
    .conv2l_weight_q0(ShuffleConvs_1_Downs_8_q0),
    .conv2l_bias_address0(grp_DownsampleUnit1_fu_3345_conv2l_bias_address0),
    .conv2l_bias_ce0(grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0),
    .conv2l_bias_q0(ShuffleConvs_1_Downs_4_q0),
    .shuffleunit0_2_outpu_address0(grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0),
    .shuffleunit0_2_outpu_ce0(grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0),
    .shuffleunit0_2_outpu_q0(shuffleunit0_2_outpu_q0),
    .downsampleunit1_outp_address0(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0),
    .downsampleunit1_outp_ce0(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0),
    .downsampleunit1_outp_we0(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0),
    .downsampleunit1_outp_d0(grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_d0)
);

DownsampleUnit2 grp_DownsampleUnit2_fu_3373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DownsampleUnit2_fu_3373_ap_start),
    .ap_done(grp_DownsampleUnit2_fu_3373_ap_done),
    .ap_idle(grp_DownsampleUnit2_fu_3373_ap_idle),
    .ap_ready(grp_DownsampleUnit2_fu_3373_ap_ready),
    .conv1r_weight_address0(grp_DownsampleUnit2_fu_3373_conv1r_weight_address0),
    .conv1r_weight_ce0(grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0),
    .conv1r_weight_q0(ShuffleConvs_2_Downs_7_q0),
    .conv1r_bias_address0(grp_DownsampleUnit2_fu_3373_conv1r_bias_address0),
    .conv1r_bias_ce0(grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0),
    .conv1r_bias_q0(ShuffleConvs_2_Downs_3_q0),
    .conv2r_weight_address0(grp_DownsampleUnit2_fu_3373_conv2r_weight_address0),
    .conv2r_weight_ce0(grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0),
    .conv2r_weight_q0(ShuffleConvs_2_Downs_9_q0),
    .conv2r_bias_address0(grp_DownsampleUnit2_fu_3373_conv2r_bias_address0),
    .conv2r_bias_ce0(grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0),
    .conv2r_bias_q0(ShuffleConvs_2_Downs_5_q0),
    .conv3r_weight_address0(grp_DownsampleUnit2_fu_3373_conv3r_weight_address0),
    .conv3r_weight_ce0(grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0),
    .conv3r_weight_q0(ShuffleConvs_2_Downs_10_q0),
    .conv3r_bias_address0(grp_DownsampleUnit2_fu_3373_conv3r_bias_address0),
    .conv3r_bias_ce0(grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0),
    .conv3r_bias_q0(ShuffleConvs_2_Downs_q0),
    .conv1l_weight_address0(grp_DownsampleUnit2_fu_3373_conv1l_weight_address0),
    .conv1l_weight_ce0(grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0),
    .conv1l_weight_q0(ShuffleConvs_2_Downs_6_q0),
    .conv1l_bias_address0(grp_DownsampleUnit2_fu_3373_conv1l_bias_address0),
    .conv1l_bias_ce0(grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0),
    .conv1l_bias_q0(ShuffleConvs_2_Downs_1_q0),
    .conv2l_weight_address0(grp_DownsampleUnit2_fu_3373_conv2l_weight_address0),
    .conv2l_weight_ce0(grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0),
    .conv2l_weight_q0(ShuffleConvs_2_Downs_8_q0),
    .conv2l_bias_address0(grp_DownsampleUnit2_fu_3373_conv2l_bias_address0),
    .conv2l_bias_ce0(grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0),
    .conv2l_bias_q0(ShuffleConvs_2_Downs_4_q0),
    .shuffleunit1_7_outpu_address0(grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0),
    .shuffleunit1_7_outpu_ce0(grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0),
    .shuffleunit1_7_outpu_q0(shuffleunit1_7_outpu_q0),
    .downsampleunit2_outp_address0(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0),
    .downsampleunit2_outp_ce0(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0),
    .downsampleunit2_outp_we0(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0),
    .downsampleunit2_outp_d0(grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_d0)
);

ShuffleUnit0 grp_ShuffleUnit0_fu_3401(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ShuffleUnit0_fu_3401_ap_start),
    .ap_done(grp_ShuffleUnit0_fu_3401_ap_done),
    .ap_idle(grp_ShuffleUnit0_fu_3401_ap_idle),
    .ap_ready(grp_ShuffleUnit0_fu_3401_ap_ready),
    .input_r_address0(grp_ShuffleUnit0_fu_3401_input_r_address0),
    .input_r_ce0(grp_ShuffleUnit0_fu_3401_input_r_ce0),
    .input_r_q0(grp_ShuffleUnit0_fu_3401_input_r_q0),
    .input_r_address1(grp_ShuffleUnit0_fu_3401_input_r_address1),
    .input_r_ce1(grp_ShuffleUnit0_fu_3401_input_r_ce1),
    .input_r_q1(grp_ShuffleUnit0_fu_3401_input_r_q1),
    .conv1_weight_address0(grp_ShuffleUnit0_fu_3401_conv1_weight_address0),
    .conv1_weight_ce0(grp_ShuffleUnit0_fu_3401_conv1_weight_ce0),
    .conv1_weight_q0(grp_ShuffleUnit0_fu_3401_conv1_weight_q0),
    .conv1_bias_address0(grp_ShuffleUnit0_fu_3401_conv1_bias_address0),
    .conv1_bias_ce0(grp_ShuffleUnit0_fu_3401_conv1_bias_ce0),
    .conv1_bias_q0(grp_ShuffleUnit0_fu_3401_conv1_bias_q0),
    .conv2_weight_address0(grp_ShuffleUnit0_fu_3401_conv2_weight_address0),
    .conv2_weight_ce0(grp_ShuffleUnit0_fu_3401_conv2_weight_ce0),
    .conv2_weight_q0(grp_ShuffleUnit0_fu_3401_conv2_weight_q0),
    .conv2_bias_address0(grp_ShuffleUnit0_fu_3401_conv2_bias_address0),
    .conv2_bias_ce0(grp_ShuffleUnit0_fu_3401_conv2_bias_ce0),
    .conv2_bias_q0(grp_ShuffleUnit0_fu_3401_conv2_bias_q0),
    .conv3_weight_address0(grp_ShuffleUnit0_fu_3401_conv3_weight_address0),
    .conv3_weight_ce0(grp_ShuffleUnit0_fu_3401_conv3_weight_ce0),
    .conv3_weight_q0(grp_ShuffleUnit0_fu_3401_conv3_weight_q0),
    .conv3_bias_address0(grp_ShuffleUnit0_fu_3401_conv3_bias_address0),
    .conv3_bias_ce0(grp_ShuffleUnit0_fu_3401_conv3_bias_ce0),
    .conv3_bias_q0(grp_ShuffleUnit0_fu_3401_conv3_bias_q0),
    .output_r_address0(grp_ShuffleUnit0_fu_3401_output_r_address0),
    .output_r_ce0(grp_ShuffleUnit0_fu_3401_output_r_ce0),
    .output_r_we0(grp_ShuffleUnit0_fu_3401_output_r_we0),
    .output_r_d0(grp_ShuffleUnit0_fu_3401_output_r_d0)
);

ShuffleUnit1 grp_ShuffleUnit1_fu_3437(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ShuffleUnit1_fu_3437_ap_start),
    .ap_done(grp_ShuffleUnit1_fu_3437_ap_done),
    .ap_idle(grp_ShuffleUnit1_fu_3437_ap_idle),
    .ap_ready(grp_ShuffleUnit1_fu_3437_ap_ready),
    .input_r_address0(grp_ShuffleUnit1_fu_3437_input_r_address0),
    .input_r_ce0(grp_ShuffleUnit1_fu_3437_input_r_ce0),
    .input_r_q0(grp_ShuffleUnit1_fu_3437_input_r_q0),
    .input_r_address1(grp_ShuffleUnit1_fu_3437_input_r_address1),
    .input_r_ce1(grp_ShuffleUnit1_fu_3437_input_r_ce1),
    .input_r_q1(grp_ShuffleUnit1_fu_3437_input_r_q1),
    .conv1_weight_address0(grp_ShuffleUnit1_fu_3437_conv1_weight_address0),
    .conv1_weight_ce0(grp_ShuffleUnit1_fu_3437_conv1_weight_ce0),
    .conv1_weight_q0(grp_ShuffleUnit1_fu_3437_conv1_weight_q0),
    .conv1_bias_address0(grp_ShuffleUnit1_fu_3437_conv1_bias_address0),
    .conv1_bias_ce0(grp_ShuffleUnit1_fu_3437_conv1_bias_ce0),
    .conv1_bias_q0(grp_ShuffleUnit1_fu_3437_conv1_bias_q0),
    .conv2_weight_address0(grp_ShuffleUnit1_fu_3437_conv2_weight_address0),
    .conv2_weight_ce0(grp_ShuffleUnit1_fu_3437_conv2_weight_ce0),
    .conv2_weight_q0(grp_ShuffleUnit1_fu_3437_conv2_weight_q0),
    .conv2_bias_address0(grp_ShuffleUnit1_fu_3437_conv2_bias_address0),
    .conv2_bias_ce0(grp_ShuffleUnit1_fu_3437_conv2_bias_ce0),
    .conv2_bias_q0(grp_ShuffleUnit1_fu_3437_conv2_bias_q0),
    .conv3_weight_address0(grp_ShuffleUnit1_fu_3437_conv3_weight_address0),
    .conv3_weight_ce0(grp_ShuffleUnit1_fu_3437_conv3_weight_ce0),
    .conv3_weight_q0(grp_ShuffleUnit1_fu_3437_conv3_weight_q0),
    .conv3_bias_address0(grp_ShuffleUnit1_fu_3437_conv3_bias_address0),
    .conv3_bias_ce0(grp_ShuffleUnit1_fu_3437_conv3_bias_ce0),
    .conv3_bias_q0(grp_ShuffleUnit1_fu_3437_conv3_bias_q0),
    .output_r_address0(grp_ShuffleUnit1_fu_3437_output_r_address0),
    .output_r_ce0(grp_ShuffleUnit1_fu_3437_output_r_ce0),
    .output_r_we0(grp_ShuffleUnit1_fu_3437_output_r_we0),
    .output_r_d0(grp_ShuffleUnit1_fu_3437_output_r_d0)
);

ShuffleUnit2 grp_ShuffleUnit2_fu_3513(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ShuffleUnit2_fu_3513_ap_start),
    .ap_done(grp_ShuffleUnit2_fu_3513_ap_done),
    .ap_idle(grp_ShuffleUnit2_fu_3513_ap_idle),
    .ap_ready(grp_ShuffleUnit2_fu_3513_ap_ready),
    .input_r_address0(grp_ShuffleUnit2_fu_3513_input_r_address0),
    .input_r_ce0(grp_ShuffleUnit2_fu_3513_input_r_ce0),
    .input_r_q0(grp_ShuffleUnit2_fu_3513_input_r_q0),
    .input_r_address1(grp_ShuffleUnit2_fu_3513_input_r_address1),
    .input_r_ce1(grp_ShuffleUnit2_fu_3513_input_r_ce1),
    .input_r_q1(grp_ShuffleUnit2_fu_3513_input_r_q1),
    .conv1_weight_address0(grp_ShuffleUnit2_fu_3513_conv1_weight_address0),
    .conv1_weight_ce0(grp_ShuffleUnit2_fu_3513_conv1_weight_ce0),
    .conv1_weight_q0(grp_ShuffleUnit2_fu_3513_conv1_weight_q0),
    .conv1_bias_address0(grp_ShuffleUnit2_fu_3513_conv1_bias_address0),
    .conv1_bias_ce0(grp_ShuffleUnit2_fu_3513_conv1_bias_ce0),
    .conv1_bias_q0(grp_ShuffleUnit2_fu_3513_conv1_bias_q0),
    .conv2_weight_address0(grp_ShuffleUnit2_fu_3513_conv2_weight_address0),
    .conv2_weight_ce0(grp_ShuffleUnit2_fu_3513_conv2_weight_ce0),
    .conv2_weight_q0(grp_ShuffleUnit2_fu_3513_conv2_weight_q0),
    .conv2_bias_address0(grp_ShuffleUnit2_fu_3513_conv2_bias_address0),
    .conv2_bias_ce0(grp_ShuffleUnit2_fu_3513_conv2_bias_ce0),
    .conv2_bias_q0(grp_ShuffleUnit2_fu_3513_conv2_bias_q0),
    .conv3_weight_address0(grp_ShuffleUnit2_fu_3513_conv3_weight_address0),
    .conv3_weight_ce0(grp_ShuffleUnit2_fu_3513_conv3_weight_ce0),
    .conv3_weight_q0(grp_ShuffleUnit2_fu_3513_conv3_weight_q0),
    .conv3_bias_address0(grp_ShuffleUnit2_fu_3513_conv3_bias_address0),
    .conv3_bias_ce0(grp_ShuffleUnit2_fu_3513_conv3_bias_ce0),
    .conv3_bias_q0(grp_ShuffleUnit2_fu_3513_conv3_bias_q0),
    .output_r_address0(grp_ShuffleUnit2_fu_3513_output_r_address0),
    .output_r_ce0(grp_ShuffleUnit2_fu_3513_output_r_ce0),
    .output_r_we0(grp_ShuffleUnit2_fu_3513_output_r_we0),
    .output_r_d0(grp_ShuffleUnit2_fu_3513_output_r_d0)
);

conv1 grp_conv1_fu_3549(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv1_fu_3549_ap_start),
    .ap_done(grp_conv1_fu_3549_ap_done),
    .ap_idle(grp_conv1_fu_3549_ap_idle),
    .ap_ready(grp_conv1_fu_3549_ap_ready),
    .input_r_address0(grp_conv1_fu_3549_input_r_address0),
    .input_r_ce0(grp_conv1_fu_3549_input_r_ce0),
    .input_r_q0(image_r_q0),
    .weight_address0(grp_conv1_fu_3549_weight_address0),
    .weight_ce0(grp_conv1_fu_3549_weight_ce0),
    .weight_q0(conv1_weight_q0),
    .bias_address0(grp_conv1_fu_3549_bias_address0),
    .bias_ce0(grp_conv1_fu_3549_bias_ce0),
    .bias_q0(conv1_bias_q0),
    .conv1_output_address0(grp_conv1_fu_3549_conv1_output_address0),
    .conv1_output_ce0(grp_conv1_fu_3549_conv1_output_ce0),
    .conv1_output_we0(grp_conv1_fu_3549_conv1_output_we0),
    .conv1_output_d0(grp_conv1_fu_3549_conv1_output_d0)
);

conv_last grp_conv_last_fu_3561(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_last_fu_3561_ap_start),
    .ap_done(grp_conv_last_fu_3561_ap_done),
    .ap_idle(grp_conv_last_fu_3561_ap_idle),
    .ap_ready(grp_conv_last_fu_3561_ap_ready),
    .weight_address0(grp_conv_last_fu_3561_weight_address0),
    .weight_ce0(grp_conv_last_fu_3561_weight_ce0),
    .weight_q0(conv_last_weight_q0),
    .bias_address0(grp_conv_last_fu_3561_bias_address0),
    .bias_ce0(grp_conv_last_fu_3561_bias_ce0),
    .bias_q0(conv_last_bias_q0),
    .output_r_address0(grp_conv_last_fu_3561_output_r_address0),
    .output_r_ce0(grp_conv_last_fu_3561_output_r_ce0),
    .output_r_we0(grp_conv_last_fu_3561_output_r_we0),
    .output_r_d0(grp_conv_last_fu_3561_output_r_d0),
    .shuffleunit2_2_outpu_address0(grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0),
    .shuffleunit2_2_outpu_ce0(grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0),
    .shuffleunit2_2_outpu_q0(shuffleunit2_2_outpu_q0)
);

avgpool grp_avgpool_fu_3573(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_avgpool_fu_3573_ap_start),
    .ap_done(grp_avgpool_fu_3573_ap_done),
    .ap_idle(grp_avgpool_fu_3573_ap_idle),
    .ap_ready(grp_avgpool_fu_3573_ap_ready),
    .output_r_address0(grp_avgpool_fu_3573_output_r_address0),
    .output_r_ce0(grp_avgpool_fu_3573_output_r_ce0),
    .output_r_we0(grp_avgpool_fu_3573_output_r_we0),
    .output_r_d0(grp_avgpool_fu_3573_output_r_d0),
    .conv_last_output_address0(grp_avgpool_fu_3573_conv_last_output_address0),
    .conv_last_output_ce0(grp_avgpool_fu_3573_conv_last_output_ce0),
    .conv_last_output_q0(conv_last_output_q0)
);

ShuffleNetV2_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_faddbkb_x_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_i_reg_3294),
    .din1(grp_fu_3581_p1),
    .ce(1'b1),
    .dout(grp_fu_3581_p2)
);

ShuffleNetV2_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ShuffleNetV2_fmulcud_x_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fc_weight_load_reg_10730),
    .din1(avgpool_output_load_reg_10735),
    .ce(1'b1),
    .dout(grp_fu_3586_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state88)) begin
            ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= 1'b1;
        end else if ((1'b1 == grp_DownsampleUnit0_fu_3317_ap_ready)) begin
            ap_reg_grp_DownsampleUnit0_fu_3317_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state96)) begin
            ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= 1'b1;
        end else if ((1'b1 == grp_DownsampleUnit1_fu_3345_ap_ready)) begin
            ap_reg_grp_DownsampleUnit1_fu_3345_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state114)) begin
            ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= 1'b1;
        end else if ((1'b1 == grp_DownsampleUnit2_fu_3373_ap_ready)) begin
            ap_reg_grp_DownsampleUnit2_fu_3373_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state94))) begin
            ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= 1'b1;
        end else if ((1'b1 == grp_ShuffleUnit0_fu_3401_ap_ready)) begin
            ap_reg_grp_ShuffleUnit0_fu_3401_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state112))) begin
            ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= 1'b1;
        end else if ((1'b1 == grp_ShuffleUnit1_fu_3437_ap_ready)) begin
            ap_reg_grp_ShuffleUnit1_fu_3437_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state120))) begin
            ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= 1'b1;
        end else if ((1'b1 == grp_ShuffleUnit2_fu_3513_ap_ready)) begin
            ap_reg_grp_ShuffleUnit2_fu_3513_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_avgpool_fu_3573_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state124)) begin
            ap_reg_grp_avgpool_fu_3573_ap_start <= 1'b1;
        end else if ((1'b1 == grp_avgpool_fu_3573_ap_ready)) begin
            ap_reg_grp_avgpool_fu_3573_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_conv1_fu_3549_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state85) & (1'd1 == exitcond7_fu_8783_p2))) begin
            ap_reg_grp_conv1_fu_3549_ap_start <= 1'b1;
        end else if ((1'b1 == grp_conv1_fu_3549_ap_ready)) begin
            ap_reg_grp_conv1_fu_3549_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_conv_last_fu_3561_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state122)) begin
            ap_reg_grp_conv_last_fu_3561_ap_start <= 1'b1;
        end else if ((1'b1 == grp_conv_last_fu_3561_ap_ready)) begin
            ap_reg_grp_conv_last_fu_3561_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (1'd0 == exitcond1_i_fu_8815_p2))) begin
        ci_i_reg_3306 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        ci_i_reg_3306 <= ci_10_reg_10710;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == exitcond11_fu_5378_p2))) begin
        ci_reg_3135 <= ci_9_reg_9002;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_3622_p2 == 1'd0))) begin
        ci_reg_3135 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_3622_p2 == 1'd1))) begin
        co2_reg_3169 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond4_fu_6144_p2))) begin
        co2_reg_3169 <= co_23_reg_9627;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        co_i_reg_3283 <= co_24_reg_10691;
    end else if (((1'b1 == ap_CS_fsm_state125) & (grp_avgpool_fu_3573_ap_done == 1'b1))) begin
        co_i_reg_3283 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_4102_p2 == 1'd1))) begin
        co_reg_3124 <= co_22_reg_8924;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_3124 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'd1 == exitcond12_fu_7219_p2))) begin
        h_reg_3191 <= h_22_reg_9734;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond4_fu_6144_p2))) begin
        h_reg_3191 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond5_fu_4240_p2 == 1'd1))) begin
        i1_reg_3158 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i1_reg_3158 <= i_3_reg_9443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i3_reg_3203 <= i_6_reg_9808;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i3_reg_3203 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond13_fu_6394_p2))) begin
        i4_reg_3214 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        i4_reg_3214 <= i_7_reg_10004;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond1_fu_5982_p2))) begin
        i5_reg_3225 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state74) & (1'd1 == exitcond9_fu_8445_p2))) begin
        i5_reg_3225 <= i_5_reg_10196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (1'd1 == exitcond3_fu_7706_p2))) begin
        i7_reg_3259 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        i7_reg_3259 <= i_2_reg_10665;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (1'd1 == exitcond8_fu_8747_p2))) begin
        i8_reg_3271 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        i8_reg_3271 <= i_4_reg_10678;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_reg_3147 <= i_1_reg_9142;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_3147 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (1'd1 == exitcond6_fu_7885_p2))) begin
        k6_reg_3248 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        k6_reg_3248 <= k_2_reg_10544;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        k_reg_3237 <= k_1_reg_10298;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        k_reg_3237 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (1'd0 == exitcond1_i_fu_8815_p2))) begin
        sum_i_reg_3294 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        sum_i_reg_3294 <= grp_fu_3581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond10_fu_6323_p2))) begin
        w_reg_3180 <= w_22_reg_9660;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond1_fu_5982_p2))) begin
        w_reg_3180 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        avgpool_output_load_reg_10735 <= avgpool_output_q0;
        fc_weight_load_reg_10730 <= fc_weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        bias_load_16_reg_10330 <= bias_q1;
        tmp_238_cast96_cast1_reg_10325[7 : 3] <= tmp_238_cast96_cast1_fu_7950_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        ci_10_reg_10710 <= ci_10_fu_8849_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ci_9_reg_9002 <= ci_9_fu_4108_p2;
        ci_cast_reg_8994[4 : 0] <= ci_cast_fu_4094_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        co2_cast119_cast_reg_9610[4 : 0] <= co2_cast119_cast_fu_5970_p1[4 : 0];
        co2_cast120_cast_reg_9601[4 : 0] <= co2_cast120_cast_fu_5966_p1[4 : 0];
        co2_cast1_reg_9587[4 : 0] <= co2_cast1_fu_5958_p1[4 : 0];
        co2_cast2_reg_9592[4 : 0] <= co2_cast2_fu_5962_p1[4 : 0];
        co2_cast5_reg_9619[4 : 0] <= co2_cast5_fu_5974_p1[4 : 0];
        co_23_reg_9627 <= co_23_fu_5988_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        co_22_reg_8924 <= co_22_fu_3628_p2;
        co_cast143_cast1_reg_8903[4 : 0] <= co_cast143_cast1_fu_3602_p1[4 : 0];
        co_cast143_cast_reg_8910[4 : 0] <= co_cast143_cast_fu_3606_p1[4 : 0];
        co_cast144_cast_reg_8891[4 : 0] <= co_cast144_cast_fu_3598_p1[4 : 0];
        co_cast1_reg_8874[4 : 0] <= co_cast1_fu_3590_p1[4 : 0];
        co_cast2_reg_8882[4 : 0] <= co_cast2_fu_3594_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        co_24_reg_10691 <= co_24_fu_8821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        fc_bias_load_reg_10750 <= fc_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        h_22_reg_9734 <= h_22_fu_6329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        i5_cast102_cast_reg_10185[4 : 0] <= i5_cast102_cast_fu_7698_p1[4 : 0];
        i5_cast104_cast1_reg_10174[4 : 0] <= i5_cast104_cast1_fu_7694_p1[4 : 0];
        i5_cast105_cast1_reg_10146[4 : 0] <= i5_cast105_cast1_fu_7686_p1[4 : 0];
        i5_cast105_cast_reg_10159[4 : 0] <= i5_cast105_cast_fu_7690_p1[4 : 0];
        i5_cast1_reg_10114[4 : 0] <= i5_cast1_fu_7678_p1[4 : 0];
        i5_cast2_reg_10130[4 : 0] <= i5_cast2_fu_7682_p1[4 : 0];
        i_5_reg_10196 <= i_5_fu_7712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_1_reg_9142 <= i_1_fu_4246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_2_reg_10665 <= i_2_fu_8753_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_3_reg_9443 <= i_3_fu_5384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        i_4_reg_10678 <= i_4_fu_8789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_6_reg_9808 <= i_6_fu_6400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_7_reg_10004 <= i_7_fu_7225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        k_1_reg_10298 <= k_1_fu_7891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        k_2_reg_10544 <= k_2_fu_8451_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        result_reg_10755 <= grp_fu_3581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        shuffle_conv_3x3_loa_15_reg_10073 <= shuffle_conv_3x3_q1;
        tmp_647_reg_10088 <= tmp_647_fu_7644_p2;
        tmp_652_reg_10093 <= tmp_652_fu_7659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp31_reg_9855[6 : 3] <= tmp31_fu_6573_p2[6 : 3];
        tmp_135_reg_9839 <= tmp_135_fu_6527_p1;
        tmp_136_reg_9844 <= tmp_136_fu_6531_p1;
        tmp_470_cast110_cast_reg_9827[7 : 3] <= tmp_470_cast110_cast_fu_6445_p1[7 : 3];
        tmp_564_reg_9833 <= tmp_564_fu_6485_p2;
        tmp_575_reg_9849 <= tmp_575_fu_6568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp3_reg_9200[8 : 3] <= tmp3_fu_4473_p2[8 : 3];
        tmp_226_reg_9205 <= tmp_226_fu_4482_p2;
        tmp_227_reg_9211 <= tmp_227_fu_4493_p2;
        tmp_234_reg_9217 <= tmp_234_fu_4503_p2;
        tmp_330_cast127_cast_reg_9181[9 : 3] <= tmp_330_cast127_cast_fu_4386_p1[9 : 3];
        tmp_509_reg_9223[16 : 3] <= tmp_509_fu_4524_p2[16 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        tmp_130_i_reg_10740 <= grp_fu_3586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_143_reg_10029 <= tmp_143_fu_7355_p1;
        tmp_144_reg_10034 <= tmp_144_fu_7359_p1;
        tmp_391_reg_10039 <= tmp_391_fu_7369_p2;
        tmp_505_cast_reg_10017[9 : 3] <= tmp_505_cast_fu_7268_p1[9 : 3];
        tmp_623_reg_10023 <= tmp_623_fu_7307_p2;
        tmp_650_reg_10045 <= tmp_650_fu_7411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_3622_p2 == 1'd0))) begin
        tmp_175_reg_8974[6 : 3] <= tmp_175_fu_4028_p2[6 : 3];
        tmp_176_reg_8984[7 : 3] <= tmp_176_fu_4074_p2[7 : 3];
        tmp_186_cast_reg_8979[3 : 0] <= tmp_186_cast_fu_4044_p1[3 : 0];
        tmp_189_cast_reg_8989[2 : 0] <= tmp_189_cast_fu_4090_p1[2 : 0];
        tmp_362_cast_reg_8929[11 : 3] <= tmp_362_cast_fu_3664_p1[11 : 3];
        tmp_368_cast_reg_8934[12 : 3] <= tmp_368_cast_fu_3704_p1[12 : 3];
        tmp_439_cast_reg_8939[13 : 3] <= tmp_439_cast_fu_3744_p1[13 : 3];
        tmp_442_cast_reg_8944[13 : 3] <= tmp_442_cast_fu_3784_p1[13 : 3];
        tmp_447_cast_reg_8949[13 : 3] <= tmp_447_cast_fu_3830_p1[13 : 3];
        tmp_450_cast_reg_8954[14 : 3] <= tmp_450_cast_fu_3870_p1[14 : 3];
        tmp_453_cast_reg_8959[14 : 3] <= tmp_453_cast_fu_3910_p1[14 : 3];
        tmp_456_cast_reg_8964[14 : 3] <= tmp_456_cast_fu_3950_p1[14 : 3];
        tmp_461_cast_reg_8969[14 : 3] <= tmp_461_cast_fu_3996_p1[14 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_186_cast1_reg_9090[4 : 0] <= tmp_186_cast1_fu_4221_p1[4 : 0];
        tmp_186_cast2_reg_9104[4 : 0] <= tmp_186_cast2_fu_4225_p1[4 : 0];
        tmp_186_cast3_reg_9114[4 : 0] <= tmp_186_cast3_fu_4229_p1[4 : 0];
        tmp_186_cast4_reg_9120[4 : 0] <= tmp_186_cast4_fu_4233_p1[4 : 0];
        tmp_188_cast_reg_9134 <= tmp_188_cast_fu_4237_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond2_fu_4102_p2))) begin
        tmp_187_reg_9030 <= tmp_187_fu_4142_p2;
        tmp_477_cast_reg_9007 <= tmp_477_cast_fu_4127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (1'd0 == exitcond3_fu_7706_p2))) begin
        tmp_189_reg_10201[4 : 0] <= tmp_189_fu_7718_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond4_fu_6144_p2))) begin
        tmp_218_cast1_reg_9665[1 : 0] <= tmp_218_cast1_fu_6156_p1[1 : 0];
        tmp_218_cast2_reg_9673[1 : 0] <= tmp_218_cast2_fu_6160_p1[1 : 0];
        tmp_218_cast3_reg_9678[1 : 0] <= tmp_218_cast3_fu_6164_p1[1 : 0];
        tmp_218_cast4_reg_9684[1 : 0] <= tmp_218_cast4_fu_6168_p1[1 : 0];
        tmp_218_cast5_reg_9690[1 : 0] <= tmp_218_cast5_fu_6172_p1[1 : 0];
        tmp_218_cast6_reg_9701[1 : 0] <= tmp_218_cast6_fu_6176_p1[1 : 0];
        tmp_420_reg_9706 <= tmp_420_fu_6209_p2;
        tmp_422_reg_9711 <= tmp_422_fu_6236_p2;
        tmp_424_reg_9716 <= tmp_424_fu_6263_p2;
        tmp_426_reg_9721 <= tmp_426_fu_6290_p2;
        tmp_428_reg_9726 <= tmp_428_fu_6317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond5_fu_4240_p2 == 1'd1))) begin
        tmp_220_cast_reg_9176 <= tmp_220_cast_fu_4382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond5_fu_4240_p2))) begin
        tmp_221_reg_9147[7 : 3] <= tmp_221_fu_4280_p2[7 : 3];
        tmp_222_reg_9159 <= tmp_222_fu_4296_p2;
        tmp_225_reg_9170 <= tmp_225_fu_4373_p2;
        tmp_330_cast127_cast_1_reg_9153[8 : 3] <= tmp_330_cast127_cast_1_fu_4286_p1[8 : 3];
        tmp_436_reg_9165 <= tmp_436_fu_4362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_228_reg_9259 <= tmp_228_fu_4624_p2;
        tmp_229_reg_9265 <= tmp_229_fu_4634_p2;
        tmp_268_reg_9271 <= tmp_268_fu_4646_p2;
        tmp_514_cast_reg_9228 <= tmp_514_cast_fu_4530_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        tmp_238_cast1_reg_10447[10 : 3] <= tmp_238_cast1_fu_8177_p1[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp_238_cast96_cast_reg_10313[8 : 3] <= tmp_238_cast96_cast_fu_7931_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        tmp_238_cast97_cast_reg_10345[9 : 3] <= tmp_238_cast97_cast_fu_7993_p1[9 : 3];
        tmp_243_reg_10357[31 : 0] <= tmp_243_fu_8004_p1[31 : 0];
        tmp_275_reg_10397 <= tmp_275_fu_8048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (1'd0 == exitcond6_fu_7885_p2))) begin
        tmp_238_reg_10303[6 : 3] <= tmp_238_fu_7925_p2[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_239_reg_9316 <= tmp_239_fu_4846_p2;
        tmp_244_reg_9322 <= tmp_244_fu_4857_p2;
        tmp_330_cast1_reg_9297[10 : 3] <= tmp_330_cast1_fu_4829_p1[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_247_reg_9338 <= tmp_247_fu_4951_p2;
        tmp_250_reg_9344 <= tmp_250_fu_4961_p2;
        tmp_514_reg_9350 <= tmp_514_fu_4998_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_253_reg_9365 <= tmp_253_fu_5092_p2;
        tmp_256_reg_9371 <= tmp_256_fu_5102_p2;
        tmp_259_reg_9377 <= tmp_259_fu_5112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_262_reg_9393 <= tmp_262_fu_5206_p2;
        tmp_265_reg_9399 <= tmp_265_fu_5216_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_273_reg_10432 <= tmp_273_fu_8156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_309_cast1_reg_9795[1 : 0] <= tmp_309_cast1_fu_6386_p1[1 : 0];
        tmp_309_cast2_reg_9800[1 : 0] <= tmp_309_cast2_fu_6390_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'd0 == exitcond10_fu_6323_p2))) begin
        tmp_309_cast_reg_9739[1 : 0] <= tmp_309_cast_fu_6335_p1[1 : 0];
        tmp_597_cast_reg_9761[14 : 0] <= tmp_597_cast_fu_6344_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd0 == exitcond11_fu_5378_p2))) begin
        tmp_310_reg_9448[9 : 3] <= tmp_310_fu_5422_p2[9 : 3];
        tmp_311_reg_9460 <= tmp_311_fu_5438_p2;
        tmp_314_reg_9471 <= tmp_314_fu_5501_p2;
        tmp_438_cast_reg_9454[11 : 3] <= tmp_438_cast_fu_5428_p1[11 : 3];
        tmp_527_reg_9466 <= tmp_527_fu_5490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_315_reg_9487 <= tmp_315_fu_5595_p2;
        tmp_316_reg_9493 <= tmp_316_fu_5605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_317_reg_9527 <= tmp_317_fu_5711_p2;
        tmp_318_reg_9533 <= tmp_318_fu_5722_p2;
        tmp_438_cast1_reg_9499[12 : 3] <= tmp_438_cast1_fu_5610_p1[12 : 3];
        tmp_614_cast_reg_9506 <= tmp_614_cast_fu_5616_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_319_reg_9549 <= tmp_319_fu_5820_p2;
        tmp_320_reg_9555 <= tmp_320_fu_5830_p2;
        tmp_321_reg_9561 <= tmp_321_fu_5840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (1'd0 == exitcond9_fu_8445_p2))) begin
        tmp_322_reg_10549[7 : 3] <= tmp_322_fu_8485_p2[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        tmp_326_reg_10586[31 : 0] <= tmp_326_fu_8548_p1[31 : 0];
        tmp_391_cast_reg_10572[11 : 3] <= tmp_391_cast_fu_8537_p1[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (1'd0 == exitcond13_fu_6394_p2))) begin
        tmp_353_reg_9813[6 : 3] <= tmp_353_fu_6434_p2[6 : 3];
        tmp_356_reg_9821 <= tmp_356_fu_6440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_376_reg_9905 <= tmp_376_fu_6869_p2;
        tmp_572_reg_9865 <= tmp_572_fu_6623_p2;
        tmp_580_reg_9875 <= tmp_580_fu_6696_p2;
        tmp_585_reg_9881 <= tmp_585_fu_6738_p2;
        tmp_590_reg_9887 <= tmp_590_fu_6776_p2;
        tmp_595_reg_9893 <= tmp_595_fu_6814_p2;
        tmp_601_reg_9899 <= tmp_601_fu_6859_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_378_reg_9939 <= tmp_378_fu_6977_p2;
        tmp_607_reg_9933 <= tmp_607_fu_6966_p2;
        tmp_617_reg_9945 <= tmp_617_fu_7015_p2;
        tmp_665_cast_reg_9911[9 : 0] <= tmp_665_cast_fu_6877_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'd0 == exitcond12_fu_7219_p2))) begin
        tmp_382_reg_10009[7 : 3] <= tmp_382_fu_7259_p2[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_391_cast_cast1_reg_10557[8 : 3] <= tmp_391_cast_cast1_fu_8491_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond1_fu_5982_p2))) begin
        tmp_402_reg_9637 <= tmp_402_fu_6038_p2;
        tmp_404_reg_9642 <= tmp_404_fu_6066_p2;
        tmp_406_reg_9647 <= tmp_406_fu_6094_p2;
        tmp_467_cast_reg_9632 <= tmp_467_cast_fu_6012_p1;
        tmp_476_cast_reg_9652 <= tmp_476_cast_fu_6140_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_414_reg_9045 <= tmp_414_fu_4171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_416_reg_9060 <= tmp_416_fu_4194_p2;
        tmp_417_reg_9065 <= tmp_417_fu_4199_p2;
        tmp_418_reg_9070 <= tmp_418_fu_4204_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_460_reg_9287 <= tmp_460_fu_4779_p2;
        tmp_466_reg_9292 <= tmp_466_fu_4824_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_506_reg_9415 <= tmp_506_fu_5353_p2;
        tmp_510_reg_9420 <= tmp_510_fu_5361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_561_reg_9577 <= tmp_561_fu_5949_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_603_reg_9961 <= tmp_603_fu_7100_p2;
        tmp_609_reg_9966 <= tmp_609_fu_7121_p2;
        tmp_614_reg_9971 <= tmp_614_fu_7177_p2;
        tmp_619_reg_9976 <= tmp_619_fu_7198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_631_reg_10056 <= tmp_631_fu_7454_p2;
        tmp_634_reg_10061 <= tmp_634_fu_7491_p2;
        tmp_639_reg_10067 <= tmp_639_fu_7528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (1'd0 == exitcond1_i_fu_8815_p2))) begin
        tmp_723_cast_reg_10702[12 : 9] <= tmp_723_cast_fu_8839_p1[12 : 9];
        tmp_i_reg_10696[3 : 0] <= tmp_i_fu_8827_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_738_cast_reg_10098[10 : 0] <= tmp_738_cast_fu_7664_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        w_22_reg_9660 <= w_22_fu_6150_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_10_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_10_address0 = grp_DownsampleUnit0_fu_3317_conv3r_weight_address0;
    end else begin
        ShuffleConvs_0_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_10_ce0 = grp_DownsampleUnit0_fu_3317_conv3r_weight_ce0;
    end else begin
        ShuffleConvs_0_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_1_address0 = grp_DownsampleUnit0_fu_3317_conv1l_bias_address0;
    end else begin
        ShuffleConvs_0_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_1_ce0 = grp_DownsampleUnit0_fu_3317_conv1l_bias_ce0;
    end else begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_3_address0 = grp_DownsampleUnit0_fu_3317_conv1r_bias_address0;
    end else begin
        ShuffleConvs_0_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_3_ce0 = grp_DownsampleUnit0_fu_3317_conv1r_bias_ce0;
    end else begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_0_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_4_address0 = grp_DownsampleUnit0_fu_3317_conv2l_bias_address0;
    end else begin
        ShuffleConvs_0_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_4_ce0 = grp_DownsampleUnit0_fu_3317_conv2l_bias_ce0;
    end else begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_5_address0 = grp_DownsampleUnit0_fu_3317_conv2r_bias_address0;
    end else begin
        ShuffleConvs_0_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_5_ce0 = grp_DownsampleUnit0_fu_3317_conv2r_bias_ce0;
    end else begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_0_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_597_cast_reg_9761;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_6_address0 = grp_DownsampleUnit0_fu_3317_conv1l_weight_address0;
    end else begin
        ShuffleConvs_0_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_6_ce0 = grp_DownsampleUnit0_fu_3317_conv1l_weight_ce0;
    end else begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_7_address0 = grp_DownsampleUnit0_fu_3317_conv1r_weight_address0;
    end else begin
        ShuffleConvs_0_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_7_ce0 = grp_DownsampleUnit0_fu_3317_conv1r_weight_ce0;
    end else begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ShuffleConvs_0_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Downs_8_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_8_address0 = grp_DownsampleUnit0_fu_3317_conv2l_weight_address0;
    end else begin
        ShuffleConvs_0_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Downs_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_8_ce0 = grp_DownsampleUnit0_fu_3317_conv2l_weight_ce0;
    end else begin
        ShuffleConvs_0_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_9_address0 = tmp_597_cast_reg_9761;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_9_address0 = grp_DownsampleUnit0_fu_3317_conv2r_weight_address0;
    end else begin
        ShuffleConvs_0_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_9_ce0 = grp_DownsampleUnit0_fu_3317_conv2r_weight_ce0;
    end else begin
        ShuffleConvs_0_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_0_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_address0 = grp_DownsampleUnit0_fu_3317_conv3r_bias_address0;
    end else begin
        ShuffleConvs_0_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        ShuffleConvs_0_Downs_ce0 = grp_DownsampleUnit0_fu_3317_conv3r_bias_ce0;
    end else begin
        ShuffleConvs_0_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_0_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_11_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_11_address0 = grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_11_ce0 = grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_13_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_13_address0 = grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_13_ce0 = grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Shuff_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_0_Shuff_15_address0 = tmp_597_cast_reg_9761;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_15_address0 = grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_0_Shuff_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_15_ce0 = grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_0_Shuff_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_17_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_17_address0 = grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_17_ce0 = grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ShuffleConvs_0_Shuff_18_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_18_address0 = grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ShuffleConvs_0_Shuff_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_18_ce0 = grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ShuffleConvs_0_Shuff_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Shuff_19_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_19_address0 = grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Shuff_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_19_ce0 = grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_0_Shuff_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_1_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_1_address0 = grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_1_ce0 = grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_20_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_20_address0 = grp_ShuffleUnit0_fu_3401_conv2_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_20_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_20_ce0 = grp_ShuffleUnit0_fu_3401_conv2_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_21_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_21_address0 = grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_21_ce0 = grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ShuffleConvs_0_Shuff_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_22_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_22_address0 = grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_22_ce0 = grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ShuffleConvs_0_Shuff_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_3_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_3_address0 = grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_3_ce0 = grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_4_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_4_address0 = grp_ShuffleUnit0_fu_3401_conv1_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_4_ce0 = grp_ShuffleUnit0_fu_3401_conv1_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ShuffleConvs_0_Shuff_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Shuff_5_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_5_address0 = grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Shuff_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_5_ce0 = grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ShuffleConvs_0_Shuff_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_6_address0 = tmp_597_cast_reg_9761;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_6_address0 = grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_6_ce0 = grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_7_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_7_address0 = grp_ShuffleUnit0_fu_3401_conv3_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        ShuffleConvs_0_Shuff_7_ce0 = grp_ShuffleUnit0_fu_3401_conv3_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_8_address0 = tmp_477_cast_reg_9007;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_8_address0 = grp_ShuffleUnit0_fu_3401_conv1_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_8_ce0 = grp_ShuffleUnit0_fu_3401_conv1_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_0_Shuff_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_9_address0 = tmp_597_cast_reg_9761;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_9_address0 = grp_ShuffleUnit0_fu_3401_conv2_weight_address0;
    end else begin
        ShuffleConvs_0_Shuff_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        ShuffleConvs_0_Shuff_9_ce0 = grp_ShuffleUnit0_fu_3401_conv2_weight_ce0;
    end else begin
        ShuffleConvs_0_Shuff_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_0_Shuff_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_address0 = grp_ShuffleUnit0_fu_3401_conv3_bias_address0;
    end else begin
        ShuffleConvs_0_Shuff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        ShuffleConvs_0_Shuff_ce0 = grp_ShuffleUnit0_fu_3401_conv3_bias_ce0;
    end else begin
        ShuffleConvs_0_Shuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ShuffleConvs_0_Shuff_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Shuff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_10_address0 = tmp_514_cast_fu_4530_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_10_address0 = grp_DownsampleUnit1_fu_3345_conv3r_weight_address0;
    end else begin
        ShuffleConvs_1_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_10_ce0 = grp_DownsampleUnit1_fu_3345_conv3r_weight_ce0;
    end else begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_1_address0 = grp_DownsampleUnit1_fu_3345_conv1l_bias_address0;
    end else begin
        ShuffleConvs_1_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_1_ce0 = grp_DownsampleUnit1_fu_3345_conv1l_bias_ce0;
    end else begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_243_fu_8004_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_3_address0 = grp_DownsampleUnit1_fu_3345_conv1r_bias_address0;
    end else begin
        ShuffleConvs_1_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_3_ce0 = grp_DownsampleUnit1_fu_3345_conv1r_bias_ce0;
    end else begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_4_address0 = grp_DownsampleUnit1_fu_3345_conv2l_bias_address0;
    end else begin
        ShuffleConvs_1_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_4_ce0 = grp_DownsampleUnit1_fu_3345_conv2l_bias_ce0;
    end else begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_243_fu_8004_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_5_address0 = grp_DownsampleUnit1_fu_3345_conv2r_bias_address0;
    end else begin
        ShuffleConvs_1_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_5_ce0 = grp_DownsampleUnit1_fu_3345_conv2r_bias_ce0;
    end else begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_665_cast_fu_6877_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_6_address0 = grp_DownsampleUnit1_fu_3345_conv1l_weight_address0;
    end else begin
        ShuffleConvs_1_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_6_ce0 = grp_DownsampleUnit1_fu_3345_conv1l_weight_ce0;
    end else begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_514_cast_fu_4530_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_7_address0 = grp_DownsampleUnit1_fu_3345_conv1r_weight_address0;
    end else begin
        ShuffleConvs_1_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_7_ce0 = grp_DownsampleUnit1_fu_3345_conv1r_weight_ce0;
    end else begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Downs_8_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_8_address0 = grp_DownsampleUnit1_fu_3345_conv2l_weight_address0;
    end else begin
        ShuffleConvs_1_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_8_ce0 = grp_DownsampleUnit1_fu_3345_conv2l_weight_ce0;
    end else begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_9_address0 = tmp_665_cast_fu_6877_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_9_address0 = grp_DownsampleUnit1_fu_3345_conv2r_weight_address0;
    end else begin
        ShuffleConvs_1_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_9_ce0 = grp_DownsampleUnit1_fu_3345_conv2r_weight_ce0;
    end else begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_address0 = tmp_243_fu_8004_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_address0 = grp_DownsampleUnit1_fu_3345_conv3r_bias_address0;
    end else begin
        ShuffleConvs_1_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        ShuffleConvs_1_Downs_ce0 = grp_DownsampleUnit1_fu_3345_conv3r_bias_ce0;
    end else begin
        ShuffleConvs_1_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ShuffleConvs_1_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_11_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_11_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_11_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_13_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_13_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_13_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Shuff_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_15_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_15_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_15_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_17_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_17_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_17_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_19_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_19_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_19_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Shuff_1_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_1_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Shuff_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_1_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_1_Shuff_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_21_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_21_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_21_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Shuff_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_23_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_23_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_23_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Shuff_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_25_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_25_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_25_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_25_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_25_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_27_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_27_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_27_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_27_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Shuff_27_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_29_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_29_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_29_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_29_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_29_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_31_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_31_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_31_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_31_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_31_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_33_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_33_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_33_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_33_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ShuffleConvs_1_Shuff_33_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_35_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_35_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_35_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_35_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Shuff_35_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_37_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_37_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_37_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_37_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_37_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_39_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_39_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_39_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_39_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_39_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_3_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_3_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_3_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_41_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_41_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_41_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_41_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ShuffleConvs_1_Shuff_41_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_43_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_43_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_43_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_43_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_43_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_45_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_45_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_45_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_45_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_45_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_47_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_47_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_47_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_47_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ShuffleConvs_1_Shuff_47_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_49_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_49_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_49_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_49_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_49_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Shuff_49_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ShuffleConvs_1_Shuff_50_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_50_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_50_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ShuffleConvs_1_Shuff_50_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_50_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ShuffleConvs_1_Shuff_50_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_51_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_51_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_51_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_51_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_51_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_51_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_52_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_52_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_52_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_52_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_52_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_1_Shuff_52_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_53_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_53_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_53_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_53_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_53_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_53_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_54_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_54_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_54_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_54_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_54_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ShuffleConvs_1_Shuff_54_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_55_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_55_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_55_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_55_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_55_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ShuffleConvs_1_Shuff_55_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_56_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_56_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_56_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_56_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_56_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_56_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_57_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_57_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_57_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_57_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_57_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ShuffleConvs_1_Shuff_57_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_58_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_58_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_58_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_58_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_58_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_58_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_59_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_59_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_59_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_59_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_59_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ShuffleConvs_1_Shuff_59_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_5_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_5_address0 = grp_ShuffleUnit1_fu_3437_conv3_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        ShuffleConvs_1_Shuff_5_ce0 = grp_ShuffleUnit1_fu_3437_conv3_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_60_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_60_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_60_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_60_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        ShuffleConvs_1_Shuff_60_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_60_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_60_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_61_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_61_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_61_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_61_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_61_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ShuffleConvs_1_Shuff_61_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_61_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_62_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_62_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_62_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_62_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_62_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_62_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_62_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_63_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_63_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_63_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_63_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        ShuffleConvs_1_Shuff_63_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ShuffleConvs_1_Shuff_63_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_63_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_64_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_64_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_64_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_64_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_64_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_64_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_64_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_65_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_65_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_65_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_65_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_65_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ShuffleConvs_1_Shuff_65_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_65_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_66_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_66_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_66_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_66_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_66_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_66_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_66_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_67_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_67_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_67_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_67_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        ShuffleConvs_1_Shuff_67_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_67_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_67_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_68_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_68_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_68_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_68_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_68_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ShuffleConvs_1_Shuff_68_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_68_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_69_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_69_address0 = grp_ShuffleUnit1_fu_3437_conv2_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_69_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_69_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_69_ce0 = grp_ShuffleUnit1_fu_3437_conv2_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_69_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_69_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_70_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_70_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_70_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_70_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        ShuffleConvs_1_Shuff_70_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ShuffleConvs_1_Shuff_70_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_70_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_71_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_71_address0 = grp_ShuffleUnit1_fu_3437_conv1_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_71_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_71_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        ShuffleConvs_1_Shuff_71_ce0 = grp_ShuffleUnit1_fu_3437_conv1_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        ShuffleConvs_1_Shuff_71_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_71_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_7_address0 = tmp_514_cast_reg_9228;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_7_address0 = grp_ShuffleUnit1_fu_3437_conv1_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_7_ce0 = grp_ShuffleUnit1_fu_3437_conv1_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Shuff_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_9_address0 = tmp_665_cast_reg_9911;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_9_address0 = grp_ShuffleUnit1_fu_3437_conv2_weight_address0;
    end else begin
        ShuffleConvs_1_Shuff_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        ShuffleConvs_1_Shuff_9_ce0 = grp_ShuffleUnit1_fu_3437_conv2_weight_ce0;
    end else begin
        ShuffleConvs_1_Shuff_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_1_Shuff_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_address0 = tmp_243_reg_10357;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_address0 = grp_ShuffleUnit1_fu_3437_conv3_bias_address0;
    end else begin
        ShuffleConvs_1_Shuff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        ShuffleConvs_1_Shuff_ce0 = grp_ShuffleUnit1_fu_3437_conv3_bias_ce0;
    end else begin
        ShuffleConvs_1_Shuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ShuffleConvs_1_Shuff_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Shuff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_10_address0 = tmp_614_cast_fu_5616_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_10_address0 = grp_DownsampleUnit2_fu_3373_conv3r_weight_address0;
    end else begin
        ShuffleConvs_2_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_10_ce0 = grp_DownsampleUnit2_fu_3373_conv3r_weight_ce0;
    end else begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_1_address0 = grp_DownsampleUnit2_fu_3373_conv1l_bias_address0;
    end else begin
        ShuffleConvs_2_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_1_ce0 = grp_DownsampleUnit2_fu_3373_conv1l_bias_ce0;
    end else begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_326_fu_8548_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_3_address0 = grp_DownsampleUnit2_fu_3373_conv1r_bias_address0;
    end else begin
        ShuffleConvs_2_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_3_ce0 = grp_DownsampleUnit2_fu_3373_conv1r_bias_ce0;
    end else begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_4_address0 = grp_DownsampleUnit2_fu_3373_conv2l_bias_address0;
    end else begin
        ShuffleConvs_2_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_4_ce0 = grp_DownsampleUnit2_fu_3373_conv2l_bias_ce0;
    end else begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_326_fu_8548_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_5_address0 = grp_DownsampleUnit2_fu_3373_conv2r_bias_address0;
    end else begin
        ShuffleConvs_2_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_5_ce0 = grp_DownsampleUnit2_fu_3373_conv2r_bias_ce0;
    end else begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ShuffleConvs_2_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_738_cast_fu_7664_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_6_address0 = grp_DownsampleUnit2_fu_3373_conv1l_weight_address0;
    end else begin
        ShuffleConvs_2_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_6_ce0 = grp_DownsampleUnit2_fu_3373_conv1l_weight_ce0;
    end else begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_614_cast_fu_5616_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_7_address0 = grp_DownsampleUnit2_fu_3373_conv1r_weight_address0;
    end else begin
        ShuffleConvs_2_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_7_ce0 = grp_DownsampleUnit2_fu_3373_conv1r_weight_ce0;
    end else begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Downs_8_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_8_address0 = grp_DownsampleUnit2_fu_3373_conv2l_weight_address0;
    end else begin
        ShuffleConvs_2_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_8_ce0 = grp_DownsampleUnit2_fu_3373_conv2l_weight_ce0;
    end else begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_9_address0 = tmp_738_cast_fu_7664_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_9_address0 = grp_DownsampleUnit2_fu_3373_conv2r_weight_address0;
    end else begin
        ShuffleConvs_2_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_9_ce0 = grp_DownsampleUnit2_fu_3373_conv2r_weight_ce0;
    end else begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_address0 = grp_DownsampleUnit2_fu_3373_conv3r_bias_address0;
    end else begin
        ShuffleConvs_2_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        ShuffleConvs_2_Downs_ce0 = grp_DownsampleUnit2_fu_3373_conv3r_bias_ce0;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ShuffleConvs_2_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_11_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_11_address0 = grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_11_ce0 = grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_13_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_13_address0 = grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_13_ce0 = grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Shuff_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_15_address0 = tmp_738_cast_reg_10098;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_15_address0 = grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_15_ce0 = grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_17_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_17_address0 = grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_17_ce0 = grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_2_Shuff_18_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_18_address0 = grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_2_Shuff_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_18_ce0 = grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_2_Shuff_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Shuff_19_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_19_address0 = grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Shuff_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_19_ce0 = grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ShuffleConvs_2_Shuff_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_1_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_1_address0 = grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_1_ce0 = grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_20_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_20_address0 = grp_ShuffleUnit2_fu_3513_conv2_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_20_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_20_ce0 = grp_ShuffleUnit2_fu_3513_conv2_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_21_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_21_address0 = grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_21_ce0 = grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        ShuffleConvs_2_Shuff_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_22_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_22_address0 = grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_22_ce0 = grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ShuffleConvs_2_Shuff_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_3_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_3_address0 = grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_3_ce0 = grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_4_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_4_address0 = grp_ShuffleUnit2_fu_3513_conv1_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_4_ce0 = grp_ShuffleUnit2_fu_3513_conv1_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        ShuffleConvs_2_Shuff_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Shuff_5_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_5_address0 = grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Shuff_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_5_ce0 = grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ShuffleConvs_2_Shuff_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Shuff_6_address0 = tmp_738_cast_fu_7664_p1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_6_address0 = grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Shuff_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_6_ce0 = grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_2_Shuff_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_7_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_7_address0 = grp_ShuffleUnit2_fu_3513_conv3_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        ShuffleConvs_2_Shuff_7_ce0 = grp_ShuffleUnit2_fu_3513_conv3_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_8_address0 = tmp_614_cast_reg_9506;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_8_address0 = grp_ShuffleUnit2_fu_3513_conv1_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_8_ce0 = grp_ShuffleUnit2_fu_3513_conv1_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Shuff_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_9_address0 = tmp_738_cast_reg_10098;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_9_address0 = grp_ShuffleUnit2_fu_3513_conv2_weight_address0;
    end else begin
        ShuffleConvs_2_Shuff_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        ShuffleConvs_2_Shuff_9_ce0 = grp_ShuffleUnit2_fu_3513_conv2_weight_ce0;
    end else begin
        ShuffleConvs_2_Shuff_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Shuff_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_address0 = tmp_326_reg_10586;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_address0 = grp_ShuffleUnit2_fu_3513_conv3_bias_address0;
    end else begin
        ShuffleConvs_2_Shuff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        ShuffleConvs_2_Shuff_ce0 = grp_ShuffleUnit2_fu_3513_conv3_bias_ce0;
    end else begin
        ShuffleConvs_2_Shuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ShuffleConvs_2_Shuff_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Shuff_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state126) & (1'd1 == exitcond1_i_fu_8815_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state126) & (1'd1 == exitcond1_i_fu_8815_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        avgpool_output_address0 = tmp_i_419_fu_8855_p1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        avgpool_output_address0 = grp_avgpool_fu_3573_output_r_address0;
    end else begin
        avgpool_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        avgpool_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        avgpool_output_ce0 = grp_avgpool_fu_3573_output_r_ce0;
    end else begin
        avgpool_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        avgpool_output_we0 = grp_avgpool_fu_3573_output_r_we0;
    end else begin
        avgpool_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        bias_address0 = tmp_232_fu_8769_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        bias_address0 = tmp_350_fu_8723_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        bias_address0 = tmp_346_fu_8693_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        bias_address0 = tmp_342_fu_8663_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        bias_address0 = tmp_338_fu_8633_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        bias_address0 = tmp_334_fu_8603_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bias_address0 = tmp_330_fu_8572_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bias_address0 = tmp_324_fu_8512_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        bias_address0 = tmp_306_fu_8421_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        bias_address0 = tmp_302_fu_8383_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        bias_address0 = tmp_298_fu_8349_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        bias_address0 = tmp_294_fu_8319_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        bias_address0 = tmp_290_fu_8289_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        bias_address0 = tmp_286_fu_8259_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        bias_address0 = tmp_282_fu_8229_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        bias_address0 = tmp_278_fu_8198_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        bias_address0 = tmp_274_fu_8164_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        bias_address0 = tmp_270_fu_8127_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        bias_address0 = tmp_264_fu_8093_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        bias_address0 = tmp_258_fu_8063_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        bias_address0 = tmp_252_fu_8022_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        bias_address0 = tmp_246_fu_7968_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bias_address0 = tmp_217_fu_7880_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        bias_address0 = tmp_213_fu_7860_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bias_address0 = tmp_209_fu_7837_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        bias_address0 = tmp_205_fu_7813_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        bias_address0 = tmp_201_fu_7786_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        bias_address0 = tmp_197_fu_7766_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        bias_address0 = tmp_193_fu_7739_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        bias_address0 = tmp_189_fu_7718_p1;
    end else begin
        bias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        bias_address1 = tmp_236_fu_8805_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        bias_address1 = tmp_352_fu_8738_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        bias_address1 = tmp_348_fu_8708_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        bias_address1 = tmp_344_fu_8678_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        bias_address1 = tmp_340_fu_8648_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        bias_address1 = tmp_336_fu_8618_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bias_address1 = tmp_332_fu_8588_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        bias_address1 = tmp_328_fu_8532_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        bias_address1 = tmp_308_fu_8440_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        bias_address1 = tmp_304_fu_8402_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        bias_address1 = tmp_300_fu_8364_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        bias_address1 = tmp_296_fu_8334_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        bias_address1 = tmp_292_fu_8304_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        bias_address1 = tmp_288_fu_8274_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        bias_address1 = tmp_284_fu_8244_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        bias_address1 = tmp_280_fu_8214_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        bias_address1 = tmp_276_fu_8172_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        bias_address1 = tmp_272_fu_8146_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        bias_address1 = tmp_267_fu_8108_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        bias_address1 = tmp_261_fu_8078_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        bias_address1 = tmp_255_fu_8038_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        bias_address1 = tmp_249_fu_7988_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        bias_address1 = tmp_241_fu_7945_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        bias_address1 = tmp_215_fu_7870_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        bias_address1 = tmp_211_fu_7847_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        bias_address1 = tmp_207_fu_7827_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        bias_address1 = tmp_203_fu_7796_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        bias_address1 = tmp_199_fu_7776_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        bias_address1 = tmp_195_fu_7749_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        bias_address1 = tmp_191_fu_7729_p1;
    end else begin
        bias_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state83))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state85))) begin
        bias_ce1 = 1'b1;
    end else begin
        bias_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_bias_address0 = tmp_189_reg_10201;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        conv1_bias_address0 = grp_conv1_fu_3549_bias_address0;
    end else begin
        conv1_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_bias_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        conv1_bias_ce0 = grp_conv1_fu_3549_bias_ce0;
    end else begin
        conv1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        conv1_bias_we0 = 1'b1;
    end else begin
        conv1_bias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        conv1_output_address0 = grp_conv1_fu_3549_conv1_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        conv1_output_address0 = grp_DownsampleUnit0_fu_3317_input_r_address0;
    end else begin
        conv1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        conv1_output_ce0 = grp_conv1_fu_3549_conv1_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        conv1_output_ce0 = grp_DownsampleUnit0_fu_3317_input_r_ce0;
    end else begin
        conv1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        conv1_output_we0 = grp_conv1_fu_3549_conv1_output_we0;
    end else begin
        conv1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        conv_last_bias_address0 = tmp_233_fu_8774_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        conv_last_bias_address0 = grp_conv_last_fu_3561_bias_address0;
    end else begin
        conv_last_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        conv_last_bias_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        conv_last_bias_ce0 = grp_conv_last_fu_3561_bias_ce0;
    end else begin
        conv_last_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        conv_last_bias_we0 = 1'b1;
    end else begin
        conv_last_bias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        conv_last_output_address0 = grp_avgpool_fu_3573_conv_last_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        conv_last_output_address0 = grp_conv_last_fu_3561_output_r_address0;
    end else begin
        conv_last_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        conv_last_output_ce0 = grp_avgpool_fu_3573_conv_last_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        conv_last_output_ce0 = grp_conv_last_fu_3561_output_r_ce0;
    end else begin
        conv_last_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        conv_last_output_we0 = grp_conv_last_fu_3561_output_r_we0;
    end else begin
        conv_last_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        downsampleunit0_outp_address0 = grp_ShuffleUnit0_fu_3401_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        downsampleunit0_outp_address0 = grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_address0;
    end else begin
        downsampleunit0_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        downsampleunit0_outp_ce0 = grp_ShuffleUnit0_fu_3401_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        downsampleunit0_outp_ce0 = grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_ce0;
    end else begin
        downsampleunit0_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        downsampleunit0_outp_ce1 = grp_ShuffleUnit0_fu_3401_input_r_ce1;
    end else begin
        downsampleunit0_outp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        downsampleunit0_outp_we0 = grp_DownsampleUnit0_fu_3317_downsampleunit0_outp_we0;
    end else begin
        downsampleunit0_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        downsampleunit1_outp_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        downsampleunit1_outp_address0 = grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_address0;
    end else begin
        downsampleunit1_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        downsampleunit1_outp_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        downsampleunit1_outp_ce0 = grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_ce0;
    end else begin
        downsampleunit1_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        downsampleunit1_outp_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        downsampleunit1_outp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        downsampleunit1_outp_we0 = grp_DownsampleUnit1_fu_3345_downsampleunit1_outp_we0;
    end else begin
        downsampleunit1_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        downsampleunit2_outp_address0 = grp_ShuffleUnit2_fu_3513_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        downsampleunit2_outp_address0 = grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_address0;
    end else begin
        downsampleunit2_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        downsampleunit2_outp_ce0 = grp_ShuffleUnit2_fu_3513_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        downsampleunit2_outp_ce0 = grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_ce0;
    end else begin
        downsampleunit2_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        downsampleunit2_outp_ce1 = grp_ShuffleUnit2_fu_3513_input_r_ce1;
    end else begin
        downsampleunit2_outp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        downsampleunit2_outp_we0 = grp_DownsampleUnit2_fu_3373_downsampleunit2_outp_we0;
    end else begin
        downsampleunit2_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        fc_bias_address0 = tmp_i_reg_10696;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        fc_bias_address0 = tmp_237_fu_8810_p1;
    end else begin
        fc_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state86))) begin
        fc_bias_ce0 = 1'b1;
    end else begin
        fc_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        fc_bias_we0 = 1'b1;
    end else begin
        fc_bias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        fc_output_ce0 = 1'b1;
    end else begin
        fc_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        fc_output_we0 = 1'b1;
    end else begin
        fc_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        fc_weight_ce0 = 1'b1;
    end else begin
        fc_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv1_bias_q0 = ShuffleConvs_0_Shuff_4_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv1_bias_q0 = ShuffleConvs_0_Shuff_22_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv1_bias_q0 = ShuffleConvs_0_Shuff_19_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv1_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv1_weight_q0 = ShuffleConvs_0_Shuff_13_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv1_weight_q0 = ShuffleConvs_0_Shuff_8_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv1_weight_q0 = ShuffleConvs_0_Shuff_5_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv1_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv2_bias_q0 = ShuffleConvs_0_Shuff_17_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv2_bias_q0 = ShuffleConvs_0_Shuff_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv2_bias_q0 = ShuffleConvs_0_Shuff_20_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv2_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv2_weight_q0 = ShuffleConvs_0_Shuff_15_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv2_weight_q0 = ShuffleConvs_0_Shuff_9_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv2_weight_q0 = ShuffleConvs_0_Shuff_6_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv2_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv3_bias_q0 = ShuffleConvs_0_Shuff_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv3_bias_q0 = ShuffleConvs_0_Shuff_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv3_bias_q0 = ShuffleConvs_0_Shuff_21_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv3_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_conv3_weight_q0 = ShuffleConvs_0_Shuff_18_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_conv3_weight_q0 = ShuffleConvs_0_Shuff_11_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_conv3_weight_q0 = ShuffleConvs_0_Shuff_7_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_conv3_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q0 = shuffleunit0_1_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q0 = shuffleunit0_0_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q0 = downsampleunit0_outp_q0;
    end else begin
        grp_ShuffleUnit0_fu_3401_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q1 = shuffleunit0_1_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q1 = shuffleunit0_0_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_ShuffleUnit0_fu_3401_input_r_q1 = downsampleunit0_outp_q1;
    end else begin
        grp_ShuffleUnit0_fu_3401_input_r_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_55_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_71_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_68_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_64_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_61_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_58_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_54_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = ShuffleConvs_1_Shuff_51_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv1_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_47_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_41_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_33_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_27_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_21_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_13_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = ShuffleConvs_1_Shuff_1_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv1_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_66_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_17_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_69_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_65_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_62_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_59_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_56_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = ShuffleConvs_1_Shuff_52_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv2_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_49_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_43_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_35_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_29_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_23_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_15_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_9_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = ShuffleConvs_1_Shuff_3_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv2_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_39_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_70_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_67_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_63_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_60_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_57_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = ShuffleConvs_1_Shuff_53_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv3_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_50_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_45_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_37_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_31_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_25_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_19_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_11_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = ShuffleConvs_1_Shuff_5_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_conv3_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_6_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_5_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_4_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_3_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_2_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_1_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = shuffleunit1_0_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = downsampleunit1_outp_q0;
    end else begin
        grp_ShuffleUnit1_fu_3437_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_6_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_5_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_4_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_3_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_2_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_1_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = shuffleunit1_0_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = downsampleunit1_outp_q1;
    end else begin
        grp_ShuffleUnit1_fu_3437_input_r_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv1_bias_q0 = ShuffleConvs_2_Shuff_4_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv1_bias_q0 = ShuffleConvs_2_Shuff_22_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv1_bias_q0 = ShuffleConvs_2_Shuff_19_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv1_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv1_weight_q0 = ShuffleConvs_2_Shuff_13_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv1_weight_q0 = ShuffleConvs_2_Shuff_8_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv1_weight_q0 = ShuffleConvs_2_Shuff_5_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv1_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv2_bias_q0 = ShuffleConvs_2_Shuff_17_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv2_bias_q0 = ShuffleConvs_2_Shuff_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv2_bias_q0 = ShuffleConvs_2_Shuff_20_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv2_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv2_weight_q0 = ShuffleConvs_2_Shuff_15_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv2_weight_q0 = ShuffleConvs_2_Shuff_9_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv2_weight_q0 = ShuffleConvs_2_Shuff_6_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv2_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv3_bias_q0 = ShuffleConvs_2_Shuff_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv3_bias_q0 = ShuffleConvs_2_Shuff_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv3_bias_q0 = ShuffleConvs_2_Shuff_21_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv3_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_conv3_weight_q0 = ShuffleConvs_2_Shuff_18_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_conv3_weight_q0 = ShuffleConvs_2_Shuff_11_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_conv3_weight_q0 = ShuffleConvs_2_Shuff_7_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_conv3_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q0 = shuffleunit2_1_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q0 = shuffleunit2_0_outpu_q0;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q0 = downsampleunit2_outp_q0;
    end else begin
        grp_ShuffleUnit2_fu_3513_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q1 = shuffleunit2_1_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q1 = shuffleunit2_0_outpu_q1;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_ShuffleUnit2_fu_3513_input_r_q1 = downsampleunit2_outp_q1;
    end else begin
        grp_ShuffleUnit2_fu_3513_input_r_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_3581_p1 = fc_bias_load_reg_10750;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_3581_p1 = tmp_130_i_reg_10740;
    end else begin
        grp_fu_3581_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        shuffle_conv_1x1_address0 = tmp_648_cast_fu_5954_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        shuffle_conv_1x1_address0 = tmp_640_cast_fu_5878_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        shuffle_conv_1x1_address0 = tmp_632_cast_fu_5772_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        shuffle_conv_1x1_address0 = tmp_622_cast_fu_5658_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        shuffle_conv_1x1_address0 = tmp_607_cast_fu_5543_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        shuffle_conv_1x1_address0 = tmp_590_cast_fu_5370_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        shuffle_conv_1x1_address0 = tmp_578_cast_fu_5308_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shuffle_conv_1x1_address0 = tmp_568_cast_fu_5196_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        shuffle_conv_1x1_address0 = tmp_560_cast_fu_5082_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        shuffle_conv_1x1_address0 = tmp_552_cast_fu_4941_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        shuffle_conv_1x1_address0 = tmp_544_cast_fu_4836_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        shuffle_conv_1x1_address0 = tmp_534_cast_fu_4730_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        shuffle_conv_1x1_address0 = tmp_526_cast_fu_4614_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        shuffle_conv_1x1_address0 = tmp_518_cast_fu_4468_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        shuffle_conv_1x1_address0 = tmp_485_cast_fu_4217_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        shuffle_conv_1x1_address0 = tmp_483_cast_fu_4209_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        shuffle_conv_1x1_address0 = tmp_481_cast_fu_4180_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        shuffle_conv_1x1_address0 = tmp_479_cast_fu_4156_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        shuffle_conv_1x1_address0 = tmp_477_cast_fu_4127_p1;
    end else begin
        shuffle_conv_1x1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        shuffle_conv_1x1_address1 = tmp_644_cast_fu_5916_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        shuffle_conv_1x1_address1 = tmp_636_cast_fu_5810_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        shuffle_conv_1x1_address1 = tmp_626_cast_fu_5700_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        shuffle_conv_1x1_address1 = tmp_618_cast_fu_5585_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        shuffle_conv_1x1_address1 = tmp_594_cast_fu_5374_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        shuffle_conv_1x1_address1 = tmp_584_cast_fu_5366_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        shuffle_conv_1x1_address1 = tmp_572_cast_fu_5258_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        shuffle_conv_1x1_address1 = tmp_564_cast_fu_5154_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        shuffle_conv_1x1_address1 = tmp_556_cast_fu_5040_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        shuffle_conv_1x1_address1 = tmp_548_cast_fu_4899_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        shuffle_conv_1x1_address1 = tmp_538_cast_fu_4832_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        shuffle_conv_1x1_address1 = tmp_530_cast_fu_4688_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        shuffle_conv_1x1_address1 = tmp_522_cast_fu_4572_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        shuffle_conv_1x1_address1 = tmp_506_cast_fu_4426_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        shuffle_conv_1x1_address1 = tmp_484_cast_fu_4213_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        shuffle_conv_1x1_address1 = tmp_482_cast_fu_4189_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        shuffle_conv_1x1_address1 = tmp_480_cast_fu_4166_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        shuffle_conv_1x1_address1 = tmp_478_cast_fu_4137_p1;
    end else begin
        shuffle_conv_1x1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26))) begin
        shuffle_conv_1x1_ce0 = 1'b1;
    end else begin
        shuffle_conv_1x1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25))) begin
        shuffle_conv_1x1_ce1 = 1'b1;
    end else begin
        shuffle_conv_1x1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        shuffle_conv_3x3_address0 = tmp_757_cast_fu_7670_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        shuffle_conv_3x3_address0 = tmp_744_cast_fu_7554_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        shuffle_conv_3x3_address0 = tmp_721_cast_fu_7215_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        shuffle_conv_3x3_address0 = tmp_709_cast_fu_7207_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        shuffle_conv_3x3_address0 = tmp_695_cast_fu_7075_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        shuffle_conv_3x3_address0 = tmp_683_cast_fu_6929_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        shuffle_conv_3x3_address0 = tmp_671_cast_fu_6653_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        shuffle_conv_3x3_address0 = tmp_601_cast_fu_6381_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        shuffle_conv_3x3_address0 = tmp_599_cast_fu_6363_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        shuffle_conv_3x3_address0 = tmp_597_cast_fu_6344_p1;
    end else begin
        shuffle_conv_3x3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        shuffle_conv_3x3_address1 = tmp_763_cast_fu_7674_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        shuffle_conv_3x3_address1 = tmp_750_cast_fu_7580_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        shuffle_conv_3x3_address1 = tmp_731_cast_fu_7437_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        shuffle_conv_3x3_address1 = tmp_715_cast_fu_7211_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        shuffle_conv_3x3_address1 = tmp_702_cast_fu_7203_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        shuffle_conv_3x3_address1 = tmp_689_cast_fu_7045_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        shuffle_conv_3x3_address1 = tmp_677_cast_fu_6903_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        shuffle_conv_3x3_address1 = tmp_658_cast_fu_6606_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        shuffle_conv_3x3_address1 = tmp_600_cast_fu_6372_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        shuffle_conv_3x3_address1 = tmp_598_cast_fu_6354_p1;
    end else begin
        shuffle_conv_3x3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46))) begin
        shuffle_conv_3x3_ce0 = 1'b1;
    end else begin
        shuffle_conv_3x3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46))) begin
        shuffle_conv_3x3_ce1 = 1'b1;
    end else begin
        shuffle_conv_3x3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        shuffleunit0_0_outpu_address0 = grp_ShuffleUnit0_fu_3401_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_0_outpu_address0 = grp_ShuffleUnit0_fu_3401_input_r_address0;
    end else begin
        shuffleunit0_0_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        shuffleunit0_0_outpu_ce0 = grp_ShuffleUnit0_fu_3401_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_0_outpu_ce0 = grp_ShuffleUnit0_fu_3401_input_r_ce0;
    end else begin
        shuffleunit0_0_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_0_outpu_ce1 = grp_ShuffleUnit0_fu_3401_input_r_ce1;
    end else begin
        shuffleunit0_0_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        shuffleunit0_0_outpu_we0 = grp_ShuffleUnit0_fu_3401_output_r_we0;
    end else begin
        shuffleunit0_0_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_1_outpu_address0 = grp_ShuffleUnit0_fu_3401_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_1_outpu_address0 = grp_ShuffleUnit0_fu_3401_input_r_address0;
    end else begin
        shuffleunit0_1_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_1_outpu_ce0 = grp_ShuffleUnit0_fu_3401_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_1_outpu_ce0 = grp_ShuffleUnit0_fu_3401_input_r_ce0;
    end else begin
        shuffleunit0_1_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_1_outpu_ce1 = grp_ShuffleUnit0_fu_3401_input_r_ce1;
    end else begin
        shuffleunit0_1_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        shuffleunit0_1_outpu_we0 = grp_ShuffleUnit0_fu_3401_output_r_we0;
    end else begin
        shuffleunit0_1_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_2_outpu_address0 = grp_ShuffleUnit0_fu_3401_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        shuffleunit0_2_outpu_address0 = grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_address0;
    end else begin
        shuffleunit0_2_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_2_outpu_ce0 = grp_ShuffleUnit0_fu_3401_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        shuffleunit0_2_outpu_ce0 = grp_DownsampleUnit1_fu_3345_shuffleunit0_2_outpu_ce0;
    end else begin
        shuffleunit0_2_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        shuffleunit0_2_outpu_we0 = grp_ShuffleUnit0_fu_3401_output_r_we0;
    end else begin
        shuffleunit0_2_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        shuffleunit1_0_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_0_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_0_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        shuffleunit1_0_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_0_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_0_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_0_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_0_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        shuffleunit1_0_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_0_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_1_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_1_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_1_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_1_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_1_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_1_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_1_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_1_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        shuffleunit1_1_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_1_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_2_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_2_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_2_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_2_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_2_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_2_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_2_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_2_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        shuffleunit1_2_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_2_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_3_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_3_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_3_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_3_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_3_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_3_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_3_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_3_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        shuffleunit1_3_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_3_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_4_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_4_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_4_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_4_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_4_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_4_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_4_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_4_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        shuffleunit1_4_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_4_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_5_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_5_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_5_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_5_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_5_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_5_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_5_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_5_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        shuffleunit1_5_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_5_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_6_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_6_outpu_address0 = grp_ShuffleUnit1_fu_3437_input_r_address0;
    end else begin
        shuffleunit1_6_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_6_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_6_outpu_ce0 = grp_ShuffleUnit1_fu_3437_input_r_ce0;
    end else begin
        shuffleunit1_6_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_6_outpu_ce1 = grp_ShuffleUnit1_fu_3437_input_r_ce1;
    end else begin
        shuffleunit1_6_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        shuffleunit1_6_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_6_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_7_outpu_address0 = grp_ShuffleUnit1_fu_3437_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        shuffleunit1_7_outpu_address0 = grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_address0;
    end else begin
        shuffleunit1_7_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_7_outpu_ce0 = grp_ShuffleUnit1_fu_3437_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        shuffleunit1_7_outpu_ce0 = grp_DownsampleUnit2_fu_3373_shuffleunit1_7_outpu_ce0;
    end else begin
        shuffleunit1_7_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        shuffleunit1_7_outpu_we0 = grp_ShuffleUnit1_fu_3437_output_r_we0;
    end else begin
        shuffleunit1_7_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        shuffleunit2_0_outpu_address0 = grp_ShuffleUnit2_fu_3513_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_0_outpu_address0 = grp_ShuffleUnit2_fu_3513_input_r_address0;
    end else begin
        shuffleunit2_0_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        shuffleunit2_0_outpu_ce0 = grp_ShuffleUnit2_fu_3513_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_0_outpu_ce0 = grp_ShuffleUnit2_fu_3513_input_r_ce0;
    end else begin
        shuffleunit2_0_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_0_outpu_ce1 = grp_ShuffleUnit2_fu_3513_input_r_ce1;
    end else begin
        shuffleunit2_0_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        shuffleunit2_0_outpu_we0 = grp_ShuffleUnit2_fu_3513_output_r_we0;
    end else begin
        shuffleunit2_0_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_1_outpu_address0 = grp_ShuffleUnit2_fu_3513_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_1_outpu_address0 = grp_ShuffleUnit2_fu_3513_input_r_address0;
    end else begin
        shuffleunit2_1_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_1_outpu_ce0 = grp_ShuffleUnit2_fu_3513_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_1_outpu_ce0 = grp_ShuffleUnit2_fu_3513_input_r_ce0;
    end else begin
        shuffleunit2_1_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_1_outpu_ce1 = grp_ShuffleUnit2_fu_3513_input_r_ce1;
    end else begin
        shuffleunit2_1_outpu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        shuffleunit2_1_outpu_we0 = grp_ShuffleUnit2_fu_3513_output_r_we0;
    end else begin
        shuffleunit2_1_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        shuffleunit2_2_outpu_address0 = grp_conv_last_fu_3561_shuffleunit2_2_outpu_address0;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_2_outpu_address0 = grp_ShuffleUnit2_fu_3513_output_r_address0;
    end else begin
        shuffleunit2_2_outpu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        shuffleunit2_2_outpu_ce0 = grp_conv_last_fu_3561_shuffleunit2_2_outpu_ce0;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_2_outpu_ce0 = grp_ShuffleUnit2_fu_3513_output_r_ce0;
    end else begin
        shuffleunit2_2_outpu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        shuffleunit2_2_outpu_we0 = grp_ShuffleUnit2_fu_3513_output_r_we0;
    end else begin
        shuffleunit2_2_outpu_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_3622_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_4102_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond5_fu_4240_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == exitcond11_fu_5378_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond1_fu_5982_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond4_fu_6144_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'd1 == exitcond10_fu_6323_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond13_fu_6394_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (1'd1 == exitcond12_fu_7219_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (1'd1 == exitcond3_fu_7706_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (1'd1 == exitcond6_fu_7885_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (1'd1 == exitcond9_fu_8445_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state83 : begin
            if (((1'b1 == ap_CS_fsm_state83) & (1'd1 == exitcond8_fu_8747_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state85 : begin
            if (((1'b1 == ap_CS_fsm_state85) & (1'd1 == exitcond7_fu_8783_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state87 : begin
            if (((1'b1 == ap_CS_fsm_state87) & (grp_conv1_fu_3549_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            if (((1'b1 == ap_CS_fsm_state89) & (grp_DownsampleUnit0_fu_3317_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            if (((1'b1 == ap_CS_fsm_state91) & (grp_ShuffleUnit0_fu_3401_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            if (((1'b1 == ap_CS_fsm_state93) & (grp_ShuffleUnit0_fu_3401_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            if (((1'b1 == ap_CS_fsm_state95) & (grp_ShuffleUnit0_fu_3401_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (grp_DownsampleUnit1_fu_3345_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (((1'b1 == ap_CS_fsm_state99) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((1'b1 == ap_CS_fsm_state103) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((1'b1 == ap_CS_fsm_state105) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((1'b1 == ap_CS_fsm_state107) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            if (((1'b1 == ap_CS_fsm_state109) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            if (((1'b1 == ap_CS_fsm_state111) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            if (((1'b1 == ap_CS_fsm_state113) & (grp_ShuffleUnit1_fu_3437_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((1'b1 == ap_CS_fsm_state115) & (grp_DownsampleUnit2_fu_3373_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            if (((1'b1 == ap_CS_fsm_state117) & (grp_ShuffleUnit2_fu_3513_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((1'b1 == ap_CS_fsm_state119) & (grp_ShuffleUnit2_fu_3513_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            if (((1'b1 == ap_CS_fsm_state121) & (grp_ShuffleUnit2_fu_3513_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((1'b1 == ap_CS_fsm_state123) & (grp_conv_last_fu_3561_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            if (((1'b1 == ap_CS_fsm_state125) & (grp_avgpool_fu_3573_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state126 : begin
            if (((1'b1 == ap_CS_fsm_state126) & (1'd1 == exitcond1_i_fu_8815_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((1'b1 == ap_CS_fsm_state127) & (1'd1 == exitcond_i_fu_8843_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ci_10_fu_8849_p2 = (ci_i_reg_3306 + 10'd1);

assign ci_9_fu_4108_p2 = (ci_reg_3135 + 5'd1);

assign ci_cast1_fu_4098_p1 = ci_reg_3135;

assign ci_cast_fu_4094_p1 = ci_reg_3135;

assign co2_cast117_cast_fu_5978_p1 = co2_reg_3169;

assign co2_cast119_cast_fu_5970_p1 = co2_reg_3169;

assign co2_cast120_cast_fu_5966_p1 = co2_reg_3169;

assign co2_cast1_fu_5958_p1 = co2_reg_3169;

assign co2_cast2_fu_5962_p1 = co2_reg_3169;

assign co2_cast5_fu_5974_p1 = co2_reg_3169;

assign co_22_fu_3628_p2 = (co_reg_3124 + 5'd1);

assign co_23_fu_5988_p2 = (co2_reg_3169 + 5'd1);

assign co_24_fu_8821_p2 = (co_i_reg_3283 + 4'd1);

assign co_cast137_cast_fu_3618_p1 = co_reg_3124;

assign co_cast138_cast_fu_3614_p1 = co_reg_3124;

assign co_cast143_cast1_fu_3602_p1 = co_reg_3124;

assign co_cast143_cast_fu_3606_p1 = co_reg_3124;

assign co_cast144_cast_fu_3598_p1 = co_reg_3124;

assign co_cast1_fu_3590_p1 = co_reg_3124;

assign co_cast2_fu_3594_p1 = co_reg_3124;

assign co_cast8_fu_3610_p1 = co_reg_3124;

assign conv1_weight_address0 = grp_conv1_fu_3549_weight_address0;

assign conv1_weight_ce0 = grp_conv1_fu_3549_weight_ce0;

assign conv_last_weight_address0 = grp_conv_last_fu_3561_weight_address0;

assign conv_last_weight_ce0 = grp_conv_last_fu_3561_weight_ce0;

assign exitcond10_fu_6323_p2 = ((h_reg_3191 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond11_fu_5378_p2 = ((i1_reg_3158 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond12_fu_7219_p2 = ((i4_reg_3214 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond13_fu_6394_p2 = ((i3_reg_3203 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond1_fu_5982_p2 = ((co2_reg_3169 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_8815_p2 = ((co_i_reg_3283 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond2_fu_4102_p2 = ((ci_reg_3135 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond3_fu_7706_p2 = ((i5_reg_3225 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond4_fu_6144_p2 = ((w_reg_3180 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond5_fu_4240_p2 = ((i_reg_3147 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond6_fu_7885_p2 = ((k_reg_3237 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond7_fu_8783_p2 = ((i8_reg_3271 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond8_fu_8747_p2 = ((i7_reg_3259 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond9_fu_8445_p2 = ((k6_reg_3248 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_fu_3622_p2 = ((co_reg_3124 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_i_fu_8843_p2 = ((ci_i_reg_3306 == 10'd512) ? 1'b1 : 1'b0);

assign fc_output_address0 = tmp_i_reg_10696;

assign fc_output_d0 = result_reg_10755;

assign fc_weight_address0 = tmp_764_cast_fu_8869_p1;

assign grp_DownsampleUnit0_fu_3317_ap_start = ap_reg_grp_DownsampleUnit0_fu_3317_ap_start;

assign grp_DownsampleUnit1_fu_3345_ap_start = ap_reg_grp_DownsampleUnit1_fu_3345_ap_start;

assign grp_DownsampleUnit2_fu_3373_ap_start = ap_reg_grp_DownsampleUnit2_fu_3373_ap_start;

assign grp_ShuffleUnit0_fu_3401_ap_start = ap_reg_grp_ShuffleUnit0_fu_3401_ap_start;

assign grp_ShuffleUnit1_fu_3437_ap_start = ap_reg_grp_ShuffleUnit1_fu_3437_ap_start;

assign grp_ShuffleUnit2_fu_3513_ap_start = ap_reg_grp_ShuffleUnit2_fu_3513_ap_start;

assign grp_avgpool_fu_3573_ap_start = ap_reg_grp_avgpool_fu_3573_ap_start;

assign grp_conv1_fu_3549_ap_start = ap_reg_grp_conv1_fu_3549_ap_start;

assign grp_conv_last_fu_3561_ap_start = ap_reg_grp_conv_last_fu_3561_ap_start;

assign h_22_fu_6329_p2 = (h_reg_3191 + 2'd1);

assign i5_cast101_cast_fu_7702_p1 = i5_reg_3225;

assign i5_cast102_cast_fu_7698_p1 = i5_reg_3225;

assign i5_cast104_cast1_fu_7694_p1 = i5_reg_3225;

assign i5_cast105_cast1_fu_7686_p1 = i5_reg_3225;

assign i5_cast105_cast_fu_7690_p1 = i5_reg_3225;

assign i5_cast1_fu_7678_p1 = i5_reg_3225;

assign i5_cast2_fu_7682_p1 = i5_reg_3225;

assign i7_cast92_cast_fu_8743_p1 = i7_reg_3259;

assign i8_cast90_cast_fu_8779_p1 = i8_reg_3271;

assign i_1_fu_4246_p2 = (i_reg_3147 + 3'd1);

assign i_2_fu_8753_p2 = (i7_reg_3259 + 10'd1);

assign i_3_fu_5384_p2 = (i1_reg_3158 + 5'd1);

assign i_4_fu_8789_p2 = (i8_reg_3271 + 4'd1);

assign i_5_fu_7712_p2 = (i5_reg_3225 + 5'd1);

assign i_6_fu_6400_p2 = (i3_reg_3203 + 2'd1);

assign i_7_fu_7225_p2 = (i4_reg_3214 + 3'd1);

assign image_r_address0 = grp_conv1_fu_3549_input_r_address0;

assign image_r_ce0 = grp_conv1_fu_3549_input_r_ce0;

assign k_1_fu_7891_p2 = (k_reg_3237 + 2'd1);

assign k_2_fu_8451_p2 = (k6_reg_3248 + 3'd1);

assign p_lshr_f1_cast_fu_4034_p4 = {{co_reg_3124[4:1]}};

assign p_lshr_f_cast_fu_4080_p4 = {{co_reg_3124[4:2]}};

assign p_shl100_cast_fu_6034_p1 = tmp_401_fu_6026_p3;

assign p_shl101_cast_fu_6002_p1 = tmp_399_fu_5994_p3;

assign p_shl102_cast_fu_6313_p1 = $signed(tmp_127_fu_6305_p3);

assign p_shl103_cast_fu_6286_p1 = $signed(tmp_126_fu_6278_p3);

assign p_shl104_cast_fu_6259_p1 = $signed(tmp_125_fu_6251_p3);

assign p_shl105_cast_fu_6232_p1 = $signed(tmp_124_fu_6224_p3);

assign p_shl106_cast_fu_6205_p1 = $signed(tmp_123_fu_6197_p3);

assign p_shl107_cast_fu_7185_p3 = {{tmp_617_reg_9945}, {2'd0}};

assign p_shl108_cast_fu_7005_p1 = tmp_615_fu_6997_p3;

assign p_shl109_cast_fu_7163_p3 = {{tmp_141_fu_7159_p1}, {2'd0}};

assign p_shl10_cast_fu_8469_p1 = p_shl10_fu_8461_p3;

assign p_shl10_fu_8461_p3 = {{tmp_132_fu_8457_p1}, {5'd0}};

assign p_shl110_cast_fu_7136_p1 = tmp_610_fu_7129_p3;

assign p_shl111_cast_fu_7108_p3 = {{tmp_607_reg_9933}, {2'd0}};

assign p_shl112_cast_fu_6952_p1 = $unsigned(tmp_605_fu_6948_p1);

assign p_shl113_cast_fu_7090_p1 = $signed(tmp_140_fu_7083_p3);

assign p_shl114_cast_fu_6849_p1 = $unsigned(tmp_599_fu_6845_p1);

assign p_shl115_cast_fu_7060_p1 = $signed(tmp_139_fu_7053_p3);

assign p_shl116_cast_fu_6804_p1 = tmp_593_fu_6796_p3;

assign p_shl117_cast_fu_7030_p1 = $signed(tmp_138_fu_7023_p3);

assign p_shl118_cast_fu_6766_p1 = tmp_588_fu_6758_p3;

assign p_shl119_cast_fu_6911_p3 = {{tmp_585_reg_9881}, {2'd0}};

assign p_shl11_cast_fu_8481_p1 = p_shl11_fu_8473_p3;

assign p_shl11_fu_8473_p3 = {{tmp_132_fu_8457_p1}, {3'd0}};

assign p_shl120_cast_fu_6724_p1 = tmp_583_fu_6716_p3;

assign p_shl121_cast_fu_6885_p3 = {{tmp_580_reg_9875}, {2'd0}};

assign p_shl122_cast_fu_6682_p1 = tmp_578_fu_6674_p3;

assign p_shl123_cast_fu_6638_p1 = $signed(tmp_137_fu_6631_p3);

assign p_shl124_cast_fu_6558_p1 = tmp_573_fu_6550_p3;

assign p_shl125_cast_fu_6611_p3 = {{tmp_136_reg_9844}, {2'd0}};

assign p_shl126_cast_fu_6508_p1 = $unsigned(tmp_568_fu_6504_p1);

assign p_shl127_cast_fu_6591_p1 = $signed(tmp_134_fu_6584_p3);

assign p_shl128_cast_fu_6471_p1 = tmp_562_fu_6463_p3;

assign p_shl12_cast_fu_5402_p1 = p_shl3_fu_5394_p3;

assign p_shl12_fu_5406_p3 = {{tmp_130_fu_5390_p1}, {3'd0}};

assign p_shl130_cast_fu_7397_p1 = tmp_648_fu_7389_p3;

assign p_shl131_cast_fu_7630_p3 = {{tmp_145_fu_7626_p1}, {2'd0}};

assign p_shl132_cast_fu_7603_p1 = $unsigned(tmp_643_fu_7599_p1);

assign p_shl133_cast_fu_7562_p3 = {{tmp_639_reg_10067}, {2'd0}};

assign p_shl134_cast_fu_7518_p1 = tmp_637_fu_7510_p3;

assign p_shl135_cast_fu_7536_p3 = {{tmp_634_reg_10061}, {2'd0}};

assign p_shl136_cast_fu_7481_p1 = tmp_632_fu_7473_p3;

assign p_shl137_cast_fu_7442_p3 = {{tmp_144_reg_10034}, {2'd0}};

assign p_shl138_cast_fu_7336_p1 = $unsigned(tmp_627_fu_7332_p1);

assign p_shl139_cast_fu_7419_p3 = {{tmp_623_reg_10023}, {2'd0}};

assign p_shl13_cast1_fu_5414_p1 = p_shl12_fu_5406_p3;

assign p_shl13_cast_fu_5418_p1 = p_shl12_fu_5406_p3;

assign p_shl13_fu_6410_p3 = {{tmp_133_fu_6406_p1}, {5'd0}};

assign p_shl140_cast_fu_7297_p1 = tmp_621_fu_7289_p3;

assign p_shl14_cast_fu_5449_p1 = tmp_131_fu_5443_p2;

assign p_shl14_fu_6422_p3 = {{tmp_133_fu_6406_p1}, {3'd0}};

assign p_shl15_cast_fu_6418_p1 = p_shl13_fu_6410_p3;

assign p_shl15_fu_7235_p3 = {{tmp_142_fu_7231_p1}, {5'd0}};

assign p_shl16_cast_fu_6430_p1 = p_shl14_fu_6422_p3;

assign p_shl16_fu_7247_p3 = {{tmp_142_fu_7231_p1}, {3'd0}};

assign p_shl17_cast_fu_7243_p1 = p_shl15_fu_7235_p3;

assign p_shl18_cast_fu_7255_p1 = p_shl16_fu_7247_p3;

assign p_shl19_cast_fu_3968_p1 = $unsigned(tmp_395_fu_3964_p1);

assign p_shl1_cast_fu_4012_p1 = p_shl1_fu_4004_p3;

assign p_shl1_fu_4004_p3 = {{tmp_120_fu_4000_p1}, {5'd0}};

assign p_shl20_cast_fu_3986_p1 = $unsigned(tmp_397_fu_3982_p1);

assign p_shl21_cast_fu_3928_p1 = tmp_388_fu_3920_p3;

assign p_shl22_cast_fu_3940_p1 = tmp_390_fu_3932_p3;

assign p_shl23_cast_fu_3888_p1 = tmp_381_fu_3880_p3;

assign p_shl24_cast_fu_3900_p1 = tmp_384_fu_3892_p3;

assign p_shl25_cast_fu_3848_p1 = tmp_375_fu_3840_p3;

assign p_shl26_cast_fu_3860_p1 = tmp_377_fu_3852_p3;

assign p_shl27_cast_fu_3802_p1 = $unsigned(tmp_368_fu_3798_p1);

assign p_shl28_cast_fu_3820_p1 = $unsigned(tmp_371_fu_3816_p1);

assign p_shl29_cast_fu_3762_p1 = tmp_363_fu_3754_p3;

assign p_shl2_cast_fu_4024_p1 = p_shl2_fu_4016_p3;

assign p_shl2_fu_4016_p3 = {{tmp_120_fu_4000_p1}, {3'd0}};

assign p_shl30_cast_fu_3774_p1 = tmp_364_fu_3766_p3;

assign p_shl31_cast_fu_3722_p1 = tmp_359_fu_3714_p3;

assign p_shl32_cast_fu_3734_p1 = tmp_360_fu_3726_p3;

assign p_shl33_cast_fu_3682_p1 = tmp_309_fu_3674_p3;

assign p_shl34_cast_fu_3694_p1 = tmp_355_fu_3686_p3;

assign p_shl35_cast_fu_3642_p1 = tmp_fu_3634_p3;

assign p_shl36_cast_fu_3654_p1 = tmp_218_fu_3646_p3;

assign p_shl37_cast_fu_4973_p1 = tmp_511_fu_4966_p3;

assign p_shl38_cast_fu_4984_p1 = tmp_512_fu_4977_p3;

assign p_shl39_cast_fu_4512_p1 = $unsigned(tmp_507_fu_4508_p1);

assign p_shl3_cast_fu_4070_p1 = tmp_122_fu_4064_p2;

assign p_shl3_fu_5394_p3 = {{tmp_130_fu_5390_p1}, {5'd0}};

assign p_shl40_cast_fu_4520_p1 = $unsigned(tmp_508_fu_4516_p1);

assign p_shl41_cast_fu_5324_p1 = $unsigned(tmp_502_fu_5320_p1);

assign p_shl42_cast_fu_5339_p1 = $unsigned(tmp_504_fu_5335_p1);

assign p_shl43_cast_fu_5274_p1 = $unsigned(tmp_496_fu_5270_p1);

assign p_shl44_cast_fu_5289_p1 = $unsigned(tmp_498_fu_5285_p1);

assign p_shl45_cast_fu_5228_p1 = tmp_491_fu_5221_p3;

assign p_shl46_cast_fu_5239_p1 = tmp_492_fu_5232_p3;

assign p_shl47_cast_fu_5166_p1 = tmp_487_fu_5159_p3;

assign p_shl48_cast_fu_5177_p1 = tmp_488_fu_5170_p3;

assign p_shl49_cast_fu_5124_p1 = tmp_483_fu_5117_p3;

assign p_shl4_cast_fu_7909_p1 = p_shl4_fu_7901_p3;

assign p_shl4_fu_7901_p3 = {{tmp_129_fu_7897_p1}, {5'd0}};

assign p_shl50_cast_fu_5135_p1 = tmp_484_fu_5128_p3;

assign p_shl51_cast_fu_5052_p1 = tmp_479_fu_5045_p3;

assign p_shl52_cast_fu_5063_p1 = tmp_480_fu_5056_p3;

assign p_shl53_cast_fu_5010_p1 = tmp_475_fu_5003_p3;

assign p_shl54_cast_fu_5021_p1 = tmp_476_fu_5014_p3;

assign p_shl55_cast_fu_4911_p1 = tmp_471_fu_4904_p3;

assign p_shl56_cast_fu_4922_p1 = tmp_472_fu_4915_p3;

assign p_shl57_cast_fu_4869_p1 = tmp_467_fu_4862_p3;

assign p_shl58_cast_fu_4880_p1 = tmp_468_fu_4873_p3;

assign p_shl59_cast_fu_4795_p1 = $unsigned(tmp_462_fu_4791_p1);

assign p_shl5_cast_fu_7921_p1 = p_shl5_fu_7913_p3;

assign p_shl5_fu_7913_p3 = {{tmp_129_fu_7897_p1}, {3'd0}};

assign p_shl60_cast_fu_4810_p1 = $unsigned(tmp_464_fu_4806_p1);

assign p_shl61_cast_fu_4753_p1 = tmp_457_fu_4745_p3;

assign p_shl62_cast_fu_4765_p1 = tmp_458_fu_4757_p3;

assign p_shl63_cast_fu_4700_p1 = tmp_453_fu_4693_p3;

assign p_shl64_cast_fu_4711_p1 = tmp_454_fu_4704_p3;

assign p_shl65_cast_fu_4658_p1 = tmp_449_fu_4651_p3;

assign p_shl66_cast_fu_4669_p1 = tmp_450_fu_4662_p3;

assign p_shl67_cast_fu_4584_p1 = tmp_445_fu_4577_p3;

assign p_shl68_cast_fu_4595_p1 = tmp_446_fu_4588_p3;

assign p_shl69_cast_fu_4542_p1 = tmp_441_fu_4535_p3;

assign p_shl6_cast_fu_4264_p1 = p_shl6_fu_4256_p3;

assign p_shl6_fu_4256_p3 = {{tmp_128_fu_4252_p1}, {5'd0}};

assign p_shl70_cast_fu_4553_p1 = tmp_442_fu_4546_p3;

assign p_shl71_cast_fu_4438_p1 = tmp_437_fu_4431_p3;

assign p_shl72_cast_fu_4449_p1 = tmp_438_fu_4442_p3;

assign p_shl74_cast_fu_4352_p1 = $signed(tmp_434_fu_4344_p3);

assign p_shl75_cast_fu_4396_p1 = tmp_429_fu_4389_p3;

assign p_shl76_cast_fu_4407_p1 = tmp_430_fu_4400_p3;

assign p_shl77_cast_fu_5928_p1 = tmp_558_fu_5921_p3;

assign p_shl78_cast_fu_5939_p1 = tmp_559_fu_5932_p3;

assign p_shl79_cast_fu_5890_p1 = tmp_554_fu_5883_p3;

assign p_shl7_cast_fu_4276_p1 = p_shl7_fu_4268_p3;

assign p_shl7_fu_4268_p3 = {{tmp_128_fu_4252_p1}, {3'd0}};

assign p_shl80_cast_fu_5901_p1 = tmp_555_fu_5894_p3;

assign p_shl81_cast_fu_5852_p1 = tmp_550_fu_5845_p3;

assign p_shl82_cast_fu_5863_p1 = tmp_551_fu_5856_p3;

assign p_shl83_cast_fu_5784_p1 = tmp_546_fu_5777_p3;

assign p_shl84_cast_fu_5795_p1 = tmp_547_fu_5788_p3;

assign p_shl85_cast_fu_5738_p1 = $unsigned(tmp_541_fu_5734_p1);

assign p_shl86_cast_fu_5753_p1 = $unsigned(tmp_543_fu_5749_p1);

assign p_shl87_cast_fu_5670_p1 = tmp_536_fu_5663_p3;

assign p_shl88_cast_fu_5681_p1 = tmp_537_fu_5674_p3;

assign p_shl89_cast_fu_5628_p1 = tmp_532_fu_5621_p3;

assign p_shl8_cast_fu_4309_p1 = p_shl8_fu_4301_p3;

assign p_shl8_fu_4301_p3 = {{tmp_128_fu_4252_p1}, {4'd0}};

assign p_shl90_cast_fu_5639_p1 = tmp_533_fu_5632_p3;

assign p_shl91_cast_fu_5555_p1 = tmp_528_fu_5548_p3;

assign p_shl92_cast_fu_5566_p1 = tmp_529_fu_5559_p3;

assign p_shl94_cast_fu_5480_p1 = $signed(tmp_525_fu_5472_p3);

assign p_shl95_cast_fu_5513_p1 = tmp_520_fu_5506_p3;

assign p_shl96_cast_fu_5524_p1 = tmp_521_fu_5517_p3;

assign p_shl97_cast_fu_6130_p1 = $unsigned(tmp_408_fu_6126_p1);

assign p_shl98_cast_fu_6090_p1 = tmp_405_fu_6082_p3;

assign p_shl99_cast_fu_6062_p1 = tmp_403_fu_6054_p3;

assign p_shl9_cast_fu_4321_p1 = p_shl9_fu_4313_p3;

assign p_shl9_fu_4313_p3 = {{tmp_128_fu_4252_p1}, {2'd0}};

assign p_shl_cast_fu_4060_p1 = p_shl_fu_4052_p3;

assign p_shl_fu_4052_p3 = {{tmp_121_fu_4048_p1}, {5'd0}};

assign tmp10_fu_4851_p2 = ($signed(11'd1080) + $signed(tmp_330_cast1_fu_4829_p1));

assign tmp11_fu_4946_p2 = ($signed(11'd1176) + $signed(tmp_330_cast1_reg_9297));

assign tmp12_fu_4956_p2 = ($signed(11'd1272) + $signed(tmp_330_cast1_reg_9297));

assign tmp13_fu_5087_p2 = ($signed(11'd1368) + $signed(tmp_330_cast1_reg_9297));

assign tmp14_fu_5097_p2 = ($signed(11'd1464) + $signed(tmp_330_cast1_reg_9297));

assign tmp15_fu_5107_p2 = ($signed(11'd1560) + $signed(tmp_330_cast1_reg_9297));

assign tmp16_fu_5201_p2 = ($signed(10'd632) + $signed(tmp_330_cast127_cast_reg_9181));

assign tmp17_fu_5211_p2 = ($signed(10'd728) + $signed(tmp_330_cast127_cast_reg_9181));

assign tmp19_cast1_fu_4639_p1 = $signed(tmp3_reg_9200);

assign tmp19_cast_fu_4642_p1 = $unsigned(tmp19_cast1_fu_4639_p1);

assign tmp1_fu_4290_p2 = ($signed(9'd216) + $signed(tmp_330_cast127_cast_1_fu_4286_p1));

assign tmp20_fu_5432_p2 = ($signed(12'd2040) + $signed(tmp_438_cast_fu_5428_p1));

assign tmp21_fu_5495_p2 = ($signed(12'd2424) + $signed(tmp_438_cast_fu_5428_p1));

assign tmp22_fu_5590_p2 = ($signed(12'd2808) + $signed(tmp_438_cast_reg_9454));

assign tmp23_fu_5600_p2 = ($signed(12'd3192) + $signed(tmp_438_cast_reg_9454));

assign tmp24_fu_5705_p2 = ($signed(11'd1528) + $signed(tmp_438_cast_cast_fu_5613_p1));

assign tmp25_fu_5716_p2 = ($signed(13'd3960) + $signed(tmp_438_cast1_fu_5610_p1));

assign tmp26_fu_5815_p2 = ($signed(13'd4344) + $signed(tmp_438_cast1_reg_9499));

assign tmp27_fu_5825_p2 = ($signed(13'd4728) + $signed(tmp_438_cast1_reg_9499));

assign tmp28_fu_5835_p2 = ($signed(13'd5112) + $signed(tmp_438_cast1_reg_9499));

assign tmp29_fu_6448_p2 = ($signed(8'd120) + $signed(tmp_470_cast110_cast_fu_6445_p1));

assign tmp2_fu_4367_p2 = ($signed(9'd312) + $signed(tmp_330_cast127_cast_1_fu_4286_p1));

assign tmp30_fu_6535_p2 = ($signed(8'd168) + $signed(tmp_470_cast110_cast_fu_6445_p1));

assign tmp31_cast1_fu_6658_p1 = $signed(tmp31_reg_9855);

assign tmp31_cast_fu_6661_p1 = $unsigned(tmp31_cast1_fu_6658_p1);

assign tmp31_fu_6573_p2 = ($signed(7'd88) + $signed(tmp_353_reg_9813));

assign tmp32_fu_6701_p2 = ($signed(9'd264) + $signed(tmp_470_cast2_fu_6578_p1));

assign tmp33_fu_6743_p2 = ($signed(9'd312) + $signed(tmp_470_cast2_fu_6578_p1));

assign tmp34_fu_6781_p2 = ($signed(9'd360) + $signed(tmp_470_cast2_fu_6578_p1));

assign tmp35_fu_6819_p2 = ($signed(8'd152) + $signed(tmp_470_cast110_cast_reg_9827));

assign tmp36_fu_6864_p2 = ($signed(8'd200) + $signed(tmp_470_cast110_cast_reg_9827));

assign tmp37_fu_6971_p2 = ($signed(10'd504) + $signed(tmp_470_cast1_fu_6874_p1));

assign tmp38_fu_6982_p2 = ($signed(10'd552) + $signed(tmp_470_cast1_fu_6874_p1));

assign tmp39_fu_7274_p2 = ($signed(10'd600) + $signed(tmp_505_cast_fu_7268_p1));

assign tmp3_cast_fu_4478_p1 = tmp3_fu_4473_p2;

assign tmp3_fu_4473_p2 = ($signed(9'd408) + $signed(tmp_330_cast127_cast_1_reg_9153));

assign tmp40_fu_7459_p2 = ($signed(10'd696) + $signed(tmp_505_cast_reg_10017));

assign tmp41_fu_7496_p2 = ($signed(10'd792) + $signed(tmp_505_cast_reg_10017));

assign tmp42_fu_7363_p2 = ($signed(9'd376) + $signed(tmp_505_cast_cast_fu_7271_p1));

assign tmp43_fu_7374_p2 = ($signed(11'd984) + $signed(tmp_505_cast1_fu_7265_p1));

assign tmp44_fu_7934_p2 = ($signed(9'd360) + $signed(tmp_238_cast96_cast_fu_7931_p1));

assign tmp45_fu_7953_p2 = ($signed(8'd152) + $signed(tmp_238_cast96_cast1_fu_7950_p1));

assign tmp46_fu_7973_p2 = ($signed(8'd200) + $signed(tmp_238_cast96_cast1_fu_7950_p1));

assign tmp47_fu_8011_p2 = ($signed(10'd504) + $signed(tmp_238_cast97_cast_fu_7993_p1));

assign tmp48_fu_8027_p2 = ($signed(10'd552) + $signed(tmp_238_cast97_cast_fu_7993_p1));

assign tmp49_fu_8053_p2 = ($signed(10'd600) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp4_fu_4487_p2 = ($signed(10'd504) + $signed(tmp_330_cast127_cast_fu_4386_p1));

assign tmp50_fu_8068_p2 = ($signed(10'd648) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp51_fu_8083_p2 = ($signed(10'd696) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp52_fu_8098_p2 = ($signed(10'd744) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp53_fu_8113_p2 = ($signed(9'd280) + $signed(tmp_238_cast96_cast_reg_10313));

assign tmp54_fu_8132_p2 = ($signed(9'd328) + $signed(tmp_238_cast96_cast_reg_10313));

assign tmp55_fu_8151_p2 = ($signed(9'd376) + $signed(tmp_238_cast96_cast_reg_10313));

assign tmp56_fu_8043_p2 = ($signed(8'd168) + $signed(tmp_238_cast96_cast1_reg_10325));

assign tmp57_cast1_fu_8185_p1 = $signed(tmp57_fu_8180_p2);

assign tmp57_cast_fu_8189_p1 = $unsigned(tmp57_cast1_fu_8185_p1);

assign tmp57_fu_8180_p2 = ($signed(7'd88) + $signed(tmp_238_reg_10303));

assign tmp58_fu_8203_p2 = ($signed(11'd1032) + $signed(tmp_238_cast1_fu_8177_p1));

assign tmp59_fu_8219_p2 = ($signed(11'd1080) + $signed(tmp_238_cast1_reg_10447));

assign tmp5_fu_4619_p2 = ($signed(10'd600) + $signed(tmp_330_cast127_cast_reg_9181));

assign tmp60_fu_8234_p2 = ($signed(11'd1128) + $signed(tmp_238_cast1_reg_10447));

assign tmp61_fu_8249_p2 = ($signed(11'd1176) + $signed(tmp_238_cast1_reg_10447));

assign tmp62_fu_8264_p2 = ($signed(11'd1224) + $signed(tmp_238_cast1_reg_10447));

assign tmp63_fu_8279_p2 = ($signed(11'd1272) + $signed(tmp_238_cast1_reg_10447));

assign tmp64_fu_8294_p2 = ($signed(11'd1320) + $signed(tmp_238_cast1_reg_10447));

assign tmp65_fu_8309_p2 = ($signed(11'd1368) + $signed(tmp_238_cast1_reg_10447));

assign tmp66_fu_8324_p2 = ($signed(11'd1416) + $signed(tmp_238_cast1_reg_10447));

assign tmp67_fu_8339_p2 = ($signed(11'd1464) + $signed(tmp_238_cast1_reg_10447));

assign tmp68_fu_8354_p2 = ($signed(11'd1512) + $signed(tmp_238_cast1_reg_10447));

assign tmp69_fu_8369_p2 = ($signed(10'd536) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp6_fu_4629_p2 = ($signed(10'd696) + $signed(tmp_330_cast127_cast_reg_9181));

assign tmp70_fu_8388_p2 = ($signed(10'd584) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp71_fu_8407_p2 = ($signed(10'd632) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp72_fu_8426_p2 = ($signed(10'd680) + $signed(tmp_238_cast97_cast_reg_10345));

assign tmp73_fu_8497_p2 = ($signed(10'd728) + $signed(tmp_391_cast_cast_fu_8494_p1));

assign tmp74_fu_8517_p2 = ($signed(9'd312) + $signed(tmp_391_cast_cast1_fu_8491_p1));

assign tmp75_cast1_fu_8559_p1 = $signed(tmp75_fu_8554_p2);

assign tmp75_cast_fu_8563_p1 = $unsigned(tmp75_cast1_fu_8559_p1);

assign tmp75_fu_8554_p2 = ($signed(9'd408) + $signed(tmp_391_cast_cast1_reg_10557));

assign tmp76_fu_8577_p2 = ($signed(12'd2040) + $signed(tmp_391_cast_fu_8537_p1));

assign tmp77_fu_8593_p2 = ($signed(12'd2136) + $signed(tmp_391_cast_reg_10572));

assign tmp78_fu_8608_p2 = ($signed(12'd2232) + $signed(tmp_391_cast_reg_10572));

assign tmp79_fu_8623_p2 = ($signed(12'd2328) + $signed(tmp_391_cast_reg_10572));

assign tmp7_fu_4735_p2 = ($signed(10'd792) + $signed(tmp_330_cast127_cast_reg_9181));

assign tmp80_fu_8638_p2 = ($signed(12'd2424) + $signed(tmp_391_cast_reg_10572));

assign tmp81_fu_8653_p2 = ($signed(12'd2520) + $signed(tmp_391_cast_reg_10572));

assign tmp82_fu_8668_p2 = ($signed(12'd2616) + $signed(tmp_391_cast_reg_10572));

assign tmp83_fu_8683_p2 = ($signed(12'd2712) + $signed(tmp_391_cast_reg_10572));

assign tmp84_fu_8698_p2 = ($signed(12'd2808) + $signed(tmp_391_cast_reg_10572));

assign tmp85_fu_8713_p2 = ($signed(12'd2904) + $signed(tmp_391_cast_reg_10572));

assign tmp86_fu_8728_p2 = ($signed(12'd3000) + $signed(tmp_391_cast_reg_10572));

assign tmp8_fu_4498_p2 = ($signed(9'd376) + $signed(tmp_330_cast127_cast_1_reg_9153));

assign tmp9_fu_4840_p2 = ($signed(11'd984) + $signed(tmp_330_cast1_fu_4829_p1));

assign tmp_120_fu_4000_p1 = co_reg_3124[0:0];

assign tmp_121_fu_4048_p1 = co_reg_3124[1:0];

assign tmp_122_fu_4064_p2 = co_reg_3124 << 5'd3;

assign tmp_123_fu_6197_p3 = {{tmp_419_fu_6188_p2}, {2'd0}};

assign tmp_124_fu_6224_p3 = {{tmp_421_fu_6215_p2}, {2'd0}};

assign tmp_125_fu_6251_p3 = {{tmp_423_fu_6242_p2}, {2'd0}};

assign tmp_126_fu_6278_p3 = {{tmp_425_fu_6269_p2}, {2'd0}};

assign tmp_127_fu_6305_p3 = {{tmp_427_fu_6296_p2}, {2'd0}};

assign tmp_128_fu_4252_p1 = i_reg_3147[1:0];

assign tmp_129_fu_7897_p1 = k_reg_3237[0:0];

assign tmp_130_fu_5390_p1 = i1_reg_3158[3:0];

assign tmp_131_fu_5443_p2 = i1_reg_3158 << 5'd1;

assign tmp_132_fu_8457_p1 = k6_reg_3248[1:0];

assign tmp_133_fu_6406_p1 = i3_reg_3203[0:0];

assign tmp_134_fu_6584_p3 = {{tmp_564_reg_9833}, {2'd0}};

assign tmp_135_fu_6527_p1 = tmp_570_fu_6522_p2[9:0];

assign tmp_136_fu_6531_p1 = tmp_570_fu_6522_p2[7:0];

assign tmp_137_fu_6631_p3 = {{tmp_575_reg_9849}, {2'd0}};

assign tmp_138_fu_7023_p3 = {{tmp_590_reg_9887}, {2'd0}};

assign tmp_139_fu_7053_p3 = {{tmp_595_reg_9893}, {2'd0}};

assign tmp_140_fu_7083_p3 = {{tmp_601_reg_9899}, {2'd0}};

assign tmp_141_fu_7159_p1 = tmp_612_fu_7150_p2[12:0];

assign tmp_142_fu_7231_p1 = i4_reg_3214[1:0];

assign tmp_143_fu_7355_p1 = tmp_629_fu_7350_p2[10:0];

assign tmp_144_fu_7359_p1 = tmp_629_fu_7350_p2[8:0];

assign tmp_145_fu_7626_p1 = tmp_645_fu_7617_p2[12:0];

assign tmp_146_fu_7649_p2 = tmp_650_reg_10045 << 15'd2;

assign tmp_170_fu_3708_p2 = (7'd48 + co_cast138_cast_fu_3614_p1);

assign tmp_171_fu_3748_p2 = ($signed(7'd72) + $signed(co_cast138_cast_fu_3614_p1));

assign tmp_172_fu_3834_p2 = (8'd120 + co_cast8_fu_3610_p1);

assign tmp_173_fu_3874_p2 = ($signed(8'd144) + $signed(co_cast8_fu_3610_p1));

assign tmp_174_fu_3914_p2 = ($signed(8'd168) + $signed(co_cast8_fu_3610_p1));

assign tmp_175_fu_4028_p2 = (p_shl1_cast_fu_4012_p1 - p_shl2_cast_fu_4024_p1);

assign tmp_176_fu_4074_p2 = (p_shl_cast_fu_4060_p1 - p_shl3_cast_fu_4070_p1);

assign tmp_178_fu_6016_p2 = (co2_cast117_cast_fu_5978_p1 + 6'd24);

assign tmp_179_cast_fu_6022_p1 = tmp_178_fu_6016_p2;

assign tmp_180_fu_6044_p2 = (co2_cast5_fu_5974_p1 + 7'd48);

assign tmp_181_cast_fu_6050_p1 = tmp_180_fu_6044_p2;

assign tmp_182_fu_6072_p2 = ($signed(co2_cast5_fu_5974_p1) + $signed(7'd72));

assign tmp_183_cast_fu_6078_p1 = tmp_182_fu_6072_p2;

assign tmp_184_fu_6100_p3 = {{1'd1}, {co2_reg_3169}};

assign tmp_185_cast_fu_6112_p1 = $unsigned(tmp_197_cast_fu_6108_p1);

assign tmp_186_cast1_fu_4221_p1 = ci_reg_3135;

assign tmp_186_cast2_fu_4225_p1 = ci_reg_3135;

assign tmp_186_cast3_fu_4229_p1 = ci_reg_3135;

assign tmp_186_cast4_fu_4233_p1 = ci_reg_3135;

assign tmp_186_cast5_fu_4176_p1 = ci_reg_3135;

assign tmp_186_cast6_fu_4147_p1 = ci_reg_3135;

assign tmp_186_cast7_fu_4114_p1 = ci_reg_3135;

assign tmp_186_cast8_fu_4118_p1 = ci_reg_3135;

assign tmp_186_cast_fu_4044_p1 = p_lshr_f1_cast_fu_4034_p4;

assign tmp_187_fu_4142_p2 = (tmp_175_reg_8974 + ci_cast1_fu_4098_p1);

assign tmp_188_cast_fu_4237_p1 = $signed(tmp_187_reg_9030);

assign tmp_189_cast_fu_4090_p1 = p_lshr_f_cast_fu_4080_p4;

assign tmp_189_fu_7718_p1 = i5_reg_3225;

assign tmp_190_fu_7723_p2 = (i5_cast101_cast_fu_7702_p1 + 6'd24);

assign tmp_191_fu_7729_p1 = tmp_190_fu_7723_p2;

assign tmp_192_fu_7734_p2 = (i5_cast102_cast_reg_10185 + 7'd48);

assign tmp_193_fu_7739_p1 = tmp_192_fu_7734_p2;

assign tmp_194_fu_7744_p2 = ($signed(i5_cast102_cast_reg_10185) + $signed(7'd72));

assign tmp_195_fu_7749_p1 = tmp_194_fu_7744_p2;

assign tmp_196_fu_7754_p3 = {{1'd1}, {i5_reg_3225}};

assign tmp_197_cast_fu_6108_p1 = $signed(tmp_184_fu_6100_p3);

assign tmp_197_fu_7766_p1 = $unsigned(tmp_206_cast_fu_7762_p1);

assign tmp_198_fu_7771_p2 = (i5_cast104_cast1_reg_10174 + 8'd120);

assign tmp_199_fu_7776_p1 = tmp_198_fu_7771_p2;

assign tmp_200_fu_7781_p2 = ($signed(i5_cast104_cast1_reg_10174) + $signed(8'd144));

assign tmp_201_fu_7786_p1 = tmp_200_fu_7781_p2;

assign tmp_202_fu_7791_p2 = ($signed(i5_cast104_cast1_reg_10174) + $signed(8'd168));

assign tmp_203_fu_7796_p1 = tmp_202_fu_7791_p2;

assign tmp_204_fu_7801_p3 = {{2'd2}, {i5_reg_3225}};

assign tmp_205_fu_7813_p1 = $unsigned(tmp_214_cast_fu_7809_p1);

assign tmp_206_cast_fu_7762_p1 = $signed(tmp_196_fu_7754_p3);

assign tmp_206_fu_7818_p2 = ($signed(i5_cast102_cast_reg_10185) + $signed(7'd88));

assign tmp_207_fu_7827_p1 = $unsigned(tmp_216_cast_fu_7823_p1);

assign tmp_208_fu_7832_p2 = (i5_cast105_cast1_reg_10146 + 9'd240);

assign tmp_209_fu_7837_p1 = tmp_208_fu_7832_p2;

assign tmp_210_fu_7842_p2 = ($signed(i5_cast105_cast1_reg_10146) + $signed(9'd264));

assign tmp_211_fu_7847_p1 = tmp_210_fu_7842_p2;

assign tmp_212_fu_7852_p3 = {{4'd9}, {i5_reg_3225}};

assign tmp_213_fu_7860_p1 = tmp_212_fu_7852_p3;

assign tmp_214_cast_fu_7809_p1 = $signed(tmp_204_fu_7801_p3);

assign tmp_214_fu_7865_p2 = ($signed(i5_cast105_cast1_reg_10146) + $signed(9'd312));

assign tmp_215_fu_7870_p1 = tmp_214_fu_7865_p2;

assign tmp_216_cast_fu_7823_p1 = $signed(tmp_206_fu_7818_p2);

assign tmp_216_fu_7875_p2 = ($signed(i5_cast105_cast1_reg_10146) + $signed(9'd336));

assign tmp_217_fu_7880_p1 = tmp_216_fu_7875_p2;

assign tmp_218_cast1_fu_6156_p1 = w_reg_3180;

assign tmp_218_cast2_fu_6160_p1 = w_reg_3180;

assign tmp_218_cast3_fu_6164_p1 = w_reg_3180;

assign tmp_218_cast4_fu_6168_p1 = w_reg_3180;

assign tmp_218_cast5_fu_6172_p1 = w_reg_3180;

assign tmp_218_cast6_fu_6176_p1 = w_reg_3180;

assign tmp_218_cast7_fu_6180_p1 = w_reg_3180;

assign tmp_218_cast_fu_6184_p1 = w_reg_3180;

assign tmp_218_fu_3646_p3 = {{co_reg_3124}, {3'd0}};

assign tmp_219_fu_4378_p2 = (tmp_176_reg_8984 + ci_cast_reg_8994);

assign tmp_220_cast_fu_4382_p1 = $signed(tmp_219_fu_4378_p2);

assign tmp_220_fu_3658_p2 = (p_shl35_cast_fu_3642_p1 - p_shl36_cast_fu_3654_p1);

assign tmp_221_fu_4280_p2 = (p_shl6_cast_fu_4264_p1 - p_shl7_cast_fu_4276_p1);

assign tmp_222_fu_4296_p2 = (tmp1_fu_4290_p2 + co_cast143_cast1_reg_8903);

assign tmp_223_fu_4325_p2 = (p_shl8_cast_fu_4309_p1 - p_shl9_cast_fu_4321_p1);

assign tmp_224_fu_4331_p2 = (tmp_223_fu_4325_p2 + tmp_186_cast_reg_8979);

assign tmp_225_fu_4373_p2 = (tmp2_fu_4367_p2 + co_cast143_cast1_reg_8903);

assign tmp_226_fu_4482_p2 = (tmp3_cast_fu_4478_p1 + co_cast143_cast_reg_8910);

assign tmp_227_fu_4493_p2 = (tmp4_fu_4487_p2 + co_cast143_cast_reg_8910);

assign tmp_228_fu_4624_p2 = (tmp5_fu_4619_p2 + co_cast143_cast_reg_8910);

assign tmp_229_fu_4634_p2 = (tmp6_fu_4629_p2 + co_cast143_cast_reg_8910);

assign tmp_230_fu_4740_p2 = (tmp7_fu_4735_p2 + co_cast143_cast_reg_8910);

assign tmp_231_cast_fu_8765_p1 = $signed(tmp_231_fu_8759_p2);

assign tmp_231_fu_8759_p2 = ($signed(i7_cast92_cast_fu_8743_p1) + $signed(11'd1048));

assign tmp_232_fu_8769_p1 = $unsigned(tmp_231_cast_fu_8765_p1);

assign tmp_233_fu_8774_p1 = i7_reg_3259;

assign tmp_234_fu_4503_p2 = (tmp8_fu_4498_p2 + co_cast143_cast1_reg_8903);

assign tmp_235_cast_fu_8801_p1 = $signed(tmp_235_fu_8795_p2);

assign tmp_235_fu_8795_p2 = ($signed(i8_cast90_cast_fu_8779_p1) + $signed(10'd536));

assign tmp_236_fu_8805_p1 = $unsigned(tmp_235_cast_fu_8801_p1);

assign tmp_237_fu_8810_p1 = i8_reg_3271;

assign tmp_238_cast1_fu_8177_p1 = $signed(tmp_238_reg_10303);

assign tmp_238_cast96_cast1_fu_7950_p1 = $signed(tmp_238_reg_10303);

assign tmp_238_cast96_cast_fu_7931_p1 = $signed(tmp_238_reg_10303);

assign tmp_238_cast97_cast_fu_7993_p1 = $signed(tmp_238_reg_10303);

assign tmp_238_fu_7925_p2 = (p_shl4_cast_fu_7909_p1 - p_shl5_cast_fu_7921_p1);

assign tmp_239_fu_4846_p2 = (tmp9_fu_4840_p2 + co_cast144_cast_reg_8891);

assign tmp_240_fu_7940_p2 = (i5_cast105_cast1_reg_10146 + tmp44_fu_7934_p2);

assign tmp_241_fu_7945_p1 = tmp_240_fu_7940_p2;

assign tmp_242_cast_fu_8000_p1 = $signed(tmp_242_fu_7996_p2);

assign tmp_242_fu_7996_p2 = (tmp_238_reg_10303 + i5_cast102_cast_reg_10185);

assign tmp_243_fu_8004_p1 = $unsigned(tmp_242_cast_fu_8000_p1);

assign tmp_244_fu_4857_p2 = (tmp10_fu_4851_p2 + co_cast144_cast_reg_8891);

assign tmp_245_cast_fu_7964_p1 = $signed(tmp_245_fu_7959_p2);

assign tmp_245_fu_7959_p2 = (i5_cast104_cast1_reg_10174 + tmp45_fu_7953_p2);

assign tmp_246_fu_7968_p1 = $unsigned(tmp_245_cast_fu_7964_p1);

assign tmp_247_fu_4951_p2 = (tmp11_fu_4946_p2 + co_cast144_cast_reg_8891);

assign tmp_248_cast_fu_7984_p1 = $signed(tmp_248_fu_7979_p2);

assign tmp_248_fu_7979_p2 = (i5_cast104_cast1_reg_10174 + tmp46_fu_7973_p2);

assign tmp_249_fu_7988_p1 = $unsigned(tmp_248_cast_fu_7984_p1);

assign tmp_250_fu_4961_p2 = (tmp12_fu_4956_p2 + co_cast144_cast_reg_8891);

assign tmp_251_fu_8017_p2 = (i5_cast105_cast_reg_10159 + tmp47_fu_8011_p2);

assign tmp_252_fu_8022_p1 = tmp_251_fu_8017_p2;

assign tmp_253_fu_5092_p2 = (tmp13_fu_5087_p2 + co_cast144_cast_reg_8891);

assign tmp_254_fu_8033_p2 = (i5_cast105_cast_reg_10159 + tmp48_fu_8027_p2);

assign tmp_255_fu_8038_p1 = tmp_254_fu_8033_p2;

assign tmp_256_fu_5102_p2 = (tmp14_fu_5097_p2 + co_cast144_cast_reg_8891);

assign tmp_257_fu_8058_p2 = (i5_cast105_cast_reg_10159 + tmp49_fu_8053_p2);

assign tmp_258_fu_8063_p1 = tmp_257_fu_8058_p2;

assign tmp_259_fu_5112_p2 = (tmp15_fu_5107_p2 + co_cast144_cast_reg_8891);

assign tmp_260_fu_8073_p2 = (i5_cast105_cast_reg_10159 + tmp50_fu_8068_p2);

assign tmp_261_fu_8078_p1 = tmp_260_fu_8073_p2;

assign tmp_262_fu_5206_p2 = (tmp16_fu_5201_p2 + co_cast143_cast_reg_8910);

assign tmp_263_fu_8088_p2 = (i5_cast105_cast_reg_10159 + tmp51_fu_8083_p2);

assign tmp_264_fu_8093_p1 = tmp_263_fu_8088_p2;

assign tmp_265_fu_5216_p2 = (tmp17_fu_5211_p2 + co_cast143_cast_reg_8910);

assign tmp_266_fu_8103_p2 = (i5_cast105_cast_reg_10159 + tmp52_fu_8098_p2);

assign tmp_267_fu_8108_p1 = tmp_266_fu_8103_p2;

assign tmp_268_fu_4646_p2 = (tmp19_cast_fu_4642_p1 + co_cast2_reg_8882);

assign tmp_269_cast_fu_8123_p1 = $signed(tmp_269_fu_8118_p2);

assign tmp_269_fu_8118_p2 = (i5_cast105_cast1_reg_10146 + tmp53_fu_8113_p2);

assign tmp_270_fu_8127_p1 = $unsigned(tmp_269_cast_fu_8123_p1);

assign tmp_271_fu_8137_p2 = (i5_cast105_cast1_reg_10146 + tmp54_fu_8132_p2);

assign tmp_272_cast_fu_8142_p1 = $signed(tmp_271_fu_8137_p2);

assign tmp_272_fu_8146_p1 = $unsigned(tmp_272_cast_fu_8142_p1);

assign tmp_273_fu_8156_p2 = (i5_cast105_cast1_reg_10146 + tmp55_fu_8151_p2);

assign tmp_274_fu_8164_p1 = $unsigned(tmp_275_cast_fu_8161_p1);

assign tmp_275_cast_fu_8161_p1 = $signed(tmp_273_reg_10432);

assign tmp_275_fu_8048_p2 = (i5_cast104_cast1_reg_10174 + tmp56_fu_8043_p2);

assign tmp_276_fu_8172_p1 = $unsigned(tmp_278_cast_fu_8169_p1);

assign tmp_277_fu_8193_p2 = (i5_cast2_reg_10130 + tmp57_cast_fu_8189_p1);

assign tmp_278_cast_fu_8169_p1 = $signed(tmp_275_reg_10397);

assign tmp_278_fu_8198_p1 = tmp_277_fu_8193_p2;

assign tmp_279_fu_8209_p2 = (i5_cast2_reg_10130 + tmp58_fu_8203_p2);

assign tmp_280_fu_8214_p1 = tmp_279_fu_8209_p2;

assign tmp_281_fu_8224_p2 = (i5_cast2_reg_10130 + tmp59_fu_8219_p2);

assign tmp_282_fu_8229_p1 = tmp_281_fu_8224_p2;

assign tmp_283_fu_8239_p2 = (i5_cast2_reg_10130 + tmp60_fu_8234_p2);

assign tmp_284_fu_8244_p1 = tmp_283_fu_8239_p2;

assign tmp_285_fu_8254_p2 = (i5_cast2_reg_10130 + tmp61_fu_8249_p2);

assign tmp_286_fu_8259_p1 = tmp_285_fu_8254_p2;

assign tmp_287_fu_8269_p2 = (i5_cast2_reg_10130 + tmp62_fu_8264_p2);

assign tmp_288_fu_8274_p1 = tmp_287_fu_8269_p2;

assign tmp_289_fu_8284_p2 = (i5_cast2_reg_10130 + tmp63_fu_8279_p2);

assign tmp_290_fu_8289_p1 = tmp_289_fu_8284_p2;

assign tmp_291_fu_8299_p2 = (i5_cast2_reg_10130 + tmp64_fu_8294_p2);

assign tmp_292_fu_8304_p1 = tmp_291_fu_8299_p2;

assign tmp_293_fu_8314_p2 = (i5_cast2_reg_10130 + tmp65_fu_8309_p2);

assign tmp_294_fu_8319_p1 = tmp_293_fu_8314_p2;

assign tmp_295_fu_8329_p2 = (i5_cast2_reg_10130 + tmp66_fu_8324_p2);

assign tmp_296_fu_8334_p1 = tmp_295_fu_8329_p2;

assign tmp_297_fu_8344_p2 = (i5_cast2_reg_10130 + tmp67_fu_8339_p2);

assign tmp_298_fu_8349_p1 = tmp_297_fu_8344_p2;

assign tmp_299_fu_8359_p2 = (i5_cast2_reg_10130 + tmp68_fu_8354_p2);

assign tmp_300_fu_8364_p1 = tmp_299_fu_8359_p2;

assign tmp_301_fu_8374_p2 = (i5_cast105_cast_reg_10159 + tmp69_fu_8369_p2);

assign tmp_302_fu_8383_p1 = $unsigned(tmp_317_cast_fu_8379_p1);

assign tmp_303_fu_8393_p2 = (i5_cast105_cast_reg_10159 + tmp70_fu_8388_p2);

assign tmp_304_fu_8402_p1 = $unsigned(tmp_320_cast_fu_8398_p1);

assign tmp_305_fu_8412_p2 = (i5_cast105_cast_reg_10159 + tmp71_fu_8407_p2);

assign tmp_306_fu_8421_p1 = $unsigned(tmp_323_cast_fu_8417_p1);

assign tmp_307_fu_8431_p2 = (i5_cast105_cast_reg_10159 + tmp72_fu_8426_p2);

assign tmp_308_fu_8440_p1 = $unsigned(tmp_326_cast_fu_8436_p1);

assign tmp_309_cast1_fu_6386_p1 = h_reg_3191;

assign tmp_309_cast2_fu_6390_p1 = h_reg_3191;

assign tmp_309_cast_fu_6335_p1 = h_reg_3191;

assign tmp_309_fu_3674_p3 = {{tmp_s_fu_3668_p2}, {5'd0}};

assign tmp_310_fu_5422_p2 = (p_shl12_cast_fu_5402_p1 - p_shl13_cast_fu_5418_p1);

assign tmp_311_fu_5438_p2 = (tmp20_fu_5432_p2 + co_cast2_reg_8882);

assign tmp_312_fu_5453_p2 = (p_shl13_cast1_fu_5414_p1 - p_shl14_cast_fu_5449_p1);

assign tmp_313_fu_5459_p2 = (tmp_312_fu_5453_p2 + tmp_189_cast_reg_8989);

assign tmp_314_fu_5501_p2 = (tmp21_fu_5495_p2 + co_cast2_reg_8882);

assign tmp_315_fu_5595_p2 = (tmp22_fu_5590_p2 + co_cast2_reg_8882);

assign tmp_316_fu_5605_p2 = (tmp23_fu_5600_p2 + co_cast2_reg_8882);

assign tmp_317_cast_fu_8379_p1 = $signed(tmp_301_fu_8374_p2);

assign tmp_317_fu_5711_p2 = (tmp24_fu_5705_p2 + co_cast144_cast_reg_8891);

assign tmp_318_fu_5722_p2 = (tmp25_fu_5716_p2 + co_cast1_reg_8874);

assign tmp_319_fu_5820_p2 = (tmp26_fu_5815_p2 + co_cast1_reg_8874);

assign tmp_320_cast_fu_8398_p1 = $signed(tmp_303_fu_8393_p2);

assign tmp_320_fu_5830_p2 = (tmp27_fu_5825_p2 + co_cast1_reg_8874);

assign tmp_321_fu_5840_p2 = (tmp28_fu_5835_p2 + co_cast1_reg_8874);

assign tmp_322_fu_8485_p2 = (p_shl10_cast_fu_8469_p1 - p_shl11_cast_fu_8481_p1);

assign tmp_323_cast_fu_8417_p1 = $signed(tmp_305_fu_8412_p2);

assign tmp_323_fu_8503_p2 = (i5_cast105_cast_reg_10159 + tmp73_fu_8497_p2);

assign tmp_324_fu_8512_p1 = $unsigned(tmp_393_cast_fu_8508_p1);

assign tmp_325_fu_8540_p2 = (tmp_322_reg_10549 + i5_cast104_cast1_reg_10174);

assign tmp_326_cast_fu_8436_p1 = $signed(tmp_307_fu_8431_p2);

assign tmp_326_fu_8548_p1 = $unsigned(tmp_395_cast_fu_8544_p1);

assign tmp_327_fu_8523_p2 = (i5_cast105_cast1_reg_10146 + tmp74_fu_8517_p2);

assign tmp_328_fu_8532_p1 = $unsigned(tmp_398_cast_fu_8528_p1);

assign tmp_329_fu_8567_p2 = (i5_cast1_reg_10114 + tmp75_cast_fu_8563_p1);

assign tmp_330_cast127_cast_1_fu_4286_p1 = $signed(tmp_221_fu_4280_p2);

assign tmp_330_cast127_cast_fu_4386_p1 = $signed(tmp_221_reg_9147);

assign tmp_330_cast1_fu_4829_p1 = $signed(tmp_221_reg_9147);

assign tmp_330_fu_8572_p1 = tmp_329_fu_8567_p2;

assign tmp_331_fu_8583_p2 = (i5_cast1_reg_10114 + tmp76_fu_8577_p2);

assign tmp_332_fu_8588_p1 = tmp_331_fu_8583_p2;

assign tmp_333_fu_8598_p2 = (i5_cast1_reg_10114 + tmp77_fu_8593_p2);

assign tmp_334_fu_8603_p1 = tmp_333_fu_8598_p2;

assign tmp_335_fu_8613_p2 = (i5_cast1_reg_10114 + tmp78_fu_8608_p2);

assign tmp_336_fu_8618_p1 = tmp_335_fu_8613_p2;

assign tmp_337_fu_8628_p2 = (i5_cast1_reg_10114 + tmp79_fu_8623_p2);

assign tmp_338_fu_8633_p1 = tmp_337_fu_8628_p2;

assign tmp_339_fu_8643_p2 = (i5_cast1_reg_10114 + tmp80_fu_8638_p2);

assign tmp_340_fu_8648_p1 = tmp_339_fu_8643_p2;

assign tmp_341_fu_8658_p2 = (i5_cast1_reg_10114 + tmp81_fu_8653_p2);

assign tmp_342_fu_8663_p1 = tmp_341_fu_8658_p2;

assign tmp_343_fu_8673_p2 = (i5_cast1_reg_10114 + tmp82_fu_8668_p2);

assign tmp_344_fu_8678_p1 = tmp_343_fu_8673_p2;

assign tmp_345_fu_8688_p2 = (i5_cast1_reg_10114 + tmp83_fu_8683_p2);

assign tmp_346_fu_8693_p1 = tmp_345_fu_8688_p2;

assign tmp_347_fu_8703_p2 = (i5_cast1_reg_10114 + tmp84_fu_8698_p2);

assign tmp_348_fu_8708_p1 = tmp_347_fu_8703_p2;

assign tmp_349_fu_8718_p2 = (i5_cast1_reg_10114 + tmp85_fu_8713_p2);

assign tmp_350_fu_8723_p1 = tmp_349_fu_8718_p2;

assign tmp_351_fu_8733_p2 = (i5_cast1_reg_10114 + tmp86_fu_8728_p2);

assign tmp_352_fu_8738_p1 = tmp_351_fu_8733_p2;

assign tmp_353_fu_6434_p2 = (p_shl15_cast_fu_6418_p1 - p_shl16_cast_fu_6430_p1);

assign tmp_354_fu_6454_p2 = (tmp29_fu_6448_p2 + co2_cast119_cast_reg_9610);

assign tmp_355_cast_fu_6459_p1 = tmp_354_fu_6454_p2;

assign tmp_355_fu_3686_p3 = {{tmp_s_fu_3668_p2}, {3'd0}};

assign tmp_356_fu_6440_p2 = (co2_cast5_reg_9619 + tmp_353_fu_6434_p2);

assign tmp_357_cast_fu_6493_p1 = $unsigned(tmp_474_cast_fu_6490_p1);

assign tmp_357_fu_3698_p2 = (p_shl33_cast_fu_3682_p1 - p_shl34_cast_fu_3694_p1);

assign tmp_358_fu_6541_p2 = (tmp30_fu_6535_p2 + co2_cast119_cast_reg_9610);

assign tmp_359_cast_fu_6546_p1 = tmp_358_fu_6541_p2;

assign tmp_359_fu_3714_p3 = {{tmp_170_fu_3708_p2}, {5'd0}};

assign tmp_360_fu_3726_p3 = {{tmp_170_fu_3708_p2}, {3'd0}};

assign tmp_361_fu_6665_p2 = (tmp31_cast_fu_6661_p1 + co2_cast120_cast_reg_9601);

assign tmp_362_cast_fu_3664_p1 = $signed(tmp_220_fu_3658_p2);

assign tmp_362_fu_3738_p2 = (p_shl31_cast_fu_3722_p1 - p_shl32_cast_fu_3734_p1);

assign tmp_363_cast_fu_6670_p1 = tmp_361_fu_6665_p2;

assign tmp_363_fu_3754_p3 = {{tmp_171_fu_3748_p2}, {5'd0}};

assign tmp_364_fu_3766_p3 = {{tmp_171_fu_3748_p2}, {3'd0}};

assign tmp_365_fu_6707_p2 = (tmp32_fu_6701_p2 + co2_cast120_cast_reg_9601);

assign tmp_366_fu_3778_p2 = (p_shl29_cast_fu_3762_p1 - p_shl30_cast_fu_3774_p1);

assign tmp_367_cast_fu_6712_p1 = tmp_365_fu_6707_p2;

assign tmp_367_fu_3788_p4 = {{{{1'd1}, {co_reg_3124}}}, {5'd0}};

assign tmp_368_cast_fu_3704_p1 = $signed(tmp_357_fu_3698_p2);

assign tmp_368_fu_3798_p1 = $signed(tmp_367_fu_3788_p4);

assign tmp_369_fu_6749_p2 = (tmp33_fu_6743_p2 + co2_cast120_cast_reg_9601);

assign tmp_370_fu_3806_p4 = {{{{1'd1}, {co_reg_3124}}}, {3'd0}};

assign tmp_371_cast_fu_6754_p1 = tmp_369_fu_6749_p2;

assign tmp_371_fu_3816_p1 = $signed(tmp_370_fu_3806_p4);

assign tmp_372_fu_6787_p2 = (tmp34_fu_6781_p2 + co2_cast120_cast_reg_9601);

assign tmp_373_cast_fu_6792_p1 = tmp_372_fu_6787_p2;

assign tmp_373_fu_3824_p2 = (p_shl27_cast_fu_3802_p1 - p_shl28_cast_fu_3820_p1);

assign tmp_374_fu_6824_p2 = (tmp35_fu_6819_p2 + co2_cast119_cast_reg_9610);

assign tmp_375_cast_fu_6833_p1 = $unsigned(tmp_492_cast_fu_6829_p1);

assign tmp_375_fu_3840_p3 = {{tmp_172_fu_3834_p2}, {5'd0}};

assign tmp_376_fu_6869_p2 = (tmp36_fu_6864_p2 + co2_cast119_cast_reg_9610);

assign tmp_377_cast_fu_6937_p1 = $unsigned(tmp_495_cast_fu_6934_p1);

assign tmp_377_fu_3852_p3 = {{tmp_172_fu_3834_p2}, {3'd0}};

assign tmp_378_fu_6977_p2 = (tmp37_fu_6971_p2 + co2_cast2_reg_9592);

assign tmp_379_cast_fu_7126_p1 = tmp_378_reg_9939;

assign tmp_379_fu_3864_p2 = (p_shl25_cast_fu_3848_p1 - p_shl26_cast_fu_3860_p1);

assign tmp_380_fu_6988_p2 = (tmp38_fu_6982_p2 + co2_cast2_reg_9592);

assign tmp_381_cast_fu_6993_p1 = tmp_380_fu_6988_p2;

assign tmp_381_fu_3880_p3 = {{tmp_173_fu_3874_p2}, {5'd0}};

assign tmp_382_fu_7259_p2 = (p_shl17_cast_fu_7243_p1 - p_shl18_cast_fu_7255_p1);

assign tmp_383_fu_7280_p2 = (co2_cast2_reg_9592 + tmp39_fu_7274_p2);

assign tmp_384_cast_fu_7285_p1 = tmp_383_fu_7280_p2;

assign tmp_384_fu_3892_p3 = {{tmp_173_fu_3874_p2}, {3'd0}};

assign tmp_385_fu_7312_p2 = (tmp_382_reg_10009 + co2_cast119_cast_reg_9610);

assign tmp_386_cast_fu_7320_p1 = $unsigned(tmp_509_cast_fu_7316_p1);

assign tmp_386_fu_3904_p2 = (p_shl23_cast_fu_3888_p1 - p_shl24_cast_fu_3900_p1);

assign tmp_387_fu_7464_p2 = (co2_cast2_reg_9592 + tmp40_fu_7459_p2);

assign tmp_388_cast_fu_7469_p1 = tmp_387_fu_7464_p2;

assign tmp_388_fu_3920_p3 = {{tmp_174_fu_3914_p2}, {5'd0}};

assign tmp_389_fu_7501_p2 = (co2_cast2_reg_9592 + tmp41_fu_7496_p2);

assign tmp_390_cast_fu_7506_p1 = tmp_389_fu_7501_p2;

assign tmp_390_fu_3932_p3 = {{tmp_174_fu_3914_p2}, {3'd0}};

assign tmp_391_cast_cast1_fu_8491_p1 = $signed(tmp_322_reg_10549);

assign tmp_391_cast_cast_fu_8494_p1 = $signed(tmp_322_reg_10549);

assign tmp_391_cast_fu_8537_p1 = $signed(tmp_322_reg_10549);

assign tmp_391_fu_7369_p2 = (co2_cast120_cast_reg_9601 + tmp42_fu_7363_p2);

assign tmp_392_cast_fu_7588_p1 = $unsigned(tmp_515_cast_fu_7585_p1);

assign tmp_392_fu_3944_p2 = (p_shl21_cast_fu_3928_p1 - p_shl22_cast_fu_3940_p1);

assign tmp_393_cast_fu_8508_p1 = $signed(tmp_323_fu_8503_p2);

assign tmp_393_fu_7380_p2 = (co2_cast1_reg_9587 + tmp43_fu_7374_p2);

assign tmp_394_cast_fu_7385_p1 = tmp_393_fu_7380_p2;

assign tmp_394_fu_3954_p4 = {{{{2'd2}, {co_reg_3124}}}, {5'd0}};

assign tmp_395_cast_fu_8544_p1 = $signed(tmp_325_fu_8540_p2);

assign tmp_395_fu_3964_p1 = $signed(tmp_394_fu_3954_p4);

assign tmp_396_fu_3972_p4 = {{{{2'd2}, {co_reg_3124}}}, {3'd0}};

assign tmp_397_fu_3982_p1 = $signed(tmp_396_fu_3972_p4);

assign tmp_398_cast_fu_8528_p1 = $signed(tmp_327_fu_8523_p2);

assign tmp_398_fu_3990_p2 = (p_shl19_cast_fu_3968_p1 - p_shl20_cast_fu_3986_p1);

assign tmp_399_fu_5994_p3 = {{co2_reg_3169}, {2'd0}};

assign tmp_400_fu_6006_p2 = (p_shl101_cast_fu_6002_p1 - co2_cast119_cast_fu_5970_p1);

assign tmp_401_fu_6026_p3 = {{tmp_178_fu_6016_p2}, {2'd0}};

assign tmp_402_fu_6038_p2 = (p_shl100_cast_fu_6034_p1 - tmp_179_cast_fu_6022_p1);

assign tmp_403_fu_6054_p3 = {{tmp_180_fu_6044_p2}, {2'd0}};

assign tmp_404_fu_6066_p2 = (p_shl99_cast_fu_6062_p1 - tmp_181_cast_fu_6050_p1);

assign tmp_405_fu_6082_p3 = {{tmp_182_fu_6072_p2}, {2'd0}};

assign tmp_406_fu_6094_p2 = (p_shl98_cast_fu_6090_p1 - tmp_183_cast_fu_6078_p1);

assign tmp_407_fu_6116_p4 = {{{{1'd1}, {co2_reg_3169}}}, {2'd0}};

assign tmp_408_fu_6126_p1 = $signed(tmp_407_fu_6116_p4);

assign tmp_409_fu_6134_p2 = (p_shl97_cast_fu_6130_p1 - tmp_185_cast_fu_6112_p1);

assign tmp_410_fu_4122_p2 = ($signed(tmp_186_cast8_fu_4118_p1) + $signed(tmp_362_cast_reg_8929));

assign tmp_411_fu_4132_p2 = ($signed(tmp_186_cast7_fu_4114_p1) + $signed(tmp_368_cast_reg_8934));

assign tmp_412_fu_4151_p2 = ($signed(tmp_186_cast6_fu_4147_p1) + $signed(tmp_439_cast_reg_8939));

assign tmp_413_fu_4161_p2 = ($signed(tmp_186_cast6_fu_4147_p1) + $signed(tmp_442_cast_reg_8944));

assign tmp_414_fu_4171_p2 = ($signed(tmp_186_cast6_fu_4147_p1) + $signed(tmp_447_cast_reg_8949));

assign tmp_415_fu_4184_p2 = ($signed(tmp_186_cast5_fu_4176_p1) + $signed(tmp_450_cast_reg_8954));

assign tmp_416_fu_4194_p2 = ($signed(tmp_186_cast5_fu_4176_p1) + $signed(tmp_453_cast_reg_8959));

assign tmp_417_fu_4199_p2 = ($signed(tmp_186_cast5_fu_4176_p1) + $signed(tmp_456_cast_reg_8964));

assign tmp_418_fu_4204_p2 = ($signed(tmp_186_cast5_fu_4176_p1) + $signed(tmp_461_cast_reg_8969));

assign tmp_419_fu_6188_p2 = ($signed(tmp_218_cast_fu_6184_p1) + $signed(tmp_467_cast_reg_9632));

assign tmp_420_fu_6209_p2 = ($signed(p_shl106_cast_fu_6205_p1) - $signed(tmp_486_cast_fu_6193_p1));

assign tmp_421_fu_6215_p2 = (tmp_218_cast_fu_6184_p1 + tmp_402_reg_9637);

assign tmp_422_fu_6236_p2 = ($signed(p_shl105_cast_fu_6232_p1) - $signed(tmp_489_cast_fu_6220_p1));

assign tmp_423_fu_6242_p2 = (tmp_218_cast7_fu_6180_p1 + tmp_404_reg_9642);

assign tmp_424_fu_6263_p2 = ($signed(p_shl104_cast_fu_6259_p1) - $signed(tmp_492_cast1_fu_6247_p1));

assign tmp_425_fu_6269_p2 = (tmp_218_cast7_fu_6180_p1 + tmp_406_reg_9647);

assign tmp_426_fu_6290_p2 = ($signed(p_shl103_cast_fu_6286_p1) - $signed(tmp_495_cast1_fu_6274_p1));

assign tmp_427_fu_6296_p2 = ($signed(tmp_218_cast6_fu_6176_p1) + $signed(tmp_476_cast_reg_9652));

assign tmp_428_fu_6317_p2 = ($signed(p_shl102_cast_fu_6313_p1) - $signed(tmp_498_cast_fu_6301_p1));

assign tmp_429_fu_4389_p3 = {{tmp_222_reg_9159}, {5'd0}};

assign tmp_430_fu_4400_p3 = {{tmp_222_reg_9159}, {3'd0}};

assign tmp_431_fu_4411_p2 = (p_shl75_cast_fu_4396_p1 - p_shl76_cast_fu_4407_p1);

assign tmp_432_fu_4421_p2 = ($signed(tmp_186_cast3_reg_9114) + $signed(tmp_505_cast2_fu_4417_p1));

assign tmp_433_fu_4336_p3 = {{tmp_224_fu_4331_p2}, {6'd0}};

assign tmp_434_fu_4344_p3 = {{tmp_224_fu_4331_p2}, {4'd0}};

assign tmp_435_fu_4356_p2 = ($signed(tmp_433_fu_4336_p3) - $signed(p_shl74_cast_fu_4352_p1));

assign tmp_436_fu_4362_p2 = ($signed(tmp_188_cast_reg_9134) + $signed(tmp_435_fu_4356_p2));

assign tmp_437_fu_4431_p3 = {{tmp_225_reg_9170}, {5'd0}};

assign tmp_438_cast1_fu_5610_p1 = $signed(tmp_310_reg_9448);

assign tmp_438_cast_cast_fu_5613_p1 = $signed(tmp_310_reg_9448);

assign tmp_438_cast_fu_5428_p1 = $signed(tmp_310_fu_5422_p2);

assign tmp_438_fu_4442_p3 = {{tmp_225_reg_9170}, {3'd0}};

assign tmp_439_cast_fu_3744_p1 = $signed(tmp_362_fu_3738_p2);

assign tmp_439_fu_4453_p2 = (p_shl71_cast_fu_4438_p1 - p_shl72_cast_fu_4449_p1);

assign tmp_440_fu_4463_p2 = ($signed(tmp_186_cast3_reg_9114) + $signed(tmp_517_cast_fu_4459_p1));

assign tmp_441_fu_4535_p3 = {{tmp_226_reg_9205}, {5'd0}};

assign tmp_442_cast_fu_3784_p1 = $signed(tmp_366_fu_3778_p2);

assign tmp_442_fu_4546_p3 = {{tmp_226_reg_9205}, {3'd0}};

assign tmp_443_fu_4557_p2 = (p_shl69_cast_fu_4542_p1 - p_shl70_cast_fu_4553_p1);

assign tmp_444_fu_4567_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_521_cast_fu_4563_p1));

assign tmp_445_fu_4577_p3 = {{tmp_227_reg_9211}, {5'd0}};

assign tmp_446_fu_4588_p3 = {{tmp_227_reg_9211}, {3'd0}};

assign tmp_447_cast_fu_3830_p1 = $signed(tmp_373_fu_3824_p2);

assign tmp_447_fu_4599_p2 = (p_shl67_cast_fu_4584_p1 - p_shl68_cast_fu_4595_p1);

assign tmp_448_fu_4609_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_525_cast_fu_4605_p1));

assign tmp_449_fu_4651_p3 = {{tmp_228_reg_9259}, {5'd0}};

assign tmp_450_cast_fu_3870_p1 = $signed(tmp_379_fu_3864_p2);

assign tmp_450_fu_4662_p3 = {{tmp_228_reg_9259}, {3'd0}};

assign tmp_451_fu_4673_p2 = (p_shl65_cast_fu_4658_p1 - p_shl66_cast_fu_4669_p1);

assign tmp_452_fu_4683_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_529_cast_fu_4679_p1));

assign tmp_453_cast_fu_3910_p1 = $signed(tmp_386_fu_3904_p2);

assign tmp_453_fu_4693_p3 = {{tmp_229_reg_9265}, {5'd0}};

assign tmp_454_fu_4704_p3 = {{tmp_229_reg_9265}, {3'd0}};

assign tmp_455_fu_4715_p2 = (p_shl63_cast_fu_4700_p1 - p_shl64_cast_fu_4711_p1);

assign tmp_456_cast_fu_3950_p1 = $signed(tmp_392_fu_3944_p2);

assign tmp_456_fu_4725_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_533_cast_fu_4721_p1));

assign tmp_457_fu_4745_p3 = {{tmp_230_fu_4740_p2}, {5'd0}};

assign tmp_458_fu_4757_p3 = {{tmp_230_fu_4740_p2}, {3'd0}};

assign tmp_459_fu_4769_p2 = (p_shl61_cast_fu_4753_p1 - p_shl62_cast_fu_4765_p1);

assign tmp_460_fu_4779_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_537_cast_fu_4775_p1));

assign tmp_461_cast_fu_3996_p1 = $signed(tmp_398_fu_3990_p2);

assign tmp_461_fu_4784_p3 = {{tmp_234_reg_9217}, {5'd0}};

assign tmp_462_fu_4791_p1 = $signed(tmp_461_fu_4784_p3);

assign tmp_463_fu_4799_p3 = {{tmp_234_reg_9217}, {3'd0}};

assign tmp_464_fu_4806_p1 = $signed(tmp_463_fu_4799_p3);

assign tmp_465_fu_4814_p2 = (p_shl59_cast_fu_4795_p1 - p_shl60_cast_fu_4810_p1);

assign tmp_466_fu_4824_p2 = ($signed(tmp_186_cast2_reg_9104) + $signed(tmp_543_cast_fu_4820_p1));

assign tmp_467_cast_fu_6012_p1 = $signed(tmp_400_fu_6006_p2);

assign tmp_467_fu_4862_p3 = {{tmp_239_reg_9316}, {5'd0}};

assign tmp_468_fu_4873_p3 = {{tmp_239_reg_9316}, {3'd0}};

assign tmp_469_fu_4884_p2 = (p_shl57_cast_fu_4869_p1 - p_shl58_cast_fu_4880_p1);

assign tmp_470_cast110_cast_fu_6445_p1 = $signed(tmp_353_reg_9813);

assign tmp_470_cast1_fu_6874_p1 = $signed(tmp_353_reg_9813);

assign tmp_470_cast2_fu_6578_p1 = $signed(tmp_353_reg_9813);

assign tmp_470_fu_4894_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_547_cast_fu_4890_p1));

assign tmp_471_fu_4904_p3 = {{tmp_244_reg_9322}, {5'd0}};

assign tmp_472_fu_4915_p3 = {{tmp_244_reg_9322}, {3'd0}};

assign tmp_473_fu_4926_p2 = (p_shl55_cast_fu_4911_p1 - p_shl56_cast_fu_4922_p1);

assign tmp_474_cast_fu_6490_p1 = $signed(tmp_356_reg_9821);

assign tmp_474_fu_4936_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_551_cast_fu_4932_p1));

assign tmp_475_fu_5003_p3 = {{tmp_247_reg_9338}, {5'd0}};

assign tmp_476_cast_fu_6140_p1 = $signed(tmp_409_fu_6134_p2);

assign tmp_476_fu_5014_p3 = {{tmp_247_reg_9338}, {3'd0}};

assign tmp_477_cast_fu_4127_p1 = $signed(tmp_410_fu_4122_p2);

assign tmp_477_fu_5025_p2 = (p_shl53_cast_fu_5010_p1 - p_shl54_cast_fu_5021_p1);

assign tmp_478_cast_fu_4137_p1 = $signed(tmp_411_fu_4132_p2);

assign tmp_478_fu_5035_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_555_cast_fu_5031_p1));

assign tmp_479_cast_fu_4156_p1 = $signed(tmp_412_fu_4151_p2);

assign tmp_479_fu_5045_p3 = {{tmp_250_reg_9344}, {5'd0}};

assign tmp_480_cast_fu_4166_p1 = $signed(tmp_413_fu_4161_p2);

assign tmp_480_fu_5056_p3 = {{tmp_250_reg_9344}, {3'd0}};

assign tmp_481_cast_fu_4180_p1 = $signed(tmp_414_reg_9045);

assign tmp_481_fu_5067_p2 = (p_shl51_cast_fu_5052_p1 - p_shl52_cast_fu_5063_p1);

assign tmp_482_cast_fu_4189_p1 = $signed(tmp_415_fu_4184_p2);

assign tmp_482_fu_5077_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_559_cast_fu_5073_p1));

assign tmp_483_cast_fu_4209_p1 = $signed(tmp_416_reg_9060);

assign tmp_483_fu_5117_p3 = {{tmp_253_reg_9365}, {5'd0}};

assign tmp_484_cast_fu_4213_p1 = $signed(tmp_417_reg_9065);

assign tmp_484_fu_5128_p3 = {{tmp_253_reg_9365}, {3'd0}};

assign tmp_485_cast_fu_4217_p1 = $signed(tmp_418_reg_9070);

assign tmp_485_fu_5139_p2 = (p_shl49_cast_fu_5124_p1 - p_shl50_cast_fu_5135_p1);

assign tmp_486_cast_fu_6193_p1 = $signed(tmp_419_fu_6188_p2);

assign tmp_486_fu_5149_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_563_cast_fu_5145_p1));

assign tmp_487_fu_5159_p3 = {{tmp_256_reg_9371}, {5'd0}};

assign tmp_488_fu_5170_p3 = {{tmp_256_reg_9371}, {3'd0}};

assign tmp_489_cast_fu_6220_p1 = $signed(tmp_421_fu_6215_p2);

assign tmp_489_fu_5181_p2 = (p_shl47_cast_fu_5166_p1 - p_shl48_cast_fu_5177_p1);

assign tmp_490_fu_5191_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_567_cast_fu_5187_p1));

assign tmp_491_fu_5221_p3 = {{tmp_259_reg_9377}, {5'd0}};

assign tmp_492_cast1_fu_6247_p1 = $signed(tmp_423_fu_6242_p2);

assign tmp_492_cast_fu_6829_p1 = $signed(tmp_374_fu_6824_p2);

assign tmp_492_fu_5232_p3 = {{tmp_259_reg_9377}, {3'd0}};

assign tmp_493_fu_5243_p2 = (p_shl45_cast_fu_5228_p1 - p_shl46_cast_fu_5239_p1);

assign tmp_494_fu_5253_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_571_cast_fu_5249_p1));

assign tmp_495_cast1_fu_6274_p1 = $signed(tmp_425_fu_6269_p2);

assign tmp_495_cast_fu_6934_p1 = $signed(tmp_376_reg_9905);

assign tmp_495_fu_5263_p3 = {{tmp_262_reg_9393}, {5'd0}};

assign tmp_496_fu_5270_p1 = $signed(tmp_495_fu_5263_p3);

assign tmp_497_fu_5278_p3 = {{tmp_262_reg_9393}, {3'd0}};

assign tmp_498_cast_fu_6301_p1 = $signed(tmp_427_fu_6296_p2);

assign tmp_498_fu_5285_p1 = $signed(tmp_497_fu_5278_p3);

assign tmp_499_fu_5293_p2 = (p_shl43_cast_fu_5274_p1 - p_shl44_cast_fu_5289_p1);

assign tmp_500_fu_5303_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_577_cast_fu_5299_p1));

assign tmp_501_fu_5313_p3 = {{tmp_265_reg_9399}, {5'd0}};

assign tmp_502_fu_5320_p1 = $signed(tmp_501_fu_5313_p3);

assign tmp_503_fu_5328_p3 = {{tmp_265_reg_9399}, {3'd0}};

assign tmp_504_fu_5335_p1 = $signed(tmp_503_fu_5328_p3);

assign tmp_505_cast1_fu_7265_p1 = $signed(tmp_382_reg_10009);

assign tmp_505_cast2_fu_4417_p1 = $signed(tmp_431_fu_4411_p2);

assign tmp_505_cast_cast_fu_7271_p1 = $signed(tmp_382_reg_10009);

assign tmp_505_cast_fu_7268_p1 = $signed(tmp_382_reg_10009);

assign tmp_505_fu_5343_p2 = (p_shl41_cast_fu_5324_p1 - p_shl42_cast_fu_5339_p1);

assign tmp_506_cast_fu_4426_p1 = $signed(tmp_432_fu_4421_p2);

assign tmp_506_fu_5353_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_583_cast_fu_5349_p1));

assign tmp_507_fu_4508_p1 = $signed(tmp_437_fu_4431_p3);

assign tmp_508_fu_4516_p1 = $signed(tmp_438_fu_4442_p3);

assign tmp_509_cast_fu_7316_p1 = $signed(tmp_385_fu_7312_p2);

assign tmp_509_fu_4524_p2 = (p_shl39_cast_fu_4512_p1 - p_shl40_cast_fu_4520_p1);

assign tmp_510_fu_5361_p2 = ($signed(tmp_186_cast1_reg_9090) + $signed(tmp_589_cast_fu_5358_p1));

assign tmp_511_fu_4966_p3 = {{tmp_268_reg_9271}, {5'd0}};

assign tmp_512_fu_4977_p3 = {{tmp_268_reg_9271}, {3'd0}};

assign tmp_513_fu_4988_p2 = (p_shl37_cast_fu_4973_p1 - p_shl38_cast_fu_4984_p1);

assign tmp_514_cast_fu_4530_p1 = $signed(tmp_436_reg_9165);

assign tmp_514_fu_4998_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_593_cast_fu_4994_p1));

assign tmp_515_cast_fu_7585_p1 = $signed(tmp_391_reg_10039);

assign tmp_515_fu_6339_p2 = (tmp_420_reg_9706 + tmp_309_cast_fu_6335_p1);

assign tmp_516_fu_6349_p2 = (tmp_422_reg_9711 + tmp_309_cast_fu_6335_p1);

assign tmp_517_cast_fu_4459_p1 = $signed(tmp_439_fu_4453_p2);

assign tmp_517_fu_6359_p2 = (tmp_424_reg_9716 + tmp_309_cast_reg_9739);

assign tmp_518_cast_fu_4468_p1 = $signed(tmp_440_fu_4463_p2);

assign tmp_518_fu_6368_p2 = (tmp_426_reg_9721 + tmp_309_cast_reg_9739);

assign tmp_519_fu_6377_p2 = (tmp_428_reg_9726 + tmp_309_cast_reg_9739);

assign tmp_520_fu_5506_p3 = {{tmp_311_reg_9460}, {5'd0}};

assign tmp_521_cast_fu_4563_p1 = $signed(tmp_443_fu_4557_p2);

assign tmp_521_fu_5517_p3 = {{tmp_311_reg_9460}, {3'd0}};

assign tmp_522_cast_fu_4572_p1 = $signed(tmp_444_fu_4567_p2);

assign tmp_522_fu_5528_p2 = (p_shl95_cast_fu_5513_p1 - p_shl96_cast_fu_5524_p1);

assign tmp_523_fu_5538_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_606_cast_fu_5534_p1));

assign tmp_524_fu_5464_p3 = {{tmp_313_fu_5459_p2}, {7'd0}};

assign tmp_525_cast_fu_4605_p1 = $signed(tmp_447_fu_4599_p2);

assign tmp_525_fu_5472_p3 = {{tmp_313_fu_5459_p2}, {5'd0}};

assign tmp_526_cast_fu_4614_p1 = $signed(tmp_448_fu_4609_p2);

assign tmp_526_fu_5484_p2 = ($signed(tmp_524_fu_5464_p3) - $signed(p_shl94_cast_fu_5480_p1));

assign tmp_527_fu_5490_p2 = ($signed(tmp_220_cast_reg_9176) + $signed(tmp_526_fu_5484_p2));

assign tmp_528_fu_5548_p3 = {{tmp_314_reg_9471}, {5'd0}};

assign tmp_529_cast_fu_4679_p1 = $signed(tmp_451_fu_4673_p2);

assign tmp_529_fu_5559_p3 = {{tmp_314_reg_9471}, {3'd0}};

assign tmp_530_cast_fu_4688_p1 = $signed(tmp_452_fu_4683_p2);

assign tmp_530_fu_5570_p2 = (p_shl91_cast_fu_5555_p1 - p_shl92_cast_fu_5566_p1);

assign tmp_531_fu_5580_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_617_cast_fu_5576_p1));

assign tmp_532_fu_5621_p3 = {{tmp_315_reg_9487}, {5'd0}};

assign tmp_533_cast_fu_4721_p1 = $signed(tmp_455_fu_4715_p2);

assign tmp_533_fu_5632_p3 = {{tmp_315_reg_9487}, {3'd0}};

assign tmp_534_cast_fu_4730_p1 = $signed(tmp_456_fu_4725_p2);

assign tmp_534_fu_5643_p2 = (p_shl89_cast_fu_5628_p1 - p_shl90_cast_fu_5639_p1);

assign tmp_535_fu_5653_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_621_cast_fu_5649_p1));

assign tmp_536_fu_5663_p3 = {{tmp_316_reg_9493}, {5'd0}};

assign tmp_537_cast_fu_4775_p1 = $signed(tmp_459_fu_4769_p2);

assign tmp_537_fu_5674_p3 = {{tmp_316_reg_9493}, {3'd0}};

assign tmp_538_cast_fu_4832_p1 = $signed(tmp_460_reg_9287);

assign tmp_538_fu_5685_p2 = (p_shl87_cast_fu_5670_p1 - p_shl88_cast_fu_5681_p1);

assign tmp_539_fu_5695_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_625_cast_fu_5691_p1));

assign tmp_540_fu_5727_p3 = {{tmp_317_reg_9527}, {5'd0}};

assign tmp_541_fu_5734_p1 = $signed(tmp_540_fu_5727_p3);

assign tmp_542_fu_5742_p3 = {{tmp_317_reg_9527}, {3'd0}};

assign tmp_543_cast_fu_4820_p1 = $signed(tmp_465_fu_4814_p2);

assign tmp_543_fu_5749_p1 = $signed(tmp_542_fu_5742_p3);

assign tmp_544_cast_fu_4836_p1 = $signed(tmp_466_reg_9292);

assign tmp_544_fu_5757_p2 = (p_shl85_cast_fu_5738_p1 - p_shl86_cast_fu_5753_p1);

assign tmp_545_fu_5767_p2 = ($signed(tmp_186_cast4_reg_9120) + $signed(tmp_631_cast_fu_5763_p1));

assign tmp_546_fu_5777_p3 = {{tmp_318_reg_9533}, {5'd0}};

assign tmp_547_cast_fu_4890_p1 = $signed(tmp_469_fu_4884_p2);

assign tmp_547_fu_5788_p3 = {{tmp_318_reg_9533}, {3'd0}};

assign tmp_548_cast_fu_4899_p1 = $signed(tmp_470_fu_4894_p2);

assign tmp_548_fu_5799_p2 = (p_shl83_cast_fu_5784_p1 - p_shl84_cast_fu_5795_p1);

assign tmp_549_fu_5805_p2 = (tmp_186_cast4_reg_9120 + tmp_548_fu_5799_p2);

assign tmp_550_fu_5845_p3 = {{tmp_319_reg_9549}, {5'd0}};

assign tmp_551_cast_fu_4932_p1 = $signed(tmp_473_fu_4926_p2);

assign tmp_551_fu_5856_p3 = {{tmp_319_reg_9549}, {3'd0}};

assign tmp_552_cast_fu_4941_p1 = $signed(tmp_474_fu_4936_p2);

assign tmp_552_fu_5867_p2 = (p_shl81_cast_fu_5852_p1 - p_shl82_cast_fu_5863_p1);

assign tmp_553_fu_5873_p2 = (tmp_186_cast4_reg_9120 + tmp_552_fu_5867_p2);

assign tmp_554_fu_5883_p3 = {{tmp_320_reg_9555}, {5'd0}};

assign tmp_555_cast_fu_5031_p1 = $signed(tmp_477_fu_5025_p2);

assign tmp_555_fu_5894_p3 = {{tmp_320_reg_9555}, {3'd0}};

assign tmp_556_cast_fu_5040_p1 = $signed(tmp_478_fu_5035_p2);

assign tmp_556_fu_5905_p2 = (p_shl79_cast_fu_5890_p1 - p_shl80_cast_fu_5901_p1);

assign tmp_557_fu_5911_p2 = (tmp_186_cast4_reg_9120 + tmp_556_fu_5905_p2);

assign tmp_558_fu_5921_p3 = {{tmp_321_reg_9561}, {5'd0}};

assign tmp_559_cast_fu_5073_p1 = $signed(tmp_481_fu_5067_p2);

assign tmp_559_fu_5932_p3 = {{tmp_321_reg_9561}, {3'd0}};

assign tmp_560_cast_fu_5082_p1 = $signed(tmp_482_fu_5077_p2);

assign tmp_560_fu_5943_p2 = (p_shl77_cast_fu_5928_p1 - p_shl78_cast_fu_5939_p1);

assign tmp_561_fu_5949_p2 = (tmp_186_cast4_reg_9120 + tmp_560_fu_5943_p2);

assign tmp_562_fu_6463_p3 = {{tmp_354_fu_6454_p2}, {2'd0}};

assign tmp_563_cast_fu_5145_p1 = $signed(tmp_485_fu_5139_p2);

assign tmp_563_fu_6475_p2 = (p_shl128_cast_fu_6471_p1 - tmp_355_cast_fu_6459_p1);

assign tmp_564_cast_fu_5154_p1 = $signed(tmp_486_fu_5149_p2);

assign tmp_564_fu_6485_p2 = ($signed(tmp_218_cast1_reg_9665) + $signed(tmp_654_cast_fu_6481_p1));

assign tmp_565_fu_6595_p2 = ($signed(p_shl127_cast_fu_6591_p1) - $signed(tmp_655_cast_fu_6581_p1));

assign tmp_566_fu_6601_p2 = (tmp_309_cast_reg_9739 + tmp_565_fu_6595_p2);

assign tmp_567_cast_fu_5187_p1 = $signed(tmp_489_fu_5181_p2);

assign tmp_567_fu_6497_p3 = {{tmp_356_reg_9821}, {2'd0}};

assign tmp_568_cast_fu_5196_p1 = $signed(tmp_490_fu_5191_p2);

assign tmp_568_fu_6504_p1 = $signed(tmp_567_fu_6497_p3);

assign tmp_569_fu_6512_p2 = (p_shl126_cast_fu_6508_p1 - tmp_357_cast_fu_6493_p1);

assign tmp_570_fu_6522_p2 = ($signed(tmp_218_cast4_reg_9684) + $signed(tmp_661_cast_fu_6518_p1));

assign tmp_571_cast_fu_5249_p1 = $signed(tmp_493_fu_5243_p2);

assign tmp_571_fu_6618_p2 = (p_shl125_cast_fu_6611_p3 - tmp_135_reg_9839);

assign tmp_572_cast_fu_5258_p1 = $signed(tmp_494_fu_5253_p2);

assign tmp_572_fu_6623_p2 = (tmp_309_cast1_reg_9795 + tmp_571_fu_6618_p2);

assign tmp_573_fu_6550_p3 = {{tmp_358_fu_6541_p2}, {2'd0}};

assign tmp_574_fu_6562_p2 = (p_shl124_cast_fu_6558_p1 - tmp_359_cast_fu_6546_p1);

assign tmp_575_fu_6568_p2 = (tmp_218_cast6_reg_9701 + tmp_574_fu_6562_p2);

assign tmp_576_fu_6642_p2 = ($signed(p_shl123_cast_fu_6638_p1) - $signed(tmp_668_cast_fu_6628_p1));

assign tmp_577_cast_fu_5299_p1 = $signed(tmp_499_fu_5293_p2);

assign tmp_577_fu_6648_p2 = (tmp_309_cast_reg_9739 + tmp_576_fu_6642_p2);

assign tmp_578_cast_fu_5308_p1 = $signed(tmp_500_fu_5303_p2);

assign tmp_578_fu_6674_p3 = {{tmp_361_fu_6665_p2}, {2'd0}};

assign tmp_579_fu_6686_p2 = (p_shl122_cast_fu_6682_p1 - tmp_363_cast_fu_6670_p1);

assign tmp_580_fu_6696_p2 = ($signed(tmp_218_cast5_reg_9690) + $signed(tmp_673_cast_fu_6692_p1));

assign tmp_581_fu_6892_p2 = ($signed(p_shl121_cast_fu_6885_p3) - $signed(tmp_674_cast_fu_6882_p1));

assign tmp_582_fu_6898_p2 = (tmp_309_cast_reg_9739 + tmp_581_fu_6892_p2);

assign tmp_583_cast_fu_5349_p1 = $signed(tmp_505_fu_5343_p2);

assign tmp_583_fu_6716_p3 = {{tmp_365_fu_6707_p2}, {2'd0}};

assign tmp_584_cast_fu_5366_p1 = $signed(tmp_506_reg_9415);

assign tmp_584_fu_6728_p2 = (p_shl120_cast_fu_6724_p1 - tmp_367_cast_fu_6712_p1);

assign tmp_585_fu_6738_p2 = ($signed(tmp_218_cast5_reg_9690) + $signed(tmp_679_cast_fu_6734_p1));

assign tmp_586_fu_6918_p2 = ($signed(p_shl119_cast_fu_6911_p3) - $signed(tmp_680_cast_fu_6908_p1));

assign tmp_587_fu_6924_p2 = (tmp_309_cast_reg_9739 + tmp_586_fu_6918_p2);

assign tmp_588_fu_6758_p3 = {{tmp_369_fu_6749_p2}, {2'd0}};

assign tmp_589_cast_fu_5358_p1 = $signed(tmp_509_reg_9223);

assign tmp_589_fu_6770_p2 = (p_shl118_cast_fu_6766_p1 - tmp_371_cast_fu_6754_p1);

assign tmp_590_cast_fu_5370_p1 = $signed(tmp_510_reg_9420);

assign tmp_590_fu_6776_p2 = (tmp_218_cast1_reg_9665 + tmp_589_fu_6770_p2);

assign tmp_591_fu_7034_p2 = ($signed(p_shl117_cast_fu_7030_p1) - $signed(tmp_686_cast_fu_7020_p1));

assign tmp_592_fu_7040_p2 = (tmp_309_cast_reg_9739 + tmp_591_fu_7034_p2);

assign tmp_593_cast_fu_4994_p1 = $signed(tmp_513_fu_4988_p2);

assign tmp_593_fu_6796_p3 = {{tmp_372_fu_6787_p2}, {2'd0}};

assign tmp_594_cast_fu_5374_p1 = $signed(tmp_514_reg_9350);

assign tmp_594_fu_6808_p2 = (p_shl116_cast_fu_6804_p1 - tmp_373_cast_fu_6792_p1);

assign tmp_595_fu_6814_p2 = (tmp_218_cast1_reg_9665 + tmp_594_fu_6808_p2);

assign tmp_596_fu_7064_p2 = ($signed(p_shl115_cast_fu_7060_p1) - $signed(tmp_692_cast_fu_7050_p1));

assign tmp_597_cast_fu_6344_p1 = tmp_515_fu_6339_p2;

assign tmp_597_fu_7070_p2 = (tmp_309_cast_reg_9739 + tmp_596_fu_7064_p2);

assign tmp_598_cast_fu_6354_p1 = tmp_516_fu_6349_p2;

assign tmp_598_fu_6837_p3 = {{tmp_374_fu_6824_p2}, {2'd0}};

assign tmp_599_cast_fu_6363_p1 = tmp_517_fu_6359_p2;

assign tmp_599_fu_6845_p1 = $signed(tmp_598_fu_6837_p3);

assign tmp_600_cast_fu_6372_p1 = tmp_518_fu_6368_p2;

assign tmp_600_fu_6853_p2 = (p_shl114_cast_fu_6849_p1 - tmp_375_cast_fu_6833_p1);

assign tmp_601_cast_fu_6381_p1 = tmp_519_fu_6377_p2;

assign tmp_601_fu_6859_p2 = (tmp_218_cast1_reg_9665 + tmp_600_fu_6853_p2);

assign tmp_602_fu_7094_p2 = ($signed(p_shl113_cast_fu_7090_p1) - $signed(tmp_699_cast_fu_7080_p1));

assign tmp_603_fu_7100_p2 = (tmp_309_cast_reg_9739 + tmp_602_fu_7094_p2);

assign tmp_604_fu_6941_p3 = {{tmp_376_reg_9905}, {2'd0}};

assign tmp_605_fu_6948_p1 = $signed(tmp_604_fu_6941_p3);

assign tmp_606_cast_fu_5534_p1 = $signed(tmp_522_fu_5528_p2);

assign tmp_606_fu_6956_p2 = (p_shl112_cast_fu_6952_p1 - tmp_377_cast_fu_6937_p1);

assign tmp_607_cast_fu_5543_p1 = $signed(tmp_523_fu_5538_p2);

assign tmp_607_fu_6966_p2 = ($signed(tmp_218_cast5_reg_9690) + $signed(tmp_705_cast_fu_6962_p1));

assign tmp_608_fu_7115_p2 = ($signed(p_shl111_cast_fu_7108_p3) - $signed(tmp_706_cast_fu_7105_p1));

assign tmp_609_fu_7121_p2 = (tmp_309_cast_reg_9739 + tmp_608_fu_7115_p2);

assign tmp_610_fu_7129_p3 = {{tmp_378_reg_9939}, {2'd0}};

assign tmp_611_fu_7140_p2 = (p_shl110_cast_fu_7136_p1 - tmp_379_cast_fu_7126_p1);

assign tmp_612_fu_7150_p2 = ($signed(tmp_218_cast3_reg_9678) + $signed(tmp_711_cast_fu_7146_p1));

assign tmp_613_fu_7171_p2 = ($signed(p_shl109_cast_fu_7163_p3) - $signed(tmp_712_cast_fu_7155_p1));

assign tmp_614_cast_fu_5616_p1 = $signed(tmp_527_reg_9466);

assign tmp_614_fu_7177_p2 = (tmp_309_cast_reg_9739 + tmp_613_fu_7171_p2);

assign tmp_615_fu_6997_p3 = {{tmp_380_fu_6988_p2}, {2'd0}};

assign tmp_616_fu_7009_p2 = (p_shl108_cast_fu_7005_p1 - tmp_381_cast_fu_6993_p1);

assign tmp_617_cast_fu_5576_p1 = $signed(tmp_530_fu_5570_p2);

assign tmp_617_fu_7015_p2 = (tmp_218_cast5_reg_9690 + tmp_616_fu_7009_p2);

assign tmp_618_cast_fu_5585_p1 = $signed(tmp_531_fu_5580_p2);

assign tmp_618_fu_7192_p2 = ($signed(p_shl107_cast_fu_7185_p3) - $signed(tmp_718_cast_fu_7182_p1));

assign tmp_619_fu_7198_p2 = (tmp_309_cast_reg_9739 + tmp_618_fu_7192_p2);

assign tmp_620_fu_8831_p3 = {{co_i_reg_3283}, {9'd0}};

assign tmp_621_cast_fu_5649_p1 = $signed(tmp_534_fu_5643_p2);

assign tmp_621_fu_7289_p3 = {{tmp_383_fu_7280_p2}, {2'd0}};

assign tmp_622_cast_fu_5658_p1 = $signed(tmp_535_fu_5653_p2);

assign tmp_622_fu_7301_p2 = (p_shl140_cast_fu_7297_p1 - tmp_384_cast_fu_7285_p1);

assign tmp_623_fu_7307_p2 = (tmp_622_fu_7301_p2 + tmp_218_cast5_reg_9690);

assign tmp_624_fu_7426_p2 = ($signed(p_shl139_cast_fu_7419_p3) - $signed(tmp_728_cast_fu_7416_p1));

assign tmp_625_cast_fu_5691_p1 = $signed(tmp_538_fu_5685_p2);

assign tmp_625_fu_7432_p2 = (tmp_624_fu_7426_p2 + tmp_309_cast_reg_9739);

assign tmp_626_cast_fu_5700_p1 = $signed(tmp_539_fu_5695_p2);

assign tmp_626_fu_7324_p3 = {{tmp_385_fu_7312_p2}, {2'd0}};

assign tmp_627_fu_7332_p1 = $signed(tmp_626_fu_7324_p3);

assign tmp_628_fu_7340_p2 = (p_shl138_cast_fu_7336_p1 - tmp_386_cast_fu_7320_p1);

assign tmp_629_fu_7350_p2 = ($signed(tmp_734_cast_fu_7346_p1) + $signed(tmp_218_cast4_reg_9684));

assign tmp_630_fu_7449_p2 = (p_shl137_cast_fu_7442_p3 - tmp_143_reg_10029);

assign tmp_631_cast_fu_5763_p1 = $signed(tmp_544_fu_5757_p2);

assign tmp_631_fu_7454_p2 = (tmp_630_fu_7449_p2 + tmp_309_cast2_reg_9800);

assign tmp_632_cast_fu_5772_p1 = $signed(tmp_545_fu_5767_p2);

assign tmp_632_fu_7473_p3 = {{tmp_387_fu_7464_p2}, {2'd0}};

assign tmp_633_fu_7485_p2 = (p_shl136_cast_fu_7481_p1 - tmp_388_cast_fu_7469_p1);

assign tmp_634_fu_7491_p2 = (tmp_633_fu_7485_p2 + tmp_218_cast5_reg_9690);

assign tmp_635_fu_7543_p2 = ($signed(p_shl135_cast_fu_7536_p3) - $signed(tmp_741_cast_fu_7533_p1));

assign tmp_636_cast_fu_5810_p1 = $signed(tmp_549_fu_5805_p2);

assign tmp_636_fu_7549_p2 = (tmp_635_fu_7543_p2 + tmp_309_cast_reg_9739);

assign tmp_637_fu_7510_p3 = {{tmp_389_fu_7501_p2}, {2'd0}};

assign tmp_638_fu_7522_p2 = (p_shl134_cast_fu_7518_p1 - tmp_390_cast_fu_7506_p1);

assign tmp_639_fu_7528_p2 = (tmp_638_fu_7522_p2 + tmp_218_cast5_reg_9690);

assign tmp_640_cast_fu_5878_p1 = $signed(tmp_553_fu_5873_p2);

assign tmp_640_fu_7569_p2 = ($signed(p_shl133_cast_fu_7562_p3) - $signed(tmp_747_cast_fu_7559_p1));

assign tmp_641_fu_7575_p2 = (tmp_640_fu_7569_p2 + tmp_309_cast_reg_9739);

assign tmp_642_fu_7592_p3 = {{tmp_391_reg_10039}, {2'd0}};

assign tmp_643_fu_7599_p1 = $signed(tmp_642_fu_7592_p3);

assign tmp_644_cast_fu_5916_p1 = $signed(tmp_557_fu_5911_p2);

assign tmp_644_fu_7607_p2 = (p_shl132_cast_fu_7603_p1 - tmp_392_cast_fu_7588_p1);

assign tmp_645_fu_7617_p2 = ($signed(tmp_753_cast_fu_7613_p1) + $signed(tmp_218_cast3_reg_9678));

assign tmp_646_fu_7638_p2 = ($signed(p_shl131_cast_fu_7630_p3) - $signed(tmp_754_cast_fu_7622_p1));

assign tmp_647_fu_7644_p2 = (tmp_646_fu_7638_p2 + tmp_309_cast_reg_9739);

assign tmp_648_cast_fu_5954_p1 = $signed(tmp_561_reg_9577);

assign tmp_648_fu_7389_p3 = {{tmp_393_fu_7380_p2}, {2'd0}};

assign tmp_649_fu_7401_p2 = (p_shl130_cast_fu_7397_p1 - tmp_394_cast_fu_7385_p1);

assign tmp_650_fu_7411_p2 = ($signed(tmp_759_cast_fu_7407_p1) + $signed(tmp_218_cast2_reg_9673));

assign tmp_651_fu_7654_p2 = (tmp_146_fu_7649_p2 - tmp_650_reg_10045);

assign tmp_652_fu_7659_p2 = (tmp_651_fu_7654_p2 + tmp_309_cast_reg_9739);

assign tmp_653_fu_8864_p2 = (tmp_723_cast_reg_10702 + tmp_i_cast_fu_8860_p1);

assign tmp_654_cast_fu_6481_p1 = $signed(tmp_563_fu_6475_p2);

assign tmp_655_cast_fu_6581_p1 = $signed(tmp_564_reg_9833);

assign tmp_658_cast_fu_6606_p1 = tmp_566_fu_6601_p2;

assign tmp_661_cast_fu_6518_p1 = $signed(tmp_569_fu_6512_p2);

assign tmp_665_cast_fu_6877_p1 = tmp_572_reg_9865;

assign tmp_668_cast_fu_6628_p1 = $signed(tmp_575_reg_9849);

assign tmp_671_cast_fu_6653_p1 = tmp_577_fu_6648_p2;

assign tmp_673_cast_fu_6692_p1 = $signed(tmp_579_fu_6686_p2);

assign tmp_674_cast_fu_6882_p1 = $signed(tmp_580_reg_9875);

assign tmp_677_cast_fu_6903_p1 = tmp_582_fu_6898_p2;

assign tmp_679_cast_fu_6734_p1 = $signed(tmp_584_fu_6728_p2);

assign tmp_680_cast_fu_6908_p1 = $signed(tmp_585_reg_9881);

assign tmp_683_cast_fu_6929_p1 = tmp_587_fu_6924_p2;

assign tmp_686_cast_fu_7020_p1 = $signed(tmp_590_reg_9887);

assign tmp_689_cast_fu_7045_p1 = tmp_592_fu_7040_p2;

assign tmp_692_cast_fu_7050_p1 = $signed(tmp_595_reg_9893);

assign tmp_695_cast_fu_7075_p1 = tmp_597_fu_7070_p2;

assign tmp_699_cast_fu_7080_p1 = $signed(tmp_601_reg_9899);

assign tmp_702_cast_fu_7203_p1 = tmp_603_reg_9961;

assign tmp_705_cast_fu_6962_p1 = $signed(tmp_606_fu_6956_p2);

assign tmp_706_cast_fu_7105_p1 = $signed(tmp_607_reg_9933);

assign tmp_709_cast_fu_7207_p1 = tmp_609_reg_9966;

assign tmp_711_cast_fu_7146_p1 = $signed(tmp_611_fu_7140_p2);

assign tmp_712_cast_fu_7155_p1 = $signed(tmp_612_fu_7150_p2);

assign tmp_715_cast_fu_7211_p1 = tmp_614_reg_9971;

assign tmp_718_cast_fu_7182_p1 = $signed(tmp_617_reg_9945);

assign tmp_721_cast_fu_7215_p1 = tmp_619_reg_9976;

assign tmp_723_cast_fu_8839_p1 = tmp_620_fu_8831_p3;

assign tmp_728_cast_fu_7416_p1 = $signed(tmp_623_reg_10023);

assign tmp_731_cast_fu_7437_p1 = tmp_625_fu_7432_p2;

assign tmp_734_cast_fu_7346_p1 = $signed(tmp_628_fu_7340_p2);

assign tmp_738_cast_fu_7664_p1 = tmp_631_reg_10056;

assign tmp_741_cast_fu_7533_p1 = $signed(tmp_634_reg_10061);

assign tmp_744_cast_fu_7554_p1 = tmp_636_fu_7549_p2;

assign tmp_747_cast_fu_7559_p1 = $signed(tmp_639_reg_10067);

assign tmp_750_cast_fu_7580_p1 = tmp_641_fu_7575_p2;

assign tmp_753_cast_fu_7613_p1 = $signed(tmp_644_fu_7607_p2);

assign tmp_754_cast_fu_7622_p1 = $signed(tmp_645_fu_7617_p2);

assign tmp_757_cast_fu_7670_p1 = tmp_647_reg_10088;

assign tmp_759_cast_fu_7407_p1 = $signed(tmp_649_fu_7401_p2);

assign tmp_763_cast_fu_7674_p1 = tmp_652_reg_10093;

assign tmp_764_cast_fu_8869_p1 = tmp_653_fu_8864_p2;

assign tmp_fu_3634_p3 = {{co_reg_3124}, {5'd0}};

assign tmp_i_419_fu_8855_p1 = ci_i_reg_3306;

assign tmp_i_cast_fu_8860_p1 = ci_i_reg_3306;

assign tmp_i_fu_8827_p1 = co_i_reg_3283;

assign tmp_s_fu_3668_p2 = (6'd24 + co_cast137_cast_fu_3618_p1);

assign w_22_fu_6150_p2 = (w_reg_3180 + 2'd1);

always @ (posedge ap_clk) begin
    co_cast1_reg_8874[12:5] <= 8'b00000000;
    co_cast2_reg_8882[11:5] <= 7'b0000000;
    co_cast144_cast_reg_8891[10:5] <= 6'b000000;
    co_cast143_cast1_reg_8903[8:5] <= 4'b0000;
    co_cast143_cast_reg_8910[9:5] <= 5'b00000;
    tmp_362_cast_reg_8929[2:0] <= 3'b000;
    tmp_368_cast_reg_8934[2:0] <= 3'b000;
    tmp_439_cast_reg_8939[2:0] <= 3'b000;
    tmp_442_cast_reg_8944[2:0] <= 3'b000;
    tmp_447_cast_reg_8949[2:0] <= 3'b000;
    tmp_450_cast_reg_8954[2:0] <= 3'b000;
    tmp_453_cast_reg_8959[2:0] <= 3'b000;
    tmp_456_cast_reg_8964[2:0] <= 3'b000;
    tmp_461_cast_reg_8969[2:0] <= 3'b000;
    tmp_175_reg_8974[2:0] <= 3'b000;
    tmp_186_cast_reg_8979[6:4] <= 3'b000;
    tmp_176_reg_8984[2:0] <= 3'b000;
    tmp_189_cast_reg_8989[7:3] <= 5'b00000;
    ci_cast_reg_8994[7:5] <= 3'b000;
    tmp_186_cast1_reg_9090[17:5] <= 13'b0000000000000;
    tmp_186_cast2_reg_9104[16:5] <= 12'b000000000000;
    tmp_186_cast3_reg_9114[15:5] <= 11'b00000000000;
    tmp_186_cast4_reg_9120[18:5] <= 14'b00000000000000;
    tmp_221_reg_9147[2:0] <= 3'b000;
    tmp_330_cast127_cast_1_reg_9153[2:0] <= 3'b000;
    tmp_330_cast127_cast_reg_9181[2:0] <= 3'b000;
    tmp3_reg_9200[2:0] <= 3'b000;
    tmp_509_reg_9223[2:0] <= 3'b000;
    tmp_330_cast1_reg_9297[2:0] <= 3'b000;
    tmp_310_reg_9448[2:0] <= 3'b000;
    tmp_438_cast_reg_9454[2:0] <= 3'b000;
    tmp_438_cast1_reg_9499[2:0] <= 3'b000;
    co2_cast1_reg_9587[10:5] <= 6'b000000;
    co2_cast2_reg_9592[9:5] <= 5'b00000;
    co2_cast120_cast_reg_9601[8:5] <= 4'b0000;
    co2_cast119_cast_reg_9610[7:5] <= 3'b000;
    co2_cast5_reg_9619[6:5] <= 2'b00;
    tmp_218_cast1_reg_9665[11:2] <= 10'b0000000000;
    tmp_218_cast2_reg_9673[14:2] <= 13'b0000000000000;
    tmp_218_cast3_reg_9678[13:2] <= 12'b000000000000;
    tmp_218_cast4_reg_9684[35:2] <= 34'b0000000000000000000000000000000000;
    tmp_218_cast5_reg_9690[12:2] <= 11'b00000000000;
    tmp_218_cast6_reg_9701[10:2] <= 9'b000000000;
    tmp_309_cast_reg_9739[14:2] <= 13'b0000000000000;
    tmp_597_cast_reg_9761[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_309_cast1_reg_9795[9:2] <= 8'b00000000;
    tmp_309_cast2_reg_9800[10:2] <= 9'b000000000;
    tmp_353_reg_9813[2:0] <= 3'b000;
    tmp_470_cast110_cast_reg_9827[2:0] <= 3'b000;
    tmp31_reg_9855[2:0] <= 3'b000;
    tmp_665_cast_reg_9911[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_382_reg_10009[2:0] <= 3'b000;
    tmp_505_cast_reg_10017[2:0] <= 3'b000;
    tmp_738_cast_reg_10098[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    i5_cast1_reg_10114[11:5] <= 7'b0000000;
    i5_cast2_reg_10130[10:5] <= 6'b000000;
    i5_cast105_cast1_reg_10146[8:5] <= 4'b0000;
    i5_cast105_cast_reg_10159[9:5] <= 5'b00000;
    i5_cast104_cast1_reg_10174[7:5] <= 3'b000;
    i5_cast102_cast_reg_10185[6:5] <= 2'b00;
    tmp_189_reg_10201[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_238_reg_10303[2:0] <= 3'b000;
    tmp_238_cast96_cast_reg_10313[2:0] <= 3'b000;
    tmp_238_cast96_cast1_reg_10325[2:0] <= 3'b000;
    tmp_238_cast97_cast_reg_10345[2:0] <= 3'b000;
    tmp_243_reg_10357[63:32] <= 32'b00000000000000000000000000000000;
    tmp_238_cast1_reg_10447[2:0] <= 3'b000;
    tmp_322_reg_10549[2:0] <= 3'b000;
    tmp_391_cast_cast1_reg_10557[2:0] <= 3'b000;
    tmp_391_cast_reg_10572[2:0] <= 3'b000;
    tmp_326_reg_10586[63:32] <= 32'b00000000000000000000000000000000;
    tmp_i_reg_10696[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_723_cast_reg_10702[8:0] <= 9'b000000000;
    tmp_723_cast_reg_10702[13] <= 1'b0;
end

endmodule //ShuffleNetV2
