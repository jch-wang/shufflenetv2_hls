// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ShuffleUnit2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv1_weight_address0,
        conv1_weight_ce0,
        conv1_weight_q0,
        conv1_bias_address0,
        conv1_bias_ce0,
        conv1_bias_q0,
        conv2_weight_address0,
        conv2_weight_ce0,
        conv2_weight_q0,
        conv2_bias_address0,
        conv2_bias_ce0,
        conv2_bias_q0,
        conv3_weight_address0,
        conv3_weight_ce0,
        conv3_weight_q0,
        conv3_bias_address0,
        conv3_bias_ce0,
        conv3_bias_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [11:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [13:0] conv1_weight_address0;
output   conv1_weight_ce0;
input  [31:0] conv1_weight_q0;
output  [6:0] conv1_bias_address0;
output   conv1_bias_ce0;
input  [31:0] conv1_bias_q0;
output  [9:0] conv2_weight_address0;
output   conv2_weight_ce0;
input  [31:0] conv2_weight_q0;
output  [6:0] conv2_bias_address0;
output   conv2_bias_ce0;
input  [31:0] conv2_bias_q0;
output  [13:0] conv3_weight_address0;
output   conv3_weight_ce0;
input  [31:0] conv3_weight_q0;
output  [6:0] conv3_bias_address0;
output   conv3_bias_ce0;
input  [31:0] conv3_bias_q0;
output  [11:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg input_r_ce1;
reg conv1_weight_ce0;
reg conv1_bias_ce0;
reg conv3_weight_ce0;
reg conv3_bias_ce0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] indvarinc7_fu_435_p2;
reg   [6:0] indvarinc7_reg_822;
wire    ap_CS_fsm_state2;
wire   [1:0] indvarinc1_fu_441_p2;
reg   [1:0] indvarinc1_reg_827;
wire    ap_CS_fsm_state3;
wire   [1:0] indvarinc2_fu_447_p2;
wire    ap_CS_fsm_state4;
wire   [6:0] indvarinc4_fu_486_p2;
reg   [6:0] indvarinc4_reg_846;
wire    ap_CS_fsm_state5;
wire   [1:0] indvarinc5_fu_492_p2;
reg   [1:0] indvarinc5_reg_851;
wire    ap_CS_fsm_state6;
wire   [1:0] indvarinc6_fu_498_p2;
wire    ap_CS_fsm_state7;
wire   [6:0] indvarinc9_fu_537_p2;
reg   [6:0] indvarinc9_reg_870;
wire    ap_CS_fsm_state8;
wire   [1:0] indvarinc_fu_543_p2;
reg   [1:0] indvarinc_reg_875;
wire    ap_CS_fsm_state9;
wire   [1:0] indvarinc3_fu_549_p2;
wire    ap_CS_fsm_state10;
wire   [6:0] indvarinc8_fu_588_p2;
reg   [6:0] indvarinc8_reg_894;
wire    ap_CS_fsm_state11;
wire   [1:0] indvarinc10_fu_594_p2;
reg   [1:0] indvarinc10_reg_899;
wire    ap_CS_fsm_state12;
wire   [1:0] indvarinc11_fu_600_p2;
wire    ap_CS_fsm_state13;
wire   [6:0] indvarinc12_fu_639_p2;
reg   [6:0] indvarinc12_reg_918;
wire    ap_CS_fsm_state14;
wire   [1:0] indvarinc13_fu_645_p2;
reg   [1:0] indvarinc13_reg_923;
wire    ap_CS_fsm_state15;
wire   [1:0] indvarinc14_fu_651_p2;
wire    ap_CS_fsm_state16;
wire   [6:0] co_19_fu_700_p2;
reg   [6:0] co_19_reg_945;
wire    ap_CS_fsm_state17;
wire   [10:0] tmp_307_cast_fu_720_p1;
reg   [10:0] tmp_307_cast_reg_950;
wire   [0:0] exitcond2_fu_694_p2;
wire   [9:0] tmp_309_cast_fu_732_p1;
reg   [9:0] tmp_309_cast_reg_955;
wire   [2:0] h_19_fu_742_p2;
reg   [2:0] h_19_reg_963;
wire    ap_CS_fsm_state18;
wire   [12:0] tmp_312_cast_fu_761_p3;
reg   [12:0] tmp_312_cast_reg_968;
wire   [0:0] exitcond1_fu_736_p2;
wire   [12:0] tmp_315_cast_fu_782_p1;
reg   [12:0] tmp_315_cast_reg_973;
wire   [2:0] w_19_fu_792_p2;
reg   [2:0] w_19_reg_981;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond_fu_786_p2;
wire   [63:0] tmp_317_cast_fu_817_p1;
reg   [63:0] tmp_317_cast_reg_991;
reg   [10:0] left_part_0_address0;
reg    left_part_0_ce0;
reg    left_part_0_we0;
reg   [31:0] left_part_0_d0;
wire   [31:0] left_part_0_q0;
reg   [10:0] right_part_0_address0;
reg    right_part_0_ce0;
reg    right_part_0_we0;
reg   [31:0] right_part_0_d0;
wire   [31:0] right_part_0_q0;
reg   [10:0] conv1_output_0_address0;
reg    conv1_output_0_ce0;
reg    conv1_output_0_we0;
reg   [31:0] conv1_output_0_d0;
wire   [31:0] conv1_output_0_q0;
reg   [10:0] conv2_output_0_address0;
reg    conv2_output_0_ce0;
reg    conv2_output_0_we0;
reg   [31:0] conv2_output_0_d0;
wire   [31:0] conv2_output_0_q0;
reg   [10:0] conv3_output_0_address0;
reg    conv3_output_0_ce0;
reg    conv3_output_0_we0;
reg   [31:0] conv3_output_0_d0;
wire   [31:0] conv3_output_0_q0;
wire    grp_subconv_1x1_419_fu_405_ap_start;
wire    grp_subconv_1x1_419_fu_405_ap_done;
wire    grp_subconv_1x1_419_fu_405_ap_idle;
wire    grp_subconv_1x1_419_fu_405_ap_ready;
wire   [10:0] grp_subconv_1x1_419_fu_405_input_0_address0;
wire    grp_subconv_1x1_419_fu_405_input_0_ce0;
reg   [31:0] grp_subconv_1x1_419_fu_405_input_0_q0;
wire   [13:0] grp_subconv_1x1_419_fu_405_weight_address0;
wire    grp_subconv_1x1_419_fu_405_weight_ce0;
reg   [31:0] grp_subconv_1x1_419_fu_405_weight_q0;
wire   [6:0] grp_subconv_1x1_419_fu_405_bias_address0;
wire    grp_subconv_1x1_419_fu_405_bias_ce0;
reg   [31:0] grp_subconv_1x1_419_fu_405_bias_q0;
wire   [10:0] grp_subconv_1x1_419_fu_405_output_0_address0;
wire    grp_subconv_1x1_419_fu_405_output_0_ce0;
wire    grp_subconv_1x1_419_fu_405_output_0_we0;
wire   [31:0] grp_subconv_1x1_419_fu_405_output_0_d0;
wire    grp_subconv_3x3_4_no_rel_fu_417_ap_start;
wire    grp_subconv_3x3_4_no_rel_fu_417_ap_done;
wire    grp_subconv_3x3_4_no_rel_fu_417_ap_idle;
wire    grp_subconv_3x3_4_no_rel_fu_417_ap_ready;
wire   [10:0] grp_subconv_3x3_4_no_rel_fu_417_input_0_address0;
wire    grp_subconv_3x3_4_no_rel_fu_417_input_0_ce0;
wire   [9:0] grp_subconv_3x3_4_no_rel_fu_417_weight_address0;
wire    grp_subconv_3x3_4_no_rel_fu_417_weight_ce0;
wire   [6:0] grp_subconv_3x3_4_no_rel_fu_417_bias_address0;
wire    grp_subconv_3x3_4_no_rel_fu_417_bias_ce0;
wire   [10:0] grp_subconv_3x3_4_no_rel_fu_417_output_0_address0;
wire    grp_subconv_3x3_4_no_rel_fu_417_output_0_ce0;
wire    grp_subconv_3x3_4_no_rel_fu_417_output_0_we0;
wire   [31:0] grp_subconv_3x3_4_no_rel_fu_417_output_0_d0;
wire    grp_shuffle_9621_fu_427_ap_start;
wire    grp_shuffle_9621_fu_427_ap_done;
wire    grp_shuffle_9621_fu_427_ap_idle;
wire    grp_shuffle_9621_fu_427_ap_ready;
wire   [10:0] grp_shuffle_9621_fu_427_left_0_address0;
wire    grp_shuffle_9621_fu_427_left_0_ce0;
wire   [10:0] grp_shuffle_9621_fu_427_right_0_address0;
wire    grp_shuffle_9621_fu_427_right_0_ce0;
wire   [11:0] grp_shuffle_9621_fu_427_output_r_address0;
wire    grp_shuffle_9621_fu_427_output_r_ce0;
wire    grp_shuffle_9621_fu_427_output_r_we0;
wire   [31:0] grp_shuffle_9621_fu_427_output_r_d0;
reg   [6:0] invdar6_reg_197;
wire   [0:0] tmp_120_fu_480_p2;
wire   [0:0] tmp_s_fu_468_p2;
wire   [0:0] tmp_119_fu_474_p2;
reg   [1:0] invdar1_reg_209;
reg   [1:0] invdar2_reg_221;
reg   [6:0] invdar4_reg_232;
wire   [0:0] tmp_123_fu_531_p2;
wire   [0:0] tmp_121_fu_519_p2;
wire   [0:0] tmp_122_fu_525_p2;
reg   [1:0] invdar5_reg_244;
reg   [1:0] invdar7_reg_256;
reg   [6:0] invdar9_reg_267;
wire   [0:0] tmp_126_fu_582_p2;
wire   [0:0] tmp_124_fu_570_p2;
wire   [0:0] tmp_125_fu_576_p2;
reg   [1:0] invdar_reg_279;
reg   [1:0] invdar3_reg_291;
reg   [6:0] invdar8_reg_302;
wire   [0:0] tmp_129_fu_633_p2;
wire   [0:0] tmp_127_fu_621_p2;
wire   [0:0] tmp_128_fu_627_p2;
reg   [1:0] invdar10_reg_314;
reg   [1:0] invdar11_reg_326;
reg   [6:0] invdar12_reg_337;
wire   [0:0] tmp_132_fu_684_p2;
wire   [0:0] tmp_130_fu_672_p2;
wire   [0:0] tmp_131_fu_678_p2;
reg   [1:0] invdar13_reg_349;
reg   [1:0] invdar14_reg_361;
reg   [6:0] co_reg_372;
reg   [2:0] h_reg_383;
reg   [2:0] w_reg_394;
wire    ap_CS_fsm_state20;
reg    ap_reg_grp_subconv_1x1_419_fu_405_ap_start;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
reg    ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    ap_reg_grp_shuffle_9621_fu_427_ap_start;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_180_fu_463_p1;
wire   [63:0] tmp_181_fu_514_p1;
wire   [63:0] tmp_182_fu_565_p1;
wire   [63:0] tmp_183_fu_616_p1;
wire   [63:0] tmp_184_fu_667_p1;
wire   [63:0] tmp_316_cast_fu_807_p1;
wire   [10:0] tmp_fu_453_p4;
wire   [10:0] tmp_105_fu_504_p4;
wire   [10:0] tmp_106_fu_555_p4;
wire   [10:0] tmp_107_fu_606_p4;
wire   [10:0] tmp_108_fu_657_p4;
wire   [7:0] co_cast_fu_690_p1;
wire   [7:0] tmp_133_fu_706_p2;
wire   [9:0] tmp_185_fu_712_p3;
wire   [8:0] tmp_186_fu_724_p3;
wire   [10:0] tmp_134_cast_fu_752_p1;
wire   [10:0] tmp_187_fu_756_p2;
wire   [9:0] tmp_134_cast1_fu_748_p1;
wire   [9:0] tmp_188_fu_769_p2;
wire   [11:0] tmp_109_fu_774_p3;
wire   [12:0] tmp_135_cast_fu_798_p1;
wire   [12:0] tmp_189_fu_802_p2;
wire   [12:0] tmp_190_fu_812_p2;
reg   [26:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_reg_grp_subconv_1x1_419_fu_405_ap_start = 1'b0;
#0 ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start = 1'b0;
#0 ap_reg_grp_shuffle_9621_fu_427_ap_start = 1'b0;
end

DownsampleUnit2_czec #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
left_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(left_part_0_address0),
    .ce0(left_part_0_ce0),
    .we0(left_part_0_we0),
    .d0(left_part_0_d0),
    .q0(left_part_0_q0)
);

DownsampleUnit2_czec #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
right_part_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(right_part_0_address0),
    .ce0(right_part_0_ce0),
    .we0(right_part_0_we0),
    .d0(right_part_0_d0),
    .q0(right_part_0_q0)
);

DownsampleUnit2_czec #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv1_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_output_0_address0),
    .ce0(conv1_output_0_ce0),
    .we0(conv1_output_0_we0),
    .d0(conv1_output_0_d0),
    .q0(conv1_output_0_q0)
);

DownsampleUnit2_czec #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv2_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_output_0_address0),
    .ce0(conv2_output_0_ce0),
    .we0(conv2_output_0_we0),
    .d0(conv2_output_0_d0),
    .q0(conv2_output_0_q0)
);

DownsampleUnit2_czec #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv3_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv3_output_0_address0),
    .ce0(conv3_output_0_ce0),
    .we0(conv3_output_0_we0),
    .d0(conv3_output_0_d0),
    .q0(conv3_output_0_q0)
);

subconv_1x1_419 grp_subconv_1x1_419_fu_405(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_1x1_419_fu_405_ap_start),
    .ap_done(grp_subconv_1x1_419_fu_405_ap_done),
    .ap_idle(grp_subconv_1x1_419_fu_405_ap_idle),
    .ap_ready(grp_subconv_1x1_419_fu_405_ap_ready),
    .input_0_address0(grp_subconv_1x1_419_fu_405_input_0_address0),
    .input_0_ce0(grp_subconv_1x1_419_fu_405_input_0_ce0),
    .input_0_q0(grp_subconv_1x1_419_fu_405_input_0_q0),
    .weight_address0(grp_subconv_1x1_419_fu_405_weight_address0),
    .weight_ce0(grp_subconv_1x1_419_fu_405_weight_ce0),
    .weight_q0(grp_subconv_1x1_419_fu_405_weight_q0),
    .bias_address0(grp_subconv_1x1_419_fu_405_bias_address0),
    .bias_ce0(grp_subconv_1x1_419_fu_405_bias_ce0),
    .bias_q0(grp_subconv_1x1_419_fu_405_bias_q0),
    .output_0_address0(grp_subconv_1x1_419_fu_405_output_0_address0),
    .output_0_ce0(grp_subconv_1x1_419_fu_405_output_0_ce0),
    .output_0_we0(grp_subconv_1x1_419_fu_405_output_0_we0),
    .output_0_d0(grp_subconv_1x1_419_fu_405_output_0_d0)
);

subconv_3x3_4_no_rel grp_subconv_3x3_4_no_rel_fu_417(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_subconv_3x3_4_no_rel_fu_417_ap_start),
    .ap_done(grp_subconv_3x3_4_no_rel_fu_417_ap_done),
    .ap_idle(grp_subconv_3x3_4_no_rel_fu_417_ap_idle),
    .ap_ready(grp_subconv_3x3_4_no_rel_fu_417_ap_ready),
    .input_0_address0(grp_subconv_3x3_4_no_rel_fu_417_input_0_address0),
    .input_0_ce0(grp_subconv_3x3_4_no_rel_fu_417_input_0_ce0),
    .input_0_q0(conv1_output_0_q0),
    .weight_address0(grp_subconv_3x3_4_no_rel_fu_417_weight_address0),
    .weight_ce0(grp_subconv_3x3_4_no_rel_fu_417_weight_ce0),
    .weight_q0(conv2_weight_q0),
    .bias_address0(grp_subconv_3x3_4_no_rel_fu_417_bias_address0),
    .bias_ce0(grp_subconv_3x3_4_no_rel_fu_417_bias_ce0),
    .bias_q0(conv2_bias_q0),
    .output_0_address0(grp_subconv_3x3_4_no_rel_fu_417_output_0_address0),
    .output_0_ce0(grp_subconv_3x3_4_no_rel_fu_417_output_0_ce0),
    .output_0_we0(grp_subconv_3x3_4_no_rel_fu_417_output_0_we0),
    .output_0_d0(grp_subconv_3x3_4_no_rel_fu_417_output_0_d0)
);

shuffle_9621 grp_shuffle_9621_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shuffle_9621_fu_427_ap_start),
    .ap_done(grp_shuffle_9621_fu_427_ap_done),
    .ap_idle(grp_shuffle_9621_fu_427_ap_idle),
    .ap_ready(grp_shuffle_9621_fu_427_ap_ready),
    .left_0_address0(grp_shuffle_9621_fu_427_left_0_address0),
    .left_0_ce0(grp_shuffle_9621_fu_427_left_0_ce0),
    .left_0_q0(left_part_0_q0),
    .right_0_address0(grp_shuffle_9621_fu_427_right_0_address0),
    .right_0_ce0(grp_shuffle_9621_fu_427_right_0_ce0),
    .right_0_q0(conv3_output_0_q0),
    .output_r_address0(grp_shuffle_9621_fu_427_output_r_address0),
    .output_r_ce0(grp_shuffle_9621_fu_427_output_r_ce0),
    .output_r_we0(grp_shuffle_9621_fu_427_output_r_we0),
    .output_r_d0(grp_shuffle_9621_fu_427_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_shuffle_9621_fu_427_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_reg_grp_shuffle_9621_fu_427_ap_start <= 1'b1;
        end else if ((1'b1 == grp_shuffle_9621_fu_427_ap_ready)) begin
            ap_reg_grp_shuffle_9621_fu_427_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_1x1_419_fu_405_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state24))) begin
            ap_reg_grp_subconv_1x1_419_fu_405_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_1x1_419_fu_405_ap_ready)) begin
            ap_reg_grp_subconv_1x1_419_fu_405_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start <= 1'b1;
        end else if ((1'b1 == grp_subconv_3x3_4_no_rel_fu_417_ap_ready)) begin
            ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_130_fu_672_p2) & (1'd1 == tmp_131_fu_678_p2) & (1'd1 == tmp_132_fu_684_p2))) begin
        co_reg_372 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_736_p2 == 1'd1))) begin
        co_reg_372 <= co_19_reg_945;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_786_p2 == 1'd1))) begin
        h_reg_383 <= h_19_reg_963;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
        h_reg_383 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_127_fu_621_p2) & (1'd0 == tmp_128_fu_627_p2))) begin
        invdar10_reg_314 <= indvarinc10_reg_899;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        invdar10_reg_314 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_127_fu_621_p2))) begin
        invdar11_reg_326 <= indvarinc11_fu_600_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar11_reg_326 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_127_fu_621_p2) & (1'd1 == tmp_128_fu_627_p2) & (1'd1 == tmp_129_fu_633_p2))) begin
        invdar12_reg_337 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_132_fu_684_p2) & (1'd1 == tmp_130_fu_672_p2) & (1'd1 == tmp_131_fu_678_p2))) begin
        invdar12_reg_337 <= indvarinc12_reg_918;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_130_fu_672_p2) & (1'd0 == tmp_131_fu_678_p2))) begin
        invdar13_reg_349 <= indvarinc13_reg_923;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        invdar13_reg_349 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_130_fu_672_p2))) begin
        invdar14_reg_361 <= indvarinc14_fu_651_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar14_reg_361 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd0 == tmp_119_fu_474_p2))) begin
        invdar1_reg_209 <= indvarinc1_reg_827;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        invdar1_reg_209 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_s_fu_468_p2))) begin
        invdar2_reg_221 <= indvarinc2_fu_447_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar2_reg_221 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_124_fu_570_p2))) begin
        invdar3_reg_291 <= indvarinc3_fu_549_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        invdar3_reg_291 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_119_fu_474_p2) & (tmp_120_fu_480_p2 == 1'd1))) begin
        invdar4_reg_232 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_123_fu_531_p2) & (1'd1 == tmp_121_fu_519_p2) & (1'd1 == tmp_122_fu_525_p2))) begin
        invdar4_reg_232 <= indvarinc4_reg_846;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_121_fu_519_p2) & (1'd0 == tmp_122_fu_525_p2))) begin
        invdar5_reg_244 <= indvarinc5_reg_851;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar5_reg_244 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_120_fu_480_p2) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_119_fu_474_p2))) begin
        invdar6_reg_197 <= indvarinc7_reg_822;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar6_reg_197 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_121_fu_519_p2))) begin
        invdar7_reg_256 <= indvarinc6_fu_498_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        invdar7_reg_256 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_124_fu_570_p2) & (1'd1 == tmp_125_fu_576_p2) & (1'd1 == tmp_126_fu_582_p2))) begin
        invdar8_reg_302 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_129_fu_633_p2) & (1'd1 == tmp_127_fu_621_p2) & (1'd1 == tmp_128_fu_627_p2))) begin
        invdar8_reg_302 <= indvarinc8_reg_894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_121_fu_519_p2) & (1'd1 == tmp_122_fu_525_p2) & (1'd1 == tmp_123_fu_531_p2))) begin
        invdar9_reg_267 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_126_fu_582_p2) & (1'd1 == tmp_124_fu_570_p2) & (1'd1 == tmp_125_fu_576_p2))) begin
        invdar9_reg_267 <= indvarinc9_reg_870;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_124_fu_570_p2) & (1'd0 == tmp_125_fu_576_p2))) begin
        invdar_reg_279 <= indvarinc_reg_875;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        invdar_reg_279 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_736_p2))) begin
        w_reg_394 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        w_reg_394 <= w_19_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        co_19_reg_945 <= co_19_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h_19_reg_963 <= h_19_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvarinc10_reg_899 <= indvarinc10_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvarinc12_reg_918 <= indvarinc12_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvarinc13_reg_923 <= indvarinc13_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc1_reg_827 <= indvarinc1_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvarinc4_reg_846 <= indvarinc4_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc5_reg_851 <= indvarinc5_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvarinc7_reg_822 <= indvarinc7_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvarinc8_reg_894 <= indvarinc8_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvarinc9_reg_870 <= indvarinc9_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvarinc_reg_875 <= indvarinc_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
        tmp_307_cast_reg_950[9 : 2] <= tmp_307_cast_fu_720_p1[9 : 2];
        tmp_309_cast_reg_955[8 : 2] <= tmp_309_cast_fu_732_p1[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond1_fu_736_p2))) begin
        tmp_312_cast_reg_968[12 : 2] <= tmp_312_cast_fu_761_p3[12 : 2];
        tmp_315_cast_reg_973[11 : 2] <= tmp_315_cast_fu_782_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond_fu_786_p2))) begin
        tmp_317_cast_reg_991[12 : 0] <= tmp_317_cast_fu_817_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_19_reg_981 <= w_19_fu_792_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_9621_fu_427_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_9621_fu_427_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_bias_ce0 = grp_subconv_1x1_419_fu_405_bias_ce0;
    end else begin
        conv1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_address0 = tmp_182_fu_565_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_address0 = grp_subconv_3x3_4_no_rel_fu_417_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_address0 = grp_subconv_1x1_419_fu_405_output_0_address0;
    end else begin
        conv1_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_0_ce0 = grp_subconv_3x3_4_no_rel_fu_417_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_ce0 = grp_subconv_1x1_419_fu_405_output_0_ce0;
    end else begin
        conv1_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_d0 = grp_subconv_1x1_419_fu_405_output_0_d0;
    end else begin
        conv1_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_output_0_we0 = grp_subconv_1x1_419_fu_405_output_0_we0;
    end else begin
        conv1_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv1_weight_ce0 = grp_subconv_1x1_419_fu_405_weight_ce0;
    end else begin
        conv1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_address0 = tmp_183_fu_616_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_address0 = grp_subconv_3x3_4_no_rel_fu_417_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_address0 = grp_subconv_1x1_419_fu_405_input_0_address0;
    end else begin
        conv2_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_ce0 = grp_subconv_3x3_4_no_rel_fu_417_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv2_output_0_ce0 = grp_subconv_1x1_419_fu_405_input_0_ce0;
    end else begin
        conv2_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_d0 = grp_subconv_3x3_4_no_rel_fu_417_output_0_d0;
    end else begin
        conv2_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv2_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv2_output_0_we0 = grp_subconv_3x3_4_no_rel_fu_417_output_0_we0;
    end else begin
        conv2_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_bias_ce0 = grp_subconv_1x1_419_fu_405_bias_ce0;
    end else begin
        conv3_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_address0 = tmp_184_fu_667_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_address0 = grp_shuffle_9621_fu_427_right_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_address0 = grp_subconv_1x1_419_fu_405_output_0_address0;
    end else begin
        conv3_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv3_output_0_ce0 = grp_shuffle_9621_fu_427_right_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_ce0 = grp_subconv_1x1_419_fu_405_output_0_ce0;
    end else begin
        conv3_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_d0 = grp_subconv_1x1_419_fu_405_output_0_d0;
    end else begin
        conv3_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv3_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_output_0_we0 = grp_subconv_1x1_419_fu_405_output_0_we0;
    end else begin
        conv3_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv3_weight_ce0 = grp_subconv_1x1_419_fu_405_weight_ce0;
    end else begin
        conv3_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_419_fu_405_bias_q0 = conv3_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_419_fu_405_bias_q0 = conv1_bias_q0;
    end else begin
        grp_subconv_1x1_419_fu_405_bias_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_419_fu_405_input_0_q0 = conv2_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_419_fu_405_input_0_q0 = right_part_0_q0;
    end else begin
        grp_subconv_1x1_419_fu_405_input_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_subconv_1x1_419_fu_405_weight_q0 = conv3_weight_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_subconv_1x1_419_fu_405_weight_q0 = conv1_weight_q0;
    end else begin
        grp_subconv_1x1_419_fu_405_weight_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_address0 = tmp_317_cast_reg_991;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_address0 = tmp_180_fu_463_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_address0 = grp_shuffle_9621_fu_427_left_0_address0;
    end else begin
        left_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        left_part_0_ce0 = grp_shuffle_9621_fu_427_left_0_ce0;
    end else begin
        left_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        left_part_0_d0 = input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        left_part_0_d0 = 32'd0;
    end else begin
        left_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20))) begin
        left_part_0_we0 = 1'b1;
    end else begin
        left_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_address0 = tmp_317_cast_reg_991;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_address0 = tmp_181_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_address0 = grp_subconv_1x1_419_fu_405_input_0_address0;
    end else begin
        right_part_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        right_part_0_ce0 = grp_subconv_1x1_419_fu_405_input_0_ce0;
    end else begin
        right_part_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        right_part_0_d0 = input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        right_part_0_d0 = 32'd0;
    end else begin
        right_part_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state20))) begin
        right_part_0_we0 = 1'b1;
    end else begin
        right_part_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_119_fu_474_p2) & (tmp_120_fu_480_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == tmp_120_fu_480_p2) & (tmp_s_fu_468_p2 == 1'd1) & (1'd1 == tmp_119_fu_474_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_468_p2 == 1'd1) & (1'd0 == tmp_119_fu_474_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_121_fu_519_p2) & (1'd1 == tmp_122_fu_525_p2) & (1'd1 == tmp_123_fu_531_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == tmp_123_fu_531_p2) & (1'd1 == tmp_121_fu_519_p2) & (1'd1 == tmp_122_fu_525_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == tmp_121_fu_519_p2) & (1'd0 == tmp_122_fu_525_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_124_fu_570_p2) & (1'd1 == tmp_125_fu_576_p2) & (1'd1 == tmp_126_fu_582_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == tmp_126_fu_582_p2) & (1'd1 == tmp_124_fu_570_p2) & (1'd1 == tmp_125_fu_576_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == tmp_124_fu_570_p2) & (1'd0 == tmp_125_fu_576_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_127_fu_621_p2) & (1'd1 == tmp_128_fu_627_p2) & (1'd1 == tmp_129_fu_633_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_129_fu_633_p2) & (1'd1 == tmp_127_fu_621_p2) & (1'd1 == tmp_128_fu_627_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state13) & (1'd1 == tmp_127_fu_621_p2) & (1'd0 == tmp_128_fu_627_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_130_fu_672_p2) & (1'd1 == tmp_131_fu_678_p2) & (1'd1 == tmp_132_fu_684_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == tmp_132_fu_684_p2) & (1'd1 == tmp_130_fu_672_p2) & (1'd1 == tmp_131_fu_678_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == tmp_130_fu_672_p2) & (1'd0 == tmp_131_fu_678_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_fu_694_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond1_fu_736_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (exitcond_fu_786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_subconv_1x1_419_fu_405_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_subconv_3x3_4_no_rel_fu_417_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_subconv_1x1_419_fu_405_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_shuffle_9621_fu_427_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign co_19_fu_700_p2 = (co_reg_372 + 7'd1);

assign co_cast_fu_690_p1 = co_reg_372;

assign conv1_bias_address0 = grp_subconv_1x1_419_fu_405_bias_address0;

assign conv1_weight_address0 = grp_subconv_1x1_419_fu_405_weight_address0;

assign conv2_bias_address0 = grp_subconv_3x3_4_no_rel_fu_417_bias_address0;

assign conv2_bias_ce0 = grp_subconv_3x3_4_no_rel_fu_417_bias_ce0;

assign conv2_weight_address0 = grp_subconv_3x3_4_no_rel_fu_417_weight_address0;

assign conv2_weight_ce0 = grp_subconv_3x3_4_no_rel_fu_417_weight_ce0;

assign conv3_bias_address0 = grp_subconv_1x1_419_fu_405_bias_address0;

assign conv3_weight_address0 = grp_subconv_1x1_419_fu_405_weight_address0;

assign exitcond1_fu_736_p2 = ((h_reg_383 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond2_fu_694_p2 = ((co_reg_372 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond_fu_786_p2 = ((w_reg_394 == 3'd4) ? 1'b1 : 1'b0);

assign grp_shuffle_9621_fu_427_ap_start = ap_reg_grp_shuffle_9621_fu_427_ap_start;

assign grp_subconv_1x1_419_fu_405_ap_start = ap_reg_grp_subconv_1x1_419_fu_405_ap_start;

assign grp_subconv_3x3_4_no_rel_fu_417_ap_start = ap_reg_grp_subconv_3x3_4_no_rel_fu_417_ap_start;

assign h_19_fu_742_p2 = (h_reg_383 + 3'd1);

assign indvarinc10_fu_594_p2 = (invdar10_reg_314 + 2'd1);

assign indvarinc11_fu_600_p2 = (invdar11_reg_326 + 2'd1);

assign indvarinc12_fu_639_p2 = (invdar12_reg_337 + 7'd1);

assign indvarinc13_fu_645_p2 = (invdar13_reg_349 + 2'd1);

assign indvarinc14_fu_651_p2 = (invdar14_reg_361 + 2'd1);

assign indvarinc1_fu_441_p2 = (invdar1_reg_209 + 2'd1);

assign indvarinc2_fu_447_p2 = (invdar2_reg_221 + 2'd1);

assign indvarinc3_fu_549_p2 = (invdar3_reg_291 + 2'd1);

assign indvarinc4_fu_486_p2 = (invdar4_reg_232 + 7'd1);

assign indvarinc5_fu_492_p2 = (invdar5_reg_244 + 2'd1);

assign indvarinc6_fu_498_p2 = (invdar7_reg_256 + 2'd1);

assign indvarinc7_fu_435_p2 = (invdar6_reg_197 + 7'd1);

assign indvarinc8_fu_588_p2 = (invdar8_reg_302 + 7'd1);

assign indvarinc9_fu_537_p2 = (invdar9_reg_267 + 7'd1);

assign indvarinc_fu_543_p2 = (invdar_reg_279 + 2'd1);

assign input_r_address0 = tmp_316_cast_fu_807_p1;

assign input_r_address1 = tmp_317_cast_fu_817_p1;

assign output_r_address0 = grp_shuffle_9621_fu_427_output_r_address0;

assign output_r_ce0 = grp_shuffle_9621_fu_427_output_r_ce0;

assign output_r_d0 = grp_shuffle_9621_fu_427_output_r_d0;

assign output_r_we0 = grp_shuffle_9621_fu_427_output_r_we0;

assign tmp_105_fu_504_p4 = {{{invdar4_reg_232}, {invdar5_reg_244}}, {invdar7_reg_256}};

assign tmp_106_fu_555_p4 = {{{invdar9_reg_267}, {invdar_reg_279}}, {invdar3_reg_291}};

assign tmp_107_fu_606_p4 = {{{invdar8_reg_302}, {invdar10_reg_314}}, {invdar11_reg_326}};

assign tmp_108_fu_657_p4 = {{{invdar12_reg_337}, {invdar13_reg_349}}, {invdar14_reg_361}};

assign tmp_109_fu_774_p3 = {{tmp_188_fu_769_p2}, {2'd0}};

assign tmp_119_fu_474_p2 = ((invdar1_reg_209 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_120_fu_480_p2 = ((invdar6_reg_197 == 7'd95) ? 1'b1 : 1'b0);

assign tmp_121_fu_519_p2 = ((invdar7_reg_256 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_122_fu_525_p2 = ((invdar5_reg_244 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_123_fu_531_p2 = ((invdar4_reg_232 == 7'd95) ? 1'b1 : 1'b0);

assign tmp_124_fu_570_p2 = ((invdar3_reg_291 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_125_fu_576_p2 = ((invdar_reg_279 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_126_fu_582_p2 = ((invdar9_reg_267 == 7'd95) ? 1'b1 : 1'b0);

assign tmp_127_fu_621_p2 = ((invdar11_reg_326 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_128_fu_627_p2 = ((invdar10_reg_314 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_129_fu_633_p2 = ((invdar8_reg_302 == 7'd95) ? 1'b1 : 1'b0);

assign tmp_130_fu_672_p2 = ((invdar14_reg_361 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_131_fu_678_p2 = ((invdar13_reg_349 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_132_fu_684_p2 = ((invdar12_reg_337 == 7'd95) ? 1'b1 : 1'b0);

assign tmp_133_fu_706_p2 = (co_cast_fu_690_p1 + 8'd96);

assign tmp_134_cast1_fu_748_p1 = h_reg_383;

assign tmp_134_cast_fu_752_p1 = h_reg_383;

assign tmp_135_cast_fu_798_p1 = w_reg_394;

assign tmp_180_fu_463_p1 = tmp_fu_453_p4;

assign tmp_181_fu_514_p1 = tmp_105_fu_504_p4;

assign tmp_182_fu_565_p1 = tmp_106_fu_555_p4;

assign tmp_183_fu_616_p1 = tmp_107_fu_606_p4;

assign tmp_184_fu_667_p1 = tmp_108_fu_657_p4;

assign tmp_185_fu_712_p3 = {{tmp_133_fu_706_p2}, {2'd0}};

assign tmp_186_fu_724_p3 = {{co_reg_372}, {2'd0}};

assign tmp_187_fu_756_p2 = (tmp_307_cast_reg_950 + tmp_134_cast_fu_752_p1);

assign tmp_188_fu_769_p2 = (tmp_309_cast_reg_955 + tmp_134_cast1_fu_748_p1);

assign tmp_189_fu_802_p2 = (tmp_312_cast_reg_968 + tmp_135_cast_fu_798_p1);

assign tmp_190_fu_812_p2 = (tmp_315_cast_reg_973 + tmp_135_cast_fu_798_p1);

assign tmp_307_cast_fu_720_p1 = tmp_185_fu_712_p3;

assign tmp_309_cast_fu_732_p1 = tmp_186_fu_724_p3;

assign tmp_312_cast_fu_761_p3 = {{tmp_187_fu_756_p2}, {2'd0}};

assign tmp_315_cast_fu_782_p1 = tmp_109_fu_774_p3;

assign tmp_316_cast_fu_807_p1 = tmp_189_fu_802_p2;

assign tmp_317_cast_fu_817_p1 = tmp_190_fu_812_p2;

assign tmp_fu_453_p4 = {{{invdar6_reg_197}, {invdar1_reg_209}}, {invdar2_reg_221}};

assign tmp_s_fu_468_p2 = ((invdar2_reg_221 == 2'd3) ? 1'b1 : 1'b0);

assign w_19_fu_792_p2 = (w_reg_394 + 3'd1);

always @ (posedge ap_clk) begin
    tmp_307_cast_reg_950[1:0] <= 2'b00;
    tmp_307_cast_reg_950[10] <= 1'b0;
    tmp_309_cast_reg_955[1:0] <= 2'b00;
    tmp_309_cast_reg_955[9] <= 1'b0;
    tmp_312_cast_reg_968[1:0] <= 2'b00;
    tmp_315_cast_reg_973[1:0] <= 2'b00;
    tmp_315_cast_reg_973[12] <= 1'b0;
    tmp_317_cast_reg_991[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //ShuffleUnit2
