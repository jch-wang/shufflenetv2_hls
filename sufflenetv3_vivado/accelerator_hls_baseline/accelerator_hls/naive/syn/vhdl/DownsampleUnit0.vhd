-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DownsampleUnit0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1r_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv1r_weight_ce0 : OUT STD_LOGIC;
    conv1r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv1r_bias_ce0 : OUT STD_LOGIC;
    conv1r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv2r_weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv2r_weight_ce0 : OUT STD_LOGIC;
    conv2r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv2r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2r_bias_ce0 : OUT STD_LOGIC;
    conv2r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv3r_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv3r_weight_ce0 : OUT STD_LOGIC;
    conv3r_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv3r_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv3r_bias_ce0 : OUT STD_LOGIC;
    conv3r_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1l_weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv1l_weight_ce0 : OUT STD_LOGIC;
    conv1l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1l_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv1l_bias_ce0 : OUT STD_LOGIC;
    conv1l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv2l_weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv2l_weight_ce0 : OUT STD_LOGIC;
    conv2l_weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv2l_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2l_bias_ce0 : OUT STD_LOGIC;
    conv2l_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    downsampleunit0_outp_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    downsampleunit0_outp_ce0 : OUT STD_LOGIC;
    downsampleunit0_outp_we0 : OUT STD_LOGIC;
    downsampleunit0_outp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of DownsampleUnit0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvarinc4_fu_375_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc4_reg_630 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal indvarinc8_fu_381_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc8_reg_635 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvarinc12_fu_387_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal indvarinc19_fu_426_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc19_reg_654 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal indvarinc23_fu_432_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvarinc23_reg_659 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal indvarinc28_fu_438_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal indvarinc35_fu_477_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc35_reg_678 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal indvarinc39_fu_483_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvarinc39_reg_683 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal indvarinc43_fu_489_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal indvarinc_fu_528_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc_reg_702 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal indvarinc49_fu_534_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvarinc49_reg_707 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal indvarinc50_fu_540_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal indvarinc51_fu_579_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvarinc51_reg_726 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal indvarinc52_fu_585_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvarinc52_reg_731 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal indvarinc53_fu_591_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal conv1r_output_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal conv1r_output_ce0 : STD_LOGIC;
    signal conv1r_output_we0 : STD_LOGIC;
    signal conv1r_output_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1r_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2r_ourput_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv2r_ourput_0_ce0 : STD_LOGIC;
    signal conv2r_ourput_0_we0 : STD_LOGIC;
    signal conv2r_ourput_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2r_ourput_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3r_ourput_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv3r_ourput_0_ce0 : STD_LOGIC;
    signal conv3r_ourput_0_we0 : STD_LOGIC;
    signal conv3r_ourput_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3r_ourput_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1l_output_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv1l_output_0_ce0 : STD_LOGIC;
    signal conv1l_output_0_we0 : STD_LOGIC;
    signal conv1l_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1l_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2l_output_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv2l_output_0_ce0 : STD_LOGIC;
    signal conv2l_output_0_we0 : STD_LOGIC;
    signal conv2l_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2l_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_1x1_3214_fu_331_ap_start : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_ap_done : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_ap_idle : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_ap_ready : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_input_r_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_subconv_1x1_3214_fu_331_input_r_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_subconv_1x1_3214_fu_331_weight_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_subconv_1x1_3214_fu_331_bias_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_output_r_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_subconv_1x1_3214_fu_331_output_r_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_output_r_we0 : STD_LOGIC;
    signal grp_subconv_1x1_3214_fu_331_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_ap_start : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_ap_done : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_ap_idle : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_ap_ready : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_input_r_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_input_r_ce0 : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_input_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_weight_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_weight_ce0 : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_bias_ce0 : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_output_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_subconv_3x3_32_strid_fu_342_output_0_ce0 : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_output_0_we0 : STD_LOGIC;
    signal grp_subconv_3x3_32_strid_fu_342_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_1x1_1612_fu_355_ap_start : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_ap_done : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_ap_idle : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_ap_ready : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_input_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_subconv_1x1_1612_fu_355_input_0_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_input_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_1x1_1612_fu_355_weight_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_subconv_1x1_1612_fu_355_weight_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_1x1_1612_fu_355_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_subconv_1x1_1612_fu_355_bias_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_subconv_1x1_1612_fu_355_output_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_subconv_1x1_1612_fu_355_output_0_ce0 : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_output_0_we0 : STD_LOGIC;
    signal grp_subconv_1x1_1612_fu_355_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_shuffle_2415_fu_367_ap_start : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_ap_done : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_ap_idle : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_ap_ready : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_left_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_shuffle_2415_fu_367_left_0_ce0 : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_right_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_shuffle_2415_fu_367_right_0_ce0 : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_output_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_shuffle_2415_fu_367_output_r_ce0 : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_output_r_we0 : STD_LOGIC;
    signal grp_shuffle_2415_fu_367_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invdar3_reg_156 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_424_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_423_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar7_reg_168 : STD_LOGIC_VECTOR (4 downto 0);
    signal invdar11_reg_180 : STD_LOGIC_VECTOR (4 downto 0);
    signal invdar18_reg_191 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_427_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_425_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_426_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar22_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar27_reg_215 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar34_reg_226 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_430_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_428_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_429_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar38_reg_238 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar42_reg_250 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar_reg_261 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_433_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_431_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_432_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar48_reg_273 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar49_reg_285 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar50_reg_296 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_436_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_434_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_435_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar51_reg_308 : STD_LOGIC_VECTOR (3 downto 0);
    signal invdar52_reg_320 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_grp_subconv_1x1_3214_fu_331_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_reg_grp_subconv_1x1_1612_fu_355_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_reg_grp_shuffle_2415_fu_367_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_664_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_665_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_666_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_667_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_668_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_393_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_155_fu_444_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_156_fu_495_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_157_fu_546_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_158_fu_597_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_state21_on_subcall_done : BOOLEAN;

    component subconv_1x1_3214 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component subconv_3x3_32_strid IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component subconv_1x1_1612 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component shuffle_2415 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        left_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        left_0_ce0 : OUT STD_LOGIC;
        left_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        right_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        right_0_ce0 : OUT STD_LOGIC;
        right_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DownsampleUnit0_ceOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DownsampleUnit0_cfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1r_output_U : component DownsampleUnit0_ceOg
    generic map (
        DataWidth => 32,
        AddressRange => 24576,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1r_output_address0,
        ce0 => conv1r_output_ce0,
        we0 => conv1r_output_we0,
        d0 => conv1r_output_d0,
        q0 => conv1r_output_q0);

    conv2r_ourput_0_U : component DownsampleUnit0_cfYi
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2r_ourput_0_address0,
        ce0 => conv2r_ourput_0_ce0,
        we0 => conv2r_ourput_0_we0,
        d0 => conv2r_ourput_0_d0,
        q0 => conv2r_ourput_0_q0);

    conv3r_ourput_0_U : component DownsampleUnit0_cfYi
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv3r_ourput_0_address0,
        ce0 => conv3r_ourput_0_ce0,
        we0 => conv3r_ourput_0_we0,
        d0 => conv3r_ourput_0_d0,
        q0 => conv3r_ourput_0_q0);

    conv1l_output_0_U : component DownsampleUnit0_cfYi
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1l_output_0_address0,
        ce0 => conv1l_output_0_ce0,
        we0 => conv1l_output_0_we0,
        d0 => conv1l_output_0_d0,
        q0 => conv1l_output_0_q0);

    conv2l_output_0_U : component DownsampleUnit0_cfYi
    generic map (
        DataWidth => 32,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2l_output_0_address0,
        ce0 => conv2l_output_0_ce0,
        we0 => conv2l_output_0_we0,
        d0 => conv2l_output_0_d0,
        q0 => conv2l_output_0_q0);

    grp_subconv_1x1_3214_fu_331 : component subconv_1x1_3214
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_subconv_1x1_3214_fu_331_ap_start,
        ap_done => grp_subconv_1x1_3214_fu_331_ap_done,
        ap_idle => grp_subconv_1x1_3214_fu_331_ap_idle,
        ap_ready => grp_subconv_1x1_3214_fu_331_ap_ready,
        input_r_address0 => grp_subconv_1x1_3214_fu_331_input_r_address0,
        input_r_ce0 => grp_subconv_1x1_3214_fu_331_input_r_ce0,
        input_r_q0 => input_r_q0,
        weight_address0 => grp_subconv_1x1_3214_fu_331_weight_address0,
        weight_ce0 => grp_subconv_1x1_3214_fu_331_weight_ce0,
        weight_q0 => conv1r_weight_q0,
        bias_address0 => grp_subconv_1x1_3214_fu_331_bias_address0,
        bias_ce0 => grp_subconv_1x1_3214_fu_331_bias_ce0,
        bias_q0 => conv1r_bias_q0,
        output_r_address0 => grp_subconv_1x1_3214_fu_331_output_r_address0,
        output_r_ce0 => grp_subconv_1x1_3214_fu_331_output_r_ce0,
        output_r_we0 => grp_subconv_1x1_3214_fu_331_output_r_we0,
        output_r_d0 => grp_subconv_1x1_3214_fu_331_output_r_d0);

    grp_subconv_3x3_32_strid_fu_342 : component subconv_3x3_32_strid
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_subconv_3x3_32_strid_fu_342_ap_start,
        ap_done => grp_subconv_3x3_32_strid_fu_342_ap_done,
        ap_idle => grp_subconv_3x3_32_strid_fu_342_ap_idle,
        ap_ready => grp_subconv_3x3_32_strid_fu_342_ap_ready,
        input_r_address0 => grp_subconv_3x3_32_strid_fu_342_input_r_address0,
        input_r_ce0 => grp_subconv_3x3_32_strid_fu_342_input_r_ce0,
        input_r_q0 => grp_subconv_3x3_32_strid_fu_342_input_r_q0,
        weight_address0 => grp_subconv_3x3_32_strid_fu_342_weight_address0,
        weight_ce0 => grp_subconv_3x3_32_strid_fu_342_weight_ce0,
        weight_q0 => grp_subconv_3x3_32_strid_fu_342_weight_q0,
        bias_address0 => grp_subconv_3x3_32_strid_fu_342_bias_address0,
        bias_ce0 => grp_subconv_3x3_32_strid_fu_342_bias_ce0,
        bias_q0 => grp_subconv_3x3_32_strid_fu_342_bias_q0,
        output_0_address0 => grp_subconv_3x3_32_strid_fu_342_output_0_address0,
        output_0_ce0 => grp_subconv_3x3_32_strid_fu_342_output_0_ce0,
        output_0_we0 => grp_subconv_3x3_32_strid_fu_342_output_0_we0,
        output_0_d0 => grp_subconv_3x3_32_strid_fu_342_output_0_d0);

    grp_subconv_1x1_1612_fu_355 : component subconv_1x1_1612
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_subconv_1x1_1612_fu_355_ap_start,
        ap_done => grp_subconv_1x1_1612_fu_355_ap_done,
        ap_idle => grp_subconv_1x1_1612_fu_355_ap_idle,
        ap_ready => grp_subconv_1x1_1612_fu_355_ap_ready,
        input_0_address0 => grp_subconv_1x1_1612_fu_355_input_0_address0,
        input_0_ce0 => grp_subconv_1x1_1612_fu_355_input_0_ce0,
        input_0_q0 => grp_subconv_1x1_1612_fu_355_input_0_q0,
        weight_address0 => grp_subconv_1x1_1612_fu_355_weight_address0,
        weight_ce0 => grp_subconv_1x1_1612_fu_355_weight_ce0,
        weight_q0 => grp_subconv_1x1_1612_fu_355_weight_q0,
        bias_address0 => grp_subconv_1x1_1612_fu_355_bias_address0,
        bias_ce0 => grp_subconv_1x1_1612_fu_355_bias_ce0,
        bias_q0 => grp_subconv_1x1_1612_fu_355_bias_q0,
        output_0_address0 => grp_subconv_1x1_1612_fu_355_output_0_address0,
        output_0_ce0 => grp_subconv_1x1_1612_fu_355_output_0_ce0,
        output_0_we0 => grp_subconv_1x1_1612_fu_355_output_0_we0,
        output_0_d0 => grp_subconv_1x1_1612_fu_355_output_0_d0);

    grp_shuffle_2415_fu_367 : component shuffle_2415
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shuffle_2415_fu_367_ap_start,
        ap_done => grp_shuffle_2415_fu_367_ap_done,
        ap_idle => grp_shuffle_2415_fu_367_ap_idle,
        ap_ready => grp_shuffle_2415_fu_367_ap_ready,
        left_0_address0 => grp_shuffle_2415_fu_367_left_0_address0,
        left_0_ce0 => grp_shuffle_2415_fu_367_left_0_ce0,
        left_0_q0 => conv3r_ourput_0_q0,
        right_0_address0 => grp_shuffle_2415_fu_367_right_0_address0,
        right_0_ce0 => grp_shuffle_2415_fu_367_right_0_ce0,
        right_0_q0 => conv2l_output_0_q0,
        output_r_address0 => grp_shuffle_2415_fu_367_output_r_address0,
        output_r_ce0 => grp_shuffle_2415_fu_367_output_r_ce0,
        output_r_we0 => grp_shuffle_2415_fu_367_output_r_we0,
        output_r_d0 => grp_shuffle_2415_fu_367_output_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_shuffle_2415_fu_367_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_shuffle_2415_fu_367_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_reg_grp_shuffle_2415_fu_367_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_shuffle_2415_fu_367_ap_ready)) then 
                    ap_reg_grp_shuffle_2415_fu_367_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_subconv_1x1_1612_fu_355_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                    ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_subconv_1x1_1612_fu_355_ap_ready)) then 
                    ap_reg_grp_subconv_1x1_1612_fu_355_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_subconv_1x1_3214_fu_331_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_1 = tmp_435_fu_618_p2) and (ap_const_lv1_1 = tmp_436_fu_624_p2))) then 
                    ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_subconv_1x1_3214_fu_331_ap_ready)) then 
                    ap_reg_grp_subconv_1x1_3214_fu_331_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_subconv_3x3_32_strid_fu_342_ap_ready)) then 
                    ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    invdar11_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_s_fu_408_p2))) then 
                invdar11_reg_180 <= indvarinc12_fu_387_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                invdar11_reg_180 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    invdar18_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_423_fu_414_p2) and (tmp_424_fu_420_p2 = ap_const_lv1_1))) then 
                invdar18_reg_191 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_427_fu_471_p2) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_1 = tmp_426_fu_465_p2))) then 
                invdar18_reg_191 <= indvarinc19_reg_654;
            end if; 
        end if;
    end process;

    invdar22_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_0 = tmp_426_fu_465_p2))) then 
                invdar22_reg_203 <= indvarinc23_reg_659;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                invdar22_reg_203 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar27_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_425_fu_459_p2))) then 
                invdar27_reg_215 <= indvarinc28_fu_438_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                invdar27_reg_215 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar34_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_1 = tmp_426_fu_465_p2) and (ap_const_lv1_1 = tmp_427_fu_471_p2))) then 
                invdar34_reg_226 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_0 = tmp_430_fu_522_p2) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_1 = tmp_429_fu_516_p2))) then 
                invdar34_reg_226 <= indvarinc35_reg_678;
            end if; 
        end if;
    end process;

    invdar38_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_0 = tmp_429_fu_516_p2))) then 
                invdar38_reg_238 <= indvarinc39_reg_683;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                invdar38_reg_238 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar3_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_424_fu_420_p2 = ap_const_lv1_0) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_423_fu_414_p2))) then 
                invdar3_reg_156 <= indvarinc4_reg_630;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                invdar3_reg_156 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    invdar42_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_0 = tmp_428_fu_510_p2))) then 
                invdar42_reg_250 <= indvarinc43_fu_489_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                invdar42_reg_250 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar48_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_0 = tmp_432_fu_567_p2))) then 
                invdar48_reg_273 <= indvarinc49_reg_707;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                invdar48_reg_273 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar49_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_431_fu_561_p2))) then 
                invdar49_reg_285 <= indvarinc50_fu_540_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                invdar49_reg_285 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar50_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_1 = tmp_432_fu_567_p2) and (ap_const_lv1_1 = tmp_433_fu_573_p2))) then 
                invdar50_reg_296 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = tmp_436_fu_624_p2) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_1 = tmp_435_fu_618_p2))) then 
                invdar50_reg_296 <= indvarinc51_reg_726;
            end if; 
        end if;
    end process;

    invdar51_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_0 = tmp_435_fu_618_p2))) then 
                invdar51_reg_308 <= indvarinc52_reg_731;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                invdar51_reg_308 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar52_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = tmp_434_fu_612_p2))) then 
                invdar52_reg_320 <= indvarinc53_fu_591_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                invdar52_reg_320 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    invdar7_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_423_fu_414_p2))) then 
                invdar7_reg_168 <= indvarinc8_reg_635;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                invdar7_reg_168 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    invdar_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_1 = tmp_429_fu_516_p2) and (ap_const_lv1_1 = tmp_430_fu_522_p2))) then 
                invdar_reg_261 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_433_fu_573_p2) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_1 = tmp_432_fu_567_p2))) then 
                invdar_reg_261 <= indvarinc_reg_702;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                indvarinc19_reg_654 <= indvarinc19_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                indvarinc23_reg_659 <= indvarinc23_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                indvarinc35_reg_678 <= indvarinc35_fu_477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                indvarinc39_reg_683 <= indvarinc39_fu_483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                indvarinc49_reg_707 <= indvarinc49_fu_534_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvarinc4_reg_630 <= indvarinc4_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                indvarinc51_reg_726 <= indvarinc51_fu_579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                indvarinc52_reg_731 <= indvarinc52_fu_585_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                indvarinc8_reg_635 <= indvarinc8_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                indvarinc_reg_702 <= indvarinc_fu_528_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state13, ap_CS_fsm_state16, grp_subconv_1x1_3214_fu_331_ap_done, grp_subconv_3x3_32_strid_fu_342_ap_done, grp_subconv_1x1_1612_fu_355_ap_done, grp_shuffle_2415_fu_367_ap_done, tmp_424_fu_420_p2, tmp_s_fu_408_p2, tmp_423_fu_414_p2, tmp_427_fu_471_p2, tmp_425_fu_459_p2, tmp_426_fu_465_p2, tmp_430_fu_522_p2, tmp_428_fu_510_p2, tmp_429_fu_516_p2, tmp_433_fu_573_p2, tmp_431_fu_561_p2, tmp_432_fu_567_p2, tmp_436_fu_624_p2, tmp_434_fu_612_p2, tmp_435_fu_618_p2, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_block_state21_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_423_fu_414_p2) and (tmp_424_fu_420_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_424_fu_420_p2 = ap_const_lv1_0) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_423_fu_414_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_s_fu_408_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_423_fu_414_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_1 = tmp_426_fu_465_p2) and (ap_const_lv1_1 = tmp_427_fu_471_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_427_fu_471_p2) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_1 = tmp_426_fu_465_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = tmp_425_fu_459_p2) and (ap_const_lv1_0 = tmp_426_fu_465_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_1 = tmp_429_fu_516_p2) and (ap_const_lv1_1 = tmp_430_fu_522_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_0 = tmp_430_fu_522_p2) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_1 = tmp_429_fu_516_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = tmp_428_fu_510_p2) and (ap_const_lv1_0 = tmp_429_fu_516_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_1 = tmp_432_fu_567_p2) and (ap_const_lv1_1 = tmp_433_fu_573_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_433_fu_573_p2) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_1 = tmp_432_fu_567_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = tmp_431_fu_561_p2) and (ap_const_lv1_0 = tmp_432_fu_567_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_1 = tmp_435_fu_618_p2) and (ap_const_lv1_1 = tmp_436_fu_624_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = tmp_436_fu_624_p2) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_1 = tmp_435_fu_618_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_1 = tmp_434_fu_612_p2) and (ap_const_lv1_0 = tmp_435_fu_618_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_subconv_1x1_3214_fu_331_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_subconv_3x3_32_strid_fu_342_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_block_state21_on_subcall_done = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_subconv_1x1_1612_fu_355_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (grp_shuffle_2415_fu_367_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state21_on_subcall_done_assign_proc : process(grp_subconv_3x3_32_strid_fu_342_ap_done, grp_subconv_1x1_1612_fu_355_ap_done)
    begin
                ap_block_state21_on_subcall_done <= ((ap_const_logic_0 = grp_subconv_3x3_32_strid_fu_342_ap_done) or (ap_const_logic_0 = grp_subconv_1x1_1612_fu_355_ap_done));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_shuffle_2415_fu_367_ap_done, ap_CS_fsm_state25)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (grp_shuffle_2415_fu_367_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_shuffle_2415_fu_367_ap_done, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) and (grp_shuffle_2415_fu_367_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv1l_bias_address0 <= grp_subconv_3x3_32_strid_fu_342_bias_address0;

    conv1l_bias_ce0_assign_proc : process(grp_subconv_3x3_32_strid_fu_342_bias_ce0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_bias_ce0 <= grp_subconv_3x3_32_strid_fu_342_bias_ce0;
        else 
            conv1l_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1l_output_0_address0_assign_proc : process(ap_CS_fsm_state13, grp_subconv_3x3_32_strid_fu_342_output_0_address0, grp_subconv_1x1_1612_fu_355_input_0_address0, ap_CS_fsm_state21, ap_CS_fsm_state23, tmp_667_fu_556_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1l_output_0_address0 <= tmp_667_fu_556_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1l_output_0_address0 <= grp_subconv_1x1_1612_fu_355_input_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_output_0_address0 <= grp_subconv_3x3_32_strid_fu_342_output_0_address0;
        else 
            conv1l_output_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv1l_output_0_ce0_assign_proc : process(ap_CS_fsm_state13, grp_subconv_3x3_32_strid_fu_342_output_0_ce0, grp_subconv_1x1_1612_fu_355_input_0_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1l_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1l_output_0_ce0 <= grp_subconv_1x1_1612_fu_355_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_output_0_ce0 <= grp_subconv_3x3_32_strid_fu_342_output_0_ce0;
        else 
            conv1l_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1l_output_0_d0_assign_proc : process(ap_CS_fsm_state13, grp_subconv_3x3_32_strid_fu_342_output_0_d0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1l_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_output_0_d0 <= grp_subconv_3x3_32_strid_fu_342_output_0_d0;
        else 
            conv1l_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1l_output_0_we0_assign_proc : process(ap_CS_fsm_state13, grp_subconv_3x3_32_strid_fu_342_output_0_we0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1l_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_output_0_we0 <= grp_subconv_3x3_32_strid_fu_342_output_0_we0;
        else 
            conv1l_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1l_weight_address0 <= grp_subconv_3x3_32_strid_fu_342_weight_address0;

    conv1l_weight_ce0_assign_proc : process(grp_subconv_3x3_32_strid_fu_342_weight_ce0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1l_weight_ce0 <= grp_subconv_3x3_32_strid_fu_342_weight_ce0;
        else 
            conv1l_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1r_bias_address0 <= grp_subconv_1x1_3214_fu_331_bias_address0;
    conv1r_bias_ce0 <= grp_subconv_1x1_3214_fu_331_bias_ce0;

    conv1r_output_address0_assign_proc : process(ap_CS_fsm_state4, grp_subconv_1x1_3214_fu_331_output_r_address0, grp_subconv_3x3_32_strid_fu_342_input_r_address0, ap_CS_fsm_state17, ap_CS_fsm_state19, tmp_664_fu_403_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1r_output_address0 <= tmp_664_fu_403_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv1r_output_address0 <= grp_subconv_3x3_32_strid_fu_342_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1r_output_address0 <= grp_subconv_1x1_3214_fu_331_output_r_address0;
        else 
            conv1r_output_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1r_output_ce0_assign_proc : process(ap_CS_fsm_state4, grp_subconv_1x1_3214_fu_331_output_r_ce0, grp_subconv_3x3_32_strid_fu_342_input_r_ce0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1r_output_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv1r_output_ce0 <= grp_subconv_3x3_32_strid_fu_342_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1r_output_ce0 <= grp_subconv_1x1_3214_fu_331_output_r_ce0;
        else 
            conv1r_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1r_output_d0_assign_proc : process(ap_CS_fsm_state4, grp_subconv_1x1_3214_fu_331_output_r_d0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1r_output_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1r_output_d0 <= grp_subconv_1x1_3214_fu_331_output_r_d0;
        else 
            conv1r_output_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1r_output_we0_assign_proc : process(ap_CS_fsm_state4, grp_subconv_1x1_3214_fu_331_output_r_we0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1r_output_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1r_output_we0 <= grp_subconv_1x1_3214_fu_331_output_r_we0;
        else 
            conv1r_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1r_weight_address0 <= grp_subconv_1x1_3214_fu_331_weight_address0;
    conv1r_weight_ce0 <= grp_subconv_1x1_3214_fu_331_weight_ce0;
    conv2l_bias_address0 <= grp_subconv_1x1_1612_fu_355_bias_address0;

    conv2l_bias_ce0_assign_proc : process(grp_subconv_1x1_1612_fu_355_bias_ce0, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_bias_ce0 <= grp_subconv_1x1_1612_fu_355_bias_ce0;
        else 
            conv2l_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2l_output_0_address0_assign_proc : process(ap_CS_fsm_state16, grp_subconv_1x1_1612_fu_355_output_0_address0, grp_shuffle_2415_fu_367_right_0_address0, ap_CS_fsm_state23, ap_CS_fsm_state25, tmp_668_fu_607_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv2l_output_0_address0 <= tmp_668_fu_607_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv2l_output_0_address0 <= grp_shuffle_2415_fu_367_right_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_output_0_address0 <= grp_subconv_1x1_1612_fu_355_output_0_address0;
        else 
            conv2l_output_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv2l_output_0_ce0_assign_proc : process(ap_CS_fsm_state16, grp_subconv_1x1_1612_fu_355_output_0_ce0, grp_shuffle_2415_fu_367_right_0_ce0, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv2l_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv2l_output_0_ce0 <= grp_shuffle_2415_fu_367_right_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_output_0_ce0 <= grp_subconv_1x1_1612_fu_355_output_0_ce0;
        else 
            conv2l_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2l_output_0_d0_assign_proc : process(ap_CS_fsm_state16, grp_subconv_1x1_1612_fu_355_output_0_d0, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv2l_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_output_0_d0 <= grp_subconv_1x1_1612_fu_355_output_0_d0;
        else 
            conv2l_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2l_output_0_we0_assign_proc : process(ap_CS_fsm_state16, grp_subconv_1x1_1612_fu_355_output_0_we0, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv2l_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_output_0_we0 <= grp_subconv_1x1_1612_fu_355_output_0_we0;
        else 
            conv2l_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2l_weight_address0 <= grp_subconv_1x1_1612_fu_355_weight_address0;

    conv2l_weight_ce0_assign_proc : process(grp_subconv_1x1_1612_fu_355_weight_ce0, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv2l_weight_ce0 <= grp_subconv_1x1_1612_fu_355_weight_ce0;
        else 
            conv2l_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2r_bias_address0 <= grp_subconv_3x3_32_strid_fu_342_bias_address0;

    conv2r_bias_ce0_assign_proc : process(grp_subconv_3x3_32_strid_fu_342_bias_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_bias_ce0 <= grp_subconv_3x3_32_strid_fu_342_bias_ce0;
        else 
            conv2r_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2r_ourput_0_address0_assign_proc : process(ap_CS_fsm_state7, grp_subconv_3x3_32_strid_fu_342_output_0_address0, grp_subconv_1x1_1612_fu_355_input_0_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, tmp_665_fu_454_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv2r_ourput_0_address0 <= tmp_665_fu_454_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2r_ourput_0_address0 <= grp_subconv_1x1_1612_fu_355_input_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_ourput_0_address0 <= grp_subconv_3x3_32_strid_fu_342_output_0_address0;
        else 
            conv2r_ourput_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv2r_ourput_0_ce0_assign_proc : process(ap_CS_fsm_state7, grp_subconv_3x3_32_strid_fu_342_output_0_ce0, grp_subconv_1x1_1612_fu_355_input_0_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv2r_ourput_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2r_ourput_0_ce0 <= grp_subconv_1x1_1612_fu_355_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_ourput_0_ce0 <= grp_subconv_3x3_32_strid_fu_342_output_0_ce0;
        else 
            conv2r_ourput_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2r_ourput_0_d0_assign_proc : process(ap_CS_fsm_state7, grp_subconv_3x3_32_strid_fu_342_output_0_d0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv2r_ourput_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_ourput_0_d0 <= grp_subconv_3x3_32_strid_fu_342_output_0_d0;
        else 
            conv2r_ourput_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2r_ourput_0_we0_assign_proc : process(ap_CS_fsm_state7, grp_subconv_3x3_32_strid_fu_342_output_0_we0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv2r_ourput_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_ourput_0_we0 <= grp_subconv_3x3_32_strid_fu_342_output_0_we0;
        else 
            conv2r_ourput_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2r_weight_address0 <= grp_subconv_3x3_32_strid_fu_342_weight_address0;

    conv2r_weight_ce0_assign_proc : process(grp_subconv_3x3_32_strid_fu_342_weight_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2r_weight_ce0 <= grp_subconv_3x3_32_strid_fu_342_weight_ce0;
        else 
            conv2r_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv3r_bias_address0 <= grp_subconv_1x1_1612_fu_355_bias_address0;

    conv3r_bias_ce0_assign_proc : process(grp_subconv_1x1_1612_fu_355_bias_ce0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_bias_ce0 <= grp_subconv_1x1_1612_fu_355_bias_ce0;
        else 
            conv3r_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3r_ourput_0_address0_assign_proc : process(ap_CS_fsm_state10, grp_subconv_1x1_1612_fu_355_output_0_address0, grp_shuffle_2415_fu_367_left_0_address0, ap_CS_fsm_state21, ap_CS_fsm_state25, tmp_666_fu_505_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv3r_ourput_0_address0 <= tmp_666_fu_505_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv3r_ourput_0_address0 <= grp_shuffle_2415_fu_367_left_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_ourput_0_address0 <= grp_subconv_1x1_1612_fu_355_output_0_address0;
        else 
            conv3r_ourput_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv3r_ourput_0_ce0_assign_proc : process(ap_CS_fsm_state10, grp_subconv_1x1_1612_fu_355_output_0_ce0, grp_shuffle_2415_fu_367_left_0_ce0, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv3r_ourput_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv3r_ourput_0_ce0 <= grp_shuffle_2415_fu_367_left_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_ourput_0_ce0 <= grp_subconv_1x1_1612_fu_355_output_0_ce0;
        else 
            conv3r_ourput_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3r_ourput_0_d0_assign_proc : process(ap_CS_fsm_state10, grp_subconv_1x1_1612_fu_355_output_0_d0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv3r_ourput_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_ourput_0_d0 <= grp_subconv_1x1_1612_fu_355_output_0_d0;
        else 
            conv3r_ourput_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3r_ourput_0_we0_assign_proc : process(ap_CS_fsm_state10, grp_subconv_1x1_1612_fu_355_output_0_we0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv3r_ourput_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_ourput_0_we0 <= grp_subconv_1x1_1612_fu_355_output_0_we0;
        else 
            conv3r_ourput_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv3r_weight_address0 <= grp_subconv_1x1_1612_fu_355_weight_address0;

    conv3r_weight_ce0_assign_proc : process(grp_subconv_1x1_1612_fu_355_weight_ce0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv3r_weight_ce0 <= grp_subconv_1x1_1612_fu_355_weight_ce0;
        else 
            conv3r_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    downsampleunit0_outp_address0 <= grp_shuffle_2415_fu_367_output_r_address0;
    downsampleunit0_outp_ce0 <= grp_shuffle_2415_fu_367_output_r_ce0;
    downsampleunit0_outp_d0 <= grp_shuffle_2415_fu_367_output_r_d0;
    downsampleunit0_outp_we0 <= grp_shuffle_2415_fu_367_output_r_we0;
    grp_shuffle_2415_fu_367_ap_start <= ap_reg_grp_shuffle_2415_fu_367_ap_start;
    grp_subconv_1x1_1612_fu_355_ap_start <= ap_reg_grp_subconv_1x1_1612_fu_355_ap_start;

    grp_subconv_1x1_1612_fu_355_bias_q0_assign_proc : process(conv3r_bias_q0, conv2l_bias_q0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_subconv_1x1_1612_fu_355_bias_q0 <= conv2l_bias_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_1x1_1612_fu_355_bias_q0 <= conv3r_bias_q0;
        else 
            grp_subconv_1x1_1612_fu_355_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_subconv_1x1_1612_fu_355_input_0_q0_assign_proc : process(conv2r_ourput_0_q0, conv1l_output_0_q0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_subconv_1x1_1612_fu_355_input_0_q0 <= conv1l_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_1x1_1612_fu_355_input_0_q0 <= conv2r_ourput_0_q0;
        else 
            grp_subconv_1x1_1612_fu_355_input_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_subconv_1x1_1612_fu_355_weight_q0_assign_proc : process(conv3r_weight_q0, conv2l_weight_q0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_subconv_1x1_1612_fu_355_weight_q0 <= conv2l_weight_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_1x1_1612_fu_355_weight_q0 <= conv3r_weight_q0;
        else 
            grp_subconv_1x1_1612_fu_355_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_subconv_1x1_3214_fu_331_ap_start <= ap_reg_grp_subconv_1x1_3214_fu_331_ap_start;
    grp_subconv_3x3_32_strid_fu_342_ap_start <= ap_reg_grp_subconv_3x3_32_strid_fu_342_ap_start;

    grp_subconv_3x3_32_strid_fu_342_bias_q0_assign_proc : process(conv2r_bias_q0, conv1l_bias_q0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_3x3_32_strid_fu_342_bias_q0 <= conv1l_bias_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_subconv_3x3_32_strid_fu_342_bias_q0 <= conv2r_bias_q0;
        else 
            grp_subconv_3x3_32_strid_fu_342_bias_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_subconv_3x3_32_strid_fu_342_input_r_q0_assign_proc : process(input_r_q0, conv1r_output_q0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_3x3_32_strid_fu_342_input_r_q0 <= input_r_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_subconv_3x3_32_strid_fu_342_input_r_q0 <= conv1r_output_q0;
        else 
            grp_subconv_3x3_32_strid_fu_342_input_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_subconv_3x3_32_strid_fu_342_weight_q0_assign_proc : process(conv2r_weight_q0, conv1l_weight_q0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_subconv_3x3_32_strid_fu_342_weight_q0 <= conv1l_weight_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_subconv_3x3_32_strid_fu_342_weight_q0 <= conv2r_weight_q0;
        else 
            grp_subconv_3x3_32_strid_fu_342_weight_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    indvarinc12_fu_387_p2 <= std_logic_vector(unsigned(invdar11_reg_180) + unsigned(ap_const_lv5_1));
    indvarinc19_fu_426_p2 <= std_logic_vector(unsigned(invdar18_reg_191) + unsigned(ap_const_lv5_1));
    indvarinc23_fu_432_p2 <= std_logic_vector(unsigned(invdar22_reg_203) + unsigned(ap_const_lv4_1));
    indvarinc28_fu_438_p2 <= std_logic_vector(unsigned(invdar27_reg_215) + unsigned(ap_const_lv4_1));
    indvarinc35_fu_477_p2 <= std_logic_vector(unsigned(invdar34_reg_226) + unsigned(ap_const_lv5_1));
    indvarinc39_fu_483_p2 <= std_logic_vector(unsigned(invdar38_reg_238) + unsigned(ap_const_lv4_1));
    indvarinc43_fu_489_p2 <= std_logic_vector(unsigned(invdar42_reg_250) + unsigned(ap_const_lv4_1));
    indvarinc49_fu_534_p2 <= std_logic_vector(unsigned(invdar48_reg_273) + unsigned(ap_const_lv4_1));
    indvarinc4_fu_375_p2 <= std_logic_vector(unsigned(invdar3_reg_156) + unsigned(ap_const_lv5_1));
    indvarinc50_fu_540_p2 <= std_logic_vector(unsigned(invdar49_reg_285) + unsigned(ap_const_lv4_1));
    indvarinc51_fu_579_p2 <= std_logic_vector(unsigned(invdar50_reg_296) + unsigned(ap_const_lv5_1));
    indvarinc52_fu_585_p2 <= std_logic_vector(unsigned(invdar51_reg_308) + unsigned(ap_const_lv4_1));
    indvarinc53_fu_591_p2 <= std_logic_vector(unsigned(invdar52_reg_320) + unsigned(ap_const_lv4_1));
    indvarinc8_fu_381_p2 <= std_logic_vector(unsigned(invdar7_reg_168) + unsigned(ap_const_lv5_1));
    indvarinc_fu_528_p2 <= std_logic_vector(unsigned(invdar_reg_261) + unsigned(ap_const_lv5_1));

    input_r_address0_assign_proc : process(grp_subconv_1x1_3214_fu_331_input_r_address0, grp_subconv_3x3_32_strid_fu_342_input_r_address0, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            input_r_address0 <= grp_subconv_3x3_32_strid_fu_342_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            input_r_address0 <= grp_subconv_1x1_3214_fu_331_input_r_address0;
        else 
            input_r_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(grp_subconv_1x1_3214_fu_331_input_r_ce0, grp_subconv_3x3_32_strid_fu_342_input_r_ce0, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            input_r_ce0 <= grp_subconv_3x3_32_strid_fu_342_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            input_r_ce0 <= grp_subconv_1x1_3214_fu_331_input_r_ce0;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_155_fu_444_p4 <= ((invdar18_reg_191 & invdar22_reg_203) & invdar27_reg_215);
    tmp_156_fu_495_p4 <= ((invdar34_reg_226 & invdar38_reg_238) & invdar42_reg_250);
    tmp_157_fu_546_p4 <= ((invdar_reg_261 & invdar48_reg_273) & invdar49_reg_285);
    tmp_158_fu_597_p4 <= ((invdar50_reg_296 & invdar51_reg_308) & invdar52_reg_320);
    tmp_423_fu_414_p2 <= "1" when (invdar7_reg_168 = ap_const_lv5_1F) else "0";
    tmp_424_fu_420_p2 <= "1" when (invdar3_reg_156 = ap_const_lv5_17) else "0";
    tmp_425_fu_459_p2 <= "1" when (invdar27_reg_215 = ap_const_lv4_F) else "0";
    tmp_426_fu_465_p2 <= "1" when (invdar22_reg_203 = ap_const_lv4_F) else "0";
    tmp_427_fu_471_p2 <= "1" when (invdar18_reg_191 = ap_const_lv5_17) else "0";
    tmp_428_fu_510_p2 <= "1" when (invdar42_reg_250 = ap_const_lv4_F) else "0";
    tmp_429_fu_516_p2 <= "1" when (invdar38_reg_238 = ap_const_lv4_F) else "0";
    tmp_430_fu_522_p2 <= "1" when (invdar34_reg_226 = ap_const_lv5_17) else "0";
    tmp_431_fu_561_p2 <= "1" when (invdar49_reg_285 = ap_const_lv4_F) else "0";
    tmp_432_fu_567_p2 <= "1" when (invdar48_reg_273 = ap_const_lv4_F) else "0";
    tmp_433_fu_573_p2 <= "1" when (invdar_reg_261 = ap_const_lv5_17) else "0";
    tmp_434_fu_612_p2 <= "1" when (invdar52_reg_320 = ap_const_lv4_F) else "0";
    tmp_435_fu_618_p2 <= "1" when (invdar51_reg_308 = ap_const_lv4_F) else "0";
    tmp_436_fu_624_p2 <= "1" when (invdar50_reg_296 = ap_const_lv5_17) else "0";
    tmp_664_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_393_p4),64));
    tmp_665_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_fu_444_p4),64));
    tmp_666_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_156_fu_495_p4),64));
    tmp_667_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_157_fu_546_p4),64));
    tmp_668_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_158_fu_597_p4),64));
    tmp_fu_393_p4 <= ((invdar3_reg_156 & invdar7_reg_168) & invdar11_reg_180);
    tmp_s_fu_408_p2 <= "1" when (invdar11_reg_180 = ap_const_lv5_1F) else "0";
end behav;
