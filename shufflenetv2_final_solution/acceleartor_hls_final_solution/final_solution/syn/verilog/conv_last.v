// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_last (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        m_axi_weight_0_V_AWVALID,
        m_axi_weight_0_V_AWREADY,
        m_axi_weight_0_V_AWADDR,
        m_axi_weight_0_V_AWID,
        m_axi_weight_0_V_AWLEN,
        m_axi_weight_0_V_AWSIZE,
        m_axi_weight_0_V_AWBURST,
        m_axi_weight_0_V_AWLOCK,
        m_axi_weight_0_V_AWCACHE,
        m_axi_weight_0_V_AWPROT,
        m_axi_weight_0_V_AWQOS,
        m_axi_weight_0_V_AWREGION,
        m_axi_weight_0_V_AWUSER,
        m_axi_weight_0_V_WVALID,
        m_axi_weight_0_V_WREADY,
        m_axi_weight_0_V_WDATA,
        m_axi_weight_0_V_WSTRB,
        m_axi_weight_0_V_WLAST,
        m_axi_weight_0_V_WID,
        m_axi_weight_0_V_WUSER,
        m_axi_weight_0_V_ARVALID,
        m_axi_weight_0_V_ARREADY,
        m_axi_weight_0_V_ARADDR,
        m_axi_weight_0_V_ARID,
        m_axi_weight_0_V_ARLEN,
        m_axi_weight_0_V_ARSIZE,
        m_axi_weight_0_V_ARBURST,
        m_axi_weight_0_V_ARLOCK,
        m_axi_weight_0_V_ARCACHE,
        m_axi_weight_0_V_ARPROT,
        m_axi_weight_0_V_ARQOS,
        m_axi_weight_0_V_ARREGION,
        m_axi_weight_0_V_ARUSER,
        m_axi_weight_0_V_RVALID,
        m_axi_weight_0_V_RREADY,
        m_axi_weight_0_V_RDATA,
        m_axi_weight_0_V_RLAST,
        m_axi_weight_0_V_RID,
        m_axi_weight_0_V_RUSER,
        m_axi_weight_0_V_RRESP,
        m_axi_weight_0_V_BVALID,
        m_axi_weight_0_V_BREADY,
        m_axi_weight_0_V_BRESP,
        m_axi_weight_0_V_BID,
        m_axi_weight_0_V_BUSER,
        conv_last_weight_0_V9,
        conv_last_weight_1_V11,
        conv_last_weight_2_V13,
        conv_last_weight_3_V15,
        conv_last_weight_4_V17,
        conv_last_weight_5_V19,
        conv_last_weight_6_V21,
        conv_last_weight_7_V23,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv_last_output_V_0_address0,
        conv_last_output_V_0_ce0,
        conv_last_output_V_0_we0,
        conv_last_output_V_0_d0,
        conv_last_output_V_0_q0,
        conv_last_output_V_1_address0,
        conv_last_output_V_1_ce0,
        conv_last_output_V_1_we0,
        conv_last_output_V_1_d0,
        conv_last_output_V_1_q0,
        conv_last_output_V_2_address0,
        conv_last_output_V_2_ce0,
        conv_last_output_V_2_we0,
        conv_last_output_V_2_d0,
        conv_last_output_V_2_q0,
        conv_last_output_V_3_address0,
        conv_last_output_V_3_ce0,
        conv_last_output_V_3_we0,
        conv_last_output_V_3_d0,
        conv_last_output_V_3_q0,
        conv_last_output_V_4_address0,
        conv_last_output_V_4_ce0,
        conv_last_output_V_4_we0,
        conv_last_output_V_4_d0,
        conv_last_output_V_4_q0,
        conv_last_output_V_5_address0,
        conv_last_output_V_5_ce0,
        conv_last_output_V_5_we0,
        conv_last_output_V_5_d0,
        conv_last_output_V_5_q0,
        conv_last_output_V_6_address0,
        conv_last_output_V_6_ce0,
        conv_last_output_V_6_we0,
        conv_last_output_V_6_d0,
        conv_last_output_V_6_q0,
        conv_last_output_V_7_address0,
        conv_last_output_V_7_ce0,
        conv_last_output_V_7_we0,
        conv_last_output_V_7_d0,
        conv_last_output_V_7_q0
);

parameter    ap_ST_fsm_state1 = 45'd1;
parameter    ap_ST_fsm_pp0_stage0 = 45'd2;
parameter    ap_ST_fsm_state5 = 45'd4;
parameter    ap_ST_fsm_state6 = 45'd8;
parameter    ap_ST_fsm_state7 = 45'd16;
parameter    ap_ST_fsm_state8 = 45'd32;
parameter    ap_ST_fsm_state9 = 45'd64;
parameter    ap_ST_fsm_state10 = 45'd128;
parameter    ap_ST_fsm_state11 = 45'd256;
parameter    ap_ST_fsm_state12 = 45'd512;
parameter    ap_ST_fsm_state13 = 45'd1024;
parameter    ap_ST_fsm_state14 = 45'd2048;
parameter    ap_ST_fsm_state15 = 45'd4096;
parameter    ap_ST_fsm_state16 = 45'd8192;
parameter    ap_ST_fsm_state17 = 45'd16384;
parameter    ap_ST_fsm_state18 = 45'd32768;
parameter    ap_ST_fsm_state19 = 45'd65536;
parameter    ap_ST_fsm_state20 = 45'd131072;
parameter    ap_ST_fsm_state21 = 45'd262144;
parameter    ap_ST_fsm_state22 = 45'd524288;
parameter    ap_ST_fsm_state23 = 45'd1048576;
parameter    ap_ST_fsm_state24 = 45'd2097152;
parameter    ap_ST_fsm_state25 = 45'd4194304;
parameter    ap_ST_fsm_state26 = 45'd8388608;
parameter    ap_ST_fsm_state27 = 45'd16777216;
parameter    ap_ST_fsm_state28 = 45'd33554432;
parameter    ap_ST_fsm_state29 = 45'd67108864;
parameter    ap_ST_fsm_state30 = 45'd134217728;
parameter    ap_ST_fsm_state31 = 45'd268435456;
parameter    ap_ST_fsm_state32 = 45'd536870912;
parameter    ap_ST_fsm_state33 = 45'd1073741824;
parameter    ap_ST_fsm_state34 = 45'd2147483648;
parameter    ap_ST_fsm_state35 = 45'd4294967296;
parameter    ap_ST_fsm_state36 = 45'd8589934592;
parameter    ap_ST_fsm_state37 = 45'd17179869184;
parameter    ap_ST_fsm_state38 = 45'd34359738368;
parameter    ap_ST_fsm_state39 = 45'd68719476736;
parameter    ap_ST_fsm_state40 = 45'd137438953472;
parameter    ap_ST_fsm_state41 = 45'd274877906944;
parameter    ap_ST_fsm_state42 = 45'd549755813888;
parameter    ap_ST_fsm_state43 = 45'd1099511627776;
parameter    ap_ST_fsm_state44 = 45'd2199023255552;
parameter    ap_ST_fsm_pp1_stage0 = 45'd4398046511104;
parameter    ap_ST_fsm_pp1_stage1 = 45'd8796093022208;
parameter    ap_ST_fsm_state49 = 45'd17592186044416;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output   m_axi_weight_0_V_AWVALID;
input   m_axi_weight_0_V_AWREADY;
output  [31:0] m_axi_weight_0_V_AWADDR;
output  [0:0] m_axi_weight_0_V_AWID;
output  [31:0] m_axi_weight_0_V_AWLEN;
output  [2:0] m_axi_weight_0_V_AWSIZE;
output  [1:0] m_axi_weight_0_V_AWBURST;
output  [1:0] m_axi_weight_0_V_AWLOCK;
output  [3:0] m_axi_weight_0_V_AWCACHE;
output  [2:0] m_axi_weight_0_V_AWPROT;
output  [3:0] m_axi_weight_0_V_AWQOS;
output  [3:0] m_axi_weight_0_V_AWREGION;
output  [0:0] m_axi_weight_0_V_AWUSER;
output   m_axi_weight_0_V_WVALID;
input   m_axi_weight_0_V_WREADY;
output  [7:0] m_axi_weight_0_V_WDATA;
output  [0:0] m_axi_weight_0_V_WSTRB;
output   m_axi_weight_0_V_WLAST;
output  [0:0] m_axi_weight_0_V_WID;
output  [0:0] m_axi_weight_0_V_WUSER;
output   m_axi_weight_0_V_ARVALID;
input   m_axi_weight_0_V_ARREADY;
output  [31:0] m_axi_weight_0_V_ARADDR;
output  [0:0] m_axi_weight_0_V_ARID;
output  [31:0] m_axi_weight_0_V_ARLEN;
output  [2:0] m_axi_weight_0_V_ARSIZE;
output  [1:0] m_axi_weight_0_V_ARBURST;
output  [1:0] m_axi_weight_0_V_ARLOCK;
output  [3:0] m_axi_weight_0_V_ARCACHE;
output  [2:0] m_axi_weight_0_V_ARPROT;
output  [3:0] m_axi_weight_0_V_ARQOS;
output  [3:0] m_axi_weight_0_V_ARREGION;
output  [0:0] m_axi_weight_0_V_ARUSER;
input   m_axi_weight_0_V_RVALID;
output   m_axi_weight_0_V_RREADY;
input  [7:0] m_axi_weight_0_V_RDATA;
input   m_axi_weight_0_V_RLAST;
input  [0:0] m_axi_weight_0_V_RID;
input  [0:0] m_axi_weight_0_V_RUSER;
input  [1:0] m_axi_weight_0_V_RRESP;
input   m_axi_weight_0_V_BVALID;
output   m_axi_weight_0_V_BREADY;
input  [1:0] m_axi_weight_0_V_BRESP;
input  [0:0] m_axi_weight_0_V_BID;
input  [0:0] m_axi_weight_0_V_BUSER;
input  [31:0] conv_last_weight_0_V9;
input  [31:0] conv_last_weight_1_V11;
input  [31:0] conv_last_weight_2_V13;
input  [31:0] conv_last_weight_3_V15;
input  [31:0] conv_last_weight_4_V17;
input  [31:0] conv_last_weight_5_V19;
input  [31:0] conv_last_weight_6_V21;
input  [31:0] conv_last_weight_7_V23;
output  [8:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [9:0] conv_last_output_V_0_address0;
output   conv_last_output_V_0_ce0;
output   conv_last_output_V_0_we0;
output  [7:0] conv_last_output_V_0_d0;
input  [7:0] conv_last_output_V_0_q0;
output  [9:0] conv_last_output_V_1_address0;
output   conv_last_output_V_1_ce0;
output   conv_last_output_V_1_we0;
output  [7:0] conv_last_output_V_1_d0;
input  [7:0] conv_last_output_V_1_q0;
output  [9:0] conv_last_output_V_2_address0;
output   conv_last_output_V_2_ce0;
output   conv_last_output_V_2_we0;
output  [7:0] conv_last_output_V_2_d0;
input  [7:0] conv_last_output_V_2_q0;
output  [9:0] conv_last_output_V_3_address0;
output   conv_last_output_V_3_ce0;
output   conv_last_output_V_3_we0;
output  [7:0] conv_last_output_V_3_d0;
input  [7:0] conv_last_output_V_3_q0;
output  [9:0] conv_last_output_V_4_address0;
output   conv_last_output_V_4_ce0;
output   conv_last_output_V_4_we0;
output  [7:0] conv_last_output_V_4_d0;
input  [7:0] conv_last_output_V_4_q0;
output  [9:0] conv_last_output_V_5_address0;
output   conv_last_output_V_5_ce0;
output   conv_last_output_V_5_we0;
output  [7:0] conv_last_output_V_5_d0;
input  [7:0] conv_last_output_V_5_q0;
output  [9:0] conv_last_output_V_6_address0;
output   conv_last_output_V_6_ce0;
output   conv_last_output_V_6_we0;
output  [7:0] conv_last_output_V_6_d0;
input  [7:0] conv_last_output_V_6_q0;
output  [9:0] conv_last_output_V_7_address0;
output   conv_last_output_V_7_ce0;
output   conv_last_output_V_7_we0;
output  [7:0] conv_last_output_V_7_d0;
input  [7:0] conv_last_output_V_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg m_axi_weight_0_V_ARVALID;
reg[31:0] m_axi_weight_0_V_ARADDR;
reg m_axi_weight_0_V_RREADY;
reg bias_V_ce0;
reg[9:0] conv_last_output_V_0_address0;
reg conv_last_output_V_0_ce0;
reg conv_last_output_V_0_we0;
reg[7:0] conv_last_output_V_0_d0;
reg[9:0] conv_last_output_V_1_address0;
reg conv_last_output_V_1_ce0;
reg conv_last_output_V_1_we0;
reg[7:0] conv_last_output_V_1_d0;
reg[9:0] conv_last_output_V_2_address0;
reg conv_last_output_V_2_ce0;
reg conv_last_output_V_2_we0;
reg[7:0] conv_last_output_V_2_d0;
reg[9:0] conv_last_output_V_3_address0;
reg conv_last_output_V_3_ce0;
reg conv_last_output_V_3_we0;
reg[7:0] conv_last_output_V_3_d0;
reg[9:0] conv_last_output_V_4_address0;
reg conv_last_output_V_4_ce0;
reg conv_last_output_V_4_we0;
reg[7:0] conv_last_output_V_4_d0;
reg[9:0] conv_last_output_V_5_address0;
reg conv_last_output_V_5_ce0;
reg conv_last_output_V_5_we0;
reg[7:0] conv_last_output_V_5_d0;
reg[9:0] conv_last_output_V_6_address0;
reg conv_last_output_V_6_ce0;
reg conv_last_output_V_6_we0;
reg[7:0] conv_last_output_V_6_d0;
reg[9:0] conv_last_output_V_7_address0;
reg conv_last_output_V_7_ce0;
reg conv_last_output_V_7_we0;
reg[7:0] conv_last_output_V_7_d0;

(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_0_V_blk_n_AR;
wire    ap_CS_fsm_state10;
reg    weight_0_V_blk_n_R;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
reg   [13:0] indvar_flatten10_reg_594;
reg   [9:0] i_reg_605;
reg   [5:0] indvar_flatten_reg_617;
reg   [2:0] j_reg_628;
reg   [2:0] k_reg_640;
reg   [13:0] indvar_flatten11_reg_696;
reg   [9:0] i_1_reg_707;
reg   [5:0] indvar_flatten12_reg_718;
reg   [2:0] j_1_reg_729;
reg   [2:0] k_1_reg_740;
reg   [7:0] reg_782;
reg    ap_sig_ioackin_m_axi_weight_0_V_ARREADY;
reg   [7:0] reg_787;
reg   [15:0] reg_792;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
reg   [15:0] reg_796;
reg   [7:0] reg_800;
reg   [15:0] reg_804;
reg   [7:0] reg_808;
reg   [15:0] reg_812;
reg   [7:0] reg_816;
reg   [7:0] reg_820;
wire    ap_CS_fsm_state33;
reg   [7:0] reg_824;
wire    ap_CS_fsm_state35;
reg   [7:0] reg_828;
wire    ap_CS_fsm_state37;
reg   [7:0] reg_832;
wire    ap_CS_fsm_state39;
reg   [7:0] reg_836;
wire    ap_CS_fsm_state41;
wire   [0:0] exitcond_flatten_fu_840_p2;
reg   [0:0] exitcond_flatten_reg_6001;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_6001;
wire   [13:0] indvar_flatten_next1_fu_846_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten14_fu_852_p2;
reg   [0:0] exitcond_flatten14_reg_6010;
wire   [5:0] indvar_flatten_next_fu_864_p3;
wire   [9:0] i_cast_mid2_v_fu_885_p3;
reg   [9:0] i_cast_mid2_v_reg_6023;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] tmp_fu_897_p1;
reg   [2:0] tmp_reg_6028;
reg   [6:0] newIndex77_cast_mid2_reg_6032;
wire   [2:0] k_mid2_fu_939_p3;
reg   [2:0] k_mid2_reg_6037;
wire   [2:0] j_cast_mid2_fu_947_p3;
reg   [2:0] j_cast_mid2_reg_6042;
wire   [2:0] k_2_fu_955_p2;
reg   [2:0] k_2_reg_6053;
wire   [9:0] h_cast_cast1_fu_1010_p1;
reg   [9:0] h_cast_cast1_reg_6058;
wire    ap_CS_fsm_state6;
wire   [11:0] h_cast_cast2_fu_1014_p1;
reg   [11:0] h_cast_cast2_reg_6069;
wire   [8:0] h_cast_cast3_fu_1018_p1;
reg   [8:0] h_cast_cast3_reg_6074;
wire   [10:0] h_cast_cast_fu_1022_p1;
reg   [10:0] h_cast_cast_reg_6079;
wire   [0:0] exitcond22_fu_1026_p2;
wire   [2:0] h_29_fu_1032_p2;
reg   [2:0] h_29_reg_6088;
wire   [11:0] w_cast_cast1_fu_1038_p1;
reg   [11:0] w_cast_cast1_reg_6093;
wire    ap_CS_fsm_state7;
wire   [12:0] w_cast_cast_fu_1042_p1;
reg   [12:0] w_cast_cast_reg_6106;
wire   [2:0] w_35_fu_1052_p2;
reg   [2:0] w_35_reg_6114;
wire   [16:0] ci_cast_cast1_fu_1058_p1;
reg   [16:0] ci_cast_cast1_reg_6119;
wire    ap_CS_fsm_state8;
wire   [18:0] ci_cast_cast2_fu_1062_p1;
reg   [18:0] ci_cast_cast2_reg_6130;
wire   [15:0] ci_cast_cast_fu_1066_p1;
reg   [15:0] ci_cast_cast_reg_6135;
reg   [11:0] input_V_addr_reg_6140;
wire   [7:0] ci_9_fu_1111_p2;
reg   [7:0] ci_9_reg_6148;
wire  signed [31:0] tmp_1546_cast_fu_1176_p1;
reg  signed [31:0] tmp_1546_cast_reg_6156;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond26_fu_1121_p2;
reg   [31:0] weight_7_V_addr_reg_6167;
wire   [8:0] tmp_551_fu_1203_p2;
reg   [8:0] tmp_551_reg_6173;
wire   [18:0] tmp_554_fu_1248_p2;
reg   [18:0] tmp_554_reg_6178;
reg   [9:0] conv_last_output_V_0_2_reg_6183;
reg   [6:0] newIndex3_reg_6188;
reg   [6:0] newIndex4_reg_6195;
reg   [6:0] newIndex5_reg_6202;
reg   [6:0] newIndex6_reg_6209;
reg   [6:0] newIndex7_reg_6216;
reg   [6:0] newIndex8_reg_6223;
reg   [6:0] newIndex_reg_6230;
wire   [8:0] co_36_7_fu_1398_p2;
reg   [8:0] co_36_7_reg_6237;
reg   [31:0] weight_7_V_addr_7_reg_6242;
reg   [31:0] weight_7_V_addr_8_reg_6248;
reg   [31:0] weight_7_V_addr_9_reg_6254;
reg   [31:0] weight_7_V_addr_10_reg_6260;
reg   [31:0] weight_7_V_addr_11_reg_6266;
reg   [31:0] weight_7_V_addr_12_reg_6272;
reg   [31:0] weight_7_V_addr_13_reg_6278;
reg   [31:0] weight_7_V_addr_14_reg_6284;
reg   [7:0] input_V_load_reg_6290;
reg   [31:0] weight_7_V_addr_15_reg_6295;
reg   [31:0] weight_7_V_addr_16_reg_6301;
reg   [31:0] weight_7_V_addr_17_reg_6307;
reg   [31:0] weight_7_V_addr_18_reg_6313;
reg   [31:0] weight_7_V_addr_19_reg_6319;
reg   [31:0] weight_7_V_addr_20_reg_6325;
reg   [31:0] weight_7_V_addr_21_reg_6331;
wire   [31:0] tmp_1552_cast_fu_1868_p1;
reg   [31:0] tmp_1552_cast_reg_6337;
reg   [9:0] conv_last_output_V_0_1_reg_6348;
reg   [9:0] conv_last_output_V_1_2_reg_6353;
reg   [9:0] conv_last_output_V_2_2_reg_6358;
reg   [9:0] conv_last_output_V_3_2_reg_6363;
reg   [9:0] conv_last_output_V_4_2_reg_6368;
reg   [9:0] conv_last_output_V_5_2_reg_6373;
reg   [9:0] conv_last_output_V_6_2_reg_6378;
reg   [9:0] conv_last_output_V_7_2_reg_6383;
reg   [0:0] tmp_1538_reg_6388;
reg   [0:0] tmp_1543_reg_6393;
reg   [9:0] conv_last_output_V_1_1_reg_6398;
wire   [16:0] p_Val2_s_fu_2127_p2;
reg   [16:0] p_Val2_s_reg_6403;
reg   [0:0] tmp_1537_reg_6408;
wire   [7:0] p_Val2_28_fu_2162_p2;
reg   [7:0] p_Val2_28_reg_6414;
wire   [0:0] tmp_1540_fu_2168_p3;
reg   [0:0] tmp_1540_reg_6420;
wire   [0:0] carry_s_fu_2182_p2;
reg   [0:0] carry_s_reg_6426;
wire   [0:0] Range2_all_ones_fu_2198_p2;
reg   [0:0] Range2_all_ones_reg_6433;
wire   [0:0] Range1_all_ones_fu_2214_p2;
reg   [0:0] Range1_all_ones_reg_6438;
wire   [0:0] Range1_all_zeros_fu_2220_p2;
reg   [0:0] Range1_all_zeros_reg_6445;
wire   [0:0] p_38_i_i9_fu_2255_p2;
reg   [0:0] p_38_i_i9_reg_6450;
wire   [0:0] tmp_169_fu_2270_p2;
reg   [0:0] tmp_169_reg_6455;
wire   [0:0] brmerge40_demorgan_i_fu_2281_p2;
reg   [0:0] brmerge40_demorgan_i_reg_6460;
wire   [0:0] underflow_fu_2298_p2;
reg   [0:0] underflow_reg_6465;
wire   [0:0] brmerge_i_i_i_fu_2303_p2;
reg   [0:0] brmerge_i_i_i_reg_6470;
reg   [0:0] tmp_1548_reg_6475;
reg   [0:0] tmp_1553_reg_6480;
reg   [9:0] conv_last_output_V_2_1_reg_6485;
wire   [16:0] p_Val2_121_1_fu_2355_p2;
reg   [16:0] p_Val2_121_1_reg_6490;
reg   [0:0] tmp_1547_reg_6495;
wire   [7:0] p_Val2_123_1_fu_2390_p2;
reg   [7:0] p_Val2_123_1_reg_6501;
wire   [0:0] tmp_1550_fu_2396_p3;
reg   [0:0] tmp_1550_reg_6507;
wire   [0:0] carry_30_1_fu_2410_p2;
reg   [0:0] carry_30_1_reg_6513;
wire   [0:0] Range2_all_ones_1_fu_2426_p2;
reg   [0:0] Range2_all_ones_1_reg_6520;
wire   [0:0] Range1_all_ones_1_fu_2442_p2;
reg   [0:0] Range1_all_ones_1_reg_6525;
wire   [0:0] Range1_all_zeros_1_fu_2448_p2;
reg   [0:0] Range1_all_zeros_1_reg_6532;
wire   [0:0] p_38_i_i9_1_fu_2483_p2;
reg   [0:0] p_38_i_i9_1_reg_6537;
wire   [0:0] tmp_398_1_fu_2498_p2;
reg   [0:0] tmp_398_1_reg_6542;
wire   [0:0] brmerge40_demorgan_i_205_fu_2509_p2;
reg   [0:0] brmerge40_demorgan_i_205_reg_6547;
wire   [0:0] underflow_1_fu_2526_p2;
reg   [0:0] underflow_1_reg_6552;
wire   [0:0] brmerge_i_i_i_1_fu_2531_p2;
reg   [0:0] brmerge_i_i_i_1_reg_6557;
reg   [0:0] tmp_1558_reg_6562;
reg   [0:0] tmp_1563_reg_6567;
reg   [9:0] conv_last_output_V_3_1_reg_6572;
wire   [16:0] p_Val2_121_2_fu_2583_p2;
reg   [16:0] p_Val2_121_2_reg_6577;
reg   [0:0] tmp_1557_reg_6582;
wire   [7:0] p_Val2_123_2_fu_2618_p2;
reg   [7:0] p_Val2_123_2_reg_6588;
wire   [0:0] tmp_1560_fu_2624_p3;
reg   [0:0] tmp_1560_reg_6594;
wire   [0:0] carry_30_2_fu_2638_p2;
reg   [0:0] carry_30_2_reg_6600;
wire   [0:0] Range2_all_ones_2_fu_2654_p2;
reg   [0:0] Range2_all_ones_2_reg_6607;
wire   [0:0] Range1_all_ones_2_fu_2670_p2;
reg   [0:0] Range1_all_ones_2_reg_6612;
wire   [0:0] Range1_all_zeros_2_fu_2676_p2;
reg   [0:0] Range1_all_zeros_2_reg_6619;
wire   [16:0] p_Val2_29_fu_2698_p2;
reg   [16:0] p_Val2_29_reg_6624;
reg   [0:0] tmp_1542_reg_6629;
wire   [7:0] p_Val2_31_fu_2733_p2;
reg   [7:0] p_Val2_31_reg_6635;
wire   [0:0] tmp_1545_fu_2739_p3;
reg   [0:0] tmp_1545_reg_6641;
wire   [0:0] carry_8_fu_2753_p2;
reg   [0:0] carry_8_reg_6647;
wire   [0:0] Range2_all_ones_9_fu_2769_p2;
reg   [0:0] Range2_all_ones_9_reg_6654;
wire   [0:0] Range1_all_ones_9_fu_2785_p2;
reg   [0:0] Range1_all_ones_9_reg_6659;
wire   [0:0] Range1_all_zeros_9_fu_2791_p2;
reg   [0:0] Range1_all_zeros_9_reg_6666;
wire   [0:0] p_38_i_i9_2_fu_2826_p2;
reg   [0:0] p_38_i_i9_2_reg_6671;
wire   [0:0] tmp_398_2_fu_2841_p2;
reg   [0:0] tmp_398_2_reg_6676;
wire   [0:0] brmerge40_demorgan_i_207_fu_2852_p2;
reg   [0:0] brmerge40_demorgan_i_207_reg_6681;
wire   [0:0] underflow_2_fu_2869_p2;
reg   [0:0] underflow_2_reg_6686;
wire   [0:0] brmerge_i_i_i_2_fu_2874_p2;
reg   [0:0] brmerge_i_i_i_2_reg_6691;
reg   [0:0] tmp_1568_reg_6696;
reg   [0:0] tmp_1573_reg_6701;
reg   [9:0] conv_last_output_V_5_1_reg_6706;
reg   [9:0] conv_last_output_V_4_1_reg_6711;
reg   [9:0] conv_last_output_V_7_1_reg_6716;
reg   [9:0] conv_last_output_V_6_1_reg_6721;
wire   [0:0] p_38_i_i_fu_2909_p2;
reg   [0:0] p_38_i_i_reg_6726;
wire   [0:0] tmp_175_fu_2924_p2;
reg   [0:0] tmp_175_reg_6731;
wire   [0:0] brmerge40_demorgan_i_219_fu_2935_p2;
reg   [0:0] brmerge40_demorgan_i_219_reg_6736;
wire   [0:0] underflow_18_fu_2952_p2;
reg   [0:0] underflow_18_reg_6741;
wire   [0:0] brmerge_i_i_i9_fu_2957_p2;
reg   [0:0] brmerge_i_i_i9_reg_6746;
wire   [16:0] p_Val2_121_3_fu_3009_p2;
reg   [16:0] p_Val2_121_3_reg_6751;
reg   [0:0] tmp_1567_reg_6756;
wire   [7:0] p_Val2_123_3_fu_3044_p2;
reg   [7:0] p_Val2_123_3_reg_6762;
wire   [0:0] tmp_1570_fu_3050_p3;
reg   [0:0] tmp_1570_reg_6768;
wire   [0:0] carry_30_3_fu_3064_p2;
reg   [0:0] carry_30_3_reg_6774;
wire   [0:0] Range2_all_ones_3_fu_3080_p2;
reg   [0:0] Range2_all_ones_3_reg_6781;
wire   [0:0] Range1_all_ones_3_fu_3096_p2;
reg   [0:0] Range1_all_ones_3_reg_6786;
wire   [0:0] Range1_all_zeros_3_fu_3102_p2;
reg   [0:0] Range1_all_zeros_3_reg_6793;
wire   [16:0] p_Val2_126_1_fu_3154_p2;
reg   [16:0] p_Val2_126_1_reg_6798;
reg   [0:0] tmp_1552_reg_6803;
wire   [7:0] p_Val2_128_1_fu_3189_p2;
reg   [7:0] p_Val2_128_1_reg_6809;
wire   [0:0] tmp_1555_fu_3195_p3;
reg   [0:0] tmp_1555_reg_6815;
wire   [0:0] carry_32_1_fu_3209_p2;
reg   [0:0] carry_32_1_reg_6821;
wire   [0:0] Range2_all_ones_9_1_fu_3225_p2;
reg   [0:0] Range2_all_ones_9_1_reg_6828;
wire   [0:0] Range1_all_ones_9_1_fu_3241_p2;
reg   [0:0] Range1_all_ones_9_1_reg_6833;
wire   [0:0] Range1_all_zeros_9_1_fu_3247_p2;
reg   [0:0] Range1_all_zeros_9_1_reg_6840;
wire   [0:0] p_38_i_i9_3_fu_3282_p2;
reg   [0:0] p_38_i_i9_3_reg_6845;
wire   [0:0] tmp_398_3_fu_3297_p2;
reg   [0:0] tmp_398_3_reg_6850;
wire   [0:0] brmerge40_demorgan_i_209_fu_3308_p2;
reg   [0:0] brmerge40_demorgan_i_209_reg_6855;
wire   [0:0] underflow_3_fu_3325_p2;
reg   [0:0] underflow_3_reg_6860;
wire   [0:0] brmerge_i_i_i_3_fu_3330_p2;
reg   [0:0] brmerge_i_i_i_3_reg_6865;
reg   [0:0] tmp_1578_reg_6870;
reg   [0:0] tmp_1583_reg_6875;
wire   [0:0] p_38_i_i_1_fu_3365_p2;
reg   [0:0] p_38_i_i_1_reg_6880;
wire   [0:0] tmp_413_1_fu_3380_p2;
reg   [0:0] tmp_413_1_reg_6885;
wire   [0:0] brmerge40_demorgan_i_206_fu_3391_p2;
reg   [0:0] brmerge40_demorgan_i_206_reg_6890;
wire   [0:0] underflow_18_1_fu_3408_p2;
reg   [0:0] underflow_18_1_reg_6895;
wire   [0:0] brmerge_i_i_i9_1_fu_3413_p2;
reg   [0:0] brmerge_i_i_i9_1_reg_6900;
wire   [16:0] p_Val2_121_4_fu_3465_p2;
reg   [16:0] p_Val2_121_4_reg_6905;
reg   [0:0] tmp_1577_reg_6910;
wire   [7:0] p_Val2_123_4_fu_3500_p2;
reg   [7:0] p_Val2_123_4_reg_6916;
wire   [0:0] tmp_1580_fu_3506_p3;
reg   [0:0] tmp_1580_reg_6922;
wire   [0:0] carry_30_4_fu_3520_p2;
reg   [0:0] carry_30_4_reg_6928;
wire   [0:0] Range2_all_ones_4_fu_3536_p2;
reg   [0:0] Range2_all_ones_4_reg_6935;
wire   [0:0] Range1_all_ones_4_fu_3552_p2;
reg   [0:0] Range1_all_ones_4_reg_6940;
wire   [0:0] Range1_all_zeros_4_fu_3558_p2;
reg   [0:0] Range1_all_zeros_4_reg_6947;
wire   [16:0] p_Val2_126_2_fu_3610_p2;
reg   [16:0] p_Val2_126_2_reg_6952;
reg   [0:0] tmp_1562_reg_6957;
wire   [7:0] p_Val2_128_2_fu_3645_p2;
reg   [7:0] p_Val2_128_2_reg_6963;
wire   [0:0] tmp_1565_fu_3651_p3;
reg   [0:0] tmp_1565_reg_6969;
wire   [0:0] carry_32_2_fu_3665_p2;
reg   [0:0] carry_32_2_reg_6975;
wire   [0:0] Range2_all_ones_9_2_fu_3681_p2;
reg   [0:0] Range2_all_ones_9_2_reg_6982;
wire   [0:0] Range1_all_ones_9_2_fu_3697_p2;
reg   [0:0] Range1_all_ones_9_2_reg_6987;
wire   [0:0] Range1_all_zeros_9_2_fu_3703_p2;
reg   [0:0] Range1_all_zeros_9_2_reg_6994;
wire   [0:0] p_38_i_i9_4_fu_3738_p2;
reg   [0:0] p_38_i_i9_4_reg_6999;
wire   [0:0] tmp_398_4_fu_3753_p2;
reg   [0:0] tmp_398_4_reg_7004;
wire   [0:0] brmerge40_demorgan_i_211_fu_3764_p2;
reg   [0:0] brmerge40_demorgan_i_211_reg_7009;
wire   [0:0] underflow_4_fu_3781_p2;
reg   [0:0] underflow_4_reg_7014;
wire   [0:0] brmerge_i_i_i_4_fu_3786_p2;
reg   [0:0] brmerge_i_i_i_4_reg_7019;
reg   [0:0] tmp_1588_reg_7024;
reg   [0:0] tmp_1593_reg_7029;
wire   [0:0] p_38_i_i_2_fu_3821_p2;
reg   [0:0] p_38_i_i_2_reg_7034;
wire   [0:0] tmp_413_2_fu_3836_p2;
reg   [0:0] tmp_413_2_reg_7039;
wire   [0:0] brmerge40_demorgan_i_208_fu_3847_p2;
reg   [0:0] brmerge40_demorgan_i_208_reg_7044;
wire   [0:0] underflow_18_2_fu_3864_p2;
reg   [0:0] underflow_18_2_reg_7049;
wire   [0:0] brmerge_i_i_i9_2_fu_3869_p2;
reg   [0:0] brmerge_i_i_i9_2_reg_7054;
wire   [16:0] p_Val2_121_5_fu_3921_p2;
reg   [16:0] p_Val2_121_5_reg_7059;
reg   [0:0] tmp_1587_reg_7064;
wire   [7:0] p_Val2_123_5_fu_3956_p2;
reg   [7:0] p_Val2_123_5_reg_7070;
wire   [0:0] tmp_1590_fu_3962_p3;
reg   [0:0] tmp_1590_reg_7076;
wire   [0:0] carry_30_5_fu_3976_p2;
reg   [0:0] carry_30_5_reg_7082;
wire   [0:0] Range2_all_ones_5_fu_3992_p2;
reg   [0:0] Range2_all_ones_5_reg_7089;
wire   [0:0] Range1_all_ones_5_fu_4008_p2;
reg   [0:0] Range1_all_ones_5_reg_7094;
wire   [0:0] Range1_all_zeros_5_fu_4014_p2;
reg   [0:0] Range1_all_zeros_5_reg_7101;
wire   [16:0] p_Val2_126_3_fu_4066_p2;
reg   [16:0] p_Val2_126_3_reg_7106;
reg   [0:0] tmp_1572_reg_7111;
wire   [7:0] p_Val2_128_3_fu_4101_p2;
reg   [7:0] p_Val2_128_3_reg_7117;
wire   [0:0] tmp_1575_fu_4107_p3;
reg   [0:0] tmp_1575_reg_7123;
wire   [0:0] carry_32_3_fu_4121_p2;
reg   [0:0] carry_32_3_reg_7129;
wire   [0:0] Range2_all_ones_9_3_fu_4137_p2;
reg   [0:0] Range2_all_ones_9_3_reg_7136;
wire   [0:0] Range1_all_ones_9_3_fu_4153_p2;
reg   [0:0] Range1_all_ones_9_3_reg_7141;
wire   [0:0] Range1_all_zeros_9_3_fu_4159_p2;
reg   [0:0] Range1_all_zeros_9_3_reg_7148;
wire   [0:0] p_38_i_i9_5_fu_4194_p2;
reg   [0:0] p_38_i_i9_5_reg_7153;
wire   [0:0] tmp_398_5_fu_4209_p2;
reg   [0:0] tmp_398_5_reg_7158;
wire   [0:0] brmerge40_demorgan_i_213_fu_4220_p2;
reg   [0:0] brmerge40_demorgan_i_213_reg_7163;
wire   [0:0] underflow_5_fu_4237_p2;
reg   [0:0] underflow_5_reg_7168;
wire   [0:0] brmerge_i_i_i_5_fu_4242_p2;
reg   [0:0] brmerge_i_i_i_5_reg_7173;
reg   [0:0] tmp_1598_reg_7178;
reg   [0:0] tmp_1603_reg_7183;
wire   [0:0] p_38_i_i_3_fu_4277_p2;
reg   [0:0] p_38_i_i_3_reg_7188;
wire   [0:0] tmp_413_3_fu_4292_p2;
reg   [0:0] tmp_413_3_reg_7193;
wire   [0:0] brmerge40_demorgan_i_210_fu_4303_p2;
reg   [0:0] brmerge40_demorgan_i_210_reg_7198;
wire   [0:0] underflow_18_3_fu_4320_p2;
reg   [0:0] underflow_18_3_reg_7203;
wire   [0:0] brmerge_i_i_i9_3_fu_4325_p2;
reg   [0:0] brmerge_i_i_i9_3_reg_7208;
wire   [16:0] p_Val2_121_6_fu_4377_p2;
reg   [16:0] p_Val2_121_6_reg_7213;
reg   [0:0] tmp_1597_reg_7218;
wire   [7:0] p_Val2_123_6_fu_4412_p2;
reg   [7:0] p_Val2_123_6_reg_7224;
wire   [0:0] tmp_1600_fu_4418_p3;
reg   [0:0] tmp_1600_reg_7230;
wire   [0:0] carry_30_6_fu_4432_p2;
reg   [0:0] carry_30_6_reg_7236;
wire   [0:0] Range2_all_ones_6_fu_4448_p2;
reg   [0:0] Range2_all_ones_6_reg_7243;
wire   [0:0] Range1_all_ones_6_fu_4464_p2;
reg   [0:0] Range1_all_ones_6_reg_7248;
wire   [0:0] Range1_all_zeros_6_fu_4470_p2;
reg   [0:0] Range1_all_zeros_6_reg_7255;
wire   [16:0] p_Val2_126_4_fu_4522_p2;
reg   [16:0] p_Val2_126_4_reg_7260;
reg   [0:0] tmp_1582_reg_7265;
wire   [7:0] p_Val2_128_4_fu_4557_p2;
reg   [7:0] p_Val2_128_4_reg_7271;
wire   [0:0] tmp_1585_fu_4563_p3;
reg   [0:0] tmp_1585_reg_7277;
wire   [0:0] carry_32_4_fu_4577_p2;
reg   [0:0] carry_32_4_reg_7283;
wire   [0:0] Range2_all_ones_9_4_fu_4593_p2;
reg   [0:0] Range2_all_ones_9_4_reg_7290;
wire   [0:0] Range1_all_ones_9_4_fu_4609_p2;
reg   [0:0] Range1_all_ones_9_4_reg_7295;
wire   [0:0] Range1_all_zeros_9_4_fu_4615_p2;
reg   [0:0] Range1_all_zeros_9_4_reg_7302;
wire   [0:0] p_38_i_i9_6_fu_4650_p2;
reg   [0:0] p_38_i_i9_6_reg_7307;
wire   [0:0] tmp_398_6_fu_4665_p2;
reg   [0:0] tmp_398_6_reg_7312;
wire   [0:0] brmerge40_demorgan_i_215_fu_4676_p2;
reg   [0:0] brmerge40_demorgan_i_215_reg_7317;
wire   [0:0] underflow_6_fu_4693_p2;
reg   [0:0] underflow_6_reg_7322;
wire   [0:0] brmerge_i_i_i_6_fu_4698_p2;
reg   [0:0] brmerge_i_i_i_6_reg_7327;
reg   [0:0] tmp_1608_reg_7332;
reg   [0:0] tmp_1613_reg_7337;
wire   [0:0] p_38_i_i_4_fu_4733_p2;
reg   [0:0] p_38_i_i_4_reg_7342;
wire   [0:0] tmp_413_4_fu_4748_p2;
reg   [0:0] tmp_413_4_reg_7347;
wire   [0:0] brmerge40_demorgan_i_212_fu_4759_p2;
reg   [0:0] brmerge40_demorgan_i_212_reg_7352;
wire   [0:0] underflow_18_4_fu_4776_p2;
reg   [0:0] underflow_18_4_reg_7357;
wire   [0:0] brmerge_i_i_i9_4_fu_4781_p2;
reg   [0:0] brmerge_i_i_i9_4_reg_7362;
wire   [16:0] p_Val2_121_7_fu_4833_p2;
reg   [16:0] p_Val2_121_7_reg_7367;
reg   [0:0] tmp_1607_reg_7372;
wire   [7:0] p_Val2_123_7_fu_4868_p2;
reg   [7:0] p_Val2_123_7_reg_7378;
wire   [0:0] tmp_1610_fu_4874_p3;
reg   [0:0] tmp_1610_reg_7384;
wire   [0:0] carry_30_7_fu_4888_p2;
reg   [0:0] carry_30_7_reg_7390;
wire   [0:0] Range2_all_ones_7_fu_4904_p2;
reg   [0:0] Range2_all_ones_7_reg_7397;
wire   [0:0] Range1_all_ones_7_fu_4920_p2;
reg   [0:0] Range1_all_ones_7_reg_7402;
wire   [0:0] Range1_all_zeros_7_fu_4926_p2;
reg   [0:0] Range1_all_zeros_7_reg_7409;
wire   [16:0] p_Val2_126_5_fu_4978_p2;
reg   [16:0] p_Val2_126_5_reg_7414;
wire    ap_CS_fsm_state38;
reg   [0:0] tmp_1592_reg_7419;
wire   [7:0] p_Val2_128_5_fu_5013_p2;
reg   [7:0] p_Val2_128_5_reg_7425;
wire   [0:0] tmp_1595_fu_5019_p3;
reg   [0:0] tmp_1595_reg_7431;
wire   [0:0] carry_32_5_fu_5033_p2;
reg   [0:0] carry_32_5_reg_7437;
wire   [0:0] Range2_all_ones_9_5_fu_5049_p2;
reg   [0:0] Range2_all_ones_9_5_reg_7444;
wire   [0:0] Range1_all_ones_9_5_fu_5065_p2;
reg   [0:0] Range1_all_ones_9_5_reg_7449;
wire   [0:0] Range1_all_zeros_9_5_fu_5071_p2;
reg   [0:0] Range1_all_zeros_9_5_reg_7456;
wire   [0:0] p_38_i_i9_7_fu_5106_p2;
reg   [0:0] p_38_i_i9_7_reg_7461;
wire   [0:0] tmp_398_7_fu_5121_p2;
reg   [0:0] tmp_398_7_reg_7466;
wire   [0:0] brmerge40_demorgan_i_217_fu_5132_p2;
reg   [0:0] brmerge40_demorgan_i_217_reg_7471;
wire   [0:0] underflow_7_fu_5149_p2;
reg   [0:0] underflow_7_reg_7476;
wire   [0:0] brmerge_i_i_i_7_fu_5154_p2;
reg   [0:0] brmerge_i_i_i_7_reg_7481;
wire   [0:0] p_38_i_i_5_fu_5189_p2;
reg   [0:0] p_38_i_i_5_reg_7486;
wire   [0:0] tmp_413_5_fu_5204_p2;
reg   [0:0] tmp_413_5_reg_7491;
wire   [0:0] brmerge40_demorgan_i_214_fu_5215_p2;
reg   [0:0] brmerge40_demorgan_i_214_reg_7496;
wire   [0:0] underflow_18_5_fu_5232_p2;
reg   [0:0] underflow_18_5_reg_7501;
wire   [0:0] brmerge_i_i_i9_5_fu_5237_p2;
reg   [0:0] brmerge_i_i_i9_5_reg_7506;
wire   [16:0] p_Val2_126_6_fu_5319_p2;
reg   [16:0] p_Val2_126_6_reg_7511;
wire    ap_CS_fsm_state40;
reg   [0:0] tmp_1602_reg_7516;
wire   [7:0] p_Val2_128_6_fu_5354_p2;
reg   [7:0] p_Val2_128_6_reg_7522;
wire   [0:0] tmp_1605_fu_5360_p3;
reg   [0:0] tmp_1605_reg_7528;
wire   [0:0] carry_32_6_fu_5374_p2;
reg   [0:0] carry_32_6_reg_7534;
wire   [0:0] Range2_all_ones_9_6_fu_5390_p2;
reg   [0:0] Range2_all_ones_9_6_reg_7541;
wire   [0:0] Range1_all_ones_9_6_fu_5406_p2;
reg   [0:0] Range1_all_ones_9_6_reg_7546;
wire   [0:0] Range1_all_zeros_9_6_fu_5412_p2;
reg   [0:0] Range1_all_zeros_9_6_reg_7553;
wire   [0:0] p_38_i_i_6_fu_5447_p2;
reg   [0:0] p_38_i_i_6_reg_7558;
wire   [0:0] tmp_413_6_fu_5462_p2;
reg   [0:0] tmp_413_6_reg_7563;
wire   [0:0] brmerge40_demorgan_i_216_fu_5473_p2;
reg   [0:0] brmerge40_demorgan_i_216_reg_7568;
wire   [0:0] underflow_18_6_fu_5490_p2;
reg   [0:0] underflow_18_6_reg_7573;
wire   [0:0] brmerge_i_i_i9_6_fu_5495_p2;
reg   [0:0] brmerge_i_i_i9_6_reg_7578;
wire   [16:0] p_Val2_126_7_fu_5547_p2;
reg   [16:0] p_Val2_126_7_reg_7583;
wire    ap_CS_fsm_state42;
reg   [0:0] tmp_1612_reg_7588;
wire   [7:0] p_Val2_128_7_fu_5582_p2;
reg   [7:0] p_Val2_128_7_reg_7594;
wire   [0:0] tmp_1615_fu_5588_p3;
reg   [0:0] tmp_1615_reg_7600;
wire   [0:0] carry_32_7_fu_5602_p2;
reg   [0:0] carry_32_7_reg_7606;
wire   [0:0] Range2_all_ones_9_7_fu_5618_p2;
reg   [0:0] Range2_all_ones_9_7_reg_7613;
wire   [0:0] Range1_all_ones_9_7_fu_5634_p2;
reg   [0:0] Range1_all_ones_9_7_reg_7618;
wire   [0:0] Range1_all_zeros_9_7_fu_5640_p2;
reg   [0:0] Range1_all_zeros_9_7_reg_7625;
wire   [0:0] p_38_i_i_7_fu_5675_p2;
reg   [0:0] p_38_i_i_7_reg_7630;
wire    ap_CS_fsm_state43;
wire   [0:0] tmp_413_7_fu_5690_p2;
reg   [0:0] tmp_413_7_reg_7635;
wire   [0:0] brmerge40_demorgan_i_218_fu_5701_p2;
reg   [0:0] brmerge40_demorgan_i_218_reg_7640;
wire   [0:0] underflow_18_7_fu_5718_p2;
reg   [0:0] underflow_18_7_reg_7645;
wire   [0:0] brmerge_i_i_i9_7_fu_5723_p2;
reg   [0:0] brmerge_i_i_i9_7_reg_7650;
wire   [0:0] exitcond_flatten15_fu_5759_p2;
reg   [0:0] exitcond_flatten15_reg_7655;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state45_pp1_stage0_iter0;
wire    ap_block_state47_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_flag00011001;
wire   [13:0] indvar_flatten_next1_8_fu_5765_p2;
reg   [13:0] indvar_flatten_next1_8_reg_7659;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] j_1_mid_fu_5783_p3;
reg   [2:0] j_1_mid_reg_7664;
wire   [9:0] arrayNo_mid2_v_fu_5791_p3;
reg   [9:0] arrayNo_mid2_v_reg_7670;
wire   [2:0] tmp_1530_fu_5799_p1;
reg   [2:0] tmp_1530_reg_7675;
reg   [2:0] ap_reg_pp1_iter1_tmp_1530_reg_7675;
reg   [6:0] newIndex78_cast_mid2_reg_7680;
wire   [0:0] exitcond_mid_fu_5825_p2;
reg   [0:0] exitcond_mid_reg_7685;
wire   [2:0] k_1_mid2_fu_5837_p3;
reg   [2:0] k_1_mid2_reg_7690;
wire   [5:0] indvar_flatten_next1_7_fu_5851_p3;
reg   [5:0] indvar_flatten_next1_7_reg_7696;
wire   [2:0] j_1_cast_mid2_fu_5864_p3;
reg   [2:0] j_1_cast_mid2_reg_7701;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state46_pp1_stage1_iter0;
wire    ap_block_state48_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_flag00011001;
wire   [2:0] k_3_fu_5870_p2;
reg   [2:0] k_3_reg_7707;
reg   [9:0] conv_last_output_V_1_5_reg_7712;
reg   [9:0] conv_last_output_V_5_5_reg_7717;
reg   [9:0] conv_last_output_V_0_5_reg_7722;
reg   [9:0] conv_last_output_V_4_5_reg_7727;
reg   [9:0] conv_last_output_V_7_5_reg_7732;
reg   [9:0] conv_last_output_V_2_5_reg_7737;
reg   [9:0] conv_last_output_V_3_5_reg_7742;
reg   [9:0] conv_last_output_V_6_5_reg_7747;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state45;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_flag00011011;
wire   [15:0] grp_MUL_DP_fu_751_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_751_ap_return_1;
reg    grp_MUL_DP_fu_751_ap_ce;
reg   [9:0] i_phi_fu_609_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [2:0] j_phi_fu_632_p4;
reg   [2:0] k_phi_fu_644_p4;
reg   [2:0] h_reg_652;
wire   [0:0] exitcond23_fu_1046_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] w_reg_663;
wire   [0:0] exitcond25_fu_1105_p2;
reg   [7:0] ci_reg_674;
reg   [8:0] co_reg_685;
wire    ap_CS_fsm_state44;
reg   [13:0] indvar_flatten11_phi_fu_700_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [9:0] i_1_phi_fu_711_p4;
reg   [5:0] indvar_flatten12_phi_fu_722_p4;
reg   [2:0] j_1_phi_fu_733_p4;
reg   [2:0] k_1_phi_fu_744_p4;
wire   [31:0] i_cast_mid2_fu_892_p1;
wire   [31:0] tmp_1528_cast_fu_998_p1;
wire   [31:0] tmp_1541_cast_fu_1100_p1;
wire   [31:0] tmp_1562_cast_fu_1281_p1;
wire   [31:0] tmp_1572_cast_fu_1902_p1;
wire   [31:0] tmp_1582_cast_fu_1936_p1;
wire   [31:0] tmp_1592_cast_fu_1970_p1;
wire   [31:0] tmp_1602_cast_fu_2004_p1;
wire   [31:0] tmp_1612_cast_fu_2038_p1;
wire   [31:0] tmp_1622_cast_fu_2072_p1;
wire   [31:0] tmp_1632_cast_fu_2106_p1;
wire   [31:0] tmp_1535_cast_fu_5912_p1;
wire   [31:0] sum_fu_1180_p2;
wire   [31:0] sum3_fu_1404_p2;
wire   [31:0] sum6_fu_1414_p2;
wire   [31:0] sum9_fu_1424_p2;
wire   [31:0] sum2_fu_1434_p2;
wire   [31:0] sum5_fu_1444_p2;
wire   [31:0] sum8_fu_1454_p2;
wire   [31:0] sum11_fu_1464_p2;
wire   [31:0] sum1_fu_1477_p2;
wire   [31:0] sum4_fu_1529_p2;
wire   [31:0] sum7_fu_1581_p2;
wire   [31:0] sum10_fu_1633_p2;
wire   [31:0] sum12_fu_1685_p2;
wire   [31:0] sum13_fu_1737_p2;
wire   [31:0] sum14_fu_1789_p2;
wire   [31:0] sum15_fu_1841_p2;
reg    ap_reg_ioackin_m_axi_weight_0_V_ARREADY;
wire   [7:0] this_assign_1_6_fu_4808_p3;
wire   [7:0] this_assign_52_1_6_fu_5522_p3;
wire   [0:0] tmp_1531_fu_5945_p3;
wire    ap_block_pp1_stage1_flag00000000;
wire   [7:0] this_assign_1_5_fu_4352_p3;
wire   [7:0] this_assign_52_1_5_fu_5294_p3;
wire   [7:0] this_assign_1_4_fu_3896_p3;
wire   [7:0] this_assign_52_1_4_fu_4953_p3;
wire   [7:0] this_assign_1_3_fu_3440_p3;
wire   [7:0] this_assign_52_1_3_fu_4497_p3;
wire   [7:0] this_assign_1_2_fu_2984_p3;
wire   [7:0] this_assign_52_1_2_fu_4041_p3;
wire   [7:0] this_assign_1_1_fu_2558_p3;
wire   [7:0] this_assign_52_1_1_fu_3585_p3;
wire   [7:0] this_assign_1_fu_2330_p3;
wire   [7:0] this_assign_52_1_fu_3129_p3;
wire   [7:0] this_assign_1_7_fu_5264_p3;
wire   [7:0] this_assign_52_1_7_fu_5750_p3;
wire   [5:0] indvar_flatten_op_fu_858_p2;
wire   [9:0] i_2_fu_872_p2;
wire   [0:0] exitcond_fu_916_p2;
wire   [0:0] not_exitcond_flatten_fu_911_p2;
wire   [2:0] j_mid_fu_878_p3;
wire   [0:0] exitcond50_mid_fu_922_p2;
wire   [0:0] tmp_536_fu_934_p2;
wire   [2:0] j_2_fu_928_p2;
wire   [8:0] tmp_535_fu_961_p3;
wire   [9:0] tmp_1523_cast_fu_968_p1;
wire   [9:0] j_cast_mid2_cast_fu_972_p1;
wire   [9:0] tmp_537_fu_975_p2;
wire   [11:0] tmp_1527_cast_fu_981_p3;
wire   [11:0] k_cast_cast_fu_989_p1;
wire   [11:0] tmp_538_fu_992_p2;
wire   [9:0] tmp_543_fu_1070_p3;
wire   [10:0] tmp_1537_cast_fu_1078_p1;
wire   [10:0] tmp_544_fu_1082_p2;
wire   [12:0] tmp_1540_cast_fu_1087_p3;
wire   [12:0] tmp_545_fu_1095_p2;
wire   [5:0] newIndex1_fu_1127_p4;
wire   [13:0] tmp_546_fu_1137_p3;
wire   [11:0] tmp_547_fu_1149_p3;
wire   [14:0] p_shl38_cast_fu_1145_p1;
wire   [14:0] p_shl39_cast_fu_1157_p1;
wire   [14:0] tmp_548_fu_1161_p2;
wire  signed [15:0] tmp_1545_cast_fu_1167_p1;
wire   [15:0] tmp_549_fu_1171_p2;
wire   [7:0] tmp_550_fu_1191_p3;
wire   [8:0] tmp_1548_cast_fu_1199_p1;
wire   [5:0] newIndex2_fu_1208_p2;
wire   [13:0] tmp_1533_fu_1214_p3;
wire   [11:0] tmp_1534_fu_1226_p3;
wire   [17:0] p_shl36_cast_fu_1222_p1;
wire   [17:0] p_shl37_cast_fu_1234_p1;
wire   [17:0] tmp_553_fu_1238_p2;
wire  signed [18:0] tmp_1555_cast_fu_1244_p1;
wire   [7:0] tmp_1535_fu_1253_p3;
wire   [11:0] tmp_1558_cast_fu_1261_p1;
wire   [11:0] tmp_555_fu_1265_p2;
wire   [11:0] tmp_1536_fu_1270_p2;
wire   [11:0] tmp_556_fu_1276_p2;
wire   [9:0] co_cast_fu_1117_p1;
wire   [9:0] tmp_1_fu_1286_p2;
wire   [9:0] tmp_2_fu_1302_p2;
wire   [9:0] tmp_3_fu_1318_p2;
wire   [9:0] tmp_4_fu_1334_p2;
wire   [9:0] tmp_5_fu_1350_p2;
wire   [9:0] tmp_6_fu_1366_p2;
wire   [9:0] tmp_7_fu_1382_p2;
wire  signed [31:0] tmp_1556_cast_fu_1474_p1;
wire   [14:0] tmp_557_fu_1488_p3;
wire   [12:0] tmp_558_fu_1499_p3;
wire   [15:0] p_shl34_cast_fu_1495_p1;
wire   [15:0] p_shl35_cast_fu_1506_p1;
wire   [15:0] tmp_559_fu_1510_p2;
wire  signed [16:0] tmp_1565_cast_fu_1516_p1;
wire   [16:0] tmp_560_fu_1520_p2;
wire  signed [31:0] tmp_1566_cast_fu_1525_p1;
wire   [14:0] tmp_564_fu_1540_p3;
wire   [12:0] tmp_565_fu_1551_p3;
wire   [15:0] p_shl32_cast_fu_1547_p1;
wire   [15:0] p_shl33_cast_fu_1558_p1;
wire   [15:0] tmp_566_fu_1562_p2;
wire  signed [16:0] tmp_1575_cast_fu_1568_p1;
wire   [16:0] tmp_567_fu_1572_p2;
wire  signed [31:0] tmp_1576_cast_fu_1577_p1;
wire   [14:0] tmp_571_fu_1592_p3;
wire   [12:0] tmp_572_fu_1603_p3;
wire   [15:0] p_shl30_cast_fu_1599_p1;
wire   [15:0] p_shl31_cast_fu_1610_p1;
wire   [15:0] tmp_573_fu_1614_p2;
wire  signed [16:0] tmp_1585_cast_fu_1620_p1;
wire   [16:0] tmp_574_fu_1624_p2;
wire  signed [31:0] tmp_1586_cast_fu_1629_p1;
wire   [14:0] tmp_578_fu_1644_p3;
wire   [12:0] tmp_579_fu_1655_p3;
wire   [15:0] p_shl28_cast_fu_1651_p1;
wire   [15:0] p_shl29_cast_fu_1662_p1;
wire   [15:0] tmp_580_fu_1666_p2;
wire  signed [16:0] tmp_1595_cast_fu_1672_p1;
wire   [16:0] tmp_581_fu_1676_p2;
wire  signed [31:0] tmp_1596_cast_fu_1681_p1;
wire   [14:0] tmp_585_fu_1696_p3;
wire   [12:0] tmp_586_fu_1707_p3;
wire   [15:0] p_shl26_cast_fu_1703_p1;
wire   [15:0] p_shl27_cast_fu_1714_p1;
wire   [15:0] tmp_587_fu_1718_p2;
wire  signed [16:0] tmp_1605_cast_fu_1724_p1;
wire   [16:0] tmp_588_fu_1728_p2;
wire  signed [31:0] tmp_1606_cast_fu_1733_p1;
wire   [14:0] tmp_592_fu_1748_p3;
wire   [12:0] tmp_593_fu_1759_p3;
wire   [15:0] p_shl24_cast_fu_1755_p1;
wire   [15:0] p_shl25_cast_fu_1766_p1;
wire   [15:0] tmp_594_fu_1770_p2;
wire  signed [16:0] tmp_1615_cast_fu_1776_p1;
wire   [16:0] tmp_595_fu_1780_p2;
wire  signed [31:0] tmp_1616_cast_fu_1785_p1;
wire   [14:0] tmp_599_fu_1800_p3;
wire   [12:0] tmp_600_fu_1811_p3;
wire   [15:0] p_shl_cast_fu_1807_p1;
wire   [15:0] p_shl23_cast_fu_1818_p1;
wire   [15:0] tmp_601_fu_1822_p2;
wire  signed [16:0] tmp_1625_cast_fu_1828_p1;
wire   [16:0] tmp_602_fu_1832_p2;
wire  signed [31:0] tmp_1626_cast_fu_1837_p1;
wire   [10:0] tmp_1532_fu_1852_p3;
wire   [11:0] tmp_1551_cast_fu_1859_p1;
wire   [11:0] tmp_552_fu_1863_p2;
wire   [8:0] tmp_561_fu_1873_p3;
wire   [9:0] tmp_1568_cast_fu_1880_p1;
wire   [9:0] tmp_562_fu_1884_p2;
wire   [11:0] tmp_1571_cast_fu_1889_p3;
wire   [11:0] tmp_563_fu_1897_p2;
wire   [8:0] tmp_568_fu_1907_p3;
wire   [9:0] tmp_1578_cast_fu_1914_p1;
wire   [9:0] tmp_569_fu_1918_p2;
wire   [11:0] tmp_1581_cast_fu_1923_p3;
wire   [11:0] tmp_570_fu_1931_p2;
wire   [8:0] tmp_575_fu_1941_p3;
wire   [9:0] tmp_1588_cast_fu_1948_p1;
wire   [9:0] tmp_576_fu_1952_p2;
wire   [11:0] tmp_1591_cast_fu_1957_p3;
wire   [11:0] tmp_577_fu_1965_p2;
wire   [8:0] tmp_582_fu_1975_p3;
wire   [9:0] tmp_1598_cast_fu_1982_p1;
wire   [9:0] tmp_583_fu_1986_p2;
wire   [11:0] tmp_1601_cast_fu_1991_p3;
wire   [11:0] tmp_584_fu_1999_p2;
wire   [8:0] tmp_589_fu_2009_p3;
wire   [9:0] tmp_1608_cast_fu_2016_p1;
wire   [9:0] tmp_590_fu_2020_p2;
wire   [11:0] tmp_1611_cast_fu_2025_p3;
wire   [11:0] tmp_591_fu_2033_p2;
wire   [8:0] tmp_596_fu_2043_p3;
wire   [9:0] tmp_1618_cast_fu_2050_p1;
wire   [9:0] tmp_597_fu_2054_p2;
wire   [11:0] tmp_1621_cast_fu_2059_p3;
wire   [11:0] tmp_598_fu_2067_p2;
wire   [8:0] tmp_603_fu_2077_p3;
wire   [9:0] tmp_1628_cast_fu_2084_p1;
wire   [9:0] tmp_604_fu_2088_p2;
wire   [11:0] tmp_1631_cast_fu_2093_p3;
wire   [11:0] tmp_605_fu_2101_p2;
wire   [13:0] tmp_s_fu_2111_p3;
wire  signed [16:0] tmp_165_fu_2123_p1;
wire  signed [16:0] tmp_254_cast_fu_2119_p1;
wire   [7:0] tmp_166_fu_2151_p1;
wire   [7:0] p_Val2_27_fu_2141_p4;
wire   [0:0] tmp_1539_fu_2154_p3;
wire   [0:0] tmp_167_fu_2176_p2;
wire   [1:0] p_Result_s_fu_2188_p4;
wire   [2:0] p_Result_23_fu_2204_p4;
wire   [0:0] tmp_1541_fu_2226_p3;
wire   [0:0] tmp_168_fu_2238_p2;
wire   [0:0] p_41_i_i9_fu_2244_p2;
wire   [0:0] deleted_zeros_fu_2233_p3;
wire   [0:0] p_not_i_i_fu_2259_p2;
wire   [0:0] brmerge_i_i_fu_2265_p2;
wire   [0:0] deleted_ones_fu_2249_p3;
wire   [0:0] tmp1_demorgan_fu_2286_p2;
wire   [0:0] tmp1_fu_2292_p2;
wire   [0:0] overflow_fu_2275_p2;
wire   [0:0] tmp2_fu_2309_p2;
wire   [0:0] underflow_not_fu_2313_p2;
wire   [7:0] p_Val2_123_mux_fu_2318_p3;
wire   [7:0] p_Val2_s_359_fu_2324_p3;
wire   [13:0] tmp_385_1_fu_2339_p3;
wire  signed [16:0] tmp_386_1_fu_2351_p1;
wire  signed [16:0] tmp_385_1_cast_fu_2347_p1;
wire   [7:0] tmp_389_1_fu_2379_p1;
wire   [7:0] p_Val2_122_1_fu_2369_p4;
wire   [0:0] tmp_1549_fu_2382_p3;
wire   [0:0] tmp_393_1_fu_2404_p2;
wire   [1:0] p_Result_227_1_fu_2416_p4;
wire   [2:0] p_Result_228_1_fu_2432_p4;
wire   [0:0] tmp_1551_fu_2454_p3;
wire   [0:0] tmp_396_1_fu_2466_p2;
wire   [0:0] p_41_i_i9_1_fu_2472_p2;
wire   [0:0] deleted_zeros_1_fu_2461_p3;
wire   [0:0] p_not_i_i_1_fu_2487_p2;
wire   [0:0] brmerge_i_i_1_fu_2493_p2;
wire   [0:0] deleted_ones_1_fu_2477_p3;
wire   [0:0] tmp5_demorgan_fu_2514_p2;
wire   [0:0] tmp5_fu_2520_p2;
wire   [0:0] overflow_1_fu_2503_p2;
wire   [0:0] tmp6_fu_2537_p2;
wire   [0:0] underflow_not_1_fu_2541_p2;
wire   [7:0] p_Val2_123_mux_1_fu_2546_p3;
wire   [7:0] p_Val2_123_1_360_fu_2552_p3;
wire   [13:0] tmp_385_2_fu_2567_p3;
wire  signed [16:0] tmp_386_2_fu_2579_p1;
wire  signed [16:0] tmp_385_2_cast_fu_2575_p1;
wire   [7:0] tmp_389_2_fu_2607_p1;
wire   [7:0] p_Val2_122_2_fu_2597_p4;
wire   [0:0] tmp_1559_fu_2610_p3;
wire   [0:0] tmp_393_2_fu_2632_p2;
wire   [1:0] p_Result_227_2_fu_2644_p4;
wire   [2:0] p_Result_228_2_fu_2660_p4;
wire   [13:0] tmp_170_fu_2682_p3;
wire  signed [16:0] tmp_171_fu_2694_p1;
wire  signed [16:0] tmp_263_cast_fu_2690_p1;
wire   [7:0] tmp_172_fu_2722_p1;
wire   [7:0] p_Val2_30_fu_2712_p4;
wire   [0:0] tmp_1544_fu_2725_p3;
wire   [0:0] tmp_173_fu_2747_p2;
wire   [1:0] p_Result_24_fu_2759_p4;
wire   [2:0] p_Result_25_fu_2775_p4;
wire   [0:0] tmp_1561_fu_2797_p3;
wire   [0:0] tmp_396_2_fu_2809_p2;
wire   [0:0] p_41_i_i9_2_fu_2815_p2;
wire   [0:0] deleted_zeros_2_fu_2804_p3;
wire   [0:0] p_not_i_i_2_fu_2830_p2;
wire   [0:0] brmerge_i_i_2_fu_2836_p2;
wire   [0:0] deleted_ones_2_fu_2820_p3;
wire   [0:0] tmp9_demorgan_fu_2857_p2;
wire   [0:0] tmp9_fu_2863_p2;
wire   [0:0] overflow_2_fu_2846_p2;
wire   [0:0] tmp_1546_fu_2880_p3;
wire   [0:0] tmp_174_fu_2892_p2;
wire   [0:0] p_41_i_i_fu_2898_p2;
wire   [0:0] deleted_zeros_9_fu_2887_p3;
wire   [0:0] p_not_i_i9_fu_2913_p2;
wire   [0:0] brmerge_i_i7_fu_2919_p2;
wire   [0:0] deleted_ones_9_fu_2903_p3;
wire   [0:0] tmp3_demorgan_fu_2940_p2;
wire   [0:0] tmp3_fu_2946_p2;
wire   [0:0] overflow_18_fu_2929_p2;
wire   [0:0] tmp10_fu_2963_p2;
wire   [0:0] underflow_not_2_fu_2967_p2;
wire   [7:0] p_Val2_123_mux_2_fu_2972_p3;
wire   [7:0] p_Val2_123_2_362_fu_2978_p3;
wire   [13:0] tmp_385_3_fu_2993_p3;
wire  signed [16:0] tmp_386_3_fu_3005_p1;
wire  signed [16:0] tmp_385_3_cast_fu_3001_p1;
wire   [7:0] tmp_389_3_fu_3033_p1;
wire   [7:0] p_Val2_122_3_fu_3023_p4;
wire   [0:0] tmp_1569_fu_3036_p3;
wire   [0:0] tmp_393_3_fu_3058_p2;
wire   [1:0] p_Result_227_3_fu_3070_p4;
wire   [2:0] p_Result_228_3_fu_3086_p4;
wire   [0:0] tmp4_fu_3108_p2;
wire   [0:0] underflow_18_not_fu_3112_p2;
wire   [7:0] p_Val2_128_mux_fu_3117_p3;
wire   [7:0] p_Val2_9_fu_3123_p3;
wire   [13:0] tmp_400_1_fu_3138_p3;
wire  signed [16:0] tmp_401_1_fu_3150_p1;
wire  signed [16:0] tmp_400_1_cast_fu_3146_p1;
wire   [7:0] tmp_404_1_fu_3178_p1;
wire   [7:0] p_Val2_127_1_fu_3168_p4;
wire   [0:0] tmp_1554_fu_3181_p3;
wire   [0:0] tmp_408_1_fu_3203_p2;
wire   [1:0] p_Result_229_1_fu_3215_p4;
wire   [2:0] p_Result_230_1_fu_3231_p4;
wire   [0:0] tmp_1571_fu_3253_p3;
wire   [0:0] tmp_396_3_fu_3265_p2;
wire   [0:0] p_41_i_i9_3_fu_3271_p2;
wire   [0:0] deleted_zeros_3_fu_3260_p3;
wire   [0:0] p_not_i_i_3_fu_3286_p2;
wire   [0:0] brmerge_i_i_3_fu_3292_p2;
wire   [0:0] deleted_ones_3_fu_3276_p3;
wire   [0:0] tmp13_demorgan_fu_3313_p2;
wire   [0:0] tmp13_fu_3319_p2;
wire   [0:0] overflow_3_fu_3302_p2;
wire   [0:0] tmp_1556_fu_3336_p3;
wire   [0:0] tmp_411_1_fu_3348_p2;
wire   [0:0] p_41_i_i_1_fu_3354_p2;
wire   [0:0] deleted_zeros_9_1_fu_3343_p3;
wire   [0:0] p_not_i_i9_1_fu_3369_p2;
wire   [0:0] brmerge_i_i7_1_fu_3375_p2;
wire   [0:0] deleted_ones_9_1_fu_3359_p3;
wire   [0:0] tmp7_demorgan_fu_3396_p2;
wire   [0:0] tmp7_fu_3402_p2;
wire   [0:0] overflow_18_1_fu_3385_p2;
wire   [0:0] tmp14_fu_3419_p2;
wire   [0:0] underflow_not_3_fu_3423_p2;
wire   [7:0] p_Val2_123_mux_3_fu_3428_p3;
wire   [7:0] p_Val2_123_3_364_fu_3434_p3;
wire   [13:0] tmp_385_4_fu_3449_p3;
wire  signed [16:0] tmp_386_4_fu_3461_p1;
wire  signed [16:0] tmp_385_4_cast_fu_3457_p1;
wire   [7:0] tmp_389_4_fu_3489_p1;
wire   [7:0] p_Val2_122_4_fu_3479_p4;
wire   [0:0] tmp_1579_fu_3492_p3;
wire   [0:0] tmp_393_4_fu_3514_p2;
wire   [1:0] p_Result_227_4_fu_3526_p4;
wire   [2:0] p_Result_228_4_fu_3542_p4;
wire   [0:0] tmp8_fu_3564_p2;
wire   [0:0] underflow_18_not_1_fu_3568_p2;
wire   [7:0] p_Val2_128_mux_1_fu_3573_p3;
wire   [7:0] p_Val2_128_1_361_fu_3579_p3;
wire   [13:0] tmp_400_2_fu_3594_p3;
wire  signed [16:0] tmp_401_2_fu_3606_p1;
wire  signed [16:0] tmp_400_2_cast_fu_3602_p1;
wire   [7:0] tmp_404_2_fu_3634_p1;
wire   [7:0] p_Val2_127_2_fu_3624_p4;
wire   [0:0] tmp_1564_fu_3637_p3;
wire   [0:0] tmp_408_2_fu_3659_p2;
wire   [1:0] p_Result_229_2_fu_3671_p4;
wire   [2:0] p_Result_230_2_fu_3687_p4;
wire   [0:0] tmp_1581_fu_3709_p3;
wire   [0:0] tmp_396_4_fu_3721_p2;
wire   [0:0] p_41_i_i9_4_fu_3727_p2;
wire   [0:0] deleted_zeros_4_fu_3716_p3;
wire   [0:0] p_not_i_i_4_fu_3742_p2;
wire   [0:0] brmerge_i_i_4_fu_3748_p2;
wire   [0:0] deleted_ones_4_fu_3732_p3;
wire   [0:0] tmp17_demorgan_fu_3769_p2;
wire   [0:0] tmp17_fu_3775_p2;
wire   [0:0] overflow_4_fu_3758_p2;
wire   [0:0] tmp_1566_fu_3792_p3;
wire   [0:0] tmp_411_2_fu_3804_p2;
wire   [0:0] p_41_i_i_2_fu_3810_p2;
wire   [0:0] deleted_zeros_9_2_fu_3799_p3;
wire   [0:0] p_not_i_i9_2_fu_3825_p2;
wire   [0:0] brmerge_i_i7_2_fu_3831_p2;
wire   [0:0] deleted_ones_9_2_fu_3815_p3;
wire   [0:0] tmp11_demorgan_fu_3852_p2;
wire   [0:0] tmp11_fu_3858_p2;
wire   [0:0] overflow_18_2_fu_3841_p2;
wire   [0:0] tmp18_fu_3875_p2;
wire   [0:0] underflow_not_4_fu_3879_p2;
wire   [7:0] p_Val2_123_mux_4_fu_3884_p3;
wire   [7:0] p_Val2_123_4_366_fu_3890_p3;
wire   [13:0] tmp_385_5_fu_3905_p3;
wire  signed [16:0] tmp_386_5_fu_3917_p1;
wire  signed [16:0] tmp_385_5_cast_fu_3913_p1;
wire   [7:0] tmp_389_5_fu_3945_p1;
wire   [7:0] p_Val2_122_5_fu_3935_p4;
wire   [0:0] tmp_1589_fu_3948_p3;
wire   [0:0] tmp_393_5_fu_3970_p2;
wire   [1:0] p_Result_227_5_fu_3982_p4;
wire   [2:0] p_Result_228_5_fu_3998_p4;
wire   [0:0] tmp12_fu_4020_p2;
wire   [0:0] underflow_18_not_2_fu_4024_p2;
wire   [7:0] p_Val2_128_mux_2_fu_4029_p3;
wire   [7:0] p_Val2_128_2_363_fu_4035_p3;
wire   [13:0] tmp_400_3_fu_4050_p3;
wire  signed [16:0] tmp_401_3_fu_4062_p1;
wire  signed [16:0] tmp_400_3_cast_fu_4058_p1;
wire   [7:0] tmp_404_3_fu_4090_p1;
wire   [7:0] p_Val2_127_3_fu_4080_p4;
wire   [0:0] tmp_1574_fu_4093_p3;
wire   [0:0] tmp_408_3_fu_4115_p2;
wire   [1:0] p_Result_229_3_fu_4127_p4;
wire   [2:0] p_Result_230_3_fu_4143_p4;
wire   [0:0] tmp_1591_fu_4165_p3;
wire   [0:0] tmp_396_5_fu_4177_p2;
wire   [0:0] p_41_i_i9_5_fu_4183_p2;
wire   [0:0] deleted_zeros_5_fu_4172_p3;
wire   [0:0] p_not_i_i_5_fu_4198_p2;
wire   [0:0] brmerge_i_i_5_fu_4204_p2;
wire   [0:0] deleted_ones_5_fu_4188_p3;
wire   [0:0] tmp21_demorgan_fu_4225_p2;
wire   [0:0] tmp21_fu_4231_p2;
wire   [0:0] overflow_5_fu_4214_p2;
wire   [0:0] tmp_1576_fu_4248_p3;
wire   [0:0] tmp_411_3_fu_4260_p2;
wire   [0:0] p_41_i_i_3_fu_4266_p2;
wire   [0:0] deleted_zeros_9_3_fu_4255_p3;
wire   [0:0] p_not_i_i9_3_fu_4281_p2;
wire   [0:0] brmerge_i_i7_3_fu_4287_p2;
wire   [0:0] deleted_ones_9_3_fu_4271_p3;
wire   [0:0] tmp15_demorgan_fu_4308_p2;
wire   [0:0] tmp15_fu_4314_p2;
wire   [0:0] overflow_18_3_fu_4297_p2;
wire   [0:0] tmp22_fu_4331_p2;
wire   [0:0] underflow_not_5_fu_4335_p2;
wire   [7:0] p_Val2_123_mux_5_fu_4340_p3;
wire   [7:0] p_Val2_123_5_368_fu_4346_p3;
wire   [13:0] tmp_385_6_fu_4361_p3;
wire  signed [16:0] tmp_386_6_fu_4373_p1;
wire  signed [16:0] tmp_385_6_cast_fu_4369_p1;
wire   [7:0] tmp_389_6_fu_4401_p1;
wire   [7:0] p_Val2_122_6_fu_4391_p4;
wire   [0:0] tmp_1599_fu_4404_p3;
wire   [0:0] tmp_393_6_fu_4426_p2;
wire   [1:0] p_Result_227_6_fu_4438_p4;
wire   [2:0] p_Result_228_6_fu_4454_p4;
wire   [0:0] tmp16_fu_4476_p2;
wire   [0:0] underflow_18_not_3_fu_4480_p2;
wire   [7:0] p_Val2_128_mux_3_fu_4485_p3;
wire   [7:0] p_Val2_128_3_365_fu_4491_p3;
wire   [13:0] tmp_400_4_fu_4506_p3;
wire  signed [16:0] tmp_401_4_fu_4518_p1;
wire  signed [16:0] tmp_400_4_cast_fu_4514_p1;
wire   [7:0] tmp_404_4_fu_4546_p1;
wire   [7:0] p_Val2_127_4_fu_4536_p4;
wire   [0:0] tmp_1584_fu_4549_p3;
wire   [0:0] tmp_408_4_fu_4571_p2;
wire   [1:0] p_Result_229_4_fu_4583_p4;
wire   [2:0] p_Result_230_4_fu_4599_p4;
wire   [0:0] tmp_1601_fu_4621_p3;
wire   [0:0] tmp_396_6_fu_4633_p2;
wire   [0:0] p_41_i_i9_6_fu_4639_p2;
wire   [0:0] deleted_zeros_6_fu_4628_p3;
wire   [0:0] p_not_i_i_6_fu_4654_p2;
wire   [0:0] brmerge_i_i_6_fu_4660_p2;
wire   [0:0] deleted_ones_6_fu_4644_p3;
wire   [0:0] tmp25_demorgan_fu_4681_p2;
wire   [0:0] tmp25_fu_4687_p2;
wire   [0:0] overflow_6_fu_4670_p2;
wire   [0:0] tmp_1586_fu_4704_p3;
wire   [0:0] tmp_411_4_fu_4716_p2;
wire   [0:0] p_41_i_i_4_fu_4722_p2;
wire   [0:0] deleted_zeros_9_4_fu_4711_p3;
wire   [0:0] p_not_i_i9_4_fu_4737_p2;
wire   [0:0] brmerge_i_i7_4_fu_4743_p2;
wire   [0:0] deleted_ones_9_4_fu_4727_p3;
wire   [0:0] tmp19_demorgan_fu_4764_p2;
wire   [0:0] tmp19_fu_4770_p2;
wire   [0:0] overflow_18_4_fu_4753_p2;
wire   [0:0] tmp26_fu_4787_p2;
wire   [0:0] underflow_not_6_fu_4791_p2;
wire   [7:0] p_Val2_123_mux_6_fu_4796_p3;
wire   [7:0] p_Val2_123_6_370_fu_4802_p3;
wire   [13:0] tmp_385_7_fu_4817_p3;
wire  signed [16:0] tmp_386_7_fu_4829_p1;
wire  signed [16:0] tmp_385_7_cast_fu_4825_p1;
wire   [7:0] tmp_389_7_fu_4857_p1;
wire   [7:0] p_Val2_122_7_fu_4847_p4;
wire   [0:0] tmp_1609_fu_4860_p3;
wire   [0:0] tmp_393_7_fu_4882_p2;
wire   [1:0] p_Result_227_7_fu_4894_p4;
wire   [2:0] p_Result_228_7_fu_4910_p4;
wire   [0:0] tmp20_fu_4932_p2;
wire   [0:0] underflow_18_not_4_fu_4936_p2;
wire   [7:0] p_Val2_128_mux_4_fu_4941_p3;
wire   [7:0] p_Val2_128_4_367_fu_4947_p3;
wire   [13:0] tmp_400_5_fu_4962_p3;
wire  signed [16:0] tmp_401_5_fu_4974_p1;
wire  signed [16:0] tmp_400_5_cast_fu_4970_p1;
wire   [7:0] tmp_404_5_fu_5002_p1;
wire   [7:0] p_Val2_127_5_fu_4992_p4;
wire   [0:0] tmp_1594_fu_5005_p3;
wire   [0:0] tmp_408_5_fu_5027_p2;
wire   [1:0] p_Result_229_5_fu_5039_p4;
wire   [2:0] p_Result_230_5_fu_5055_p4;
wire   [0:0] tmp_1611_fu_5077_p3;
wire   [0:0] tmp_396_7_fu_5089_p2;
wire   [0:0] p_41_i_i9_7_fu_5095_p2;
wire   [0:0] deleted_zeros_7_fu_5084_p3;
wire   [0:0] p_not_i_i_7_fu_5110_p2;
wire   [0:0] brmerge_i_i_7_fu_5116_p2;
wire   [0:0] deleted_ones_7_fu_5100_p3;
wire   [0:0] tmp29_demorgan_fu_5137_p2;
wire   [0:0] tmp29_fu_5143_p2;
wire   [0:0] overflow_7_fu_5126_p2;
wire   [0:0] tmp_1596_fu_5160_p3;
wire   [0:0] tmp_411_5_fu_5172_p2;
wire   [0:0] p_41_i_i_5_fu_5178_p2;
wire   [0:0] deleted_zeros_9_5_fu_5167_p3;
wire   [0:0] p_not_i_i9_5_fu_5193_p2;
wire   [0:0] brmerge_i_i7_5_fu_5199_p2;
wire   [0:0] deleted_ones_9_5_fu_5183_p3;
wire   [0:0] tmp23_demorgan_fu_5220_p2;
wire   [0:0] tmp23_fu_5226_p2;
wire   [0:0] overflow_18_5_fu_5209_p2;
wire   [0:0] tmp30_fu_5243_p2;
wire   [0:0] underflow_not_7_fu_5247_p2;
wire   [7:0] p_Val2_123_mux_7_fu_5252_p3;
wire   [7:0] p_Val2_123_7_372_fu_5258_p3;
wire   [0:0] tmp24_fu_5273_p2;
wire   [0:0] underflow_18_not_5_fu_5277_p2;
wire   [7:0] p_Val2_128_mux_5_fu_5282_p3;
wire   [7:0] p_Val2_128_5_369_fu_5288_p3;
wire   [13:0] tmp_400_6_fu_5303_p3;
wire  signed [16:0] tmp_401_6_fu_5315_p1;
wire  signed [16:0] tmp_400_6_cast_fu_5311_p1;
wire   [7:0] tmp_404_6_fu_5343_p1;
wire   [7:0] p_Val2_127_6_fu_5333_p4;
wire   [0:0] tmp_1604_fu_5346_p3;
wire   [0:0] tmp_408_6_fu_5368_p2;
wire   [1:0] p_Result_229_6_fu_5380_p4;
wire   [2:0] p_Result_230_6_fu_5396_p4;
wire   [0:0] tmp_1606_fu_5418_p3;
wire   [0:0] tmp_411_6_fu_5430_p2;
wire   [0:0] p_41_i_i_6_fu_5436_p2;
wire   [0:0] deleted_zeros_9_6_fu_5425_p3;
wire   [0:0] p_not_i_i9_6_fu_5451_p2;
wire   [0:0] brmerge_i_i7_6_fu_5457_p2;
wire   [0:0] deleted_ones_9_6_fu_5441_p3;
wire   [0:0] tmp27_demorgan_fu_5478_p2;
wire   [0:0] tmp27_fu_5484_p2;
wire   [0:0] overflow_18_6_fu_5467_p2;
wire   [0:0] tmp28_fu_5501_p2;
wire   [0:0] underflow_18_not_6_fu_5505_p2;
wire   [7:0] p_Val2_128_mux_6_fu_5510_p3;
wire   [7:0] p_Val2_128_6_371_fu_5516_p3;
wire   [13:0] tmp_400_7_fu_5531_p3;
wire  signed [16:0] tmp_401_7_fu_5543_p1;
wire  signed [16:0] tmp_400_7_cast_fu_5539_p1;
wire   [7:0] tmp_404_7_fu_5571_p1;
wire   [7:0] p_Val2_127_7_fu_5561_p4;
wire   [0:0] tmp_1614_fu_5574_p3;
wire   [0:0] tmp_408_7_fu_5596_p2;
wire   [1:0] p_Result_229_7_fu_5608_p4;
wire   [2:0] p_Result_230_7_fu_5624_p4;
wire   [0:0] tmp_1616_fu_5646_p3;
wire   [0:0] tmp_411_7_fu_5658_p2;
wire   [0:0] p_41_i_i_7_fu_5664_p2;
wire   [0:0] deleted_zeros_9_7_fu_5653_p3;
wire   [0:0] p_not_i_i9_7_fu_5679_p2;
wire   [0:0] brmerge_i_i7_7_fu_5685_p2;
wire   [0:0] deleted_ones_9_7_fu_5669_p3;
wire   [0:0] tmp31_demorgan_fu_5706_p2;
wire   [0:0] tmp31_fu_5712_p2;
wire   [0:0] overflow_18_7_fu_5695_p2;
wire   [0:0] tmp32_fu_5729_p2;
wire   [0:0] underflow_18_not_7_fu_5733_p2;
wire   [7:0] p_Val2_128_mux_7_fu_5738_p3;
wire   [7:0] p_Val2_128_7_373_fu_5744_p3;
wire   [0:0] exitcond_flatten16_fu_5777_p2;
wire   [9:0] i_3_fu_5771_p2;
wire   [0:0] exitcond24_fu_5819_p2;
wire   [0:0] not_exitcond_flatten_3_fu_5813_p2;
wire   [0:0] tmp_540_fu_5831_p2;
wire   [5:0] indvar_flatten21_op_fu_5845_p2;
wire   [2:0] j_3_fu_5859_p2;
wire   [8:0] tmp_539_fu_5875_p3;
wire   [9:0] tmp_1530_cast_fu_5882_p1;
wire   [9:0] j_1_cast_mid2_cast_fu_5886_p1;
wire   [9:0] tmp_541_fu_5889_p2;
wire   [11:0] tmp_1534_cast_fu_5895_p3;
wire   [11:0] k_1_cast_cast_fu_5903_p1;
wire   [11:0] tmp_542_fu_5906_p2;
wire   [7:0] tmp_109_fu_5924_p10;
wire    ap_CS_fsm_state49;
reg   [44:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 45'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_0_V_ARREADY = 1'b0;
end

MUL_DP grp_MUL_DP_fu_751(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(reg_782),
    .b_V(reg_787),
    .w_V(input_V_load_reg_6290),
    .ap_return_0(grp_MUL_DP_fu_751_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_751_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_751_ap_ce)
);

ShuffleNetV2_mux_zec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_zec_U679(
    .din1(conv_last_output_V_0_q0),
    .din2(conv_last_output_V_1_q0),
    .din3(conv_last_output_V_2_q0),
    .din4(conv_last_output_V_3_q0),
    .din5(conv_last_output_V_4_q0),
    .din6(conv_last_output_V_5_q0),
    .din7(conv_last_output_V_6_q0),
    .din8(conv_last_output_V_7_q0),
    .din9(ap_reg_pp1_iter1_tmp_1530_reg_7675),
    .dout(tmp_109_fu_5924_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state45))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_condition_pp1_exit_iter0_state45) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state45 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_0_V_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state17) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state19) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state18) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state20) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1)))) begin
            ap_reg_ioackin_m_axi_weight_0_V_ARREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state10) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state11) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state12) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state13) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state14) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state15) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state16) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state17) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state18) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state19) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state20) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state21) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state22) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state23) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state24) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state25) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b1 == m_axi_weight_0_V_ARREADY)))) begin
            ap_reg_ioackin_m_axi_weight_0_V_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond23_fu_1046_p2))) begin
        ci_reg_674 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond26_fu_1121_p2 == 1'd1))) begin
        ci_reg_674 <= ci_9_reg_6148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond25_fu_1105_p2))) begin
        co_reg_685 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        co_reg_685 <= co_36_7_reg_6237;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h_reg_652 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond23_fu_1046_p2))) begin
        h_reg_652 <= h_29_reg_6088;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
        i_1_reg_707 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_1_reg_707 <= arrayNo_mid2_v_reg_7670;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001))) begin
        i_reg_605 <= i_cast_mid2_v_reg_6023;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_605 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_840_p2))) begin
        indvar_flatten10_reg_594 <= indvar_flatten_next1_fu_846_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten10_reg_594 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
        indvar_flatten11_reg_696 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten11_reg_696 <= indvar_flatten_next1_8_reg_7659;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
        indvar_flatten12_reg_718 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten12_reg_718 <= indvar_flatten_next1_7_reg_7696;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_840_p2))) begin
        indvar_flatten_reg_617 <= indvar_flatten_next_fu_864_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_617 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
        j_1_reg_729 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_1_reg_729 <= j_1_cast_mid2_reg_7701;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001))) begin
        j_reg_628 <= j_cast_mid2_reg_6042;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_628 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
        k_1_reg_740 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        k_1_reg_740 <= k_3_reg_7707;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001))) begin
        k_reg_640 <= k_2_reg_6053;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_640 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond22_fu_1026_p2))) begin
        w_reg_663 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond25_fu_1105_p2))) begin
        w_reg_663 <= w_35_reg_6114;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        Range1_all_ones_1_reg_6525 <= Range1_all_ones_1_fu_2442_p2;
        Range1_all_zeros_1_reg_6532 <= Range1_all_zeros_1_fu_2448_p2;
        Range2_all_ones_1_reg_6520 <= Range2_all_ones_1_fu_2426_p2;
        carry_30_1_reg_6513 <= carry_30_1_fu_2410_p2;
        conv_last_output_V_2_1_reg_6485 <= tmp_1552_cast_reg_6337;
        p_Val2_121_1_reg_6490 <= p_Val2_121_1_fu_2355_p2;
        p_Val2_123_1_reg_6501 <= p_Val2_123_1_fu_2390_p2;
        tmp_1547_reg_6495 <= p_Val2_121_1_fu_2355_p2[32'd16];
        tmp_1550_reg_6507 <= p_Val2_123_1_fu_2390_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_2_reg_6612 <= Range1_all_ones_2_fu_2670_p2;
        Range1_all_zeros_2_reg_6619 <= Range1_all_zeros_2_fu_2676_p2;
        Range2_all_ones_2_reg_6607 <= Range2_all_ones_2_fu_2654_p2;
        carry_30_2_reg_6600 <= carry_30_2_fu_2638_p2;
        conv_last_output_V_3_1_reg_6572 <= tmp_1552_cast_reg_6337;
        p_Val2_121_2_reg_6577 <= p_Val2_121_2_fu_2583_p2;
        p_Val2_123_2_reg_6588 <= p_Val2_123_2_fu_2618_p2;
        tmp_1557_reg_6582 <= p_Val2_121_2_fu_2583_p2[32'd16];
        tmp_1560_reg_6594 <= p_Val2_123_2_fu_2618_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_3_reg_6786 <= Range1_all_ones_3_fu_3096_p2;
        Range1_all_zeros_3_reg_6793 <= Range1_all_zeros_3_fu_3102_p2;
        Range2_all_ones_3_reg_6781 <= Range2_all_ones_3_fu_3080_p2;
        brmerge40_demorgan_i_219_reg_6736 <= brmerge40_demorgan_i_219_fu_2935_p2;
        brmerge_i_i_i9_reg_6746 <= brmerge_i_i_i9_fu_2957_p2;
        carry_30_3_reg_6774 <= carry_30_3_fu_3064_p2;
        conv_last_output_V_4_1_reg_6711 <= tmp_1552_cast_reg_6337;
        conv_last_output_V_5_1_reg_6706 <= tmp_1552_cast_reg_6337;
        conv_last_output_V_6_1_reg_6721 <= tmp_1552_cast_reg_6337;
        conv_last_output_V_7_1_reg_6716 <= tmp_1552_cast_reg_6337;
        p_38_i_i_reg_6726 <= p_38_i_i_fu_2909_p2;
        p_Val2_121_3_reg_6751 <= p_Val2_121_3_fu_3009_p2;
        p_Val2_123_3_reg_6762 <= p_Val2_123_3_fu_3044_p2;
        tmp_1567_reg_6756 <= p_Val2_121_3_fu_3009_p2[32'd16];
        tmp_1570_reg_6768 <= p_Val2_123_3_fu_3044_p2[32'd7];
        tmp_175_reg_6731 <= tmp_175_fu_2924_p2;
        underflow_18_reg_6741 <= underflow_18_fu_2952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_4_reg_6940 <= Range1_all_ones_4_fu_3552_p2;
        Range1_all_zeros_4_reg_6947 <= Range1_all_zeros_4_fu_3558_p2;
        Range2_all_ones_4_reg_6935 <= Range2_all_ones_4_fu_3536_p2;
        brmerge40_demorgan_i_206_reg_6890 <= brmerge40_demorgan_i_206_fu_3391_p2;
        brmerge_i_i_i9_1_reg_6900 <= brmerge_i_i_i9_1_fu_3413_p2;
        carry_30_4_reg_6928 <= carry_30_4_fu_3520_p2;
        p_38_i_i_1_reg_6880 <= p_38_i_i_1_fu_3365_p2;
        p_Val2_121_4_reg_6905 <= p_Val2_121_4_fu_3465_p2;
        p_Val2_123_4_reg_6916 <= p_Val2_123_4_fu_3500_p2;
        tmp_1577_reg_6910 <= p_Val2_121_4_fu_3465_p2[32'd16];
        tmp_1580_reg_6922 <= p_Val2_123_4_fu_3500_p2[32'd7];
        tmp_413_1_reg_6885 <= tmp_413_1_fu_3380_p2;
        underflow_18_1_reg_6895 <= underflow_18_1_fu_3408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        Range1_all_ones_5_reg_7094 <= Range1_all_ones_5_fu_4008_p2;
        Range1_all_zeros_5_reg_7101 <= Range1_all_zeros_5_fu_4014_p2;
        Range2_all_ones_5_reg_7089 <= Range2_all_ones_5_fu_3992_p2;
        brmerge40_demorgan_i_208_reg_7044 <= brmerge40_demorgan_i_208_fu_3847_p2;
        brmerge_i_i_i9_2_reg_7054 <= brmerge_i_i_i9_2_fu_3869_p2;
        carry_30_5_reg_7082 <= carry_30_5_fu_3976_p2;
        p_38_i_i_2_reg_7034 <= p_38_i_i_2_fu_3821_p2;
        p_Val2_121_5_reg_7059 <= p_Val2_121_5_fu_3921_p2;
        p_Val2_123_5_reg_7070 <= p_Val2_123_5_fu_3956_p2;
        tmp_1587_reg_7064 <= p_Val2_121_5_fu_3921_p2[32'd16];
        tmp_1590_reg_7076 <= p_Val2_123_5_fu_3956_p2[32'd7];
        tmp_413_2_reg_7039 <= tmp_413_2_fu_3836_p2;
        underflow_18_2_reg_7049 <= underflow_18_2_fu_3864_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        Range1_all_ones_6_reg_7248 <= Range1_all_ones_6_fu_4464_p2;
        Range1_all_zeros_6_reg_7255 <= Range1_all_zeros_6_fu_4470_p2;
        Range2_all_ones_6_reg_7243 <= Range2_all_ones_6_fu_4448_p2;
        brmerge40_demorgan_i_210_reg_7198 <= brmerge40_demorgan_i_210_fu_4303_p2;
        brmerge_i_i_i9_3_reg_7208 <= brmerge_i_i_i9_3_fu_4325_p2;
        carry_30_6_reg_7236 <= carry_30_6_fu_4432_p2;
        p_38_i_i_3_reg_7188 <= p_38_i_i_3_fu_4277_p2;
        p_Val2_121_6_reg_7213 <= p_Val2_121_6_fu_4377_p2;
        p_Val2_123_6_reg_7224 <= p_Val2_123_6_fu_4412_p2;
        tmp_1597_reg_7218 <= p_Val2_121_6_fu_4377_p2[32'd16];
        tmp_1600_reg_7230 <= p_Val2_123_6_fu_4412_p2[32'd7];
        tmp_413_3_reg_7193 <= tmp_413_3_fu_4292_p2;
        underflow_18_3_reg_7203 <= underflow_18_3_fu_4320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        Range1_all_ones_7_reg_7402 <= Range1_all_ones_7_fu_4920_p2;
        Range1_all_zeros_7_reg_7409 <= Range1_all_zeros_7_fu_4926_p2;
        Range2_all_ones_7_reg_7397 <= Range2_all_ones_7_fu_4904_p2;
        brmerge40_demorgan_i_212_reg_7352 <= brmerge40_demorgan_i_212_fu_4759_p2;
        brmerge_i_i_i9_4_reg_7362 <= brmerge_i_i_i9_4_fu_4781_p2;
        carry_30_7_reg_7390 <= carry_30_7_fu_4888_p2;
        p_38_i_i_4_reg_7342 <= p_38_i_i_4_fu_4733_p2;
        p_Val2_121_7_reg_7367 <= p_Val2_121_7_fu_4833_p2;
        p_Val2_123_7_reg_7378 <= p_Val2_123_7_fu_4868_p2;
        tmp_1607_reg_7372 <= p_Val2_121_7_fu_4833_p2[32'd16];
        tmp_1610_reg_7384 <= p_Val2_123_7_fu_4868_p2[32'd7];
        tmp_413_4_reg_7347 <= tmp_413_4_fu_4748_p2;
        underflow_18_4_reg_7357 <= underflow_18_4_fu_4776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_9_1_reg_6833 <= Range1_all_ones_9_1_fu_3241_p2;
        Range1_all_zeros_9_1_reg_6840 <= Range1_all_zeros_9_1_fu_3247_p2;
        Range2_all_ones_9_1_reg_6828 <= Range2_all_ones_9_1_fu_3225_p2;
        brmerge40_demorgan_i_209_reg_6855 <= brmerge40_demorgan_i_209_fu_3308_p2;
        brmerge_i_i_i_3_reg_6865 <= brmerge_i_i_i_3_fu_3330_p2;
        carry_32_1_reg_6821 <= carry_32_1_fu_3209_p2;
        p_38_i_i9_3_reg_6845 <= p_38_i_i9_3_fu_3282_p2;
        p_Val2_126_1_reg_6798 <= p_Val2_126_1_fu_3154_p2;
        p_Val2_128_1_reg_6809 <= p_Val2_128_1_fu_3189_p2;
        tmp_1552_reg_6803 <= p_Val2_126_1_fu_3154_p2[32'd16];
        tmp_1555_reg_6815 <= p_Val2_128_1_fu_3189_p2[32'd7];
        tmp_1578_reg_6870 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1583_reg_6875 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_3_reg_6850 <= tmp_398_3_fu_3297_p2;
        underflow_3_reg_6860 <= underflow_3_fu_3325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_9_2_reg_6987 <= Range1_all_ones_9_2_fu_3697_p2;
        Range1_all_zeros_9_2_reg_6994 <= Range1_all_zeros_9_2_fu_3703_p2;
        Range2_all_ones_9_2_reg_6982 <= Range2_all_ones_9_2_fu_3681_p2;
        brmerge40_demorgan_i_211_reg_7009 <= brmerge40_demorgan_i_211_fu_3764_p2;
        brmerge_i_i_i_4_reg_7019 <= brmerge_i_i_i_4_fu_3786_p2;
        carry_32_2_reg_6975 <= carry_32_2_fu_3665_p2;
        p_38_i_i9_4_reg_6999 <= p_38_i_i9_4_fu_3738_p2;
        p_Val2_126_2_reg_6952 <= p_Val2_126_2_fu_3610_p2;
        p_Val2_128_2_reg_6963 <= p_Val2_128_2_fu_3645_p2;
        tmp_1562_reg_6957 <= p_Val2_126_2_fu_3610_p2[32'd16];
        tmp_1565_reg_6969 <= p_Val2_128_2_fu_3645_p2[32'd7];
        tmp_1588_reg_7024 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1593_reg_7029 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_4_reg_7004 <= tmp_398_4_fu_3753_p2;
        underflow_4_reg_7014 <= underflow_4_fu_3781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        Range1_all_ones_9_3_reg_7141 <= Range1_all_ones_9_3_fu_4153_p2;
        Range1_all_zeros_9_3_reg_7148 <= Range1_all_zeros_9_3_fu_4159_p2;
        Range2_all_ones_9_3_reg_7136 <= Range2_all_ones_9_3_fu_4137_p2;
        brmerge40_demorgan_i_213_reg_7163 <= brmerge40_demorgan_i_213_fu_4220_p2;
        brmerge_i_i_i_5_reg_7173 <= brmerge_i_i_i_5_fu_4242_p2;
        carry_32_3_reg_7129 <= carry_32_3_fu_4121_p2;
        p_38_i_i9_5_reg_7153 <= p_38_i_i9_5_fu_4194_p2;
        p_Val2_126_3_reg_7106 <= p_Val2_126_3_fu_4066_p2;
        p_Val2_128_3_reg_7117 <= p_Val2_128_3_fu_4101_p2;
        tmp_1572_reg_7111 <= p_Val2_126_3_fu_4066_p2[32'd16];
        tmp_1575_reg_7123 <= p_Val2_128_3_fu_4101_p2[32'd7];
        tmp_1598_reg_7178 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1603_reg_7183 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_5_reg_7158 <= tmp_398_5_fu_4209_p2;
        underflow_5_reg_7168 <= underflow_5_fu_4237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Range1_all_ones_9_4_reg_7295 <= Range1_all_ones_9_4_fu_4609_p2;
        Range1_all_zeros_9_4_reg_7302 <= Range1_all_zeros_9_4_fu_4615_p2;
        Range2_all_ones_9_4_reg_7290 <= Range2_all_ones_9_4_fu_4593_p2;
        brmerge40_demorgan_i_215_reg_7317 <= brmerge40_demorgan_i_215_fu_4676_p2;
        brmerge_i_i_i_6_reg_7327 <= brmerge_i_i_i_6_fu_4698_p2;
        carry_32_4_reg_7283 <= carry_32_4_fu_4577_p2;
        p_38_i_i9_6_reg_7307 <= p_38_i_i9_6_fu_4650_p2;
        p_Val2_126_4_reg_7260 <= p_Val2_126_4_fu_4522_p2;
        p_Val2_128_4_reg_7271 <= p_Val2_128_4_fu_4557_p2;
        tmp_1582_reg_7265 <= p_Val2_126_4_fu_4522_p2[32'd16];
        tmp_1585_reg_7277 <= p_Val2_128_4_fu_4557_p2[32'd7];
        tmp_1608_reg_7332 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1613_reg_7337 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_6_reg_7312 <= tmp_398_6_fu_4665_p2;
        underflow_6_reg_7322 <= underflow_6_fu_4693_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        Range1_all_ones_9_5_reg_7449 <= Range1_all_ones_9_5_fu_5065_p2;
        Range1_all_zeros_9_5_reg_7456 <= Range1_all_zeros_9_5_fu_5071_p2;
        Range2_all_ones_9_5_reg_7444 <= Range2_all_ones_9_5_fu_5049_p2;
        brmerge40_demorgan_i_217_reg_7471 <= brmerge40_demorgan_i_217_fu_5132_p2;
        brmerge_i_i_i_7_reg_7481 <= brmerge_i_i_i_7_fu_5154_p2;
        carry_32_5_reg_7437 <= carry_32_5_fu_5033_p2;
        p_38_i_i9_7_reg_7461 <= p_38_i_i9_7_fu_5106_p2;
        p_Val2_126_5_reg_7414 <= p_Val2_126_5_fu_4978_p2;
        p_Val2_128_5_reg_7425 <= p_Val2_128_5_fu_5013_p2;
        tmp_1592_reg_7419 <= p_Val2_126_5_fu_4978_p2[32'd16];
        tmp_1595_reg_7431 <= p_Val2_128_5_fu_5013_p2[32'd7];
        tmp_398_7_reg_7466 <= tmp_398_7_fu_5121_p2;
        underflow_7_reg_7476 <= underflow_7_fu_5149_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        Range1_all_ones_9_6_reg_7546 <= Range1_all_ones_9_6_fu_5406_p2;
        Range1_all_zeros_9_6_reg_7553 <= Range1_all_zeros_9_6_fu_5412_p2;
        Range2_all_ones_9_6_reg_7541 <= Range2_all_ones_9_6_fu_5390_p2;
        carry_32_6_reg_7534 <= carry_32_6_fu_5374_p2;
        p_Val2_126_6_reg_7511 <= p_Val2_126_6_fu_5319_p2;
        p_Val2_128_6_reg_7522 <= p_Val2_128_6_fu_5354_p2;
        tmp_1602_reg_7516 <= p_Val2_126_6_fu_5319_p2[32'd16];
        tmp_1605_reg_7528 <= p_Val2_128_6_fu_5354_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        Range1_all_ones_9_7_reg_7618 <= Range1_all_ones_9_7_fu_5634_p2;
        Range1_all_zeros_9_7_reg_7625 <= Range1_all_zeros_9_7_fu_5640_p2;
        Range2_all_ones_9_7_reg_7613 <= Range2_all_ones_9_7_fu_5618_p2;
        carry_32_7_reg_7606 <= carry_32_7_fu_5602_p2;
        p_Val2_126_7_reg_7583 <= p_Val2_126_7_fu_5547_p2;
        p_Val2_128_7_reg_7594 <= p_Val2_128_7_fu_5582_p2;
        tmp_1612_reg_7588 <= p_Val2_126_7_fu_5547_p2[32'd16];
        tmp_1615_reg_7600 <= p_Val2_128_7_fu_5582_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        Range1_all_ones_9_reg_6659 <= Range1_all_ones_9_fu_2785_p2;
        Range1_all_zeros_9_reg_6666 <= Range1_all_zeros_9_fu_2791_p2;
        Range2_all_ones_9_reg_6654 <= Range2_all_ones_9_fu_2769_p2;
        brmerge40_demorgan_i_207_reg_6681 <= brmerge40_demorgan_i_207_fu_2852_p2;
        brmerge_i_i_i_2_reg_6691 <= brmerge_i_i_i_2_fu_2874_p2;
        carry_8_reg_6647 <= carry_8_fu_2753_p2;
        p_38_i_i9_2_reg_6671 <= p_38_i_i9_2_fu_2826_p2;
        p_Val2_29_reg_6624 <= p_Val2_29_fu_2698_p2;
        p_Val2_31_reg_6635 <= p_Val2_31_fu_2733_p2;
        tmp_1542_reg_6629 <= p_Val2_29_fu_2698_p2[32'd16];
        tmp_1545_reg_6641 <= p_Val2_31_fu_2733_p2[32'd7];
        tmp_1568_reg_6696 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1573_reg_6701 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_2_reg_6676 <= tmp_398_2_fu_2841_p2;
        underflow_2_reg_6686 <= underflow_2_fu_2869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        Range1_all_ones_reg_6438 <= Range1_all_ones_fu_2214_p2;
        Range1_all_zeros_reg_6445 <= Range1_all_zeros_fu_2220_p2;
        Range2_all_ones_reg_6433 <= Range2_all_ones_fu_2198_p2;
        carry_s_reg_6426 <= carry_s_fu_2182_p2;
        conv_last_output_V_1_1_reg_6398 <= tmp_1552_cast_reg_6337;
        p_Val2_28_reg_6414 <= p_Val2_28_fu_2162_p2;
        p_Val2_s_reg_6403 <= p_Val2_s_fu_2127_p2;
        tmp_1537_reg_6408 <= p_Val2_s_fu_2127_p2[32'd16];
        tmp_1540_reg_6420 <= p_Val2_28_fu_2162_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_6001 <= exitcond_flatten_reg_6001;
        exitcond_flatten_reg_6001 <= exitcond_flatten_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_tmp_1530_reg_7675 <= tmp_1530_reg_7675;
        exitcond_flatten15_reg_7655 <= exitcond_flatten15_fu_5759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten15_fu_5759_p2))) begin
        arrayNo_mid2_v_reg_7670 <= arrayNo_mid2_v_fu_5791_p3;
        indvar_flatten_next1_7_reg_7696 <= indvar_flatten_next1_7_fu_5851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
        brmerge40_demorgan_i_205_reg_6547 <= brmerge40_demorgan_i_205_fu_2509_p2;
        brmerge_i_i_i_1_reg_6557 <= brmerge_i_i_i_1_fu_2531_p2;
        p_38_i_i9_1_reg_6537 <= p_38_i_i9_1_fu_2483_p2;
        tmp_1558_reg_6562 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1563_reg_6567 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_398_1_reg_6542 <= tmp_398_1_fu_2498_p2;
        underflow_1_reg_6552 <= underflow_1_fu_2526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        brmerge40_demorgan_i_214_reg_7496 <= brmerge40_demorgan_i_214_fu_5215_p2;
        brmerge_i_i_i9_5_reg_7506 <= brmerge_i_i_i9_5_fu_5237_p2;
        p_38_i_i_5_reg_7486 <= p_38_i_i_5_fu_5189_p2;
        tmp_413_5_reg_7491 <= tmp_413_5_fu_5204_p2;
        underflow_18_5_reg_7501 <= underflow_18_5_fu_5232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        brmerge40_demorgan_i_216_reg_7568 <= brmerge40_demorgan_i_216_fu_5473_p2;
        brmerge_i_i_i9_6_reg_7578 <= brmerge_i_i_i9_6_fu_5495_p2;
        p_38_i_i_6_reg_7558 <= p_38_i_i_6_fu_5447_p2;
        tmp_413_6_reg_7563 <= tmp_413_6_fu_5462_p2;
        underflow_18_6_reg_7573 <= underflow_18_6_fu_5490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        brmerge40_demorgan_i_218_reg_7640 <= brmerge40_demorgan_i_218_fu_5701_p2;
        brmerge_i_i_i9_7_reg_7650 <= brmerge_i_i_i9_7_fu_5723_p2;
        p_38_i_i_7_reg_7630 <= p_38_i_i_7_fu_5675_p2;
        tmp_413_7_reg_7635 <= tmp_413_7_fu_5690_p2;
        underflow_18_7_reg_7645 <= underflow_18_7_fu_5718_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        brmerge40_demorgan_i_reg_6460 <= brmerge40_demorgan_i_fu_2281_p2;
        brmerge_i_i_i_reg_6470 <= brmerge_i_i_i_fu_2303_p2;
        p_38_i_i9_reg_6450 <= p_38_i_i9_fu_2255_p2;
        tmp_1548_reg_6475 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1553_reg_6480 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
        tmp_169_reg_6455 <= tmp_169_fu_2270_p2;
        underflow_reg_6465 <= underflow_fu_2298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_9_reg_6148 <= ci_9_fu_1111_p2;
        ci_cast_cast1_reg_6119[7 : 0] <= ci_cast_cast1_fu_1058_p1[7 : 0];
        ci_cast_cast2_reg_6130[7 : 0] <= ci_cast_cast2_fu_1062_p1[7 : 0];
        ci_cast_cast_reg_6135[7 : 0] <= ci_cast_cast_fu_1066_p1[7 : 0];
        input_V_addr_reg_6140 <= tmp_1541_cast_fu_1100_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond26_fu_1121_p2))) begin
        co_36_7_reg_6237 <= co_36_7_fu_1398_p2;
        conv_last_output_V_0_2_reg_6183 <= tmp_1562_cast_fu_1281_p1;
        newIndex3_reg_6188 <= {{tmp_1_fu_1286_p2[9:3]}};
        newIndex4_reg_6195 <= {{tmp_2_fu_1302_p2[9:3]}};
        newIndex5_reg_6202 <= {{tmp_3_fu_1318_p2[9:3]}};
        newIndex6_reg_6209 <= {{tmp_4_fu_1334_p2[9:3]}};
        newIndex7_reg_6216 <= {{tmp_5_fu_1350_p2[9:3]}};
        newIndex8_reg_6223 <= {{tmp_6_fu_1366_p2[9:3]}};
        newIndex_reg_6230 <= {{tmp_7_fu_1382_p2[9:3]}};
        tmp_1546_cast_reg_6156 <= tmp_1546_cast_fu_1176_p1;
        tmp_551_reg_6173 <= tmp_551_fu_1203_p2;
        tmp_554_reg_6178 <= tmp_554_fu_1248_p2;
        weight_7_V_addr_reg_6167 <= sum_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        conv_last_output_V_0_1_reg_6348 <= tmp_1552_cast_fu_1868_p1;
        conv_last_output_V_1_2_reg_6353 <= tmp_1572_cast_fu_1902_p1;
        conv_last_output_V_2_2_reg_6358 <= tmp_1582_cast_fu_1936_p1;
        conv_last_output_V_3_2_reg_6363 <= tmp_1592_cast_fu_1970_p1;
        conv_last_output_V_4_2_reg_6368 <= tmp_1602_cast_fu_2004_p1;
        conv_last_output_V_5_2_reg_6373 <= tmp_1612_cast_fu_2038_p1;
        conv_last_output_V_6_2_reg_6378 <= tmp_1622_cast_fu_2072_p1;
        conv_last_output_V_7_2_reg_6383 <= tmp_1632_cast_fu_2106_p1;
        tmp_1552_cast_reg_6337[11 : 0] <= tmp_1552_cast_fu_1868_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655))) begin
        conv_last_output_V_0_5_reg_7722 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_1_5_reg_7712 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_2_5_reg_7737 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_3_5_reg_7742 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_4_5_reg_7727 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_5_5_reg_7717 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_6_5_reg_7747 <= tmp_1535_cast_fu_5912_p1;
        conv_last_output_V_7_5_reg_7732 <= tmp_1535_cast_fu_5912_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_840_p2))) begin
        exitcond_flatten14_reg_6010 <= exitcond_flatten14_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_fu_5759_p2))) begin
        exitcond_mid_reg_7685 <= exitcond_mid_fu_5825_p2;
        j_1_mid_reg_7664 <= j_1_mid_fu_5783_p3;
        k_1_mid2_reg_7690 <= k_1_mid2_fu_5837_p3;
        newIndex78_cast_mid2_reg_7680 <= {{arrayNo_mid2_v_fu_5791_p3[9:3]}};
        tmp_1530_reg_7675 <= tmp_1530_fu_5799_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h_29_reg_6088 <= h_29_fu_1032_p2;
        h_cast_cast1_reg_6058[2 : 0] <= h_cast_cast1_fu_1010_p1[2 : 0];
        h_cast_cast2_reg_6069[2 : 0] <= h_cast_cast2_fu_1014_p1[2 : 0];
        h_cast_cast3_reg_6074[2 : 0] <= h_cast_cast3_fu_1018_p1[2 : 0];
        h_cast_cast_reg_6079[2 : 0] <= h_cast_cast_fu_1022_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond_flatten_reg_6001))) begin
        i_cast_mid2_v_reg_6023 <= i_cast_mid2_v_fu_885_p3;
        j_cast_mid2_reg_6042 <= j_cast_mid2_fu_947_p3;
        k_2_reg_6053 <= k_2_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        indvar_flatten_next1_8_reg_7659 <= indvar_flatten_next1_8_fu_5765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
        input_V_load_reg_6290 <= input_V_q0;
        weight_7_V_addr_10_reg_6260 <= sum2_fu_1434_p2;
        weight_7_V_addr_11_reg_6266 <= sum5_fu_1444_p2;
        weight_7_V_addr_12_reg_6272 <= sum8_fu_1454_p2;
        weight_7_V_addr_13_reg_6278 <= sum11_fu_1464_p2;
        weight_7_V_addr_14_reg_6284 <= sum1_fu_1477_p2;
        weight_7_V_addr_15_reg_6295 <= sum4_fu_1529_p2;
        weight_7_V_addr_16_reg_6301 <= sum7_fu_1581_p2;
        weight_7_V_addr_17_reg_6307 <= sum10_fu_1633_p2;
        weight_7_V_addr_18_reg_6313 <= sum12_fu_1685_p2;
        weight_7_V_addr_19_reg_6319 <= sum13_fu_1737_p2;
        weight_7_V_addr_20_reg_6325 <= sum14_fu_1789_p2;
        weight_7_V_addr_21_reg_6331 <= sum15_fu_1841_p2;
        weight_7_V_addr_7_reg_6242 <= sum3_fu_1404_p2;
        weight_7_V_addr_8_reg_6248 <= sum6_fu_1414_p2;
        weight_7_V_addr_9_reg_6254 <= sum9_fu_1424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten15_reg_7655))) begin
        j_1_cast_mid2_reg_7701 <= j_1_cast_mid2_fu_5864_p3;
        k_3_reg_7707 <= k_3_fu_5870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_6001))) begin
        k_mid2_reg_6037 <= k_mid2_fu_939_p3;
        newIndex77_cast_mid2_reg_6032 <= {{i_cast_mid2_v_fu_885_p3[9:3]}};
        tmp_reg_6028 <= tmp_fu_897_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state17) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state19) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)))) begin
        reg_782 <= m_axi_weight_0_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state18) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state20) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)))) begin
        reg_787 <= m_axi_weight_0_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_792 <= grp_MUL_DP_fu_751_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_796 <= grp_MUL_DP_fu_751_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))))) begin
        reg_800 <= conv_last_output_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_804 <= grp_MUL_DP_fu_751_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))))) begin
        reg_808 <= conv_last_output_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)))) begin
        reg_812 <= grp_MUL_DP_fu_751_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)))) begin
        reg_816 <= conv_last_output_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_820 <= conv_last_output_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_824 <= conv_last_output_V_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_828 <= conv_last_output_V_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_832 <= conv_last_output_V_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_836 <= conv_last_output_V_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        tmp_1538_reg_6388 <= grp_MUL_DP_fu_751_ap_return_0[32'd5];
        tmp_1543_reg_6393 <= grp_MUL_DP_fu_751_ap_return_1[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        w_35_reg_6114 <= w_35_fu_1052_p2;
        w_cast_cast1_reg_6093[2 : 0] <= w_cast_cast1_fu_1038_p1[2 : 0];
        w_cast_cast_reg_6106[2 : 0] <= w_cast_cast_fu_1042_p1[2 : 0];
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_840_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten15_fu_5759_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state49))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_weight_0_V_ARREADY = m_axi_weight_0_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_0_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_5_reg_7722;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state30))) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_2_reg_6183;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_1_reg_6348;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv_last_output_V_0_address0 = tmp_1552_cast_fu_1868_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_0_ce0 = 1'b1;
    end else begin
        conv_last_output_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        conv_last_output_V_0_d0 = this_assign_52_1_fu_3129_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_0_d0 = this_assign_1_fu_2330_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (3'd0 == tmp_reg_6028)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (3'd0 == ap_reg_pp1_iter1_tmp_1530_reg_7675)))) begin
        conv_last_output_V_0_we0 = 1'b1;
    end else begin
        conv_last_output_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_5_reg_7712;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state32))) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_2_reg_6353;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_1_reg_6398;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv_last_output_V_1_address0 = tmp_1552_cast_reg_6337;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_1_ce0 = 1'b1;
    end else begin
        conv_last_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        conv_last_output_V_1_d0 = this_assign_52_1_1_fu_3585_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_1_d0 = this_assign_1_1_fu_2558_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd1)))) begin
        conv_last_output_V_1_we0 = 1'b1;
    end else begin
        conv_last_output_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_5_reg_7737;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34))) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_2_reg_6358;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_1_reg_6485;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_2_address0 = tmp_1552_cast_reg_6337;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_2_ce0 = 1'b1;
    end else begin
        conv_last_output_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        conv_last_output_V_2_d0 = this_assign_52_1_2_fu_4041_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_last_output_V_2_d0 = this_assign_1_2_fu_2984_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd2)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd2)))) begin
        conv_last_output_V_2_we0 = 1'b1;
    end else begin
        conv_last_output_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_5_reg_7742;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state36))) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_2_reg_6363;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_1_reg_6572;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_3_address0 = tmp_1552_cast_reg_6337;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_3_ce0 = 1'b1;
    end else begin
        conv_last_output_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        conv_last_output_V_3_d0 = this_assign_52_1_3_fu_4497_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv_last_output_V_3_d0 = this_assign_1_3_fu_3440_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd3)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd3)))) begin
        conv_last_output_V_3_we0 = 1'b1;
    end else begin
        conv_last_output_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_5_reg_7727;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_2_reg_6368;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_1_reg_6711;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_last_output_V_4_address0 = tmp_1552_cast_reg_6337;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_4_ce0 = 1'b1;
    end else begin
        conv_last_output_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv_last_output_V_4_d0 = this_assign_52_1_4_fu_4953_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        conv_last_output_V_4_d0 = this_assign_1_4_fu_3896_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd4)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd4)))) begin
        conv_last_output_V_4_we0 = 1'b1;
    end else begin
        conv_last_output_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_5_reg_7717;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state40))) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_2_reg_6373;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state35))) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_1_reg_6706;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state40) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_5_ce0 = 1'b1;
    end else begin
        conv_last_output_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        conv_last_output_V_5_d0 = this_assign_52_1_5_fu_5294_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        conv_last_output_V_5_d0 = this_assign_1_5_fu_4352_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state40) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd5)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd5)))) begin
        conv_last_output_V_5_we0 = 1'b1;
    end else begin
        conv_last_output_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_5_reg_7747;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state42))) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_2_reg_6378;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state37))) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_1_reg_6721;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state42) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_6_ce0 = 1'b1;
    end else begin
        conv_last_output_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        conv_last_output_V_6_d0 = this_assign_52_1_6_fu_5522_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        conv_last_output_V_6_d0 = this_assign_1_6_fu_4808_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state42) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd6)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd6)))) begin
        conv_last_output_V_6_we0 = 1'b1;
    end else begin
        conv_last_output_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_5_reg_7732;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = tmp_1535_cast_fu_5912_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state44))) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_2_reg_6383;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state39))) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_1_reg_6716;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = tmp_1528_cast_fu_998_p1;
    end else begin
        conv_last_output_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_7_ce0 = 1'b1;
    end else begin
        conv_last_output_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        conv_last_output_V_7_d0 = this_assign_52_1_7_fu_5750_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        conv_last_output_V_7_d0 = this_assign_1_7_fu_5264_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state44) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_reg_6028 == 3'd7)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_1531_fu_5945_p3) & (ap_reg_pp1_iter1_tmp_1530_reg_7675 == 3'd7)))) begin
        conv_last_output_V_7_we0 = 1'b1;
    end else begin
        conv_last_output_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_MUL_DP_fu_751_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_751_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_1_phi_fu_711_p4 = arrayNo_mid2_v_reg_7670;
    end else begin
        i_1_phi_fu_711_p4 = i_1_reg_707;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        i_phi_fu_609_p4 = i_cast_mid2_v_reg_6023;
    end else begin
        i_phi_fu_609_p4 = i_reg_605;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten11_phi_fu_700_p4 = indvar_flatten_next1_8_reg_7659;
    end else begin
        indvar_flatten11_phi_fu_700_p4 = indvar_flatten11_reg_696;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten12_phi_fu_722_p4 = indvar_flatten_next1_7_reg_7696;
    end else begin
        indvar_flatten12_phi_fu_722_p4 = indvar_flatten12_reg_718;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_1_phi_fu_733_p4 = j_1_cast_mid2_reg_7701;
    end else begin
        j_1_phi_fu_733_p4 = j_1_reg_729;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        j_phi_fu_632_p4 = j_cast_mid2_reg_6042;
    end else begin
        j_phi_fu_632_p4 = j_reg_628;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten15_reg_7655) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        k_1_phi_fu_744_p4 = k_3_reg_7707;
    end else begin
        k_1_phi_fu_744_p4 = k_1_reg_740;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_6001) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        k_phi_fu_644_p4 = k_2_reg_6053;
    end else begin
        k_phi_fu_644_p4 = k_reg_640;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) begin
        if (((1'b1 == ap_CS_fsm_state25) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_21_reg_6331;
        end else if (((1'b1 == ap_CS_fsm_state24) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_13_reg_6278;
        end else if (((1'b1 == ap_CS_fsm_state23) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_20_reg_6325;
        end else if (((1'b1 == ap_CS_fsm_state22) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_12_reg_6272;
        end else if (((1'b1 == ap_CS_fsm_state21) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_19_reg_6319;
        end else if (((1'b1 == ap_CS_fsm_state20) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_11_reg_6266;
        end else if (((1'b1 == ap_CS_fsm_state19) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_18_reg_6313;
        end else if (((1'b1 == ap_CS_fsm_state18) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_10_reg_6260;
        end else if (((1'b1 == ap_CS_fsm_state17) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_17_reg_6307;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_9_reg_6254;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_16_reg_6301;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_8_reg_6248;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_15_reg_6295;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_7_reg_6242;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_14_reg_6284;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            m_axi_weight_0_V_ARADDR = weight_7_V_addr_reg_6167;
        end else begin
            m_axi_weight_0_V_ARADDR = 'bx;
        end
    end else begin
        m_axi_weight_0_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state16) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state17) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state18) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state19) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state20) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state21) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state22) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state23) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state24) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)) | ((1'b1 == ap_CS_fsm_state25) & (m_axi_weight_0_V_RVALID == 1'b1) & (1'b0 == ap_reg_ioackin_m_axi_weight_0_V_ARREADY)))) begin
        m_axi_weight_0_V_ARVALID = 1'b1;
    end else begin
        m_axi_weight_0_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state17) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state19) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state20) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY))) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1)))) begin
        m_axi_weight_0_V_RREADY = 1'b1;
    end else begin
        m_axi_weight_0_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        weight_0_V_blk_n_AR = m_axi_weight_0_V_ARREADY;
    end else begin
        weight_0_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        weight_0_V_blk_n_R = m_axi_weight_0_V_RVALID;
    end else begin
        weight_0_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_840_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_840_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond22_fu_1026_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond23_fu_1046_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond25_fu_1105_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond26_fu_1121_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (ap_sig_ioackin_m_axi_weight_0_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & ~((1'b0 == m_axi_weight_0_V_RVALID) | (1'b0 == ap_sig_ioackin_m_axi_weight_0_V_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (m_axi_weight_0_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten15_fu_5759_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten15_fu_5759_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (((ap_block_pp1_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_2442_p2 = ((p_Result_228_1_fu_2432_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2670_p2 = ((p_Result_228_2_fu_2660_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_3096_p2 = ((p_Result_228_3_fu_3086_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_3552_p2 = ((p_Result_228_4_fu_3542_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_4008_p2 = ((p_Result_228_5_fu_3998_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_4464_p2 = ((p_Result_228_6_fu_4454_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_4920_p2 = ((p_Result_228_7_fu_4910_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_1_fu_3241_p2 = ((p_Result_230_1_fu_3231_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_2_fu_3697_p2 = ((p_Result_230_2_fu_3687_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_3_fu_4153_p2 = ((p_Result_230_3_fu_4143_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_4_fu_4609_p2 = ((p_Result_230_4_fu_4599_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_5_fu_5065_p2 = ((p_Result_230_5_fu_5055_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_6_fu_5406_p2 = ((p_Result_230_6_fu_5396_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_7_fu_5634_p2 = ((p_Result_230_7_fu_5624_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_fu_2785_p2 = ((p_Result_25_fu_2775_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_2214_p2 = ((p_Result_23_fu_2204_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2448_p2 = ((p_Result_228_1_fu_2432_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2676_p2 = ((p_Result_228_2_fu_2660_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_3102_p2 = ((p_Result_228_3_fu_3086_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_3558_p2 = ((p_Result_228_4_fu_3542_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_4014_p2 = ((p_Result_228_5_fu_3998_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_4470_p2 = ((p_Result_228_6_fu_4454_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_4926_p2 = ((p_Result_228_7_fu_4910_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_1_fu_3247_p2 = ((p_Result_230_1_fu_3231_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_2_fu_3703_p2 = ((p_Result_230_2_fu_3687_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_3_fu_4159_p2 = ((p_Result_230_3_fu_4143_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_4_fu_4615_p2 = ((p_Result_230_4_fu_4599_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_5_fu_5071_p2 = ((p_Result_230_5_fu_5055_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_6_fu_5412_p2 = ((p_Result_230_6_fu_5396_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_7_fu_5640_p2 = ((p_Result_230_7_fu_5624_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_fu_2791_p2 = ((p_Result_25_fu_2775_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2220_p2 = ((p_Result_23_fu_2204_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_2426_p2 = ((p_Result_227_1_fu_2416_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_2_fu_2654_p2 = ((p_Result_227_2_fu_2644_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_3_fu_3080_p2 = ((p_Result_227_3_fu_3070_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_4_fu_3536_p2 = ((p_Result_227_4_fu_3526_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_5_fu_3992_p2 = ((p_Result_227_5_fu_3982_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_6_fu_4448_p2 = ((p_Result_227_6_fu_4438_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_7_fu_4904_p2 = ((p_Result_227_7_fu_4894_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_1_fu_3225_p2 = ((p_Result_229_1_fu_3215_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_2_fu_3681_p2 = ((p_Result_229_2_fu_3671_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_3_fu_4137_p2 = ((p_Result_229_3_fu_4127_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_4_fu_4593_p2 = ((p_Result_229_4_fu_4583_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_5_fu_5049_p2 = ((p_Result_229_5_fu_5039_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_6_fu_5390_p2 = ((p_Result_229_6_fu_5380_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_7_fu_5618_p2 = ((p_Result_229_7_fu_5608_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_fu_2769_p2 = ((p_Result_24_fu_2759_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_2198_p2 = ((p_Result_s_fu_2188_p4 == 2'd3) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_5791_p3 = ((exitcond_flatten16_fu_5777_p2[0:0] === 1'b1) ? i_3_fu_5771_p2 : i_1_phi_fu_711_p4);

assign bias_V_address0 = i_cast_mid2_fu_892_p1;

assign brmerge40_demorgan_i_205_fu_2509_p2 = (tmp_1550_reg_6507 & deleted_ones_1_fu_2477_p3);

assign brmerge40_demorgan_i_206_fu_3391_p2 = (tmp_1555_reg_6815 & deleted_ones_9_1_fu_3359_p3);

assign brmerge40_demorgan_i_207_fu_2852_p2 = (tmp_1560_reg_6594 & deleted_ones_2_fu_2820_p3);

assign brmerge40_demorgan_i_208_fu_3847_p2 = (tmp_1565_reg_6969 & deleted_ones_9_2_fu_3815_p3);

assign brmerge40_demorgan_i_209_fu_3308_p2 = (tmp_1570_reg_6768 & deleted_ones_3_fu_3276_p3);

assign brmerge40_demorgan_i_210_fu_4303_p2 = (tmp_1575_reg_7123 & deleted_ones_9_3_fu_4271_p3);

assign brmerge40_demorgan_i_211_fu_3764_p2 = (tmp_1580_reg_6922 & deleted_ones_4_fu_3732_p3);

assign brmerge40_demorgan_i_212_fu_4759_p2 = (tmp_1585_reg_7277 & deleted_ones_9_4_fu_4727_p3);

assign brmerge40_demorgan_i_213_fu_4220_p2 = (tmp_1590_reg_7076 & deleted_ones_5_fu_4188_p3);

assign brmerge40_demorgan_i_214_fu_5215_p2 = (tmp_1595_reg_7431 & deleted_ones_9_5_fu_5183_p3);

assign brmerge40_demorgan_i_215_fu_4676_p2 = (tmp_1600_reg_7230 & deleted_ones_6_fu_4644_p3);

assign brmerge40_demorgan_i_216_fu_5473_p2 = (tmp_1605_reg_7528 & deleted_ones_9_6_fu_5441_p3);

assign brmerge40_demorgan_i_217_fu_5132_p2 = (tmp_1610_reg_7384 & deleted_ones_7_fu_5100_p3);

assign brmerge40_demorgan_i_218_fu_5701_p2 = (tmp_1615_reg_7600 & deleted_ones_9_7_fu_5669_p3);

assign brmerge40_demorgan_i_219_fu_2935_p2 = (tmp_1545_reg_6641 & deleted_ones_9_fu_2903_p3);

assign brmerge40_demorgan_i_fu_2281_p2 = (tmp_1540_reg_6420 & deleted_ones_fu_2249_p3);

assign brmerge_i_i7_1_fu_3375_p2 = (tmp_1555_reg_6815 | p_not_i_i9_1_fu_3369_p2);

assign brmerge_i_i7_2_fu_3831_p2 = (tmp_1565_reg_6969 | p_not_i_i9_2_fu_3825_p2);

assign brmerge_i_i7_3_fu_4287_p2 = (tmp_1575_reg_7123 | p_not_i_i9_3_fu_4281_p2);

assign brmerge_i_i7_4_fu_4743_p2 = (tmp_1585_reg_7277 | p_not_i_i9_4_fu_4737_p2);

assign brmerge_i_i7_5_fu_5199_p2 = (tmp_1595_reg_7431 | p_not_i_i9_5_fu_5193_p2);

assign brmerge_i_i7_6_fu_5457_p2 = (tmp_1605_reg_7528 | p_not_i_i9_6_fu_5451_p2);

assign brmerge_i_i7_7_fu_5685_p2 = (tmp_1615_reg_7600 | p_not_i_i9_7_fu_5679_p2);

assign brmerge_i_i7_fu_2919_p2 = (tmp_1545_reg_6641 | p_not_i_i9_fu_2913_p2);

assign brmerge_i_i_1_fu_2493_p2 = (tmp_1550_reg_6507 | p_not_i_i_1_fu_2487_p2);

assign brmerge_i_i_2_fu_2836_p2 = (tmp_1560_reg_6594 | p_not_i_i_2_fu_2830_p2);

assign brmerge_i_i_3_fu_3292_p2 = (tmp_1570_reg_6768 | p_not_i_i_3_fu_3286_p2);

assign brmerge_i_i_4_fu_3748_p2 = (tmp_1580_reg_6922 | p_not_i_i_4_fu_3742_p2);

assign brmerge_i_i_5_fu_4204_p2 = (tmp_1590_reg_7076 | p_not_i_i_5_fu_4198_p2);

assign brmerge_i_i_6_fu_4660_p2 = (tmp_1600_reg_7230 | p_not_i_i_6_fu_4654_p2);

assign brmerge_i_i_7_fu_5116_p2 = (tmp_1610_reg_7384 | p_not_i_i_7_fu_5110_p2);

assign brmerge_i_i_fu_2265_p2 = (tmp_1540_reg_6420 | p_not_i_i_fu_2259_p2);

assign brmerge_i_i_i9_1_fu_3413_p2 = (underflow_18_1_fu_3408_p2 | overflow_18_1_fu_3385_p2);

assign brmerge_i_i_i9_2_fu_3869_p2 = (underflow_18_2_fu_3864_p2 | overflow_18_2_fu_3841_p2);

assign brmerge_i_i_i9_3_fu_4325_p2 = (underflow_18_3_fu_4320_p2 | overflow_18_3_fu_4297_p2);

assign brmerge_i_i_i9_4_fu_4781_p2 = (underflow_18_4_fu_4776_p2 | overflow_18_4_fu_4753_p2);

assign brmerge_i_i_i9_5_fu_5237_p2 = (underflow_18_5_fu_5232_p2 | overflow_18_5_fu_5209_p2);

assign brmerge_i_i_i9_6_fu_5495_p2 = (underflow_18_6_fu_5490_p2 | overflow_18_6_fu_5467_p2);

assign brmerge_i_i_i9_7_fu_5723_p2 = (underflow_18_7_fu_5718_p2 | overflow_18_7_fu_5695_p2);

assign brmerge_i_i_i9_fu_2957_p2 = (underflow_18_fu_2952_p2 | overflow_18_fu_2929_p2);

assign brmerge_i_i_i_1_fu_2531_p2 = (underflow_1_fu_2526_p2 | overflow_1_fu_2503_p2);

assign brmerge_i_i_i_2_fu_2874_p2 = (underflow_2_fu_2869_p2 | overflow_2_fu_2846_p2);

assign brmerge_i_i_i_3_fu_3330_p2 = (underflow_3_fu_3325_p2 | overflow_3_fu_3302_p2);

assign brmerge_i_i_i_4_fu_3786_p2 = (underflow_4_fu_3781_p2 | overflow_4_fu_3758_p2);

assign brmerge_i_i_i_5_fu_4242_p2 = (underflow_5_fu_4237_p2 | overflow_5_fu_4214_p2);

assign brmerge_i_i_i_6_fu_4698_p2 = (underflow_6_fu_4693_p2 | overflow_6_fu_4670_p2);

assign brmerge_i_i_i_7_fu_5154_p2 = (underflow_7_fu_5149_p2 | overflow_7_fu_5126_p2);

assign brmerge_i_i_i_fu_2303_p2 = (underflow_fu_2298_p2 | overflow_fu_2275_p2);

assign carry_30_1_fu_2410_p2 = (tmp_1549_fu_2382_p3 & tmp_393_1_fu_2404_p2);

assign carry_30_2_fu_2638_p2 = (tmp_1559_fu_2610_p3 & tmp_393_2_fu_2632_p2);

assign carry_30_3_fu_3064_p2 = (tmp_1569_fu_3036_p3 & tmp_393_3_fu_3058_p2);

assign carry_30_4_fu_3520_p2 = (tmp_1579_fu_3492_p3 & tmp_393_4_fu_3514_p2);

assign carry_30_5_fu_3976_p2 = (tmp_1589_fu_3948_p3 & tmp_393_5_fu_3970_p2);

assign carry_30_6_fu_4432_p2 = (tmp_1599_fu_4404_p3 & tmp_393_6_fu_4426_p2);

assign carry_30_7_fu_4888_p2 = (tmp_1609_fu_4860_p3 & tmp_393_7_fu_4882_p2);

assign carry_32_1_fu_3209_p2 = (tmp_1554_fu_3181_p3 & tmp_408_1_fu_3203_p2);

assign carry_32_2_fu_3665_p2 = (tmp_1564_fu_3637_p3 & tmp_408_2_fu_3659_p2);

assign carry_32_3_fu_4121_p2 = (tmp_1574_fu_4093_p3 & tmp_408_3_fu_4115_p2);

assign carry_32_4_fu_4577_p2 = (tmp_1584_fu_4549_p3 & tmp_408_4_fu_4571_p2);

assign carry_32_5_fu_5033_p2 = (tmp_1594_fu_5005_p3 & tmp_408_5_fu_5027_p2);

assign carry_32_6_fu_5374_p2 = (tmp_1604_fu_5346_p3 & tmp_408_6_fu_5368_p2);

assign carry_32_7_fu_5602_p2 = (tmp_1614_fu_5574_p3 & tmp_408_7_fu_5596_p2);

assign carry_8_fu_2753_p2 = (tmp_1544_fu_2725_p3 & tmp_173_fu_2747_p2);

assign carry_s_fu_2182_p2 = (tmp_1539_fu_2154_p3 & tmp_167_fu_2176_p2);

assign ci_9_fu_1111_p2 = (ci_reg_674 + 8'd1);

assign ci_cast_cast1_fu_1058_p1 = ci_reg_674;

assign ci_cast_cast2_fu_1062_p1 = ci_reg_674;

assign ci_cast_cast_fu_1066_p1 = ci_reg_674;

assign co_36_7_fu_1398_p2 = (9'd8 + co_reg_685);

assign co_cast_fu_1117_p1 = co_reg_685;

assign deleted_ones_1_fu_2477_p3 = ((carry_30_1_reg_6513[0:0] === 1'b1) ? p_41_i_i9_1_fu_2472_p2 : Range1_all_ones_1_reg_6525);

assign deleted_ones_2_fu_2820_p3 = ((carry_30_2_reg_6600[0:0] === 1'b1) ? p_41_i_i9_2_fu_2815_p2 : Range1_all_ones_2_reg_6612);

assign deleted_ones_3_fu_3276_p3 = ((carry_30_3_reg_6774[0:0] === 1'b1) ? p_41_i_i9_3_fu_3271_p2 : Range1_all_ones_3_reg_6786);

assign deleted_ones_4_fu_3732_p3 = ((carry_30_4_reg_6928[0:0] === 1'b1) ? p_41_i_i9_4_fu_3727_p2 : Range1_all_ones_4_reg_6940);

assign deleted_ones_5_fu_4188_p3 = ((carry_30_5_reg_7082[0:0] === 1'b1) ? p_41_i_i9_5_fu_4183_p2 : Range1_all_ones_5_reg_7094);

assign deleted_ones_6_fu_4644_p3 = ((carry_30_6_reg_7236[0:0] === 1'b1) ? p_41_i_i9_6_fu_4639_p2 : Range1_all_ones_6_reg_7248);

assign deleted_ones_7_fu_5100_p3 = ((carry_30_7_reg_7390[0:0] === 1'b1) ? p_41_i_i9_7_fu_5095_p2 : Range1_all_ones_7_reg_7402);

assign deleted_ones_9_1_fu_3359_p3 = ((carry_32_1_reg_6821[0:0] === 1'b1) ? p_41_i_i_1_fu_3354_p2 : Range1_all_ones_9_1_reg_6833);

assign deleted_ones_9_2_fu_3815_p3 = ((carry_32_2_reg_6975[0:0] === 1'b1) ? p_41_i_i_2_fu_3810_p2 : Range1_all_ones_9_2_reg_6987);

assign deleted_ones_9_3_fu_4271_p3 = ((carry_32_3_reg_7129[0:0] === 1'b1) ? p_41_i_i_3_fu_4266_p2 : Range1_all_ones_9_3_reg_7141);

assign deleted_ones_9_4_fu_4727_p3 = ((carry_32_4_reg_7283[0:0] === 1'b1) ? p_41_i_i_4_fu_4722_p2 : Range1_all_ones_9_4_reg_7295);

assign deleted_ones_9_5_fu_5183_p3 = ((carry_32_5_reg_7437[0:0] === 1'b1) ? p_41_i_i_5_fu_5178_p2 : Range1_all_ones_9_5_reg_7449);

assign deleted_ones_9_6_fu_5441_p3 = ((carry_32_6_reg_7534[0:0] === 1'b1) ? p_41_i_i_6_fu_5436_p2 : Range1_all_ones_9_6_reg_7546);

assign deleted_ones_9_7_fu_5669_p3 = ((carry_32_7_reg_7606[0:0] === 1'b1) ? p_41_i_i_7_fu_5664_p2 : Range1_all_ones_9_7_reg_7618);

assign deleted_ones_9_fu_2903_p3 = ((carry_8_reg_6647[0:0] === 1'b1) ? p_41_i_i_fu_2898_p2 : Range1_all_ones_9_reg_6659);

assign deleted_ones_fu_2249_p3 = ((carry_s_reg_6426[0:0] === 1'b1) ? p_41_i_i9_fu_2244_p2 : Range1_all_ones_reg_6438);

assign deleted_zeros_1_fu_2461_p3 = ((carry_30_1_reg_6513[0:0] === 1'b1) ? Range1_all_ones_1_reg_6525 : Range1_all_zeros_1_reg_6532);

assign deleted_zeros_2_fu_2804_p3 = ((carry_30_2_reg_6600[0:0] === 1'b1) ? Range1_all_ones_2_reg_6612 : Range1_all_zeros_2_reg_6619);

assign deleted_zeros_3_fu_3260_p3 = ((carry_30_3_reg_6774[0:0] === 1'b1) ? Range1_all_ones_3_reg_6786 : Range1_all_zeros_3_reg_6793);

assign deleted_zeros_4_fu_3716_p3 = ((carry_30_4_reg_6928[0:0] === 1'b1) ? Range1_all_ones_4_reg_6940 : Range1_all_zeros_4_reg_6947);

assign deleted_zeros_5_fu_4172_p3 = ((carry_30_5_reg_7082[0:0] === 1'b1) ? Range1_all_ones_5_reg_7094 : Range1_all_zeros_5_reg_7101);

assign deleted_zeros_6_fu_4628_p3 = ((carry_30_6_reg_7236[0:0] === 1'b1) ? Range1_all_ones_6_reg_7248 : Range1_all_zeros_6_reg_7255);

assign deleted_zeros_7_fu_5084_p3 = ((carry_30_7_reg_7390[0:0] === 1'b1) ? Range1_all_ones_7_reg_7402 : Range1_all_zeros_7_reg_7409);

assign deleted_zeros_9_1_fu_3343_p3 = ((carry_32_1_reg_6821[0:0] === 1'b1) ? Range1_all_ones_9_1_reg_6833 : Range1_all_zeros_9_1_reg_6840);

assign deleted_zeros_9_2_fu_3799_p3 = ((carry_32_2_reg_6975[0:0] === 1'b1) ? Range1_all_ones_9_2_reg_6987 : Range1_all_zeros_9_2_reg_6994);

assign deleted_zeros_9_3_fu_4255_p3 = ((carry_32_3_reg_7129[0:0] === 1'b1) ? Range1_all_ones_9_3_reg_7141 : Range1_all_zeros_9_3_reg_7148);

assign deleted_zeros_9_4_fu_4711_p3 = ((carry_32_4_reg_7283[0:0] === 1'b1) ? Range1_all_ones_9_4_reg_7295 : Range1_all_zeros_9_4_reg_7302);

assign deleted_zeros_9_5_fu_5167_p3 = ((carry_32_5_reg_7437[0:0] === 1'b1) ? Range1_all_ones_9_5_reg_7449 : Range1_all_zeros_9_5_reg_7456);

assign deleted_zeros_9_6_fu_5425_p3 = ((carry_32_6_reg_7534[0:0] === 1'b1) ? Range1_all_ones_9_6_reg_7546 : Range1_all_zeros_9_6_reg_7553);

assign deleted_zeros_9_7_fu_5653_p3 = ((carry_32_7_reg_7606[0:0] === 1'b1) ? Range1_all_ones_9_7_reg_7618 : Range1_all_zeros_9_7_reg_7625);

assign deleted_zeros_9_fu_2887_p3 = ((carry_8_reg_6647[0:0] === 1'b1) ? Range1_all_ones_9_reg_6659 : Range1_all_zeros_9_reg_6666);

assign deleted_zeros_fu_2233_p3 = ((carry_s_reg_6426[0:0] === 1'b1) ? Range1_all_ones_reg_6438 : Range1_all_zeros_reg_6445);

assign exitcond22_fu_1026_p2 = ((h_reg_652 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond23_fu_1046_p2 = ((w_reg_663 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond24_fu_5819_p2 = ((k_1_phi_fu_744_p4 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond25_fu_1105_p2 = ((ci_reg_674 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond26_fu_1121_p2 = ((co_reg_685 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond50_mid_fu_922_p2 = (exitcond_fu_916_p2 & not_exitcond_flatten_fu_911_p2);

assign exitcond_flatten14_fu_852_p2 = ((indvar_flatten_reg_617 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten15_fu_5759_p2 = ((indvar_flatten11_phi_fu_700_p4 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond_flatten16_fu_5777_p2 = ((indvar_flatten12_phi_fu_722_p4 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_840_p2 = ((indvar_flatten10_reg_594 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond_fu_916_p2 = ((k_phi_fu_644_p4 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_5825_p2 = (exitcond24_fu_5819_p2 & not_exitcond_flatten_3_fu_5813_p2);

assign h_29_fu_1032_p2 = (h_reg_652 + 3'd1);

assign h_cast_cast1_fu_1010_p1 = h_reg_652;

assign h_cast_cast2_fu_1014_p1 = h_reg_652;

assign h_cast_cast3_fu_1018_p1 = h_reg_652;

assign h_cast_cast_fu_1022_p1 = h_reg_652;

assign i_2_fu_872_p2 = (10'd1 + i_phi_fu_609_p4);

assign i_3_fu_5771_p2 = (10'd1 + i_1_phi_fu_711_p4);

assign i_cast_mid2_fu_892_p1 = i_cast_mid2_v_fu_885_p3;

assign i_cast_mid2_v_fu_885_p3 = ((exitcond_flatten14_reg_6010[0:0] === 1'b1) ? i_2_fu_872_p2 : i_phi_fu_609_p4);

assign indvar_flatten21_op_fu_5845_p2 = (indvar_flatten12_phi_fu_722_p4 + 6'd1);

assign indvar_flatten_next1_7_fu_5851_p3 = ((exitcond_flatten16_fu_5777_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten21_op_fu_5845_p2);

assign indvar_flatten_next1_8_fu_5765_p2 = (indvar_flatten11_phi_fu_700_p4 + 14'd1);

assign indvar_flatten_next1_fu_846_p2 = (indvar_flatten10_reg_594 + 14'd1);

assign indvar_flatten_next_fu_864_p3 = ((exitcond_flatten14_fu_852_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_858_p2);

assign indvar_flatten_op_fu_858_p2 = (indvar_flatten_reg_617 + 6'd1);

assign input_V_address0 = input_V_addr_reg_6140;

assign j_1_cast_mid2_cast_fu_5886_p1 = j_1_cast_mid2_reg_7701;

assign j_1_cast_mid2_fu_5864_p3 = ((exitcond_mid_reg_7685[0:0] === 1'b1) ? j_3_fu_5859_p2 : j_1_mid_reg_7664);

assign j_1_mid_fu_5783_p3 = ((exitcond_flatten16_fu_5777_p2[0:0] === 1'b1) ? 3'd0 : j_1_phi_fu_733_p4);

assign j_2_fu_928_p2 = (3'd1 + j_mid_fu_878_p3);

assign j_3_fu_5859_p2 = (3'd1 + j_1_mid_reg_7664);

assign j_cast_mid2_cast_fu_972_p1 = j_cast_mid2_reg_6042;

assign j_cast_mid2_fu_947_p3 = ((exitcond50_mid_fu_922_p2[0:0] === 1'b1) ? j_2_fu_928_p2 : j_mid_fu_878_p3);

assign j_mid_fu_878_p3 = ((exitcond_flatten14_reg_6010[0:0] === 1'b1) ? 3'd0 : j_phi_fu_632_p4);

assign k_1_cast_cast_fu_5903_p1 = k_1_mid2_reg_7690;

assign k_1_mid2_fu_5837_p3 = ((tmp_540_fu_5831_p2[0:0] === 1'b1) ? 3'd0 : k_1_phi_fu_744_p4);

assign k_2_fu_955_p2 = (k_mid2_fu_939_p3 + 3'd1);

assign k_3_fu_5870_p2 = (k_1_mid2_reg_7690 + 3'd1);

assign k_cast_cast_fu_989_p1 = k_mid2_reg_6037;

assign k_mid2_fu_939_p3 = ((tmp_536_fu_934_p2[0:0] === 1'b1) ? 3'd0 : k_phi_fu_644_p4);

assign m_axi_weight_0_V_ARBURST = 2'd0;

assign m_axi_weight_0_V_ARCACHE = 4'd0;

assign m_axi_weight_0_V_ARID = 1'd0;

assign m_axi_weight_0_V_ARLEN = 32'd1;

assign m_axi_weight_0_V_ARLOCK = 2'd0;

assign m_axi_weight_0_V_ARPROT = 3'd0;

assign m_axi_weight_0_V_ARQOS = 4'd0;

assign m_axi_weight_0_V_ARREGION = 4'd0;

assign m_axi_weight_0_V_ARSIZE = 3'd0;

assign m_axi_weight_0_V_ARUSER = 1'd0;

assign m_axi_weight_0_V_AWADDR = 32'd0;

assign m_axi_weight_0_V_AWBURST = 2'd0;

assign m_axi_weight_0_V_AWCACHE = 4'd0;

assign m_axi_weight_0_V_AWID = 1'd0;

assign m_axi_weight_0_V_AWLEN = 32'd0;

assign m_axi_weight_0_V_AWLOCK = 2'd0;

assign m_axi_weight_0_V_AWPROT = 3'd0;

assign m_axi_weight_0_V_AWQOS = 4'd0;

assign m_axi_weight_0_V_AWREGION = 4'd0;

assign m_axi_weight_0_V_AWSIZE = 3'd0;

assign m_axi_weight_0_V_AWUSER = 1'd0;

assign m_axi_weight_0_V_AWVALID = 1'b0;

assign m_axi_weight_0_V_BREADY = 1'b0;

assign m_axi_weight_0_V_WDATA = 8'd0;

assign m_axi_weight_0_V_WID = 1'd0;

assign m_axi_weight_0_V_WLAST = 1'b0;

assign m_axi_weight_0_V_WSTRB = 1'd0;

assign m_axi_weight_0_V_WUSER = 1'd0;

assign m_axi_weight_0_V_WVALID = 1'b0;

assign newIndex1_fu_1127_p4 = {{co_reg_685[8:3]}};

assign newIndex2_fu_1208_p2 = (newIndex1_fu_1127_p4 ^ 6'd32);

assign not_exitcond_flatten_3_fu_5813_p2 = (exitcond_flatten16_fu_5777_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_911_p2 = (exitcond_flatten14_reg_6010 ^ 1'd1);

assign overflow_18_1_fu_3385_p2 = (brmerge_i_i7_1_fu_3375_p2 & tmp_413_1_fu_3380_p2);

assign overflow_18_2_fu_3841_p2 = (brmerge_i_i7_2_fu_3831_p2 & tmp_413_2_fu_3836_p2);

assign overflow_18_3_fu_4297_p2 = (brmerge_i_i7_3_fu_4287_p2 & tmp_413_3_fu_4292_p2);

assign overflow_18_4_fu_4753_p2 = (brmerge_i_i7_4_fu_4743_p2 & tmp_413_4_fu_4748_p2);

assign overflow_18_5_fu_5209_p2 = (brmerge_i_i7_5_fu_5199_p2 & tmp_413_5_fu_5204_p2);

assign overflow_18_6_fu_5467_p2 = (brmerge_i_i7_6_fu_5457_p2 & tmp_413_6_fu_5462_p2);

assign overflow_18_7_fu_5695_p2 = (brmerge_i_i7_7_fu_5685_p2 & tmp_413_7_fu_5690_p2);

assign overflow_18_fu_2929_p2 = (brmerge_i_i7_fu_2919_p2 & tmp_175_fu_2924_p2);

assign overflow_1_fu_2503_p2 = (brmerge_i_i_1_fu_2493_p2 & tmp_398_1_fu_2498_p2);

assign overflow_2_fu_2846_p2 = (brmerge_i_i_2_fu_2836_p2 & tmp_398_2_fu_2841_p2);

assign overflow_3_fu_3302_p2 = (brmerge_i_i_3_fu_3292_p2 & tmp_398_3_fu_3297_p2);

assign overflow_4_fu_3758_p2 = (brmerge_i_i_4_fu_3748_p2 & tmp_398_4_fu_3753_p2);

assign overflow_5_fu_4214_p2 = (brmerge_i_i_5_fu_4204_p2 & tmp_398_5_fu_4209_p2);

assign overflow_6_fu_4670_p2 = (brmerge_i_i_6_fu_4660_p2 & tmp_398_6_fu_4665_p2);

assign overflow_7_fu_5126_p2 = (brmerge_i_i_7_fu_5116_p2 & tmp_398_7_fu_5121_p2);

assign overflow_fu_2275_p2 = (brmerge_i_i_fu_2265_p2 & tmp_169_fu_2270_p2);

assign p_38_i_i9_1_fu_2483_p2 = (carry_30_1_reg_6513 & Range1_all_ones_1_reg_6525);

assign p_38_i_i9_2_fu_2826_p2 = (carry_30_2_reg_6600 & Range1_all_ones_2_reg_6612);

assign p_38_i_i9_3_fu_3282_p2 = (carry_30_3_reg_6774 & Range1_all_ones_3_reg_6786);

assign p_38_i_i9_4_fu_3738_p2 = (carry_30_4_reg_6928 & Range1_all_ones_4_reg_6940);

assign p_38_i_i9_5_fu_4194_p2 = (carry_30_5_reg_7082 & Range1_all_ones_5_reg_7094);

assign p_38_i_i9_6_fu_4650_p2 = (carry_30_6_reg_7236 & Range1_all_ones_6_reg_7248);

assign p_38_i_i9_7_fu_5106_p2 = (carry_30_7_reg_7390 & Range1_all_ones_7_reg_7402);

assign p_38_i_i9_fu_2255_p2 = (carry_s_reg_6426 & Range1_all_ones_reg_6438);

assign p_38_i_i_1_fu_3365_p2 = (carry_32_1_reg_6821 & Range1_all_ones_9_1_reg_6833);

assign p_38_i_i_2_fu_3821_p2 = (carry_32_2_reg_6975 & Range1_all_ones_9_2_reg_6987);

assign p_38_i_i_3_fu_4277_p2 = (carry_32_3_reg_7129 & Range1_all_ones_9_3_reg_7141);

assign p_38_i_i_4_fu_4733_p2 = (carry_32_4_reg_7283 & Range1_all_ones_9_4_reg_7295);

assign p_38_i_i_5_fu_5189_p2 = (carry_32_5_reg_7437 & Range1_all_ones_9_5_reg_7449);

assign p_38_i_i_6_fu_5447_p2 = (carry_32_6_reg_7534 & Range1_all_ones_9_6_reg_7546);

assign p_38_i_i_7_fu_5675_p2 = (carry_32_7_reg_7606 & Range1_all_ones_9_7_reg_7618);

assign p_38_i_i_fu_2909_p2 = (carry_8_reg_6647 & Range1_all_ones_9_reg_6659);

assign p_41_i_i9_1_fu_2472_p2 = (Range2_all_ones_1_reg_6520 & tmp_396_1_fu_2466_p2);

assign p_41_i_i9_2_fu_2815_p2 = (Range2_all_ones_2_reg_6607 & tmp_396_2_fu_2809_p2);

assign p_41_i_i9_3_fu_3271_p2 = (Range2_all_ones_3_reg_6781 & tmp_396_3_fu_3265_p2);

assign p_41_i_i9_4_fu_3727_p2 = (Range2_all_ones_4_reg_6935 & tmp_396_4_fu_3721_p2);

assign p_41_i_i9_5_fu_4183_p2 = (Range2_all_ones_5_reg_7089 & tmp_396_5_fu_4177_p2);

assign p_41_i_i9_6_fu_4639_p2 = (Range2_all_ones_6_reg_7243 & tmp_396_6_fu_4633_p2);

assign p_41_i_i9_7_fu_5095_p2 = (Range2_all_ones_7_reg_7397 & tmp_396_7_fu_5089_p2);

assign p_41_i_i9_fu_2244_p2 = (Range2_all_ones_reg_6433 & tmp_168_fu_2238_p2);

assign p_41_i_i_1_fu_3354_p2 = (Range2_all_ones_9_1_reg_6828 & tmp_411_1_fu_3348_p2);

assign p_41_i_i_2_fu_3810_p2 = (Range2_all_ones_9_2_reg_6982 & tmp_411_2_fu_3804_p2);

assign p_41_i_i_3_fu_4266_p2 = (Range2_all_ones_9_3_reg_7136 & tmp_411_3_fu_4260_p2);

assign p_41_i_i_4_fu_4722_p2 = (Range2_all_ones_9_4_reg_7290 & tmp_411_4_fu_4716_p2);

assign p_41_i_i_5_fu_5178_p2 = (Range2_all_ones_9_5_reg_7444 & tmp_411_5_fu_5172_p2);

assign p_41_i_i_6_fu_5436_p2 = (Range2_all_ones_9_6_reg_7541 & tmp_411_6_fu_5430_p2);

assign p_41_i_i_7_fu_5664_p2 = (Range2_all_ones_9_7_reg_7613 & tmp_411_7_fu_5658_p2);

assign p_41_i_i_fu_2898_p2 = (Range2_all_ones_9_reg_6654 & tmp_174_fu_2892_p2);

assign p_Result_227_1_fu_2416_p4 = {{p_Val2_121_1_fu_2355_p2[16:15]}};

assign p_Result_227_2_fu_2644_p4 = {{p_Val2_121_2_fu_2583_p2[16:15]}};

assign p_Result_227_3_fu_3070_p4 = {{p_Val2_121_3_fu_3009_p2[16:15]}};

assign p_Result_227_4_fu_3526_p4 = {{p_Val2_121_4_fu_3465_p2[16:15]}};

assign p_Result_227_5_fu_3982_p4 = {{p_Val2_121_5_fu_3921_p2[16:15]}};

assign p_Result_227_6_fu_4438_p4 = {{p_Val2_121_6_fu_4377_p2[16:15]}};

assign p_Result_227_7_fu_4894_p4 = {{p_Val2_121_7_fu_4833_p2[16:15]}};

assign p_Result_228_1_fu_2432_p4 = {{p_Val2_121_1_fu_2355_p2[16:14]}};

assign p_Result_228_2_fu_2660_p4 = {{p_Val2_121_2_fu_2583_p2[16:14]}};

assign p_Result_228_3_fu_3086_p4 = {{p_Val2_121_3_fu_3009_p2[16:14]}};

assign p_Result_228_4_fu_3542_p4 = {{p_Val2_121_4_fu_3465_p2[16:14]}};

assign p_Result_228_5_fu_3998_p4 = {{p_Val2_121_5_fu_3921_p2[16:14]}};

assign p_Result_228_6_fu_4454_p4 = {{p_Val2_121_6_fu_4377_p2[16:14]}};

assign p_Result_228_7_fu_4910_p4 = {{p_Val2_121_7_fu_4833_p2[16:14]}};

assign p_Result_229_1_fu_3215_p4 = {{p_Val2_126_1_fu_3154_p2[16:15]}};

assign p_Result_229_2_fu_3671_p4 = {{p_Val2_126_2_fu_3610_p2[16:15]}};

assign p_Result_229_3_fu_4127_p4 = {{p_Val2_126_3_fu_4066_p2[16:15]}};

assign p_Result_229_4_fu_4583_p4 = {{p_Val2_126_4_fu_4522_p2[16:15]}};

assign p_Result_229_5_fu_5039_p4 = {{p_Val2_126_5_fu_4978_p2[16:15]}};

assign p_Result_229_6_fu_5380_p4 = {{p_Val2_126_6_fu_5319_p2[16:15]}};

assign p_Result_229_7_fu_5608_p4 = {{p_Val2_126_7_fu_5547_p2[16:15]}};

assign p_Result_230_1_fu_3231_p4 = {{p_Val2_126_1_fu_3154_p2[16:14]}};

assign p_Result_230_2_fu_3687_p4 = {{p_Val2_126_2_fu_3610_p2[16:14]}};

assign p_Result_230_3_fu_4143_p4 = {{p_Val2_126_3_fu_4066_p2[16:14]}};

assign p_Result_230_4_fu_4599_p4 = {{p_Val2_126_4_fu_4522_p2[16:14]}};

assign p_Result_230_5_fu_5055_p4 = {{p_Val2_126_5_fu_4978_p2[16:14]}};

assign p_Result_230_6_fu_5396_p4 = {{p_Val2_126_6_fu_5319_p2[16:14]}};

assign p_Result_230_7_fu_5624_p4 = {{p_Val2_126_7_fu_5547_p2[16:14]}};

assign p_Result_23_fu_2204_p4 = {{p_Val2_s_fu_2127_p2[16:14]}};

assign p_Result_24_fu_2759_p4 = {{p_Val2_29_fu_2698_p2[16:15]}};

assign p_Result_25_fu_2775_p4 = {{p_Val2_29_fu_2698_p2[16:14]}};

assign p_Result_s_fu_2188_p4 = {{p_Val2_s_fu_2127_p2[16:15]}};

assign p_Val2_121_1_fu_2355_p2 = ($signed(tmp_386_1_fu_2351_p1) + $signed(tmp_385_1_cast_fu_2347_p1));

assign p_Val2_121_2_fu_2583_p2 = ($signed(tmp_386_2_fu_2579_p1) + $signed(tmp_385_2_cast_fu_2575_p1));

assign p_Val2_121_3_fu_3009_p2 = ($signed(tmp_386_3_fu_3005_p1) + $signed(tmp_385_3_cast_fu_3001_p1));

assign p_Val2_121_4_fu_3465_p2 = ($signed(tmp_386_4_fu_3461_p1) + $signed(tmp_385_4_cast_fu_3457_p1));

assign p_Val2_121_5_fu_3921_p2 = ($signed(tmp_386_5_fu_3917_p1) + $signed(tmp_385_5_cast_fu_3913_p1));

assign p_Val2_121_6_fu_4377_p2 = ($signed(tmp_386_6_fu_4373_p1) + $signed(tmp_385_6_cast_fu_4369_p1));

assign p_Val2_121_7_fu_4833_p2 = ($signed(tmp_386_7_fu_4829_p1) + $signed(tmp_385_7_cast_fu_4825_p1));

assign p_Val2_122_1_fu_2369_p4 = {{p_Val2_121_1_fu_2355_p2[13:6]}};

assign p_Val2_122_2_fu_2597_p4 = {{p_Val2_121_2_fu_2583_p2[13:6]}};

assign p_Val2_122_3_fu_3023_p4 = {{p_Val2_121_3_fu_3009_p2[13:6]}};

assign p_Val2_122_4_fu_3479_p4 = {{p_Val2_121_4_fu_3465_p2[13:6]}};

assign p_Val2_122_5_fu_3935_p4 = {{p_Val2_121_5_fu_3921_p2[13:6]}};

assign p_Val2_122_6_fu_4391_p4 = {{p_Val2_121_6_fu_4377_p2[13:6]}};

assign p_Val2_122_7_fu_4847_p4 = {{p_Val2_121_7_fu_4833_p2[13:6]}};

assign p_Val2_123_1_360_fu_2552_p3 = ((underflow_1_reg_6552[0:0] === 1'b1) ? 8'd128 : p_Val2_123_1_reg_6501);

assign p_Val2_123_1_fu_2390_p2 = (tmp_389_1_fu_2379_p1 + p_Val2_122_1_fu_2369_p4);

assign p_Val2_123_2_362_fu_2978_p3 = ((underflow_2_reg_6686[0:0] === 1'b1) ? 8'd128 : p_Val2_123_2_reg_6588);

assign p_Val2_123_2_fu_2618_p2 = (tmp_389_2_fu_2607_p1 + p_Val2_122_2_fu_2597_p4);

assign p_Val2_123_3_364_fu_3434_p3 = ((underflow_3_reg_6860[0:0] === 1'b1) ? 8'd128 : p_Val2_123_3_reg_6762);

assign p_Val2_123_3_fu_3044_p2 = (tmp_389_3_fu_3033_p1 + p_Val2_122_3_fu_3023_p4);

assign p_Val2_123_4_366_fu_3890_p3 = ((underflow_4_reg_7014[0:0] === 1'b1) ? 8'd128 : p_Val2_123_4_reg_6916);

assign p_Val2_123_4_fu_3500_p2 = (tmp_389_4_fu_3489_p1 + p_Val2_122_4_fu_3479_p4);

assign p_Val2_123_5_368_fu_4346_p3 = ((underflow_5_reg_7168[0:0] === 1'b1) ? 8'd128 : p_Val2_123_5_reg_7070);

assign p_Val2_123_5_fu_3956_p2 = (tmp_389_5_fu_3945_p1 + p_Val2_122_5_fu_3935_p4);

assign p_Val2_123_6_370_fu_4802_p3 = ((underflow_6_reg_7322[0:0] === 1'b1) ? 8'd128 : p_Val2_123_6_reg_7224);

assign p_Val2_123_6_fu_4412_p2 = (tmp_389_6_fu_4401_p1 + p_Val2_122_6_fu_4391_p4);

assign p_Val2_123_7_372_fu_5258_p3 = ((underflow_7_reg_7476[0:0] === 1'b1) ? 8'd128 : p_Val2_123_7_reg_7378);

assign p_Val2_123_7_fu_4868_p2 = (tmp_389_7_fu_4857_p1 + p_Val2_122_7_fu_4847_p4);

assign p_Val2_123_mux_1_fu_2546_p3 = ((brmerge_i_i_i_1_reg_6557[0:0] === 1'b1) ? 8'd127 : p_Val2_123_1_reg_6501);

assign p_Val2_123_mux_2_fu_2972_p3 = ((brmerge_i_i_i_2_reg_6691[0:0] === 1'b1) ? 8'd127 : p_Val2_123_2_reg_6588);

assign p_Val2_123_mux_3_fu_3428_p3 = ((brmerge_i_i_i_3_reg_6865[0:0] === 1'b1) ? 8'd127 : p_Val2_123_3_reg_6762);

assign p_Val2_123_mux_4_fu_3884_p3 = ((brmerge_i_i_i_4_reg_7019[0:0] === 1'b1) ? 8'd127 : p_Val2_123_4_reg_6916);

assign p_Val2_123_mux_5_fu_4340_p3 = ((brmerge_i_i_i_5_reg_7173[0:0] === 1'b1) ? 8'd127 : p_Val2_123_5_reg_7070);

assign p_Val2_123_mux_6_fu_4796_p3 = ((brmerge_i_i_i_6_reg_7327[0:0] === 1'b1) ? 8'd127 : p_Val2_123_6_reg_7224);

assign p_Val2_123_mux_7_fu_5252_p3 = ((brmerge_i_i_i_7_reg_7481[0:0] === 1'b1) ? 8'd127 : p_Val2_123_7_reg_7378);

assign p_Val2_123_mux_fu_2318_p3 = ((brmerge_i_i_i_reg_6470[0:0] === 1'b1) ? 8'd127 : p_Val2_28_reg_6414);

assign p_Val2_126_1_fu_3154_p2 = ($signed(tmp_401_1_fu_3150_p1) + $signed(tmp_400_1_cast_fu_3146_p1));

assign p_Val2_126_2_fu_3610_p2 = ($signed(tmp_401_2_fu_3606_p1) + $signed(tmp_400_2_cast_fu_3602_p1));

assign p_Val2_126_3_fu_4066_p2 = ($signed(tmp_401_3_fu_4062_p1) + $signed(tmp_400_3_cast_fu_4058_p1));

assign p_Val2_126_4_fu_4522_p2 = ($signed(tmp_401_4_fu_4518_p1) + $signed(tmp_400_4_cast_fu_4514_p1));

assign p_Val2_126_5_fu_4978_p2 = ($signed(tmp_401_5_fu_4974_p1) + $signed(tmp_400_5_cast_fu_4970_p1));

assign p_Val2_126_6_fu_5319_p2 = ($signed(tmp_401_6_fu_5315_p1) + $signed(tmp_400_6_cast_fu_5311_p1));

assign p_Val2_126_7_fu_5547_p2 = ($signed(tmp_401_7_fu_5543_p1) + $signed(tmp_400_7_cast_fu_5539_p1));

assign p_Val2_127_1_fu_3168_p4 = {{p_Val2_126_1_fu_3154_p2[13:6]}};

assign p_Val2_127_2_fu_3624_p4 = {{p_Val2_126_2_fu_3610_p2[13:6]}};

assign p_Val2_127_3_fu_4080_p4 = {{p_Val2_126_3_fu_4066_p2[13:6]}};

assign p_Val2_127_4_fu_4536_p4 = {{p_Val2_126_4_fu_4522_p2[13:6]}};

assign p_Val2_127_5_fu_4992_p4 = {{p_Val2_126_5_fu_4978_p2[13:6]}};

assign p_Val2_127_6_fu_5333_p4 = {{p_Val2_126_6_fu_5319_p2[13:6]}};

assign p_Val2_127_7_fu_5561_p4 = {{p_Val2_126_7_fu_5547_p2[13:6]}};

assign p_Val2_128_1_361_fu_3579_p3 = ((underflow_18_1_reg_6895[0:0] === 1'b1) ? 8'd128 : p_Val2_128_1_reg_6809);

assign p_Val2_128_1_fu_3189_p2 = (tmp_404_1_fu_3178_p1 + p_Val2_127_1_fu_3168_p4);

assign p_Val2_128_2_363_fu_4035_p3 = ((underflow_18_2_reg_7049[0:0] === 1'b1) ? 8'd128 : p_Val2_128_2_reg_6963);

assign p_Val2_128_2_fu_3645_p2 = (tmp_404_2_fu_3634_p1 + p_Val2_127_2_fu_3624_p4);

assign p_Val2_128_3_365_fu_4491_p3 = ((underflow_18_3_reg_7203[0:0] === 1'b1) ? 8'd128 : p_Val2_128_3_reg_7117);

assign p_Val2_128_3_fu_4101_p2 = (tmp_404_3_fu_4090_p1 + p_Val2_127_3_fu_4080_p4);

assign p_Val2_128_4_367_fu_4947_p3 = ((underflow_18_4_reg_7357[0:0] === 1'b1) ? 8'd128 : p_Val2_128_4_reg_7271);

assign p_Val2_128_4_fu_4557_p2 = (tmp_404_4_fu_4546_p1 + p_Val2_127_4_fu_4536_p4);

assign p_Val2_128_5_369_fu_5288_p3 = ((underflow_18_5_reg_7501[0:0] === 1'b1) ? 8'd128 : p_Val2_128_5_reg_7425);

assign p_Val2_128_5_fu_5013_p2 = (tmp_404_5_fu_5002_p1 + p_Val2_127_5_fu_4992_p4);

assign p_Val2_128_6_371_fu_5516_p3 = ((underflow_18_6_reg_7573[0:0] === 1'b1) ? 8'd128 : p_Val2_128_6_reg_7522);

assign p_Val2_128_6_fu_5354_p2 = (tmp_404_6_fu_5343_p1 + p_Val2_127_6_fu_5333_p4);

assign p_Val2_128_7_373_fu_5744_p3 = ((underflow_18_7_reg_7645[0:0] === 1'b1) ? 8'd128 : p_Val2_128_7_reg_7594);

assign p_Val2_128_7_fu_5582_p2 = (tmp_404_7_fu_5571_p1 + p_Val2_127_7_fu_5561_p4);

assign p_Val2_128_mux_1_fu_3573_p3 = ((brmerge_i_i_i9_1_reg_6900[0:0] === 1'b1) ? 8'd127 : p_Val2_128_1_reg_6809);

assign p_Val2_128_mux_2_fu_4029_p3 = ((brmerge_i_i_i9_2_reg_7054[0:0] === 1'b1) ? 8'd127 : p_Val2_128_2_reg_6963);

assign p_Val2_128_mux_3_fu_4485_p3 = ((brmerge_i_i_i9_3_reg_7208[0:0] === 1'b1) ? 8'd127 : p_Val2_128_3_reg_7117);

assign p_Val2_128_mux_4_fu_4941_p3 = ((brmerge_i_i_i9_4_reg_7362[0:0] === 1'b1) ? 8'd127 : p_Val2_128_4_reg_7271);

assign p_Val2_128_mux_5_fu_5282_p3 = ((brmerge_i_i_i9_5_reg_7506[0:0] === 1'b1) ? 8'd127 : p_Val2_128_5_reg_7425);

assign p_Val2_128_mux_6_fu_5510_p3 = ((brmerge_i_i_i9_6_reg_7578[0:0] === 1'b1) ? 8'd127 : p_Val2_128_6_reg_7522);

assign p_Val2_128_mux_7_fu_5738_p3 = ((brmerge_i_i_i9_7_reg_7650[0:0] === 1'b1) ? 8'd127 : p_Val2_128_7_reg_7594);

assign p_Val2_128_mux_fu_3117_p3 = ((brmerge_i_i_i9_reg_6746[0:0] === 1'b1) ? 8'd127 : p_Val2_31_reg_6635);

assign p_Val2_27_fu_2141_p4 = {{p_Val2_s_fu_2127_p2[13:6]}};

assign p_Val2_28_fu_2162_p2 = (tmp_166_fu_2151_p1 + p_Val2_27_fu_2141_p4);

assign p_Val2_29_fu_2698_p2 = ($signed(tmp_171_fu_2694_p1) + $signed(tmp_263_cast_fu_2690_p1));

assign p_Val2_30_fu_2712_p4 = {{p_Val2_29_fu_2698_p2[13:6]}};

assign p_Val2_31_fu_2733_p2 = (tmp_172_fu_2722_p1 + p_Val2_30_fu_2712_p4);

assign p_Val2_9_fu_3123_p3 = ((underflow_18_reg_6741[0:0] === 1'b1) ? 8'd128 : p_Val2_31_reg_6635);

assign p_Val2_s_359_fu_2324_p3 = ((underflow_reg_6465[0:0] === 1'b1) ? 8'd128 : p_Val2_28_reg_6414);

assign p_Val2_s_fu_2127_p2 = ($signed(tmp_165_fu_2123_p1) + $signed(tmp_254_cast_fu_2119_p1));

assign p_not_i_i9_1_fu_3369_p2 = (deleted_zeros_9_1_fu_3343_p3 ^ 1'd1);

assign p_not_i_i9_2_fu_3825_p2 = (deleted_zeros_9_2_fu_3799_p3 ^ 1'd1);

assign p_not_i_i9_3_fu_4281_p2 = (deleted_zeros_9_3_fu_4255_p3 ^ 1'd1);

assign p_not_i_i9_4_fu_4737_p2 = (deleted_zeros_9_4_fu_4711_p3 ^ 1'd1);

assign p_not_i_i9_5_fu_5193_p2 = (deleted_zeros_9_5_fu_5167_p3 ^ 1'd1);

assign p_not_i_i9_6_fu_5451_p2 = (deleted_zeros_9_6_fu_5425_p3 ^ 1'd1);

assign p_not_i_i9_7_fu_5679_p2 = (deleted_zeros_9_7_fu_5653_p3 ^ 1'd1);

assign p_not_i_i9_fu_2913_p2 = (deleted_zeros_9_fu_2887_p3 ^ 1'd1);

assign p_not_i_i_1_fu_2487_p2 = (deleted_zeros_1_fu_2461_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2830_p2 = (deleted_zeros_2_fu_2804_p3 ^ 1'd1);

assign p_not_i_i_3_fu_3286_p2 = (deleted_zeros_3_fu_3260_p3 ^ 1'd1);

assign p_not_i_i_4_fu_3742_p2 = (deleted_zeros_4_fu_3716_p3 ^ 1'd1);

assign p_not_i_i_5_fu_4198_p2 = (deleted_zeros_5_fu_4172_p3 ^ 1'd1);

assign p_not_i_i_6_fu_4654_p2 = (deleted_zeros_6_fu_4628_p3 ^ 1'd1);

assign p_not_i_i_7_fu_5110_p2 = (deleted_zeros_7_fu_5084_p3 ^ 1'd1);

assign p_not_i_i_fu_2259_p2 = (deleted_zeros_fu_2233_p3 ^ 1'd1);

assign p_shl23_cast_fu_1818_p1 = tmp_600_fu_1811_p3;

assign p_shl24_cast_fu_1755_p1 = tmp_592_fu_1748_p3;

assign p_shl25_cast_fu_1766_p1 = tmp_593_fu_1759_p3;

assign p_shl26_cast_fu_1703_p1 = tmp_585_fu_1696_p3;

assign p_shl27_cast_fu_1714_p1 = tmp_586_fu_1707_p3;

assign p_shl28_cast_fu_1651_p1 = tmp_578_fu_1644_p3;

assign p_shl29_cast_fu_1662_p1 = tmp_579_fu_1655_p3;

assign p_shl30_cast_fu_1599_p1 = tmp_571_fu_1592_p3;

assign p_shl31_cast_fu_1610_p1 = tmp_572_fu_1603_p3;

assign p_shl32_cast_fu_1547_p1 = tmp_564_fu_1540_p3;

assign p_shl33_cast_fu_1558_p1 = tmp_565_fu_1551_p3;

assign p_shl34_cast_fu_1495_p1 = tmp_557_fu_1488_p3;

assign p_shl35_cast_fu_1506_p1 = tmp_558_fu_1499_p3;

assign p_shl36_cast_fu_1222_p1 = tmp_1533_fu_1214_p3;

assign p_shl37_cast_fu_1234_p1 = tmp_1534_fu_1226_p3;

assign p_shl38_cast_fu_1145_p1 = tmp_546_fu_1137_p3;

assign p_shl39_cast_fu_1157_p1 = tmp_547_fu_1149_p3;

assign p_shl_cast_fu_1807_p1 = tmp_599_fu_1800_p3;

assign sum10_fu_1633_p2 = ($signed(conv_last_weight_3_V15) + $signed(tmp_1586_cast_fu_1629_p1));

assign sum11_fu_1464_p2 = ($signed(conv_last_weight_7_V23) + $signed(tmp_1546_cast_reg_6156));

assign sum12_fu_1685_p2 = ($signed(conv_last_weight_4_V17) + $signed(tmp_1596_cast_fu_1681_p1));

assign sum13_fu_1737_p2 = ($signed(conv_last_weight_5_V19) + $signed(tmp_1606_cast_fu_1733_p1));

assign sum14_fu_1789_p2 = ($signed(conv_last_weight_6_V21) + $signed(tmp_1616_cast_fu_1785_p1));

assign sum15_fu_1841_p2 = ($signed(conv_last_weight_7_V23) + $signed(tmp_1626_cast_fu_1837_p1));

assign sum1_fu_1477_p2 = ($signed(conv_last_weight_0_V9) + $signed(tmp_1556_cast_fu_1474_p1));

assign sum2_fu_1434_p2 = ($signed(conv_last_weight_4_V17) + $signed(tmp_1546_cast_reg_6156));

assign sum3_fu_1404_p2 = ($signed(conv_last_weight_1_V11) + $signed(tmp_1546_cast_reg_6156));

assign sum4_fu_1529_p2 = ($signed(conv_last_weight_1_V11) + $signed(tmp_1566_cast_fu_1525_p1));

assign sum5_fu_1444_p2 = ($signed(conv_last_weight_5_V19) + $signed(tmp_1546_cast_reg_6156));

assign sum6_fu_1414_p2 = ($signed(conv_last_weight_2_V13) + $signed(tmp_1546_cast_reg_6156));

assign sum7_fu_1581_p2 = ($signed(conv_last_weight_2_V13) + $signed(tmp_1576_cast_fu_1577_p1));

assign sum8_fu_1454_p2 = ($signed(conv_last_weight_6_V21) + $signed(tmp_1546_cast_reg_6156));

assign sum9_fu_1424_p2 = ($signed(conv_last_weight_3_V15) + $signed(tmp_1546_cast_reg_6156));

assign sum_fu_1180_p2 = ($signed(conv_last_weight_0_V9) + $signed(tmp_1546_cast_fu_1176_p1));

assign this_assign_1_1_fu_2558_p3 = ((underflow_not_1_fu_2541_p2[0:0] === 1'b1) ? p_Val2_123_mux_1_fu_2546_p3 : p_Val2_123_1_360_fu_2552_p3);

assign this_assign_1_2_fu_2984_p3 = ((underflow_not_2_fu_2967_p2[0:0] === 1'b1) ? p_Val2_123_mux_2_fu_2972_p3 : p_Val2_123_2_362_fu_2978_p3);

assign this_assign_1_3_fu_3440_p3 = ((underflow_not_3_fu_3423_p2[0:0] === 1'b1) ? p_Val2_123_mux_3_fu_3428_p3 : p_Val2_123_3_364_fu_3434_p3);

assign this_assign_1_4_fu_3896_p3 = ((underflow_not_4_fu_3879_p2[0:0] === 1'b1) ? p_Val2_123_mux_4_fu_3884_p3 : p_Val2_123_4_366_fu_3890_p3);

assign this_assign_1_5_fu_4352_p3 = ((underflow_not_5_fu_4335_p2[0:0] === 1'b1) ? p_Val2_123_mux_5_fu_4340_p3 : p_Val2_123_5_368_fu_4346_p3);

assign this_assign_1_6_fu_4808_p3 = ((underflow_not_6_fu_4791_p2[0:0] === 1'b1) ? p_Val2_123_mux_6_fu_4796_p3 : p_Val2_123_6_370_fu_4802_p3);

assign this_assign_1_7_fu_5264_p3 = ((underflow_not_7_fu_5247_p2[0:0] === 1'b1) ? p_Val2_123_mux_7_fu_5252_p3 : p_Val2_123_7_372_fu_5258_p3);

assign this_assign_1_fu_2330_p3 = ((underflow_not_fu_2313_p2[0:0] === 1'b1) ? p_Val2_123_mux_fu_2318_p3 : p_Val2_s_359_fu_2324_p3);

assign this_assign_52_1_1_fu_3585_p3 = ((underflow_18_not_1_fu_3568_p2[0:0] === 1'b1) ? p_Val2_128_mux_1_fu_3573_p3 : p_Val2_128_1_361_fu_3579_p3);

assign this_assign_52_1_2_fu_4041_p3 = ((underflow_18_not_2_fu_4024_p2[0:0] === 1'b1) ? p_Val2_128_mux_2_fu_4029_p3 : p_Val2_128_2_363_fu_4035_p3);

assign this_assign_52_1_3_fu_4497_p3 = ((underflow_18_not_3_fu_4480_p2[0:0] === 1'b1) ? p_Val2_128_mux_3_fu_4485_p3 : p_Val2_128_3_365_fu_4491_p3);

assign this_assign_52_1_4_fu_4953_p3 = ((underflow_18_not_4_fu_4936_p2[0:0] === 1'b1) ? p_Val2_128_mux_4_fu_4941_p3 : p_Val2_128_4_367_fu_4947_p3);

assign this_assign_52_1_5_fu_5294_p3 = ((underflow_18_not_5_fu_5277_p2[0:0] === 1'b1) ? p_Val2_128_mux_5_fu_5282_p3 : p_Val2_128_5_369_fu_5288_p3);

assign this_assign_52_1_6_fu_5522_p3 = ((underflow_18_not_6_fu_5505_p2[0:0] === 1'b1) ? p_Val2_128_mux_6_fu_5510_p3 : p_Val2_128_6_371_fu_5516_p3);

assign this_assign_52_1_7_fu_5750_p3 = ((underflow_18_not_7_fu_5733_p2[0:0] === 1'b1) ? p_Val2_128_mux_7_fu_5738_p3 : p_Val2_128_7_373_fu_5744_p3);

assign this_assign_52_1_fu_3129_p3 = ((underflow_18_not_fu_3112_p2[0:0] === 1'b1) ? p_Val2_128_mux_fu_3117_p3 : p_Val2_9_fu_3123_p3);

assign tmp10_fu_2963_p2 = (brmerge40_demorgan_i_207_reg_6681 | tmp_398_2_reg_6676);

assign tmp11_demorgan_fu_3852_p2 = (p_38_i_i_2_fu_3821_p2 | brmerge40_demorgan_i_208_fu_3847_p2);

assign tmp11_fu_3858_p2 = (tmp11_demorgan_fu_3852_p2 ^ 1'd1);

assign tmp12_fu_4020_p2 = (brmerge40_demorgan_i_208_reg_7044 | tmp_413_2_reg_7039);

assign tmp13_demorgan_fu_3313_p2 = (p_38_i_i9_3_fu_3282_p2 | brmerge40_demorgan_i_209_fu_3308_p2);

assign tmp13_fu_3319_p2 = (tmp13_demorgan_fu_3313_p2 ^ 1'd1);

assign tmp14_fu_3419_p2 = (brmerge40_demorgan_i_209_reg_6855 | tmp_398_3_reg_6850);

assign tmp15_demorgan_fu_4308_p2 = (p_38_i_i_3_fu_4277_p2 | brmerge40_demorgan_i_210_fu_4303_p2);

assign tmp15_fu_4314_p2 = (tmp15_demorgan_fu_4308_p2 ^ 1'd1);

assign tmp16_fu_4476_p2 = (brmerge40_demorgan_i_210_reg_7198 | tmp_413_3_reg_7193);

assign tmp17_demorgan_fu_3769_p2 = (p_38_i_i9_4_fu_3738_p2 | brmerge40_demorgan_i_211_fu_3764_p2);

assign tmp17_fu_3775_p2 = (tmp17_demorgan_fu_3769_p2 ^ 1'd1);

assign tmp18_fu_3875_p2 = (brmerge40_demorgan_i_211_reg_7009 | tmp_398_4_reg_7004);

assign tmp19_demorgan_fu_4764_p2 = (p_38_i_i_4_fu_4733_p2 | brmerge40_demorgan_i_212_fu_4759_p2);

assign tmp19_fu_4770_p2 = (tmp19_demorgan_fu_4764_p2 ^ 1'd1);

assign tmp1_demorgan_fu_2286_p2 = (p_38_i_i9_fu_2255_p2 | brmerge40_demorgan_i_fu_2281_p2);

assign tmp1_fu_2292_p2 = (tmp1_demorgan_fu_2286_p2 ^ 1'd1);

assign tmp20_fu_4932_p2 = (brmerge40_demorgan_i_212_reg_7352 | tmp_413_4_reg_7347);

assign tmp21_demorgan_fu_4225_p2 = (p_38_i_i9_5_fu_4194_p2 | brmerge40_demorgan_i_213_fu_4220_p2);

assign tmp21_fu_4231_p2 = (tmp21_demorgan_fu_4225_p2 ^ 1'd1);

assign tmp22_fu_4331_p2 = (brmerge40_demorgan_i_213_reg_7163 | tmp_398_5_reg_7158);

assign tmp23_demorgan_fu_5220_p2 = (p_38_i_i_5_fu_5189_p2 | brmerge40_demorgan_i_214_fu_5215_p2);

assign tmp23_fu_5226_p2 = (tmp23_demorgan_fu_5220_p2 ^ 1'd1);

assign tmp24_fu_5273_p2 = (brmerge40_demorgan_i_214_reg_7496 | tmp_413_5_reg_7491);

assign tmp25_demorgan_fu_4681_p2 = (p_38_i_i9_6_fu_4650_p2 | brmerge40_demorgan_i_215_fu_4676_p2);

assign tmp25_fu_4687_p2 = (tmp25_demorgan_fu_4681_p2 ^ 1'd1);

assign tmp26_fu_4787_p2 = (brmerge40_demorgan_i_215_reg_7317 | tmp_398_6_reg_7312);

assign tmp27_demorgan_fu_5478_p2 = (p_38_i_i_6_fu_5447_p2 | brmerge40_demorgan_i_216_fu_5473_p2);

assign tmp27_fu_5484_p2 = (tmp27_demorgan_fu_5478_p2 ^ 1'd1);

assign tmp28_fu_5501_p2 = (brmerge40_demorgan_i_216_reg_7568 | tmp_413_6_reg_7563);

assign tmp29_demorgan_fu_5137_p2 = (p_38_i_i9_7_fu_5106_p2 | brmerge40_demorgan_i_217_fu_5132_p2);

assign tmp29_fu_5143_p2 = (tmp29_demorgan_fu_5137_p2 ^ 1'd1);

assign tmp2_fu_2309_p2 = (brmerge40_demorgan_i_reg_6460 | tmp_169_reg_6455);

assign tmp30_fu_5243_p2 = (brmerge40_demorgan_i_217_reg_7471 | tmp_398_7_reg_7466);

assign tmp31_demorgan_fu_5706_p2 = (p_38_i_i_7_fu_5675_p2 | brmerge40_demorgan_i_218_fu_5701_p2);

assign tmp31_fu_5712_p2 = (tmp31_demorgan_fu_5706_p2 ^ 1'd1);

assign tmp32_fu_5729_p2 = (brmerge40_demorgan_i_218_reg_7640 | tmp_413_7_reg_7635);

assign tmp3_demorgan_fu_2940_p2 = (p_38_i_i_fu_2909_p2 | brmerge40_demorgan_i_219_fu_2935_p2);

assign tmp3_fu_2946_p2 = (tmp3_demorgan_fu_2940_p2 ^ 1'd1);

assign tmp4_fu_3108_p2 = (brmerge40_demorgan_i_219_reg_6736 | tmp_175_reg_6731);

assign tmp5_demorgan_fu_2514_p2 = (p_38_i_i9_1_fu_2483_p2 | brmerge40_demorgan_i_205_fu_2509_p2);

assign tmp5_fu_2520_p2 = (tmp5_demorgan_fu_2514_p2 ^ 1'd1);

assign tmp6_fu_2537_p2 = (brmerge40_demorgan_i_205_reg_6547 | tmp_398_1_reg_6542);

assign tmp7_demorgan_fu_3396_p2 = (p_38_i_i_1_fu_3365_p2 | brmerge40_demorgan_i_206_fu_3391_p2);

assign tmp7_fu_3402_p2 = (tmp7_demorgan_fu_3396_p2 ^ 1'd1);

assign tmp8_fu_3564_p2 = (brmerge40_demorgan_i_206_reg_6890 | tmp_413_1_reg_6885);

assign tmp9_demorgan_fu_2857_p2 = (p_38_i_i9_2_fu_2826_p2 | brmerge40_demorgan_i_207_fu_2852_p2);

assign tmp9_fu_2863_p2 = (tmp9_demorgan_fu_2857_p2 ^ 1'd1);

assign tmp_1523_cast_fu_968_p1 = tmp_535_fu_961_p3;

assign tmp_1527_cast_fu_981_p3 = {{tmp_537_fu_975_p2}, {2'd0}};

assign tmp_1528_cast_fu_998_p1 = tmp_538_fu_992_p2;

assign tmp_1530_cast_fu_5882_p1 = tmp_539_fu_5875_p3;

assign tmp_1530_fu_5799_p1 = arrayNo_mid2_v_fu_5791_p3[2:0];

assign tmp_1531_fu_5945_p3 = tmp_109_fu_5924_p10[32'd7];

assign tmp_1532_fu_1852_p3 = {{tmp_551_reg_6173}, {2'd0}};

assign tmp_1533_fu_1214_p3 = {{newIndex2_fu_1208_p2}, {8'd0}};

assign tmp_1534_cast_fu_5895_p3 = {{tmp_541_fu_5889_p2}, {2'd0}};

assign tmp_1534_fu_1226_p3 = {{newIndex2_fu_1208_p2}, {6'd0}};

assign tmp_1535_cast_fu_5912_p1 = tmp_542_fu_5906_p2;

assign tmp_1535_fu_1253_p3 = {{newIndex2_fu_1208_p2}, {2'd0}};

assign tmp_1536_fu_1270_p2 = tmp_555_fu_1265_p2 << 12'd2;

assign tmp_1537_cast_fu_1078_p1 = tmp_543_fu_1070_p3;

assign tmp_1539_fu_2154_p3 = p_Val2_s_fu_2127_p2[32'd13];

assign tmp_1540_cast_fu_1087_p3 = {{tmp_544_fu_1082_p2}, {2'd0}};

assign tmp_1540_fu_2168_p3 = p_Val2_28_fu_2162_p2[32'd7];

assign tmp_1541_cast_fu_1100_p1 = tmp_545_fu_1095_p2;

assign tmp_1541_fu_2226_p3 = p_Val2_s_reg_6403[32'd14];

assign tmp_1544_fu_2725_p3 = p_Val2_29_fu_2698_p2[32'd13];

assign tmp_1545_cast_fu_1167_p1 = $signed(tmp_548_fu_1161_p2);

assign tmp_1545_fu_2739_p3 = p_Val2_31_fu_2733_p2[32'd7];

assign tmp_1546_cast_fu_1176_p1 = $signed(tmp_549_fu_1171_p2);

assign tmp_1546_fu_2880_p3 = p_Val2_29_reg_6624[32'd14];

assign tmp_1548_cast_fu_1199_p1 = tmp_550_fu_1191_p3;

assign tmp_1549_fu_2382_p3 = p_Val2_121_1_fu_2355_p2[32'd13];

assign tmp_1550_fu_2396_p3 = p_Val2_123_1_fu_2390_p2[32'd7];

assign tmp_1551_cast_fu_1859_p1 = tmp_1532_fu_1852_p3;

assign tmp_1551_fu_2454_p3 = p_Val2_121_1_reg_6490[32'd14];

assign tmp_1552_cast_fu_1868_p1 = tmp_552_fu_1863_p2;

assign tmp_1554_fu_3181_p3 = p_Val2_126_1_fu_3154_p2[32'd13];

assign tmp_1555_cast_fu_1244_p1 = $signed(tmp_553_fu_1238_p2);

assign tmp_1555_fu_3195_p3 = p_Val2_128_1_fu_3189_p2[32'd7];

assign tmp_1556_cast_fu_1474_p1 = $signed(tmp_554_reg_6178);

assign tmp_1556_fu_3336_p3 = p_Val2_126_1_reg_6798[32'd14];

assign tmp_1558_cast_fu_1261_p1 = tmp_1535_fu_1253_p3;

assign tmp_1559_fu_2610_p3 = p_Val2_121_2_fu_2583_p2[32'd13];

assign tmp_1560_fu_2624_p3 = p_Val2_123_2_fu_2618_p2[32'd7];

assign tmp_1561_fu_2797_p3 = p_Val2_121_2_reg_6577[32'd14];

assign tmp_1562_cast_fu_1281_p1 = tmp_556_fu_1276_p2;

assign tmp_1564_fu_3637_p3 = p_Val2_126_2_fu_3610_p2[32'd13];

assign tmp_1565_cast_fu_1516_p1 = $signed(tmp_559_fu_1510_p2);

assign tmp_1565_fu_3651_p3 = p_Val2_128_2_fu_3645_p2[32'd7];

assign tmp_1566_cast_fu_1525_p1 = $signed(tmp_560_fu_1520_p2);

assign tmp_1566_fu_3792_p3 = p_Val2_126_2_reg_6952[32'd14];

assign tmp_1568_cast_fu_1880_p1 = tmp_561_fu_1873_p3;

assign tmp_1569_fu_3036_p3 = p_Val2_121_3_fu_3009_p2[32'd13];

assign tmp_1570_fu_3050_p3 = p_Val2_123_3_fu_3044_p2[32'd7];

assign tmp_1571_cast_fu_1889_p3 = {{tmp_562_fu_1884_p2}, {2'd0}};

assign tmp_1571_fu_3253_p3 = p_Val2_121_3_reg_6751[32'd14];

assign tmp_1572_cast_fu_1902_p1 = tmp_563_fu_1897_p2;

assign tmp_1574_fu_4093_p3 = p_Val2_126_3_fu_4066_p2[32'd13];

assign tmp_1575_cast_fu_1568_p1 = $signed(tmp_566_fu_1562_p2);

assign tmp_1575_fu_4107_p3 = p_Val2_128_3_fu_4101_p2[32'd7];

assign tmp_1576_cast_fu_1577_p1 = $signed(tmp_567_fu_1572_p2);

assign tmp_1576_fu_4248_p3 = p_Val2_126_3_reg_7106[32'd14];

assign tmp_1578_cast_fu_1914_p1 = tmp_568_fu_1907_p3;

assign tmp_1579_fu_3492_p3 = p_Val2_121_4_fu_3465_p2[32'd13];

assign tmp_1580_fu_3506_p3 = p_Val2_123_4_fu_3500_p2[32'd7];

assign tmp_1581_cast_fu_1923_p3 = {{tmp_569_fu_1918_p2}, {2'd0}};

assign tmp_1581_fu_3709_p3 = p_Val2_121_4_reg_6905[32'd14];

assign tmp_1582_cast_fu_1936_p1 = tmp_570_fu_1931_p2;

assign tmp_1584_fu_4549_p3 = p_Val2_126_4_fu_4522_p2[32'd13];

assign tmp_1585_cast_fu_1620_p1 = $signed(tmp_573_fu_1614_p2);

assign tmp_1585_fu_4563_p3 = p_Val2_128_4_fu_4557_p2[32'd7];

assign tmp_1586_cast_fu_1629_p1 = $signed(tmp_574_fu_1624_p2);

assign tmp_1586_fu_4704_p3 = p_Val2_126_4_reg_7260[32'd14];

assign tmp_1588_cast_fu_1948_p1 = tmp_575_fu_1941_p3;

assign tmp_1589_fu_3948_p3 = p_Val2_121_5_fu_3921_p2[32'd13];

assign tmp_1590_fu_3962_p3 = p_Val2_123_5_fu_3956_p2[32'd7];

assign tmp_1591_cast_fu_1957_p3 = {{tmp_576_fu_1952_p2}, {2'd0}};

assign tmp_1591_fu_4165_p3 = p_Val2_121_5_reg_7059[32'd14];

assign tmp_1592_cast_fu_1970_p1 = tmp_577_fu_1965_p2;

assign tmp_1594_fu_5005_p3 = p_Val2_126_5_fu_4978_p2[32'd13];

assign tmp_1595_cast_fu_1672_p1 = $signed(tmp_580_fu_1666_p2);

assign tmp_1595_fu_5019_p3 = p_Val2_128_5_fu_5013_p2[32'd7];

assign tmp_1596_cast_fu_1681_p1 = $signed(tmp_581_fu_1676_p2);

assign tmp_1596_fu_5160_p3 = p_Val2_126_5_reg_7414[32'd14];

assign tmp_1598_cast_fu_1982_p1 = tmp_582_fu_1975_p3;

assign tmp_1599_fu_4404_p3 = p_Val2_121_6_fu_4377_p2[32'd13];

assign tmp_1600_fu_4418_p3 = p_Val2_123_6_fu_4412_p2[32'd7];

assign tmp_1601_cast_fu_1991_p3 = {{tmp_583_fu_1986_p2}, {2'd0}};

assign tmp_1601_fu_4621_p3 = p_Val2_121_6_reg_7213[32'd14];

assign tmp_1602_cast_fu_2004_p1 = tmp_584_fu_1999_p2;

assign tmp_1604_fu_5346_p3 = p_Val2_126_6_fu_5319_p2[32'd13];

assign tmp_1605_cast_fu_1724_p1 = $signed(tmp_587_fu_1718_p2);

assign tmp_1605_fu_5360_p3 = p_Val2_128_6_fu_5354_p2[32'd7];

assign tmp_1606_cast_fu_1733_p1 = $signed(tmp_588_fu_1728_p2);

assign tmp_1606_fu_5418_p3 = p_Val2_126_6_reg_7511[32'd14];

assign tmp_1608_cast_fu_2016_p1 = tmp_589_fu_2009_p3;

assign tmp_1609_fu_4860_p3 = p_Val2_121_7_fu_4833_p2[32'd13];

assign tmp_1610_fu_4874_p3 = p_Val2_123_7_fu_4868_p2[32'd7];

assign tmp_1611_cast_fu_2025_p3 = {{tmp_590_fu_2020_p2}, {2'd0}};

assign tmp_1611_fu_5077_p3 = p_Val2_121_7_reg_7367[32'd14];

assign tmp_1612_cast_fu_2038_p1 = tmp_591_fu_2033_p2;

assign tmp_1614_fu_5574_p3 = p_Val2_126_7_fu_5547_p2[32'd13];

assign tmp_1615_cast_fu_1776_p1 = $signed(tmp_594_fu_1770_p2);

assign tmp_1615_fu_5588_p3 = p_Val2_128_7_fu_5582_p2[32'd7];

assign tmp_1616_cast_fu_1785_p1 = $signed(tmp_595_fu_1780_p2);

assign tmp_1616_fu_5646_p3 = p_Val2_126_7_reg_7583[32'd14];

assign tmp_1618_cast_fu_2050_p1 = tmp_596_fu_2043_p3;

assign tmp_1621_cast_fu_2059_p3 = {{tmp_597_fu_2054_p2}, {2'd0}};

assign tmp_1622_cast_fu_2072_p1 = tmp_598_fu_2067_p2;

assign tmp_1625_cast_fu_1828_p1 = $signed(tmp_601_fu_1822_p2);

assign tmp_1626_cast_fu_1837_p1 = $signed(tmp_602_fu_1832_p2);

assign tmp_1628_cast_fu_2084_p1 = tmp_603_fu_2077_p3;

assign tmp_1631_cast_fu_2093_p3 = {{tmp_604_fu_2088_p2}, {2'd0}};

assign tmp_1632_cast_fu_2106_p1 = tmp_605_fu_2101_p2;

assign tmp_165_fu_2123_p1 = $signed(reg_792);

assign tmp_166_fu_2151_p1 = tmp_1538_reg_6388;

assign tmp_167_fu_2176_p2 = (tmp_1540_fu_2168_p3 ^ 1'd1);

assign tmp_168_fu_2238_p2 = (tmp_1541_fu_2226_p3 ^ 1'd1);

assign tmp_169_fu_2270_p2 = (tmp_1537_reg_6408 ^ 1'd1);

assign tmp_170_fu_2682_p3 = {{reg_800}, {6'd0}};

assign tmp_171_fu_2694_p1 = $signed(reg_796);

assign tmp_172_fu_2722_p1 = tmp_1543_reg_6393;

assign tmp_173_fu_2747_p2 = (tmp_1545_fu_2739_p3 ^ 1'd1);

assign tmp_174_fu_2892_p2 = (tmp_1546_fu_2880_p3 ^ 1'd1);

assign tmp_175_fu_2924_p2 = (tmp_1542_reg_6629 ^ 1'd1);

assign tmp_1_fu_1286_p2 = (10'd257 + co_cast_fu_1117_p1);

assign tmp_254_cast_fu_2119_p1 = $signed(tmp_s_fu_2111_p3);

assign tmp_263_cast_fu_2690_p1 = $signed(tmp_170_fu_2682_p3);

assign tmp_2_fu_1302_p2 = (10'd258 + co_cast_fu_1117_p1);

assign tmp_385_1_cast_fu_2347_p1 = $signed(tmp_385_1_fu_2339_p3);

assign tmp_385_1_fu_2339_p3 = {{reg_808}, {6'd0}};

assign tmp_385_2_cast_fu_2575_p1 = $signed(tmp_385_2_fu_2567_p3);

assign tmp_385_2_fu_2567_p3 = {{reg_816}, {6'd0}};

assign tmp_385_3_cast_fu_3001_p1 = $signed(tmp_385_3_fu_2993_p3);

assign tmp_385_3_fu_2993_p3 = {{reg_820}, {6'd0}};

assign tmp_385_4_cast_fu_3457_p1 = $signed(tmp_385_4_fu_3449_p3);

assign tmp_385_4_fu_3449_p3 = {{reg_824}, {6'd0}};

assign tmp_385_5_cast_fu_3913_p1 = $signed(tmp_385_5_fu_3905_p3);

assign tmp_385_5_fu_3905_p3 = {{reg_828}, {6'd0}};

assign tmp_385_6_cast_fu_4369_p1 = $signed(tmp_385_6_fu_4361_p3);

assign tmp_385_6_fu_4361_p3 = {{reg_832}, {6'd0}};

assign tmp_385_7_cast_fu_4825_p1 = $signed(tmp_385_7_fu_4817_p3);

assign tmp_385_7_fu_4817_p3 = {{reg_836}, {6'd0}};

assign tmp_386_1_fu_2351_p1 = $signed(reg_792);

assign tmp_386_2_fu_2579_p1 = $signed(reg_792);

assign tmp_386_3_fu_3005_p1 = $signed(reg_792);

assign tmp_386_4_fu_3461_p1 = $signed(reg_792);

assign tmp_386_5_fu_3917_p1 = $signed(reg_792);

assign tmp_386_6_fu_4373_p1 = $signed(reg_792);

assign tmp_386_7_fu_4829_p1 = $signed(reg_792);

assign tmp_389_1_fu_2379_p1 = tmp_1548_reg_6475;

assign tmp_389_2_fu_2607_p1 = tmp_1558_reg_6562;

assign tmp_389_3_fu_3033_p1 = tmp_1568_reg_6696;

assign tmp_389_4_fu_3489_p1 = tmp_1578_reg_6870;

assign tmp_389_5_fu_3945_p1 = tmp_1588_reg_7024;

assign tmp_389_6_fu_4401_p1 = tmp_1598_reg_7178;

assign tmp_389_7_fu_4857_p1 = tmp_1608_reg_7332;

assign tmp_393_1_fu_2404_p2 = (tmp_1550_fu_2396_p3 ^ 1'd1);

assign tmp_393_2_fu_2632_p2 = (tmp_1560_fu_2624_p3 ^ 1'd1);

assign tmp_393_3_fu_3058_p2 = (tmp_1570_fu_3050_p3 ^ 1'd1);

assign tmp_393_4_fu_3514_p2 = (tmp_1580_fu_3506_p3 ^ 1'd1);

assign tmp_393_5_fu_3970_p2 = (tmp_1590_fu_3962_p3 ^ 1'd1);

assign tmp_393_6_fu_4426_p2 = (tmp_1600_fu_4418_p3 ^ 1'd1);

assign tmp_393_7_fu_4882_p2 = (tmp_1610_fu_4874_p3 ^ 1'd1);

assign tmp_396_1_fu_2466_p2 = (tmp_1551_fu_2454_p3 ^ 1'd1);

assign tmp_396_2_fu_2809_p2 = (tmp_1561_fu_2797_p3 ^ 1'd1);

assign tmp_396_3_fu_3265_p2 = (tmp_1571_fu_3253_p3 ^ 1'd1);

assign tmp_396_4_fu_3721_p2 = (tmp_1581_fu_3709_p3 ^ 1'd1);

assign tmp_396_5_fu_4177_p2 = (tmp_1591_fu_4165_p3 ^ 1'd1);

assign tmp_396_6_fu_4633_p2 = (tmp_1601_fu_4621_p3 ^ 1'd1);

assign tmp_396_7_fu_5089_p2 = (tmp_1611_fu_5077_p3 ^ 1'd1);

assign tmp_398_1_fu_2498_p2 = (tmp_1547_reg_6495 ^ 1'd1);

assign tmp_398_2_fu_2841_p2 = (tmp_1557_reg_6582 ^ 1'd1);

assign tmp_398_3_fu_3297_p2 = (tmp_1567_reg_6756 ^ 1'd1);

assign tmp_398_4_fu_3753_p2 = (tmp_1577_reg_6910 ^ 1'd1);

assign tmp_398_5_fu_4209_p2 = (tmp_1587_reg_7064 ^ 1'd1);

assign tmp_398_6_fu_4665_p2 = (tmp_1597_reg_7218 ^ 1'd1);

assign tmp_398_7_fu_5121_p2 = (tmp_1607_reg_7372 ^ 1'd1);

assign tmp_3_fu_1318_p2 = (10'd259 + co_cast_fu_1117_p1);

assign tmp_400_1_cast_fu_3146_p1 = $signed(tmp_400_1_fu_3138_p3);

assign tmp_400_1_fu_3138_p3 = {{reg_808}, {6'd0}};

assign tmp_400_2_cast_fu_3602_p1 = $signed(tmp_400_2_fu_3594_p3);

assign tmp_400_2_fu_3594_p3 = {{reg_816}, {6'd0}};

assign tmp_400_3_cast_fu_4058_p1 = $signed(tmp_400_3_fu_4050_p3);

assign tmp_400_3_fu_4050_p3 = {{reg_820}, {6'd0}};

assign tmp_400_4_cast_fu_4514_p1 = $signed(tmp_400_4_fu_4506_p3);

assign tmp_400_4_fu_4506_p3 = {{reg_824}, {6'd0}};

assign tmp_400_5_cast_fu_4970_p1 = $signed(tmp_400_5_fu_4962_p3);

assign tmp_400_5_fu_4962_p3 = {{reg_828}, {6'd0}};

assign tmp_400_6_cast_fu_5311_p1 = $signed(tmp_400_6_fu_5303_p3);

assign tmp_400_6_fu_5303_p3 = {{reg_832}, {6'd0}};

assign tmp_400_7_cast_fu_5539_p1 = $signed(tmp_400_7_fu_5531_p3);

assign tmp_400_7_fu_5531_p3 = {{reg_836}, {6'd0}};

assign tmp_401_1_fu_3150_p1 = $signed(reg_804);

assign tmp_401_2_fu_3606_p1 = $signed(reg_812);

assign tmp_401_3_fu_4062_p1 = $signed(reg_796);

assign tmp_401_4_fu_4518_p1 = $signed(reg_804);

assign tmp_401_5_fu_4974_p1 = $signed(reg_812);

assign tmp_401_6_fu_5315_p1 = $signed(reg_796);

assign tmp_401_7_fu_5543_p1 = $signed(reg_804);

assign tmp_404_1_fu_3178_p1 = tmp_1553_reg_6480;

assign tmp_404_2_fu_3634_p1 = tmp_1563_reg_6567;

assign tmp_404_3_fu_4090_p1 = tmp_1573_reg_6701;

assign tmp_404_4_fu_4546_p1 = tmp_1583_reg_6875;

assign tmp_404_5_fu_5002_p1 = tmp_1593_reg_7029;

assign tmp_404_6_fu_5343_p1 = tmp_1603_reg_7183;

assign tmp_404_7_fu_5571_p1 = tmp_1613_reg_7337;

assign tmp_408_1_fu_3203_p2 = (tmp_1555_fu_3195_p3 ^ 1'd1);

assign tmp_408_2_fu_3659_p2 = (tmp_1565_fu_3651_p3 ^ 1'd1);

assign tmp_408_3_fu_4115_p2 = (tmp_1575_fu_4107_p3 ^ 1'd1);

assign tmp_408_4_fu_4571_p2 = (tmp_1585_fu_4563_p3 ^ 1'd1);

assign tmp_408_5_fu_5027_p2 = (tmp_1595_fu_5019_p3 ^ 1'd1);

assign tmp_408_6_fu_5368_p2 = (tmp_1605_fu_5360_p3 ^ 1'd1);

assign tmp_408_7_fu_5596_p2 = (tmp_1615_fu_5588_p3 ^ 1'd1);

assign tmp_411_1_fu_3348_p2 = (tmp_1556_fu_3336_p3 ^ 1'd1);

assign tmp_411_2_fu_3804_p2 = (tmp_1566_fu_3792_p3 ^ 1'd1);

assign tmp_411_3_fu_4260_p2 = (tmp_1576_fu_4248_p3 ^ 1'd1);

assign tmp_411_4_fu_4716_p2 = (tmp_1586_fu_4704_p3 ^ 1'd1);

assign tmp_411_5_fu_5172_p2 = (tmp_1596_fu_5160_p3 ^ 1'd1);

assign tmp_411_6_fu_5430_p2 = (tmp_1606_fu_5418_p3 ^ 1'd1);

assign tmp_411_7_fu_5658_p2 = (tmp_1616_fu_5646_p3 ^ 1'd1);

assign tmp_413_1_fu_3380_p2 = (tmp_1552_reg_6803 ^ 1'd1);

assign tmp_413_2_fu_3836_p2 = (tmp_1562_reg_6957 ^ 1'd1);

assign tmp_413_3_fu_4292_p2 = (tmp_1572_reg_7111 ^ 1'd1);

assign tmp_413_4_fu_4748_p2 = (tmp_1582_reg_7265 ^ 1'd1);

assign tmp_413_5_fu_5204_p2 = (tmp_1592_reg_7419 ^ 1'd1);

assign tmp_413_6_fu_5462_p2 = (tmp_1602_reg_7516 ^ 1'd1);

assign tmp_413_7_fu_5690_p2 = (tmp_1612_reg_7588 ^ 1'd1);

assign tmp_4_fu_1334_p2 = (10'd260 + co_cast_fu_1117_p1);

assign tmp_535_fu_961_p3 = {{newIndex77_cast_mid2_reg_6032}, {2'd0}};

assign tmp_536_fu_934_p2 = (exitcond50_mid_fu_922_p2 | exitcond_flatten14_reg_6010);

assign tmp_537_fu_975_p2 = (tmp_1523_cast_fu_968_p1 + j_cast_mid2_cast_fu_972_p1);

assign tmp_538_fu_992_p2 = (tmp_1527_cast_fu_981_p3 + k_cast_cast_fu_989_p1);

assign tmp_539_fu_5875_p3 = {{newIndex78_cast_mid2_reg_7680}, {2'd0}};

assign tmp_540_fu_5831_p2 = (exitcond_mid_fu_5825_p2 | exitcond_flatten16_fu_5777_p2);

assign tmp_541_fu_5889_p2 = (tmp_1530_cast_fu_5882_p1 + j_1_cast_mid2_cast_fu_5886_p1);

assign tmp_542_fu_5906_p2 = (tmp_1534_cast_fu_5895_p3 + k_1_cast_cast_fu_5903_p1);

assign tmp_543_fu_1070_p3 = {{ci_reg_674}, {2'd0}};

assign tmp_544_fu_1082_p2 = (h_cast_cast_reg_6079 + tmp_1537_cast_fu_1078_p1);

assign tmp_545_fu_1095_p2 = (w_cast_cast_reg_6106 + tmp_1540_cast_fu_1087_p3);

assign tmp_546_fu_1137_p3 = {{newIndex1_fu_1127_p4}, {8'd0}};

assign tmp_547_fu_1149_p3 = {{newIndex1_fu_1127_p4}, {6'd0}};

assign tmp_548_fu_1161_p2 = (p_shl38_cast_fu_1145_p1 - p_shl39_cast_fu_1157_p1);

assign tmp_549_fu_1171_p2 = ($signed(tmp_1545_cast_fu_1167_p1) + $signed(ci_cast_cast_reg_6135));

assign tmp_550_fu_1191_p3 = {{newIndex1_fu_1127_p4}, {2'd0}};

assign tmp_551_fu_1203_p2 = (tmp_1548_cast_fu_1199_p1 + h_cast_cast3_reg_6074);

assign tmp_552_fu_1863_p2 = (tmp_1551_cast_fu_1859_p1 + w_cast_cast1_reg_6093);

assign tmp_553_fu_1238_p2 = (p_shl36_cast_fu_1222_p1 - p_shl37_cast_fu_1234_p1);

assign tmp_554_fu_1248_p2 = ($signed(tmp_1555_cast_fu_1244_p1) + $signed(ci_cast_cast2_reg_6130));

assign tmp_555_fu_1265_p2 = (tmp_1558_cast_fu_1261_p1 + h_cast_cast2_reg_6069);

assign tmp_556_fu_1276_p2 = (tmp_1536_fu_1270_p2 + w_cast_cast1_reg_6093);

assign tmp_557_fu_1488_p3 = {{newIndex3_reg_6188}, {8'd0}};

assign tmp_558_fu_1499_p3 = {{newIndex3_reg_6188}, {6'd0}};

assign tmp_559_fu_1510_p2 = (p_shl34_cast_fu_1495_p1 - p_shl35_cast_fu_1506_p1);

assign tmp_560_fu_1520_p2 = ($signed(tmp_1565_cast_fu_1516_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_561_fu_1873_p3 = {{newIndex3_reg_6188}, {2'd0}};

assign tmp_562_fu_1884_p2 = (tmp_1568_cast_fu_1880_p1 + h_cast_cast1_reg_6058);

assign tmp_563_fu_1897_p2 = (tmp_1571_cast_fu_1889_p3 + w_cast_cast1_reg_6093);

assign tmp_564_fu_1540_p3 = {{newIndex4_reg_6195}, {8'd0}};

assign tmp_565_fu_1551_p3 = {{newIndex4_reg_6195}, {6'd0}};

assign tmp_566_fu_1562_p2 = (p_shl32_cast_fu_1547_p1 - p_shl33_cast_fu_1558_p1);

assign tmp_567_fu_1572_p2 = ($signed(tmp_1575_cast_fu_1568_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_568_fu_1907_p3 = {{newIndex4_reg_6195}, {2'd0}};

assign tmp_569_fu_1918_p2 = (tmp_1578_cast_fu_1914_p1 + h_cast_cast1_reg_6058);

assign tmp_570_fu_1931_p2 = (tmp_1581_cast_fu_1923_p3 + w_cast_cast1_reg_6093);

assign tmp_571_fu_1592_p3 = {{newIndex5_reg_6202}, {8'd0}};

assign tmp_572_fu_1603_p3 = {{newIndex5_reg_6202}, {6'd0}};

assign tmp_573_fu_1614_p2 = (p_shl30_cast_fu_1599_p1 - p_shl31_cast_fu_1610_p1);

assign tmp_574_fu_1624_p2 = ($signed(tmp_1585_cast_fu_1620_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_575_fu_1941_p3 = {{newIndex5_reg_6202}, {2'd0}};

assign tmp_576_fu_1952_p2 = (tmp_1588_cast_fu_1948_p1 + h_cast_cast1_reg_6058);

assign tmp_577_fu_1965_p2 = (tmp_1591_cast_fu_1957_p3 + w_cast_cast1_reg_6093);

assign tmp_578_fu_1644_p3 = {{newIndex6_reg_6209}, {8'd0}};

assign tmp_579_fu_1655_p3 = {{newIndex6_reg_6209}, {6'd0}};

assign tmp_580_fu_1666_p2 = (p_shl28_cast_fu_1651_p1 - p_shl29_cast_fu_1662_p1);

assign tmp_581_fu_1676_p2 = ($signed(tmp_1595_cast_fu_1672_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_582_fu_1975_p3 = {{newIndex6_reg_6209}, {2'd0}};

assign tmp_583_fu_1986_p2 = (tmp_1598_cast_fu_1982_p1 + h_cast_cast1_reg_6058);

assign tmp_584_fu_1999_p2 = (tmp_1601_cast_fu_1991_p3 + w_cast_cast1_reg_6093);

assign tmp_585_fu_1696_p3 = {{newIndex7_reg_6216}, {8'd0}};

assign tmp_586_fu_1707_p3 = {{newIndex7_reg_6216}, {6'd0}};

assign tmp_587_fu_1718_p2 = (p_shl26_cast_fu_1703_p1 - p_shl27_cast_fu_1714_p1);

assign tmp_588_fu_1728_p2 = ($signed(tmp_1605_cast_fu_1724_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_589_fu_2009_p3 = {{newIndex7_reg_6216}, {2'd0}};

assign tmp_590_fu_2020_p2 = (tmp_1608_cast_fu_2016_p1 + h_cast_cast1_reg_6058);

assign tmp_591_fu_2033_p2 = (tmp_1611_cast_fu_2025_p3 + w_cast_cast1_reg_6093);

assign tmp_592_fu_1748_p3 = {{newIndex8_reg_6223}, {8'd0}};

assign tmp_593_fu_1759_p3 = {{newIndex8_reg_6223}, {6'd0}};

assign tmp_594_fu_1770_p2 = (p_shl24_cast_fu_1755_p1 - p_shl25_cast_fu_1766_p1);

assign tmp_595_fu_1780_p2 = ($signed(tmp_1615_cast_fu_1776_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_596_fu_2043_p3 = {{newIndex8_reg_6223}, {2'd0}};

assign tmp_597_fu_2054_p2 = (tmp_1618_cast_fu_2050_p1 + h_cast_cast1_reg_6058);

assign tmp_598_fu_2067_p2 = (tmp_1621_cast_fu_2059_p3 + w_cast_cast1_reg_6093);

assign tmp_599_fu_1800_p3 = {{newIndex_reg_6230}, {8'd0}};

assign tmp_5_fu_1350_p2 = (10'd261 + co_cast_fu_1117_p1);

assign tmp_600_fu_1811_p3 = {{newIndex_reg_6230}, {6'd0}};

assign tmp_601_fu_1822_p2 = (p_shl_cast_fu_1807_p1 - p_shl23_cast_fu_1818_p1);

assign tmp_602_fu_1832_p2 = ($signed(tmp_1625_cast_fu_1828_p1) + $signed(ci_cast_cast1_reg_6119));

assign tmp_603_fu_2077_p3 = {{newIndex_reg_6230}, {2'd0}};

assign tmp_604_fu_2088_p2 = (tmp_1628_cast_fu_2084_p1 + h_cast_cast1_reg_6058);

assign tmp_605_fu_2101_p2 = (tmp_1631_cast_fu_2093_p3 + w_cast_cast1_reg_6093);

assign tmp_6_fu_1366_p2 = (10'd262 + co_cast_fu_1117_p1);

assign tmp_7_fu_1382_p2 = (10'd263 + co_cast_fu_1117_p1);

assign tmp_fu_897_p1 = i_cast_mid2_v_fu_885_p3[2:0];

assign tmp_s_fu_2111_p3 = {{reg_800}, {6'd0}};

assign underflow_18_1_fu_3408_p2 = (tmp_1552_reg_6803 & tmp7_fu_3402_p2);

assign underflow_18_2_fu_3864_p2 = (tmp_1562_reg_6957 & tmp11_fu_3858_p2);

assign underflow_18_3_fu_4320_p2 = (tmp_1572_reg_7111 & tmp15_fu_4314_p2);

assign underflow_18_4_fu_4776_p2 = (tmp_1582_reg_7265 & tmp19_fu_4770_p2);

assign underflow_18_5_fu_5232_p2 = (tmp_1592_reg_7419 & tmp23_fu_5226_p2);

assign underflow_18_6_fu_5490_p2 = (tmp_1602_reg_7516 & tmp27_fu_5484_p2);

assign underflow_18_7_fu_5718_p2 = (tmp_1612_reg_7588 & tmp31_fu_5712_p2);

assign underflow_18_fu_2952_p2 = (tmp_1542_reg_6629 & tmp3_fu_2946_p2);

assign underflow_18_not_1_fu_3568_p2 = (tmp8_fu_3564_p2 | p_38_i_i_1_reg_6880);

assign underflow_18_not_2_fu_4024_p2 = (tmp12_fu_4020_p2 | p_38_i_i_2_reg_7034);

assign underflow_18_not_3_fu_4480_p2 = (tmp16_fu_4476_p2 | p_38_i_i_3_reg_7188);

assign underflow_18_not_4_fu_4936_p2 = (tmp20_fu_4932_p2 | p_38_i_i_4_reg_7342);

assign underflow_18_not_5_fu_5277_p2 = (tmp24_fu_5273_p2 | p_38_i_i_5_reg_7486);

assign underflow_18_not_6_fu_5505_p2 = (tmp28_fu_5501_p2 | p_38_i_i_6_reg_7558);

assign underflow_18_not_7_fu_5733_p2 = (tmp32_fu_5729_p2 | p_38_i_i_7_reg_7630);

assign underflow_18_not_fu_3112_p2 = (tmp4_fu_3108_p2 | p_38_i_i_reg_6726);

assign underflow_1_fu_2526_p2 = (tmp_1547_reg_6495 & tmp5_fu_2520_p2);

assign underflow_2_fu_2869_p2 = (tmp_1557_reg_6582 & tmp9_fu_2863_p2);

assign underflow_3_fu_3325_p2 = (tmp_1567_reg_6756 & tmp13_fu_3319_p2);

assign underflow_4_fu_3781_p2 = (tmp_1577_reg_6910 & tmp17_fu_3775_p2);

assign underflow_5_fu_4237_p2 = (tmp_1587_reg_7064 & tmp21_fu_4231_p2);

assign underflow_6_fu_4693_p2 = (tmp_1597_reg_7218 & tmp25_fu_4687_p2);

assign underflow_7_fu_5149_p2 = (tmp_1607_reg_7372 & tmp29_fu_5143_p2);

assign underflow_fu_2298_p2 = (tmp_1537_reg_6408 & tmp1_fu_2292_p2);

assign underflow_not_1_fu_2541_p2 = (tmp6_fu_2537_p2 | p_38_i_i9_1_reg_6537);

assign underflow_not_2_fu_2967_p2 = (tmp10_fu_2963_p2 | p_38_i_i9_2_reg_6671);

assign underflow_not_3_fu_3423_p2 = (tmp14_fu_3419_p2 | p_38_i_i9_3_reg_6845);

assign underflow_not_4_fu_3879_p2 = (tmp18_fu_3875_p2 | p_38_i_i9_4_reg_6999);

assign underflow_not_5_fu_4335_p2 = (tmp22_fu_4331_p2 | p_38_i_i9_5_reg_7153);

assign underflow_not_6_fu_4791_p2 = (tmp26_fu_4787_p2 | p_38_i_i9_6_reg_7307);

assign underflow_not_7_fu_5247_p2 = (tmp30_fu_5243_p2 | p_38_i_i9_7_reg_7461);

assign underflow_not_fu_2313_p2 = (tmp2_fu_2309_p2 | p_38_i_i9_reg_6450);

assign w_35_fu_1052_p2 = (w_reg_663 + 3'd1);

assign w_cast_cast1_fu_1038_p1 = w_reg_663;

assign w_cast_cast_fu_1042_p1 = w_reg_663;

always @ (posedge ap_clk) begin
    h_cast_cast1_reg_6058[9:3] <= 7'b0000000;
    h_cast_cast2_reg_6069[11:3] <= 9'b000000000;
    h_cast_cast3_reg_6074[8:3] <= 6'b000000;
    h_cast_cast_reg_6079[10:3] <= 8'b00000000;
    w_cast_cast1_reg_6093[11:3] <= 9'b000000000;
    w_cast_cast_reg_6106[12:3] <= 10'b0000000000;
    ci_cast_cast1_reg_6119[16:8] <= 9'b000000000;
    ci_cast_cast2_reg_6130[18:8] <= 11'b00000000000;
    ci_cast_cast_reg_6135[15:8] <= 8'b00000000;
    tmp_1552_cast_reg_6337[31:12] <= 20'b00000000000000000000;
end

endmodule //conv_last
