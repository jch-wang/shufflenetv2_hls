// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_48_p_HH_
#define _shuffle_48_p_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_uremtde.h"
#include "ShuffleNetV2_mux_udo.h"

namespace ap_rtl {

struct shuffle_48_p : public sc_module {
    // Port declarations 85
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_in< sc_lv<8> > left_V_q0;
    sc_out< sc_lv<14> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<8> > output_V_d0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_24_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_24_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_24_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_1_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_1_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_1_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_2_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_2_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_2_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_3_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_3_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_3_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_4_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_4_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_4_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_5_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_5_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_5_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_6_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_6_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_6_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_7_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_7_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_7_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_8_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_8_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_8_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_9_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_9_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_9_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_10_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_10_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_10_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_11_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_11_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_11_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_12_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_12_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_12_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_13_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_13_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_13_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_14_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_14_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_14_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_15_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_15_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_15_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_16_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_16_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_16_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_17_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_17_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_17_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_18_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_18_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_18_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_19_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_19_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_19_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_20_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_20_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_20_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_21_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_21_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_21_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_22_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_22_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_22_q0;
    sc_out< sc_lv<8> > buffer1_1_48_8x8_p_V_23_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_23_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_23_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<6> > ap_var_for_const0;


    // Module declarations
    shuffle_48_p(sc_module_name name);
    SC_HAS_PROCESS(shuffle_48_p);

    ~shuffle_48_p();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_uremtde<1,10,6,6,6>* ShuffleNetV2_uremtde_x_U511;
    ShuffleNetV2_mux_udo<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8>* ShuffleNetV2_mux_udo_x_U512;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_1496_fu_470_p1;
    sc_signal< sc_lv<1> > tmp_1496_reg_876;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp_474_fu_498_p2;
    sc_signal< sc_lv<11> > tmp_474_reg_880;
    sc_signal< sc_lv<7> > co_27_fu_510_p2;
    sc_signal< sc_lv<7> > co_27_reg_888;
    sc_signal< sc_lv<6> > p_lshr_f_cast_reg_893;
    sc_signal< sc_lv<1> > exitcond5_fu_504_p2;
    sc_signal< sc_lv<10> > tmp_477_fu_554_p2;
    sc_signal< sc_lv<10> > tmp_477_reg_901;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > arrayNo_cast_fu_560_p1;
    sc_signal< sc_lv<8> > arrayNo_cast_reg_906;
    sc_signal< sc_lv<10> > tmp_480_fu_615_p2;
    sc_signal< sc_lv<10> > tmp_480_reg_911;
    sc_signal< sc_lv<14> > tmp_482_fu_658_p2;
    sc_signal< sc_lv<14> > tmp_482_reg_916;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<15> > tmp_484_fu_693_p2;
    sc_signal< sc_lv<15> > tmp_484_reg_921;
    sc_signal< sc_lv<9> > tmp_486_fu_728_p2;
    sc_signal< sc_lv<9> > tmp_486_reg_926;
    sc_signal< sc_lv<4> > h_24_fu_740_p2;
    sc_signal< sc_lv<4> > h_24_reg_934;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<14> > output_V_addr_reg_944;
    sc_signal< sc_lv<4> > w_30_fu_817_p2;
    sc_signal< sc_lv<4> > w_30_reg_1072;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > tmp_fu_823_p26;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<7> > co_reg_427;
    sc_signal< sc_lv<1> > exitcond4_fu_734_p2;
    sc_signal< sc_lv<4> > h_reg_438;
    sc_signal< sc_lv<1> > exitcond_fu_811_p2;
    sc_signal< sc_lv<4> > w_reg_449;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > storemerge_reg_460;
    sc_signal< sc_lv<32> > tmp_1452_cast_fu_763_p1;
    sc_signal< sc_lv<32> > tmp_1453_cast_fu_773_p1;
    sc_signal< sc_lv<32> > tmp_1454_cast_fu_783_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_474_p3;
    sc_signal< sc_lv<8> > tmp_473_fu_486_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_482_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_494_p1;
    sc_signal< sc_lv<6> > grp_fu_526_p0;
    sc_signal< sc_lv<9> > tmp_475_fu_532_p3;
    sc_signal< sc_lv<7> > tmp_476_fu_543_p3;
    sc_signal< sc_lv<10> > p_shl5_cast_fu_550_p1;
    sc_signal< sc_lv<10> > p_shl4_cast_fu_539_p1;
    sc_signal< sc_lv<6> > grp_fu_526_p2;
    sc_signal< sc_lv<6> > mul_fu_567_p0;
    sc_signal< sc_lv<14> > mul_fu_567_p2;
    sc_signal< sc_lv<3> > tmp_1497_fu_573_p4;
    sc_signal< sc_lv<6> > tmp_1498_fu_583_p3;
    sc_signal< sc_lv<9> > tmp_478_fu_591_p1;
    sc_signal< sc_lv<4> > tmp_1499_fu_599_p3;
    sc_signal< sc_lv<7> > tmp_479_fu_607_p1;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_611_p1;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_595_p1;
    sc_signal< sc_lv<10> > h_cast2_cast_fu_625_p1;
    sc_signal< sc_lv<10> > tmp_481_fu_629_p2;
    sc_signal< sc_lv<13> > tmp_1500_fu_634_p3;
    sc_signal< sc_lv<11> > tmp_1501_fu_646_p3;
    sc_signal< sc_lv<14> > p_shl11_cast_fu_654_p1;
    sc_signal< sc_lv<14> > p_shl10_cast_fu_642_p1;
    sc_signal< sc_lv<11> > h_cast2_cast2_fu_621_p1;
    sc_signal< sc_lv<11> > tmp_483_fu_664_p2;
    sc_signal< sc_lv<14> > tmp_1502_fu_669_p3;
    sc_signal< sc_lv<12> > tmp_1503_fu_681_p3;
    sc_signal< sc_lv<15> > p_shl9_cast_fu_689_p1;
    sc_signal< sc_lv<15> > p_shl8_cast_fu_677_p1;
    sc_signal< sc_lv<10> > tmp_485_fu_699_p2;
    sc_signal< sc_lv<6> > tmp_1504_fu_704_p1;
    sc_signal< sc_lv<8> > tmp_1505_fu_716_p1;
    sc_signal< sc_lv<9> > p_shl7_cast_fu_720_p3;
    sc_signal< sc_lv<9> > p_shl6_cast_fu_708_p3;
    sc_signal< sc_lv<14> > w_cast1_cast_fu_754_p1;
    sc_signal< sc_lv<14> > tmp_487_fu_758_p2;
    sc_signal< sc_lv<15> > w_cast1_cast4_fu_750_p1;
    sc_signal< sc_lv<15> > tmp_488_fu_768_p2;
    sc_signal< sc_lv<9> > w_cast1_cast3_fu_746_p1;
    sc_signal< sc_lv<9> > tmp_489_fu_778_p2;
    sc_signal< sc_logic > grp_fu_526_ap_start;
    sc_signal< sc_logic > grp_fu_526_ap_done;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< sc_lv<14> > mul_fu_567_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_18;
    static const sc_lv<14> ap_const_lv14_56;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_arrayNo_cast_fu_560_p1();
    void thread_buffer1_1_48_8x8_p_V_10_address0();
    void thread_buffer1_1_48_8x8_p_V_10_ce0();
    void thread_buffer1_1_48_8x8_p_V_11_address0();
    void thread_buffer1_1_48_8x8_p_V_11_ce0();
    void thread_buffer1_1_48_8x8_p_V_12_address0();
    void thread_buffer1_1_48_8x8_p_V_12_ce0();
    void thread_buffer1_1_48_8x8_p_V_13_address0();
    void thread_buffer1_1_48_8x8_p_V_13_ce0();
    void thread_buffer1_1_48_8x8_p_V_14_address0();
    void thread_buffer1_1_48_8x8_p_V_14_ce0();
    void thread_buffer1_1_48_8x8_p_V_15_address0();
    void thread_buffer1_1_48_8x8_p_V_15_ce0();
    void thread_buffer1_1_48_8x8_p_V_16_address0();
    void thread_buffer1_1_48_8x8_p_V_16_ce0();
    void thread_buffer1_1_48_8x8_p_V_17_address0();
    void thread_buffer1_1_48_8x8_p_V_17_ce0();
    void thread_buffer1_1_48_8x8_p_V_18_address0();
    void thread_buffer1_1_48_8x8_p_V_18_ce0();
    void thread_buffer1_1_48_8x8_p_V_19_address0();
    void thread_buffer1_1_48_8x8_p_V_19_ce0();
    void thread_buffer1_1_48_8x8_p_V_1_address0();
    void thread_buffer1_1_48_8x8_p_V_1_ce0();
    void thread_buffer1_1_48_8x8_p_V_20_address0();
    void thread_buffer1_1_48_8x8_p_V_20_ce0();
    void thread_buffer1_1_48_8x8_p_V_21_address0();
    void thread_buffer1_1_48_8x8_p_V_21_ce0();
    void thread_buffer1_1_48_8x8_p_V_22_address0();
    void thread_buffer1_1_48_8x8_p_V_22_ce0();
    void thread_buffer1_1_48_8x8_p_V_23_address0();
    void thread_buffer1_1_48_8x8_p_V_23_ce0();
    void thread_buffer1_1_48_8x8_p_V_24_address0();
    void thread_buffer1_1_48_8x8_p_V_24_ce0();
    void thread_buffer1_1_48_8x8_p_V_2_address0();
    void thread_buffer1_1_48_8x8_p_V_2_ce0();
    void thread_buffer1_1_48_8x8_p_V_3_address0();
    void thread_buffer1_1_48_8x8_p_V_3_ce0();
    void thread_buffer1_1_48_8x8_p_V_4_address0();
    void thread_buffer1_1_48_8x8_p_V_4_ce0();
    void thread_buffer1_1_48_8x8_p_V_5_address0();
    void thread_buffer1_1_48_8x8_p_V_5_ce0();
    void thread_buffer1_1_48_8x8_p_V_6_address0();
    void thread_buffer1_1_48_8x8_p_V_6_ce0();
    void thread_buffer1_1_48_8x8_p_V_7_address0();
    void thread_buffer1_1_48_8x8_p_V_7_ce0();
    void thread_buffer1_1_48_8x8_p_V_8_address0();
    void thread_buffer1_1_48_8x8_p_V_8_ce0();
    void thread_buffer1_1_48_8x8_p_V_9_address0();
    void thread_buffer1_1_48_8x8_p_V_9_ce0();
    void thread_co_27_fu_510_p2();
    void thread_exitcond4_fu_734_p2();
    void thread_exitcond5_fu_504_p2();
    void thread_exitcond_fu_811_p2();
    void thread_grp_fu_526_ap_start();
    void thread_grp_fu_526_p0();
    void thread_h_24_fu_740_p2();
    void thread_h_cast2_cast2_fu_621_p1();
    void thread_h_cast2_cast_fu_625_p1();
    void thread_left_V_address0();
    void thread_left_V_ce0();
    void thread_mul_fu_567_p0();
    void thread_mul_fu_567_p00();
    void thread_mul_fu_567_p2();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl10_cast_fu_642_p1();
    void thread_p_shl11_cast_fu_654_p1();
    void thread_p_shl1_cast_fu_494_p1();
    void thread_p_shl2_cast_fu_595_p1();
    void thread_p_shl3_cast_fu_611_p1();
    void thread_p_shl4_cast_fu_539_p1();
    void thread_p_shl5_cast_fu_550_p1();
    void thread_p_shl6_cast_fu_708_p3();
    void thread_p_shl7_cast_fu_720_p3();
    void thread_p_shl8_cast_fu_677_p1();
    void thread_p_shl9_cast_fu_689_p1();
    void thread_p_shl_cast_fu_482_p1();
    void thread_tmp_1452_cast_fu_763_p1();
    void thread_tmp_1453_cast_fu_773_p1();
    void thread_tmp_1454_cast_fu_783_p1();
    void thread_tmp_1496_fu_470_p1();
    void thread_tmp_1497_fu_573_p4();
    void thread_tmp_1498_fu_583_p3();
    void thread_tmp_1499_fu_599_p3();
    void thread_tmp_1500_fu_634_p3();
    void thread_tmp_1501_fu_646_p3();
    void thread_tmp_1502_fu_669_p3();
    void thread_tmp_1503_fu_681_p3();
    void thread_tmp_1504_fu_704_p1();
    void thread_tmp_1505_fu_716_p1();
    void thread_tmp_473_fu_486_p3();
    void thread_tmp_474_fu_498_p2();
    void thread_tmp_475_fu_532_p3();
    void thread_tmp_476_fu_543_p3();
    void thread_tmp_477_fu_554_p2();
    void thread_tmp_478_fu_591_p1();
    void thread_tmp_479_fu_607_p1();
    void thread_tmp_480_fu_615_p2();
    void thread_tmp_481_fu_629_p2();
    void thread_tmp_482_fu_658_p2();
    void thread_tmp_483_fu_664_p2();
    void thread_tmp_484_fu_693_p2();
    void thread_tmp_485_fu_699_p2();
    void thread_tmp_486_fu_728_p2();
    void thread_tmp_487_fu_758_p2();
    void thread_tmp_488_fu_768_p2();
    void thread_tmp_489_fu_778_p2();
    void thread_tmp_s_fu_474_p3();
    void thread_w_30_fu_817_p2();
    void thread_w_cast1_cast3_fu_746_p1();
    void thread_w_cast1_cast4_fu_750_p1();
    void thread_w_cast1_cast_fu_754_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
