// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_last (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        m_axi_weight_V_AWVALID,
        m_axi_weight_V_AWREADY,
        m_axi_weight_V_AWADDR,
        m_axi_weight_V_AWID,
        m_axi_weight_V_AWLEN,
        m_axi_weight_V_AWSIZE,
        m_axi_weight_V_AWBURST,
        m_axi_weight_V_AWLOCK,
        m_axi_weight_V_AWCACHE,
        m_axi_weight_V_AWPROT,
        m_axi_weight_V_AWQOS,
        m_axi_weight_V_AWREGION,
        m_axi_weight_V_AWUSER,
        m_axi_weight_V_WVALID,
        m_axi_weight_V_WREADY,
        m_axi_weight_V_WDATA,
        m_axi_weight_V_WSTRB,
        m_axi_weight_V_WLAST,
        m_axi_weight_V_WID,
        m_axi_weight_V_WUSER,
        m_axi_weight_V_ARVALID,
        m_axi_weight_V_ARREADY,
        m_axi_weight_V_ARADDR,
        m_axi_weight_V_ARID,
        m_axi_weight_V_ARLEN,
        m_axi_weight_V_ARSIZE,
        m_axi_weight_V_ARBURST,
        m_axi_weight_V_ARLOCK,
        m_axi_weight_V_ARCACHE,
        m_axi_weight_V_ARPROT,
        m_axi_weight_V_ARQOS,
        m_axi_weight_V_ARREGION,
        m_axi_weight_V_ARUSER,
        m_axi_weight_V_RVALID,
        m_axi_weight_V_RREADY,
        m_axi_weight_V_RDATA,
        m_axi_weight_V_RLAST,
        m_axi_weight_V_RID,
        m_axi_weight_V_RUSER,
        m_axi_weight_V_RRESP,
        m_axi_weight_V_BVALID,
        m_axi_weight_V_BREADY,
        m_axi_weight_V_BRESP,
        m_axi_weight_V_BID,
        m_axi_weight_V_BUSER,
        conv_last_weight_V9,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv_last_output_V_0_address0,
        conv_last_output_V_0_ce0,
        conv_last_output_V_0_we0,
        conv_last_output_V_0_d0,
        conv_last_output_V_0_q0,
        conv_last_output_V_1_address0,
        conv_last_output_V_1_ce0,
        conv_last_output_V_1_we0,
        conv_last_output_V_1_d0,
        conv_last_output_V_1_q0,
        conv_last_output_V_2_address0,
        conv_last_output_V_2_ce0,
        conv_last_output_V_2_we0,
        conv_last_output_V_2_d0,
        conv_last_output_V_2_q0,
        conv_last_output_V_3_address0,
        conv_last_output_V_3_ce0,
        conv_last_output_V_3_we0,
        conv_last_output_V_3_d0,
        conv_last_output_V_3_q0,
        conv_last_output_V_4_address0,
        conv_last_output_V_4_ce0,
        conv_last_output_V_4_we0,
        conv_last_output_V_4_d0,
        conv_last_output_V_4_q0,
        conv_last_output_V_5_address0,
        conv_last_output_V_5_ce0,
        conv_last_output_V_5_we0,
        conv_last_output_V_5_d0,
        conv_last_output_V_5_q0,
        conv_last_output_V_6_address0,
        conv_last_output_V_6_ce0,
        conv_last_output_V_6_we0,
        conv_last_output_V_6_d0,
        conv_last_output_V_6_q0,
        conv_last_output_V_7_address0,
        conv_last_output_V_7_ce0,
        conv_last_output_V_7_we0,
        conv_last_output_V_7_d0,
        conv_last_output_V_7_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_state13 = 17'd4;
parameter    ap_ST_fsm_pp1_stage0 = 17'd8;
parameter    ap_ST_fsm_state17 = 17'd16;
parameter    ap_ST_fsm_state18 = 17'd32;
parameter    ap_ST_fsm_state19 = 17'd64;
parameter    ap_ST_fsm_state20 = 17'd128;
parameter    ap_ST_fsm_state21 = 17'd256;
parameter    ap_ST_fsm_state22 = 17'd512;
parameter    ap_ST_fsm_state23 = 17'd1024;
parameter    ap_ST_fsm_state24 = 17'd2048;
parameter    ap_ST_fsm_state25 = 17'd4096;
parameter    ap_ST_fsm_state26 = 17'd8192;
parameter    ap_ST_fsm_pp2_stage0 = 17'd16384;
parameter    ap_ST_fsm_pp2_stage1 = 17'd32768;
parameter    ap_ST_fsm_state31 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output   m_axi_weight_V_AWVALID;
input   m_axi_weight_V_AWREADY;
output  [31:0] m_axi_weight_V_AWADDR;
output  [0:0] m_axi_weight_V_AWID;
output  [31:0] m_axi_weight_V_AWLEN;
output  [2:0] m_axi_weight_V_AWSIZE;
output  [1:0] m_axi_weight_V_AWBURST;
output  [1:0] m_axi_weight_V_AWLOCK;
output  [3:0] m_axi_weight_V_AWCACHE;
output  [2:0] m_axi_weight_V_AWPROT;
output  [3:0] m_axi_weight_V_AWQOS;
output  [3:0] m_axi_weight_V_AWREGION;
output  [0:0] m_axi_weight_V_AWUSER;
output   m_axi_weight_V_WVALID;
input   m_axi_weight_V_WREADY;
output  [7:0] m_axi_weight_V_WDATA;
output  [0:0] m_axi_weight_V_WSTRB;
output   m_axi_weight_V_WLAST;
output  [0:0] m_axi_weight_V_WID;
output  [0:0] m_axi_weight_V_WUSER;
output   m_axi_weight_V_ARVALID;
input   m_axi_weight_V_ARREADY;
output  [31:0] m_axi_weight_V_ARADDR;
output  [0:0] m_axi_weight_V_ARID;
output  [31:0] m_axi_weight_V_ARLEN;
output  [2:0] m_axi_weight_V_ARSIZE;
output  [1:0] m_axi_weight_V_ARBURST;
output  [1:0] m_axi_weight_V_ARLOCK;
output  [3:0] m_axi_weight_V_ARCACHE;
output  [2:0] m_axi_weight_V_ARPROT;
output  [3:0] m_axi_weight_V_ARQOS;
output  [3:0] m_axi_weight_V_ARREGION;
output  [0:0] m_axi_weight_V_ARUSER;
input   m_axi_weight_V_RVALID;
output   m_axi_weight_V_RREADY;
input  [7:0] m_axi_weight_V_RDATA;
input   m_axi_weight_V_RLAST;
input  [0:0] m_axi_weight_V_RID;
input  [0:0] m_axi_weight_V_RUSER;
input  [1:0] m_axi_weight_V_RRESP;
input   m_axi_weight_V_BVALID;
output   m_axi_weight_V_BREADY;
input  [1:0] m_axi_weight_V_BRESP;
input  [0:0] m_axi_weight_V_BID;
input  [0:0] m_axi_weight_V_BUSER;
input  [31:0] conv_last_weight_V9;
output  [8:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [9:0] conv_last_output_V_0_address0;
output   conv_last_output_V_0_ce0;
output   conv_last_output_V_0_we0;
output  [7:0] conv_last_output_V_0_d0;
input  [7:0] conv_last_output_V_0_q0;
output  [9:0] conv_last_output_V_1_address0;
output   conv_last_output_V_1_ce0;
output   conv_last_output_V_1_we0;
output  [7:0] conv_last_output_V_1_d0;
input  [7:0] conv_last_output_V_1_q0;
output  [9:0] conv_last_output_V_2_address0;
output   conv_last_output_V_2_ce0;
output   conv_last_output_V_2_we0;
output  [7:0] conv_last_output_V_2_d0;
input  [7:0] conv_last_output_V_2_q0;
output  [9:0] conv_last_output_V_3_address0;
output   conv_last_output_V_3_ce0;
output   conv_last_output_V_3_we0;
output  [7:0] conv_last_output_V_3_d0;
input  [7:0] conv_last_output_V_3_q0;
output  [9:0] conv_last_output_V_4_address0;
output   conv_last_output_V_4_ce0;
output   conv_last_output_V_4_we0;
output  [7:0] conv_last_output_V_4_d0;
input  [7:0] conv_last_output_V_4_q0;
output  [9:0] conv_last_output_V_5_address0;
output   conv_last_output_V_5_ce0;
output   conv_last_output_V_5_we0;
output  [7:0] conv_last_output_V_5_d0;
input  [7:0] conv_last_output_V_5_q0;
output  [9:0] conv_last_output_V_6_address0;
output   conv_last_output_V_6_ce0;
output   conv_last_output_V_6_we0;
output  [7:0] conv_last_output_V_6_d0;
input  [7:0] conv_last_output_V_6_q0;
output  [9:0] conv_last_output_V_7_address0;
output   conv_last_output_V_7_ce0;
output   conv_last_output_V_7_we0;
output  [7:0] conv_last_output_V_7_d0;
input  [7:0] conv_last_output_V_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg m_axi_weight_V_ARVALID;
reg m_axi_weight_V_RREADY;
reg bias_V_ce0;
reg[9:0] conv_last_output_V_0_address0;
reg conv_last_output_V_0_ce0;
reg conv_last_output_V_0_we0;
reg[7:0] conv_last_output_V_0_d0;
reg[9:0] conv_last_output_V_1_address0;
reg conv_last_output_V_1_ce0;
reg conv_last_output_V_1_we0;
reg[7:0] conv_last_output_V_1_d0;
reg[9:0] conv_last_output_V_2_address0;
reg conv_last_output_V_2_ce0;
reg conv_last_output_V_2_we0;
reg[7:0] conv_last_output_V_2_d0;
reg[9:0] conv_last_output_V_3_address0;
reg conv_last_output_V_3_ce0;
reg conv_last_output_V_3_we0;
reg[7:0] conv_last_output_V_3_d0;
reg[9:0] conv_last_output_V_4_address0;
reg conv_last_output_V_4_ce0;
reg conv_last_output_V_4_we0;
reg[7:0] conv_last_output_V_4_d0;
reg[9:0] conv_last_output_V_5_address0;
reg conv_last_output_V_5_ce0;
reg conv_last_output_V_5_we0;
reg[7:0] conv_last_output_V_5_d0;
reg[9:0] conv_last_output_V_6_address0;
reg conv_last_output_V_6_ce0;
reg conv_last_output_V_6_we0;
reg[7:0] conv_last_output_V_6_d0;
reg[9:0] conv_last_output_V_7_address0;
reg conv_last_output_V_7_ce0;
reg conv_last_output_V_7_we0;
reg[7:0] conv_last_output_V_7_d0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_3365;
reg    weight_V_blk_n_R;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_3365;
reg   [16:0] indvar_flatten_reg_645;
reg   [9:0] i_reg_656;
reg   [7:0] j_reg_667;
reg   [13:0] indvar_flatten10_reg_678;
reg   [9:0] i_1_reg_689;
reg   [5:0] indvar_flatten6_reg_701;
reg   [2:0] j_1_reg_712;
reg   [2:0] k_reg_724;
reg   [13:0] indvar_flatten11_reg_780;
reg   [9:0] i_2_reg_791;
reg   [5:0] indvar_flatten12_reg_802;
reg   [2:0] j_2_reg_813;
reg   [2:0] k_1_reg_824;
wire   [0:0] exitcond_flatten_fu_835_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_sig_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_3365;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_3365;
wire   [16:0] indvar_flatten_next_fu_841_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] j_mid2_fu_859_p3;
reg   [7:0] j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter1_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter2_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter3_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter4_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter5_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter6_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter7_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter8_j_mid2_reg_3374;
reg   [7:0] ap_reg_pp0_iter9_j_mid2_reg_3374;
wire   [9:0] i_cast_mid2_v_fu_867_p3;
reg   [9:0] i_cast_mid2_v_reg_3380;
wire   [2:0] tmp_fu_875_p1;
reg   [2:0] tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter1_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter2_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter3_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter4_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter5_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter6_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter7_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter8_tmp_reg_3387;
reg   [2:0] ap_reg_pp0_iter9_tmp_reg_3387;
reg   [6:0] newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391;
reg   [6:0] ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391;
wire   [7:0] j_3_fu_889_p2;
reg   [31:0] weight_V_addr_reg_3402;
reg   [7:0] weight_V_addr_read_reg_3408;
wire   [0:0] exitcond_flatten14_fu_996_p2;
reg   [0:0] exitcond_flatten14_reg_3420;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state15_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten14_reg_3420;
wire   [13:0] indvar_flatten_next1_fu_1002_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten15_fu_1008_p2;
reg   [0:0] exitcond_flatten15_reg_3429;
wire   [5:0] indvar_flatten_next7_fu_1020_p3;
wire   [9:0] i_1_cast_mid2_v_fu_1041_p3;
reg   [9:0] i_1_cast_mid2_v_reg_3442;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] tmp_2075_fu_1053_p1;
reg   [2:0] tmp_2075_reg_3447;
reg   [6:0] newIndex2_cast_mid2_s_reg_3451;
wire   [2:0] k_mid2_fu_1095_p3;
reg   [2:0] k_mid2_reg_3456;
wire   [2:0] j_1_cast_mid2_fu_1103_p3;
reg   [2:0] j_1_cast_mid2_reg_3461;
wire   [2:0] k_2_fu_1111_p2;
reg   [2:0] k_2_reg_3472;
wire   [9:0] h_cast_cast1_fu_1166_p1;
reg   [9:0] h_cast_cast1_reg_3477;
wire    ap_CS_fsm_state18;
wire   [10:0] h_cast_cast_fu_1170_p1;
reg   [10:0] h_cast_cast_reg_3482;
wire   [0:0] exitcond45_fu_1174_p2;
wire   [2:0] h_33_fu_1180_p2;
reg   [2:0] h_33_reg_3491;
wire   [11:0] w_cast_cast1_fu_1186_p1;
reg   [11:0] w_cast_cast1_reg_3496;
wire    ap_CS_fsm_state19;
wire   [12:0] w_cast_cast_fu_1190_p1;
reg   [12:0] w_cast_cast_reg_3501;
wire   [2:0] w_43_fu_1200_p2;
reg   [2:0] w_43_reg_3509;
wire   [14:0] ci_cast_cast_fu_1206_p1;
reg   [14:0] ci_cast_cast_reg_3514;
wire    ap_CS_fsm_state20;
reg   [11:0] input_V_addr_reg_3519;
wire   [7:0] ci_15_fu_1251_p2;
reg   [7:0] ci_15_reg_3527;
wire   [11:0] tmp_586_fu_1298_p2;
reg   [11:0] tmp_586_reg_3535;
wire    ap_CS_fsm_state21;
wire   [0:0] exitcond49_fu_1257_p2;
wire   [9:0] co_48_7_fu_1346_p2;
reg   [9:0] co_48_7_reg_3580;
reg   [9:0] conv_last_output_V_0_1_reg_3585;
wire    ap_CS_fsm_state22;
reg   [9:0] conv_last_output_V_4_1_reg_3590;
reg   [9:0] conv_last_output_V_6_1_reg_3595;
reg   [9:0] conv_last_output_V_1_1_reg_3600;
reg   [9:0] conv_last_output_V_5_1_reg_3605;
reg   [9:0] conv_last_output_V_7_1_reg_3610;
reg   [9:0] conv_last_output_V_2_1_reg_3615;
reg   [9:0] conv_last_output_V_3_1_reg_3620;
wire   [7:0] weight_temp_0_0_0_q0;
reg   [7:0] weight_temp_0_0_0_4_reg_3625;
reg   [7:0] input_V_load_reg_3630;
wire   [7:0] weight_temp_1_0_0_q0;
reg   [7:0] weight_temp_1_0_0_3_reg_3635;
wire   [7:0] weight_temp_2_0_0_q0;
reg   [7:0] weight_temp_2_0_0_3_reg_3640;
wire   [7:0] weight_temp_3_0_0_q0;
reg   [7:0] weight_temp_3_0_0_3_reg_3645;
wire   [7:0] weight_temp_4_0_0_q0;
reg   [7:0] weight_temp_4_0_0_3_reg_3650;
wire   [7:0] weight_temp_5_0_0_q0;
reg   [7:0] weight_temp_5_0_0_3_reg_3655;
wire   [7:0] weight_temp_6_0_0_q0;
reg   [7:0] weight_temp_6_0_0_3_reg_3660;
wire   [7:0] weight_temp_7_0_0_q0;
reg   [7:0] weight_temp_7_0_0_3_reg_3665;
wire   [15:0] p_Val2_s_fu_1369_p2;
reg   [15:0] p_Val2_s_reg_3670;
wire    ap_CS_fsm_state23;
reg   [7:0] conv_last_output_V_0_2_reg_3675;
reg   [0:0] tmp_2079_reg_3680;
wire   [15:0] p_Val2_180_1_fu_1386_p2;
reg   [15:0] p_Val2_180_1_reg_3685;
reg   [7:0] conv_last_output_V_1_2_reg_3690;
reg   [0:0] tmp_2084_reg_3695;
wire   [15:0] p_Val2_180_2_fu_1403_p2;
reg   [15:0] p_Val2_180_2_reg_3700;
reg   [7:0] conv_last_output_V_2_2_reg_3705;
reg   [0:0] tmp_2089_reg_3710;
wire   [15:0] p_Val2_180_3_fu_1420_p2;
reg   [15:0] p_Val2_180_3_reg_3715;
reg   [7:0] conv_last_output_V_3_2_reg_3720;
reg   [0:0] tmp_2094_reg_3725;
wire   [15:0] p_Val2_180_4_fu_1437_p2;
reg   [15:0] p_Val2_180_4_reg_3730;
reg   [7:0] conv_last_output_V_4_2_reg_3735;
reg   [0:0] tmp_2099_reg_3740;
wire   [15:0] p_Val2_180_5_fu_1454_p2;
reg   [15:0] p_Val2_180_5_reg_3745;
reg   [7:0] conv_last_output_V_5_2_reg_3750;
reg   [0:0] tmp_2104_reg_3755;
wire   [15:0] p_Val2_180_6_fu_1471_p2;
reg   [15:0] p_Val2_180_6_reg_3760;
reg   [7:0] conv_last_output_V_6_2_reg_3765;
reg   [0:0] tmp_2109_reg_3770;
wire   [15:0] p_Val2_180_7_fu_1488_p2;
reg   [15:0] p_Val2_180_7_reg_3775;
reg   [7:0] conv_last_output_V_7_2_reg_3780;
reg   [0:0] tmp_2114_reg_3785;
wire   [15:0] p_Val2_73_fu_1513_p2;
reg   [15:0] p_Val2_73_reg_3790;
wire    ap_CS_fsm_state24;
reg   [0:0] tmp_2078_reg_3795;
wire   [7:0] p_Val2_75_fu_1547_p2;
reg   [7:0] p_Val2_75_reg_3802;
wire   [0:0] tmp_2081_fu_1553_p3;
reg   [0:0] tmp_2081_reg_3808;
wire   [0:0] carry_s_fu_1567_p2;
reg   [0:0] carry_s_reg_3814;
reg   [1:0] tmp_246_reg_3821;
wire   [15:0] p_Val2_181_1_fu_1594_p2;
reg   [15:0] p_Val2_181_1_reg_3827;
reg   [0:0] tmp_2083_reg_3832;
wire   [7:0] p_Val2_183_1_fu_1628_p2;
reg   [7:0] p_Val2_183_1_reg_3839;
wire   [0:0] tmp_2086_fu_1634_p3;
reg   [0:0] tmp_2086_reg_3845;
wire   [0:0] carry_54_1_fu_1648_p2;
reg   [0:0] carry_54_1_reg_3851;
reg   [1:0] tmp_249_reg_3858;
wire   [15:0] p_Val2_181_2_fu_1675_p2;
reg   [15:0] p_Val2_181_2_reg_3864;
reg   [0:0] tmp_2088_reg_3869;
wire   [7:0] p_Val2_183_2_fu_1709_p2;
reg   [7:0] p_Val2_183_2_reg_3876;
wire   [0:0] tmp_2091_fu_1715_p3;
reg   [0:0] tmp_2091_reg_3882;
wire   [0:0] carry_54_2_fu_1729_p2;
reg   [0:0] carry_54_2_reg_3888;
reg   [1:0] tmp_250_reg_3895;
wire   [15:0] p_Val2_181_3_fu_1756_p2;
reg   [15:0] p_Val2_181_3_reg_3901;
reg   [0:0] tmp_2093_reg_3906;
wire   [7:0] p_Val2_183_3_fu_1790_p2;
reg   [7:0] p_Val2_183_3_reg_3913;
wire   [0:0] tmp_2096_fu_1796_p3;
reg   [0:0] tmp_2096_reg_3919;
wire   [0:0] carry_54_3_fu_1810_p2;
reg   [0:0] carry_54_3_reg_3925;
reg   [1:0] tmp_251_reg_3932;
wire   [15:0] p_Val2_181_4_fu_1837_p2;
reg   [15:0] p_Val2_181_4_reg_3938;
reg   [0:0] tmp_2098_reg_3943;
wire   [7:0] p_Val2_183_4_fu_1871_p2;
reg   [7:0] p_Val2_183_4_reg_3950;
wire   [0:0] tmp_2101_fu_1877_p3;
reg   [0:0] tmp_2101_reg_3956;
wire   [0:0] carry_54_4_fu_1891_p2;
reg   [0:0] carry_54_4_reg_3962;
reg   [1:0] tmp_252_reg_3969;
wire   [15:0] p_Val2_181_5_fu_1918_p2;
reg   [15:0] p_Val2_181_5_reg_3975;
reg   [0:0] tmp_2103_reg_3980;
wire   [7:0] p_Val2_183_5_fu_1952_p2;
reg   [7:0] p_Val2_183_5_reg_3987;
wire   [0:0] tmp_2106_fu_1958_p3;
reg   [0:0] tmp_2106_reg_3993;
wire   [0:0] carry_54_5_fu_1972_p2;
reg   [0:0] carry_54_5_reg_3999;
reg   [1:0] tmp_253_reg_4006;
wire   [15:0] p_Val2_181_6_fu_1999_p2;
reg   [15:0] p_Val2_181_6_reg_4012;
reg   [0:0] tmp_2108_reg_4017;
wire   [7:0] p_Val2_183_6_fu_2033_p2;
reg   [7:0] p_Val2_183_6_reg_4024;
wire   [0:0] tmp_2111_fu_2039_p3;
reg   [0:0] tmp_2111_reg_4030;
wire   [0:0] carry_54_6_fu_2053_p2;
reg   [0:0] carry_54_6_reg_4036;
reg   [1:0] tmp_254_reg_4043;
wire   [15:0] p_Val2_181_7_fu_2080_p2;
reg   [15:0] p_Val2_181_7_reg_4049;
reg   [0:0] tmp_2113_reg_4054;
wire   [7:0] p_Val2_183_7_fu_2114_p2;
reg   [7:0] p_Val2_183_7_reg_4061;
wire   [0:0] tmp_2116_fu_2120_p3;
reg   [0:0] tmp_2116_reg_4067;
wire   [0:0] carry_54_7_fu_2134_p2;
reg   [0:0] carry_54_7_reg_4073;
reg   [1:0] tmp_255_reg_4080;
wire   [0:0] p_38_i_i_fu_2192_p2;
reg   [0:0] p_38_i_i_reg_4086;
wire    ap_CS_fsm_state25;
wire   [0:0] tmp_248_fu_2208_p2;
reg   [0:0] tmp_248_reg_4091;
wire   [0:0] brmerge40_demorgan_i_fu_2219_p2;
reg   [0:0] brmerge40_demorgan_i_reg_4096;
wire   [0:0] underflow_fu_2236_p2;
reg   [0:0] underflow_reg_4101;
wire   [0:0] brmerge_i_i_i_fu_2241_p2;
reg   [0:0] brmerge_i_i_i_reg_4106;
wire   [0:0] p_38_i_i_1_fu_2289_p2;
reg   [0:0] p_38_i_i_1_reg_4111;
wire   [0:0] tmp_583_1_fu_2305_p2;
reg   [0:0] tmp_583_1_reg_4116;
wire   [0:0] brmerge40_demorgan_i_331_fu_2316_p2;
reg   [0:0] brmerge40_demorgan_i_331_reg_4121;
wire   [0:0] underflow_1_fu_2333_p2;
reg   [0:0] underflow_1_reg_4126;
wire   [0:0] brmerge_i_i_i_1_fu_2338_p2;
reg   [0:0] brmerge_i_i_i_1_reg_4131;
wire   [0:0] p_38_i_i_2_fu_2386_p2;
reg   [0:0] p_38_i_i_2_reg_4136;
wire   [0:0] tmp_583_2_fu_2402_p2;
reg   [0:0] tmp_583_2_reg_4141;
wire   [0:0] brmerge40_demorgan_i_325_fu_2413_p2;
reg   [0:0] brmerge40_demorgan_i_325_reg_4146;
wire   [0:0] underflow_2_fu_2430_p2;
reg   [0:0] underflow_2_reg_4151;
wire   [0:0] brmerge_i_i_i_2_fu_2435_p2;
reg   [0:0] brmerge_i_i_i_2_reg_4156;
wire   [0:0] p_38_i_i_3_fu_2483_p2;
reg   [0:0] p_38_i_i_3_reg_4161;
wire   [0:0] tmp_583_3_fu_2499_p2;
reg   [0:0] tmp_583_3_reg_4166;
wire   [0:0] brmerge40_demorgan_i_326_fu_2510_p2;
reg   [0:0] brmerge40_demorgan_i_326_reg_4171;
wire   [0:0] underflow_3_fu_2527_p2;
reg   [0:0] underflow_3_reg_4176;
wire   [0:0] brmerge_i_i_i_3_fu_2532_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4181;
wire   [0:0] p_38_i_i_4_fu_2580_p2;
reg   [0:0] p_38_i_i_4_reg_4186;
wire   [0:0] tmp_583_4_fu_2596_p2;
reg   [0:0] tmp_583_4_reg_4191;
wire   [0:0] brmerge40_demorgan_i_327_fu_2607_p2;
reg   [0:0] brmerge40_demorgan_i_327_reg_4196;
wire   [0:0] underflow_4_fu_2624_p2;
reg   [0:0] underflow_4_reg_4201;
wire   [0:0] brmerge_i_i_i_4_fu_2629_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4206;
wire   [0:0] p_38_i_i_5_fu_2677_p2;
reg   [0:0] p_38_i_i_5_reg_4211;
wire   [0:0] tmp_583_5_fu_2693_p2;
reg   [0:0] tmp_583_5_reg_4216;
wire   [0:0] brmerge40_demorgan_i_328_fu_2704_p2;
reg   [0:0] brmerge40_demorgan_i_328_reg_4221;
wire   [0:0] underflow_5_fu_2721_p2;
reg   [0:0] underflow_5_reg_4226;
wire   [0:0] brmerge_i_i_i_5_fu_2726_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4231;
wire   [0:0] p_38_i_i_6_fu_2774_p2;
reg   [0:0] p_38_i_i_6_reg_4236;
wire   [0:0] tmp_583_6_fu_2790_p2;
reg   [0:0] tmp_583_6_reg_4241;
wire   [0:0] brmerge40_demorgan_i_329_fu_2801_p2;
reg   [0:0] brmerge40_demorgan_i_329_reg_4246;
wire   [0:0] underflow_6_fu_2818_p2;
reg   [0:0] underflow_6_reg_4251;
wire   [0:0] brmerge_i_i_i_6_fu_2823_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4256;
wire   [0:0] p_38_i_i_7_fu_2871_p2;
reg   [0:0] p_38_i_i_7_reg_4261;
wire   [0:0] tmp_583_7_fu_2887_p2;
reg   [0:0] tmp_583_7_reg_4266;
wire   [0:0] brmerge40_demorgan_i_330_fu_2898_p2;
reg   [0:0] brmerge40_demorgan_i_330_reg_4271;
wire   [0:0] underflow_7_fu_2915_p2;
reg   [0:0] underflow_7_reg_4276;
wire   [0:0] brmerge_i_i_i_7_fu_2920_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4281;
wire   [0:0] exitcond_flatten16_fu_3166_p2;
reg   [0:0] exitcond_flatten16_reg_4286;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state27_pp2_stage0_iter0;
wire    ap_block_state29_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_flag00011001;
wire   [13:0] indvar_flatten_next2_fu_3172_p2;
reg   [13:0] indvar_flatten_next2_reg_4290;
reg    ap_enable_reg_pp2_iter0;
wire   [2:0] j_2_mid_fu_3190_p3;
reg   [2:0] j_2_mid_reg_4295;
wire   [9:0] arrayNo8_mid2_v_fu_3198_p3;
reg   [9:0] arrayNo8_mid2_v_reg_4301;
wire   [2:0] tmp_2076_fu_3206_p1;
reg   [2:0] tmp_2076_reg_4306;
reg   [2:0] ap_reg_pp2_iter1_tmp_2076_reg_4306;
reg   [6:0] newIndex9_cast_mid2_s_reg_4311;
wire   [0:0] exitcond_mid_fu_3232_p2;
reg   [0:0] exitcond_mid_reg_4316;
wire   [2:0] k_1_mid2_fu_3244_p3;
reg   [2:0] k_1_mid2_reg_4321;
wire   [5:0] indvar_flatten_next1_7_fu_3258_p3;
reg   [5:0] indvar_flatten_next1_7_reg_4327;
wire   [2:0] j_2_cast_mid2_fu_3271_p3;
reg   [2:0] j_2_cast_mid2_reg_4332;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state28_pp2_stage1_iter0;
wire    ap_block_state30_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_flag00011001;
wire   [2:0] k_3_fu_3277_p2;
reg   [2:0] k_3_reg_4338;
reg   [9:0] conv_last_output_V_0_3_reg_4343;
reg   [9:0] conv_last_output_V_4_3_reg_4348;
reg   [9:0] conv_last_output_V_6_3_reg_4353;
reg   [9:0] conv_last_output_V_1_3_reg_4358;
reg   [9:0] conv_last_output_V_5_3_reg_4363;
reg   [9:0] conv_last_output_V_7_3_reg_4368;
reg   [9:0] conv_last_output_V_2_3_reg_4373;
reg   [9:0] conv_last_output_V_3_3_reg_4378;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
wire    ap_CS_fsm_state13;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_flag00011011;
reg    ap_condition_pp2_exit_iter0_state27;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage1_flag00011011;
reg   [13:0] weight_temp_0_0_0_address0;
reg    weight_temp_0_0_0_ce0;
reg    weight_temp_0_0_0_we0;
reg   [7:0] weight_temp_0_0_0_d0;
reg   [13:0] weight_temp_1_0_0_address0;
reg    weight_temp_1_0_0_ce0;
reg    weight_temp_1_0_0_we0;
reg   [13:0] weight_temp_2_0_0_address0;
reg    weight_temp_2_0_0_ce0;
reg    weight_temp_2_0_0_we0;
reg   [13:0] weight_temp_3_0_0_address0;
reg    weight_temp_3_0_0_ce0;
reg    weight_temp_3_0_0_we0;
reg   [13:0] weight_temp_4_0_0_address0;
reg    weight_temp_4_0_0_ce0;
reg    weight_temp_4_0_0_we0;
reg   [13:0] weight_temp_5_0_0_address0;
reg    weight_temp_5_0_0_ce0;
reg    weight_temp_5_0_0_we0;
reg   [13:0] weight_temp_6_0_0_address0;
reg    weight_temp_6_0_0_ce0;
reg    weight_temp_6_0_0_we0;
reg   [13:0] weight_temp_7_0_0_address0;
reg    weight_temp_7_0_0_ce0;
reg    weight_temp_7_0_0_we0;
reg   [9:0] i_phi_fu_660_p4;
reg   [9:0] i_1_phi_fu_693_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [2:0] j_1_phi_fu_716_p4;
reg   [2:0] k_phi_fu_728_p4;
reg   [2:0] h_reg_736;
wire   [0:0] exitcond46_fu_1194_p2;
wire    ap_CS_fsm_state17;
reg   [2:0] w_reg_747;
wire   [0:0] exitcond48_fu_1245_p2;
reg   [7:0] ci_reg_758;
reg   [9:0] co_reg_769;
wire    ap_CS_fsm_state26;
reg   [13:0] indvar_flatten11_phi_fu_784_p4;
wire    ap_block_pp2_stage0_flag00000000;
reg   [9:0] i_2_phi_fu_795_p4;
reg   [5:0] indvar_flatten12_phi_fu_806_p4;
reg   [2:0] j_2_phi_fu_817_p4;
reg   [2:0] k_1_phi_fu_828_p4;
wire  signed [31:0] tmp_685_cast_fu_984_p1;
wire   [31:0] i_1_cast_mid2_fu_1048_p1;
wire   [31:0] tmp_692_cast_fu_1154_p1;
wire   [31:0] tmp_705_cast_fu_1240_p1;
wire  signed [31:0] tmp_715_cast_fu_1334_p1;
wire   [31:0] tmp_711_cast_fu_1352_p1;
wire   [31:0] tmp_699_cast_fu_3319_p1;
wire   [31:0] sum_fu_940_p2;
reg    ap_reg_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_pp0_stage0_flag00001001;
wire   [7:0] this_assign_1_6_fu_3127_p3;
wire   [0:0] tmp_2077_fu_3352_p3;
wire    ap_block_pp2_stage1_flag00000000;
wire   [7:0] this_assign_1_5_fu_3097_p3;
wire   [7:0] this_assign_1_4_fu_3067_p3;
wire   [7:0] this_assign_1_3_fu_3037_p3;
wire   [7:0] this_assign_1_2_fu_3007_p3;
wire   [7:0] this_assign_1_1_fu_2977_p3;
wire   [7:0] this_assign_1_fu_2947_p3;
wire   [7:0] this_assign_1_7_fu_3157_p3;
wire   [0:0] exitcond_fu_853_p2;
wire   [9:0] i_3_fu_847_p2;
wire   [17:0] tmp_565_fu_895_p3;
wire   [15:0] tmp_566_fu_906_p3;
wire   [18:0] p_shl2_cast_fu_902_p1;
wire   [18:0] p_shl3_cast_fu_913_p1;
wire   [18:0] tmp_567_fu_917_p2;
wire   [19:0] j_cast_cast_fu_927_p1;
wire  signed [19:0] tmp_680_cast_fu_923_p1;
wire   [19:0] tmp_571_fu_930_p2;
wire  signed [31:0] tmp_684_cast_fu_936_p1;
wire   [12:0] tmp_569_fu_958_p3;
wire   [14:0] tmp_568_fu_951_p3;
wire   [14:0] p_shl1_cast_fu_965_p1;
wire   [14:0] j_cast_cast1_fu_975_p1;
wire   [14:0] tmp_570_fu_969_p2;
wire   [14:0] tmp_572_fu_978_p2;
wire   [5:0] indvar_flatten6_op_fu_1014_p2;
wire   [9:0] i_4_fu_1028_p2;
wire   [0:0] exitcond44_fu_1072_p2;
wire   [0:0] not_exitcond_flatten_3_fu_1067_p2;
wire   [2:0] j_1_mid_fu_1034_p3;
wire   [0:0] exitcond69_mid_fu_1078_p2;
wire   [0:0] tmp_574_fu_1090_p2;
wire   [2:0] j_4_fu_1084_p2;
wire   [8:0] tmp_573_fu_1117_p3;
wire   [9:0] tmp_687_cast_fu_1124_p1;
wire   [9:0] j_1_cast_mid2_cast_fu_1128_p1;
wire   [9:0] tmp_575_fu_1131_p2;
wire   [11:0] tmp_691_cast_fu_1137_p3;
wire   [11:0] k_cast_cast_fu_1145_p1;
wire   [11:0] tmp_576_fu_1148_p2;
wire   [9:0] tmp_581_fu_1210_p3;
wire   [10:0] tmp_701_cast_fu_1218_p1;
wire   [10:0] tmp_582_fu_1222_p2;
wire   [12:0] tmp_704_cast_fu_1227_p3;
wire   [12:0] tmp_583_fu_1235_p2;
wire   [6:0] newIndex3_fu_1263_p4;
wire   [8:0] tmp_584_fu_1273_p3;
wire   [9:0] tmp_707_cast_fu_1281_p1;
wire   [9:0] tmp_585_fu_1285_p2;
wire   [11:0] tmp_710_cast_fu_1290_p3;
wire   [12:0] tmp_588_fu_1311_p3;
wire   [14:0] tmp_587_fu_1303_p3;
wire   [14:0] p_shl5_cast_fu_1319_p1;
wire   [14:0] tmp_589_fu_1323_p2;
wire   [14:0] tmp_590_fu_1329_p2;
wire  signed [7:0] p_Val2_s_fu_1369_p0;
wire  signed [15:0] OP2_V_fu_1366_p1;
wire  signed [7:0] p_Val2_s_fu_1369_p1;
wire  signed [7:0] p_Val2_180_1_fu_1386_p0;
wire  signed [7:0] p_Val2_180_1_fu_1386_p1;
wire  signed [7:0] p_Val2_180_2_fu_1403_p0;
wire  signed [7:0] p_Val2_180_2_fu_1403_p1;
wire  signed [7:0] p_Val2_180_3_fu_1420_p0;
wire  signed [7:0] p_Val2_180_3_fu_1420_p1;
wire  signed [7:0] p_Val2_180_4_fu_1437_p0;
wire  signed [7:0] p_Val2_180_4_fu_1437_p1;
wire  signed [7:0] p_Val2_180_5_fu_1454_p0;
wire  signed [7:0] p_Val2_180_5_fu_1454_p1;
wire  signed [7:0] p_Val2_180_6_fu_1471_p0;
wire  signed [7:0] p_Val2_180_6_fu_1471_p1;
wire  signed [7:0] p_Val2_180_7_fu_1488_p0;
wire  signed [7:0] p_Val2_180_7_fu_1488_p1;
wire   [13:0] tmp_s_fu_1502_p3;
wire  signed [15:0] tmp_348_cast_fu_1509_p1;
wire   [7:0] tmp_244_fu_1536_p1;
wire   [7:0] p_Val2_74_fu_1526_p4;
wire   [0:0] tmp_2080_fu_1539_p3;
wire   [0:0] tmp_245_fu_1561_p2;
wire   [13:0] tmp_570_1_fu_1583_p3;
wire  signed [15:0] tmp_570_1_cast_fu_1590_p1;
wire   [7:0] tmp_574_1_fu_1617_p1;
wire   [7:0] p_Val2_182_1_fu_1607_p4;
wire   [0:0] tmp_2085_fu_1620_p3;
wire   [0:0] tmp_578_1_fu_1642_p2;
wire   [13:0] tmp_570_2_fu_1664_p3;
wire  signed [15:0] tmp_570_2_cast_fu_1671_p1;
wire   [7:0] tmp_574_2_fu_1698_p1;
wire   [7:0] p_Val2_182_2_fu_1688_p4;
wire   [0:0] tmp_2090_fu_1701_p3;
wire   [0:0] tmp_578_2_fu_1723_p2;
wire   [13:0] tmp_570_3_fu_1745_p3;
wire  signed [15:0] tmp_570_3_cast_fu_1752_p1;
wire   [7:0] tmp_574_3_fu_1779_p1;
wire   [7:0] p_Val2_182_3_fu_1769_p4;
wire   [0:0] tmp_2095_fu_1782_p3;
wire   [0:0] tmp_578_3_fu_1804_p2;
wire   [13:0] tmp_570_4_fu_1826_p3;
wire  signed [15:0] tmp_570_4_cast_fu_1833_p1;
wire   [7:0] tmp_574_4_fu_1860_p1;
wire   [7:0] p_Val2_182_4_fu_1850_p4;
wire   [0:0] tmp_2100_fu_1863_p3;
wire   [0:0] tmp_578_4_fu_1885_p2;
wire   [13:0] tmp_570_5_fu_1907_p3;
wire  signed [15:0] tmp_570_5_cast_fu_1914_p1;
wire   [7:0] tmp_574_5_fu_1941_p1;
wire   [7:0] p_Val2_182_5_fu_1931_p4;
wire   [0:0] tmp_2105_fu_1944_p3;
wire   [0:0] tmp_578_5_fu_1966_p2;
wire   [13:0] tmp_570_6_fu_1988_p3;
wire  signed [15:0] tmp_570_6_cast_fu_1995_p1;
wire   [7:0] tmp_574_6_fu_2022_p1;
wire   [7:0] p_Val2_182_6_fu_2012_p4;
wire   [0:0] tmp_2110_fu_2025_p3;
wire   [0:0] tmp_578_6_fu_2047_p2;
wire   [13:0] tmp_570_7_fu_2069_p3;
wire  signed [15:0] tmp_570_7_cast_fu_2076_p1;
wire   [7:0] tmp_574_7_fu_2103_p1;
wire   [7:0] p_Val2_182_7_fu_2093_p4;
wire   [0:0] tmp_2115_fu_2106_p3;
wire   [0:0] tmp_578_7_fu_2128_p2;
wire   [0:0] Range1_all_ones_fu_2157_p2;
wire   [0:0] Range1_all_zeros_fu_2162_p2;
wire   [0:0] tmp_2082_fu_2150_p3;
wire   [0:0] tmp_247_fu_2174_p2;
wire   [0:0] p_41_i_i_fu_2180_p2;
wire   [0:0] deleted_zeros_fu_2167_p3;
wire   [0:0] p_not_i_i_fu_2197_p2;
wire   [0:0] brmerge_i_i_fu_2203_p2;
wire   [0:0] deleted_ones_fu_2185_p3;
wire   [0:0] tmp1_demorgan_fu_2224_p2;
wire   [0:0] tmp1_fu_2230_p2;
wire   [0:0] overflow_fu_2213_p2;
wire   [0:0] Range1_all_ones_1_fu_2254_p2;
wire   [0:0] Range1_all_zeros_1_fu_2259_p2;
wire   [0:0] tmp_2087_fu_2247_p3;
wire   [0:0] tmp_581_1_fu_2271_p2;
wire   [0:0] p_41_i_i_1_fu_2277_p2;
wire   [0:0] deleted_zeros_1_fu_2264_p3;
wire   [0:0] p_not_i_i_1_fu_2294_p2;
wire   [0:0] brmerge_i_i_1_fu_2300_p2;
wire   [0:0] deleted_ones_1_fu_2282_p3;
wire   [0:0] tmp3_demorgan_fu_2321_p2;
wire   [0:0] tmp3_fu_2327_p2;
wire   [0:0] overflow_1_fu_2310_p2;
wire   [0:0] Range1_all_ones_2_fu_2351_p2;
wire   [0:0] Range1_all_zeros_2_fu_2356_p2;
wire   [0:0] tmp_2092_fu_2344_p3;
wire   [0:0] tmp_581_2_fu_2368_p2;
wire   [0:0] p_41_i_i_2_fu_2374_p2;
wire   [0:0] deleted_zeros_2_fu_2361_p3;
wire   [0:0] p_not_i_i_2_fu_2391_p2;
wire   [0:0] brmerge_i_i_2_fu_2397_p2;
wire   [0:0] deleted_ones_2_fu_2379_p3;
wire   [0:0] tmp5_demorgan_fu_2418_p2;
wire   [0:0] tmp5_fu_2424_p2;
wire   [0:0] overflow_2_fu_2407_p2;
wire   [0:0] Range1_all_ones_3_fu_2448_p2;
wire   [0:0] Range1_all_zeros_3_fu_2453_p2;
wire   [0:0] tmp_2097_fu_2441_p3;
wire   [0:0] tmp_581_3_fu_2465_p2;
wire   [0:0] p_41_i_i_3_fu_2471_p2;
wire   [0:0] deleted_zeros_3_fu_2458_p3;
wire   [0:0] p_not_i_i_3_fu_2488_p2;
wire   [0:0] brmerge_i_i_3_fu_2494_p2;
wire   [0:0] deleted_ones_3_fu_2476_p3;
wire   [0:0] tmp7_demorgan_fu_2515_p2;
wire   [0:0] tmp7_fu_2521_p2;
wire   [0:0] overflow_3_fu_2504_p2;
wire   [0:0] Range1_all_ones_4_fu_2545_p2;
wire   [0:0] Range1_all_zeros_4_fu_2550_p2;
wire   [0:0] tmp_2102_fu_2538_p3;
wire   [0:0] tmp_581_4_fu_2562_p2;
wire   [0:0] p_41_i_i_4_fu_2568_p2;
wire   [0:0] deleted_zeros_4_fu_2555_p3;
wire   [0:0] p_not_i_i_4_fu_2585_p2;
wire   [0:0] brmerge_i_i_4_fu_2591_p2;
wire   [0:0] deleted_ones_4_fu_2573_p3;
wire   [0:0] tmp9_demorgan_fu_2612_p2;
wire   [0:0] tmp9_fu_2618_p2;
wire   [0:0] overflow_4_fu_2601_p2;
wire   [0:0] Range1_all_ones_5_fu_2642_p2;
wire   [0:0] Range1_all_zeros_5_fu_2647_p2;
wire   [0:0] tmp_2107_fu_2635_p3;
wire   [0:0] tmp_581_5_fu_2659_p2;
wire   [0:0] p_41_i_i_5_fu_2665_p2;
wire   [0:0] deleted_zeros_5_fu_2652_p3;
wire   [0:0] p_not_i_i_5_fu_2682_p2;
wire   [0:0] brmerge_i_i_5_fu_2688_p2;
wire   [0:0] deleted_ones_5_fu_2670_p3;
wire   [0:0] tmp11_demorgan_fu_2709_p2;
wire   [0:0] tmp11_fu_2715_p2;
wire   [0:0] overflow_5_fu_2698_p2;
wire   [0:0] Range1_all_ones_6_fu_2739_p2;
wire   [0:0] Range1_all_zeros_6_fu_2744_p2;
wire   [0:0] tmp_2112_fu_2732_p3;
wire   [0:0] tmp_581_6_fu_2756_p2;
wire   [0:0] p_41_i_i_6_fu_2762_p2;
wire   [0:0] deleted_zeros_6_fu_2749_p3;
wire   [0:0] p_not_i_i_6_fu_2779_p2;
wire   [0:0] brmerge_i_i_6_fu_2785_p2;
wire   [0:0] deleted_ones_6_fu_2767_p3;
wire   [0:0] tmp13_demorgan_fu_2806_p2;
wire   [0:0] tmp13_fu_2812_p2;
wire   [0:0] overflow_6_fu_2795_p2;
wire   [0:0] Range1_all_ones_7_fu_2836_p2;
wire   [0:0] Range1_all_zeros_7_fu_2841_p2;
wire   [0:0] tmp_2117_fu_2829_p3;
wire   [0:0] tmp_581_7_fu_2853_p2;
wire   [0:0] p_41_i_i_7_fu_2859_p2;
wire   [0:0] deleted_zeros_7_fu_2846_p3;
wire   [0:0] p_not_i_i_7_fu_2876_p2;
wire   [0:0] brmerge_i_i_7_fu_2882_p2;
wire   [0:0] deleted_ones_7_fu_2864_p3;
wire   [0:0] tmp15_demorgan_fu_2903_p2;
wire   [0:0] tmp15_fu_2909_p2;
wire   [0:0] overflow_7_fu_2892_p2;
wire   [0:0] tmp2_fu_2926_p2;
wire   [0:0] underflow_not_fu_2930_p2;
wire   [7:0] p_Val2_183_mux_fu_2935_p3;
wire   [7:0] p_Val2_s_480_fu_2941_p3;
wire   [0:0] tmp4_fu_2956_p2;
wire   [0:0] underflow_not_1_fu_2960_p2;
wire   [7:0] p_Val2_183_mux_1_fu_2965_p3;
wire   [7:0] p_Val2_183_1_481_fu_2971_p3;
wire   [0:0] tmp6_fu_2986_p2;
wire   [0:0] underflow_not_2_fu_2990_p2;
wire   [7:0] p_Val2_183_mux_2_fu_2995_p3;
wire   [7:0] p_Val2_183_2_482_fu_3001_p3;
wire   [0:0] tmp8_fu_3016_p2;
wire   [0:0] underflow_not_3_fu_3020_p2;
wire   [7:0] p_Val2_183_mux_3_fu_3025_p3;
wire   [7:0] p_Val2_183_3_483_fu_3031_p3;
wire   [0:0] tmp10_fu_3046_p2;
wire   [0:0] underflow_not_4_fu_3050_p2;
wire   [7:0] p_Val2_183_mux_4_fu_3055_p3;
wire   [7:0] p_Val2_183_4_484_fu_3061_p3;
wire   [0:0] tmp12_fu_3076_p2;
wire   [0:0] underflow_not_5_fu_3080_p2;
wire   [7:0] p_Val2_183_mux_5_fu_3085_p3;
wire   [7:0] p_Val2_183_5_485_fu_3091_p3;
wire   [0:0] tmp14_fu_3106_p2;
wire   [0:0] underflow_not_6_fu_3110_p2;
wire   [7:0] p_Val2_183_mux_6_fu_3115_p3;
wire   [7:0] p_Val2_183_6_486_fu_3121_p3;
wire   [0:0] tmp16_fu_3136_p2;
wire   [0:0] underflow_not_7_fu_3140_p2;
wire   [7:0] p_Val2_183_mux_7_fu_3145_p3;
wire   [7:0] p_Val2_183_7_487_fu_3151_p3;
wire   [0:0] exitcond_flatten17_fu_3184_p2;
wire   [9:0] i_5_fu_3178_p2;
wire   [0:0] exitcond47_fu_3226_p2;
wire   [0:0] not_exitcond_flatten_fu_3220_p2;
wire   [0:0] tmp_578_fu_3238_p2;
wire   [5:0] indvar_flatten28_op_fu_3252_p2;
wire   [2:0] j_5_fu_3266_p2;
wire   [8:0] tmp_577_fu_3282_p3;
wire   [9:0] tmp_694_cast_fu_3289_p1;
wire   [9:0] j_2_cast_mid2_cast_fu_3293_p1;
wire   [9:0] tmp_579_fu_3296_p2;
wire   [11:0] tmp_698_cast_fu_3302_p3;
wire   [11:0] k_1_cast_cast_fu_3310_p1;
wire   [11:0] tmp_580_fu_3313_p2;
wire   [7:0] tmp_243_fu_3331_p10;
wire    ap_CS_fsm_state31;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_V_ARREADY = 1'b0;
end

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_0_0_0_address0),
    .ce0(weight_temp_0_0_0_ce0),
    .we0(weight_temp_0_0_0_we0),
    .d0(weight_temp_0_0_0_d0),
    .q0(weight_temp_0_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_1_0_0_address0),
    .ce0(weight_temp_1_0_0_ce0),
    .we0(weight_temp_1_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_1_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_2_0_0_address0),
    .ce0(weight_temp_2_0_0_ce0),
    .we0(weight_temp_2_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_2_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_3_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_3_0_0_address0),
    .ce0(weight_temp_3_0_0_ce0),
    .we0(weight_temp_3_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_3_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_4_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_4_0_0_address0),
    .ce0(weight_temp_4_0_0_ce0),
    .we0(weight_temp_4_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_4_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_5_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_5_0_0_address0),
    .ce0(weight_temp_5_0_0_ce0),
    .we0(weight_temp_5_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_5_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_6_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_6_0_0_address0),
    .ce0(weight_temp_6_0_0_ce0),
    .we0(weight_temp_6_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_6_0_0_q0)
);

conv_last_weight_JfO #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_7_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_7_0_0_address0),
    .ce0(weight_temp_7_0_0_ce0),
    .we0(weight_temp_7_0_0_we0),
    .d0(weight_V_addr_read_reg_3408),
    .q0(weight_temp_7_0_0_q0)
);

ShuffleNetV2_mux_Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_Rg6_U792(
    .din1(conv_last_output_V_0_q0),
    .din2(conv_last_output_V_1_q0),
    .din3(conv_last_output_V_2_q0),
    .din4(conv_last_output_V_3_q0),
    .din5(conv_last_output_V_4_q0),
    .din6(conv_last_output_V_5_q0),
    .din7(conv_last_output_V_6_q0),
    .din8(conv_last_output_V_7_q0),
    .din9(ap_reg_pp2_iter1_tmp_2076_reg_4306),
    .dout(tmp_243_fu_3331_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state14)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state27))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_condition_pp2_exit_iter0_state27) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state27 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3365))) begin
            if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
            end else if (((1'b1 == m_axi_weight_V_ARREADY) & (ap_block_pp0_stage0_flag00001001 == 1'b0))) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond46_fu_1194_p2))) begin
        ci_reg_758 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (exitcond49_fu_1257_p2 == 1'd1))) begin
        ci_reg_758 <= ci_15_reg_3527;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd0 == exitcond48_fu_1245_p2))) begin
        co_reg_769 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        co_reg_769 <= co_48_7_reg_3580;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        h_reg_736 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == exitcond46_fu_1194_p2))) begin
        h_reg_736 <= h_33_reg_3491;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_1_reg_689 <= 10'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) begin
        i_1_reg_689 <= i_1_cast_mid2_v_reg_3442;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
        i_2_reg_791 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_2_reg_791 <= arrayNo8_mid2_v_reg_4301;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_3365) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_656 <= i_cast_mid2_v_reg_3380;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_656 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten10_reg_678 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten14_fu_996_p2))) begin
        indvar_flatten10_reg_678 <= indvar_flatten_next1_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
        indvar_flatten11_reg_780 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        indvar_flatten11_reg_780 <= indvar_flatten_next2_reg_4290;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
        indvar_flatten12_reg_802 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        indvar_flatten12_reg_802 <= indvar_flatten_next1_7_reg_4327;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten6_reg_701 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten14_fu_996_p2))) begin
        indvar_flatten6_reg_701 <= indvar_flatten_next7_fu_1020_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_835_p2))) begin
        indvar_flatten_reg_645 <= indvar_flatten_next_fu_841_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_645 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_1_reg_712 <= 3'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) begin
        j_1_reg_712 <= j_1_cast_mid2_reg_3461;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
        j_2_reg_813 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        j_2_reg_813 <= j_2_cast_mid2_reg_4332;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_835_p2))) begin
        j_reg_667 <= j_3_fu_889_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_667 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
        k_1_reg_824 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        k_1_reg_824 <= k_3_reg_4338;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_reg_724 <= 3'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) begin
        k_reg_724 <= k_2_reg_3472;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond45_fu_1174_p2))) begin
        w_reg_747 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond48_fu_1245_p2))) begin
        w_reg_747 <= w_43_reg_3509;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_3365 <= exitcond_flatten_reg_3365;
        ap_reg_pp0_iter1_j_mid2_reg_3374 <= j_mid2_reg_3374;
        ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391 <= newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter1_tmp_reg_3387 <= tmp_reg_3387;
        exitcond_flatten_reg_3365 <= exitcond_flatten_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter1_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter2_j_mid2_reg_3374 <= ap_reg_pp0_iter1_j_mid2_reg_3374;
        ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter2_tmp_reg_3387 <= ap_reg_pp0_iter1_tmp_reg_3387;
        ap_reg_pp0_iter3_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter2_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter3_j_mid2_reg_3374 <= ap_reg_pp0_iter2_j_mid2_reg_3374;
        ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter3_tmp_reg_3387 <= ap_reg_pp0_iter2_tmp_reg_3387;
        ap_reg_pp0_iter4_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter3_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter4_j_mid2_reg_3374 <= ap_reg_pp0_iter3_j_mid2_reg_3374;
        ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter4_tmp_reg_3387 <= ap_reg_pp0_iter3_tmp_reg_3387;
        ap_reg_pp0_iter5_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter4_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter5_j_mid2_reg_3374 <= ap_reg_pp0_iter4_j_mid2_reg_3374;
        ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter5_tmp_reg_3387 <= ap_reg_pp0_iter4_tmp_reg_3387;
        ap_reg_pp0_iter6_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter5_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter6_j_mid2_reg_3374 <= ap_reg_pp0_iter5_j_mid2_reg_3374;
        ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter6_tmp_reg_3387 <= ap_reg_pp0_iter5_tmp_reg_3387;
        ap_reg_pp0_iter7_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter6_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter7_j_mid2_reg_3374 <= ap_reg_pp0_iter6_j_mid2_reg_3374;
        ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter7_tmp_reg_3387 <= ap_reg_pp0_iter6_tmp_reg_3387;
        ap_reg_pp0_iter8_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter7_exitcond_flatten_reg_3365;
        ap_reg_pp0_iter8_j_mid2_reg_3374 <= ap_reg_pp0_iter7_j_mid2_reg_3374;
        ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter8_tmp_reg_3387 <= ap_reg_pp0_iter7_tmp_reg_3387;
        ap_reg_pp0_iter9_j_mid2_reg_3374 <= ap_reg_pp0_iter8_j_mid2_reg_3374;
        ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391;
        ap_reg_pp0_iter9_tmp_reg_3387 <= ap_reg_pp0_iter8_tmp_reg_3387;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten14_reg_3420 <= exitcond_flatten14_reg_3420;
        exitcond_flatten14_reg_3420 <= exitcond_flatten14_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp2_iter1_tmp_2076_reg_4306 <= tmp_2076_reg_4306;
        exitcond_flatten16_reg_4286 <= exitcond_flatten16_fu_3166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten16_fu_3166_p2))) begin
        arrayNo8_mid2_v_reg_4301 <= arrayNo8_mid2_v_fu_3198_p3;
        indvar_flatten_next1_7_reg_4327 <= indvar_flatten_next1_7_fu_3258_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        brmerge40_demorgan_i_325_reg_4146 <= brmerge40_demorgan_i_325_fu_2413_p2;
        brmerge40_demorgan_i_326_reg_4171 <= brmerge40_demorgan_i_326_fu_2510_p2;
        brmerge40_demorgan_i_327_reg_4196 <= brmerge40_demorgan_i_327_fu_2607_p2;
        brmerge40_demorgan_i_328_reg_4221 <= brmerge40_demorgan_i_328_fu_2704_p2;
        brmerge40_demorgan_i_329_reg_4246 <= brmerge40_demorgan_i_329_fu_2801_p2;
        brmerge40_demorgan_i_330_reg_4271 <= brmerge40_demorgan_i_330_fu_2898_p2;
        brmerge40_demorgan_i_331_reg_4121 <= brmerge40_demorgan_i_331_fu_2316_p2;
        brmerge40_demorgan_i_reg_4096 <= brmerge40_demorgan_i_fu_2219_p2;
        brmerge_i_i_i_1_reg_4131 <= brmerge_i_i_i_1_fu_2338_p2;
        brmerge_i_i_i_2_reg_4156 <= brmerge_i_i_i_2_fu_2435_p2;
        brmerge_i_i_i_3_reg_4181 <= brmerge_i_i_i_3_fu_2532_p2;
        brmerge_i_i_i_4_reg_4206 <= brmerge_i_i_i_4_fu_2629_p2;
        brmerge_i_i_i_5_reg_4231 <= brmerge_i_i_i_5_fu_2726_p2;
        brmerge_i_i_i_6_reg_4256 <= brmerge_i_i_i_6_fu_2823_p2;
        brmerge_i_i_i_7_reg_4281 <= brmerge_i_i_i_7_fu_2920_p2;
        brmerge_i_i_i_reg_4106 <= brmerge_i_i_i_fu_2241_p2;
        p_38_i_i_1_reg_4111 <= p_38_i_i_1_fu_2289_p2;
        p_38_i_i_2_reg_4136 <= p_38_i_i_2_fu_2386_p2;
        p_38_i_i_3_reg_4161 <= p_38_i_i_3_fu_2483_p2;
        p_38_i_i_4_reg_4186 <= p_38_i_i_4_fu_2580_p2;
        p_38_i_i_5_reg_4211 <= p_38_i_i_5_fu_2677_p2;
        p_38_i_i_6_reg_4236 <= p_38_i_i_6_fu_2774_p2;
        p_38_i_i_7_reg_4261 <= p_38_i_i_7_fu_2871_p2;
        p_38_i_i_reg_4086 <= p_38_i_i_fu_2192_p2;
        tmp_248_reg_4091 <= tmp_248_fu_2208_p2;
        tmp_583_1_reg_4116 <= tmp_583_1_fu_2305_p2;
        tmp_583_2_reg_4141 <= tmp_583_2_fu_2402_p2;
        tmp_583_3_reg_4166 <= tmp_583_3_fu_2499_p2;
        tmp_583_4_reg_4191 <= tmp_583_4_fu_2596_p2;
        tmp_583_5_reg_4216 <= tmp_583_5_fu_2693_p2;
        tmp_583_6_reg_4241 <= tmp_583_6_fu_2790_p2;
        tmp_583_7_reg_4266 <= tmp_583_7_fu_2887_p2;
        underflow_1_reg_4126 <= underflow_1_fu_2333_p2;
        underflow_2_reg_4151 <= underflow_2_fu_2430_p2;
        underflow_3_reg_4176 <= underflow_3_fu_2527_p2;
        underflow_4_reg_4201 <= underflow_4_fu_2624_p2;
        underflow_5_reg_4226 <= underflow_5_fu_2721_p2;
        underflow_6_reg_4251 <= underflow_6_fu_2818_p2;
        underflow_7_reg_4276 <= underflow_7_fu_2915_p2;
        underflow_reg_4101 <= underflow_fu_2236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        carry_54_1_reg_3851 <= carry_54_1_fu_1648_p2;
        carry_54_2_reg_3888 <= carry_54_2_fu_1729_p2;
        carry_54_3_reg_3925 <= carry_54_3_fu_1810_p2;
        carry_54_4_reg_3962 <= carry_54_4_fu_1891_p2;
        carry_54_5_reg_3999 <= carry_54_5_fu_1972_p2;
        carry_54_6_reg_4036 <= carry_54_6_fu_2053_p2;
        carry_54_7_reg_4073 <= carry_54_7_fu_2134_p2;
        carry_s_reg_3814 <= carry_s_fu_1567_p2;
        p_Val2_181_1_reg_3827 <= p_Val2_181_1_fu_1594_p2;
        p_Val2_181_2_reg_3864 <= p_Val2_181_2_fu_1675_p2;
        p_Val2_181_3_reg_3901 <= p_Val2_181_3_fu_1756_p2;
        p_Val2_181_4_reg_3938 <= p_Val2_181_4_fu_1837_p2;
        p_Val2_181_5_reg_3975 <= p_Val2_181_5_fu_1918_p2;
        p_Val2_181_6_reg_4012 <= p_Val2_181_6_fu_1999_p2;
        p_Val2_181_7_reg_4049 <= p_Val2_181_7_fu_2080_p2;
        p_Val2_183_1_reg_3839 <= p_Val2_183_1_fu_1628_p2;
        p_Val2_183_2_reg_3876 <= p_Val2_183_2_fu_1709_p2;
        p_Val2_183_3_reg_3913 <= p_Val2_183_3_fu_1790_p2;
        p_Val2_183_4_reg_3950 <= p_Val2_183_4_fu_1871_p2;
        p_Val2_183_5_reg_3987 <= p_Val2_183_5_fu_1952_p2;
        p_Val2_183_6_reg_4024 <= p_Val2_183_6_fu_2033_p2;
        p_Val2_183_7_reg_4061 <= p_Val2_183_7_fu_2114_p2;
        p_Val2_73_reg_3790 <= p_Val2_73_fu_1513_p2;
        p_Val2_75_reg_3802 <= p_Val2_75_fu_1547_p2;
        tmp_2078_reg_3795 <= p_Val2_73_fu_1513_p2[32'd15];
        tmp_2081_reg_3808 <= p_Val2_75_fu_1547_p2[32'd7];
        tmp_2083_reg_3832 <= p_Val2_181_1_fu_1594_p2[32'd15];
        tmp_2086_reg_3845 <= p_Val2_183_1_fu_1628_p2[32'd7];
        tmp_2088_reg_3869 <= p_Val2_181_2_fu_1675_p2[32'd15];
        tmp_2091_reg_3882 <= p_Val2_183_2_fu_1709_p2[32'd7];
        tmp_2093_reg_3906 <= p_Val2_181_3_fu_1756_p2[32'd15];
        tmp_2096_reg_3919 <= p_Val2_183_3_fu_1790_p2[32'd7];
        tmp_2098_reg_3943 <= p_Val2_181_4_fu_1837_p2[32'd15];
        tmp_2101_reg_3956 <= p_Val2_183_4_fu_1871_p2[32'd7];
        tmp_2103_reg_3980 <= p_Val2_181_5_fu_1918_p2[32'd15];
        tmp_2106_reg_3993 <= p_Val2_183_5_fu_1952_p2[32'd7];
        tmp_2108_reg_4017 <= p_Val2_181_6_fu_1999_p2[32'd15];
        tmp_2111_reg_4030 <= p_Val2_183_6_fu_2033_p2[32'd7];
        tmp_2113_reg_4054 <= p_Val2_181_7_fu_2080_p2[32'd15];
        tmp_2116_reg_4067 <= p_Val2_183_7_fu_2114_p2[32'd7];
        tmp_246_reg_3821 <= {{p_Val2_73_fu_1513_p2[15:14]}};
        tmp_249_reg_3858 <= {{p_Val2_181_1_fu_1594_p2[15:14]}};
        tmp_250_reg_3895 <= {{p_Val2_181_2_fu_1675_p2[15:14]}};
        tmp_251_reg_3932 <= {{p_Val2_181_3_fu_1756_p2[15:14]}};
        tmp_252_reg_3969 <= {{p_Val2_181_4_fu_1837_p2[15:14]}};
        tmp_253_reg_4006 <= {{p_Val2_181_5_fu_1918_p2[15:14]}};
        tmp_254_reg_4043 <= {{p_Val2_181_6_fu_1999_p2[15:14]}};
        tmp_255_reg_4080 <= {{p_Val2_181_7_fu_2080_p2[15:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ci_15_reg_3527 <= ci_15_fu_1251_p2;
        ci_cast_cast_reg_3514[7 : 0] <= ci_cast_cast_fu_1206_p1[7 : 0];
        input_V_addr_reg_3519 <= tmp_705_cast_fu_1240_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd0 == exitcond49_fu_1257_p2))) begin
        co_48_7_reg_3580 <= co_48_7_fu_1346_p2;
        tmp_586_reg_3535 <= tmp_586_fu_1298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_0_1_reg_3585 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_1_1_reg_3600 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_2_1_reg_3615 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_3_1_reg_3620 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_4_1_reg_3590 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_5_1_reg_3605 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_6_1_reg_3595 <= tmp_711_cast_fu_1352_p1;
        conv_last_output_V_7_1_reg_3610 <= tmp_711_cast_fu_1352_p1;
        input_V_load_reg_3630 <= input_V_q0;
        weight_temp_0_0_0_4_reg_3625 <= weight_temp_0_0_0_q0;
        weight_temp_1_0_0_3_reg_3635 <= weight_temp_1_0_0_q0;
        weight_temp_2_0_0_3_reg_3640 <= weight_temp_2_0_0_q0;
        weight_temp_3_0_0_3_reg_3645 <= weight_temp_3_0_0_q0;
        weight_temp_4_0_0_3_reg_3650 <= weight_temp_4_0_0_q0;
        weight_temp_5_0_0_3_reg_3655 <= weight_temp_5_0_0_q0;
        weight_temp_6_0_0_3_reg_3660 <= weight_temp_6_0_0_q0;
        weight_temp_7_0_0_3_reg_3665 <= weight_temp_7_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv_last_output_V_0_2_reg_3675 <= conv_last_output_V_0_q0;
        conv_last_output_V_1_2_reg_3690 <= conv_last_output_V_1_q0;
        conv_last_output_V_2_2_reg_3705 <= conv_last_output_V_2_q0;
        conv_last_output_V_3_2_reg_3720 <= conv_last_output_V_3_q0;
        conv_last_output_V_4_2_reg_3735 <= conv_last_output_V_4_q0;
        conv_last_output_V_5_2_reg_3750 <= conv_last_output_V_5_q0;
        conv_last_output_V_6_2_reg_3765 <= conv_last_output_V_6_q0;
        conv_last_output_V_7_2_reg_3780 <= conv_last_output_V_7_q0;
        p_Val2_180_1_reg_3685 <= p_Val2_180_1_fu_1386_p2;
        p_Val2_180_2_reg_3700 <= p_Val2_180_2_fu_1403_p2;
        p_Val2_180_3_reg_3715 <= p_Val2_180_3_fu_1420_p2;
        p_Val2_180_4_reg_3730 <= p_Val2_180_4_fu_1437_p2;
        p_Val2_180_5_reg_3745 <= p_Val2_180_5_fu_1454_p2;
        p_Val2_180_6_reg_3760 <= p_Val2_180_6_fu_1471_p2;
        p_Val2_180_7_reg_3775 <= p_Val2_180_7_fu_1488_p2;
        p_Val2_s_reg_3670 <= p_Val2_s_fu_1369_p2;
        tmp_2079_reg_3680 <= p_Val2_s_fu_1369_p2[32'd5];
        tmp_2084_reg_3695 <= p_Val2_180_1_fu_1386_p2[32'd5];
        tmp_2089_reg_3710 <= p_Val2_180_2_fu_1403_p2[32'd5];
        tmp_2094_reg_3725 <= p_Val2_180_3_fu_1420_p2[32'd5];
        tmp_2099_reg_3740 <= p_Val2_180_4_fu_1437_p2[32'd5];
        tmp_2104_reg_3755 <= p_Val2_180_5_fu_1454_p2[32'd5];
        tmp_2109_reg_3770 <= p_Val2_180_6_fu_1471_p2[32'd5];
        tmp_2114_reg_3785 <= p_Val2_180_7_fu_1488_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286))) begin
        conv_last_output_V_0_3_reg_4343 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_1_3_reg_4358 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_2_3_reg_4373 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_3_3_reg_4378 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_4_3_reg_4348 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_5_3_reg_4363 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_6_3_reg_4353 <= tmp_699_cast_fu_3319_p1;
        conv_last_output_V_7_3_reg_4368 <= tmp_699_cast_fu_3319_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_fu_996_p2))) begin
        exitcond_flatten15_reg_3429 <= exitcond_flatten15_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_fu_3166_p2))) begin
        exitcond_mid_reg_4316 <= exitcond_mid_fu_3232_p2;
        j_2_mid_reg_4295 <= j_2_mid_fu_3190_p3;
        k_1_mid2_reg_4321 <= k_1_mid2_fu_3244_p3;
        newIndex9_cast_mid2_s_reg_4311 <= {{arrayNo8_mid2_v_fu_3198_p3[9:3]}};
        tmp_2076_reg_4306 <= tmp_2076_fu_3206_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h_33_reg_3491 <= h_33_fu_1180_p2;
        h_cast_cast1_reg_3477[2 : 0] <= h_cast_cast1_fu_1166_p1[2 : 0];
        h_cast_cast_reg_3482[2 : 0] <= h_cast_cast_fu_1170_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten14_reg_3420))) begin
        i_1_cast_mid2_v_reg_3442 <= i_1_cast_mid2_v_fu_1041_p3;
        j_1_cast_mid2_reg_3461 <= j_1_cast_mid2_fu_1103_p3;
        k_2_reg_3472 <= k_2_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_835_p2))) begin
        i_cast_mid2_v_reg_3380 <= i_cast_mid2_v_fu_867_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        indvar_flatten_next2_reg_4290 <= indvar_flatten_next2_fu_3172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten16_reg_4286))) begin
        j_2_cast_mid2_reg_4332 <= j_2_cast_mid2_fu_3271_p3;
        k_3_reg_4338 <= k_3_fu_3277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_835_p2))) begin
        j_mid2_reg_3374 <= j_mid2_fu_859_p3;
        newIndex_cast_mid2_v_reg_3391 <= {{i_cast_mid2_v_fu_867_p3[9:3]}};
        tmp_reg_3387 <= tmp_fu_875_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_3420))) begin
        k_mid2_reg_3456 <= k_mid2_fu_1095_p3;
        newIndex2_cast_mid2_s_reg_3451 <= {{i_1_cast_mid2_v_fu_1041_p3[9:3]}};
        tmp_2075_reg_3447 <= tmp_2075_fu_1053_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_43_reg_3509 <= w_43_fu_1200_p2;
        w_cast_cast1_reg_3496[2 : 0] <= w_cast_cast1_fu_1186_p1[2 : 0];
        w_cast_cast_reg_3501[2 : 0] <= w_cast_cast_fu_1190_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        weight_V_addr_read_reg_3408 <= m_axi_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_3365))) begin
        weight_V_addr_reg_3402 <= sum_fu_940_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_835_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten14_fu_996_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten16_fu_3166_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state31))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter0) & (1'b0 == ap_enable_reg_pp2_iter1))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_3_reg_4343;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_1_reg_3585;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_0_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_0_ce0 = 1'b1;
    end else begin
        conv_last_output_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_0_d0 = this_assign_1_fu_2947_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (3'd0 == tmp_2075_reg_3447)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (3'd0 == ap_reg_pp2_iter1_tmp_2076_reg_4306)))) begin
        conv_last_output_V_0_we0 = 1'b1;
    end else begin
        conv_last_output_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_3_reg_4358;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_1_reg_3600;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_1_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_1_ce0 = 1'b1;
    end else begin
        conv_last_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_1_d0 = this_assign_1_1_fu_2977_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd1)))) begin
        conv_last_output_V_1_we0 = 1'b1;
    end else begin
        conv_last_output_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_3_reg_4373;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_1_reg_3615;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_2_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_2_ce0 = 1'b1;
    end else begin
        conv_last_output_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_2_d0 = this_assign_1_2_fu_3007_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd2)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd2)))) begin
        conv_last_output_V_2_we0 = 1'b1;
    end else begin
        conv_last_output_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_3_reg_4378;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_1_reg_3620;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_3_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_3_ce0 = 1'b1;
    end else begin
        conv_last_output_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_3_d0 = this_assign_1_3_fu_3037_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd3)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd3)))) begin
        conv_last_output_V_3_we0 = 1'b1;
    end else begin
        conv_last_output_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_3_reg_4348;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_1_reg_3590;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_4_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_4_ce0 = 1'b1;
    end else begin
        conv_last_output_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_4_d0 = this_assign_1_4_fu_3067_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd4)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd4)))) begin
        conv_last_output_V_4_we0 = 1'b1;
    end else begin
        conv_last_output_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_3_reg_4363;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_1_reg_3605;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_5_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_5_ce0 = 1'b1;
    end else begin
        conv_last_output_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_5_d0 = this_assign_1_5_fu_3097_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd5)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd5)))) begin
        conv_last_output_V_5_we0 = 1'b1;
    end else begin
        conv_last_output_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_3_reg_4353;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_1_reg_3595;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_6_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_6_ce0 = 1'b1;
    end else begin
        conv_last_output_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_6_d0 = this_assign_1_6_fu_3127_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd6)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd6)))) begin
        conv_last_output_V_6_we0 = 1'b1;
    end else begin
        conv_last_output_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_3_reg_4368;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = tmp_699_cast_fu_3319_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_1_reg_3610;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_7_address0 = tmp_711_cast_fu_1352_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = tmp_692_cast_fu_1154_p1;
    end else begin
        conv_last_output_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        conv_last_output_V_7_ce0 = 1'b1;
    end else begin
        conv_last_output_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_last_output_V_7_d0 = this_assign_1_7_fu_3157_p3;
    end else if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_d0 = bias_V_q0;
    end else begin
        conv_last_output_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (tmp_2075_reg_3447 == 3'd7)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'd1 == tmp_2077_fu_3352_p3) & (ap_reg_pp2_iter1_tmp_2076_reg_4306 == 3'd7)))) begin
        conv_last_output_V_7_we0 = 1'b1;
    end else begin
        conv_last_output_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_1_phi_fu_693_p4 = i_1_cast_mid2_v_reg_3442;
    end else begin
        i_1_phi_fu_693_p4 = i_1_reg_689;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        i_2_phi_fu_795_p4 = arrayNo8_mid2_v_reg_4301;
    end else begin
        i_2_phi_fu_795_p4 = i_2_reg_791;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond_flatten_reg_3365) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_660_p4 = i_cast_mid2_v_reg_3380;
    end else begin
        i_phi_fu_660_p4 = i_reg_656;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten11_phi_fu_784_p4 = indvar_flatten_next2_reg_4290;
    end else begin
        indvar_flatten11_phi_fu_784_p4 = indvar_flatten11_reg_780;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten12_phi_fu_806_p4 = indvar_flatten_next1_7_reg_4327;
    end else begin
        indvar_flatten12_phi_fu_806_p4 = indvar_flatten12_reg_802;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_1_phi_fu_716_p4 = j_1_cast_mid2_reg_3461;
    end else begin
        j_1_phi_fu_716_p4 = j_1_reg_712;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        j_2_phi_fu_817_p4 = j_2_cast_mid2_reg_4332;
    end else begin
        j_2_phi_fu_817_p4 = j_2_reg_813;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten16_reg_4286) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        k_1_phi_fu_828_p4 = k_3_reg_4338;
    end else begin
        k_1_phi_fu_828_p4 = k_1_reg_824;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        k_phi_fu_728_p4 = k_2_reg_3472;
    end else begin
        k_phi_fu_728_p4 = k_reg_724;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3365) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY))) begin
        m_axi_weight_V_ARVALID = 1'b1;
    end else begin
        m_axi_weight_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        m_axi_weight_V_RREADY = 1'b1;
    end else begin
        m_axi_weight_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3365))) begin
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY;
    end else begin
        weight_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365))) begin
        weight_V_blk_n_R = m_axi_weight_V_RVALID;
    end else begin
        weight_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_0_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_0_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_0_0_address0 = 32'd0;
    end else begin
        weight_temp_0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_0_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_0_0_0_d0 = weight_V_addr_read_reg_3408;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_0_0_d0 = 8'd0;
    end else begin
        weight_temp_0_0_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (3'd0 == ap_reg_pp0_iter9_tmp_reg_3387)))) begin
        weight_temp_0_0_0_we0 = 1'b1;
    end else begin
        weight_temp_0_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_1_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_1_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_1_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd1))) begin
        weight_temp_1_0_0_we0 = 1'b1;
    end else begin
        weight_temp_1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_2_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_2_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_2_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_2_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd2))) begin
        weight_temp_2_0_0_we0 = 1'b1;
    end else begin
        weight_temp_2_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_3_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_3_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_3_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_3_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd3))) begin
        weight_temp_3_0_0_we0 = 1'b1;
    end else begin
        weight_temp_3_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_4_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_4_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_4_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_4_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_4_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd4))) begin
        weight_temp_4_0_0_we0 = 1'b1;
    end else begin
        weight_temp_4_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_5_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_5_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_5_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_5_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_5_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd5))) begin
        weight_temp_5_0_0_we0 = 1'b1;
    end else begin
        weight_temp_5_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_6_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_6_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_6_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_6_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_6_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd6))) begin
        weight_temp_6_0_0_we0 = 1'b1;
    end else begin
        weight_temp_6_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_temp_7_0_0_address0 = tmp_715_cast_fu_1334_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_7_0_0_address0 = tmp_685_cast_fu_984_p1;
    end else begin
        weight_temp_7_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_7_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_7_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_reg_3387 == 3'd7))) begin
        weight_temp_7_0_0_we0 = 1'b1;
    end else begin
        weight_temp_7_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_835_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_835_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten14_fu_996_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten14_fu_996_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond45_fu_1174_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == exitcond46_fu_1194_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond48_fu_1245_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (exitcond49_fu_1257_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (((ap_block_pp2_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (exitcond_flatten16_fu_3166_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (exitcond_flatten16_fu_3166_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if (((ap_block_pp2_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_enable_reg_pp2_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1366_p1 = $signed(input_V_load_reg_3630);

assign Range1_all_ones_1_fu_2254_p2 = ((tmp_249_reg_3858 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2351_p2 = ((tmp_250_reg_3895 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2448_p2 = ((tmp_251_reg_3932 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2545_p2 = ((tmp_252_reg_3969 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2642_p2 = ((tmp_253_reg_4006 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2739_p2 = ((tmp_254_reg_4043 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2836_p2 = ((tmp_255_reg_4080 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_2157_p2 = ((tmp_246_reg_3821 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2259_p2 = ((tmp_249_reg_3858 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2356_p2 = ((tmp_250_reg_3895 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2453_p2 = ((tmp_251_reg_3932 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2550_p2 = ((tmp_252_reg_3969 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2647_p2 = ((tmp_253_reg_4006 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2744_p2 = ((tmp_254_reg_4043 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2841_p2 = ((tmp_255_reg_4080 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2162_p2 = ((tmp_246_reg_3821 == 2'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (1'b0 == m_axi_weight_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_block_state4_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (1'b0 == m_axi_weight_V_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_block_state4_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (1'b0 == m_axi_weight_V_RVALID)));
end

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter9 = ((1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3365) & (1'b0 == m_axi_weight_V_RVALID));
end

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3365) & (1'b0 == ap_sig_ioackin_m_axi_weight_V_ARREADY));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign arrayNo8_mid2_v_fu_3198_p3 = ((exitcond_flatten17_fu_3184_p2[0:0] === 1'b1) ? i_5_fu_3178_p2 : i_2_phi_fu_795_p4);

assign bias_V_address0 = i_1_cast_mid2_fu_1048_p1;

assign brmerge40_demorgan_i_325_fu_2413_p2 = (tmp_2091_reg_3882 & deleted_ones_2_fu_2379_p3);

assign brmerge40_demorgan_i_326_fu_2510_p2 = (tmp_2096_reg_3919 & deleted_ones_3_fu_2476_p3);

assign brmerge40_demorgan_i_327_fu_2607_p2 = (tmp_2101_reg_3956 & deleted_ones_4_fu_2573_p3);

assign brmerge40_demorgan_i_328_fu_2704_p2 = (tmp_2106_reg_3993 & deleted_ones_5_fu_2670_p3);

assign brmerge40_demorgan_i_329_fu_2801_p2 = (tmp_2111_reg_4030 & deleted_ones_6_fu_2767_p3);

assign brmerge40_demorgan_i_330_fu_2898_p2 = (tmp_2116_reg_4067 & deleted_ones_7_fu_2864_p3);

assign brmerge40_demorgan_i_331_fu_2316_p2 = (tmp_2086_reg_3845 & deleted_ones_1_fu_2282_p3);

assign brmerge40_demorgan_i_fu_2219_p2 = (tmp_2081_reg_3808 & deleted_ones_fu_2185_p3);

assign brmerge_i_i_1_fu_2300_p2 = (tmp_2086_reg_3845 | p_not_i_i_1_fu_2294_p2);

assign brmerge_i_i_2_fu_2397_p2 = (tmp_2091_reg_3882 | p_not_i_i_2_fu_2391_p2);

assign brmerge_i_i_3_fu_2494_p2 = (tmp_2096_reg_3919 | p_not_i_i_3_fu_2488_p2);

assign brmerge_i_i_4_fu_2591_p2 = (tmp_2101_reg_3956 | p_not_i_i_4_fu_2585_p2);

assign brmerge_i_i_5_fu_2688_p2 = (tmp_2106_reg_3993 | p_not_i_i_5_fu_2682_p2);

assign brmerge_i_i_6_fu_2785_p2 = (tmp_2111_reg_4030 | p_not_i_i_6_fu_2779_p2);

assign brmerge_i_i_7_fu_2882_p2 = (tmp_2116_reg_4067 | p_not_i_i_7_fu_2876_p2);

assign brmerge_i_i_fu_2203_p2 = (tmp_2081_reg_3808 | p_not_i_i_fu_2197_p2);

assign brmerge_i_i_i_1_fu_2338_p2 = (underflow_1_fu_2333_p2 | overflow_1_fu_2310_p2);

assign brmerge_i_i_i_2_fu_2435_p2 = (underflow_2_fu_2430_p2 | overflow_2_fu_2407_p2);

assign brmerge_i_i_i_3_fu_2532_p2 = (underflow_3_fu_2527_p2 | overflow_3_fu_2504_p2);

assign brmerge_i_i_i_4_fu_2629_p2 = (underflow_4_fu_2624_p2 | overflow_4_fu_2601_p2);

assign brmerge_i_i_i_5_fu_2726_p2 = (underflow_5_fu_2721_p2 | overflow_5_fu_2698_p2);

assign brmerge_i_i_i_6_fu_2823_p2 = (underflow_6_fu_2818_p2 | overflow_6_fu_2795_p2);

assign brmerge_i_i_i_7_fu_2920_p2 = (underflow_7_fu_2915_p2 | overflow_7_fu_2892_p2);

assign brmerge_i_i_i_fu_2241_p2 = (underflow_fu_2236_p2 | overflow_fu_2213_p2);

assign carry_54_1_fu_1648_p2 = (tmp_2085_fu_1620_p3 & tmp_578_1_fu_1642_p2);

assign carry_54_2_fu_1729_p2 = (tmp_2090_fu_1701_p3 & tmp_578_2_fu_1723_p2);

assign carry_54_3_fu_1810_p2 = (tmp_2095_fu_1782_p3 & tmp_578_3_fu_1804_p2);

assign carry_54_4_fu_1891_p2 = (tmp_2100_fu_1863_p3 & tmp_578_4_fu_1885_p2);

assign carry_54_5_fu_1972_p2 = (tmp_2105_fu_1944_p3 & tmp_578_5_fu_1966_p2);

assign carry_54_6_fu_2053_p2 = (tmp_2110_fu_2025_p3 & tmp_578_6_fu_2047_p2);

assign carry_54_7_fu_2134_p2 = (tmp_2115_fu_2106_p3 & tmp_578_7_fu_2128_p2);

assign carry_s_fu_1567_p2 = (tmp_2080_fu_1539_p3 & tmp_245_fu_1561_p2);

assign ci_15_fu_1251_p2 = (ci_reg_758 + 8'd1);

assign ci_cast_cast_fu_1206_p1 = ci_reg_758;

assign co_48_7_fu_1346_p2 = (co_reg_769 + 10'd8);

assign deleted_ones_1_fu_2282_p3 = ((carry_54_1_reg_3851[0:0] === 1'b1) ? p_41_i_i_1_fu_2277_p2 : Range1_all_ones_1_fu_2254_p2);

assign deleted_ones_2_fu_2379_p3 = ((carry_54_2_reg_3888[0:0] === 1'b1) ? p_41_i_i_2_fu_2374_p2 : Range1_all_ones_2_fu_2351_p2);

assign deleted_ones_3_fu_2476_p3 = ((carry_54_3_reg_3925[0:0] === 1'b1) ? p_41_i_i_3_fu_2471_p2 : Range1_all_ones_3_fu_2448_p2);

assign deleted_ones_4_fu_2573_p3 = ((carry_54_4_reg_3962[0:0] === 1'b1) ? p_41_i_i_4_fu_2568_p2 : Range1_all_ones_4_fu_2545_p2);

assign deleted_ones_5_fu_2670_p3 = ((carry_54_5_reg_3999[0:0] === 1'b1) ? p_41_i_i_5_fu_2665_p2 : Range1_all_ones_5_fu_2642_p2);

assign deleted_ones_6_fu_2767_p3 = ((carry_54_6_reg_4036[0:0] === 1'b1) ? p_41_i_i_6_fu_2762_p2 : Range1_all_ones_6_fu_2739_p2);

assign deleted_ones_7_fu_2864_p3 = ((carry_54_7_reg_4073[0:0] === 1'b1) ? p_41_i_i_7_fu_2859_p2 : Range1_all_ones_7_fu_2836_p2);

assign deleted_ones_fu_2185_p3 = ((carry_s_reg_3814[0:0] === 1'b1) ? p_41_i_i_fu_2180_p2 : Range1_all_ones_fu_2157_p2);

assign deleted_zeros_1_fu_2264_p3 = ((carry_54_1_reg_3851[0:0] === 1'b1) ? Range1_all_ones_1_fu_2254_p2 : Range1_all_zeros_1_fu_2259_p2);

assign deleted_zeros_2_fu_2361_p3 = ((carry_54_2_reg_3888[0:0] === 1'b1) ? Range1_all_ones_2_fu_2351_p2 : Range1_all_zeros_2_fu_2356_p2);

assign deleted_zeros_3_fu_2458_p3 = ((carry_54_3_reg_3925[0:0] === 1'b1) ? Range1_all_ones_3_fu_2448_p2 : Range1_all_zeros_3_fu_2453_p2);

assign deleted_zeros_4_fu_2555_p3 = ((carry_54_4_reg_3962[0:0] === 1'b1) ? Range1_all_ones_4_fu_2545_p2 : Range1_all_zeros_4_fu_2550_p2);

assign deleted_zeros_5_fu_2652_p3 = ((carry_54_5_reg_3999[0:0] === 1'b1) ? Range1_all_ones_5_fu_2642_p2 : Range1_all_zeros_5_fu_2647_p2);

assign deleted_zeros_6_fu_2749_p3 = ((carry_54_6_reg_4036[0:0] === 1'b1) ? Range1_all_ones_6_fu_2739_p2 : Range1_all_zeros_6_fu_2744_p2);

assign deleted_zeros_7_fu_2846_p3 = ((carry_54_7_reg_4073[0:0] === 1'b1) ? Range1_all_ones_7_fu_2836_p2 : Range1_all_zeros_7_fu_2841_p2);

assign deleted_zeros_fu_2167_p3 = ((carry_s_reg_3814[0:0] === 1'b1) ? Range1_all_ones_fu_2157_p2 : Range1_all_zeros_fu_2162_p2);

assign exitcond44_fu_1072_p2 = ((k_phi_fu_728_p4 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond45_fu_1174_p2 = ((h_reg_736 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond46_fu_1194_p2 = ((w_reg_747 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond47_fu_3226_p2 = ((k_1_phi_fu_828_p4 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond48_fu_1245_p2 = ((ci_reg_758 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond49_fu_1257_p2 = ((co_reg_769 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond69_mid_fu_1078_p2 = (exitcond44_fu_1072_p2 & not_exitcond_flatten_3_fu_1067_p2);

assign exitcond_flatten14_fu_996_p2 = ((indvar_flatten10_reg_678 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond_flatten15_fu_1008_p2 = ((indvar_flatten6_reg_701 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten16_fu_3166_p2 = ((indvar_flatten11_phi_fu_784_p4 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond_flatten17_fu_3184_p2 = ((indvar_flatten12_phi_fu_806_p4 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_835_p2 = ((indvar_flatten_reg_645 == 17'd98304) ? 1'b1 : 1'b0);

assign exitcond_fu_853_p2 = ((j_reg_667 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3232_p2 = (exitcond47_fu_3226_p2 & not_exitcond_flatten_fu_3220_p2);

assign h_33_fu_1180_p2 = (h_reg_736 + 3'd1);

assign h_cast_cast1_fu_1166_p1 = h_reg_736;

assign h_cast_cast_fu_1170_p1 = h_reg_736;

assign i_1_cast_mid2_fu_1048_p1 = i_1_cast_mid2_v_fu_1041_p3;

assign i_1_cast_mid2_v_fu_1041_p3 = ((exitcond_flatten15_reg_3429[0:0] === 1'b1) ? i_4_fu_1028_p2 : i_1_phi_fu_693_p4);

assign i_3_fu_847_p2 = (10'd1 + i_phi_fu_660_p4);

assign i_4_fu_1028_p2 = (10'd1 + i_1_phi_fu_693_p4);

assign i_5_fu_3178_p2 = (10'd1 + i_2_phi_fu_795_p4);

assign i_cast_mid2_v_fu_867_p3 = ((exitcond_fu_853_p2[0:0] === 1'b1) ? i_3_fu_847_p2 : i_phi_fu_660_p4);

assign indvar_flatten28_op_fu_3252_p2 = (indvar_flatten12_phi_fu_806_p4 + 6'd1);

assign indvar_flatten6_op_fu_1014_p2 = (indvar_flatten6_reg_701 + 6'd1);

assign indvar_flatten_next1_7_fu_3258_p3 = ((exitcond_flatten17_fu_3184_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten28_op_fu_3252_p2);

assign indvar_flatten_next1_fu_1002_p2 = (indvar_flatten10_reg_678 + 14'd1);

assign indvar_flatten_next2_fu_3172_p2 = (indvar_flatten11_phi_fu_784_p4 + 14'd1);

assign indvar_flatten_next7_fu_1020_p3 = ((exitcond_flatten15_fu_1008_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten6_op_fu_1014_p2);

assign indvar_flatten_next_fu_841_p2 = (indvar_flatten_reg_645 + 17'd1);

assign input_V_address0 = input_V_addr_reg_3519;

assign j_1_cast_mid2_cast_fu_1128_p1 = j_1_cast_mid2_reg_3461;

assign j_1_cast_mid2_fu_1103_p3 = ((exitcond69_mid_fu_1078_p2[0:0] === 1'b1) ? j_4_fu_1084_p2 : j_1_mid_fu_1034_p3);

assign j_1_mid_fu_1034_p3 = ((exitcond_flatten15_reg_3429[0:0] === 1'b1) ? 3'd0 : j_1_phi_fu_716_p4);

assign j_2_cast_mid2_cast_fu_3293_p1 = j_2_cast_mid2_reg_4332;

assign j_2_cast_mid2_fu_3271_p3 = ((exitcond_mid_reg_4316[0:0] === 1'b1) ? j_5_fu_3266_p2 : j_2_mid_reg_4295);

assign j_2_mid_fu_3190_p3 = ((exitcond_flatten17_fu_3184_p2[0:0] === 1'b1) ? 3'd0 : j_2_phi_fu_817_p4);

assign j_3_fu_889_p2 = (j_mid2_fu_859_p3 + 8'd1);

assign j_4_fu_1084_p2 = (3'd1 + j_1_mid_fu_1034_p3);

assign j_5_fu_3266_p2 = (3'd1 + j_2_mid_reg_4295);

assign j_cast_cast1_fu_975_p1 = ap_reg_pp0_iter9_j_mid2_reg_3374;

assign j_cast_cast_fu_927_p1 = j_mid2_reg_3374;

assign j_mid2_fu_859_p3 = ((exitcond_fu_853_p2[0:0] === 1'b1) ? 8'd0 : j_reg_667);

assign k_1_cast_cast_fu_3310_p1 = k_1_mid2_reg_4321;

assign k_1_mid2_fu_3244_p3 = ((tmp_578_fu_3238_p2[0:0] === 1'b1) ? 3'd0 : k_1_phi_fu_828_p4);

assign k_2_fu_1111_p2 = (k_mid2_fu_1095_p3 + 3'd1);

assign k_3_fu_3277_p2 = (k_1_mid2_reg_4321 + 3'd1);

assign k_cast_cast_fu_1145_p1 = k_mid2_reg_3456;

assign k_mid2_fu_1095_p3 = ((tmp_574_fu_1090_p2[0:0] === 1'b1) ? 3'd0 : k_phi_fu_728_p4);

assign m_axi_weight_V_ARADDR = weight_V_addr_reg_3402;

assign m_axi_weight_V_ARBURST = 2'd0;

assign m_axi_weight_V_ARCACHE = 4'd0;

assign m_axi_weight_V_ARID = 1'd0;

assign m_axi_weight_V_ARLEN = 32'd1;

assign m_axi_weight_V_ARLOCK = 2'd0;

assign m_axi_weight_V_ARPROT = 3'd0;

assign m_axi_weight_V_ARQOS = 4'd0;

assign m_axi_weight_V_ARREGION = 4'd0;

assign m_axi_weight_V_ARSIZE = 3'd0;

assign m_axi_weight_V_ARUSER = 1'd0;

assign m_axi_weight_V_AWADDR = 32'd0;

assign m_axi_weight_V_AWBURST = 2'd0;

assign m_axi_weight_V_AWCACHE = 4'd0;

assign m_axi_weight_V_AWID = 1'd0;

assign m_axi_weight_V_AWLEN = 32'd0;

assign m_axi_weight_V_AWLOCK = 2'd0;

assign m_axi_weight_V_AWPROT = 3'd0;

assign m_axi_weight_V_AWQOS = 4'd0;

assign m_axi_weight_V_AWREGION = 4'd0;

assign m_axi_weight_V_AWSIZE = 3'd0;

assign m_axi_weight_V_AWUSER = 1'd0;

assign m_axi_weight_V_AWVALID = 1'b0;

assign m_axi_weight_V_BREADY = 1'b0;

assign m_axi_weight_V_WDATA = 8'd0;

assign m_axi_weight_V_WID = 1'd0;

assign m_axi_weight_V_WLAST = 1'b0;

assign m_axi_weight_V_WSTRB = 1'd0;

assign m_axi_weight_V_WUSER = 1'd0;

assign m_axi_weight_V_WVALID = 1'b0;

assign newIndex3_fu_1263_p4 = {{co_reg_769[9:3]}};

assign not_exitcond_flatten_3_fu_1067_p2 = (exitcond_flatten15_reg_3429 ^ 1'd1);

assign not_exitcond_flatten_fu_3220_p2 = (exitcond_flatten17_fu_3184_p2 ^ 1'd1);

assign overflow_1_fu_2310_p2 = (brmerge_i_i_1_fu_2300_p2 & tmp_583_1_fu_2305_p2);

assign overflow_2_fu_2407_p2 = (brmerge_i_i_2_fu_2397_p2 & tmp_583_2_fu_2402_p2);

assign overflow_3_fu_2504_p2 = (brmerge_i_i_3_fu_2494_p2 & tmp_583_3_fu_2499_p2);

assign overflow_4_fu_2601_p2 = (brmerge_i_i_4_fu_2591_p2 & tmp_583_4_fu_2596_p2);

assign overflow_5_fu_2698_p2 = (brmerge_i_i_5_fu_2688_p2 & tmp_583_5_fu_2693_p2);

assign overflow_6_fu_2795_p2 = (brmerge_i_i_6_fu_2785_p2 & tmp_583_6_fu_2790_p2);

assign overflow_7_fu_2892_p2 = (brmerge_i_i_7_fu_2882_p2 & tmp_583_7_fu_2887_p2);

assign overflow_fu_2213_p2 = (brmerge_i_i_fu_2203_p2 & tmp_248_fu_2208_p2);

assign p_38_i_i_1_fu_2289_p2 = (carry_54_1_reg_3851 & Range1_all_ones_1_fu_2254_p2);

assign p_38_i_i_2_fu_2386_p2 = (carry_54_2_reg_3888 & Range1_all_ones_2_fu_2351_p2);

assign p_38_i_i_3_fu_2483_p2 = (carry_54_3_reg_3925 & Range1_all_ones_3_fu_2448_p2);

assign p_38_i_i_4_fu_2580_p2 = (carry_54_4_reg_3962 & Range1_all_ones_4_fu_2545_p2);

assign p_38_i_i_5_fu_2677_p2 = (carry_54_5_reg_3999 & Range1_all_ones_5_fu_2642_p2);

assign p_38_i_i_6_fu_2774_p2 = (carry_54_6_reg_4036 & Range1_all_ones_6_fu_2739_p2);

assign p_38_i_i_7_fu_2871_p2 = (carry_54_7_reg_4073 & Range1_all_ones_7_fu_2836_p2);

assign p_38_i_i_fu_2192_p2 = (carry_s_reg_3814 & Range1_all_ones_fu_2157_p2);

assign p_41_i_i_1_fu_2277_p2 = (tmp_2083_reg_3832 & tmp_581_1_fu_2271_p2);

assign p_41_i_i_2_fu_2374_p2 = (tmp_2088_reg_3869 & tmp_581_2_fu_2368_p2);

assign p_41_i_i_3_fu_2471_p2 = (tmp_2093_reg_3906 & tmp_581_3_fu_2465_p2);

assign p_41_i_i_4_fu_2568_p2 = (tmp_2098_reg_3943 & tmp_581_4_fu_2562_p2);

assign p_41_i_i_5_fu_2665_p2 = (tmp_2103_reg_3980 & tmp_581_5_fu_2659_p2);

assign p_41_i_i_6_fu_2762_p2 = (tmp_2108_reg_4017 & tmp_581_6_fu_2756_p2);

assign p_41_i_i_7_fu_2859_p2 = (tmp_2113_reg_4054 & tmp_581_7_fu_2853_p2);

assign p_41_i_i_fu_2180_p2 = (tmp_2078_reg_3795 & tmp_247_fu_2174_p2);

assign p_Val2_180_1_fu_1386_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_1_fu_1386_p1 = weight_temp_1_0_0_3_reg_3635;

assign p_Val2_180_1_fu_1386_p2 = ($signed(p_Val2_180_1_fu_1386_p0) * $signed(p_Val2_180_1_fu_1386_p1));

assign p_Val2_180_2_fu_1403_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_2_fu_1403_p1 = weight_temp_2_0_0_3_reg_3640;

assign p_Val2_180_2_fu_1403_p2 = ($signed(p_Val2_180_2_fu_1403_p0) * $signed(p_Val2_180_2_fu_1403_p1));

assign p_Val2_180_3_fu_1420_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_3_fu_1420_p1 = weight_temp_3_0_0_3_reg_3645;

assign p_Val2_180_3_fu_1420_p2 = ($signed(p_Val2_180_3_fu_1420_p0) * $signed(p_Val2_180_3_fu_1420_p1));

assign p_Val2_180_4_fu_1437_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_4_fu_1437_p1 = weight_temp_4_0_0_3_reg_3650;

assign p_Val2_180_4_fu_1437_p2 = ($signed(p_Val2_180_4_fu_1437_p0) * $signed(p_Val2_180_4_fu_1437_p1));

assign p_Val2_180_5_fu_1454_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_5_fu_1454_p1 = weight_temp_5_0_0_3_reg_3655;

assign p_Val2_180_5_fu_1454_p2 = ($signed(p_Val2_180_5_fu_1454_p0) * $signed(p_Val2_180_5_fu_1454_p1));

assign p_Val2_180_6_fu_1471_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_6_fu_1471_p1 = weight_temp_6_0_0_3_reg_3660;

assign p_Val2_180_6_fu_1471_p2 = ($signed(p_Val2_180_6_fu_1471_p0) * $signed(p_Val2_180_6_fu_1471_p1));

assign p_Val2_180_7_fu_1488_p0 = OP2_V_fu_1366_p1;

assign p_Val2_180_7_fu_1488_p1 = weight_temp_7_0_0_3_reg_3665;

assign p_Val2_180_7_fu_1488_p2 = ($signed(p_Val2_180_7_fu_1488_p0) * $signed(p_Val2_180_7_fu_1488_p1));

assign p_Val2_181_1_fu_1594_p2 = ($signed(p_Val2_180_1_reg_3685) + $signed(tmp_570_1_cast_fu_1590_p1));

assign p_Val2_181_2_fu_1675_p2 = ($signed(p_Val2_180_2_reg_3700) + $signed(tmp_570_2_cast_fu_1671_p1));

assign p_Val2_181_3_fu_1756_p2 = ($signed(p_Val2_180_3_reg_3715) + $signed(tmp_570_3_cast_fu_1752_p1));

assign p_Val2_181_4_fu_1837_p2 = ($signed(p_Val2_180_4_reg_3730) + $signed(tmp_570_4_cast_fu_1833_p1));

assign p_Val2_181_5_fu_1918_p2 = ($signed(p_Val2_180_5_reg_3745) + $signed(tmp_570_5_cast_fu_1914_p1));

assign p_Val2_181_6_fu_1999_p2 = ($signed(p_Val2_180_6_reg_3760) + $signed(tmp_570_6_cast_fu_1995_p1));

assign p_Val2_181_7_fu_2080_p2 = ($signed(p_Val2_180_7_reg_3775) + $signed(tmp_570_7_cast_fu_2076_p1));

assign p_Val2_182_1_fu_1607_p4 = {{p_Val2_181_1_fu_1594_p2[13:6]}};

assign p_Val2_182_2_fu_1688_p4 = {{p_Val2_181_2_fu_1675_p2[13:6]}};

assign p_Val2_182_3_fu_1769_p4 = {{p_Val2_181_3_fu_1756_p2[13:6]}};

assign p_Val2_182_4_fu_1850_p4 = {{p_Val2_181_4_fu_1837_p2[13:6]}};

assign p_Val2_182_5_fu_1931_p4 = {{p_Val2_181_5_fu_1918_p2[13:6]}};

assign p_Val2_182_6_fu_2012_p4 = {{p_Val2_181_6_fu_1999_p2[13:6]}};

assign p_Val2_182_7_fu_2093_p4 = {{p_Val2_181_7_fu_2080_p2[13:6]}};

assign p_Val2_183_1_481_fu_2971_p3 = ((underflow_1_reg_4126[0:0] === 1'b1) ? 8'd128 : p_Val2_183_1_reg_3839);

assign p_Val2_183_1_fu_1628_p2 = (tmp_574_1_fu_1617_p1 + p_Val2_182_1_fu_1607_p4);

assign p_Val2_183_2_482_fu_3001_p3 = ((underflow_2_reg_4151[0:0] === 1'b1) ? 8'd128 : p_Val2_183_2_reg_3876);

assign p_Val2_183_2_fu_1709_p2 = (tmp_574_2_fu_1698_p1 + p_Val2_182_2_fu_1688_p4);

assign p_Val2_183_3_483_fu_3031_p3 = ((underflow_3_reg_4176[0:0] === 1'b1) ? 8'd128 : p_Val2_183_3_reg_3913);

assign p_Val2_183_3_fu_1790_p2 = (tmp_574_3_fu_1779_p1 + p_Val2_182_3_fu_1769_p4);

assign p_Val2_183_4_484_fu_3061_p3 = ((underflow_4_reg_4201[0:0] === 1'b1) ? 8'd128 : p_Val2_183_4_reg_3950);

assign p_Val2_183_4_fu_1871_p2 = (tmp_574_4_fu_1860_p1 + p_Val2_182_4_fu_1850_p4);

assign p_Val2_183_5_485_fu_3091_p3 = ((underflow_5_reg_4226[0:0] === 1'b1) ? 8'd128 : p_Val2_183_5_reg_3987);

assign p_Val2_183_5_fu_1952_p2 = (tmp_574_5_fu_1941_p1 + p_Val2_182_5_fu_1931_p4);

assign p_Val2_183_6_486_fu_3121_p3 = ((underflow_6_reg_4251[0:0] === 1'b1) ? 8'd128 : p_Val2_183_6_reg_4024);

assign p_Val2_183_6_fu_2033_p2 = (tmp_574_6_fu_2022_p1 + p_Val2_182_6_fu_2012_p4);

assign p_Val2_183_7_487_fu_3151_p3 = ((underflow_7_reg_4276[0:0] === 1'b1) ? 8'd128 : p_Val2_183_7_reg_4061);

assign p_Val2_183_7_fu_2114_p2 = (tmp_574_7_fu_2103_p1 + p_Val2_182_7_fu_2093_p4);

assign p_Val2_183_mux_1_fu_2965_p3 = ((brmerge_i_i_i_1_reg_4131[0:0] === 1'b1) ? 8'd127 : p_Val2_183_1_reg_3839);

assign p_Val2_183_mux_2_fu_2995_p3 = ((brmerge_i_i_i_2_reg_4156[0:0] === 1'b1) ? 8'd127 : p_Val2_183_2_reg_3876);

assign p_Val2_183_mux_3_fu_3025_p3 = ((brmerge_i_i_i_3_reg_4181[0:0] === 1'b1) ? 8'd127 : p_Val2_183_3_reg_3913);

assign p_Val2_183_mux_4_fu_3055_p3 = ((brmerge_i_i_i_4_reg_4206[0:0] === 1'b1) ? 8'd127 : p_Val2_183_4_reg_3950);

assign p_Val2_183_mux_5_fu_3085_p3 = ((brmerge_i_i_i_5_reg_4231[0:0] === 1'b1) ? 8'd127 : p_Val2_183_5_reg_3987);

assign p_Val2_183_mux_6_fu_3115_p3 = ((brmerge_i_i_i_6_reg_4256[0:0] === 1'b1) ? 8'd127 : p_Val2_183_6_reg_4024);

assign p_Val2_183_mux_7_fu_3145_p3 = ((brmerge_i_i_i_7_reg_4281[0:0] === 1'b1) ? 8'd127 : p_Val2_183_7_reg_4061);

assign p_Val2_183_mux_fu_2935_p3 = ((brmerge_i_i_i_reg_4106[0:0] === 1'b1) ? 8'd127 : p_Val2_75_reg_3802);

assign p_Val2_73_fu_1513_p2 = ($signed(p_Val2_s_reg_3670) + $signed(tmp_348_cast_fu_1509_p1));

assign p_Val2_74_fu_1526_p4 = {{p_Val2_73_fu_1513_p2[13:6]}};

assign p_Val2_75_fu_1547_p2 = (tmp_244_fu_1536_p1 + p_Val2_74_fu_1526_p4);

assign p_Val2_s_480_fu_2941_p3 = ((underflow_reg_4101[0:0] === 1'b1) ? 8'd128 : p_Val2_75_reg_3802);

assign p_Val2_s_fu_1369_p0 = OP2_V_fu_1366_p1;

assign p_Val2_s_fu_1369_p1 = weight_temp_0_0_0_4_reg_3625;

assign p_Val2_s_fu_1369_p2 = ($signed(p_Val2_s_fu_1369_p0) * $signed(p_Val2_s_fu_1369_p1));

assign p_not_i_i_1_fu_2294_p2 = (deleted_zeros_1_fu_2264_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2391_p2 = (deleted_zeros_2_fu_2361_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2488_p2 = (deleted_zeros_3_fu_2458_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2585_p2 = (deleted_zeros_4_fu_2555_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2682_p2 = (deleted_zeros_5_fu_2652_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2779_p2 = (deleted_zeros_6_fu_2749_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2876_p2 = (deleted_zeros_7_fu_2846_p3 ^ 1'd1);

assign p_not_i_i_fu_2197_p2 = (deleted_zeros_fu_2167_p3 ^ 1'd1);

assign p_shl1_cast_fu_965_p1 = tmp_569_fu_958_p3;

assign p_shl2_cast_fu_902_p1 = tmp_565_fu_895_p3;

assign p_shl3_cast_fu_913_p1 = tmp_566_fu_906_p3;

assign p_shl5_cast_fu_1319_p1 = tmp_588_fu_1311_p3;

assign sum_fu_940_p2 = ($signed(tmp_684_cast_fu_936_p1) + $signed(conv_last_weight_V9));

assign this_assign_1_1_fu_2977_p3 = ((underflow_not_1_fu_2960_p2[0:0] === 1'b1) ? p_Val2_183_mux_1_fu_2965_p3 : p_Val2_183_1_481_fu_2971_p3);

assign this_assign_1_2_fu_3007_p3 = ((underflow_not_2_fu_2990_p2[0:0] === 1'b1) ? p_Val2_183_mux_2_fu_2995_p3 : p_Val2_183_2_482_fu_3001_p3);

assign this_assign_1_3_fu_3037_p3 = ((underflow_not_3_fu_3020_p2[0:0] === 1'b1) ? p_Val2_183_mux_3_fu_3025_p3 : p_Val2_183_3_483_fu_3031_p3);

assign this_assign_1_4_fu_3067_p3 = ((underflow_not_4_fu_3050_p2[0:0] === 1'b1) ? p_Val2_183_mux_4_fu_3055_p3 : p_Val2_183_4_484_fu_3061_p3);

assign this_assign_1_5_fu_3097_p3 = ((underflow_not_5_fu_3080_p2[0:0] === 1'b1) ? p_Val2_183_mux_5_fu_3085_p3 : p_Val2_183_5_485_fu_3091_p3);

assign this_assign_1_6_fu_3127_p3 = ((underflow_not_6_fu_3110_p2[0:0] === 1'b1) ? p_Val2_183_mux_6_fu_3115_p3 : p_Val2_183_6_486_fu_3121_p3);

assign this_assign_1_7_fu_3157_p3 = ((underflow_not_7_fu_3140_p2[0:0] === 1'b1) ? p_Val2_183_mux_7_fu_3145_p3 : p_Val2_183_7_487_fu_3151_p3);

assign this_assign_1_fu_2947_p3 = ((underflow_not_fu_2930_p2[0:0] === 1'b1) ? p_Val2_183_mux_fu_2935_p3 : p_Val2_s_480_fu_2941_p3);

assign tmp10_fu_3046_p2 = (brmerge40_demorgan_i_327_reg_4196 | tmp_583_4_reg_4191);

assign tmp11_demorgan_fu_2709_p2 = (p_38_i_i_5_fu_2677_p2 | brmerge40_demorgan_i_328_fu_2704_p2);

assign tmp11_fu_2715_p2 = (tmp11_demorgan_fu_2709_p2 ^ 1'd1);

assign tmp12_fu_3076_p2 = (brmerge40_demorgan_i_328_reg_4221 | tmp_583_5_reg_4216);

assign tmp13_demorgan_fu_2806_p2 = (p_38_i_i_6_fu_2774_p2 | brmerge40_demorgan_i_329_fu_2801_p2);

assign tmp13_fu_2812_p2 = (tmp13_demorgan_fu_2806_p2 ^ 1'd1);

assign tmp14_fu_3106_p2 = (brmerge40_demorgan_i_329_reg_4246 | tmp_583_6_reg_4241);

assign tmp15_demorgan_fu_2903_p2 = (p_38_i_i_7_fu_2871_p2 | brmerge40_demorgan_i_330_fu_2898_p2);

assign tmp15_fu_2909_p2 = (tmp15_demorgan_fu_2903_p2 ^ 1'd1);

assign tmp16_fu_3136_p2 = (brmerge40_demorgan_i_330_reg_4271 | tmp_583_7_reg_4266);

assign tmp1_demorgan_fu_2224_p2 = (p_38_i_i_fu_2192_p2 | brmerge40_demorgan_i_fu_2219_p2);

assign tmp1_fu_2230_p2 = (tmp1_demorgan_fu_2224_p2 ^ 1'd1);

assign tmp2_fu_2926_p2 = (brmerge40_demorgan_i_reg_4096 | tmp_248_reg_4091);

assign tmp3_demorgan_fu_2321_p2 = (p_38_i_i_1_fu_2289_p2 | brmerge40_demorgan_i_331_fu_2316_p2);

assign tmp3_fu_2327_p2 = (tmp3_demorgan_fu_2321_p2 ^ 1'd1);

assign tmp4_fu_2956_p2 = (brmerge40_demorgan_i_331_reg_4121 | tmp_583_1_reg_4116);

assign tmp5_demorgan_fu_2418_p2 = (p_38_i_i_2_fu_2386_p2 | brmerge40_demorgan_i_325_fu_2413_p2);

assign tmp5_fu_2424_p2 = (tmp5_demorgan_fu_2418_p2 ^ 1'd1);

assign tmp6_fu_2986_p2 = (brmerge40_demorgan_i_325_reg_4146 | tmp_583_2_reg_4141);

assign tmp7_demorgan_fu_2515_p2 = (p_38_i_i_3_fu_2483_p2 | brmerge40_demorgan_i_326_fu_2510_p2);

assign tmp7_fu_2521_p2 = (tmp7_demorgan_fu_2515_p2 ^ 1'd1);

assign tmp8_fu_3016_p2 = (brmerge40_demorgan_i_326_reg_4171 | tmp_583_3_reg_4166);

assign tmp9_demorgan_fu_2612_p2 = (p_38_i_i_4_fu_2580_p2 | brmerge40_demorgan_i_327_fu_2607_p2);

assign tmp9_fu_2618_p2 = (tmp9_demorgan_fu_2612_p2 ^ 1'd1);

assign tmp_2075_fu_1053_p1 = i_1_cast_mid2_v_fu_1041_p3[2:0];

assign tmp_2076_fu_3206_p1 = arrayNo8_mid2_v_fu_3198_p3[2:0];

assign tmp_2077_fu_3352_p3 = tmp_243_fu_3331_p10[32'd7];

assign tmp_2080_fu_1539_p3 = p_Val2_73_fu_1513_p2[32'd13];

assign tmp_2081_fu_1553_p3 = p_Val2_75_fu_1547_p2[32'd7];

assign tmp_2082_fu_2150_p3 = p_Val2_73_reg_3790[32'd14];

assign tmp_2085_fu_1620_p3 = p_Val2_181_1_fu_1594_p2[32'd13];

assign tmp_2086_fu_1634_p3 = p_Val2_183_1_fu_1628_p2[32'd7];

assign tmp_2087_fu_2247_p3 = p_Val2_181_1_reg_3827[32'd14];

assign tmp_2090_fu_1701_p3 = p_Val2_181_2_fu_1675_p2[32'd13];

assign tmp_2091_fu_1715_p3 = p_Val2_183_2_fu_1709_p2[32'd7];

assign tmp_2092_fu_2344_p3 = p_Val2_181_2_reg_3864[32'd14];

assign tmp_2095_fu_1782_p3 = p_Val2_181_3_fu_1756_p2[32'd13];

assign tmp_2096_fu_1796_p3 = p_Val2_183_3_fu_1790_p2[32'd7];

assign tmp_2097_fu_2441_p3 = p_Val2_181_3_reg_3901[32'd14];

assign tmp_2100_fu_1863_p3 = p_Val2_181_4_fu_1837_p2[32'd13];

assign tmp_2101_fu_1877_p3 = p_Val2_183_4_fu_1871_p2[32'd7];

assign tmp_2102_fu_2538_p3 = p_Val2_181_4_reg_3938[32'd14];

assign tmp_2105_fu_1944_p3 = p_Val2_181_5_fu_1918_p2[32'd13];

assign tmp_2106_fu_1958_p3 = p_Val2_183_5_fu_1952_p2[32'd7];

assign tmp_2107_fu_2635_p3 = p_Val2_181_5_reg_3975[32'd14];

assign tmp_2110_fu_2025_p3 = p_Val2_181_6_fu_1999_p2[32'd13];

assign tmp_2111_fu_2039_p3 = p_Val2_183_6_fu_2033_p2[32'd7];

assign tmp_2112_fu_2732_p3 = p_Val2_181_6_reg_4012[32'd14];

assign tmp_2115_fu_2106_p3 = p_Val2_181_7_fu_2080_p2[32'd13];

assign tmp_2116_fu_2120_p3 = p_Val2_183_7_fu_2114_p2[32'd7];

assign tmp_2117_fu_2829_p3 = p_Val2_181_7_reg_4049[32'd14];

assign tmp_244_fu_1536_p1 = tmp_2079_reg_3680;

assign tmp_245_fu_1561_p2 = (tmp_2081_fu_1553_p3 ^ 1'd1);

assign tmp_247_fu_2174_p2 = (tmp_2082_fu_2150_p3 ^ 1'd1);

assign tmp_248_fu_2208_p2 = (tmp_2078_reg_3795 ^ 1'd1);

assign tmp_348_cast_fu_1509_p1 = $signed(tmp_s_fu_1502_p3);

assign tmp_565_fu_895_p3 = {{i_cast_mid2_v_reg_3380}, {8'd0}};

assign tmp_566_fu_906_p3 = {{i_cast_mid2_v_reg_3380}, {6'd0}};

assign tmp_567_fu_917_p2 = (p_shl2_cast_fu_902_p1 - p_shl3_cast_fu_913_p1);

assign tmp_568_fu_951_p3 = {{ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391}, {8'd0}};

assign tmp_569_fu_958_p3 = {{ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391}, {6'd0}};

assign tmp_570_1_cast_fu_1590_p1 = $signed(tmp_570_1_fu_1583_p3);

assign tmp_570_1_fu_1583_p3 = {{conv_last_output_V_1_2_reg_3690}, {6'd0}};

assign tmp_570_2_cast_fu_1671_p1 = $signed(tmp_570_2_fu_1664_p3);

assign tmp_570_2_fu_1664_p3 = {{conv_last_output_V_2_2_reg_3705}, {6'd0}};

assign tmp_570_3_cast_fu_1752_p1 = $signed(tmp_570_3_fu_1745_p3);

assign tmp_570_3_fu_1745_p3 = {{conv_last_output_V_3_2_reg_3720}, {6'd0}};

assign tmp_570_4_cast_fu_1833_p1 = $signed(tmp_570_4_fu_1826_p3);

assign tmp_570_4_fu_1826_p3 = {{conv_last_output_V_4_2_reg_3735}, {6'd0}};

assign tmp_570_5_cast_fu_1914_p1 = $signed(tmp_570_5_fu_1907_p3);

assign tmp_570_5_fu_1907_p3 = {{conv_last_output_V_5_2_reg_3750}, {6'd0}};

assign tmp_570_6_cast_fu_1995_p1 = $signed(tmp_570_6_fu_1988_p3);

assign tmp_570_6_fu_1988_p3 = {{conv_last_output_V_6_2_reg_3765}, {6'd0}};

assign tmp_570_7_cast_fu_2076_p1 = $signed(tmp_570_7_fu_2069_p3);

assign tmp_570_7_fu_2069_p3 = {{conv_last_output_V_7_2_reg_3780}, {6'd0}};

assign tmp_570_fu_969_p2 = (tmp_568_fu_951_p3 - p_shl1_cast_fu_965_p1);

assign tmp_571_fu_930_p2 = ($signed(j_cast_cast_fu_927_p1) + $signed(tmp_680_cast_fu_923_p1));

assign tmp_572_fu_978_p2 = (j_cast_cast1_fu_975_p1 + tmp_570_fu_969_p2);

assign tmp_573_fu_1117_p3 = {{newIndex2_cast_mid2_s_reg_3451}, {2'd0}};

assign tmp_574_1_fu_1617_p1 = tmp_2084_reg_3695;

assign tmp_574_2_fu_1698_p1 = tmp_2089_reg_3710;

assign tmp_574_3_fu_1779_p1 = tmp_2094_reg_3725;

assign tmp_574_4_fu_1860_p1 = tmp_2099_reg_3740;

assign tmp_574_5_fu_1941_p1 = tmp_2104_reg_3755;

assign tmp_574_6_fu_2022_p1 = tmp_2109_reg_3770;

assign tmp_574_7_fu_2103_p1 = tmp_2114_reg_3785;

assign tmp_574_fu_1090_p2 = (exitcond69_mid_fu_1078_p2 | exitcond_flatten15_reg_3429);

assign tmp_575_fu_1131_p2 = (tmp_687_cast_fu_1124_p1 + j_1_cast_mid2_cast_fu_1128_p1);

assign tmp_576_fu_1148_p2 = (tmp_691_cast_fu_1137_p3 + k_cast_cast_fu_1145_p1);

assign tmp_577_fu_3282_p3 = {{newIndex9_cast_mid2_s_reg_4311}, {2'd0}};

assign tmp_578_1_fu_1642_p2 = (tmp_2086_fu_1634_p3 ^ 1'd1);

assign tmp_578_2_fu_1723_p2 = (tmp_2091_fu_1715_p3 ^ 1'd1);

assign tmp_578_3_fu_1804_p2 = (tmp_2096_fu_1796_p3 ^ 1'd1);

assign tmp_578_4_fu_1885_p2 = (tmp_2101_fu_1877_p3 ^ 1'd1);

assign tmp_578_5_fu_1966_p2 = (tmp_2106_fu_1958_p3 ^ 1'd1);

assign tmp_578_6_fu_2047_p2 = (tmp_2111_fu_2039_p3 ^ 1'd1);

assign tmp_578_7_fu_2128_p2 = (tmp_2116_fu_2120_p3 ^ 1'd1);

assign tmp_578_fu_3238_p2 = (exitcond_mid_fu_3232_p2 | exitcond_flatten17_fu_3184_p2);

assign tmp_579_fu_3296_p2 = (tmp_694_cast_fu_3289_p1 + j_2_cast_mid2_cast_fu_3293_p1);

assign tmp_580_fu_3313_p2 = (tmp_698_cast_fu_3302_p3 + k_1_cast_cast_fu_3310_p1);

assign tmp_581_1_fu_2271_p2 = (tmp_2087_fu_2247_p3 ^ 1'd1);

assign tmp_581_2_fu_2368_p2 = (tmp_2092_fu_2344_p3 ^ 1'd1);

assign tmp_581_3_fu_2465_p2 = (tmp_2097_fu_2441_p3 ^ 1'd1);

assign tmp_581_4_fu_2562_p2 = (tmp_2102_fu_2538_p3 ^ 1'd1);

assign tmp_581_5_fu_2659_p2 = (tmp_2107_fu_2635_p3 ^ 1'd1);

assign tmp_581_6_fu_2756_p2 = (tmp_2112_fu_2732_p3 ^ 1'd1);

assign tmp_581_7_fu_2853_p2 = (tmp_2117_fu_2829_p3 ^ 1'd1);

assign tmp_581_fu_1210_p3 = {{ci_reg_758}, {2'd0}};

assign tmp_582_fu_1222_p2 = (h_cast_cast_reg_3482 + tmp_701_cast_fu_1218_p1);

assign tmp_583_1_fu_2305_p2 = (tmp_2083_reg_3832 ^ 1'd1);

assign tmp_583_2_fu_2402_p2 = (tmp_2088_reg_3869 ^ 1'd1);

assign tmp_583_3_fu_2499_p2 = (tmp_2093_reg_3906 ^ 1'd1);

assign tmp_583_4_fu_2596_p2 = (tmp_2098_reg_3943 ^ 1'd1);

assign tmp_583_5_fu_2693_p2 = (tmp_2103_reg_3980 ^ 1'd1);

assign tmp_583_6_fu_2790_p2 = (tmp_2108_reg_4017 ^ 1'd1);

assign tmp_583_7_fu_2887_p2 = (tmp_2113_reg_4054 ^ 1'd1);

assign tmp_583_fu_1235_p2 = (w_cast_cast_reg_3501 + tmp_704_cast_fu_1227_p3);

assign tmp_584_fu_1273_p3 = {{newIndex3_fu_1263_p4}, {2'd0}};

assign tmp_585_fu_1285_p2 = (tmp_707_cast_fu_1281_p1 + h_cast_cast1_reg_3477);

assign tmp_586_fu_1298_p2 = (tmp_710_cast_fu_1290_p3 + w_cast_cast1_reg_3496);

assign tmp_587_fu_1303_p3 = {{newIndex3_fu_1263_p4}, {8'd0}};

assign tmp_588_fu_1311_p3 = {{newIndex3_fu_1263_p4}, {6'd0}};

assign tmp_589_fu_1323_p2 = (tmp_587_fu_1303_p3 - p_shl5_cast_fu_1319_p1);

assign tmp_590_fu_1329_p2 = (tmp_589_fu_1323_p2 + ci_cast_cast_reg_3514);

assign tmp_680_cast_fu_923_p1 = $signed(tmp_567_fu_917_p2);

assign tmp_684_cast_fu_936_p1 = $signed(tmp_571_fu_930_p2);

assign tmp_685_cast_fu_984_p1 = $signed(tmp_572_fu_978_p2);

assign tmp_687_cast_fu_1124_p1 = tmp_573_fu_1117_p3;

assign tmp_691_cast_fu_1137_p3 = {{tmp_575_fu_1131_p2}, {2'd0}};

assign tmp_692_cast_fu_1154_p1 = tmp_576_fu_1148_p2;

assign tmp_694_cast_fu_3289_p1 = tmp_577_fu_3282_p3;

assign tmp_698_cast_fu_3302_p3 = {{tmp_579_fu_3296_p2}, {2'd0}};

assign tmp_699_cast_fu_3319_p1 = tmp_580_fu_3313_p2;

assign tmp_701_cast_fu_1218_p1 = tmp_581_fu_1210_p3;

assign tmp_704_cast_fu_1227_p3 = {{tmp_582_fu_1222_p2}, {2'd0}};

assign tmp_705_cast_fu_1240_p1 = tmp_583_fu_1235_p2;

assign tmp_707_cast_fu_1281_p1 = tmp_584_fu_1273_p3;

assign tmp_710_cast_fu_1290_p3 = {{tmp_585_fu_1285_p2}, {2'd0}};

assign tmp_711_cast_fu_1352_p1 = tmp_586_reg_3535;

assign tmp_715_cast_fu_1334_p1 = $signed(tmp_590_fu_1329_p2);

assign tmp_fu_875_p1 = i_cast_mid2_v_fu_867_p3[2:0];

assign tmp_s_fu_1502_p3 = {{conv_last_output_V_0_2_reg_3675}, {6'd0}};

assign underflow_1_fu_2333_p2 = (tmp_2083_reg_3832 & tmp3_fu_2327_p2);

assign underflow_2_fu_2430_p2 = (tmp_2088_reg_3869 & tmp5_fu_2424_p2);

assign underflow_3_fu_2527_p2 = (tmp_2093_reg_3906 & tmp7_fu_2521_p2);

assign underflow_4_fu_2624_p2 = (tmp_2098_reg_3943 & tmp9_fu_2618_p2);

assign underflow_5_fu_2721_p2 = (tmp_2103_reg_3980 & tmp11_fu_2715_p2);

assign underflow_6_fu_2818_p2 = (tmp_2108_reg_4017 & tmp13_fu_2812_p2);

assign underflow_7_fu_2915_p2 = (tmp_2113_reg_4054 & tmp15_fu_2909_p2);

assign underflow_fu_2236_p2 = (tmp_2078_reg_3795 & tmp1_fu_2230_p2);

assign underflow_not_1_fu_2960_p2 = (tmp4_fu_2956_p2 | p_38_i_i_1_reg_4111);

assign underflow_not_2_fu_2990_p2 = (tmp6_fu_2986_p2 | p_38_i_i_2_reg_4136);

assign underflow_not_3_fu_3020_p2 = (tmp8_fu_3016_p2 | p_38_i_i_3_reg_4161);

assign underflow_not_4_fu_3050_p2 = (tmp10_fu_3046_p2 | p_38_i_i_4_reg_4186);

assign underflow_not_5_fu_3080_p2 = (tmp12_fu_3076_p2 | p_38_i_i_5_reg_4211);

assign underflow_not_6_fu_3110_p2 = (tmp14_fu_3106_p2 | p_38_i_i_6_reg_4236);

assign underflow_not_7_fu_3140_p2 = (tmp16_fu_3136_p2 | p_38_i_i_7_reg_4261);

assign underflow_not_fu_2930_p2 = (tmp2_fu_2926_p2 | p_38_i_i_reg_4086);

assign w_43_fu_1200_p2 = (w_reg_747 + 3'd1);

assign w_cast_cast1_fu_1186_p1 = w_reg_747;

assign w_cast_cast_fu_1190_p1 = w_reg_747;

always @ (posedge ap_clk) begin
    h_cast_cast1_reg_3477[9:3] <= 7'b0000000;
    h_cast_cast_reg_3482[10:3] <= 8'b00000000;
    w_cast_cast1_reg_3496[11:3] <= 9'b000000000;
    w_cast_cast_reg_3501[12:3] <= 10'b0000000000;
    ci_cast_cast_reg_3514[14:8] <= 7'b0000000;
end

endmodule //conv_last
