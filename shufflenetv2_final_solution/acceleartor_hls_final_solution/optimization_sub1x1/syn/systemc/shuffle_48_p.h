// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_48_p_HH_
#define _shuffle_48_p_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_mux_jbC.h"

namespace ap_rtl {

struct shuffle_48_p : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_in< sc_lv<8> > left_V_q0;
    sc_out< sc_lv<14> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<8> > output_V_d0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_8_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_8_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_8_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_1_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_1_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_1_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_2_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_2_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_2_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_3_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_3_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_3_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_4_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_4_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_4_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_5_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_5_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_5_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_6_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_6_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_6_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_7_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_7_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_7_q0;


    // Module declarations
    shuffle_48_p(sc_module_name name);
    SC_HAS_PROCESS(shuffle_48_p);

    ~shuffle_48_p();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_mux_jbC<1,1,8,8,8,8,8,8,8,8,3,8>* ShuffleNetV2_mux_jbC_x_U203;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_522_fu_240_p1;
    sc_signal< sc_lv<1> > tmp_522_reg_587;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > co_27_fu_250_p2;
    sc_signal< sc_lv<7> > co_27_reg_594;
    sc_signal< sc_lv<11> > tmp_411_fu_280_p2;
    sc_signal< sc_lv<11> > tmp_411_reg_599;
    sc_signal< sc_lv<1> > exitcond5_fu_244_p2;
    sc_signal< sc_lv<10> > tmp_415_fu_320_p2;
    sc_signal< sc_lv<10> > tmp_415_reg_604;
    sc_signal< sc_lv<3> > arrayNo_reg_609;
    sc_signal< sc_lv<7> > tmp_419_fu_370_p2;
    sc_signal< sc_lv<7> > tmp_419_reg_614;
    sc_signal< sc_lv<4> > h_24_fu_382_p2;
    sc_signal< sc_lv<4> > h_24_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp_421_fu_429_p2;
    sc_signal< sc_lv<14> > tmp_421_reg_627;
    sc_signal< sc_lv<1> > exitcond4_fu_376_p2;
    sc_signal< sc_lv<15> > tmp_423_fu_464_p2;
    sc_signal< sc_lv<15> > tmp_423_reg_632;
    sc_signal< sc_lv<11> > tmp_425_fu_499_p2;
    sc_signal< sc_lv<11> > tmp_425_reg_637;
    sc_signal< sc_lv<4> > w_29_fu_511_p2;
    sc_signal< sc_lv<4> > w_29_reg_645;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_fu_505_p2;
    sc_signal< sc_lv<14> > output_V_addr_reg_655;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_fu_566_p10;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > co_reg_197;
    sc_signal< sc_lv<4> > h_reg_208;
    sc_signal< sc_lv<4> > w_reg_219;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > storemerge_reg_230;
    sc_signal< sc_lv<64> > tmp_524_cast_fu_534_p1;
    sc_signal< sc_lv<64> > tmp_525_cast_fu_544_p1;
    sc_signal< sc_lv<64> > tmp_526_cast_fu_554_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_256_p3;
    sc_signal< sc_lv<8> > tmp_410_fu_268_p3;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_276_p1;
    sc_signal< sc_lv<11> > p_shl4_cast_fu_264_p1;
    sc_signal< sc_lv<6> > tmp_412_fu_286_p4;
    sc_signal< sc_lv<9> > tmp_413_fu_296_p3;
    sc_signal< sc_lv<7> > tmp_414_fu_308_p3;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_316_p1;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_304_p1;
    sc_signal< sc_lv<3> > tmp_416_fu_336_p4;
    sc_signal< sc_lv<6> > tmp_417_fu_346_p3;
    sc_signal< sc_lv<4> > tmp_418_fu_358_p3;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_366_p1;
    sc_signal< sc_lv<7> > p_shl_cast_fu_354_p1;
    sc_signal< sc_lv<10> > tmp_cast_fu_396_p1;
    sc_signal< sc_lv<10> > tmp_420_fu_400_p2;
    sc_signal< sc_lv<13> > tmp_527_fu_405_p3;
    sc_signal< sc_lv<11> > tmp_528_fu_417_p3;
    sc_signal< sc_lv<14> > p_shl10_cast_fu_413_p1;
    sc_signal< sc_lv<14> > p_shl11_cast_fu_425_p1;
    sc_signal< sc_lv<11> > tmp_cast7_fu_392_p1;
    sc_signal< sc_lv<11> > tmp_422_fu_435_p2;
    sc_signal< sc_lv<14> > tmp_529_fu_440_p3;
    sc_signal< sc_lv<12> > tmp_530_fu_452_p3;
    sc_signal< sc_lv<15> > p_shl8_cast_fu_448_p1;
    sc_signal< sc_lv<15> > p_shl9_cast_fu_460_p1;
    sc_signal< sc_lv<7> > tmp_cast6_fu_388_p1;
    sc_signal< sc_lv<7> > tmp_424_fu_470_p2;
    sc_signal< sc_lv<10> > tmp_531_fu_475_p3;
    sc_signal< sc_lv<8> > tmp_532_fu_487_p3;
    sc_signal< sc_lv<11> > p_shl6_cast_fu_483_p1;
    sc_signal< sc_lv<11> > p_shl7_cast_fu_495_p1;
    sc_signal< sc_lv<14> > tmp_217_cast_fu_525_p1;
    sc_signal< sc_lv<14> > tmp_426_fu_529_p2;
    sc_signal< sc_lv<15> > tmp_217_cast2_fu_521_p1;
    sc_signal< sc_lv<15> > tmp_427_fu_539_p2;
    sc_signal< sc_lv<11> > tmp_217_cast1_fu_517_p1;
    sc_signal< sc_lv<11> > tmp_428_fu_549_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer1_1_48_8x8_p_V_1_address0();
    void thread_buffer1_1_48_8x8_p_V_1_ce0();
    void thread_buffer1_1_48_8x8_p_V_2_address0();
    void thread_buffer1_1_48_8x8_p_V_2_ce0();
    void thread_buffer1_1_48_8x8_p_V_3_address0();
    void thread_buffer1_1_48_8x8_p_V_3_ce0();
    void thread_buffer1_1_48_8x8_p_V_4_address0();
    void thread_buffer1_1_48_8x8_p_V_4_ce0();
    void thread_buffer1_1_48_8x8_p_V_5_address0();
    void thread_buffer1_1_48_8x8_p_V_5_ce0();
    void thread_buffer1_1_48_8x8_p_V_6_address0();
    void thread_buffer1_1_48_8x8_p_V_6_ce0();
    void thread_buffer1_1_48_8x8_p_V_7_address0();
    void thread_buffer1_1_48_8x8_p_V_7_ce0();
    void thread_buffer1_1_48_8x8_p_V_8_address0();
    void thread_buffer1_1_48_8x8_p_V_8_ce0();
    void thread_co_27_fu_250_p2();
    void thread_exitcond4_fu_376_p2();
    void thread_exitcond5_fu_244_p2();
    void thread_exitcond_fu_505_p2();
    void thread_h_24_fu_382_p2();
    void thread_left_V_address0();
    void thread_left_V_ce0();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl10_cast_fu_413_p1();
    void thread_p_shl11_cast_fu_425_p1();
    void thread_p_shl1_cast_fu_366_p1();
    void thread_p_shl2_cast_fu_304_p1();
    void thread_p_shl3_cast_fu_316_p1();
    void thread_p_shl4_cast_fu_264_p1();
    void thread_p_shl5_cast_fu_276_p1();
    void thread_p_shl6_cast_fu_483_p1();
    void thread_p_shl7_cast_fu_495_p1();
    void thread_p_shl8_cast_fu_448_p1();
    void thread_p_shl9_cast_fu_460_p1();
    void thread_p_shl_cast_fu_354_p1();
    void thread_tmp_217_cast1_fu_517_p1();
    void thread_tmp_217_cast2_fu_521_p1();
    void thread_tmp_217_cast_fu_525_p1();
    void thread_tmp_410_fu_268_p3();
    void thread_tmp_411_fu_280_p2();
    void thread_tmp_412_fu_286_p4();
    void thread_tmp_413_fu_296_p3();
    void thread_tmp_414_fu_308_p3();
    void thread_tmp_415_fu_320_p2();
    void thread_tmp_416_fu_336_p4();
    void thread_tmp_417_fu_346_p3();
    void thread_tmp_418_fu_358_p3();
    void thread_tmp_419_fu_370_p2();
    void thread_tmp_420_fu_400_p2();
    void thread_tmp_421_fu_429_p2();
    void thread_tmp_422_fu_435_p2();
    void thread_tmp_423_fu_464_p2();
    void thread_tmp_424_fu_470_p2();
    void thread_tmp_425_fu_499_p2();
    void thread_tmp_426_fu_529_p2();
    void thread_tmp_427_fu_539_p2();
    void thread_tmp_428_fu_549_p2();
    void thread_tmp_522_fu_240_p1();
    void thread_tmp_524_cast_fu_534_p1();
    void thread_tmp_525_cast_fu_544_p1();
    void thread_tmp_526_cast_fu_554_p1();
    void thread_tmp_527_fu_405_p3();
    void thread_tmp_528_fu_417_p3();
    void thread_tmp_529_fu_440_p3();
    void thread_tmp_530_fu_452_p3();
    void thread_tmp_531_fu_475_p3();
    void thread_tmp_532_fu_487_p3();
    void thread_tmp_cast6_fu_388_p1();
    void thread_tmp_cast7_fu_392_p1();
    void thread_tmp_cast_fu_396_p1();
    void thread_tmp_s_fu_256_p3();
    void thread_w_29_fu_511_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
