// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shuffle_48_r_p_HH_
#define _shuffle_48_r_p_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_mux_jbC.h"

namespace ap_rtl {

struct shuffle_48_r_p : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<8> > output_V_d0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_8_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_8_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_8_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_1_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_1_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_1_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_2_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_2_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_2_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_3_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_3_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_3_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_4_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_4_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_4_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_5_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_5_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_5_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_6_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_6_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_6_q0;
    sc_out< sc_lv<10> > buffer1_1_48_8x8_p_V_7_address0;
    sc_out< sc_logic > buffer1_1_48_8x8_p_V_7_ce0;
    sc_in< sc_lv<8> > buffer1_1_48_8x8_p_V_7_q0;


    // Module declarations
    shuffle_48_r_p(sc_module_name name);
    SC_HAS_PROCESS(shuffle_48_r_p);

    ~shuffle_48_r_p();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_mux_jbC<1,1,8,8,8,8,8,8,8,8,3,8>* ShuffleNetV2_mux_jbC_x_U181;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_517_fu_207_p1;
    sc_signal< sc_lv<1> > tmp_517_reg_460;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > co_26_fu_217_p2;
    sc_signal< sc_lv<7> > co_26_reg_467;
    sc_signal< sc_lv<11> > tmp_399_fu_247_p2;
    sc_signal< sc_lv<11> > tmp_399_reg_472;
    sc_signal< sc_lv<1> > exitcond3_fu_211_p2;
    sc_signal< sc_lv<3> > arrayNo_reg_477;
    sc_signal< sc_lv<7> > tmp_403_fu_297_p2;
    sc_signal< sc_lv<7> > tmp_403_reg_482;
    sc_signal< sc_lv<4> > h_23_fu_309_p2;
    sc_signal< sc_lv<4> > h_23_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > tmp_405_fu_352_p2;
    sc_signal< sc_lv<15> > tmp_405_reg_495;
    sc_signal< sc_lv<1> > exitcond2_fu_303_p2;
    sc_signal< sc_lv<11> > tmp_407_fu_387_p2;
    sc_signal< sc_lv<11> > tmp_407_reg_500;
    sc_signal< sc_lv<4> > w_28_fu_399_p2;
    sc_signal< sc_lv<4> > w_28_reg_508;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<15> > tmp_408_fu_413_p2;
    sc_signal< sc_lv<15> > tmp_408_reg_513;
    sc_signal< sc_lv<1> > exitcond_fu_393_p2;
    sc_signal< sc_lv<8> > tmp_fu_435_p10;
    sc_signal< sc_lv<8> > tmp_reg_558;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > co_reg_174;
    sc_signal< sc_lv<4> > h_reg_185;
    sc_signal< sc_lv<4> > w_reg_196;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_498_cast_fu_423_p1;
    sc_signal< sc_lv<64> > tmp_497_cast_fu_456_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_223_p3;
    sc_signal< sc_lv<8> > tmp_398_fu_235_p3;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_243_p1;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_231_p1;
    sc_signal< sc_lv<3> > tmp_400_fu_263_p4;
    sc_signal< sc_lv<6> > tmp_401_fu_273_p3;
    sc_signal< sc_lv<4> > tmp_402_fu_285_p3;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_293_p1;
    sc_signal< sc_lv<7> > p_shl_cast_fu_281_p1;
    sc_signal< sc_lv<11> > tmp_215_cast_fu_319_p1;
    sc_signal< sc_lv<11> > tmp_404_fu_323_p2;
    sc_signal< sc_lv<14> > tmp_518_fu_328_p3;
    sc_signal< sc_lv<12> > tmp_519_fu_340_p3;
    sc_signal< sc_lv<15> > p_shl6_cast_fu_336_p1;
    sc_signal< sc_lv<15> > p_shl7_cast_fu_348_p1;
    sc_signal< sc_lv<7> > tmp_215_cast9_fu_315_p1;
    sc_signal< sc_lv<7> > tmp_406_fu_358_p2;
    sc_signal< sc_lv<10> > tmp_520_fu_363_p3;
    sc_signal< sc_lv<8> > tmp_521_fu_375_p3;
    sc_signal< sc_lv<11> > p_shl4_cast_fu_371_p1;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_383_p1;
    sc_signal< sc_lv<15> > tmp_216_cast_fu_409_p1;
    sc_signal< sc_lv<11> > tmp_216_cast8_fu_405_p1;
    sc_signal< sc_lv<11> > tmp_409_fu_418_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer1_1_48_8x8_p_V_1_address0();
    void thread_buffer1_1_48_8x8_p_V_1_ce0();
    void thread_buffer1_1_48_8x8_p_V_2_address0();
    void thread_buffer1_1_48_8x8_p_V_2_ce0();
    void thread_buffer1_1_48_8x8_p_V_3_address0();
    void thread_buffer1_1_48_8x8_p_V_3_ce0();
    void thread_buffer1_1_48_8x8_p_V_4_address0();
    void thread_buffer1_1_48_8x8_p_V_4_ce0();
    void thread_buffer1_1_48_8x8_p_V_5_address0();
    void thread_buffer1_1_48_8x8_p_V_5_ce0();
    void thread_buffer1_1_48_8x8_p_V_6_address0();
    void thread_buffer1_1_48_8x8_p_V_6_ce0();
    void thread_buffer1_1_48_8x8_p_V_7_address0();
    void thread_buffer1_1_48_8x8_p_V_7_ce0();
    void thread_buffer1_1_48_8x8_p_V_8_address0();
    void thread_buffer1_1_48_8x8_p_V_8_ce0();
    void thread_co_26_fu_217_p2();
    void thread_exitcond2_fu_303_p2();
    void thread_exitcond3_fu_211_p2();
    void thread_exitcond_fu_393_p2();
    void thread_h_23_fu_309_p2();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl1_cast_fu_293_p1();
    void thread_p_shl2_cast_fu_231_p1();
    void thread_p_shl3_cast_fu_243_p1();
    void thread_p_shl4_cast_fu_371_p1();
    void thread_p_shl5_cast_fu_383_p1();
    void thread_p_shl6_cast_fu_336_p1();
    void thread_p_shl7_cast_fu_348_p1();
    void thread_p_shl_cast_fu_281_p1();
    void thread_tmp_215_cast9_fu_315_p1();
    void thread_tmp_215_cast_fu_319_p1();
    void thread_tmp_216_cast8_fu_405_p1();
    void thread_tmp_216_cast_fu_409_p1();
    void thread_tmp_398_fu_235_p3();
    void thread_tmp_399_fu_247_p2();
    void thread_tmp_400_fu_263_p4();
    void thread_tmp_401_fu_273_p3();
    void thread_tmp_402_fu_285_p3();
    void thread_tmp_403_fu_297_p2();
    void thread_tmp_404_fu_323_p2();
    void thread_tmp_405_fu_352_p2();
    void thread_tmp_406_fu_358_p2();
    void thread_tmp_407_fu_387_p2();
    void thread_tmp_408_fu_413_p2();
    void thread_tmp_409_fu_418_p2();
    void thread_tmp_497_cast_fu_456_p1();
    void thread_tmp_498_cast_fu_423_p1();
    void thread_tmp_517_fu_207_p1();
    void thread_tmp_518_fu_328_p3();
    void thread_tmp_519_fu_340_p3();
    void thread_tmp_520_fu_363_p3();
    void thread_tmp_521_fu_375_p3();
    void thread_tmp_s_fu_223_p3();
    void thread_w_28_fu_399_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
