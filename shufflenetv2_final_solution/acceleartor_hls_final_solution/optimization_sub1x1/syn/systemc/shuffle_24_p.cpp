// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "shuffle_24_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic shuffle_24_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic shuffle_24_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state1 = "1";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state2 = "10";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state3 = "100";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state4 = "1000";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state5 = "10000";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state6 = "100000";
const sc_lv<7> shuffle_24_p::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> shuffle_24_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> shuffle_24_p::ap_const_lv32_1 = "1";
const sc_lv<1> shuffle_24_p::ap_const_lv1_0 = "0";
const sc_lv<32> shuffle_24_p::ap_const_lv32_2 = "10";
const sc_lv<32> shuffle_24_p::ap_const_lv32_3 = "11";
const sc_lv<32> shuffle_24_p::ap_const_lv32_4 = "100";
const sc_lv<32> shuffle_24_p::ap_const_lv32_5 = "101";
const sc_lv<6> shuffle_24_p::ap_const_lv6_0 = "000000";
const sc_lv<1> shuffle_24_p::ap_const_lv1_1 = "1";
const sc_lv<5> shuffle_24_p::ap_const_lv5_0 = "00000";
const sc_lv<32> shuffle_24_p::ap_const_lv32_6 = "110";
const sc_lv<6> shuffle_24_p::ap_const_lv6_30 = "110000";
const sc_lv<6> shuffle_24_p::ap_const_lv6_1 = "1";
const sc_lv<4> shuffle_24_p::ap_const_lv4_0 = "0000";
const sc_lv<5> shuffle_24_p::ap_const_lv5_12 = "10010";
const sc_lv<5> shuffle_24_p::ap_const_lv5_1 = "1";
const bool shuffle_24_p::ap_const_boolean_1 = true;

shuffle_24_p::shuffle_24_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ShuffleNetV2_mux_jbC_x_U106 = new ShuffleNetV2_mux_jbC<1,1,8,8,8,8,8,8,8,8,3,8>("ShuffleNetV2_mux_jbC_x_U106");
    ShuffleNetV2_mux_jbC_x_U106->din1(buffer1_1_24_16x16_p_7_q0);
    ShuffleNetV2_mux_jbC_x_U106->din2(buffer1_1_24_16x16_p_6_q0);
    ShuffleNetV2_mux_jbC_x_U106->din3(buffer1_1_24_16x16_p_5_q0);
    ShuffleNetV2_mux_jbC_x_U106->din4(buffer1_1_24_16x16_p_4_q0);
    ShuffleNetV2_mux_jbC_x_U106->din5(buffer1_1_24_16x16_p_3_q0);
    ShuffleNetV2_mux_jbC_x_U106->din6(buffer1_1_24_16x16_p_2_q0);
    ShuffleNetV2_mux_jbC_x_U106->din7(buffer1_1_24_16x16_p_1_q0);
    ShuffleNetV2_mux_jbC_x_U106->din8(buffer1_1_24_16x16_p_q0);
    ShuffleNetV2_mux_jbC_x_U106->din9(arrayNo_reg_603);
    ShuffleNetV2_mux_jbC_x_U106->dout(tmp_fu_560_p10);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_250_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_250_p2 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_4_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_4_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_5_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_5_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_6_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_6_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_7_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_7_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_590_cast_fu_548_p1 );

    SC_METHOD(thread_buffer1_1_24_16x16_p_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_co_30_fu_256_p2);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_exitcond4_fu_382_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_214 );

    SC_METHOD(thread_exitcond5_fu_250_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_exitcond_fu_499_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_225 );

    SC_METHOD(thread_h_27_fu_388_p2);
    sensitive << ( h_reg_214 );

    SC_METHOD(thread_left_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_588_cast_fu_528_p1 );

    SC_METHOD(thread_left_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( output_V_addr_reg_649 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( storemerge_reg_236 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_shl10_cast_fu_411_p3);
    sensitive << ( tmp_463_fu_406_p2 );

    SC_METHOD(thread_p_shl11_cast_fu_427_p1);
    sensitive << ( tmp_554_fu_419_p3 );

    SC_METHOD(thread_p_shl1_cast_fu_372_p1);
    sensitive << ( tmp_461_fu_364_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_310_p1);
    sensitive << ( tmp_456_fu_302_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_322_p1);
    sensitive << ( tmp_457_fu_314_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_270_p1);
    sensitive << ( tmp_s_fu_262_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_282_p1);
    sensitive << ( tmp_453_fu_274_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_473_p3);
    sensitive << ( tmp_467_fu_468_p2 );

    SC_METHOD(thread_p_shl7_cast_fu_489_p1);
    sensitive << ( tmp_556_fu_481_p3 );

    SC_METHOD(thread_p_shl8_cast_fu_442_p3);
    sensitive << ( tmp_465_fu_437_p2 );

    SC_METHOD(thread_p_shl9_cast_fu_458_p1);
    sensitive << ( tmp_555_fu_450_p3 );

    SC_METHOD(thread_p_shl_cast_fu_360_p1);
    sensitive << ( tmp_460_fu_352_p3 );

    SC_METHOD(thread_tmp_220_cast1_fu_511_p1);
    sensitive << ( w_reg_225 );

    SC_METHOD(thread_tmp_220_cast2_fu_515_p1);
    sensitive << ( w_reg_225 );

    SC_METHOD(thread_tmp_220_cast_fu_519_p1);
    sensitive << ( w_reg_225 );

    SC_METHOD(thread_tmp_453_fu_274_p3);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_tmp_454_fu_286_p2);
    sensitive << ( p_shl5_cast_fu_282_p1 );
    sensitive << ( p_shl4_cast_fu_270_p1 );

    SC_METHOD(thread_tmp_455_fu_292_p4);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_tmp_456_fu_302_p3);
    sensitive << ( tmp_455_fu_292_p4 );

    SC_METHOD(thread_tmp_457_fu_314_p3);
    sensitive << ( tmp_455_fu_292_p4 );

    SC_METHOD(thread_tmp_458_fu_326_p2);
    sensitive << ( p_shl3_cast_fu_322_p1 );
    sensitive << ( p_shl2_cast_fu_310_p1 );

    SC_METHOD(thread_tmp_459_fu_342_p4);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_tmp_460_fu_352_p3);
    sensitive << ( tmp_459_fu_342_p4 );

    SC_METHOD(thread_tmp_461_fu_364_p3);
    sensitive << ( tmp_459_fu_342_p4 );

    SC_METHOD(thread_tmp_462_fu_376_p2);
    sensitive << ( p_shl1_cast_fu_372_p1 );
    sensitive << ( p_shl_cast_fu_360_p1 );

    SC_METHOD(thread_tmp_463_fu_406_p2);
    sensitive << ( tmp_458_reg_598 );
    sensitive << ( tmp_cast_fu_402_p1 );

    SC_METHOD(thread_tmp_464_fu_431_p2);
    sensitive << ( p_shl10_cast_fu_411_p3 );
    sensitive << ( p_shl11_cast_fu_427_p1 );

    SC_METHOD(thread_tmp_465_fu_437_p2);
    sensitive << ( tmp_454_reg_593 );
    sensitive << ( tmp_cast9_fu_398_p1 );

    SC_METHOD(thread_tmp_466_fu_462_p2);
    sensitive << ( p_shl8_cast_fu_442_p3 );
    sensitive << ( p_shl9_cast_fu_458_p1 );

    SC_METHOD(thread_tmp_467_fu_468_p2);
    sensitive << ( tmp_462_reg_608 );
    sensitive << ( tmp_cast8_fu_394_p1 );

    SC_METHOD(thread_tmp_468_fu_493_p2);
    sensitive << ( p_shl6_cast_fu_473_p3 );
    sensitive << ( p_shl7_cast_fu_489_p1 );

    SC_METHOD(thread_tmp_469_fu_523_p2);
    sensitive << ( tmp_464_reg_621 );
    sensitive << ( tmp_220_cast_fu_519_p1 );

    SC_METHOD(thread_tmp_470_fu_533_p2);
    sensitive << ( tmp_466_reg_626 );
    sensitive << ( tmp_220_cast2_fu_515_p1 );

    SC_METHOD(thread_tmp_471_fu_543_p2);
    sensitive << ( tmp_468_reg_631 );
    sensitive << ( tmp_220_cast1_fu_511_p1 );

    SC_METHOD(thread_tmp_553_fu_246_p1);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_tmp_554_fu_419_p3);
    sensitive << ( tmp_463_fu_406_p2 );

    SC_METHOD(thread_tmp_555_fu_450_p3);
    sensitive << ( tmp_465_fu_437_p2 );

    SC_METHOD(thread_tmp_556_fu_481_p3);
    sensitive << ( tmp_467_fu_468_p2 );

    SC_METHOD(thread_tmp_588_cast_fu_528_p1);
    sensitive << ( tmp_469_fu_523_p2 );

    SC_METHOD(thread_tmp_589_cast_fu_538_p1);
    sensitive << ( tmp_470_fu_533_p2 );

    SC_METHOD(thread_tmp_590_cast_fu_548_p1);
    sensitive << ( tmp_471_fu_543_p2 );

    SC_METHOD(thread_tmp_cast8_fu_394_p1);
    sensitive << ( h_reg_214 );

    SC_METHOD(thread_tmp_cast9_fu_398_p1);
    sensitive << ( h_reg_214 );

    SC_METHOD(thread_tmp_cast_fu_402_p1);
    sensitive << ( h_reg_214 );

    SC_METHOD(thread_tmp_s_fu_262_p3);
    sensitive << ( co_reg_203 );

    SC_METHOD(thread_w_32_fu_505_p2);
    sensitive << ( w_reg_225 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_553_reg_581 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond4_fu_382_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_499_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "shuffle_24_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, left_V_address0, "(port)left_V_address0");
    sc_trace(mVcdFile, left_V_ce0, "(port)left_V_ce0");
    sc_trace(mVcdFile, left_V_q0, "(port)left_V_q0");
    sc_trace(mVcdFile, output_V_address0, "(port)output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "(port)output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "(port)output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "(port)output_V_d0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_7_address0, "(port)buffer1_1_24_16x16_p_7_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_7_ce0, "(port)buffer1_1_24_16x16_p_7_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_7_q0, "(port)buffer1_1_24_16x16_p_7_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_6_address0, "(port)buffer1_1_24_16x16_p_6_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_6_ce0, "(port)buffer1_1_24_16x16_p_6_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_6_q0, "(port)buffer1_1_24_16x16_p_6_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_5_address0, "(port)buffer1_1_24_16x16_p_5_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_5_ce0, "(port)buffer1_1_24_16x16_p_5_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_5_q0, "(port)buffer1_1_24_16x16_p_5_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_4_address0, "(port)buffer1_1_24_16x16_p_4_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_4_ce0, "(port)buffer1_1_24_16x16_p_4_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_4_q0, "(port)buffer1_1_24_16x16_p_4_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_3_address0, "(port)buffer1_1_24_16x16_p_3_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_3_ce0, "(port)buffer1_1_24_16x16_p_3_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_3_q0, "(port)buffer1_1_24_16x16_p_3_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_2_address0, "(port)buffer1_1_24_16x16_p_2_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_2_ce0, "(port)buffer1_1_24_16x16_p_2_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_2_q0, "(port)buffer1_1_24_16x16_p_2_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_1_address0, "(port)buffer1_1_24_16x16_p_1_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_1_ce0, "(port)buffer1_1_24_16x16_p_1_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_1_q0, "(port)buffer1_1_24_16x16_p_1_q0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_address0, "(port)buffer1_1_24_16x16_p_address0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_ce0, "(port)buffer1_1_24_16x16_p_ce0");
    sc_trace(mVcdFile, buffer1_1_24_16x16_p_q0, "(port)buffer1_1_24_16x16_p_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_553_fu_246_p1, "tmp_553_fu_246_p1");
    sc_trace(mVcdFile, tmp_553_reg_581, "tmp_553_reg_581");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, co_30_fu_256_p2, "co_30_fu_256_p2");
    sc_trace(mVcdFile, co_30_reg_588, "co_30_reg_588");
    sc_trace(mVcdFile, tmp_454_fu_286_p2, "tmp_454_fu_286_p2");
    sc_trace(mVcdFile, tmp_454_reg_593, "tmp_454_reg_593");
    sc_trace(mVcdFile, exitcond5_fu_250_p2, "exitcond5_fu_250_p2");
    sc_trace(mVcdFile, tmp_458_fu_326_p2, "tmp_458_fu_326_p2");
    sc_trace(mVcdFile, tmp_458_reg_598, "tmp_458_reg_598");
    sc_trace(mVcdFile, arrayNo_reg_603, "arrayNo_reg_603");
    sc_trace(mVcdFile, tmp_462_fu_376_p2, "tmp_462_fu_376_p2");
    sc_trace(mVcdFile, tmp_462_reg_608, "tmp_462_reg_608");
    sc_trace(mVcdFile, h_27_fu_388_p2, "h_27_fu_388_p2");
    sc_trace(mVcdFile, h_27_reg_616, "h_27_reg_616");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_464_fu_431_p2, "tmp_464_fu_431_p2");
    sc_trace(mVcdFile, tmp_464_reg_621, "tmp_464_reg_621");
    sc_trace(mVcdFile, exitcond4_fu_382_p2, "exitcond4_fu_382_p2");
    sc_trace(mVcdFile, tmp_466_fu_462_p2, "tmp_466_fu_462_p2");
    sc_trace(mVcdFile, tmp_466_reg_626, "tmp_466_reg_626");
    sc_trace(mVcdFile, tmp_468_fu_493_p2, "tmp_468_fu_493_p2");
    sc_trace(mVcdFile, tmp_468_reg_631, "tmp_468_reg_631");
    sc_trace(mVcdFile, w_32_fu_505_p2, "w_32_fu_505_p2");
    sc_trace(mVcdFile, w_32_reg_639, "w_32_reg_639");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_fu_499_p2, "exitcond_fu_499_p2");
    sc_trace(mVcdFile, output_V_addr_reg_649, "output_V_addr_reg_649");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_fu_560_p10, "tmp_fu_560_p10");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, co_reg_203, "co_reg_203");
    sc_trace(mVcdFile, h_reg_214, "h_reg_214");
    sc_trace(mVcdFile, w_reg_225, "w_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, storemerge_reg_236, "storemerge_reg_236");
    sc_trace(mVcdFile, tmp_588_cast_fu_528_p1, "tmp_588_cast_fu_528_p1");
    sc_trace(mVcdFile, tmp_589_cast_fu_538_p1, "tmp_589_cast_fu_538_p1");
    sc_trace(mVcdFile, tmp_590_cast_fu_548_p1, "tmp_590_cast_fu_548_p1");
    sc_trace(mVcdFile, tmp_s_fu_262_p3, "tmp_s_fu_262_p3");
    sc_trace(mVcdFile, tmp_453_fu_274_p3, "tmp_453_fu_274_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_282_p1, "p_shl5_cast_fu_282_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_270_p1, "p_shl4_cast_fu_270_p1");
    sc_trace(mVcdFile, tmp_455_fu_292_p4, "tmp_455_fu_292_p4");
    sc_trace(mVcdFile, tmp_456_fu_302_p3, "tmp_456_fu_302_p3");
    sc_trace(mVcdFile, tmp_457_fu_314_p3, "tmp_457_fu_314_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_322_p1, "p_shl3_cast_fu_322_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_310_p1, "p_shl2_cast_fu_310_p1");
    sc_trace(mVcdFile, tmp_459_fu_342_p4, "tmp_459_fu_342_p4");
    sc_trace(mVcdFile, tmp_460_fu_352_p3, "tmp_460_fu_352_p3");
    sc_trace(mVcdFile, tmp_461_fu_364_p3, "tmp_461_fu_364_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_372_p1, "p_shl1_cast_fu_372_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_360_p1, "p_shl_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_cast_fu_402_p1, "tmp_cast_fu_402_p1");
    sc_trace(mVcdFile, tmp_463_fu_406_p2, "tmp_463_fu_406_p2");
    sc_trace(mVcdFile, tmp_554_fu_419_p3, "tmp_554_fu_419_p3");
    sc_trace(mVcdFile, p_shl10_cast_fu_411_p3, "p_shl10_cast_fu_411_p3");
    sc_trace(mVcdFile, p_shl11_cast_fu_427_p1, "p_shl11_cast_fu_427_p1");
    sc_trace(mVcdFile, tmp_cast9_fu_398_p1, "tmp_cast9_fu_398_p1");
    sc_trace(mVcdFile, tmp_465_fu_437_p2, "tmp_465_fu_437_p2");
    sc_trace(mVcdFile, tmp_555_fu_450_p3, "tmp_555_fu_450_p3");
    sc_trace(mVcdFile, p_shl8_cast_fu_442_p3, "p_shl8_cast_fu_442_p3");
    sc_trace(mVcdFile, p_shl9_cast_fu_458_p1, "p_shl9_cast_fu_458_p1");
    sc_trace(mVcdFile, tmp_cast8_fu_394_p1, "tmp_cast8_fu_394_p1");
    sc_trace(mVcdFile, tmp_467_fu_468_p2, "tmp_467_fu_468_p2");
    sc_trace(mVcdFile, tmp_556_fu_481_p3, "tmp_556_fu_481_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_473_p3, "p_shl6_cast_fu_473_p3");
    sc_trace(mVcdFile, p_shl7_cast_fu_489_p1, "p_shl7_cast_fu_489_p1");
    sc_trace(mVcdFile, tmp_220_cast_fu_519_p1, "tmp_220_cast_fu_519_p1");
    sc_trace(mVcdFile, tmp_469_fu_523_p2, "tmp_469_fu_523_p2");
    sc_trace(mVcdFile, tmp_220_cast2_fu_515_p1, "tmp_220_cast2_fu_515_p1");
    sc_trace(mVcdFile, tmp_470_fu_533_p2, "tmp_470_fu_533_p2");
    sc_trace(mVcdFile, tmp_220_cast1_fu_511_p1, "tmp_220_cast1_fu_511_p1");
    sc_trace(mVcdFile, tmp_471_fu_543_p2, "tmp_471_fu_543_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

shuffle_24_p::~shuffle_24_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ShuffleNetV2_mux_jbC_x_U106;
}

void shuffle_24_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_382_p2.read(), ap_const_lv1_1))) {
        co_reg_203 = co_30_reg_588.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_203 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_499_p2.read(), ap_const_lv1_1))) {
        h_reg_214 = h_27_reg_616.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_250_p2.read(), ap_const_lv1_0))) {
        h_reg_214 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        storemerge_reg_236 = tmp_fu_560_p10.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        storemerge_reg_236 = left_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_382_p2.read()))) {
        w_reg_225 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        w_reg_225 = w_32_reg_639.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond5_fu_250_p2.read(), ap_const_lv1_0))) {
        arrayNo_reg_603 = co_reg_203.read().range(3, 1);
        tmp_454_reg_593 = tmp_454_fu_286_p2.read();
        tmp_458_reg_598 = tmp_458_fu_326_p2.read();
        tmp_462_reg_608 = tmp_462_fu_376_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_30_reg_588 = co_30_fu_256_p2.read();
        tmp_553_reg_581 = tmp_553_fu_246_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_27_reg_616 = h_27_fu_388_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_499_p2.read()))) {
        output_V_addr_reg_649 =  (sc_lv<14>) (tmp_589_cast_fu_538_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_382_p2.read()))) {
        tmp_464_reg_621 = tmp_464_fu_431_p2.read();
        tmp_466_reg_626 = tmp_466_fu_462_p2.read();
        tmp_468_reg_631 = tmp_468_fu_493_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        w_32_reg_639 = w_32_fu_505_p2.read();
    }
}

void shuffle_24_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void shuffle_24_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void shuffle_24_p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void shuffle_24_p::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void shuffle_24_p::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void shuffle_24_p::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void shuffle_24_p::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void shuffle_24_p::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_250_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_250_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_1_address0() {
    buffer1_1_24_16x16_p_1_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_1_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_1_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_2_address0() {
    buffer1_1_24_16x16_p_2_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_2_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_2_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_3_address0() {
    buffer1_1_24_16x16_p_3_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_3_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_3_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_4_address0() {
    buffer1_1_24_16x16_p_4_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_4_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_4_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_5_address0() {
    buffer1_1_24_16x16_p_5_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_5_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_5_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_6_address0() {
    buffer1_1_24_16x16_p_6_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_6_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_6_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_7_address0() {
    buffer1_1_24_16x16_p_7_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_7_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_7_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_address0() {
    buffer1_1_24_16x16_p_address0 =  (sc_lv<10>) (tmp_590_cast_fu_548_p1.read());
}

void shuffle_24_p::thread_buffer1_1_24_16x16_p_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer1_1_24_16x16_p_ce0 = ap_const_logic_1;
    } else {
        buffer1_1_24_16x16_p_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_co_30_fu_256_p2() {
    co_30_fu_256_p2 = (!ap_const_lv6_1.is_01() || !co_reg_203.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(co_reg_203.read()));
}

void shuffle_24_p::thread_exitcond4_fu_382_p2() {
    exitcond4_fu_382_p2 = (!h_reg_214.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_214.read() == ap_const_lv5_12);
}

void shuffle_24_p::thread_exitcond5_fu_250_p2() {
    exitcond5_fu_250_p2 = (!co_reg_203.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_203.read() == ap_const_lv6_30);
}

void shuffle_24_p::thread_exitcond_fu_499_p2() {
    exitcond_fu_499_p2 = (!w_reg_225.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_225.read() == ap_const_lv5_12);
}

void shuffle_24_p::thread_h_27_fu_388_p2() {
    h_27_fu_388_p2 = (!h_reg_214.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_reg_214.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void shuffle_24_p::thread_left_V_address0() {
    left_V_address0 =  (sc_lv<13>) (tmp_588_cast_fu_528_p1.read());
}

void shuffle_24_p::thread_left_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        left_V_ce0 = ap_const_logic_1;
    } else {
        left_V_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_output_V_address0() {
    output_V_address0 = output_V_addr_reg_649.read();
}

void shuffle_24_p::thread_output_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_output_V_d0() {
    output_V_d0 = storemerge_reg_236.read();
}

void shuffle_24_p::thread_output_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void shuffle_24_p::thread_p_shl10_cast_fu_411_p3() {
    p_shl10_cast_fu_411_p3 = esl_concat<10,4>(tmp_463_fu_406_p2.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_p_shl11_cast_fu_427_p1() {
    p_shl11_cast_fu_427_p1 = esl_zext<14,11>(tmp_554_fu_419_p3.read());
}

void shuffle_24_p::thread_p_shl1_cast_fu_372_p1() {
    p_shl1_cast_fu_372_p1 = esl_zext<7,3>(tmp_461_fu_364_p3.read());
}

void shuffle_24_p::thread_p_shl2_cast_fu_310_p1() {
    p_shl2_cast_fu_310_p1 = esl_zext<10,9>(tmp_456_fu_302_p3.read());
}

void shuffle_24_p::thread_p_shl3_cast_fu_322_p1() {
    p_shl3_cast_fu_322_p1 = esl_zext<10,6>(tmp_457_fu_314_p3.read());
}

void shuffle_24_p::thread_p_shl4_cast_fu_270_p1() {
    p_shl4_cast_fu_270_p1 = esl_zext<11,10>(tmp_s_fu_262_p3.read());
}

void shuffle_24_p::thread_p_shl5_cast_fu_282_p1() {
    p_shl5_cast_fu_282_p1 = esl_zext<11,7>(tmp_453_fu_274_p3.read());
}

void shuffle_24_p::thread_p_shl6_cast_fu_473_p3() {
    p_shl6_cast_fu_473_p3 = esl_concat<7,4>(tmp_467_fu_468_p2.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_p_shl7_cast_fu_489_p1() {
    p_shl7_cast_fu_489_p1 = esl_zext<11,8>(tmp_556_fu_481_p3.read());
}

void shuffle_24_p::thread_p_shl8_cast_fu_442_p3() {
    p_shl8_cast_fu_442_p3 = esl_concat<11,4>(tmp_465_fu_437_p2.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_p_shl9_cast_fu_458_p1() {
    p_shl9_cast_fu_458_p1 = esl_zext<15,12>(tmp_555_fu_450_p3.read());
}

void shuffle_24_p::thread_p_shl_cast_fu_360_p1() {
    p_shl_cast_fu_360_p1 = esl_zext<7,6>(tmp_460_fu_352_p3.read());
}

void shuffle_24_p::thread_tmp_220_cast1_fu_511_p1() {
    tmp_220_cast1_fu_511_p1 = esl_zext<11,5>(w_reg_225.read());
}

void shuffle_24_p::thread_tmp_220_cast2_fu_515_p1() {
    tmp_220_cast2_fu_515_p1 = esl_zext<15,5>(w_reg_225.read());
}

void shuffle_24_p::thread_tmp_220_cast_fu_519_p1() {
    tmp_220_cast_fu_519_p1 = esl_zext<14,5>(w_reg_225.read());
}

void shuffle_24_p::thread_tmp_453_fu_274_p3() {
    tmp_453_fu_274_p3 = esl_concat<6,1>(co_reg_203.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_454_fu_286_p2() {
    tmp_454_fu_286_p2 = (!p_shl5_cast_fu_282_p1.read().is_01() || !p_shl4_cast_fu_270_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl5_cast_fu_282_p1.read()) + sc_biguint<11>(p_shl4_cast_fu_270_p1.read()));
}

void shuffle_24_p::thread_tmp_455_fu_292_p4() {
    tmp_455_fu_292_p4 = co_reg_203.read().range(5, 1);
}

void shuffle_24_p::thread_tmp_456_fu_302_p3() {
    tmp_456_fu_302_p3 = esl_concat<5,4>(tmp_455_fu_292_p4.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_tmp_457_fu_314_p3() {
    tmp_457_fu_314_p3 = esl_concat<5,1>(tmp_455_fu_292_p4.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_458_fu_326_p2() {
    tmp_458_fu_326_p2 = (!p_shl3_cast_fu_322_p1.read().is_01() || !p_shl2_cast_fu_310_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl3_cast_fu_322_p1.read()) + sc_biguint<10>(p_shl2_cast_fu_310_p1.read()));
}

void shuffle_24_p::thread_tmp_459_fu_342_p4() {
    tmp_459_fu_342_p4 = co_reg_203.read().range(5, 4);
}

void shuffle_24_p::thread_tmp_460_fu_352_p3() {
    tmp_460_fu_352_p3 = esl_concat<2,4>(tmp_459_fu_342_p4.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_tmp_461_fu_364_p3() {
    tmp_461_fu_364_p3 = esl_concat<2,1>(tmp_459_fu_342_p4.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_462_fu_376_p2() {
    tmp_462_fu_376_p2 = (!p_shl1_cast_fu_372_p1.read().is_01() || !p_shl_cast_fu_360_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl1_cast_fu_372_p1.read()) + sc_biguint<7>(p_shl_cast_fu_360_p1.read()));
}

void shuffle_24_p::thread_tmp_463_fu_406_p2() {
    tmp_463_fu_406_p2 = (!tmp_cast_fu_402_p1.read().is_01() || !tmp_458_reg_598.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_cast_fu_402_p1.read()) + sc_biguint<10>(tmp_458_reg_598.read()));
}

void shuffle_24_p::thread_tmp_464_fu_431_p2() {
    tmp_464_fu_431_p2 = (!p_shl10_cast_fu_411_p3.read().is_01() || !p_shl11_cast_fu_427_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl10_cast_fu_411_p3.read()) + sc_biguint<14>(p_shl11_cast_fu_427_p1.read()));
}

void shuffle_24_p::thread_tmp_465_fu_437_p2() {
    tmp_465_fu_437_p2 = (!tmp_cast9_fu_398_p1.read().is_01() || !tmp_454_reg_593.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast9_fu_398_p1.read()) + sc_biguint<11>(tmp_454_reg_593.read()));
}

void shuffle_24_p::thread_tmp_466_fu_462_p2() {
    tmp_466_fu_462_p2 = (!p_shl8_cast_fu_442_p3.read().is_01() || !p_shl9_cast_fu_458_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl8_cast_fu_442_p3.read()) + sc_biguint<15>(p_shl9_cast_fu_458_p1.read()));
}

void shuffle_24_p::thread_tmp_467_fu_468_p2() {
    tmp_467_fu_468_p2 = (!tmp_cast8_fu_394_p1.read().is_01() || !tmp_462_reg_608.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_cast8_fu_394_p1.read()) + sc_biguint<7>(tmp_462_reg_608.read()));
}

void shuffle_24_p::thread_tmp_468_fu_493_p2() {
    tmp_468_fu_493_p2 = (!p_shl6_cast_fu_473_p3.read().is_01() || !p_shl7_cast_fu_489_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl6_cast_fu_473_p3.read()) + sc_biguint<11>(p_shl7_cast_fu_489_p1.read()));
}

void shuffle_24_p::thread_tmp_469_fu_523_p2() {
    tmp_469_fu_523_p2 = (!tmp_464_reg_621.read().is_01() || !tmp_220_cast_fu_519_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_464_reg_621.read()) + sc_biguint<14>(tmp_220_cast_fu_519_p1.read()));
}

void shuffle_24_p::thread_tmp_470_fu_533_p2() {
    tmp_470_fu_533_p2 = (!tmp_466_reg_626.read().is_01() || !tmp_220_cast2_fu_515_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_466_reg_626.read()) + sc_biguint<15>(tmp_220_cast2_fu_515_p1.read()));
}

void shuffle_24_p::thread_tmp_471_fu_543_p2() {
    tmp_471_fu_543_p2 = (!tmp_468_reg_631.read().is_01() || !tmp_220_cast1_fu_511_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_468_reg_631.read()) + sc_biguint<11>(tmp_220_cast1_fu_511_p1.read()));
}

void shuffle_24_p::thread_tmp_553_fu_246_p1() {
    tmp_553_fu_246_p1 = co_reg_203.read().range(1-1, 0);
}

void shuffle_24_p::thread_tmp_554_fu_419_p3() {
    tmp_554_fu_419_p3 = esl_concat<10,1>(tmp_463_fu_406_p2.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_555_fu_450_p3() {
    tmp_555_fu_450_p3 = esl_concat<11,1>(tmp_465_fu_437_p2.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_556_fu_481_p3() {
    tmp_556_fu_481_p3 = esl_concat<7,1>(tmp_467_fu_468_p2.read(), ap_const_lv1_0);
}

void shuffle_24_p::thread_tmp_588_cast_fu_528_p1() {
    tmp_588_cast_fu_528_p1 = esl_zext<64,14>(tmp_469_fu_523_p2.read());
}

void shuffle_24_p::thread_tmp_589_cast_fu_538_p1() {
    tmp_589_cast_fu_538_p1 = esl_zext<64,15>(tmp_470_fu_533_p2.read());
}

void shuffle_24_p::thread_tmp_590_cast_fu_548_p1() {
    tmp_590_cast_fu_548_p1 = esl_zext<64,11>(tmp_471_fu_543_p2.read());
}

void shuffle_24_p::thread_tmp_cast8_fu_394_p1() {
    tmp_cast8_fu_394_p1 = esl_zext<7,5>(h_reg_214.read());
}

void shuffle_24_p::thread_tmp_cast9_fu_398_p1() {
    tmp_cast9_fu_398_p1 = esl_zext<11,5>(h_reg_214.read());
}

void shuffle_24_p::thread_tmp_cast_fu_402_p1() {
    tmp_cast_fu_402_p1 = esl_zext<10,5>(h_reg_214.read());
}

void shuffle_24_p::thread_tmp_s_fu_262_p3() {
    tmp_s_fu_262_p3 = esl_concat<6,4>(co_reg_203.read(), ap_const_lv4_0);
}

void shuffle_24_p::thread_w_32_fu_505_p2() {
    w_32_fu_505_p2 = (!w_reg_225.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(w_reg_225.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void shuffle_24_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond5_fu_250_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond4_fu_382_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_499_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_499_p2.read()) && esl_seteq<1,1,1>(tmp_553_reg_581.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

