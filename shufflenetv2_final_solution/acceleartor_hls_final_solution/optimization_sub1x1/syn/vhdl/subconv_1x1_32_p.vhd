-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subconv_1x1_32_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_0_V_ce0 : OUT STD_LOGIC;
    weight_0_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_1_V_ce0 : OUT STD_LOGIC;
    weight_1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_2_V_ce0 : OUT STD_LOGIC;
    weight_2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_3_V_ce0 : OUT STD_LOGIC;
    weight_3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_4_V_ce0 : OUT STD_LOGIC;
    weight_4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_5_V_ce0 : OUT STD_LOGIC;
    weight_5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_6_V_ce0 : OUT STD_LOGIC;
    weight_6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_7_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_7_V_ce0 : OUT STD_LOGIC;
    weight_7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_0_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_1_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_2_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_3_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_4_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_5_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_6_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_7_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_7_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_7_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_7_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_7_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_6_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_6_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_6_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_6_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_6_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_5_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_5_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_5_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_5_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_5_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_4_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_4_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_4_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_4_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_4_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_3_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_3_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_3_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_3_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_2_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_2_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_2_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_2_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_1_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_1_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_1_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_1_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_ce0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_we0 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_0_Downs_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ShuffleConvs_0_Downs_ce1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_we1 : OUT STD_LOGIC;
    ShuffleConvs_0_Downs_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of subconv_1x1_32_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv15_6000 : STD_LOGIC_VECTOR (14 downto 0) := "110000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten1_reg_634 : STD_LOGIC_VECTOR (14 downto 0);
    signal co_reg_645 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_657 : STD_LOGIC_VECTOR (11 downto 0);
    signal h_reg_668 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_reg_680 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten2_reg_737 : STD_LOGIC_VECTOR (14 downto 0);
    signal co4_reg_748 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten3_reg_760 : STD_LOGIC_VECTOR (11 downto 0);
    signal h5_reg_771 : STD_LOGIC_VECTOR (5 downto 0);
    signal w6_reg_783 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_3335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_3335 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_800_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten5_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_3344 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond23_mid_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond23_mid_reg_3350 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_mid2_fu_836_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_mid2_reg_3355 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_pp0_iter1_w_mid2_reg_3355 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_fu_850_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_mid2_v_fu_871_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_3366 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_365_fu_883_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_365_reg_3371 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_172_mid2_fu_933_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_172_mid2_reg_3375 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_275_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_275_reg_3380 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_16_fu_950_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond7_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_cast_fu_1006_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_reg_3400 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_173_cast_fu_1016_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_173_cast_reg_3409 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond8_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_6_fu_1020_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ci_4_fu_1032_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ci_4_reg_3423 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_176_cast_fu_1038_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_cast_reg_3428 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond9_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_370_fu_1042_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_370_reg_3433 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv1_output_p_V_0_a_reg_3438 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_4_a_reg_3443 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_7_a_reg_3448 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_6_a_reg_3453 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_3_a_reg_3458 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_2_a_reg_3463 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_5_a_reg_3468 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_1_a_reg_3473 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_17_fu_1134_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_294_fu_1186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_294_reg_3486 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond10_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_299_fu_1240_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_299_reg_3491 : STD_LOGIC_VECTOR (12 downto 0);
    signal co_18_7_fu_1245_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_18_7_reg_3496 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ShuffleConvs_0_Downs_16_reg_3541 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_17_reg_3546 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_18_reg_3551 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_19_reg_3556 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_20_reg_3561 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_21_reg_3566 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_22_reg_3571 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_23_reg_3576 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_185_fu_1273_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_185_reg_3581 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1301_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_3586 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ShuffleConvs_0_Downs_24_reg_3591 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_374_reg_3596 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_1_fu_1319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_1_reg_3601 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_25_reg_3606 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_379_reg_3611 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_2_fu_1337_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_2_reg_3616 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_26_reg_3621 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_384_reg_3626 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_3_fu_1355_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_3_reg_3631 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_27_reg_3636 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_389_reg_3641 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_4_fu_1373_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_4_reg_3646 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_28_reg_3651 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_394_reg_3656 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_5_fu_1391_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_5_reg_3661 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_29_reg_3666 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_399_reg_3671 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_6_fu_1409_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_6_reg_3676 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_30_reg_3681 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_404_reg_3686 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_61_7_fu_1427_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_7_reg_3691 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_0_Downs_31_reg_3696 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_409_reg_3701 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1452_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_3706 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_373_reg_3711 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_1486_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_reg_3718 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_376_fu_1492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_376_reg_3724 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_reg_3730 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_186_reg_3737 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_1_fu_1533_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_1_reg_3743 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_378_reg_3748 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_1_fu_1567_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_1_reg_3755 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_381_fu_1573_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_381_reg_3761 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_1_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_1_reg_3767 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_reg_3774 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_2_fu_1614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_2_reg_3780 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_383_reg_3785 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_2_fu_1648_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_2_reg_3792 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_386_fu_1654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_386_reg_3798 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_2_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_2_reg_3804 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_reg_3811 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_3_fu_1695_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_3_reg_3817 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_388_reg_3822 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_3_fu_1729_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_3_reg_3829 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_391_fu_1735_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_391_reg_3835 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_3_fu_1749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_3_reg_3841 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_189_reg_3848 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_4_fu_1776_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_4_reg_3854 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_393_reg_3859 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_4_fu_1810_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_4_reg_3866 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_396_fu_1816_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_396_reg_3872 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_4_fu_1830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_4_reg_3878 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_reg_3885 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_5_fu_1857_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_5_reg_3891 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_398_reg_3896 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_5_fu_1891_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_5_reg_3903 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_401_fu_1897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_401_reg_3909 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_5_fu_1911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_5_reg_3915 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_reg_3922 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_6_fu_1938_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_6_reg_3928 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_403_reg_3933 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_6_fu_1972_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_6_reg_3940 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_406_fu_1978_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_406_reg_3946 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_6_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_6_reg_3952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_reg_3959 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_62_7_fu_2019_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_7_reg_3965 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_408_reg_3970 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_7_fu_2053_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_7_reg_3977 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_411_fu_2059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_411_reg_3983 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_7_fu_2073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_10_7_reg_3989 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_reg_3996 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_38_i_i_fu_2131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_reg_4002 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_183_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_183_reg_4007 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_4012 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_4017 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_reg_4022 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_reg_4027 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_1_fu_2244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_1_reg_4032 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_17_fu_2255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_17_reg_4037 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_2272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_reg_4042 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_fu_2277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_reg_4047 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_fu_2325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_reg_4052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_2_fu_2341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_2_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_11_fu_2352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_11_reg_4062 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_2369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_fu_2422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_reg_4077 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_3_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_3_reg_4082 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_12_fu_2449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_12_reg_4087 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_2466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_4092 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_reg_4097 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_fu_2519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_reg_4102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_4_fu_2535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_4_reg_4107 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_13_fu_2546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_13_reg_4112 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_2563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_reg_4117 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_fu_2568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_reg_4122 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_fu_2616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_reg_4127 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_5_fu_2632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_5_reg_4132 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_14_fu_2643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_14_reg_4137 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_2660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_reg_4142 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_fu_2665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_reg_4147 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_fu_2713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_reg_4152 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_6_fu_2729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_6_reg_4157 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_15_fu_2740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_15_reg_4162 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_2757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_reg_4167 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_reg_4172 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_fu_2810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_reg_4177 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_7_fu_2826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_7_reg_4182 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_16_fu_2837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_16_reg_4187 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_fu_2854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_reg_4192 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_fu_2859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_reg_4197 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten6_fu_3105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten6_reg_4202 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state15_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp1_iter1_exitcond_flatten6_reg_4202 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_2_fu_3111_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten7_fu_3117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten7_reg_4211 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_fu_3135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_4217 : STD_LOGIC_VECTOR (0 downto 0);
    signal w6_mid2_fu_3147_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal w6_mid2_reg_4222 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_pp1_iter1_w6_mid2_reg_4222 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next1_1_fu_3161_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal arrayNo5_mid2_v_fu_3182_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal arrayNo5_mid2_v_reg_4233 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_367_fu_3189_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_367_reg_4238 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp1_iter2_tmp_367_reg_4238 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_175_mid2_fu_3239_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_175_mid2_reg_4243 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_282_fu_3250_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_282_reg_4248 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_18_fu_3256_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_0_Downs_32_reg_4259 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_33_reg_4265 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_34_reg_4271 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_35_reg_4277 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_36_reg_4283 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_37_reg_4289 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_38_reg_4295 : STD_LOGIC_VECTOR (11 downto 0);
    signal ShuffleConvs_0_Downs_39_reg_4301 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal co_phi_fu_649_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal h_phi_fu_672_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_phi_fu_684_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal h1_reg_691 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal w2_reg_703 : STD_LOGIC_VECTOR (5 downto 0);
    signal ci_reg_715 : STD_LOGIC_VECTOR (4 downto 0);
    signal co3_reg_726 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal co4_phi_fu_752_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal h5_phi_fu_775_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal w6_phi_fu_787_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_313_cast_fu_988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_330_cast_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_334_cast_fu_1251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_342_cast_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_322_cast_fu_3294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal this_assign_1_6_fu_3066_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_369_fu_3327_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_assign_1_5_fu_3036_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_4_fu_3006_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_3_fu_2976_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_2_fu_2946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_1_fu_2916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_fu_2886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_7_fu_3096_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_op_fu_844_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_17_fu_858_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex8_mid2_v_fu_887_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_897_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_909_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl3_cast_fu_917_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_cast_fu_905_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_mid_fu_864_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal h_15_fu_927_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_273_fu_921_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_172_mid2_cast_fu_940_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_366_fu_962_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_cast_fu_969_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl_cast_fu_955_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_276_fu_973_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_174_cast_fu_979_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_277_fu_982_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex_fu_1046_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_285_fu_1056_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_286_fu_1068_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl7_cast_fu_1076_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl6_cast_fu_1064_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_287_fu_1080_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_288_fu_1086_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_371_fu_1099_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_cast_fu_1107_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl4_cast_fu_1091_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_289_fu_1111_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_290_fu_1117_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex3_fu_1146_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_291_fu_1156_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_292_fu_1168_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl12_cast_fu_1164_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl13_cast_fu_1176_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_293_fu_1180_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_fu_1191_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl11_cast_fu_1199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_296_fu_1203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_fu_1209_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_372_fu_1222_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_cast_fu_1214_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl9_cast_fu_1230_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_298_fu_1234_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_s_fu_1301_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1301_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP2_V_fu_1298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_1_fu_1319_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_1_fu_1319_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_2_fu_1337_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_2_fu_1337_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_3_fu_1355_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_3_fu_1355_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_4_fu_1373_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_4_fu_1373_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_5_fu_1391_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_5_fu_1391_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_6_fu_1409_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_6_fu_1409_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_7_fu_1427_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_61_7_fu_1427_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_179_fu_1441_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_203_cast_fu_1448_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_1465_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_180_fu_1475_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_375_fu_1478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_1_fu_1522_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_1_cast_fu_1529_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_1_fu_1546_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_1_fu_1556_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_380_fu_1559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_1_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_2_fu_1603_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_2_cast_fu_1610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_2_fu_1627_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_2_fu_1637_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_385_fu_1640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_2_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_3_fu_1684_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_3_cast_fu_1691_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_3_fu_1708_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_3_fu_1718_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_390_fu_1721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_3_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_4_fu_1765_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_4_cast_fu_1772_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_4_fu_1789_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_4_fu_1799_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_395_fu_1802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_4_fu_1824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_5_fu_1846_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_5_cast_fu_1853_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_5_fu_1870_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_5_fu_1880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_400_fu_1883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_5_fu_1905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_6_fu_1927_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_6_cast_fu_1934_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_6_fu_1951_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_6_fu_1961_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_405_fu_1964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_6_fu_1986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_7_fu_2008_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_269_7_cast_fu_2015_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_63_7_fu_2032_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_273_7_fu_2042_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_410_fu_2045_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_7_fu_2067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_2096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_377_fu_2089_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_2106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_2124_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_2152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_2198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_fu_2186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_1_fu_2210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_1_fu_2216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_2203_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_1_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_1_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_2221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_2266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_2249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_2290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_2295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_387_fu_2283_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_2_fu_2307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_2_fu_2313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_2300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_2_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_2_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_2318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_2357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_2363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_2346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_2387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_2392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_392_fu_2380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_3_fu_2404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_3_fu_2410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_3_fu_2427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_3_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_2415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_demorgan_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_2460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_2443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_2484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_2489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_397_fu_2477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_4_fu_2501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_4_fu_2507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_2494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_4_fu_2524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_4_fu_2530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_demorgan_fu_2551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_2557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_fu_2540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_2581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_2586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_402_fu_2574_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_5_fu_2598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_5_fu_2604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_2591_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_5_fu_2621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_5_fu_2627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_5_fu_2609_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_demorgan_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_2654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_fu_2637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_6_fu_2678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_2683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_407_fu_2671_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_6_fu_2695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_6_fu_2701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_2688_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_6_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_6_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_2706_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_demorgan_fu_2745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_2751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_2734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_7_fu_2775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_7_fu_2780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_412_fu_2768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_7_fu_2792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_7_fu_2798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_7_fu_2785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_7_fu_2815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_7_fu_2821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_7_fu_2803_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_demorgan_fu_2842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_2848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_2831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_2865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_2869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_fu_2874_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_112_fu_2880_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_2895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_1_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_1_fu_2904_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_1_113_fu_2910_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_2925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_2_fu_2929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_2_fu_2934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_2_114_fu_2940_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_2955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_3_fu_2959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_3_fu_2964_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_3_115_fu_2970_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp10_fu_2985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_4_fu_2989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_4_fu_2994_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_4_116_fu_3000_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp12_fu_3015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_5_fu_3019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_5_fu_3024_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_5_117_fu_3030_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp14_fu_3045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_6_fu_3049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_6_fu_3054_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_6_118_fu_3060_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp16_fu_3075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_7_fu_3079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_64_mux_7_fu_3084_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_64_7_119_fu_3090_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond11_fu_3129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_8_fu_3123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_fu_3141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten21_op_fu_3155_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_18_fu_3169_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex1_mid2_v_fu_3193_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_278_fu_3203_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_279_fu_3215_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl17_cast_fu_3223_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl16_cast_fu_3211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal h5_mid_fu_3175_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal h_5_fu_3233_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_280_fu_3227_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_175_mid2_cast_fu_3246_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_368_fu_3268_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl15_cast_fu_3275_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl14_cast_fu_3261_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_283_fu_3279_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_177_cast_fu_3285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_284_fu_3288_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_184_fu_3306_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component ShuffleNetV2_mux_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    ShuffleNetV2_mux_jbC_x_U16 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => conv1_output_p_V_0_q0,
        din2 => conv1_output_p_V_1_q0,
        din3 => conv1_output_p_V_2_q0,
        din4 => conv1_output_p_V_3_q0,
        din5 => conv1_output_p_V_4_q0,
        din6 => conv1_output_p_V_5_q0,
        din7 => conv1_output_p_V_6_q0,
        din8 => conv1_output_p_V_7_q0,
        din9 => tmp_370_reg_3433,
        dout => tmp_185_fu_1273_p10);

    ShuffleNetV2_mux_jbC_x_U17 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => ShuffleConvs_0_Downs_7_q0,
        din2 => ShuffleConvs_0_Downs_6_q0,
        din3 => ShuffleConvs_0_Downs_5_q0,
        din4 => ShuffleConvs_0_Downs_4_q0,
        din5 => ShuffleConvs_0_Downs_3_q0,
        din6 => ShuffleConvs_0_Downs_2_q0,
        din7 => ShuffleConvs_0_Downs_1_q0,
        din8 => ShuffleConvs_0_Downs_q0,
        din9 => ap_reg_pp1_iter2_tmp_367_reg_4238,
        dout => tmp_184_fu_3306_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state15))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state15)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_715_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = exitcond10_fu_1140_p2))) then 
                ci_reg_715 <= ci_4_reg_3423;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond8_fu_1010_p2))) then 
                ci_reg_715 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    co3_reg_726_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond9_fu_1026_p2))) then 
                co3_reg_726 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                co3_reg_726 <= co_18_7_reg_3496;
            end if; 
        end if;
    end process;

    co4_reg_748_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                co4_reg_748 <= ap_const_lv5_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
                co4_reg_748 <= arrayNo5_mid2_v_reg_4233;
            end if; 
        end if;
    end process;

    co_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 = ap_const_lv1_0))) then 
                co_reg_645 <= tmp_mid2_v_reg_3366;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_645 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h1_reg_691_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                h1_reg_691 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond8_fu_1010_p2 = ap_const_lv1_1))) then 
                h1_reg_691 <= h_6_fu_1020_p2;
            end if; 
        end if;
    end process;

    h5_reg_771_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                h5_reg_771 <= ap_const_lv6_1;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
                h5_reg_771 <= tmp_175_mid2_reg_4243;
            end if; 
        end if;
    end process;

    h_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 = ap_const_lv1_0))) then 
                h_reg_668 <= tmp_172_mid2_reg_3375;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_reg_668 <= ap_const_lv6_1;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_634_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_794_p2 = ap_const_lv1_0))) then 
                indvar_flatten1_reg_634 <= indvar_flatten_next1_fu_800_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten1_reg_634 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_737_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                indvar_flatten2_reg_737 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten6_fu_3105_p2))) then 
                indvar_flatten2_reg_737 <= indvar_flatten_next1_2_fu_3111_p2;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_760_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                indvar_flatten3_reg_760 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten6_fu_3105_p2))) then 
                indvar_flatten3_reg_760 <= indvar_flatten_next1_1_fu_3161_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_794_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_657 <= indvar_flatten_next_fu_850_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_657 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    w2_reg_703_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond7_fu_1000_p2))) then 
                w2_reg_703 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond9_fu_1026_p2))) then 
                w2_reg_703 <= w_17_fu_1134_p2;
            end if; 
        end if;
    end process;

    w6_reg_783_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then 
                w6_reg_783 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten6_reg_4202))) then 
                w6_reg_783 <= w_18_fu_3256_p2;
            end if; 
        end if;
    end process;

    w_reg_680_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3335 = ap_const_lv1_0))) then 
                w_reg_680 <= w_16_fu_950_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_reg_680 <= ap_const_lv6_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                ShuffleConvs_0_Downs_16_reg_3541 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_17_reg_3546 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_18_reg_3551 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_19_reg_3556 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_20_reg_3561 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_21_reg_3566 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_22_reg_3571 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_23_reg_3576 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
                tmp_185_reg_3581 <= tmp_185_fu_1273_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                ShuffleConvs_0_Downs_24_reg_3591 <= ShuffleConvs_0_Downs_7_q0;
                ShuffleConvs_0_Downs_25_reg_3606 <= ShuffleConvs_0_Downs_6_q0;
                ShuffleConvs_0_Downs_26_reg_3621 <= ShuffleConvs_0_Downs_5_q0;
                ShuffleConvs_0_Downs_27_reg_3636 <= ShuffleConvs_0_Downs_4_q0;
                ShuffleConvs_0_Downs_28_reg_3651 <= ShuffleConvs_0_Downs_3_q0;
                ShuffleConvs_0_Downs_29_reg_3666 <= ShuffleConvs_0_Downs_2_q0;
                ShuffleConvs_0_Downs_30_reg_3681 <= ShuffleConvs_0_Downs_1_q0;
                ShuffleConvs_0_Downs_31_reg_3696 <= ShuffleConvs_0_Downs_q0;
                p_Val2_61_1_reg_3601 <= p_Val2_61_1_fu_1319_p2;
                p_Val2_61_2_reg_3616 <= p_Val2_61_2_fu_1337_p2;
                p_Val2_61_3_reg_3631 <= p_Val2_61_3_fu_1355_p2;
                p_Val2_61_4_reg_3646 <= p_Val2_61_4_fu_1373_p2;
                p_Val2_61_5_reg_3661 <= p_Val2_61_5_fu_1391_p2;
                p_Val2_61_6_reg_3676 <= p_Val2_61_6_fu_1409_p2;
                p_Val2_61_7_reg_3691 <= p_Val2_61_7_fu_1427_p2;
                p_Val2_s_reg_3586 <= p_Val2_s_fu_1301_p2;
                tmp_374_reg_3596 <= p_Val2_s_fu_1301_p2(5 downto 5);
                tmp_379_reg_3611 <= p_Val2_61_1_fu_1319_p2(5 downto 5);
                tmp_384_reg_3626 <= p_Val2_61_2_fu_1337_p2(5 downto 5);
                tmp_389_reg_3641 <= p_Val2_61_3_fu_1355_p2(5 downto 5);
                tmp_394_reg_3656 <= p_Val2_61_4_fu_1373_p2(5 downto 5);
                tmp_399_reg_3671 <= p_Val2_61_5_fu_1391_p2(5 downto 5);
                tmp_404_reg_3686 <= p_Val2_61_6_fu_1409_p2(5 downto 5);
                tmp_409_reg_3701 <= p_Val2_61_7_fu_1427_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten6_reg_4202))) then
                ShuffleConvs_0_Downs_32_reg_4259 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_33_reg_4265 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_34_reg_4271 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_35_reg_4277 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_36_reg_4283 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_37_reg_4289 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_38_reg_4295 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
                ShuffleConvs_0_Downs_39_reg_4301 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten_reg_3335 <= exitcond_flatten_reg_3335;
                ap_reg_pp0_iter1_w_mid2_reg_3355 <= w_mid2_reg_3355;
                exitcond_flatten_reg_3335 <= exitcond_flatten_fu_794_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp1_iter1_exitcond_flatten6_reg_4202 <= exitcond_flatten6_reg_4202;
                ap_reg_pp1_iter1_w6_mid2_reg_4222 <= w6_mid2_reg_4222;
                exitcond_flatten6_reg_4202 <= exitcond_flatten6_fu_3105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp1_iter2_tmp_367_reg_4238 <= tmp_367_reg_4238;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten6_reg_4202))) then
                arrayNo5_mid2_v_reg_4233 <= arrayNo5_mid2_v_fu_3182_p3;
                tmp_175_mid2_reg_4243 <= tmp_175_mid2_fu_3239_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                brmerge40_demorgan_i_11_reg_4062 <= brmerge40_demorgan_i_11_fu_2352_p2;
                brmerge40_demorgan_i_12_reg_4087 <= brmerge40_demorgan_i_12_fu_2449_p2;
                brmerge40_demorgan_i_13_reg_4112 <= brmerge40_demorgan_i_13_fu_2546_p2;
                brmerge40_demorgan_i_14_reg_4137 <= brmerge40_demorgan_i_14_fu_2643_p2;
                brmerge40_demorgan_i_15_reg_4162 <= brmerge40_demorgan_i_15_fu_2740_p2;
                brmerge40_demorgan_i_16_reg_4187 <= brmerge40_demorgan_i_16_fu_2837_p2;
                brmerge40_demorgan_i_17_reg_4037 <= brmerge40_demorgan_i_17_fu_2255_p2;
                brmerge40_demorgan_i_reg_4012 <= brmerge40_demorgan_i_fu_2158_p2;
                brmerge_i_i_i_1_reg_4047 <= brmerge_i_i_i_1_fu_2277_p2;
                brmerge_i_i_i_2_reg_4072 <= brmerge_i_i_i_2_fu_2374_p2;
                brmerge_i_i_i_3_reg_4097 <= brmerge_i_i_i_3_fu_2471_p2;
                brmerge_i_i_i_4_reg_4122 <= brmerge_i_i_i_4_fu_2568_p2;
                brmerge_i_i_i_5_reg_4147 <= brmerge_i_i_i_5_fu_2665_p2;
                brmerge_i_i_i_6_reg_4172 <= brmerge_i_i_i_6_fu_2762_p2;
                brmerge_i_i_i_7_reg_4197 <= brmerge_i_i_i_7_fu_2859_p2;
                brmerge_i_i_i_reg_4022 <= brmerge_i_i_i_fu_2180_p2;
                p_38_i_i_1_reg_4027 <= p_38_i_i_1_fu_2228_p2;
                p_38_i_i_2_reg_4052 <= p_38_i_i_2_fu_2325_p2;
                p_38_i_i_3_reg_4077 <= p_38_i_i_3_fu_2422_p2;
                p_38_i_i_4_reg_4102 <= p_38_i_i_4_fu_2519_p2;
                p_38_i_i_5_reg_4127 <= p_38_i_i_5_fu_2616_p2;
                p_38_i_i_6_reg_4152 <= p_38_i_i_6_fu_2713_p2;
                p_38_i_i_7_reg_4177 <= p_38_i_i_7_fu_2810_p2;
                p_38_i_i_reg_4002 <= p_38_i_i_fu_2131_p2;
                tmp_183_reg_4007 <= tmp_183_fu_2147_p2;
                tmp_282_1_reg_4032 <= tmp_282_1_fu_2244_p2;
                tmp_282_2_reg_4057 <= tmp_282_2_fu_2341_p2;
                tmp_282_3_reg_4082 <= tmp_282_3_fu_2438_p2;
                tmp_282_4_reg_4107 <= tmp_282_4_fu_2535_p2;
                tmp_282_5_reg_4132 <= tmp_282_5_fu_2632_p2;
                tmp_282_6_reg_4157 <= tmp_282_6_fu_2729_p2;
                tmp_282_7_reg_4182 <= tmp_282_7_fu_2826_p2;
                underflow_1_reg_4042 <= underflow_1_fu_2272_p2;
                underflow_2_reg_4067 <= underflow_2_fu_2369_p2;
                underflow_3_reg_4092 <= underflow_3_fu_2466_p2;
                underflow_4_reg_4117 <= underflow_4_fu_2563_p2;
                underflow_5_reg_4142 <= underflow_5_fu_2660_p2;
                underflow_6_reg_4167 <= underflow_6_fu_2757_p2;
                underflow_7_reg_4192 <= underflow_7_fu_2854_p2;
                underflow_reg_4017 <= underflow_fu_2175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                carry_10_1_reg_3767 <= carry_10_1_fu_1587_p2;
                carry_10_2_reg_3804 <= carry_10_2_fu_1668_p2;
                carry_10_3_reg_3841 <= carry_10_3_fu_1749_p2;
                carry_10_4_reg_3878 <= carry_10_4_fu_1830_p2;
                carry_10_5_reg_3915 <= carry_10_5_fu_1911_p2;
                carry_10_6_reg_3952 <= carry_10_6_fu_1992_p2;
                carry_10_7_reg_3989 <= carry_10_7_fu_2073_p2;
                carry_s_reg_3730 <= carry_s_fu_1506_p2;
                p_Val2_1_reg_3706 <= p_Val2_1_fu_1452_p2;
                p_Val2_3_reg_3718 <= p_Val2_3_fu_1486_p2;
                p_Val2_62_1_reg_3743 <= p_Val2_62_1_fu_1533_p2;
                p_Val2_62_2_reg_3780 <= p_Val2_62_2_fu_1614_p2;
                p_Val2_62_3_reg_3817 <= p_Val2_62_3_fu_1695_p2;
                p_Val2_62_4_reg_3854 <= p_Val2_62_4_fu_1776_p2;
                p_Val2_62_5_reg_3891 <= p_Val2_62_5_fu_1857_p2;
                p_Val2_62_6_reg_3928 <= p_Val2_62_6_fu_1938_p2;
                p_Val2_62_7_reg_3965 <= p_Val2_62_7_fu_2019_p2;
                p_Val2_64_1_reg_3755 <= p_Val2_64_1_fu_1567_p2;
                p_Val2_64_2_reg_3792 <= p_Val2_64_2_fu_1648_p2;
                p_Val2_64_3_reg_3829 <= p_Val2_64_3_fu_1729_p2;
                p_Val2_64_4_reg_3866 <= p_Val2_64_4_fu_1810_p2;
                p_Val2_64_5_reg_3903 <= p_Val2_64_5_fu_1891_p2;
                p_Val2_64_6_reg_3940 <= p_Val2_64_6_fu_1972_p2;
                p_Val2_64_7_reg_3977 <= p_Val2_64_7_fu_2053_p2;
                tmp_186_reg_3737 <= p_Val2_1_fu_1452_p2(15 downto 14);
                tmp_187_reg_3774 <= p_Val2_62_1_fu_1533_p2(15 downto 14);
                tmp_188_reg_3811 <= p_Val2_62_2_fu_1614_p2(15 downto 14);
                tmp_189_reg_3848 <= p_Val2_62_3_fu_1695_p2(15 downto 14);
                tmp_190_reg_3885 <= p_Val2_62_4_fu_1776_p2(15 downto 14);
                tmp_191_reg_3922 <= p_Val2_62_5_fu_1857_p2(15 downto 14);
                tmp_192_reg_3959 <= p_Val2_62_6_fu_1938_p2(15 downto 14);
                tmp_193_reg_3996 <= p_Val2_62_7_fu_2019_p2(15 downto 14);
                tmp_373_reg_3711 <= p_Val2_1_fu_1452_p2(15 downto 15);
                tmp_376_reg_3724 <= p_Val2_3_fu_1486_p2(7 downto 7);
                tmp_378_reg_3748 <= p_Val2_62_1_fu_1533_p2(15 downto 15);
                tmp_381_reg_3761 <= p_Val2_64_1_fu_1567_p2(7 downto 7);
                tmp_383_reg_3785 <= p_Val2_62_2_fu_1614_p2(15 downto 15);
                tmp_386_reg_3798 <= p_Val2_64_2_fu_1648_p2(7 downto 7);
                tmp_388_reg_3822 <= p_Val2_62_3_fu_1695_p2(15 downto 15);
                tmp_391_reg_3835 <= p_Val2_64_3_fu_1729_p2(7 downto 7);
                tmp_393_reg_3859 <= p_Val2_62_4_fu_1776_p2(15 downto 15);
                tmp_396_reg_3872 <= p_Val2_64_4_fu_1810_p2(7 downto 7);
                tmp_398_reg_3896 <= p_Val2_62_5_fu_1857_p2(15 downto 15);
                tmp_401_reg_3909 <= p_Val2_64_5_fu_1891_p2(7 downto 7);
                tmp_403_reg_3933 <= p_Val2_62_6_fu_1938_p2(15 downto 15);
                tmp_406_reg_3946 <= p_Val2_64_6_fu_1972_p2(7 downto 7);
                tmp_408_reg_3970 <= p_Val2_62_7_fu_2019_p2(15 downto 15);
                tmp_411_reg_3983 <= p_Val2_64_7_fu_2053_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                ci_4_reg_3423 <= ci_4_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = exitcond10_fu_1140_p2))) then
                co_18_7_reg_3496 <= co_18_7_fu_1245_p2;
                tmp_294_reg_3486 <= tmp_294_fu_1186_p2;
                tmp_299_reg_3491 <= tmp_299_fu_1240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond9_fu_1026_p2))) then
                conv1_output_p_V_0_a_reg_3438 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_1_a_reg_3473 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_2_a_reg_3463 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_3_a_reg_3458 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_4_a_reg_3443 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_5_a_reg_3468 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_6_a_reg_3453 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                conv1_output_p_V_7_a_reg_3448 <= tmp_330_cast_fu_1122_p1(12 - 1 downto 0);
                    tmp_176_cast_reg_3428(4 downto 0) <= tmp_176_cast_fu_1038_p1(4 downto 0);
                tmp_370_reg_3433 <= tmp_370_fu_1042_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (exitcond_flatten_fu_794_p2 = ap_const_lv1_0))) then
                exitcond23_mid_reg_3350 <= exitcond23_mid_fu_824_p2;
                exitcond_flatten5_reg_3344 <= exitcond_flatten5_fu_806_p2;
                w_mid2_reg_3355 <= w_mid2_fu_836_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten6_fu_3105_p2))) then
                exitcond_flatten7_reg_4211 <= exitcond_flatten7_fu_3117_p2;
                exitcond_mid_reg_4217 <= exitcond_mid_fu_3135_p2;
                w6_mid2_reg_4222 <= w6_mid2_fu_3147_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3335 = ap_const_lv1_0))) then
                tmp_172_mid2_reg_3375 <= tmp_172_mid2_fu_933_p3;
                tmp_mid2_v_reg_3366 <= tmp_mid2_v_fu_871_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond8_fu_1010_p2))) then
                    tmp_173_cast_reg_3409(5 downto 0) <= tmp_173_cast_fu_1016_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (exitcond_flatten_reg_3335 = ap_const_lv1_0))) then
                tmp_275_reg_3380 <= tmp_275_fu_944_p2;
                tmp_365_reg_3371 <= tmp_365_fu_883_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten6_reg_4202))) then
                tmp_282_reg_4248 <= tmp_282_fu_3250_p2;
                tmp_367_reg_4238 <= tmp_367_fu_3189_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond7_fu_1000_p2))) then
                    tmp_cast_reg_3400(5 downto 0) <= tmp_cast_fu_1006_p1(5 downto 0);
            end if;
        end if;
    end process;
    tmp_cast_reg_3400(7 downto 6) <= "00";
    tmp_173_cast_reg_3409(12 downto 6) <= "0000000";
    tmp_176_cast_reg_3428(7 downto 5) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_794_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond7_fu_1000_p2, ap_CS_fsm_state6, ap_CS_fsm_state7, exitcond8_fu_1010_p2, ap_CS_fsm_state8, exitcond9_fu_1026_p2, ap_CS_fsm_state9, exitcond10_fu_1140_p2, exitcond_flatten6_fu_3105_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_flag00011011, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_794_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_794_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond7_fu_1000_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond8_fu_1010_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond9_fu_1026_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = exitcond10_fu_1140_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten6_fu_3105_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten6_fu_3105_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
        OP2_V_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_185_reg_3581),16));

    Range1_all_ones_1_fu_2193_p2 <= "1" when (tmp_187_reg_3774 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_2290_p2 <= "1" when (tmp_188_reg_3811 = ap_const_lv2_3) else "0";
    Range1_all_ones_3_fu_2387_p2 <= "1" when (tmp_189_reg_3848 = ap_const_lv2_3) else "0";
    Range1_all_ones_4_fu_2484_p2 <= "1" when (tmp_190_reg_3885 = ap_const_lv2_3) else "0";
    Range1_all_ones_5_fu_2581_p2 <= "1" when (tmp_191_reg_3922 = ap_const_lv2_3) else "0";
    Range1_all_ones_6_fu_2678_p2 <= "1" when (tmp_192_reg_3959 = ap_const_lv2_3) else "0";
    Range1_all_ones_7_fu_2775_p2 <= "1" when (tmp_193_reg_3996 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_2096_p2 <= "1" when (tmp_186_reg_3737 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_2198_p2 <= "1" when (tmp_187_reg_3774 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_2295_p2 <= "1" when (tmp_188_reg_3811 = ap_const_lv2_0) else "0";
    Range1_all_zeros_3_fu_2392_p2 <= "1" when (tmp_189_reg_3848 = ap_const_lv2_0) else "0";
    Range1_all_zeros_4_fu_2489_p2 <= "1" when (tmp_190_reg_3885 = ap_const_lv2_0) else "0";
    Range1_all_zeros_5_fu_2586_p2 <= "1" when (tmp_191_reg_3922 = ap_const_lv2_0) else "0";
    Range1_all_zeros_6_fu_2683_p2 <= "1" when (tmp_192_reg_3959 = ap_const_lv2_0) else "0";
    Range1_all_zeros_7_fu_2780_p2 <= "1" when (tmp_193_reg_3996 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_2101_p2 <= "1" when (tmp_186_reg_3737 = ap_const_lv2_0) else "0";

    ShuffleConvs_0_Downs_1_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_23_reg_3576, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_1_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_1_address0 <= ShuffleConvs_0_Downs_23_reg_3576;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_1_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_1_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_1_address1 <= ShuffleConvs_0_Downs_39_reg_4301;

    ShuffleConvs_0_Downs_1_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_1_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_1_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_6_fu_3066_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_1_d0 <= this_assign_1_6_fu_3066_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_1_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_1_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_1_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_1_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_6)))) then 
            ShuffleConvs_0_Downs_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_1_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_6))) then 
            ShuffleConvs_0_Downs_1_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_2_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_20_reg_3561, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_2_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_2_address0 <= ShuffleConvs_0_Downs_20_reg_3561;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_2_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_2_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_2_address1 <= ShuffleConvs_0_Downs_36_reg_4283;

    ShuffleConvs_0_Downs_2_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_2_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_2_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_2_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_2_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_5_fu_3036_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_2_d0 <= this_assign_1_5_fu_3036_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_2_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_2_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_2_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_2_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_5)))) then 
            ShuffleConvs_0_Downs_2_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_2_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_5))) then 
            ShuffleConvs_0_Downs_2_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_17_reg_3546, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_3_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_3_address0 <= ShuffleConvs_0_Downs_17_reg_3546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_3_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_3_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_3_address1 <= ShuffleConvs_0_Downs_33_reg_4265;

    ShuffleConvs_0_Downs_3_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_3_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_3_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_4_fu_3006_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_3_d0 <= this_assign_1_4_fu_3006_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_3_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_3_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_3_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_3_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_4)))) then 
            ShuffleConvs_0_Downs_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_3_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_4))) then 
            ShuffleConvs_0_Downs_3_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_22_reg_3571, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_4_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_4_address0 <= ShuffleConvs_0_Downs_22_reg_3571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_4_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_4_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_4_address1 <= ShuffleConvs_0_Downs_38_reg_4295;

    ShuffleConvs_0_Downs_4_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_4_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_4_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_3_fu_2976_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_4_d0 <= this_assign_1_3_fu_2976_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_4_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_4_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_4_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_4_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_3)))) then 
            ShuffleConvs_0_Downs_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_4_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_3))) then 
            ShuffleConvs_0_Downs_4_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_18_reg_3551, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_5_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_5_address0 <= ShuffleConvs_0_Downs_18_reg_3551;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_5_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_5_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_5_address1 <= ShuffleConvs_0_Downs_34_reg_4271;

    ShuffleConvs_0_Downs_5_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_5_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_5_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_2_fu_2946_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_5_d0 <= this_assign_1_2_fu_2946_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_5_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_5_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_5_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_5_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_2)))) then 
            ShuffleConvs_0_Downs_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_5_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_2))) then 
            ShuffleConvs_0_Downs_5_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_21_reg_3566, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_6_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_6_address0 <= ShuffleConvs_0_Downs_21_reg_3566;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_6_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_6_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_6_address1 <= ShuffleConvs_0_Downs_37_reg_4289;

    ShuffleConvs_0_Downs_6_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_6_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_6_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_1_fu_2916_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_6_d0 <= this_assign_1_1_fu_2916_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_6_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_6_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_6_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_6_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_1)))) then 
            ShuffleConvs_0_Downs_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_6_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_1))) then 
            ShuffleConvs_0_Downs_6_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_16_reg_3541, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_7_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_7_address0 <= ShuffleConvs_0_Downs_16_reg_3541;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_7_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_7_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_7_address1 <= ShuffleConvs_0_Downs_32_reg_4259;

    ShuffleConvs_0_Downs_7_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_7_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_7_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_fu_2886_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_7_d0 <= this_assign_1_fu_2886_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_7_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_7_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_7_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_7_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_0)))) then 
            ShuffleConvs_0_Downs_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_7_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_0))) then 
            ShuffleConvs_0_Downs_7_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_0_Downs_19_reg_3556, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_313_cast_fu_988_p1, tmp_342_cast_fu_1262_p1, tmp_322_cast_fu_3294_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_address0 <= tmp_322_cast_fu_3294_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_address0 <= ShuffleConvs_0_Downs_19_reg_3556;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_0_Downs_address0 <= tmp_342_cast_fu_1262_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_address0 <= tmp_313_cast_fu_988_p1(12 - 1 downto 0);
        else 
            ShuffleConvs_0_Downs_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_address1 <= ShuffleConvs_0_Downs_35_reg_4277;

    ShuffleConvs_0_Downs_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_0_Downs_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_0_Downs_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_7_fu_3096_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_0_Downs_d0 <= this_assign_1_7_fu_3096_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_0_Downs_d0 <= bias_V_q0;
        else 
            ShuffleConvs_0_Downs_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_0_Downs_d1 <= ap_const_lv8_0;

    ShuffleConvs_0_Downs_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_365_reg_3371, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_365_reg_3371 = ap_const_lv3_7)))) then 
            ShuffleConvs_0_Downs_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_0_Downs_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_367_reg_4238, ap_enable_reg_pp1_iter3, tmp_369_fu_3327_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_369_fu_3327_p3) and (ap_reg_pp1_iter2_tmp_367_reg_4238 = ap_const_lv3_7))) then 
            ShuffleConvs_0_Downs_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_0_Downs_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state19 <= ap_CS_fsm(13);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_794_p2)
    begin
        if ((exitcond_flatten_fu_794_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state15_assign_proc : process(exitcond_flatten6_fu_3105_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_flatten6_fu_3105_p2)) then 
            ap_condition_pp1_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1) and (ap_const_logic_0 = ap_enable_reg_pp1_iter2) and (ap_const_logic_0 = ap_enable_reg_pp1_iter3))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo5_mid2_v_fu_3182_p3 <= 
        co_18_fu_3169_p2 when (exitcond_flatten7_reg_4211(0) = '1') else 
        co4_phi_fu_752_p4;
    bias_V_address0 <= tmp_mid2_fu_878_p1(5 - 1 downto 0);

    bias_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge40_demorgan_i_11_fu_2352_p2 <= (tmp_386_reg_3798 and deleted_ones_2_fu_2318_p3);
    brmerge40_demorgan_i_12_fu_2449_p2 <= (tmp_391_reg_3835 and deleted_ones_3_fu_2415_p3);
    brmerge40_demorgan_i_13_fu_2546_p2 <= (tmp_396_reg_3872 and deleted_ones_4_fu_2512_p3);
    brmerge40_demorgan_i_14_fu_2643_p2 <= (tmp_401_reg_3909 and deleted_ones_5_fu_2609_p3);
    brmerge40_demorgan_i_15_fu_2740_p2 <= (tmp_406_reg_3946 and deleted_ones_6_fu_2706_p3);
    brmerge40_demorgan_i_16_fu_2837_p2 <= (tmp_411_reg_3983 and deleted_ones_7_fu_2803_p3);
    brmerge40_demorgan_i_17_fu_2255_p2 <= (tmp_381_reg_3761 and deleted_ones_1_fu_2221_p3);
    brmerge40_demorgan_i_fu_2158_p2 <= (tmp_376_reg_3724 and deleted_ones_fu_2124_p3);
    brmerge_i_i_1_fu_2239_p2 <= (tmp_381_reg_3761 or p_not_i_i_1_fu_2233_p2);
    brmerge_i_i_2_fu_2336_p2 <= (tmp_386_reg_3798 or p_not_i_i_2_fu_2330_p2);
    brmerge_i_i_3_fu_2433_p2 <= (tmp_391_reg_3835 or p_not_i_i_3_fu_2427_p2);
    brmerge_i_i_4_fu_2530_p2 <= (tmp_396_reg_3872 or p_not_i_i_4_fu_2524_p2);
    brmerge_i_i_5_fu_2627_p2 <= (tmp_401_reg_3909 or p_not_i_i_5_fu_2621_p2);
    brmerge_i_i_6_fu_2724_p2 <= (tmp_406_reg_3946 or p_not_i_i_6_fu_2718_p2);
    brmerge_i_i_7_fu_2821_p2 <= (tmp_411_reg_3983 or p_not_i_i_7_fu_2815_p2);
    brmerge_i_i_fu_2142_p2 <= (tmp_376_reg_3724 or p_not_i_i_fu_2136_p2);
    brmerge_i_i_i_1_fu_2277_p2 <= (underflow_1_fu_2272_p2 or overflow_1_fu_2249_p2);
    brmerge_i_i_i_2_fu_2374_p2 <= (underflow_2_fu_2369_p2 or overflow_2_fu_2346_p2);
    brmerge_i_i_i_3_fu_2471_p2 <= (underflow_3_fu_2466_p2 or overflow_3_fu_2443_p2);
    brmerge_i_i_i_4_fu_2568_p2 <= (underflow_4_fu_2563_p2 or overflow_4_fu_2540_p2);
    brmerge_i_i_i_5_fu_2665_p2 <= (underflow_5_fu_2660_p2 or overflow_5_fu_2637_p2);
    brmerge_i_i_i_6_fu_2762_p2 <= (underflow_6_fu_2757_p2 or overflow_6_fu_2734_p2);
    brmerge_i_i_i_7_fu_2859_p2 <= (underflow_7_fu_2854_p2 or overflow_7_fu_2831_p2);
    brmerge_i_i_i_fu_2180_p2 <= (underflow_fu_2175_p2 or overflow_fu_2152_p2);
    carry_10_1_fu_1587_p2 <= (tmp_380_fu_1559_p3 and tmp_277_1_fu_1581_p2);
    carry_10_2_fu_1668_p2 <= (tmp_385_fu_1640_p3 and tmp_277_2_fu_1662_p2);
    carry_10_3_fu_1749_p2 <= (tmp_390_fu_1721_p3 and tmp_277_3_fu_1743_p2);
    carry_10_4_fu_1830_p2 <= (tmp_395_fu_1802_p3 and tmp_277_4_fu_1824_p2);
    carry_10_5_fu_1911_p2 <= (tmp_400_fu_1883_p3 and tmp_277_5_fu_1905_p2);
    carry_10_6_fu_1992_p2 <= (tmp_405_fu_1964_p3 and tmp_277_6_fu_1986_p2);
    carry_10_7_fu_2073_p2 <= (tmp_410_fu_2045_p3 and tmp_277_7_fu_2067_p2);
    carry_s_fu_1506_p2 <= (tmp_375_fu_1478_p3 and tmp_181_fu_1500_p2);
    ci_4_fu_1032_p2 <= std_logic_vector(unsigned(ci_reg_715) + unsigned(ap_const_lv5_1));

    co4_phi_fu_752_p4_assign_proc : process(co4_reg_748, ap_reg_pp1_iter1_exitcond_flatten6_reg_4202, arrayNo5_mid2_v_reg_4233, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            co4_phi_fu_752_p4 <= arrayNo5_mid2_v_reg_4233;
        else 
            co4_phi_fu_752_p4 <= co4_reg_748;
        end if; 
    end process;

    co_17_fu_858_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(co_phi_fu_649_p4));
    co_18_7_fu_1245_p2 <= std_logic_vector(unsigned(co3_reg_726) + unsigned(ap_const_lv5_8));
    co_18_fu_3169_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(co4_phi_fu_752_p4));

    co_phi_fu_649_p4_assign_proc : process(co_reg_645, ap_reg_pp0_iter1_exitcond_flatten_reg_3335, tmp_mid2_v_reg_3366, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            co_phi_fu_649_p4 <= tmp_mid2_v_reg_3366;
        else 
            co_phi_fu_649_p4 <= co_reg_645;
        end if; 
    end process;

    conv1_output_p_V_0_address0 <= conv1_output_p_V_0_a_reg_3438;

    conv1_output_p_V_0_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_0_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_1_address0 <= conv1_output_p_V_1_a_reg_3473;

    conv1_output_p_V_1_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_1_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_2_address0 <= conv1_output_p_V_2_a_reg_3463;

    conv1_output_p_V_2_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_2_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_3_address0 <= conv1_output_p_V_3_a_reg_3458;

    conv1_output_p_V_3_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_3_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_4_address0 <= conv1_output_p_V_4_a_reg_3443;

    conv1_output_p_V_4_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_4_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_5_address0 <= conv1_output_p_V_5_a_reg_3468;

    conv1_output_p_V_5_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_5_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_6_address0 <= conv1_output_p_V_6_a_reg_3453;

    conv1_output_p_V_6_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_6_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_p_V_7_address0 <= conv1_output_p_V_7_a_reg_3448;

    conv1_output_p_V_7_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_7_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    deleted_ones_1_fu_2221_p3 <= 
        p_41_i_i_1_fu_2216_p2 when (carry_10_1_reg_3767(0) = '1') else 
        Range1_all_ones_1_fu_2193_p2;
    deleted_ones_2_fu_2318_p3 <= 
        p_41_i_i_2_fu_2313_p2 when (carry_10_2_reg_3804(0) = '1') else 
        Range1_all_ones_2_fu_2290_p2;
    deleted_ones_3_fu_2415_p3 <= 
        p_41_i_i_3_fu_2410_p2 when (carry_10_3_reg_3841(0) = '1') else 
        Range1_all_ones_3_fu_2387_p2;
    deleted_ones_4_fu_2512_p3 <= 
        p_41_i_i_4_fu_2507_p2 when (carry_10_4_reg_3878(0) = '1') else 
        Range1_all_ones_4_fu_2484_p2;
    deleted_ones_5_fu_2609_p3 <= 
        p_41_i_i_5_fu_2604_p2 when (carry_10_5_reg_3915(0) = '1') else 
        Range1_all_ones_5_fu_2581_p2;
    deleted_ones_6_fu_2706_p3 <= 
        p_41_i_i_6_fu_2701_p2 when (carry_10_6_reg_3952(0) = '1') else 
        Range1_all_ones_6_fu_2678_p2;
    deleted_ones_7_fu_2803_p3 <= 
        p_41_i_i_7_fu_2798_p2 when (carry_10_7_reg_3989(0) = '1') else 
        Range1_all_ones_7_fu_2775_p2;
    deleted_ones_fu_2124_p3 <= 
        p_41_i_i_fu_2119_p2 when (carry_s_reg_3730(0) = '1') else 
        Range1_all_ones_fu_2096_p2;
    deleted_zeros_1_fu_2203_p3 <= 
        Range1_all_ones_1_fu_2193_p2 when (carry_10_1_reg_3767(0) = '1') else 
        Range1_all_zeros_1_fu_2198_p2;
    deleted_zeros_2_fu_2300_p3 <= 
        Range1_all_ones_2_fu_2290_p2 when (carry_10_2_reg_3804(0) = '1') else 
        Range1_all_zeros_2_fu_2295_p2;
    deleted_zeros_3_fu_2397_p3 <= 
        Range1_all_ones_3_fu_2387_p2 when (carry_10_3_reg_3841(0) = '1') else 
        Range1_all_zeros_3_fu_2392_p2;
    deleted_zeros_4_fu_2494_p3 <= 
        Range1_all_ones_4_fu_2484_p2 when (carry_10_4_reg_3878(0) = '1') else 
        Range1_all_zeros_4_fu_2489_p2;
    deleted_zeros_5_fu_2591_p3 <= 
        Range1_all_ones_5_fu_2581_p2 when (carry_10_5_reg_3915(0) = '1') else 
        Range1_all_zeros_5_fu_2586_p2;
    deleted_zeros_6_fu_2688_p3 <= 
        Range1_all_ones_6_fu_2678_p2 when (carry_10_6_reg_3952(0) = '1') else 
        Range1_all_zeros_6_fu_2683_p2;
    deleted_zeros_7_fu_2785_p3 <= 
        Range1_all_ones_7_fu_2775_p2 when (carry_10_7_reg_3989(0) = '1') else 
        Range1_all_zeros_7_fu_2780_p2;
    deleted_zeros_fu_2106_p3 <= 
        Range1_all_ones_fu_2096_p2 when (carry_s_reg_3730(0) = '1') else 
        Range1_all_zeros_fu_2101_p2;
    exitcond10_fu_1140_p2 <= "1" when (co3_reg_726 = ap_const_lv5_18) else "0";
    exitcond11_fu_3129_p2 <= "1" when (w6_phi_fu_787_p4 = ap_const_lv6_21) else "0";
    exitcond23_mid_fu_824_p2 <= (exitcond_fu_818_p2 and not_exitcond_flatten_fu_812_p2);
    exitcond7_fu_1000_p2 <= "1" when (h1_reg_691 = ap_const_lv6_21) else "0";
    exitcond8_fu_1010_p2 <= "1" when (w2_reg_703 = ap_const_lv6_21) else "0";
    exitcond9_fu_1026_p2 <= "1" when (ci_reg_715 = ap_const_lv5_18) else "0";
    exitcond_flatten5_fu_806_p2 <= "1" when (indvar_flatten_reg_657 = ap_const_lv12_400) else "0";
    exitcond_flatten6_fu_3105_p2 <= "1" when (indvar_flatten2_reg_737 = ap_const_lv15_6000) else "0";
    exitcond_flatten7_fu_3117_p2 <= "1" when (indvar_flatten3_reg_760 = ap_const_lv12_400) else "0";
    exitcond_flatten_fu_794_p2 <= "1" when (indvar_flatten1_reg_634 = ap_const_lv15_6000) else "0";
    exitcond_fu_818_p2 <= "1" when (w_phi_fu_684_p4 = ap_const_lv6_21) else "0";
    exitcond_mid_fu_3135_p2 <= (exitcond11_fu_3129_p2 and not_exitcond_flatten_8_fu_3123_p2);
    h5_mid_fu_3175_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten7_reg_4211(0) = '1') else 
        h5_phi_fu_775_p4;

    h5_phi_fu_775_p4_assign_proc : process(h5_reg_771, ap_reg_pp1_iter1_exitcond_flatten6_reg_4202, tmp_175_mid2_reg_4243, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            h5_phi_fu_775_p4 <= tmp_175_mid2_reg_4243;
        else 
            h5_phi_fu_775_p4 <= h5_reg_771;
        end if; 
    end process;

    h_15_fu_927_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(h_mid_fu_864_p3));
    h_5_fu_3233_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(h5_mid_fu_3175_p3));
    h_6_fu_1020_p2 <= std_logic_vector(unsigned(h1_reg_691) + unsigned(ap_const_lv6_1));
    h_mid_fu_864_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten5_reg_3344(0) = '1') else 
        h_phi_fu_672_p4;

    h_phi_fu_672_p4_assign_proc : process(h_reg_668, ap_reg_pp0_iter1_exitcond_flatten_reg_3335, tmp_172_mid2_reg_3375, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            h_phi_fu_672_p4 <= tmp_172_mid2_reg_3375;
        else 
            h_phi_fu_672_p4 <= h_reg_668;
        end if; 
    end process;

    indvar_flatten21_op_fu_3155_p2 <= std_logic_vector(unsigned(indvar_flatten3_reg_760) + unsigned(ap_const_lv12_1));
    indvar_flatten_next1_1_fu_3161_p3 <= 
        ap_const_lv12_1 when (exitcond_flatten7_fu_3117_p2(0) = '1') else 
        indvar_flatten21_op_fu_3155_p2;
    indvar_flatten_next1_2_fu_3111_p2 <= std_logic_vector(unsigned(indvar_flatten2_reg_737) + unsigned(ap_const_lv15_1));
    indvar_flatten_next1_fu_800_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_634) + unsigned(ap_const_lv15_1));
    indvar_flatten_next_fu_850_p3 <= 
        ap_const_lv12_1 when (exitcond_flatten5_fu_806_p2(0) = '1') else 
        indvar_flatten_op_fu_844_p2;
    indvar_flatten_op_fu_844_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_657) + unsigned(ap_const_lv12_1));
    newIndex1_mid2_v_fu_3193_p4 <= arrayNo5_mid2_v_fu_3182_p3(4 downto 3);
    newIndex3_fu_1146_p4 <= co3_reg_726(4 downto 3);
    newIndex8_mid2_v_fu_887_p4 <= tmp_mid2_v_fu_871_p3(4 downto 3);
    newIndex_fu_1046_p4 <= ci_reg_715(4 downto 3);
    not_exitcond_flatten_8_fu_3123_p2 <= (exitcond_flatten7_fu_3117_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_812_p2 <= (exitcond_flatten5_fu_806_p2 xor ap_const_lv1_1);
    overflow_1_fu_2249_p2 <= (brmerge_i_i_1_fu_2239_p2 and tmp_282_1_fu_2244_p2);
    overflow_2_fu_2346_p2 <= (brmerge_i_i_2_fu_2336_p2 and tmp_282_2_fu_2341_p2);
    overflow_3_fu_2443_p2 <= (brmerge_i_i_3_fu_2433_p2 and tmp_282_3_fu_2438_p2);
    overflow_4_fu_2540_p2 <= (brmerge_i_i_4_fu_2530_p2 and tmp_282_4_fu_2535_p2);
    overflow_5_fu_2637_p2 <= (brmerge_i_i_5_fu_2627_p2 and tmp_282_5_fu_2632_p2);
    overflow_6_fu_2734_p2 <= (brmerge_i_i_6_fu_2724_p2 and tmp_282_6_fu_2729_p2);
    overflow_7_fu_2831_p2 <= (brmerge_i_i_7_fu_2821_p2 and tmp_282_7_fu_2826_p2);
    overflow_fu_2152_p2 <= (brmerge_i_i_fu_2142_p2 and tmp_183_fu_2147_p2);
    p_38_i_i_1_fu_2228_p2 <= (carry_10_1_reg_3767 and Range1_all_ones_1_fu_2193_p2);
    p_38_i_i_2_fu_2325_p2 <= (carry_10_2_reg_3804 and Range1_all_ones_2_fu_2290_p2);
    p_38_i_i_3_fu_2422_p2 <= (carry_10_3_reg_3841 and Range1_all_ones_3_fu_2387_p2);
    p_38_i_i_4_fu_2519_p2 <= (carry_10_4_reg_3878 and Range1_all_ones_4_fu_2484_p2);
    p_38_i_i_5_fu_2616_p2 <= (carry_10_5_reg_3915 and Range1_all_ones_5_fu_2581_p2);
    p_38_i_i_6_fu_2713_p2 <= (carry_10_6_reg_3952 and Range1_all_ones_6_fu_2678_p2);
    p_38_i_i_7_fu_2810_p2 <= (carry_10_7_reg_3989 and Range1_all_ones_7_fu_2775_p2);
    p_38_i_i_fu_2131_p2 <= (carry_s_reg_3730 and Range1_all_ones_fu_2096_p2);
    p_41_i_i_1_fu_2216_p2 <= (tmp_378_reg_3748 and tmp_280_1_fu_2210_p2);
    p_41_i_i_2_fu_2313_p2 <= (tmp_383_reg_3785 and tmp_280_2_fu_2307_p2);
    p_41_i_i_3_fu_2410_p2 <= (tmp_388_reg_3822 and tmp_280_3_fu_2404_p2);
    p_41_i_i_4_fu_2507_p2 <= (tmp_393_reg_3859 and tmp_280_4_fu_2501_p2);
    p_41_i_i_5_fu_2604_p2 <= (tmp_398_reg_3896 and tmp_280_5_fu_2598_p2);
    p_41_i_i_6_fu_2701_p2 <= (tmp_403_reg_3933 and tmp_280_6_fu_2695_p2);
    p_41_i_i_7_fu_2798_p2 <= (tmp_408_reg_3970 and tmp_280_7_fu_2792_p2);
    p_41_i_i_fu_2119_p2 <= (tmp_373_reg_3711 and tmp_182_fu_2113_p2);
    p_Val2_1_fu_1452_p2 <= std_logic_vector(signed(tmp_203_cast_fu_1448_p1) + signed(p_Val2_s_reg_3586));
    p_Val2_2_fu_1465_p4 <= p_Val2_1_fu_1452_p2(13 downto 6);
    p_Val2_3_fu_1486_p2 <= std_logic_vector(unsigned(p_Val2_2_fu_1465_p4) + unsigned(tmp_180_fu_1475_p1));
    p_Val2_61_1_fu_1319_p0 <= weight_1_V_q0;
    p_Val2_61_1_fu_1319_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_1_fu_1319_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_1_fu_1319_p0) * signed(p_Val2_61_1_fu_1319_p1))), 16));
    p_Val2_61_2_fu_1337_p0 <= weight_2_V_q0;
    p_Val2_61_2_fu_1337_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_2_fu_1337_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_2_fu_1337_p0) * signed(p_Val2_61_2_fu_1337_p1))), 16));
    p_Val2_61_3_fu_1355_p0 <= weight_3_V_q0;
    p_Val2_61_3_fu_1355_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_3_fu_1355_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_3_fu_1355_p0) * signed(p_Val2_61_3_fu_1355_p1))), 16));
    p_Val2_61_4_fu_1373_p0 <= weight_4_V_q0;
    p_Val2_61_4_fu_1373_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_4_fu_1373_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_4_fu_1373_p0) * signed(p_Val2_61_4_fu_1373_p1))), 16));
    p_Val2_61_5_fu_1391_p0 <= weight_5_V_q0;
    p_Val2_61_5_fu_1391_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_5_fu_1391_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_5_fu_1391_p0) * signed(p_Val2_61_5_fu_1391_p1))), 16));
    p_Val2_61_6_fu_1409_p0 <= weight_6_V_q0;
    p_Val2_61_6_fu_1409_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_6_fu_1409_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_6_fu_1409_p0) * signed(p_Val2_61_6_fu_1409_p1))), 16));
    p_Val2_61_7_fu_1427_p0 <= weight_7_V_q0;
    p_Val2_61_7_fu_1427_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_61_7_fu_1427_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_61_7_fu_1427_p0) * signed(p_Val2_61_7_fu_1427_p1))), 16));
    p_Val2_62_1_fu_1533_p2 <= std_logic_vector(signed(tmp_269_1_cast_fu_1529_p1) + signed(p_Val2_61_1_reg_3601));
    p_Val2_62_2_fu_1614_p2 <= std_logic_vector(signed(tmp_269_2_cast_fu_1610_p1) + signed(p_Val2_61_2_reg_3616));
    p_Val2_62_3_fu_1695_p2 <= std_logic_vector(signed(tmp_269_3_cast_fu_1691_p1) + signed(p_Val2_61_3_reg_3631));
    p_Val2_62_4_fu_1776_p2 <= std_logic_vector(signed(tmp_269_4_cast_fu_1772_p1) + signed(p_Val2_61_4_reg_3646));
    p_Val2_62_5_fu_1857_p2 <= std_logic_vector(signed(tmp_269_5_cast_fu_1853_p1) + signed(p_Val2_61_5_reg_3661));
    p_Val2_62_6_fu_1938_p2 <= std_logic_vector(signed(tmp_269_6_cast_fu_1934_p1) + signed(p_Val2_61_6_reg_3676));
    p_Val2_62_7_fu_2019_p2 <= std_logic_vector(signed(tmp_269_7_cast_fu_2015_p1) + signed(p_Val2_61_7_reg_3691));
    p_Val2_63_1_fu_1546_p4 <= p_Val2_62_1_fu_1533_p2(13 downto 6);
    p_Val2_63_2_fu_1627_p4 <= p_Val2_62_2_fu_1614_p2(13 downto 6);
    p_Val2_63_3_fu_1708_p4 <= p_Val2_62_3_fu_1695_p2(13 downto 6);
    p_Val2_63_4_fu_1789_p4 <= p_Val2_62_4_fu_1776_p2(13 downto 6);
    p_Val2_63_5_fu_1870_p4 <= p_Val2_62_5_fu_1857_p2(13 downto 6);
    p_Val2_63_6_fu_1951_p4 <= p_Val2_62_6_fu_1938_p2(13 downto 6);
    p_Val2_63_7_fu_2032_p4 <= p_Val2_62_7_fu_2019_p2(13 downto 6);
    p_Val2_64_1_113_fu_2910_p3 <= 
        ap_const_lv8_80 when (underflow_1_reg_4042(0) = '1') else 
        p_Val2_64_1_reg_3755;
    p_Val2_64_1_fu_1567_p2 <= std_logic_vector(unsigned(p_Val2_63_1_fu_1546_p4) + unsigned(tmp_273_1_fu_1556_p1));
    p_Val2_64_2_114_fu_2940_p3 <= 
        ap_const_lv8_80 when (underflow_2_reg_4067(0) = '1') else 
        p_Val2_64_2_reg_3792;
    p_Val2_64_2_fu_1648_p2 <= std_logic_vector(unsigned(p_Val2_63_2_fu_1627_p4) + unsigned(tmp_273_2_fu_1637_p1));
    p_Val2_64_3_115_fu_2970_p3 <= 
        ap_const_lv8_80 when (underflow_3_reg_4092(0) = '1') else 
        p_Val2_64_3_reg_3829;
    p_Val2_64_3_fu_1729_p2 <= std_logic_vector(unsigned(p_Val2_63_3_fu_1708_p4) + unsigned(tmp_273_3_fu_1718_p1));
    p_Val2_64_4_116_fu_3000_p3 <= 
        ap_const_lv8_80 when (underflow_4_reg_4117(0) = '1') else 
        p_Val2_64_4_reg_3866;
    p_Val2_64_4_fu_1810_p2 <= std_logic_vector(unsigned(p_Val2_63_4_fu_1789_p4) + unsigned(tmp_273_4_fu_1799_p1));
    p_Val2_64_5_117_fu_3030_p3 <= 
        ap_const_lv8_80 when (underflow_5_reg_4142(0) = '1') else 
        p_Val2_64_5_reg_3903;
    p_Val2_64_5_fu_1891_p2 <= std_logic_vector(unsigned(p_Val2_63_5_fu_1870_p4) + unsigned(tmp_273_5_fu_1880_p1));
    p_Val2_64_6_118_fu_3060_p3 <= 
        ap_const_lv8_80 when (underflow_6_reg_4167(0) = '1') else 
        p_Val2_64_6_reg_3940;
    p_Val2_64_6_fu_1972_p2 <= std_logic_vector(unsigned(p_Val2_63_6_fu_1951_p4) + unsigned(tmp_273_6_fu_1961_p1));
    p_Val2_64_7_119_fu_3090_p3 <= 
        ap_const_lv8_80 when (underflow_7_reg_4192(0) = '1') else 
        p_Val2_64_7_reg_3977;
    p_Val2_64_7_fu_2053_p2 <= std_logic_vector(unsigned(p_Val2_63_7_fu_2032_p4) + unsigned(tmp_273_7_fu_2042_p1));
    p_Val2_64_mux_1_fu_2904_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_1_reg_4047(0) = '1') else 
        p_Val2_64_1_reg_3755;
    p_Val2_64_mux_2_fu_2934_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_2_reg_4072(0) = '1') else 
        p_Val2_64_2_reg_3792;
    p_Val2_64_mux_3_fu_2964_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_3_reg_4097(0) = '1') else 
        p_Val2_64_3_reg_3829;
    p_Val2_64_mux_4_fu_2994_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_4_reg_4122(0) = '1') else 
        p_Val2_64_4_reg_3866;
    p_Val2_64_mux_5_fu_3024_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_5_reg_4147(0) = '1') else 
        p_Val2_64_5_reg_3903;
    p_Val2_64_mux_6_fu_3054_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_6_reg_4172(0) = '1') else 
        p_Val2_64_6_reg_3940;
    p_Val2_64_mux_7_fu_3084_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_7_reg_4197(0) = '1') else 
        p_Val2_64_7_reg_3977;
    p_Val2_64_mux_fu_2874_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_reg_4022(0) = '1') else 
        p_Val2_3_reg_3718;
    p_Val2_s_112_fu_2880_p3 <= 
        ap_const_lv8_80 when (underflow_reg_4017(0) = '1') else 
        p_Val2_3_reg_3718;
    p_Val2_s_fu_1301_p0 <= weight_0_V_q0;
    p_Val2_s_fu_1301_p1 <= OP2_V_fu_1298_p1(8 - 1 downto 0);
    p_Val2_s_fu_1301_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_fu_1301_p0) * signed(p_Val2_s_fu_1301_p1))), 16));
    p_not_i_i_1_fu_2233_p2 <= (deleted_zeros_1_fu_2203_p3 xor ap_const_lv1_1);
    p_not_i_i_2_fu_2330_p2 <= (deleted_zeros_2_fu_2300_p3 xor ap_const_lv1_1);
    p_not_i_i_3_fu_2427_p2 <= (deleted_zeros_3_fu_2397_p3 xor ap_const_lv1_1);
    p_not_i_i_4_fu_2524_p2 <= (deleted_zeros_4_fu_2494_p3 xor ap_const_lv1_1);
    p_not_i_i_5_fu_2621_p2 <= (deleted_zeros_5_fu_2591_p3 xor ap_const_lv1_1);
    p_not_i_i_6_fu_2718_p2 <= (deleted_zeros_6_fu_2688_p3 xor ap_const_lv1_1);
    p_not_i_i_7_fu_2815_p2 <= (deleted_zeros_7_fu_2785_p3 xor ap_const_lv1_1);
    p_not_i_i_fu_2136_p2 <= (deleted_zeros_fu_2106_p3 xor ap_const_lv1_1);
    p_shl11_cast_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_295_fu_1191_p3),8));
    p_shl12_cast_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_291_fu_1156_p3),8));
    p_shl13_cast_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_292_fu_1168_p3),8));
    p_shl14_cast_fu_3261_p3 <= (tmp_282_reg_4248 & ap_const_lv5_0);
    p_shl15_cast_fu_3275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_368_fu_3268_p3),13));
    p_shl16_cast_fu_3211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_278_fu_3203_p3),8));
    p_shl17_cast_fu_3223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_279_fu_3215_p3),8));
    p_shl1_cast_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_366_fu_962_p3),13));
    p_shl2_cast_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_897_p3),8));
    p_shl3_cast_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_909_p3),8));
    p_shl4_cast_fu_1091_p3 <= (tmp_288_fu_1086_p2 & ap_const_lv5_0);
    p_shl5_cast_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_371_fu_1099_p3),13));
    p_shl6_cast_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_285_fu_1056_p3),8));
    p_shl7_cast_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_286_fu_1068_p3),8));
    p_shl8_cast_fu_1214_p3 <= (tmp_297_fu_1209_p2 & ap_const_lv5_0);
    p_shl9_cast_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_372_fu_1222_p3),13));
    p_shl_cast_fu_955_p3 <= (tmp_275_reg_3380 & ap_const_lv5_0);
    this_assign_1_1_fu_2916_p3 <= 
        p_Val2_64_mux_1_fu_2904_p3 when (underflow_not_1_fu_2899_p2(0) = '1') else 
        p_Val2_64_1_113_fu_2910_p3;
    this_assign_1_2_fu_2946_p3 <= 
        p_Val2_64_mux_2_fu_2934_p3 when (underflow_not_2_fu_2929_p2(0) = '1') else 
        p_Val2_64_2_114_fu_2940_p3;
    this_assign_1_3_fu_2976_p3 <= 
        p_Val2_64_mux_3_fu_2964_p3 when (underflow_not_3_fu_2959_p2(0) = '1') else 
        p_Val2_64_3_115_fu_2970_p3;
    this_assign_1_4_fu_3006_p3 <= 
        p_Val2_64_mux_4_fu_2994_p3 when (underflow_not_4_fu_2989_p2(0) = '1') else 
        p_Val2_64_4_116_fu_3000_p3;
    this_assign_1_5_fu_3036_p3 <= 
        p_Val2_64_mux_5_fu_3024_p3 when (underflow_not_5_fu_3019_p2(0) = '1') else 
        p_Val2_64_5_117_fu_3030_p3;
    this_assign_1_6_fu_3066_p3 <= 
        p_Val2_64_mux_6_fu_3054_p3 when (underflow_not_6_fu_3049_p2(0) = '1') else 
        p_Val2_64_6_118_fu_3060_p3;
    this_assign_1_7_fu_3096_p3 <= 
        p_Val2_64_mux_7_fu_3084_p3 when (underflow_not_7_fu_3079_p2(0) = '1') else 
        p_Val2_64_7_119_fu_3090_p3;
    this_assign_1_fu_2886_p3 <= 
        p_Val2_64_mux_fu_2874_p3 when (underflow_not_fu_2869_p2(0) = '1') else 
        p_Val2_s_112_fu_2880_p3;
    tmp10_fu_2985_p2 <= (brmerge40_demorgan_i_13_reg_4112 or tmp_282_4_reg_4107);
    tmp11_demorgan_fu_2648_p2 <= (p_38_i_i_5_fu_2616_p2 or brmerge40_demorgan_i_14_fu_2643_p2);
    tmp11_fu_2654_p2 <= (tmp11_demorgan_fu_2648_p2 xor ap_const_lv1_1);
    tmp12_fu_3015_p2 <= (brmerge40_demorgan_i_14_reg_4137 or tmp_282_5_reg_4132);
    tmp13_demorgan_fu_2745_p2 <= (p_38_i_i_6_fu_2713_p2 or brmerge40_demorgan_i_15_fu_2740_p2);
    tmp13_fu_2751_p2 <= (tmp13_demorgan_fu_2745_p2 xor ap_const_lv1_1);
    tmp14_fu_3045_p2 <= (brmerge40_demorgan_i_15_reg_4162 or tmp_282_6_reg_4157);
    tmp15_demorgan_fu_2842_p2 <= (p_38_i_i_7_fu_2810_p2 or brmerge40_demorgan_i_16_fu_2837_p2);
    tmp15_fu_2848_p2 <= (tmp15_demorgan_fu_2842_p2 xor ap_const_lv1_1);
    tmp16_fu_3075_p2 <= (brmerge40_demorgan_i_16_reg_4187 or tmp_282_7_reg_4182);
    tmp1_demorgan_fu_2163_p2 <= (p_38_i_i_fu_2131_p2 or brmerge40_demorgan_i_fu_2158_p2);
    tmp1_fu_2169_p2 <= (tmp1_demorgan_fu_2163_p2 xor ap_const_lv1_1);
    tmp2_fu_2865_p2 <= (brmerge40_demorgan_i_reg_4012 or tmp_183_reg_4007);
    tmp3_demorgan_fu_2260_p2 <= (p_38_i_i_1_fu_2228_p2 or brmerge40_demorgan_i_17_fu_2255_p2);
    tmp3_fu_2266_p2 <= (tmp3_demorgan_fu_2260_p2 xor ap_const_lv1_1);
    tmp4_fu_2895_p2 <= (brmerge40_demorgan_i_17_reg_4037 or tmp_282_1_reg_4032);
    tmp5_demorgan_fu_2357_p2 <= (p_38_i_i_2_fu_2325_p2 or brmerge40_demorgan_i_11_fu_2352_p2);
    tmp5_fu_2363_p2 <= (tmp5_demorgan_fu_2357_p2 xor ap_const_lv1_1);
    tmp6_fu_2925_p2 <= (brmerge40_demorgan_i_11_reg_4062 or tmp_282_2_reg_4057);
    tmp7_demorgan_fu_2454_p2 <= (p_38_i_i_3_fu_2422_p2 or brmerge40_demorgan_i_12_fu_2449_p2);
    tmp7_fu_2460_p2 <= (tmp7_demorgan_fu_2454_p2 xor ap_const_lv1_1);
    tmp8_fu_2955_p2 <= (brmerge40_demorgan_i_12_reg_4087 or tmp_282_3_reg_4082);
    tmp9_demorgan_fu_2551_p2 <= (p_38_i_i_4_fu_2519_p2 or brmerge40_demorgan_i_13_fu_2546_p2);
    tmp9_fu_2557_p2 <= (tmp9_demorgan_fu_2551_p2 xor ap_const_lv1_1);
    tmp_172_mid2_cast_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_172_mid2_fu_933_p3),8));
    tmp_172_mid2_fu_933_p3 <= 
        h_15_fu_927_p2 when (exitcond23_mid_reg_3350(0) = '1') else 
        h_mid_fu_864_p3;
    tmp_173_cast_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_703),13));
    tmp_174_cast_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_w_mid2_reg_3355),13));
    tmp_175_mid2_cast_fu_3246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_175_mid2_fu_3239_p3),8));
    tmp_175_mid2_fu_3239_p3 <= 
        h_5_fu_3233_p2 when (exitcond_mid_reg_4217(0) = '1') else 
        h5_mid_fu_3175_p3;
    tmp_176_cast_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_715),8));
    tmp_177_cast_fu_3285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp1_iter1_w6_mid2_reg_4222),13));
    tmp_179_fu_1441_p3 <= (ShuffleConvs_0_Downs_24_reg_3591 & ap_const_lv6_0);
    tmp_180_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_374_reg_3596),8));
    tmp_181_fu_1500_p2 <= (tmp_376_fu_1492_p3 xor ap_const_lv1_1);
    tmp_182_fu_2113_p2 <= (tmp_377_fu_2089_p3 xor ap_const_lv1_1);
    tmp_183_fu_2147_p2 <= (tmp_373_reg_3711 xor ap_const_lv1_1);
        tmp_203_cast_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_179_fu_1441_p3),16));

        tmp_269_1_cast_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_1_fu_1522_p3),16));

    tmp_269_1_fu_1522_p3 <= (ShuffleConvs_0_Downs_25_reg_3606 & ap_const_lv6_0);
        tmp_269_2_cast_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_2_fu_1603_p3),16));

    tmp_269_2_fu_1603_p3 <= (ShuffleConvs_0_Downs_26_reg_3621 & ap_const_lv6_0);
        tmp_269_3_cast_fu_1691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_3_fu_1684_p3),16));

    tmp_269_3_fu_1684_p3 <= (ShuffleConvs_0_Downs_27_reg_3636 & ap_const_lv6_0);
        tmp_269_4_cast_fu_1772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_4_fu_1765_p3),16));

    tmp_269_4_fu_1765_p3 <= (ShuffleConvs_0_Downs_28_reg_3651 & ap_const_lv6_0);
        tmp_269_5_cast_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_5_fu_1846_p3),16));

    tmp_269_5_fu_1846_p3 <= (ShuffleConvs_0_Downs_29_reg_3666 & ap_const_lv6_0);
        tmp_269_6_cast_fu_1934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_6_fu_1927_p3),16));

    tmp_269_6_fu_1927_p3 <= (ShuffleConvs_0_Downs_30_reg_3681 & ap_const_lv6_0);
        tmp_269_7_cast_fu_2015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_7_fu_2008_p3),16));

    tmp_269_7_fu_2008_p3 <= (ShuffleConvs_0_Downs_31_reg_3696 & ap_const_lv6_0);
    tmp_273_1_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_379_reg_3611),8));
    tmp_273_2_fu_1637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_384_reg_3626),8));
    tmp_273_3_fu_1718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_389_reg_3641),8));
    tmp_273_4_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_394_reg_3656),8));
    tmp_273_5_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_399_reg_3671),8));
    tmp_273_6_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_404_reg_3686),8));
    tmp_273_7_fu_2042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_409_reg_3701),8));
    tmp_273_fu_921_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_917_p1) + unsigned(p_shl2_cast_fu_905_p1));
    tmp_274_fu_830_p2 <= (exitcond23_mid_fu_824_p2 or exitcond_flatten5_fu_806_p2);
    tmp_275_fu_944_p2 <= std_logic_vector(unsigned(tmp_273_fu_921_p2) + unsigned(tmp_172_mid2_cast_fu_940_p1));
    tmp_276_fu_973_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_969_p1) + unsigned(p_shl_cast_fu_955_p3));
    tmp_277_1_fu_1581_p2 <= (tmp_381_fu_1573_p3 xor ap_const_lv1_1);
    tmp_277_2_fu_1662_p2 <= (tmp_386_fu_1654_p3 xor ap_const_lv1_1);
    tmp_277_3_fu_1743_p2 <= (tmp_391_fu_1735_p3 xor ap_const_lv1_1);
    tmp_277_4_fu_1824_p2 <= (tmp_396_fu_1816_p3 xor ap_const_lv1_1);
    tmp_277_5_fu_1905_p2 <= (tmp_401_fu_1897_p3 xor ap_const_lv1_1);
    tmp_277_6_fu_1986_p2 <= (tmp_406_fu_1978_p3 xor ap_const_lv1_1);
    tmp_277_7_fu_2067_p2 <= (tmp_411_fu_2059_p3 xor ap_const_lv1_1);
    tmp_277_fu_982_p2 <= std_logic_vector(unsigned(tmp_276_fu_973_p2) + unsigned(tmp_174_cast_fu_979_p1));
    tmp_278_fu_3203_p3 <= (newIndex1_mid2_v_fu_3193_p4 & ap_const_lv5_0);
    tmp_279_fu_3215_p3 <= (newIndex1_mid2_v_fu_3193_p4 & ap_const_lv1_0);
    tmp_280_1_fu_2210_p2 <= (tmp_382_fu_2186_p3 xor ap_const_lv1_1);
    tmp_280_2_fu_2307_p2 <= (tmp_387_fu_2283_p3 xor ap_const_lv1_1);
    tmp_280_3_fu_2404_p2 <= (tmp_392_fu_2380_p3 xor ap_const_lv1_1);
    tmp_280_4_fu_2501_p2 <= (tmp_397_fu_2477_p3 xor ap_const_lv1_1);
    tmp_280_5_fu_2598_p2 <= (tmp_402_fu_2574_p3 xor ap_const_lv1_1);
    tmp_280_6_fu_2695_p2 <= (tmp_407_fu_2671_p3 xor ap_const_lv1_1);
    tmp_280_7_fu_2792_p2 <= (tmp_412_fu_2768_p3 xor ap_const_lv1_1);
    tmp_280_fu_3227_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_3223_p1) + unsigned(p_shl16_cast_fu_3211_p1));
    tmp_281_fu_3141_p2 <= (exitcond_mid_fu_3135_p2 or exitcond_flatten7_fu_3117_p2);
    tmp_282_1_fu_2244_p2 <= (tmp_378_reg_3748 xor ap_const_lv1_1);
    tmp_282_2_fu_2341_p2 <= (tmp_383_reg_3785 xor ap_const_lv1_1);
    tmp_282_3_fu_2438_p2 <= (tmp_388_reg_3822 xor ap_const_lv1_1);
    tmp_282_4_fu_2535_p2 <= (tmp_393_reg_3859 xor ap_const_lv1_1);
    tmp_282_5_fu_2632_p2 <= (tmp_398_reg_3896 xor ap_const_lv1_1);
    tmp_282_6_fu_2729_p2 <= (tmp_403_reg_3933 xor ap_const_lv1_1);
    tmp_282_7_fu_2826_p2 <= (tmp_408_reg_3970 xor ap_const_lv1_1);
    tmp_282_fu_3250_p2 <= std_logic_vector(unsigned(tmp_280_fu_3227_p2) + unsigned(tmp_175_mid2_cast_fu_3246_p1));
    tmp_283_fu_3279_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_3275_p1) + unsigned(p_shl14_cast_fu_3261_p3));
    tmp_284_fu_3288_p2 <= std_logic_vector(unsigned(tmp_283_fu_3279_p2) + unsigned(tmp_177_cast_fu_3285_p1));
    tmp_285_fu_1056_p3 <= (newIndex_fu_1046_p4 & ap_const_lv5_0);
    tmp_286_fu_1068_p3 <= (newIndex_fu_1046_p4 & ap_const_lv1_0);
    tmp_287_fu_1080_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1076_p1) + unsigned(p_shl6_cast_fu_1064_p1));
    tmp_288_fu_1086_p2 <= std_logic_vector(unsigned(tmp_287_fu_1080_p2) + unsigned(tmp_cast_reg_3400));
    tmp_289_fu_1111_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1107_p1) + unsigned(p_shl4_cast_fu_1091_p3));
    tmp_290_fu_1117_p2 <= std_logic_vector(unsigned(tmp_289_fu_1111_p2) + unsigned(tmp_173_cast_reg_3409));
    tmp_291_fu_1156_p3 <= (newIndex3_fu_1146_p4 & ap_const_lv5_0);
    tmp_292_fu_1168_p3 <= (newIndex3_fu_1146_p4 & ap_const_lv3_0);
    tmp_293_fu_1180_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1164_p1) - unsigned(p_shl13_cast_fu_1176_p1));
    tmp_294_fu_1186_p2 <= std_logic_vector(unsigned(tmp_176_cast_reg_3428) + unsigned(tmp_293_fu_1180_p2));
    tmp_295_fu_1191_p3 <= (newIndex3_fu_1146_p4 & ap_const_lv1_0);
    tmp_296_fu_1203_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1164_p1) + unsigned(p_shl11_cast_fu_1199_p1));
    tmp_297_fu_1209_p2 <= std_logic_vector(unsigned(tmp_cast_reg_3400) + unsigned(tmp_296_fu_1203_p2));
    tmp_298_fu_1234_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_1214_p3) + unsigned(p_shl9_cast_fu_1230_p1));
    tmp_299_fu_1240_p2 <= std_logic_vector(unsigned(tmp_173_cast_reg_3409) + unsigned(tmp_298_fu_1234_p2));
    tmp_313_cast_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_fu_982_p2),64));
    tmp_322_cast_fu_3294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_284_fu_3288_p2),64));
    tmp_330_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_290_fu_1117_p2),64));
        tmp_334_cast_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_294_reg_3486),64));

    tmp_342_cast_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_299_reg_3491),64));
    tmp_365_fu_883_p1 <= tmp_mid2_v_fu_871_p3(3 - 1 downto 0);
    tmp_366_fu_962_p3 <= (tmp_275_reg_3380 & ap_const_lv1_0);
    tmp_367_fu_3189_p1 <= arrayNo5_mid2_v_fu_3182_p3(3 - 1 downto 0);
    tmp_368_fu_3268_p3 <= (tmp_282_reg_4248 & ap_const_lv1_0);
    tmp_369_fu_3327_p3 <= tmp_184_fu_3306_p10(7 downto 7);
    tmp_370_fu_1042_p1 <= ci_reg_715(3 - 1 downto 0);
    tmp_371_fu_1099_p3 <= (tmp_288_fu_1086_p2 & ap_const_lv1_0);
    tmp_372_fu_1222_p3 <= (tmp_297_fu_1209_p2 & ap_const_lv1_0);
    tmp_375_fu_1478_p3 <= p_Val2_1_fu_1452_p2(13 downto 13);
    tmp_376_fu_1492_p3 <= p_Val2_3_fu_1486_p2(7 downto 7);
    tmp_377_fu_2089_p3 <= p_Val2_1_reg_3706(14 downto 14);
    tmp_380_fu_1559_p3 <= p_Val2_62_1_fu_1533_p2(13 downto 13);
    tmp_381_fu_1573_p3 <= p_Val2_64_1_fu_1567_p2(7 downto 7);
    tmp_382_fu_2186_p3 <= p_Val2_62_1_reg_3743(14 downto 14);
    tmp_385_fu_1640_p3 <= p_Val2_62_2_fu_1614_p2(13 downto 13);
    tmp_386_fu_1654_p3 <= p_Val2_64_2_fu_1648_p2(7 downto 7);
    tmp_387_fu_2283_p3 <= p_Val2_62_2_reg_3780(14 downto 14);
    tmp_390_fu_1721_p3 <= p_Val2_62_3_fu_1695_p2(13 downto 13);
    tmp_391_fu_1735_p3 <= p_Val2_64_3_fu_1729_p2(7 downto 7);
    tmp_392_fu_2380_p3 <= p_Val2_62_3_reg_3817(14 downto 14);
    tmp_395_fu_1802_p3 <= p_Val2_62_4_fu_1776_p2(13 downto 13);
    tmp_396_fu_1816_p3 <= p_Val2_64_4_fu_1810_p2(7 downto 7);
    tmp_397_fu_2477_p3 <= p_Val2_62_4_reg_3854(14 downto 14);
    tmp_400_fu_1883_p3 <= p_Val2_62_5_fu_1857_p2(13 downto 13);
    tmp_401_fu_1897_p3 <= p_Val2_64_5_fu_1891_p2(7 downto 7);
    tmp_402_fu_2574_p3 <= p_Val2_62_5_reg_3891(14 downto 14);
    tmp_405_fu_1964_p3 <= p_Val2_62_6_fu_1938_p2(13 downto 13);
    tmp_406_fu_1978_p3 <= p_Val2_64_6_fu_1972_p2(7 downto 7);
    tmp_407_fu_2671_p3 <= p_Val2_62_6_reg_3928(14 downto 14);
    tmp_410_fu_2045_p3 <= p_Val2_62_7_fu_2019_p2(13 downto 13);
    tmp_411_fu_2059_p3 <= p_Val2_64_7_fu_2053_p2(7 downto 7);
    tmp_412_fu_2768_p3 <= p_Val2_62_7_reg_3965(14 downto 14);
    tmp_cast_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h1_reg_691),8));
    tmp_fu_897_p3 <= (newIndex8_mid2_v_fu_887_p4 & ap_const_lv5_0);
    tmp_mid2_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_fu_871_p3),64));
    tmp_mid2_v_fu_871_p3 <= 
        co_17_fu_858_p2 when (exitcond_flatten5_reg_3344(0) = '1') else 
        co_phi_fu_649_p4;
    tmp_s_fu_909_p3 <= (newIndex8_mid2_v_fu_887_p4 & ap_const_lv1_0);
    underflow_1_fu_2272_p2 <= (tmp_378_reg_3748 and tmp3_fu_2266_p2);
    underflow_2_fu_2369_p2 <= (tmp_383_reg_3785 and tmp5_fu_2363_p2);
    underflow_3_fu_2466_p2 <= (tmp_388_reg_3822 and tmp7_fu_2460_p2);
    underflow_4_fu_2563_p2 <= (tmp_393_reg_3859 and tmp9_fu_2557_p2);
    underflow_5_fu_2660_p2 <= (tmp_398_reg_3896 and tmp11_fu_2654_p2);
    underflow_6_fu_2757_p2 <= (tmp_403_reg_3933 and tmp13_fu_2751_p2);
    underflow_7_fu_2854_p2 <= (tmp_408_reg_3970 and tmp15_fu_2848_p2);
    underflow_fu_2175_p2 <= (tmp_373_reg_3711 and tmp1_fu_2169_p2);
    underflow_not_1_fu_2899_p2 <= (tmp4_fu_2895_p2 or p_38_i_i_1_reg_4027);
    underflow_not_2_fu_2929_p2 <= (tmp6_fu_2925_p2 or p_38_i_i_2_reg_4052);
    underflow_not_3_fu_2959_p2 <= (tmp8_fu_2955_p2 or p_38_i_i_3_reg_4077);
    underflow_not_4_fu_2989_p2 <= (tmp10_fu_2985_p2 or p_38_i_i_4_reg_4102);
    underflow_not_5_fu_3019_p2 <= (tmp12_fu_3015_p2 or p_38_i_i_5_reg_4127);
    underflow_not_6_fu_3049_p2 <= (tmp14_fu_3045_p2 or p_38_i_i_6_reg_4152);
    underflow_not_7_fu_3079_p2 <= (tmp16_fu_3075_p2 or p_38_i_i_7_reg_4177);
    underflow_not_fu_2869_p2 <= (tmp2_fu_2865_p2 or p_38_i_i_reg_4002);
    w6_mid2_fu_3147_p3 <= 
        ap_const_lv6_1 when (tmp_281_fu_3141_p2(0) = '1') else 
        w6_phi_fu_787_p4;

    w6_phi_fu_787_p4_assign_proc : process(w6_reg_783, exitcond_flatten6_reg_4202, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, w_18_fu_3256_p2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten6_reg_4202) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            w6_phi_fu_787_p4 <= w_18_fu_3256_p2;
        else 
            w6_phi_fu_787_p4 <= w6_reg_783;
        end if; 
    end process;

    w_16_fu_950_p2 <= std_logic_vector(unsigned(w_mid2_reg_3355) + unsigned(ap_const_lv6_1));
    w_17_fu_1134_p2 <= std_logic_vector(unsigned(w2_reg_703) + unsigned(ap_const_lv6_1));
    w_18_fu_3256_p2 <= std_logic_vector(unsigned(w6_mid2_reg_4222) + unsigned(ap_const_lv6_1));
    w_mid2_fu_836_p3 <= 
        ap_const_lv6_1 when (tmp_274_fu_830_p2(0) = '1') else 
        w_phi_fu_684_p4;

    w_phi_fu_684_p4_assign_proc : process(w_reg_680, exitcond_flatten_reg_3335, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w_16_fu_950_p2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3335 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            w_phi_fu_684_p4 <= w_16_fu_950_p2;
        else 
            w_phi_fu_684_p4 <= w_reg_680;
        end if; 
    end process;

    weight_0_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_0_V_ce0 <= ap_const_logic_1;
        else 
            weight_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_1_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_1_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_1_V_ce0 <= ap_const_logic_1;
        else 
            weight_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_2_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_2_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_2_V_ce0 <= ap_const_logic_1;
        else 
            weight_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_3_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_3_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_3_V_ce0 <= ap_const_logic_1;
        else 
            weight_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_4_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_4_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_4_V_ce0 <= ap_const_logic_1;
        else 
            weight_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_5_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_5_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_5_V_ce0 <= ap_const_logic_1;
        else 
            weight_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_6_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_6_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_6_V_ce0 <= ap_const_logic_1;
        else 
            weight_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_7_V_address0 <= tmp_334_cast_fu_1251_p1(7 - 1 downto 0);

    weight_7_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_7_V_ce0 <= ap_const_logic_1;
        else 
            weight_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
