// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_32_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv1_output_p_V_0_address0,
        conv1_output_p_V_0_ce0,
        conv1_output_p_V_0_q0,
        conv1_output_p_V_1_address0,
        conv1_output_p_V_1_ce0,
        conv1_output_p_V_1_q0,
        conv1_output_p_V_2_address0,
        conv1_output_p_V_2_ce0,
        conv1_output_p_V_2_q0,
        conv1_output_p_V_3_address0,
        conv1_output_p_V_3_ce0,
        conv1_output_p_V_3_q0,
        conv1_output_p_V_4_address0,
        conv1_output_p_V_4_ce0,
        conv1_output_p_V_4_q0,
        conv1_output_p_V_5_address0,
        conv1_output_p_V_5_ce0,
        conv1_output_p_V_5_q0,
        conv1_output_p_V_6_address0,
        conv1_output_p_V_6_ce0,
        conv1_output_p_V_6_q0,
        conv1_output_p_V_7_address0,
        conv1_output_p_V_7_ce0,
        conv1_output_p_V_7_q0,
        ShuffleConvs_0_Downs_7_address0,
        ShuffleConvs_0_Downs_7_ce0,
        ShuffleConvs_0_Downs_7_we0,
        ShuffleConvs_0_Downs_7_d0,
        ShuffleConvs_0_Downs_7_q0,
        ShuffleConvs_0_Downs_7_address1,
        ShuffleConvs_0_Downs_7_ce1,
        ShuffleConvs_0_Downs_7_we1,
        ShuffleConvs_0_Downs_7_d1,
        ShuffleConvs_0_Downs_6_address0,
        ShuffleConvs_0_Downs_6_ce0,
        ShuffleConvs_0_Downs_6_we0,
        ShuffleConvs_0_Downs_6_d0,
        ShuffleConvs_0_Downs_6_q0,
        ShuffleConvs_0_Downs_6_address1,
        ShuffleConvs_0_Downs_6_ce1,
        ShuffleConvs_0_Downs_6_we1,
        ShuffleConvs_0_Downs_6_d1,
        ShuffleConvs_0_Downs_5_address0,
        ShuffleConvs_0_Downs_5_ce0,
        ShuffleConvs_0_Downs_5_we0,
        ShuffleConvs_0_Downs_5_d0,
        ShuffleConvs_0_Downs_5_q0,
        ShuffleConvs_0_Downs_5_address1,
        ShuffleConvs_0_Downs_5_ce1,
        ShuffleConvs_0_Downs_5_we1,
        ShuffleConvs_0_Downs_5_d1,
        ShuffleConvs_0_Downs_4_address0,
        ShuffleConvs_0_Downs_4_ce0,
        ShuffleConvs_0_Downs_4_we0,
        ShuffleConvs_0_Downs_4_d0,
        ShuffleConvs_0_Downs_4_q0,
        ShuffleConvs_0_Downs_4_address1,
        ShuffleConvs_0_Downs_4_ce1,
        ShuffleConvs_0_Downs_4_we1,
        ShuffleConvs_0_Downs_4_d1,
        ShuffleConvs_0_Downs_3_address0,
        ShuffleConvs_0_Downs_3_ce0,
        ShuffleConvs_0_Downs_3_we0,
        ShuffleConvs_0_Downs_3_d0,
        ShuffleConvs_0_Downs_3_q0,
        ShuffleConvs_0_Downs_3_address1,
        ShuffleConvs_0_Downs_3_ce1,
        ShuffleConvs_0_Downs_3_we1,
        ShuffleConvs_0_Downs_3_d1,
        ShuffleConvs_0_Downs_2_address0,
        ShuffleConvs_0_Downs_2_ce0,
        ShuffleConvs_0_Downs_2_we0,
        ShuffleConvs_0_Downs_2_d0,
        ShuffleConvs_0_Downs_2_q0,
        ShuffleConvs_0_Downs_2_address1,
        ShuffleConvs_0_Downs_2_ce1,
        ShuffleConvs_0_Downs_2_we1,
        ShuffleConvs_0_Downs_2_d1,
        ShuffleConvs_0_Downs_1_address0,
        ShuffleConvs_0_Downs_1_ce0,
        ShuffleConvs_0_Downs_1_we0,
        ShuffleConvs_0_Downs_1_d0,
        ShuffleConvs_0_Downs_1_q0,
        ShuffleConvs_0_Downs_1_address1,
        ShuffleConvs_0_Downs_1_ce1,
        ShuffleConvs_0_Downs_1_we1,
        ShuffleConvs_0_Downs_1_d1,
        ShuffleConvs_0_Downs_address0,
        ShuffleConvs_0_Downs_ce0,
        ShuffleConvs_0_Downs_we0,
        ShuffleConvs_0_Downs_d0,
        ShuffleConvs_0_Downs_q0,
        ShuffleConvs_0_Downs_address1,
        ShuffleConvs_0_Downs_ce1,
        ShuffleConvs_0_Downs_we1,
        ShuffleConvs_0_Downs_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state5 = 14'd4;
parameter    ap_ST_fsm_state6 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_state8 = 14'd32;
parameter    ap_ST_fsm_state9 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [11:0] conv1_output_p_V_0_address0;
output   conv1_output_p_V_0_ce0;
input  [7:0] conv1_output_p_V_0_q0;
output  [11:0] conv1_output_p_V_1_address0;
output   conv1_output_p_V_1_ce0;
input  [7:0] conv1_output_p_V_1_q0;
output  [11:0] conv1_output_p_V_2_address0;
output   conv1_output_p_V_2_ce0;
input  [7:0] conv1_output_p_V_2_q0;
output  [11:0] conv1_output_p_V_3_address0;
output   conv1_output_p_V_3_ce0;
input  [7:0] conv1_output_p_V_3_q0;
output  [11:0] conv1_output_p_V_4_address0;
output   conv1_output_p_V_4_ce0;
input  [7:0] conv1_output_p_V_4_q0;
output  [11:0] conv1_output_p_V_5_address0;
output   conv1_output_p_V_5_ce0;
input  [7:0] conv1_output_p_V_5_q0;
output  [11:0] conv1_output_p_V_6_address0;
output   conv1_output_p_V_6_ce0;
input  [7:0] conv1_output_p_V_6_q0;
output  [11:0] conv1_output_p_V_7_address0;
output   conv1_output_p_V_7_ce0;
input  [7:0] conv1_output_p_V_7_q0;
output  [11:0] ShuffleConvs_0_Downs_7_address0;
output   ShuffleConvs_0_Downs_7_ce0;
output   ShuffleConvs_0_Downs_7_we0;
output  [7:0] ShuffleConvs_0_Downs_7_d0;
input  [7:0] ShuffleConvs_0_Downs_7_q0;
output  [11:0] ShuffleConvs_0_Downs_7_address1;
output   ShuffleConvs_0_Downs_7_ce1;
output   ShuffleConvs_0_Downs_7_we1;
output  [7:0] ShuffleConvs_0_Downs_7_d1;
output  [11:0] ShuffleConvs_0_Downs_6_address0;
output   ShuffleConvs_0_Downs_6_ce0;
output   ShuffleConvs_0_Downs_6_we0;
output  [7:0] ShuffleConvs_0_Downs_6_d0;
input  [7:0] ShuffleConvs_0_Downs_6_q0;
output  [11:0] ShuffleConvs_0_Downs_6_address1;
output   ShuffleConvs_0_Downs_6_ce1;
output   ShuffleConvs_0_Downs_6_we1;
output  [7:0] ShuffleConvs_0_Downs_6_d1;
output  [11:0] ShuffleConvs_0_Downs_5_address0;
output   ShuffleConvs_0_Downs_5_ce0;
output   ShuffleConvs_0_Downs_5_we0;
output  [7:0] ShuffleConvs_0_Downs_5_d0;
input  [7:0] ShuffleConvs_0_Downs_5_q0;
output  [11:0] ShuffleConvs_0_Downs_5_address1;
output   ShuffleConvs_0_Downs_5_ce1;
output   ShuffleConvs_0_Downs_5_we1;
output  [7:0] ShuffleConvs_0_Downs_5_d1;
output  [11:0] ShuffleConvs_0_Downs_4_address0;
output   ShuffleConvs_0_Downs_4_ce0;
output   ShuffleConvs_0_Downs_4_we0;
output  [7:0] ShuffleConvs_0_Downs_4_d0;
input  [7:0] ShuffleConvs_0_Downs_4_q0;
output  [11:0] ShuffleConvs_0_Downs_4_address1;
output   ShuffleConvs_0_Downs_4_ce1;
output   ShuffleConvs_0_Downs_4_we1;
output  [7:0] ShuffleConvs_0_Downs_4_d1;
output  [11:0] ShuffleConvs_0_Downs_3_address0;
output   ShuffleConvs_0_Downs_3_ce0;
output   ShuffleConvs_0_Downs_3_we0;
output  [7:0] ShuffleConvs_0_Downs_3_d0;
input  [7:0] ShuffleConvs_0_Downs_3_q0;
output  [11:0] ShuffleConvs_0_Downs_3_address1;
output   ShuffleConvs_0_Downs_3_ce1;
output   ShuffleConvs_0_Downs_3_we1;
output  [7:0] ShuffleConvs_0_Downs_3_d1;
output  [11:0] ShuffleConvs_0_Downs_2_address0;
output   ShuffleConvs_0_Downs_2_ce0;
output   ShuffleConvs_0_Downs_2_we0;
output  [7:0] ShuffleConvs_0_Downs_2_d0;
input  [7:0] ShuffleConvs_0_Downs_2_q0;
output  [11:0] ShuffleConvs_0_Downs_2_address1;
output   ShuffleConvs_0_Downs_2_ce1;
output   ShuffleConvs_0_Downs_2_we1;
output  [7:0] ShuffleConvs_0_Downs_2_d1;
output  [11:0] ShuffleConvs_0_Downs_1_address0;
output   ShuffleConvs_0_Downs_1_ce0;
output   ShuffleConvs_0_Downs_1_we0;
output  [7:0] ShuffleConvs_0_Downs_1_d0;
input  [7:0] ShuffleConvs_0_Downs_1_q0;
output  [11:0] ShuffleConvs_0_Downs_1_address1;
output   ShuffleConvs_0_Downs_1_ce1;
output   ShuffleConvs_0_Downs_1_we1;
output  [7:0] ShuffleConvs_0_Downs_1_d1;
output  [11:0] ShuffleConvs_0_Downs_address0;
output   ShuffleConvs_0_Downs_ce0;
output   ShuffleConvs_0_Downs_we0;
output  [7:0] ShuffleConvs_0_Downs_d0;
input  [7:0] ShuffleConvs_0_Downs_q0;
output  [11:0] ShuffleConvs_0_Downs_address1;
output   ShuffleConvs_0_Downs_ce1;
output   ShuffleConvs_0_Downs_we1;
output  [7:0] ShuffleConvs_0_Downs_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg bias_V_ce0;
reg conv1_output_p_V_0_ce0;
reg conv1_output_p_V_1_ce0;
reg conv1_output_p_V_2_ce0;
reg conv1_output_p_V_3_ce0;
reg conv1_output_p_V_4_ce0;
reg conv1_output_p_V_5_ce0;
reg conv1_output_p_V_6_ce0;
reg conv1_output_p_V_7_ce0;
reg[11:0] ShuffleConvs_0_Downs_7_address0;
reg ShuffleConvs_0_Downs_7_ce0;
reg ShuffleConvs_0_Downs_7_we0;
reg[7:0] ShuffleConvs_0_Downs_7_d0;
reg ShuffleConvs_0_Downs_7_ce1;
reg ShuffleConvs_0_Downs_7_we1;
reg[11:0] ShuffleConvs_0_Downs_6_address0;
reg ShuffleConvs_0_Downs_6_ce0;
reg ShuffleConvs_0_Downs_6_we0;
reg[7:0] ShuffleConvs_0_Downs_6_d0;
reg ShuffleConvs_0_Downs_6_ce1;
reg ShuffleConvs_0_Downs_6_we1;
reg[11:0] ShuffleConvs_0_Downs_5_address0;
reg ShuffleConvs_0_Downs_5_ce0;
reg ShuffleConvs_0_Downs_5_we0;
reg[7:0] ShuffleConvs_0_Downs_5_d0;
reg ShuffleConvs_0_Downs_5_ce1;
reg ShuffleConvs_0_Downs_5_we1;
reg[11:0] ShuffleConvs_0_Downs_4_address0;
reg ShuffleConvs_0_Downs_4_ce0;
reg ShuffleConvs_0_Downs_4_we0;
reg[7:0] ShuffleConvs_0_Downs_4_d0;
reg ShuffleConvs_0_Downs_4_ce1;
reg ShuffleConvs_0_Downs_4_we1;
reg[11:0] ShuffleConvs_0_Downs_3_address0;
reg ShuffleConvs_0_Downs_3_ce0;
reg ShuffleConvs_0_Downs_3_we0;
reg[7:0] ShuffleConvs_0_Downs_3_d0;
reg ShuffleConvs_0_Downs_3_ce1;
reg ShuffleConvs_0_Downs_3_we1;
reg[11:0] ShuffleConvs_0_Downs_2_address0;
reg ShuffleConvs_0_Downs_2_ce0;
reg ShuffleConvs_0_Downs_2_we0;
reg[7:0] ShuffleConvs_0_Downs_2_d0;
reg ShuffleConvs_0_Downs_2_ce1;
reg ShuffleConvs_0_Downs_2_we1;
reg[11:0] ShuffleConvs_0_Downs_1_address0;
reg ShuffleConvs_0_Downs_1_ce0;
reg ShuffleConvs_0_Downs_1_we0;
reg[7:0] ShuffleConvs_0_Downs_1_d0;
reg ShuffleConvs_0_Downs_1_ce1;
reg ShuffleConvs_0_Downs_1_we1;
reg[11:0] ShuffleConvs_0_Downs_address0;
reg ShuffleConvs_0_Downs_ce0;
reg ShuffleConvs_0_Downs_we0;
reg[7:0] ShuffleConvs_0_Downs_d0;
reg ShuffleConvs_0_Downs_ce1;
reg ShuffleConvs_0_Downs_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten1_reg_634;
reg   [4:0] co_reg_645;
reg   [11:0] indvar_flatten_reg_657;
reg   [5:0] h_reg_668;
reg   [5:0] w_reg_680;
reg   [14:0] indvar_flatten2_reg_737;
reg   [4:0] co4_reg_748;
reg   [11:0] indvar_flatten3_reg_760;
reg   [5:0] h5_reg_771;
reg   [5:0] w6_reg_783;
wire   [0:0] exitcond_flatten_fu_794_p2;
reg   [0:0] exitcond_flatten_reg_3335;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_3335;
wire   [14:0] indvar_flatten_next1_fu_800_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten5_fu_806_p2;
reg   [0:0] exitcond_flatten5_reg_3344;
wire   [0:0] exitcond23_mid_fu_824_p2;
reg   [0:0] exitcond23_mid_reg_3350;
wire   [5:0] w_mid2_fu_836_p3;
reg   [5:0] w_mid2_reg_3355;
reg   [5:0] ap_reg_pp0_iter1_w_mid2_reg_3355;
wire   [11:0] indvar_flatten_next_fu_850_p3;
wire   [4:0] tmp_mid2_v_fu_871_p3;
reg   [4:0] tmp_mid2_v_reg_3366;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] tmp_365_fu_883_p1;
reg   [2:0] tmp_365_reg_3371;
wire   [5:0] tmp_172_mid2_fu_933_p3;
reg   [5:0] tmp_172_mid2_reg_3375;
wire   [7:0] tmp_275_fu_944_p2;
reg   [7:0] tmp_275_reg_3380;
wire   [5:0] w_16_fu_950_p2;
wire   [0:0] exitcond7_fu_1000_p2;
wire    ap_CS_fsm_state6;
wire   [7:0] tmp_cast_fu_1006_p1;
reg   [7:0] tmp_cast_reg_3400;
wire   [12:0] tmp_173_cast_fu_1016_p1;
reg   [12:0] tmp_173_cast_reg_3409;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond8_fu_1010_p2;
wire   [5:0] h_6_fu_1020_p2;
wire   [4:0] ci_4_fu_1032_p2;
reg   [4:0] ci_4_reg_3423;
wire    ap_CS_fsm_state8;
wire   [7:0] tmp_176_cast_fu_1038_p1;
reg   [7:0] tmp_176_cast_reg_3428;
wire   [0:0] exitcond9_fu_1026_p2;
wire   [2:0] tmp_370_fu_1042_p1;
reg   [2:0] tmp_370_reg_3433;
reg   [11:0] conv1_output_p_V_0_a_reg_3438;
reg   [11:0] conv1_output_p_V_4_a_reg_3443;
reg   [11:0] conv1_output_p_V_7_a_reg_3448;
reg   [11:0] conv1_output_p_V_6_a_reg_3453;
reg   [11:0] conv1_output_p_V_3_a_reg_3458;
reg   [11:0] conv1_output_p_V_2_a_reg_3463;
reg   [11:0] conv1_output_p_V_5_a_reg_3468;
reg   [11:0] conv1_output_p_V_1_a_reg_3473;
wire   [5:0] w_17_fu_1134_p2;
wire   [7:0] tmp_294_fu_1186_p2;
reg   [7:0] tmp_294_reg_3486;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond10_fu_1140_p2;
wire   [12:0] tmp_299_fu_1240_p2;
reg   [12:0] tmp_299_reg_3491;
wire   [4:0] co_18_7_fu_1245_p2;
reg   [4:0] co_18_7_reg_3496;
wire    ap_CS_fsm_state10;
reg   [11:0] ShuffleConvs_0_Downs_16_reg_3541;
reg   [11:0] ShuffleConvs_0_Downs_17_reg_3546;
reg   [11:0] ShuffleConvs_0_Downs_18_reg_3551;
reg   [11:0] ShuffleConvs_0_Downs_19_reg_3556;
reg   [11:0] ShuffleConvs_0_Downs_20_reg_3561;
reg   [11:0] ShuffleConvs_0_Downs_21_reg_3566;
reg   [11:0] ShuffleConvs_0_Downs_22_reg_3571;
reg   [11:0] ShuffleConvs_0_Downs_23_reg_3576;
wire   [7:0] tmp_185_fu_1273_p10;
reg   [7:0] tmp_185_reg_3581;
wire   [15:0] p_Val2_s_fu_1301_p2;
reg   [15:0] p_Val2_s_reg_3586;
wire    ap_CS_fsm_state11;
reg   [7:0] ShuffleConvs_0_Downs_24_reg_3591;
reg   [0:0] tmp_374_reg_3596;
wire   [15:0] p_Val2_61_1_fu_1319_p2;
reg   [15:0] p_Val2_61_1_reg_3601;
reg   [7:0] ShuffleConvs_0_Downs_25_reg_3606;
reg   [0:0] tmp_379_reg_3611;
wire   [15:0] p_Val2_61_2_fu_1337_p2;
reg   [15:0] p_Val2_61_2_reg_3616;
reg   [7:0] ShuffleConvs_0_Downs_26_reg_3621;
reg   [0:0] tmp_384_reg_3626;
wire   [15:0] p_Val2_61_3_fu_1355_p2;
reg   [15:0] p_Val2_61_3_reg_3631;
reg   [7:0] ShuffleConvs_0_Downs_27_reg_3636;
reg   [0:0] tmp_389_reg_3641;
wire   [15:0] p_Val2_61_4_fu_1373_p2;
reg   [15:0] p_Val2_61_4_reg_3646;
reg   [7:0] ShuffleConvs_0_Downs_28_reg_3651;
reg   [0:0] tmp_394_reg_3656;
wire   [15:0] p_Val2_61_5_fu_1391_p2;
reg   [15:0] p_Val2_61_5_reg_3661;
reg   [7:0] ShuffleConvs_0_Downs_29_reg_3666;
reg   [0:0] tmp_399_reg_3671;
wire   [15:0] p_Val2_61_6_fu_1409_p2;
reg   [15:0] p_Val2_61_6_reg_3676;
reg   [7:0] ShuffleConvs_0_Downs_30_reg_3681;
reg   [0:0] tmp_404_reg_3686;
wire   [15:0] p_Val2_61_7_fu_1427_p2;
reg   [15:0] p_Val2_61_7_reg_3691;
reg   [7:0] ShuffleConvs_0_Downs_31_reg_3696;
reg   [0:0] tmp_409_reg_3701;
wire   [15:0] p_Val2_1_fu_1452_p2;
reg   [15:0] p_Val2_1_reg_3706;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_373_reg_3711;
wire   [7:0] p_Val2_3_fu_1486_p2;
reg   [7:0] p_Val2_3_reg_3718;
wire   [0:0] tmp_376_fu_1492_p3;
reg   [0:0] tmp_376_reg_3724;
wire   [0:0] carry_s_fu_1506_p2;
reg   [0:0] carry_s_reg_3730;
reg   [1:0] tmp_186_reg_3737;
wire   [15:0] p_Val2_62_1_fu_1533_p2;
reg   [15:0] p_Val2_62_1_reg_3743;
reg   [0:0] tmp_378_reg_3748;
wire   [7:0] p_Val2_64_1_fu_1567_p2;
reg   [7:0] p_Val2_64_1_reg_3755;
wire   [0:0] tmp_381_fu_1573_p3;
reg   [0:0] tmp_381_reg_3761;
wire   [0:0] carry_10_1_fu_1587_p2;
reg   [0:0] carry_10_1_reg_3767;
reg   [1:0] tmp_187_reg_3774;
wire   [15:0] p_Val2_62_2_fu_1614_p2;
reg   [15:0] p_Val2_62_2_reg_3780;
reg   [0:0] tmp_383_reg_3785;
wire   [7:0] p_Val2_64_2_fu_1648_p2;
reg   [7:0] p_Val2_64_2_reg_3792;
wire   [0:0] tmp_386_fu_1654_p3;
reg   [0:0] tmp_386_reg_3798;
wire   [0:0] carry_10_2_fu_1668_p2;
reg   [0:0] carry_10_2_reg_3804;
reg   [1:0] tmp_188_reg_3811;
wire   [15:0] p_Val2_62_3_fu_1695_p2;
reg   [15:0] p_Val2_62_3_reg_3817;
reg   [0:0] tmp_388_reg_3822;
wire   [7:0] p_Val2_64_3_fu_1729_p2;
reg   [7:0] p_Val2_64_3_reg_3829;
wire   [0:0] tmp_391_fu_1735_p3;
reg   [0:0] tmp_391_reg_3835;
wire   [0:0] carry_10_3_fu_1749_p2;
reg   [0:0] carry_10_3_reg_3841;
reg   [1:0] tmp_189_reg_3848;
wire   [15:0] p_Val2_62_4_fu_1776_p2;
reg   [15:0] p_Val2_62_4_reg_3854;
reg   [0:0] tmp_393_reg_3859;
wire   [7:0] p_Val2_64_4_fu_1810_p2;
reg   [7:0] p_Val2_64_4_reg_3866;
wire   [0:0] tmp_396_fu_1816_p3;
reg   [0:0] tmp_396_reg_3872;
wire   [0:0] carry_10_4_fu_1830_p2;
reg   [0:0] carry_10_4_reg_3878;
reg   [1:0] tmp_190_reg_3885;
wire   [15:0] p_Val2_62_5_fu_1857_p2;
reg   [15:0] p_Val2_62_5_reg_3891;
reg   [0:0] tmp_398_reg_3896;
wire   [7:0] p_Val2_64_5_fu_1891_p2;
reg   [7:0] p_Val2_64_5_reg_3903;
wire   [0:0] tmp_401_fu_1897_p3;
reg   [0:0] tmp_401_reg_3909;
wire   [0:0] carry_10_5_fu_1911_p2;
reg   [0:0] carry_10_5_reg_3915;
reg   [1:0] tmp_191_reg_3922;
wire   [15:0] p_Val2_62_6_fu_1938_p2;
reg   [15:0] p_Val2_62_6_reg_3928;
reg   [0:0] tmp_403_reg_3933;
wire   [7:0] p_Val2_64_6_fu_1972_p2;
reg   [7:0] p_Val2_64_6_reg_3940;
wire   [0:0] tmp_406_fu_1978_p3;
reg   [0:0] tmp_406_reg_3946;
wire   [0:0] carry_10_6_fu_1992_p2;
reg   [0:0] carry_10_6_reg_3952;
reg   [1:0] tmp_192_reg_3959;
wire   [15:0] p_Val2_62_7_fu_2019_p2;
reg   [15:0] p_Val2_62_7_reg_3965;
reg   [0:0] tmp_408_reg_3970;
wire   [7:0] p_Val2_64_7_fu_2053_p2;
reg   [7:0] p_Val2_64_7_reg_3977;
wire   [0:0] tmp_411_fu_2059_p3;
reg   [0:0] tmp_411_reg_3983;
wire   [0:0] carry_10_7_fu_2073_p2;
reg   [0:0] carry_10_7_reg_3989;
reg   [1:0] tmp_193_reg_3996;
wire   [0:0] p_38_i_i_fu_2131_p2;
reg   [0:0] p_38_i_i_reg_4002;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_183_fu_2147_p2;
reg   [0:0] tmp_183_reg_4007;
wire   [0:0] brmerge40_demorgan_i_fu_2158_p2;
reg   [0:0] brmerge40_demorgan_i_reg_4012;
wire   [0:0] underflow_fu_2175_p2;
reg   [0:0] underflow_reg_4017;
wire   [0:0] brmerge_i_i_i_fu_2180_p2;
reg   [0:0] brmerge_i_i_i_reg_4022;
wire   [0:0] p_38_i_i_1_fu_2228_p2;
reg   [0:0] p_38_i_i_1_reg_4027;
wire   [0:0] tmp_282_1_fu_2244_p2;
reg   [0:0] tmp_282_1_reg_4032;
wire   [0:0] brmerge40_demorgan_i_17_fu_2255_p2;
reg   [0:0] brmerge40_demorgan_i_17_reg_4037;
wire   [0:0] underflow_1_fu_2272_p2;
reg   [0:0] underflow_1_reg_4042;
wire   [0:0] brmerge_i_i_i_1_fu_2277_p2;
reg   [0:0] brmerge_i_i_i_1_reg_4047;
wire   [0:0] p_38_i_i_2_fu_2325_p2;
reg   [0:0] p_38_i_i_2_reg_4052;
wire   [0:0] tmp_282_2_fu_2341_p2;
reg   [0:0] tmp_282_2_reg_4057;
wire   [0:0] brmerge40_demorgan_i_11_fu_2352_p2;
reg   [0:0] brmerge40_demorgan_i_11_reg_4062;
wire   [0:0] underflow_2_fu_2369_p2;
reg   [0:0] underflow_2_reg_4067;
wire   [0:0] brmerge_i_i_i_2_fu_2374_p2;
reg   [0:0] brmerge_i_i_i_2_reg_4072;
wire   [0:0] p_38_i_i_3_fu_2422_p2;
reg   [0:0] p_38_i_i_3_reg_4077;
wire   [0:0] tmp_282_3_fu_2438_p2;
reg   [0:0] tmp_282_3_reg_4082;
wire   [0:0] brmerge40_demorgan_i_12_fu_2449_p2;
reg   [0:0] brmerge40_demorgan_i_12_reg_4087;
wire   [0:0] underflow_3_fu_2466_p2;
reg   [0:0] underflow_3_reg_4092;
wire   [0:0] brmerge_i_i_i_3_fu_2471_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4097;
wire   [0:0] p_38_i_i_4_fu_2519_p2;
reg   [0:0] p_38_i_i_4_reg_4102;
wire   [0:0] tmp_282_4_fu_2535_p2;
reg   [0:0] tmp_282_4_reg_4107;
wire   [0:0] brmerge40_demorgan_i_13_fu_2546_p2;
reg   [0:0] brmerge40_demorgan_i_13_reg_4112;
wire   [0:0] underflow_4_fu_2563_p2;
reg   [0:0] underflow_4_reg_4117;
wire   [0:0] brmerge_i_i_i_4_fu_2568_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4122;
wire   [0:0] p_38_i_i_5_fu_2616_p2;
reg   [0:0] p_38_i_i_5_reg_4127;
wire   [0:0] tmp_282_5_fu_2632_p2;
reg   [0:0] tmp_282_5_reg_4132;
wire   [0:0] brmerge40_demorgan_i_14_fu_2643_p2;
reg   [0:0] brmerge40_demorgan_i_14_reg_4137;
wire   [0:0] underflow_5_fu_2660_p2;
reg   [0:0] underflow_5_reg_4142;
wire   [0:0] brmerge_i_i_i_5_fu_2665_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4147;
wire   [0:0] p_38_i_i_6_fu_2713_p2;
reg   [0:0] p_38_i_i_6_reg_4152;
wire   [0:0] tmp_282_6_fu_2729_p2;
reg   [0:0] tmp_282_6_reg_4157;
wire   [0:0] brmerge40_demorgan_i_15_fu_2740_p2;
reg   [0:0] brmerge40_demorgan_i_15_reg_4162;
wire   [0:0] underflow_6_fu_2757_p2;
reg   [0:0] underflow_6_reg_4167;
wire   [0:0] brmerge_i_i_i_6_fu_2762_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4172;
wire   [0:0] p_38_i_i_7_fu_2810_p2;
reg   [0:0] p_38_i_i_7_reg_4177;
wire   [0:0] tmp_282_7_fu_2826_p2;
reg   [0:0] tmp_282_7_reg_4182;
wire   [0:0] brmerge40_demorgan_i_16_fu_2837_p2;
reg   [0:0] brmerge40_demorgan_i_16_reg_4187;
wire   [0:0] underflow_7_fu_2854_p2;
reg   [0:0] underflow_7_reg_4192;
wire   [0:0] brmerge_i_i_i_7_fu_2859_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4197;
wire   [0:0] exitcond_flatten6_fu_3105_p2;
reg   [0:0] exitcond_flatten6_reg_4202;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten6_reg_4202;
wire   [14:0] indvar_flatten_next1_2_fu_3111_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten7_fu_3117_p2;
reg   [0:0] exitcond_flatten7_reg_4211;
wire   [0:0] exitcond_mid_fu_3135_p2;
reg   [0:0] exitcond_mid_reg_4217;
wire   [5:0] w6_mid2_fu_3147_p3;
reg   [5:0] w6_mid2_reg_4222;
reg   [5:0] ap_reg_pp1_iter1_w6_mid2_reg_4222;
wire   [11:0] indvar_flatten_next1_1_fu_3161_p3;
wire   [4:0] arrayNo5_mid2_v_fu_3182_p3;
reg   [4:0] arrayNo5_mid2_v_reg_4233;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] tmp_367_fu_3189_p1;
reg   [2:0] tmp_367_reg_4238;
reg   [2:0] ap_reg_pp1_iter2_tmp_367_reg_4238;
wire   [5:0] tmp_175_mid2_fu_3239_p3;
reg   [5:0] tmp_175_mid2_reg_4243;
wire   [7:0] tmp_282_fu_3250_p2;
reg   [7:0] tmp_282_reg_4248;
wire   [5:0] w_18_fu_3256_p2;
reg   [11:0] ShuffleConvs_0_Downs_32_reg_4259;
reg   [11:0] ShuffleConvs_0_Downs_33_reg_4265;
reg   [11:0] ShuffleConvs_0_Downs_34_reg_4271;
reg   [11:0] ShuffleConvs_0_Downs_35_reg_4277;
reg   [11:0] ShuffleConvs_0_Downs_36_reg_4283;
reg   [11:0] ShuffleConvs_0_Downs_37_reg_4289;
reg   [11:0] ShuffleConvs_0_Downs_38_reg_4295;
reg   [11:0] ShuffleConvs_0_Downs_39_reg_4301;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [4:0] co_phi_fu_649_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [5:0] h_phi_fu_672_p4;
reg   [5:0] w_phi_fu_684_p4;
reg   [5:0] h1_reg_691;
wire    ap_CS_fsm_state5;
reg   [5:0] w2_reg_703;
reg   [4:0] ci_reg_715;
reg   [4:0] co3_reg_726;
wire    ap_CS_fsm_state14;
reg   [4:0] co4_phi_fu_752_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [5:0] h5_phi_fu_775_p4;
reg   [5:0] w6_phi_fu_787_p4;
wire   [63:0] tmp_mid2_fu_878_p1;
wire   [63:0] tmp_313_cast_fu_988_p1;
wire   [63:0] tmp_330_cast_fu_1122_p1;
wire  signed [63:0] tmp_334_cast_fu_1251_p1;
wire   [63:0] tmp_342_cast_fu_1262_p1;
wire   [63:0] tmp_322_cast_fu_3294_p1;
wire   [7:0] this_assign_1_6_fu_3066_p3;
wire   [0:0] tmp_369_fu_3327_p3;
wire   [7:0] this_assign_1_5_fu_3036_p3;
wire   [7:0] this_assign_1_4_fu_3006_p3;
wire   [7:0] this_assign_1_3_fu_2976_p3;
wire   [7:0] this_assign_1_2_fu_2946_p3;
wire   [7:0] this_assign_1_1_fu_2916_p3;
wire   [7:0] this_assign_1_fu_2886_p3;
wire   [7:0] this_assign_1_7_fu_3096_p3;
wire   [0:0] exitcond_fu_818_p2;
wire   [0:0] not_exitcond_flatten_fu_812_p2;
wire   [0:0] tmp_274_fu_830_p2;
wire   [11:0] indvar_flatten_op_fu_844_p2;
wire   [4:0] co_17_fu_858_p2;
wire   [1:0] newIndex8_mid2_v_fu_887_p4;
wire   [6:0] tmp_fu_897_p3;
wire   [2:0] tmp_s_fu_909_p3;
wire   [7:0] p_shl3_cast_fu_917_p1;
wire   [7:0] p_shl2_cast_fu_905_p1;
wire   [5:0] h_mid_fu_864_p3;
wire   [5:0] h_15_fu_927_p2;
wire   [7:0] tmp_273_fu_921_p2;
wire   [7:0] tmp_172_mid2_cast_fu_940_p1;
wire   [8:0] tmp_366_fu_962_p3;
wire   [12:0] p_shl1_cast_fu_969_p1;
wire   [12:0] p_shl_cast_fu_955_p3;
wire   [12:0] tmp_276_fu_973_p2;
wire   [12:0] tmp_174_cast_fu_979_p1;
wire   [12:0] tmp_277_fu_982_p2;
wire   [1:0] newIndex_fu_1046_p4;
wire   [6:0] tmp_285_fu_1056_p3;
wire   [2:0] tmp_286_fu_1068_p3;
wire   [7:0] p_shl7_cast_fu_1076_p1;
wire   [7:0] p_shl6_cast_fu_1064_p1;
wire   [7:0] tmp_287_fu_1080_p2;
wire   [7:0] tmp_288_fu_1086_p2;
wire   [8:0] tmp_371_fu_1099_p3;
wire   [12:0] p_shl5_cast_fu_1107_p1;
wire   [12:0] p_shl4_cast_fu_1091_p3;
wire   [12:0] tmp_289_fu_1111_p2;
wire   [12:0] tmp_290_fu_1117_p2;
wire   [1:0] newIndex3_fu_1146_p4;
wire   [6:0] tmp_291_fu_1156_p3;
wire   [4:0] tmp_292_fu_1168_p3;
wire   [7:0] p_shl12_cast_fu_1164_p1;
wire   [7:0] p_shl13_cast_fu_1176_p1;
wire   [7:0] tmp_293_fu_1180_p2;
wire   [2:0] tmp_295_fu_1191_p3;
wire   [7:0] p_shl11_cast_fu_1199_p1;
wire   [7:0] tmp_296_fu_1203_p2;
wire   [7:0] tmp_297_fu_1209_p2;
wire   [8:0] tmp_372_fu_1222_p3;
wire   [12:0] p_shl8_cast_fu_1214_p3;
wire   [12:0] p_shl9_cast_fu_1230_p1;
wire   [12:0] tmp_298_fu_1234_p2;
wire  signed [7:0] p_Val2_s_fu_1301_p0;
wire  signed [7:0] p_Val2_s_fu_1301_p1;
wire  signed [15:0] OP2_V_fu_1298_p1;
wire  signed [7:0] p_Val2_61_1_fu_1319_p0;
wire  signed [7:0] p_Val2_61_1_fu_1319_p1;
wire  signed [7:0] p_Val2_61_2_fu_1337_p0;
wire  signed [7:0] p_Val2_61_2_fu_1337_p1;
wire  signed [7:0] p_Val2_61_3_fu_1355_p0;
wire  signed [7:0] p_Val2_61_3_fu_1355_p1;
wire  signed [7:0] p_Val2_61_4_fu_1373_p0;
wire  signed [7:0] p_Val2_61_4_fu_1373_p1;
wire  signed [7:0] p_Val2_61_5_fu_1391_p0;
wire  signed [7:0] p_Val2_61_5_fu_1391_p1;
wire  signed [7:0] p_Val2_61_6_fu_1409_p0;
wire  signed [7:0] p_Val2_61_6_fu_1409_p1;
wire  signed [7:0] p_Val2_61_7_fu_1427_p0;
wire  signed [7:0] p_Val2_61_7_fu_1427_p1;
wire   [13:0] tmp_179_fu_1441_p3;
wire  signed [15:0] tmp_203_cast_fu_1448_p1;
wire   [7:0] p_Val2_2_fu_1465_p4;
wire   [7:0] tmp_180_fu_1475_p1;
wire   [0:0] tmp_375_fu_1478_p3;
wire   [0:0] tmp_181_fu_1500_p2;
wire   [13:0] tmp_269_1_fu_1522_p3;
wire  signed [15:0] tmp_269_1_cast_fu_1529_p1;
wire   [7:0] p_Val2_63_1_fu_1546_p4;
wire   [7:0] tmp_273_1_fu_1556_p1;
wire   [0:0] tmp_380_fu_1559_p3;
wire   [0:0] tmp_277_1_fu_1581_p2;
wire   [13:0] tmp_269_2_fu_1603_p3;
wire  signed [15:0] tmp_269_2_cast_fu_1610_p1;
wire   [7:0] p_Val2_63_2_fu_1627_p4;
wire   [7:0] tmp_273_2_fu_1637_p1;
wire   [0:0] tmp_385_fu_1640_p3;
wire   [0:0] tmp_277_2_fu_1662_p2;
wire   [13:0] tmp_269_3_fu_1684_p3;
wire  signed [15:0] tmp_269_3_cast_fu_1691_p1;
wire   [7:0] p_Val2_63_3_fu_1708_p4;
wire   [7:0] tmp_273_3_fu_1718_p1;
wire   [0:0] tmp_390_fu_1721_p3;
wire   [0:0] tmp_277_3_fu_1743_p2;
wire   [13:0] tmp_269_4_fu_1765_p3;
wire  signed [15:0] tmp_269_4_cast_fu_1772_p1;
wire   [7:0] p_Val2_63_4_fu_1789_p4;
wire   [7:0] tmp_273_4_fu_1799_p1;
wire   [0:0] tmp_395_fu_1802_p3;
wire   [0:0] tmp_277_4_fu_1824_p2;
wire   [13:0] tmp_269_5_fu_1846_p3;
wire  signed [15:0] tmp_269_5_cast_fu_1853_p1;
wire   [7:0] p_Val2_63_5_fu_1870_p4;
wire   [7:0] tmp_273_5_fu_1880_p1;
wire   [0:0] tmp_400_fu_1883_p3;
wire   [0:0] tmp_277_5_fu_1905_p2;
wire   [13:0] tmp_269_6_fu_1927_p3;
wire  signed [15:0] tmp_269_6_cast_fu_1934_p1;
wire   [7:0] p_Val2_63_6_fu_1951_p4;
wire   [7:0] tmp_273_6_fu_1961_p1;
wire   [0:0] tmp_405_fu_1964_p3;
wire   [0:0] tmp_277_6_fu_1986_p2;
wire   [13:0] tmp_269_7_fu_2008_p3;
wire  signed [15:0] tmp_269_7_cast_fu_2015_p1;
wire   [7:0] p_Val2_63_7_fu_2032_p4;
wire   [7:0] tmp_273_7_fu_2042_p1;
wire   [0:0] tmp_410_fu_2045_p3;
wire   [0:0] tmp_277_7_fu_2067_p2;
wire   [0:0] Range1_all_ones_fu_2096_p2;
wire   [0:0] Range1_all_zeros_fu_2101_p2;
wire   [0:0] tmp_377_fu_2089_p3;
wire   [0:0] tmp_182_fu_2113_p2;
wire   [0:0] p_41_i_i_fu_2119_p2;
wire   [0:0] deleted_zeros_fu_2106_p3;
wire   [0:0] p_not_i_i_fu_2136_p2;
wire   [0:0] brmerge_i_i_fu_2142_p2;
wire   [0:0] deleted_ones_fu_2124_p3;
wire   [0:0] tmp1_demorgan_fu_2163_p2;
wire   [0:0] tmp1_fu_2169_p2;
wire   [0:0] overflow_fu_2152_p2;
wire   [0:0] Range1_all_ones_1_fu_2193_p2;
wire   [0:0] Range1_all_zeros_1_fu_2198_p2;
wire   [0:0] tmp_382_fu_2186_p3;
wire   [0:0] tmp_280_1_fu_2210_p2;
wire   [0:0] p_41_i_i_1_fu_2216_p2;
wire   [0:0] deleted_zeros_1_fu_2203_p3;
wire   [0:0] p_not_i_i_1_fu_2233_p2;
wire   [0:0] brmerge_i_i_1_fu_2239_p2;
wire   [0:0] deleted_ones_1_fu_2221_p3;
wire   [0:0] tmp3_demorgan_fu_2260_p2;
wire   [0:0] tmp3_fu_2266_p2;
wire   [0:0] overflow_1_fu_2249_p2;
wire   [0:0] Range1_all_ones_2_fu_2290_p2;
wire   [0:0] Range1_all_zeros_2_fu_2295_p2;
wire   [0:0] tmp_387_fu_2283_p3;
wire   [0:0] tmp_280_2_fu_2307_p2;
wire   [0:0] p_41_i_i_2_fu_2313_p2;
wire   [0:0] deleted_zeros_2_fu_2300_p3;
wire   [0:0] p_not_i_i_2_fu_2330_p2;
wire   [0:0] brmerge_i_i_2_fu_2336_p2;
wire   [0:0] deleted_ones_2_fu_2318_p3;
wire   [0:0] tmp5_demorgan_fu_2357_p2;
wire   [0:0] tmp5_fu_2363_p2;
wire   [0:0] overflow_2_fu_2346_p2;
wire   [0:0] Range1_all_ones_3_fu_2387_p2;
wire   [0:0] Range1_all_zeros_3_fu_2392_p2;
wire   [0:0] tmp_392_fu_2380_p3;
wire   [0:0] tmp_280_3_fu_2404_p2;
wire   [0:0] p_41_i_i_3_fu_2410_p2;
wire   [0:0] deleted_zeros_3_fu_2397_p3;
wire   [0:0] p_not_i_i_3_fu_2427_p2;
wire   [0:0] brmerge_i_i_3_fu_2433_p2;
wire   [0:0] deleted_ones_3_fu_2415_p3;
wire   [0:0] tmp7_demorgan_fu_2454_p2;
wire   [0:0] tmp7_fu_2460_p2;
wire   [0:0] overflow_3_fu_2443_p2;
wire   [0:0] Range1_all_ones_4_fu_2484_p2;
wire   [0:0] Range1_all_zeros_4_fu_2489_p2;
wire   [0:0] tmp_397_fu_2477_p3;
wire   [0:0] tmp_280_4_fu_2501_p2;
wire   [0:0] p_41_i_i_4_fu_2507_p2;
wire   [0:0] deleted_zeros_4_fu_2494_p3;
wire   [0:0] p_not_i_i_4_fu_2524_p2;
wire   [0:0] brmerge_i_i_4_fu_2530_p2;
wire   [0:0] deleted_ones_4_fu_2512_p3;
wire   [0:0] tmp9_demorgan_fu_2551_p2;
wire   [0:0] tmp9_fu_2557_p2;
wire   [0:0] overflow_4_fu_2540_p2;
wire   [0:0] Range1_all_ones_5_fu_2581_p2;
wire   [0:0] Range1_all_zeros_5_fu_2586_p2;
wire   [0:0] tmp_402_fu_2574_p3;
wire   [0:0] tmp_280_5_fu_2598_p2;
wire   [0:0] p_41_i_i_5_fu_2604_p2;
wire   [0:0] deleted_zeros_5_fu_2591_p3;
wire   [0:0] p_not_i_i_5_fu_2621_p2;
wire   [0:0] brmerge_i_i_5_fu_2627_p2;
wire   [0:0] deleted_ones_5_fu_2609_p3;
wire   [0:0] tmp11_demorgan_fu_2648_p2;
wire   [0:0] tmp11_fu_2654_p2;
wire   [0:0] overflow_5_fu_2637_p2;
wire   [0:0] Range1_all_ones_6_fu_2678_p2;
wire   [0:0] Range1_all_zeros_6_fu_2683_p2;
wire   [0:0] tmp_407_fu_2671_p3;
wire   [0:0] tmp_280_6_fu_2695_p2;
wire   [0:0] p_41_i_i_6_fu_2701_p2;
wire   [0:0] deleted_zeros_6_fu_2688_p3;
wire   [0:0] p_not_i_i_6_fu_2718_p2;
wire   [0:0] brmerge_i_i_6_fu_2724_p2;
wire   [0:0] deleted_ones_6_fu_2706_p3;
wire   [0:0] tmp13_demorgan_fu_2745_p2;
wire   [0:0] tmp13_fu_2751_p2;
wire   [0:0] overflow_6_fu_2734_p2;
wire   [0:0] Range1_all_ones_7_fu_2775_p2;
wire   [0:0] Range1_all_zeros_7_fu_2780_p2;
wire   [0:0] tmp_412_fu_2768_p3;
wire   [0:0] tmp_280_7_fu_2792_p2;
wire   [0:0] p_41_i_i_7_fu_2798_p2;
wire   [0:0] deleted_zeros_7_fu_2785_p3;
wire   [0:0] p_not_i_i_7_fu_2815_p2;
wire   [0:0] brmerge_i_i_7_fu_2821_p2;
wire   [0:0] deleted_ones_7_fu_2803_p3;
wire   [0:0] tmp15_demorgan_fu_2842_p2;
wire   [0:0] tmp15_fu_2848_p2;
wire   [0:0] overflow_7_fu_2831_p2;
wire   [0:0] tmp2_fu_2865_p2;
wire   [0:0] underflow_not_fu_2869_p2;
wire   [7:0] p_Val2_64_mux_fu_2874_p3;
wire   [7:0] p_Val2_s_112_fu_2880_p3;
wire   [0:0] tmp4_fu_2895_p2;
wire   [0:0] underflow_not_1_fu_2899_p2;
wire   [7:0] p_Val2_64_mux_1_fu_2904_p3;
wire   [7:0] p_Val2_64_1_113_fu_2910_p3;
wire   [0:0] tmp6_fu_2925_p2;
wire   [0:0] underflow_not_2_fu_2929_p2;
wire   [7:0] p_Val2_64_mux_2_fu_2934_p3;
wire   [7:0] p_Val2_64_2_114_fu_2940_p3;
wire   [0:0] tmp8_fu_2955_p2;
wire   [0:0] underflow_not_3_fu_2959_p2;
wire   [7:0] p_Val2_64_mux_3_fu_2964_p3;
wire   [7:0] p_Val2_64_3_115_fu_2970_p3;
wire   [0:0] tmp10_fu_2985_p2;
wire   [0:0] underflow_not_4_fu_2989_p2;
wire   [7:0] p_Val2_64_mux_4_fu_2994_p3;
wire   [7:0] p_Val2_64_4_116_fu_3000_p3;
wire   [0:0] tmp12_fu_3015_p2;
wire   [0:0] underflow_not_5_fu_3019_p2;
wire   [7:0] p_Val2_64_mux_5_fu_3024_p3;
wire   [7:0] p_Val2_64_5_117_fu_3030_p3;
wire   [0:0] tmp14_fu_3045_p2;
wire   [0:0] underflow_not_6_fu_3049_p2;
wire   [7:0] p_Val2_64_mux_6_fu_3054_p3;
wire   [7:0] p_Val2_64_6_118_fu_3060_p3;
wire   [0:0] tmp16_fu_3075_p2;
wire   [0:0] underflow_not_7_fu_3079_p2;
wire   [7:0] p_Val2_64_mux_7_fu_3084_p3;
wire   [7:0] p_Val2_64_7_119_fu_3090_p3;
wire   [0:0] exitcond11_fu_3129_p2;
wire   [0:0] not_exitcond_flatten_8_fu_3123_p2;
wire   [0:0] tmp_281_fu_3141_p2;
wire   [11:0] indvar_flatten21_op_fu_3155_p2;
wire   [4:0] co_18_fu_3169_p2;
wire   [1:0] newIndex1_mid2_v_fu_3193_p4;
wire   [6:0] tmp_278_fu_3203_p3;
wire   [2:0] tmp_279_fu_3215_p3;
wire   [7:0] p_shl17_cast_fu_3223_p1;
wire   [7:0] p_shl16_cast_fu_3211_p1;
wire   [5:0] h5_mid_fu_3175_p3;
wire   [5:0] h_5_fu_3233_p2;
wire   [7:0] tmp_280_fu_3227_p2;
wire   [7:0] tmp_175_mid2_cast_fu_3246_p1;
wire   [8:0] tmp_368_fu_3268_p3;
wire   [12:0] p_shl15_cast_fu_3275_p1;
wire   [12:0] p_shl14_cast_fu_3261_p3;
wire   [12:0] tmp_283_fu_3279_p2;
wire   [12:0] tmp_177_cast_fu_3285_p1;
wire   [12:0] tmp_284_fu_3288_p2;
wire   [7:0] tmp_184_fu_3306_p10;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U16(
    .din1(conv1_output_p_V_0_q0),
    .din2(conv1_output_p_V_1_q0),
    .din3(conv1_output_p_V_2_q0),
    .din4(conv1_output_p_V_3_q0),
    .din5(conv1_output_p_V_4_q0),
    .din6(conv1_output_p_V_5_q0),
    .din7(conv1_output_p_V_6_q0),
    .din8(conv1_output_p_V_7_q0),
    .din9(tmp_370_reg_3433),
    .dout(tmp_185_fu_1273_p10)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U17(
    .din1(ShuffleConvs_0_Downs_7_q0),
    .din2(ShuffleConvs_0_Downs_6_q0),
    .din3(ShuffleConvs_0_Downs_5_q0),
    .din4(ShuffleConvs_0_Downs_4_q0),
    .din5(ShuffleConvs_0_Downs_3_q0),
    .din6(ShuffleConvs_0_Downs_2_q0),
    .din7(ShuffleConvs_0_Downs_1_q0),
    .din8(ShuffleConvs_0_Downs_q0),
    .din9(ap_reg_pp1_iter2_tmp_367_reg_4238),
    .dout(tmp_184_fu_3306_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond10_fu_1140_p2))) begin
        ci_reg_715 <= ci_4_reg_3423;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond8_fu_1010_p2))) begin
        ci_reg_715 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond9_fu_1026_p2))) begin
        co3_reg_726 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co3_reg_726 <= co_18_7_reg_3496;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
        co4_reg_748 <= 5'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_748 <= arrayNo5_mid2_v_reg_4233;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 == 1'd0))) begin
        co_reg_645 <= tmp_mid2_v_reg_3366;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_645 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_691 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond8_fu_1010_p2 == 1'd1))) begin
        h1_reg_691 <= h_6_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
        h5_reg_771 <= 6'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_771 <= tmp_175_mid2_reg_4243;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 == 1'd0))) begin
        h_reg_668 <= tmp_172_mid2_reg_3375;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_668 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_794_p2 == 1'd0))) begin
        indvar_flatten1_reg_634 <= indvar_flatten_next1_fu_800_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_634 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
        indvar_flatten2_reg_737 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3105_p2))) begin
        indvar_flatten2_reg_737 <= indvar_flatten_next1_2_fu_3111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
        indvar_flatten3_reg_760 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3105_p2))) begin
        indvar_flatten3_reg_760 <= indvar_flatten_next1_1_fu_3161_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_794_p2 == 1'd0))) begin
        indvar_flatten_reg_657 <= indvar_flatten_next_fu_850_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_657 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond7_fu_1000_p2))) begin
        w2_reg_703 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond9_fu_1026_p2))) begin
        w2_reg_703 <= w_17_fu_1134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
        w6_reg_783 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten6_reg_4202))) begin
        w6_reg_783 <= w_18_fu_3256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3335 == 1'd0))) begin
        w_reg_680 <= w_16_fu_950_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_680 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_16_reg_3541 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_17_reg_3546 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_18_reg_3551 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_19_reg_3556 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_20_reg_3561 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_21_reg_3566 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_22_reg_3571 <= tmp_342_cast_fu_1262_p1;
        ShuffleConvs_0_Downs_23_reg_3576 <= tmp_342_cast_fu_1262_p1;
        tmp_185_reg_3581 <= tmp_185_fu_1273_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_0_Downs_24_reg_3591 <= ShuffleConvs_0_Downs_7_q0;
        ShuffleConvs_0_Downs_25_reg_3606 <= ShuffleConvs_0_Downs_6_q0;
        ShuffleConvs_0_Downs_26_reg_3621 <= ShuffleConvs_0_Downs_5_q0;
        ShuffleConvs_0_Downs_27_reg_3636 <= ShuffleConvs_0_Downs_4_q0;
        ShuffleConvs_0_Downs_28_reg_3651 <= ShuffleConvs_0_Downs_3_q0;
        ShuffleConvs_0_Downs_29_reg_3666 <= ShuffleConvs_0_Downs_2_q0;
        ShuffleConvs_0_Downs_30_reg_3681 <= ShuffleConvs_0_Downs_1_q0;
        ShuffleConvs_0_Downs_31_reg_3696 <= ShuffleConvs_0_Downs_q0;
        p_Val2_61_1_reg_3601 <= p_Val2_61_1_fu_1319_p2;
        p_Val2_61_2_reg_3616 <= p_Val2_61_2_fu_1337_p2;
        p_Val2_61_3_reg_3631 <= p_Val2_61_3_fu_1355_p2;
        p_Val2_61_4_reg_3646 <= p_Val2_61_4_fu_1373_p2;
        p_Val2_61_5_reg_3661 <= p_Val2_61_5_fu_1391_p2;
        p_Val2_61_6_reg_3676 <= p_Val2_61_6_fu_1409_p2;
        p_Val2_61_7_reg_3691 <= p_Val2_61_7_fu_1427_p2;
        p_Val2_s_reg_3586 <= p_Val2_s_fu_1301_p2;
        tmp_374_reg_3596 <= p_Val2_s_fu_1301_p2[32'd5];
        tmp_379_reg_3611 <= p_Val2_61_1_fu_1319_p2[32'd5];
        tmp_384_reg_3626 <= p_Val2_61_2_fu_1337_p2[32'd5];
        tmp_389_reg_3641 <= p_Val2_61_3_fu_1355_p2[32'd5];
        tmp_394_reg_3656 <= p_Val2_61_4_fu_1373_p2[32'd5];
        tmp_399_reg_3671 <= p_Val2_61_5_fu_1391_p2[32'd5];
        tmp_404_reg_3686 <= p_Val2_61_6_fu_1409_p2[32'd5];
        tmp_409_reg_3701 <= p_Val2_61_7_fu_1427_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4202))) begin
        ShuffleConvs_0_Downs_32_reg_4259 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_33_reg_4265 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_34_reg_4271 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_35_reg_4277 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_36_reg_4283 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_37_reg_4289 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_38_reg_4295 <= tmp_322_cast_fu_3294_p1;
        ShuffleConvs_0_Downs_39_reg_4301 <= tmp_322_cast_fu_3294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_3335 <= exitcond_flatten_reg_3335;
        ap_reg_pp0_iter1_w_mid2_reg_3355 <= w_mid2_reg_3355;
        exitcond_flatten_reg_3335 <= exitcond_flatten_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten6_reg_4202 <= exitcond_flatten6_reg_4202;
        ap_reg_pp1_iter1_w6_mid2_reg_4222 <= w6_mid2_reg_4222;
        exitcond_flatten6_reg_4202 <= exitcond_flatten6_fu_3105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_tmp_367_reg_4238 <= tmp_367_reg_4238;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten6_reg_4202))) begin
        arrayNo5_mid2_v_reg_4233 <= arrayNo5_mid2_v_fu_3182_p3;
        tmp_175_mid2_reg_4243 <= tmp_175_mid2_fu_3239_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        brmerge40_demorgan_i_11_reg_4062 <= brmerge40_demorgan_i_11_fu_2352_p2;
        brmerge40_demorgan_i_12_reg_4087 <= brmerge40_demorgan_i_12_fu_2449_p2;
        brmerge40_demorgan_i_13_reg_4112 <= brmerge40_demorgan_i_13_fu_2546_p2;
        brmerge40_demorgan_i_14_reg_4137 <= brmerge40_demorgan_i_14_fu_2643_p2;
        brmerge40_demorgan_i_15_reg_4162 <= brmerge40_demorgan_i_15_fu_2740_p2;
        brmerge40_demorgan_i_16_reg_4187 <= brmerge40_demorgan_i_16_fu_2837_p2;
        brmerge40_demorgan_i_17_reg_4037 <= brmerge40_demorgan_i_17_fu_2255_p2;
        brmerge40_demorgan_i_reg_4012 <= brmerge40_demorgan_i_fu_2158_p2;
        brmerge_i_i_i_1_reg_4047 <= brmerge_i_i_i_1_fu_2277_p2;
        brmerge_i_i_i_2_reg_4072 <= brmerge_i_i_i_2_fu_2374_p2;
        brmerge_i_i_i_3_reg_4097 <= brmerge_i_i_i_3_fu_2471_p2;
        brmerge_i_i_i_4_reg_4122 <= brmerge_i_i_i_4_fu_2568_p2;
        brmerge_i_i_i_5_reg_4147 <= brmerge_i_i_i_5_fu_2665_p2;
        brmerge_i_i_i_6_reg_4172 <= brmerge_i_i_i_6_fu_2762_p2;
        brmerge_i_i_i_7_reg_4197 <= brmerge_i_i_i_7_fu_2859_p2;
        brmerge_i_i_i_reg_4022 <= brmerge_i_i_i_fu_2180_p2;
        p_38_i_i_1_reg_4027 <= p_38_i_i_1_fu_2228_p2;
        p_38_i_i_2_reg_4052 <= p_38_i_i_2_fu_2325_p2;
        p_38_i_i_3_reg_4077 <= p_38_i_i_3_fu_2422_p2;
        p_38_i_i_4_reg_4102 <= p_38_i_i_4_fu_2519_p2;
        p_38_i_i_5_reg_4127 <= p_38_i_i_5_fu_2616_p2;
        p_38_i_i_6_reg_4152 <= p_38_i_i_6_fu_2713_p2;
        p_38_i_i_7_reg_4177 <= p_38_i_i_7_fu_2810_p2;
        p_38_i_i_reg_4002 <= p_38_i_i_fu_2131_p2;
        tmp_183_reg_4007 <= tmp_183_fu_2147_p2;
        tmp_282_1_reg_4032 <= tmp_282_1_fu_2244_p2;
        tmp_282_2_reg_4057 <= tmp_282_2_fu_2341_p2;
        tmp_282_3_reg_4082 <= tmp_282_3_fu_2438_p2;
        tmp_282_4_reg_4107 <= tmp_282_4_fu_2535_p2;
        tmp_282_5_reg_4132 <= tmp_282_5_fu_2632_p2;
        tmp_282_6_reg_4157 <= tmp_282_6_fu_2729_p2;
        tmp_282_7_reg_4182 <= tmp_282_7_fu_2826_p2;
        underflow_1_reg_4042 <= underflow_1_fu_2272_p2;
        underflow_2_reg_4067 <= underflow_2_fu_2369_p2;
        underflow_3_reg_4092 <= underflow_3_fu_2466_p2;
        underflow_4_reg_4117 <= underflow_4_fu_2563_p2;
        underflow_5_reg_4142 <= underflow_5_fu_2660_p2;
        underflow_6_reg_4167 <= underflow_6_fu_2757_p2;
        underflow_7_reg_4192 <= underflow_7_fu_2854_p2;
        underflow_reg_4017 <= underflow_fu_2175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        carry_10_1_reg_3767 <= carry_10_1_fu_1587_p2;
        carry_10_2_reg_3804 <= carry_10_2_fu_1668_p2;
        carry_10_3_reg_3841 <= carry_10_3_fu_1749_p2;
        carry_10_4_reg_3878 <= carry_10_4_fu_1830_p2;
        carry_10_5_reg_3915 <= carry_10_5_fu_1911_p2;
        carry_10_6_reg_3952 <= carry_10_6_fu_1992_p2;
        carry_10_7_reg_3989 <= carry_10_7_fu_2073_p2;
        carry_s_reg_3730 <= carry_s_fu_1506_p2;
        p_Val2_1_reg_3706 <= p_Val2_1_fu_1452_p2;
        p_Val2_3_reg_3718 <= p_Val2_3_fu_1486_p2;
        p_Val2_62_1_reg_3743 <= p_Val2_62_1_fu_1533_p2;
        p_Val2_62_2_reg_3780 <= p_Val2_62_2_fu_1614_p2;
        p_Val2_62_3_reg_3817 <= p_Val2_62_3_fu_1695_p2;
        p_Val2_62_4_reg_3854 <= p_Val2_62_4_fu_1776_p2;
        p_Val2_62_5_reg_3891 <= p_Val2_62_5_fu_1857_p2;
        p_Val2_62_6_reg_3928 <= p_Val2_62_6_fu_1938_p2;
        p_Val2_62_7_reg_3965 <= p_Val2_62_7_fu_2019_p2;
        p_Val2_64_1_reg_3755 <= p_Val2_64_1_fu_1567_p2;
        p_Val2_64_2_reg_3792 <= p_Val2_64_2_fu_1648_p2;
        p_Val2_64_3_reg_3829 <= p_Val2_64_3_fu_1729_p2;
        p_Val2_64_4_reg_3866 <= p_Val2_64_4_fu_1810_p2;
        p_Val2_64_5_reg_3903 <= p_Val2_64_5_fu_1891_p2;
        p_Val2_64_6_reg_3940 <= p_Val2_64_6_fu_1972_p2;
        p_Val2_64_7_reg_3977 <= p_Val2_64_7_fu_2053_p2;
        tmp_186_reg_3737 <= {{p_Val2_1_fu_1452_p2[15:14]}};
        tmp_187_reg_3774 <= {{p_Val2_62_1_fu_1533_p2[15:14]}};
        tmp_188_reg_3811 <= {{p_Val2_62_2_fu_1614_p2[15:14]}};
        tmp_189_reg_3848 <= {{p_Val2_62_3_fu_1695_p2[15:14]}};
        tmp_190_reg_3885 <= {{p_Val2_62_4_fu_1776_p2[15:14]}};
        tmp_191_reg_3922 <= {{p_Val2_62_5_fu_1857_p2[15:14]}};
        tmp_192_reg_3959 <= {{p_Val2_62_6_fu_1938_p2[15:14]}};
        tmp_193_reg_3996 <= {{p_Val2_62_7_fu_2019_p2[15:14]}};
        tmp_373_reg_3711 <= p_Val2_1_fu_1452_p2[32'd15];
        tmp_376_reg_3724 <= p_Val2_3_fu_1486_p2[32'd7];
        tmp_378_reg_3748 <= p_Val2_62_1_fu_1533_p2[32'd15];
        tmp_381_reg_3761 <= p_Val2_64_1_fu_1567_p2[32'd7];
        tmp_383_reg_3785 <= p_Val2_62_2_fu_1614_p2[32'd15];
        tmp_386_reg_3798 <= p_Val2_64_2_fu_1648_p2[32'd7];
        tmp_388_reg_3822 <= p_Val2_62_3_fu_1695_p2[32'd15];
        tmp_391_reg_3835 <= p_Val2_64_3_fu_1729_p2[32'd7];
        tmp_393_reg_3859 <= p_Val2_62_4_fu_1776_p2[32'd15];
        tmp_396_reg_3872 <= p_Val2_64_4_fu_1810_p2[32'd7];
        tmp_398_reg_3896 <= p_Val2_62_5_fu_1857_p2[32'd15];
        tmp_401_reg_3909 <= p_Val2_64_5_fu_1891_p2[32'd7];
        tmp_403_reg_3933 <= p_Val2_62_6_fu_1938_p2[32'd15];
        tmp_406_reg_3946 <= p_Val2_64_6_fu_1972_p2[32'd7];
        tmp_408_reg_3970 <= p_Val2_62_7_fu_2019_p2[32'd15];
        tmp_411_reg_3983 <= p_Val2_64_7_fu_2053_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_4_reg_3423 <= ci_4_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond10_fu_1140_p2))) begin
        co_18_7_reg_3496 <= co_18_7_fu_1245_p2;
        tmp_294_reg_3486 <= tmp_294_fu_1186_p2;
        tmp_299_reg_3491 <= tmp_299_fu_1240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond9_fu_1026_p2))) begin
        conv1_output_p_V_0_a_reg_3438 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_1_a_reg_3473 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_2_a_reg_3463 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_3_a_reg_3458 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_4_a_reg_3443 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_5_a_reg_3468 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_6_a_reg_3453 <= tmp_330_cast_fu_1122_p1;
        conv1_output_p_V_7_a_reg_3448 <= tmp_330_cast_fu_1122_p1;
        tmp_176_cast_reg_3428[4 : 0] <= tmp_176_cast_fu_1038_p1[4 : 0];
        tmp_370_reg_3433 <= tmp_370_fu_1042_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_794_p2 == 1'd0))) begin
        exitcond23_mid_reg_3350 <= exitcond23_mid_fu_824_p2;
        exitcond_flatten5_reg_3344 <= exitcond_flatten5_fu_806_p2;
        w_mid2_reg_3355 <= w_mid2_fu_836_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_fu_3105_p2))) begin
        exitcond_flatten7_reg_4211 <= exitcond_flatten7_fu_3117_p2;
        exitcond_mid_reg_4217 <= exitcond_mid_fu_3135_p2;
        w6_mid2_reg_4222 <= w6_mid2_fu_3147_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3335 == 1'd0))) begin
        tmp_172_mid2_reg_3375 <= tmp_172_mid2_fu_933_p3;
        tmp_mid2_v_reg_3366 <= tmp_mid2_v_fu_871_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond8_fu_1010_p2))) begin
        tmp_173_cast_reg_3409[5 : 0] <= tmp_173_cast_fu_1016_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_3335 == 1'd0))) begin
        tmp_275_reg_3380 <= tmp_275_fu_944_p2;
        tmp_365_reg_3371 <= tmp_365_fu_883_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_4202))) begin
        tmp_282_reg_4248 <= tmp_282_fu_3250_p2;
        tmp_367_reg_4238 <= tmp_367_fu_3189_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond7_fu_1000_p2))) begin
        tmp_cast_reg_3400[5 : 0] <= tmp_cast_fu_1006_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_1_address0 = ShuffleConvs_0_Downs_23_reg_3576;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_1_d0 = this_assign_1_6_fu_3066_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd6)))) begin
        ShuffleConvs_0_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd6))) begin
        ShuffleConvs_0_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_2_address0 = ShuffleConvs_0_Downs_20_reg_3561;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_2_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_2_d0 = this_assign_1_5_fu_3036_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd5)))) begin
        ShuffleConvs_0_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd5))) begin
        ShuffleConvs_0_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_3_address0 = ShuffleConvs_0_Downs_17_reg_3546;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_3_d0 = this_assign_1_4_fu_3006_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd4)))) begin
        ShuffleConvs_0_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd4))) begin
        ShuffleConvs_0_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_4_address0 = ShuffleConvs_0_Downs_22_reg_3571;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_4_d0 = this_assign_1_3_fu_2976_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd3)))) begin
        ShuffleConvs_0_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd3))) begin
        ShuffleConvs_0_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_5_address0 = ShuffleConvs_0_Downs_18_reg_3551;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_5_d0 = this_assign_1_2_fu_2946_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd2)))) begin
        ShuffleConvs_0_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd2))) begin
        ShuffleConvs_0_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_6_address0 = ShuffleConvs_0_Downs_21_reg_3566;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_6_d0 = this_assign_1_1_fu_2916_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd1)))) begin
        ShuffleConvs_0_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd1))) begin
        ShuffleConvs_0_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_7_address0 = ShuffleConvs_0_Downs_16_reg_3541;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_7_d0 = this_assign_1_fu_2886_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd0)))) begin
        ShuffleConvs_0_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd0))) begin
        ShuffleConvs_0_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_address0 = tmp_322_cast_fu_3294_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_address0 = ShuffleConvs_0_Downs_19_reg_3556;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_0_Downs_address0 = tmp_342_cast_fu_1262_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_address0 = tmp_313_cast_fu_988_p1;
    end else begin
        ShuffleConvs_0_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_0_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_0_Downs_d0 = this_assign_1_7_fu_3096_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_365_reg_3371 == 3'd7)))) begin
        ShuffleConvs_0_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_369_fu_3327_p3) & (ap_reg_pp1_iter2_tmp_367_reg_4238 == 3'd7))) begin
        ShuffleConvs_0_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_794_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten6_fu_3105_p2)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_752_p4 = arrayNo5_mid2_v_reg_4233;
    end else begin
        co4_phi_fu_752_p4 = co4_reg_748;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_649_p4 = tmp_mid2_v_reg_3366;
    end else begin
        co_phi_fu_649_p4 = co_reg_645;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_0_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_1_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_2_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_3_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_4_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_5_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_6_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_7_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4202) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_775_p4 = tmp_175_mid2_reg_4243;
    end else begin
        h5_phi_fu_775_p4 = h5_reg_771;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3335 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_672_p4 = tmp_172_mid2_reg_3375;
    end else begin
        h_phi_fu_672_p4 = h_reg_668;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten6_reg_4202) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_787_p4 = w_18_fu_3256_p2;
    end else begin
        w6_phi_fu_787_p4 = w6_reg_783;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3335 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_684_p4 = w_16_fu_950_p2;
    end else begin
        w_phi_fu_684_p4 = w_reg_680;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_794_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_794_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond7_fu_1000_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond8_fu_1010_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond9_fu_1026_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond10_fu_1140_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3105_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3105_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1298_p1 = $signed(tmp_185_reg_3581);

assign Range1_all_ones_1_fu_2193_p2 = ((tmp_187_reg_3774 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2290_p2 = ((tmp_188_reg_3811 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2387_p2 = ((tmp_189_reg_3848 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2484_p2 = ((tmp_190_reg_3885 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2581_p2 = ((tmp_191_reg_3922 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2678_p2 = ((tmp_192_reg_3959 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2775_p2 = ((tmp_193_reg_3996 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_2096_p2 = ((tmp_186_reg_3737 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2198_p2 = ((tmp_187_reg_3774 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2295_p2 = ((tmp_188_reg_3811 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2392_p2 = ((tmp_189_reg_3848 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2489_p2 = ((tmp_190_reg_3885 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2586_p2 = ((tmp_191_reg_3922 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2683_p2 = ((tmp_192_reg_3959 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2780_p2 = ((tmp_193_reg_3996 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2101_p2 = ((tmp_186_reg_3737 == 2'd0) ? 1'b1 : 1'b0);

assign ShuffleConvs_0_Downs_1_address1 = ShuffleConvs_0_Downs_39_reg_4301;

assign ShuffleConvs_0_Downs_1_d1 = 8'd0;

assign ShuffleConvs_0_Downs_2_address1 = ShuffleConvs_0_Downs_36_reg_4283;

assign ShuffleConvs_0_Downs_2_d1 = 8'd0;

assign ShuffleConvs_0_Downs_3_address1 = ShuffleConvs_0_Downs_33_reg_4265;

assign ShuffleConvs_0_Downs_3_d1 = 8'd0;

assign ShuffleConvs_0_Downs_4_address1 = ShuffleConvs_0_Downs_38_reg_4295;

assign ShuffleConvs_0_Downs_4_d1 = 8'd0;

assign ShuffleConvs_0_Downs_5_address1 = ShuffleConvs_0_Downs_34_reg_4271;

assign ShuffleConvs_0_Downs_5_d1 = 8'd0;

assign ShuffleConvs_0_Downs_6_address1 = ShuffleConvs_0_Downs_37_reg_4289;

assign ShuffleConvs_0_Downs_6_d1 = 8'd0;

assign ShuffleConvs_0_Downs_7_address1 = ShuffleConvs_0_Downs_32_reg_4259;

assign ShuffleConvs_0_Downs_7_d1 = 8'd0;

assign ShuffleConvs_0_Downs_address1 = ShuffleConvs_0_Downs_35_reg_4277;

assign ShuffleConvs_0_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo5_mid2_v_fu_3182_p3 = ((exitcond_flatten7_reg_4211[0:0] === 1'b1) ? co_18_fu_3169_p2 : co4_phi_fu_752_p4);

assign bias_V_address0 = tmp_mid2_fu_878_p1;

assign brmerge40_demorgan_i_11_fu_2352_p2 = (tmp_386_reg_3798 & deleted_ones_2_fu_2318_p3);

assign brmerge40_demorgan_i_12_fu_2449_p2 = (tmp_391_reg_3835 & deleted_ones_3_fu_2415_p3);

assign brmerge40_demorgan_i_13_fu_2546_p2 = (tmp_396_reg_3872 & deleted_ones_4_fu_2512_p3);

assign brmerge40_demorgan_i_14_fu_2643_p2 = (tmp_401_reg_3909 & deleted_ones_5_fu_2609_p3);

assign brmerge40_demorgan_i_15_fu_2740_p2 = (tmp_406_reg_3946 & deleted_ones_6_fu_2706_p3);

assign brmerge40_demorgan_i_16_fu_2837_p2 = (tmp_411_reg_3983 & deleted_ones_7_fu_2803_p3);

assign brmerge40_demorgan_i_17_fu_2255_p2 = (tmp_381_reg_3761 & deleted_ones_1_fu_2221_p3);

assign brmerge40_demorgan_i_fu_2158_p2 = (tmp_376_reg_3724 & deleted_ones_fu_2124_p3);

assign brmerge_i_i_1_fu_2239_p2 = (tmp_381_reg_3761 | p_not_i_i_1_fu_2233_p2);

assign brmerge_i_i_2_fu_2336_p2 = (tmp_386_reg_3798 | p_not_i_i_2_fu_2330_p2);

assign brmerge_i_i_3_fu_2433_p2 = (tmp_391_reg_3835 | p_not_i_i_3_fu_2427_p2);

assign brmerge_i_i_4_fu_2530_p2 = (tmp_396_reg_3872 | p_not_i_i_4_fu_2524_p2);

assign brmerge_i_i_5_fu_2627_p2 = (tmp_401_reg_3909 | p_not_i_i_5_fu_2621_p2);

assign brmerge_i_i_6_fu_2724_p2 = (tmp_406_reg_3946 | p_not_i_i_6_fu_2718_p2);

assign brmerge_i_i_7_fu_2821_p2 = (tmp_411_reg_3983 | p_not_i_i_7_fu_2815_p2);

assign brmerge_i_i_fu_2142_p2 = (tmp_376_reg_3724 | p_not_i_i_fu_2136_p2);

assign brmerge_i_i_i_1_fu_2277_p2 = (underflow_1_fu_2272_p2 | overflow_1_fu_2249_p2);

assign brmerge_i_i_i_2_fu_2374_p2 = (underflow_2_fu_2369_p2 | overflow_2_fu_2346_p2);

assign brmerge_i_i_i_3_fu_2471_p2 = (underflow_3_fu_2466_p2 | overflow_3_fu_2443_p2);

assign brmerge_i_i_i_4_fu_2568_p2 = (underflow_4_fu_2563_p2 | overflow_4_fu_2540_p2);

assign brmerge_i_i_i_5_fu_2665_p2 = (underflow_5_fu_2660_p2 | overflow_5_fu_2637_p2);

assign brmerge_i_i_i_6_fu_2762_p2 = (underflow_6_fu_2757_p2 | overflow_6_fu_2734_p2);

assign brmerge_i_i_i_7_fu_2859_p2 = (underflow_7_fu_2854_p2 | overflow_7_fu_2831_p2);

assign brmerge_i_i_i_fu_2180_p2 = (underflow_fu_2175_p2 | overflow_fu_2152_p2);

assign carry_10_1_fu_1587_p2 = (tmp_380_fu_1559_p3 & tmp_277_1_fu_1581_p2);

assign carry_10_2_fu_1668_p2 = (tmp_385_fu_1640_p3 & tmp_277_2_fu_1662_p2);

assign carry_10_3_fu_1749_p2 = (tmp_390_fu_1721_p3 & tmp_277_3_fu_1743_p2);

assign carry_10_4_fu_1830_p2 = (tmp_395_fu_1802_p3 & tmp_277_4_fu_1824_p2);

assign carry_10_5_fu_1911_p2 = (tmp_400_fu_1883_p3 & tmp_277_5_fu_1905_p2);

assign carry_10_6_fu_1992_p2 = (tmp_405_fu_1964_p3 & tmp_277_6_fu_1986_p2);

assign carry_10_7_fu_2073_p2 = (tmp_410_fu_2045_p3 & tmp_277_7_fu_2067_p2);

assign carry_s_fu_1506_p2 = (tmp_375_fu_1478_p3 & tmp_181_fu_1500_p2);

assign ci_4_fu_1032_p2 = (ci_reg_715 + 5'd1);

assign co_17_fu_858_p2 = (5'd1 + co_phi_fu_649_p4);

assign co_18_7_fu_1245_p2 = (co3_reg_726 + 5'd8);

assign co_18_fu_3169_p2 = (5'd1 + co4_phi_fu_752_p4);

assign conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_reg_3438;

assign conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_reg_3473;

assign conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_reg_3463;

assign conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_reg_3458;

assign conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_reg_3443;

assign conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_reg_3468;

assign conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_reg_3453;

assign conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_reg_3448;

assign deleted_ones_1_fu_2221_p3 = ((carry_10_1_reg_3767[0:0] === 1'b1) ? p_41_i_i_1_fu_2216_p2 : Range1_all_ones_1_fu_2193_p2);

assign deleted_ones_2_fu_2318_p3 = ((carry_10_2_reg_3804[0:0] === 1'b1) ? p_41_i_i_2_fu_2313_p2 : Range1_all_ones_2_fu_2290_p2);

assign deleted_ones_3_fu_2415_p3 = ((carry_10_3_reg_3841[0:0] === 1'b1) ? p_41_i_i_3_fu_2410_p2 : Range1_all_ones_3_fu_2387_p2);

assign deleted_ones_4_fu_2512_p3 = ((carry_10_4_reg_3878[0:0] === 1'b1) ? p_41_i_i_4_fu_2507_p2 : Range1_all_ones_4_fu_2484_p2);

assign deleted_ones_5_fu_2609_p3 = ((carry_10_5_reg_3915[0:0] === 1'b1) ? p_41_i_i_5_fu_2604_p2 : Range1_all_ones_5_fu_2581_p2);

assign deleted_ones_6_fu_2706_p3 = ((carry_10_6_reg_3952[0:0] === 1'b1) ? p_41_i_i_6_fu_2701_p2 : Range1_all_ones_6_fu_2678_p2);

assign deleted_ones_7_fu_2803_p3 = ((carry_10_7_reg_3989[0:0] === 1'b1) ? p_41_i_i_7_fu_2798_p2 : Range1_all_ones_7_fu_2775_p2);

assign deleted_ones_fu_2124_p3 = ((carry_s_reg_3730[0:0] === 1'b1) ? p_41_i_i_fu_2119_p2 : Range1_all_ones_fu_2096_p2);

assign deleted_zeros_1_fu_2203_p3 = ((carry_10_1_reg_3767[0:0] === 1'b1) ? Range1_all_ones_1_fu_2193_p2 : Range1_all_zeros_1_fu_2198_p2);

assign deleted_zeros_2_fu_2300_p3 = ((carry_10_2_reg_3804[0:0] === 1'b1) ? Range1_all_ones_2_fu_2290_p2 : Range1_all_zeros_2_fu_2295_p2);

assign deleted_zeros_3_fu_2397_p3 = ((carry_10_3_reg_3841[0:0] === 1'b1) ? Range1_all_ones_3_fu_2387_p2 : Range1_all_zeros_3_fu_2392_p2);

assign deleted_zeros_4_fu_2494_p3 = ((carry_10_4_reg_3878[0:0] === 1'b1) ? Range1_all_ones_4_fu_2484_p2 : Range1_all_zeros_4_fu_2489_p2);

assign deleted_zeros_5_fu_2591_p3 = ((carry_10_5_reg_3915[0:0] === 1'b1) ? Range1_all_ones_5_fu_2581_p2 : Range1_all_zeros_5_fu_2586_p2);

assign deleted_zeros_6_fu_2688_p3 = ((carry_10_6_reg_3952[0:0] === 1'b1) ? Range1_all_ones_6_fu_2678_p2 : Range1_all_zeros_6_fu_2683_p2);

assign deleted_zeros_7_fu_2785_p3 = ((carry_10_7_reg_3989[0:0] === 1'b1) ? Range1_all_ones_7_fu_2775_p2 : Range1_all_zeros_7_fu_2780_p2);

assign deleted_zeros_fu_2106_p3 = ((carry_s_reg_3730[0:0] === 1'b1) ? Range1_all_ones_fu_2096_p2 : Range1_all_zeros_fu_2101_p2);

assign exitcond10_fu_1140_p2 = ((co3_reg_726 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond11_fu_3129_p2 = ((w6_phi_fu_787_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond23_mid_fu_824_p2 = (exitcond_fu_818_p2 & not_exitcond_flatten_fu_812_p2);

assign exitcond7_fu_1000_p2 = ((h1_reg_691 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond8_fu_1010_p2 = ((w2_reg_703 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond9_fu_1026_p2 = ((ci_reg_715 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_flatten5_fu_806_p2 = ((indvar_flatten_reg_657 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_3105_p2 = ((indvar_flatten2_reg_737 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_3117_p2 = ((indvar_flatten3_reg_760 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_794_p2 = ((indvar_flatten1_reg_634 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_fu_818_p2 = ((w_phi_fu_684_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3135_p2 = (exitcond11_fu_3129_p2 & not_exitcond_flatten_8_fu_3123_p2);

assign h5_mid_fu_3175_p3 = ((exitcond_flatten7_reg_4211[0:0] === 1'b1) ? 6'd1 : h5_phi_fu_775_p4);

assign h_15_fu_927_p2 = (6'd1 + h_mid_fu_864_p3);

assign h_5_fu_3233_p2 = (6'd1 + h5_mid_fu_3175_p3);

assign h_6_fu_1020_p2 = (h1_reg_691 + 6'd1);

assign h_mid_fu_864_p3 = ((exitcond_flatten5_reg_3344[0:0] === 1'b1) ? 6'd1 : h_phi_fu_672_p4);

assign indvar_flatten21_op_fu_3155_p2 = (indvar_flatten3_reg_760 + 12'd1);

assign indvar_flatten_next1_1_fu_3161_p3 = ((exitcond_flatten7_fu_3117_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten21_op_fu_3155_p2);

assign indvar_flatten_next1_2_fu_3111_p2 = (indvar_flatten2_reg_737 + 15'd1);

assign indvar_flatten_next1_fu_800_p2 = (indvar_flatten1_reg_634 + 15'd1);

assign indvar_flatten_next_fu_850_p3 = ((exitcond_flatten5_fu_806_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten_op_fu_844_p2);

assign indvar_flatten_op_fu_844_p2 = (indvar_flatten_reg_657 + 12'd1);

assign newIndex1_mid2_v_fu_3193_p4 = {{arrayNo5_mid2_v_fu_3182_p3[4:3]}};

assign newIndex3_fu_1146_p4 = {{co3_reg_726[4:3]}};

assign newIndex8_mid2_v_fu_887_p4 = {{tmp_mid2_v_fu_871_p3[4:3]}};

assign newIndex_fu_1046_p4 = {{ci_reg_715[4:3]}};

assign not_exitcond_flatten_8_fu_3123_p2 = (exitcond_flatten7_fu_3117_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_812_p2 = (exitcond_flatten5_fu_806_p2 ^ 1'd1);

assign overflow_1_fu_2249_p2 = (brmerge_i_i_1_fu_2239_p2 & tmp_282_1_fu_2244_p2);

assign overflow_2_fu_2346_p2 = (brmerge_i_i_2_fu_2336_p2 & tmp_282_2_fu_2341_p2);

assign overflow_3_fu_2443_p2 = (brmerge_i_i_3_fu_2433_p2 & tmp_282_3_fu_2438_p2);

assign overflow_4_fu_2540_p2 = (brmerge_i_i_4_fu_2530_p2 & tmp_282_4_fu_2535_p2);

assign overflow_5_fu_2637_p2 = (brmerge_i_i_5_fu_2627_p2 & tmp_282_5_fu_2632_p2);

assign overflow_6_fu_2734_p2 = (brmerge_i_i_6_fu_2724_p2 & tmp_282_6_fu_2729_p2);

assign overflow_7_fu_2831_p2 = (brmerge_i_i_7_fu_2821_p2 & tmp_282_7_fu_2826_p2);

assign overflow_fu_2152_p2 = (brmerge_i_i_fu_2142_p2 & tmp_183_fu_2147_p2);

assign p_38_i_i_1_fu_2228_p2 = (carry_10_1_reg_3767 & Range1_all_ones_1_fu_2193_p2);

assign p_38_i_i_2_fu_2325_p2 = (carry_10_2_reg_3804 & Range1_all_ones_2_fu_2290_p2);

assign p_38_i_i_3_fu_2422_p2 = (carry_10_3_reg_3841 & Range1_all_ones_3_fu_2387_p2);

assign p_38_i_i_4_fu_2519_p2 = (carry_10_4_reg_3878 & Range1_all_ones_4_fu_2484_p2);

assign p_38_i_i_5_fu_2616_p2 = (carry_10_5_reg_3915 & Range1_all_ones_5_fu_2581_p2);

assign p_38_i_i_6_fu_2713_p2 = (carry_10_6_reg_3952 & Range1_all_ones_6_fu_2678_p2);

assign p_38_i_i_7_fu_2810_p2 = (carry_10_7_reg_3989 & Range1_all_ones_7_fu_2775_p2);

assign p_38_i_i_fu_2131_p2 = (carry_s_reg_3730 & Range1_all_ones_fu_2096_p2);

assign p_41_i_i_1_fu_2216_p2 = (tmp_378_reg_3748 & tmp_280_1_fu_2210_p2);

assign p_41_i_i_2_fu_2313_p2 = (tmp_383_reg_3785 & tmp_280_2_fu_2307_p2);

assign p_41_i_i_3_fu_2410_p2 = (tmp_388_reg_3822 & tmp_280_3_fu_2404_p2);

assign p_41_i_i_4_fu_2507_p2 = (tmp_393_reg_3859 & tmp_280_4_fu_2501_p2);

assign p_41_i_i_5_fu_2604_p2 = (tmp_398_reg_3896 & tmp_280_5_fu_2598_p2);

assign p_41_i_i_6_fu_2701_p2 = (tmp_403_reg_3933 & tmp_280_6_fu_2695_p2);

assign p_41_i_i_7_fu_2798_p2 = (tmp_408_reg_3970 & tmp_280_7_fu_2792_p2);

assign p_41_i_i_fu_2119_p2 = (tmp_373_reg_3711 & tmp_182_fu_2113_p2);

assign p_Val2_1_fu_1452_p2 = ($signed(tmp_203_cast_fu_1448_p1) + $signed(p_Val2_s_reg_3586));

assign p_Val2_2_fu_1465_p4 = {{p_Val2_1_fu_1452_p2[13:6]}};

assign p_Val2_3_fu_1486_p2 = (p_Val2_2_fu_1465_p4 + tmp_180_fu_1475_p1);

assign p_Val2_61_1_fu_1319_p0 = weight_1_V_q0;

assign p_Val2_61_1_fu_1319_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_1_fu_1319_p2 = ($signed(p_Val2_61_1_fu_1319_p0) * $signed(p_Val2_61_1_fu_1319_p1));

assign p_Val2_61_2_fu_1337_p0 = weight_2_V_q0;

assign p_Val2_61_2_fu_1337_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_2_fu_1337_p2 = ($signed(p_Val2_61_2_fu_1337_p0) * $signed(p_Val2_61_2_fu_1337_p1));

assign p_Val2_61_3_fu_1355_p0 = weight_3_V_q0;

assign p_Val2_61_3_fu_1355_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_3_fu_1355_p2 = ($signed(p_Val2_61_3_fu_1355_p0) * $signed(p_Val2_61_3_fu_1355_p1));

assign p_Val2_61_4_fu_1373_p0 = weight_4_V_q0;

assign p_Val2_61_4_fu_1373_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_4_fu_1373_p2 = ($signed(p_Val2_61_4_fu_1373_p0) * $signed(p_Val2_61_4_fu_1373_p1));

assign p_Val2_61_5_fu_1391_p0 = weight_5_V_q0;

assign p_Val2_61_5_fu_1391_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_5_fu_1391_p2 = ($signed(p_Val2_61_5_fu_1391_p0) * $signed(p_Val2_61_5_fu_1391_p1));

assign p_Val2_61_6_fu_1409_p0 = weight_6_V_q0;

assign p_Val2_61_6_fu_1409_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_6_fu_1409_p2 = ($signed(p_Val2_61_6_fu_1409_p0) * $signed(p_Val2_61_6_fu_1409_p1));

assign p_Val2_61_7_fu_1427_p0 = weight_7_V_q0;

assign p_Val2_61_7_fu_1427_p1 = OP2_V_fu_1298_p1;

assign p_Val2_61_7_fu_1427_p2 = ($signed(p_Val2_61_7_fu_1427_p0) * $signed(p_Val2_61_7_fu_1427_p1));

assign p_Val2_62_1_fu_1533_p2 = ($signed(tmp_269_1_cast_fu_1529_p1) + $signed(p_Val2_61_1_reg_3601));

assign p_Val2_62_2_fu_1614_p2 = ($signed(tmp_269_2_cast_fu_1610_p1) + $signed(p_Val2_61_2_reg_3616));

assign p_Val2_62_3_fu_1695_p2 = ($signed(tmp_269_3_cast_fu_1691_p1) + $signed(p_Val2_61_3_reg_3631));

assign p_Val2_62_4_fu_1776_p2 = ($signed(tmp_269_4_cast_fu_1772_p1) + $signed(p_Val2_61_4_reg_3646));

assign p_Val2_62_5_fu_1857_p2 = ($signed(tmp_269_5_cast_fu_1853_p1) + $signed(p_Val2_61_5_reg_3661));

assign p_Val2_62_6_fu_1938_p2 = ($signed(tmp_269_6_cast_fu_1934_p1) + $signed(p_Val2_61_6_reg_3676));

assign p_Val2_62_7_fu_2019_p2 = ($signed(tmp_269_7_cast_fu_2015_p1) + $signed(p_Val2_61_7_reg_3691));

assign p_Val2_63_1_fu_1546_p4 = {{p_Val2_62_1_fu_1533_p2[13:6]}};

assign p_Val2_63_2_fu_1627_p4 = {{p_Val2_62_2_fu_1614_p2[13:6]}};

assign p_Val2_63_3_fu_1708_p4 = {{p_Val2_62_3_fu_1695_p2[13:6]}};

assign p_Val2_63_4_fu_1789_p4 = {{p_Val2_62_4_fu_1776_p2[13:6]}};

assign p_Val2_63_5_fu_1870_p4 = {{p_Val2_62_5_fu_1857_p2[13:6]}};

assign p_Val2_63_6_fu_1951_p4 = {{p_Val2_62_6_fu_1938_p2[13:6]}};

assign p_Val2_63_7_fu_2032_p4 = {{p_Val2_62_7_fu_2019_p2[13:6]}};

assign p_Val2_64_1_113_fu_2910_p3 = ((underflow_1_reg_4042[0:0] === 1'b1) ? 8'd128 : p_Val2_64_1_reg_3755);

assign p_Val2_64_1_fu_1567_p2 = (p_Val2_63_1_fu_1546_p4 + tmp_273_1_fu_1556_p1);

assign p_Val2_64_2_114_fu_2940_p3 = ((underflow_2_reg_4067[0:0] === 1'b1) ? 8'd128 : p_Val2_64_2_reg_3792);

assign p_Val2_64_2_fu_1648_p2 = (p_Val2_63_2_fu_1627_p4 + tmp_273_2_fu_1637_p1);

assign p_Val2_64_3_115_fu_2970_p3 = ((underflow_3_reg_4092[0:0] === 1'b1) ? 8'd128 : p_Val2_64_3_reg_3829);

assign p_Val2_64_3_fu_1729_p2 = (p_Val2_63_3_fu_1708_p4 + tmp_273_3_fu_1718_p1);

assign p_Val2_64_4_116_fu_3000_p3 = ((underflow_4_reg_4117[0:0] === 1'b1) ? 8'd128 : p_Val2_64_4_reg_3866);

assign p_Val2_64_4_fu_1810_p2 = (p_Val2_63_4_fu_1789_p4 + tmp_273_4_fu_1799_p1);

assign p_Val2_64_5_117_fu_3030_p3 = ((underflow_5_reg_4142[0:0] === 1'b1) ? 8'd128 : p_Val2_64_5_reg_3903);

assign p_Val2_64_5_fu_1891_p2 = (p_Val2_63_5_fu_1870_p4 + tmp_273_5_fu_1880_p1);

assign p_Val2_64_6_118_fu_3060_p3 = ((underflow_6_reg_4167[0:0] === 1'b1) ? 8'd128 : p_Val2_64_6_reg_3940);

assign p_Val2_64_6_fu_1972_p2 = (p_Val2_63_6_fu_1951_p4 + tmp_273_6_fu_1961_p1);

assign p_Val2_64_7_119_fu_3090_p3 = ((underflow_7_reg_4192[0:0] === 1'b1) ? 8'd128 : p_Val2_64_7_reg_3977);

assign p_Val2_64_7_fu_2053_p2 = (p_Val2_63_7_fu_2032_p4 + tmp_273_7_fu_2042_p1);

assign p_Val2_64_mux_1_fu_2904_p3 = ((brmerge_i_i_i_1_reg_4047[0:0] === 1'b1) ? 8'd127 : p_Val2_64_1_reg_3755);

assign p_Val2_64_mux_2_fu_2934_p3 = ((brmerge_i_i_i_2_reg_4072[0:0] === 1'b1) ? 8'd127 : p_Val2_64_2_reg_3792);

assign p_Val2_64_mux_3_fu_2964_p3 = ((brmerge_i_i_i_3_reg_4097[0:0] === 1'b1) ? 8'd127 : p_Val2_64_3_reg_3829);

assign p_Val2_64_mux_4_fu_2994_p3 = ((brmerge_i_i_i_4_reg_4122[0:0] === 1'b1) ? 8'd127 : p_Val2_64_4_reg_3866);

assign p_Val2_64_mux_5_fu_3024_p3 = ((brmerge_i_i_i_5_reg_4147[0:0] === 1'b1) ? 8'd127 : p_Val2_64_5_reg_3903);

assign p_Val2_64_mux_6_fu_3054_p3 = ((brmerge_i_i_i_6_reg_4172[0:0] === 1'b1) ? 8'd127 : p_Val2_64_6_reg_3940);

assign p_Val2_64_mux_7_fu_3084_p3 = ((brmerge_i_i_i_7_reg_4197[0:0] === 1'b1) ? 8'd127 : p_Val2_64_7_reg_3977);

assign p_Val2_64_mux_fu_2874_p3 = ((brmerge_i_i_i_reg_4022[0:0] === 1'b1) ? 8'd127 : p_Val2_3_reg_3718);

assign p_Val2_s_112_fu_2880_p3 = ((underflow_reg_4017[0:0] === 1'b1) ? 8'd128 : p_Val2_3_reg_3718);

assign p_Val2_s_fu_1301_p0 = weight_0_V_q0;

assign p_Val2_s_fu_1301_p1 = OP2_V_fu_1298_p1;

assign p_Val2_s_fu_1301_p2 = ($signed(p_Val2_s_fu_1301_p0) * $signed(p_Val2_s_fu_1301_p1));

assign p_not_i_i_1_fu_2233_p2 = (deleted_zeros_1_fu_2203_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2330_p2 = (deleted_zeros_2_fu_2300_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2427_p2 = (deleted_zeros_3_fu_2397_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2524_p2 = (deleted_zeros_4_fu_2494_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2621_p2 = (deleted_zeros_5_fu_2591_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2718_p2 = (deleted_zeros_6_fu_2688_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2815_p2 = (deleted_zeros_7_fu_2785_p3 ^ 1'd1);

assign p_not_i_i_fu_2136_p2 = (deleted_zeros_fu_2106_p3 ^ 1'd1);

assign p_shl11_cast_fu_1199_p1 = tmp_295_fu_1191_p3;

assign p_shl12_cast_fu_1164_p1 = tmp_291_fu_1156_p3;

assign p_shl13_cast_fu_1176_p1 = tmp_292_fu_1168_p3;

assign p_shl14_cast_fu_3261_p3 = {{tmp_282_reg_4248}, {5'd0}};

assign p_shl15_cast_fu_3275_p1 = tmp_368_fu_3268_p3;

assign p_shl16_cast_fu_3211_p1 = tmp_278_fu_3203_p3;

assign p_shl17_cast_fu_3223_p1 = tmp_279_fu_3215_p3;

assign p_shl1_cast_fu_969_p1 = tmp_366_fu_962_p3;

assign p_shl2_cast_fu_905_p1 = tmp_fu_897_p3;

assign p_shl3_cast_fu_917_p1 = tmp_s_fu_909_p3;

assign p_shl4_cast_fu_1091_p3 = {{tmp_288_fu_1086_p2}, {5'd0}};

assign p_shl5_cast_fu_1107_p1 = tmp_371_fu_1099_p3;

assign p_shl6_cast_fu_1064_p1 = tmp_285_fu_1056_p3;

assign p_shl7_cast_fu_1076_p1 = tmp_286_fu_1068_p3;

assign p_shl8_cast_fu_1214_p3 = {{tmp_297_fu_1209_p2}, {5'd0}};

assign p_shl9_cast_fu_1230_p1 = tmp_372_fu_1222_p3;

assign p_shl_cast_fu_955_p3 = {{tmp_275_reg_3380}, {5'd0}};

assign this_assign_1_1_fu_2916_p3 = ((underflow_not_1_fu_2899_p2[0:0] === 1'b1) ? p_Val2_64_mux_1_fu_2904_p3 : p_Val2_64_1_113_fu_2910_p3);

assign this_assign_1_2_fu_2946_p3 = ((underflow_not_2_fu_2929_p2[0:0] === 1'b1) ? p_Val2_64_mux_2_fu_2934_p3 : p_Val2_64_2_114_fu_2940_p3);

assign this_assign_1_3_fu_2976_p3 = ((underflow_not_3_fu_2959_p2[0:0] === 1'b1) ? p_Val2_64_mux_3_fu_2964_p3 : p_Val2_64_3_115_fu_2970_p3);

assign this_assign_1_4_fu_3006_p3 = ((underflow_not_4_fu_2989_p2[0:0] === 1'b1) ? p_Val2_64_mux_4_fu_2994_p3 : p_Val2_64_4_116_fu_3000_p3);

assign this_assign_1_5_fu_3036_p3 = ((underflow_not_5_fu_3019_p2[0:0] === 1'b1) ? p_Val2_64_mux_5_fu_3024_p3 : p_Val2_64_5_117_fu_3030_p3);

assign this_assign_1_6_fu_3066_p3 = ((underflow_not_6_fu_3049_p2[0:0] === 1'b1) ? p_Val2_64_mux_6_fu_3054_p3 : p_Val2_64_6_118_fu_3060_p3);

assign this_assign_1_7_fu_3096_p3 = ((underflow_not_7_fu_3079_p2[0:0] === 1'b1) ? p_Val2_64_mux_7_fu_3084_p3 : p_Val2_64_7_119_fu_3090_p3);

assign this_assign_1_fu_2886_p3 = ((underflow_not_fu_2869_p2[0:0] === 1'b1) ? p_Val2_64_mux_fu_2874_p3 : p_Val2_s_112_fu_2880_p3);

assign tmp10_fu_2985_p2 = (brmerge40_demorgan_i_13_reg_4112 | tmp_282_4_reg_4107);

assign tmp11_demorgan_fu_2648_p2 = (p_38_i_i_5_fu_2616_p2 | brmerge40_demorgan_i_14_fu_2643_p2);

assign tmp11_fu_2654_p2 = (tmp11_demorgan_fu_2648_p2 ^ 1'd1);

assign tmp12_fu_3015_p2 = (brmerge40_demorgan_i_14_reg_4137 | tmp_282_5_reg_4132);

assign tmp13_demorgan_fu_2745_p2 = (p_38_i_i_6_fu_2713_p2 | brmerge40_demorgan_i_15_fu_2740_p2);

assign tmp13_fu_2751_p2 = (tmp13_demorgan_fu_2745_p2 ^ 1'd1);

assign tmp14_fu_3045_p2 = (brmerge40_demorgan_i_15_reg_4162 | tmp_282_6_reg_4157);

assign tmp15_demorgan_fu_2842_p2 = (p_38_i_i_7_fu_2810_p2 | brmerge40_demorgan_i_16_fu_2837_p2);

assign tmp15_fu_2848_p2 = (tmp15_demorgan_fu_2842_p2 ^ 1'd1);

assign tmp16_fu_3075_p2 = (brmerge40_demorgan_i_16_reg_4187 | tmp_282_7_reg_4182);

assign tmp1_demorgan_fu_2163_p2 = (p_38_i_i_fu_2131_p2 | brmerge40_demorgan_i_fu_2158_p2);

assign tmp1_fu_2169_p2 = (tmp1_demorgan_fu_2163_p2 ^ 1'd1);

assign tmp2_fu_2865_p2 = (brmerge40_demorgan_i_reg_4012 | tmp_183_reg_4007);

assign tmp3_demorgan_fu_2260_p2 = (p_38_i_i_1_fu_2228_p2 | brmerge40_demorgan_i_17_fu_2255_p2);

assign tmp3_fu_2266_p2 = (tmp3_demorgan_fu_2260_p2 ^ 1'd1);

assign tmp4_fu_2895_p2 = (brmerge40_demorgan_i_17_reg_4037 | tmp_282_1_reg_4032);

assign tmp5_demorgan_fu_2357_p2 = (p_38_i_i_2_fu_2325_p2 | brmerge40_demorgan_i_11_fu_2352_p2);

assign tmp5_fu_2363_p2 = (tmp5_demorgan_fu_2357_p2 ^ 1'd1);

assign tmp6_fu_2925_p2 = (brmerge40_demorgan_i_11_reg_4062 | tmp_282_2_reg_4057);

assign tmp7_demorgan_fu_2454_p2 = (p_38_i_i_3_fu_2422_p2 | brmerge40_demorgan_i_12_fu_2449_p2);

assign tmp7_fu_2460_p2 = (tmp7_demorgan_fu_2454_p2 ^ 1'd1);

assign tmp8_fu_2955_p2 = (brmerge40_demorgan_i_12_reg_4087 | tmp_282_3_reg_4082);

assign tmp9_demorgan_fu_2551_p2 = (p_38_i_i_4_fu_2519_p2 | brmerge40_demorgan_i_13_fu_2546_p2);

assign tmp9_fu_2557_p2 = (tmp9_demorgan_fu_2551_p2 ^ 1'd1);

assign tmp_172_mid2_cast_fu_940_p1 = tmp_172_mid2_fu_933_p3;

assign tmp_172_mid2_fu_933_p3 = ((exitcond23_mid_reg_3350[0:0] === 1'b1) ? h_15_fu_927_p2 : h_mid_fu_864_p3);

assign tmp_173_cast_fu_1016_p1 = w2_reg_703;

assign tmp_174_cast_fu_979_p1 = ap_reg_pp0_iter1_w_mid2_reg_3355;

assign tmp_175_mid2_cast_fu_3246_p1 = tmp_175_mid2_fu_3239_p3;

assign tmp_175_mid2_fu_3239_p3 = ((exitcond_mid_reg_4217[0:0] === 1'b1) ? h_5_fu_3233_p2 : h5_mid_fu_3175_p3);

assign tmp_176_cast_fu_1038_p1 = ci_reg_715;

assign tmp_177_cast_fu_3285_p1 = ap_reg_pp1_iter1_w6_mid2_reg_4222;

assign tmp_179_fu_1441_p3 = {{ShuffleConvs_0_Downs_24_reg_3591}, {6'd0}};

assign tmp_180_fu_1475_p1 = tmp_374_reg_3596;

assign tmp_181_fu_1500_p2 = (tmp_376_fu_1492_p3 ^ 1'd1);

assign tmp_182_fu_2113_p2 = (tmp_377_fu_2089_p3 ^ 1'd1);

assign tmp_183_fu_2147_p2 = (tmp_373_reg_3711 ^ 1'd1);

assign tmp_203_cast_fu_1448_p1 = $signed(tmp_179_fu_1441_p3);

assign tmp_269_1_cast_fu_1529_p1 = $signed(tmp_269_1_fu_1522_p3);

assign tmp_269_1_fu_1522_p3 = {{ShuffleConvs_0_Downs_25_reg_3606}, {6'd0}};

assign tmp_269_2_cast_fu_1610_p1 = $signed(tmp_269_2_fu_1603_p3);

assign tmp_269_2_fu_1603_p3 = {{ShuffleConvs_0_Downs_26_reg_3621}, {6'd0}};

assign tmp_269_3_cast_fu_1691_p1 = $signed(tmp_269_3_fu_1684_p3);

assign tmp_269_3_fu_1684_p3 = {{ShuffleConvs_0_Downs_27_reg_3636}, {6'd0}};

assign tmp_269_4_cast_fu_1772_p1 = $signed(tmp_269_4_fu_1765_p3);

assign tmp_269_4_fu_1765_p3 = {{ShuffleConvs_0_Downs_28_reg_3651}, {6'd0}};

assign tmp_269_5_cast_fu_1853_p1 = $signed(tmp_269_5_fu_1846_p3);

assign tmp_269_5_fu_1846_p3 = {{ShuffleConvs_0_Downs_29_reg_3666}, {6'd0}};

assign tmp_269_6_cast_fu_1934_p1 = $signed(tmp_269_6_fu_1927_p3);

assign tmp_269_6_fu_1927_p3 = {{ShuffleConvs_0_Downs_30_reg_3681}, {6'd0}};

assign tmp_269_7_cast_fu_2015_p1 = $signed(tmp_269_7_fu_2008_p3);

assign tmp_269_7_fu_2008_p3 = {{ShuffleConvs_0_Downs_31_reg_3696}, {6'd0}};

assign tmp_273_1_fu_1556_p1 = tmp_379_reg_3611;

assign tmp_273_2_fu_1637_p1 = tmp_384_reg_3626;

assign tmp_273_3_fu_1718_p1 = tmp_389_reg_3641;

assign tmp_273_4_fu_1799_p1 = tmp_394_reg_3656;

assign tmp_273_5_fu_1880_p1 = tmp_399_reg_3671;

assign tmp_273_6_fu_1961_p1 = tmp_404_reg_3686;

assign tmp_273_7_fu_2042_p1 = tmp_409_reg_3701;

assign tmp_273_fu_921_p2 = (p_shl3_cast_fu_917_p1 + p_shl2_cast_fu_905_p1);

assign tmp_274_fu_830_p2 = (exitcond23_mid_fu_824_p2 | exitcond_flatten5_fu_806_p2);

assign tmp_275_fu_944_p2 = (tmp_273_fu_921_p2 + tmp_172_mid2_cast_fu_940_p1);

assign tmp_276_fu_973_p2 = (p_shl1_cast_fu_969_p1 + p_shl_cast_fu_955_p3);

assign tmp_277_1_fu_1581_p2 = (tmp_381_fu_1573_p3 ^ 1'd1);

assign tmp_277_2_fu_1662_p2 = (tmp_386_fu_1654_p3 ^ 1'd1);

assign tmp_277_3_fu_1743_p2 = (tmp_391_fu_1735_p3 ^ 1'd1);

assign tmp_277_4_fu_1824_p2 = (tmp_396_fu_1816_p3 ^ 1'd1);

assign tmp_277_5_fu_1905_p2 = (tmp_401_fu_1897_p3 ^ 1'd1);

assign tmp_277_6_fu_1986_p2 = (tmp_406_fu_1978_p3 ^ 1'd1);

assign tmp_277_7_fu_2067_p2 = (tmp_411_fu_2059_p3 ^ 1'd1);

assign tmp_277_fu_982_p2 = (tmp_276_fu_973_p2 + tmp_174_cast_fu_979_p1);

assign tmp_278_fu_3203_p3 = {{newIndex1_mid2_v_fu_3193_p4}, {5'd0}};

assign tmp_279_fu_3215_p3 = {{newIndex1_mid2_v_fu_3193_p4}, {1'd0}};

assign tmp_280_1_fu_2210_p2 = (tmp_382_fu_2186_p3 ^ 1'd1);

assign tmp_280_2_fu_2307_p2 = (tmp_387_fu_2283_p3 ^ 1'd1);

assign tmp_280_3_fu_2404_p2 = (tmp_392_fu_2380_p3 ^ 1'd1);

assign tmp_280_4_fu_2501_p2 = (tmp_397_fu_2477_p3 ^ 1'd1);

assign tmp_280_5_fu_2598_p2 = (tmp_402_fu_2574_p3 ^ 1'd1);

assign tmp_280_6_fu_2695_p2 = (tmp_407_fu_2671_p3 ^ 1'd1);

assign tmp_280_7_fu_2792_p2 = (tmp_412_fu_2768_p3 ^ 1'd1);

assign tmp_280_fu_3227_p2 = (p_shl17_cast_fu_3223_p1 + p_shl16_cast_fu_3211_p1);

assign tmp_281_fu_3141_p2 = (exitcond_mid_fu_3135_p2 | exitcond_flatten7_fu_3117_p2);

assign tmp_282_1_fu_2244_p2 = (tmp_378_reg_3748 ^ 1'd1);

assign tmp_282_2_fu_2341_p2 = (tmp_383_reg_3785 ^ 1'd1);

assign tmp_282_3_fu_2438_p2 = (tmp_388_reg_3822 ^ 1'd1);

assign tmp_282_4_fu_2535_p2 = (tmp_393_reg_3859 ^ 1'd1);

assign tmp_282_5_fu_2632_p2 = (tmp_398_reg_3896 ^ 1'd1);

assign tmp_282_6_fu_2729_p2 = (tmp_403_reg_3933 ^ 1'd1);

assign tmp_282_7_fu_2826_p2 = (tmp_408_reg_3970 ^ 1'd1);

assign tmp_282_fu_3250_p2 = (tmp_280_fu_3227_p2 + tmp_175_mid2_cast_fu_3246_p1);

assign tmp_283_fu_3279_p2 = (p_shl15_cast_fu_3275_p1 + p_shl14_cast_fu_3261_p3);

assign tmp_284_fu_3288_p2 = (tmp_283_fu_3279_p2 + tmp_177_cast_fu_3285_p1);

assign tmp_285_fu_1056_p3 = {{newIndex_fu_1046_p4}, {5'd0}};

assign tmp_286_fu_1068_p3 = {{newIndex_fu_1046_p4}, {1'd0}};

assign tmp_287_fu_1080_p2 = (p_shl7_cast_fu_1076_p1 + p_shl6_cast_fu_1064_p1);

assign tmp_288_fu_1086_p2 = (tmp_287_fu_1080_p2 + tmp_cast_reg_3400);

assign tmp_289_fu_1111_p2 = (p_shl5_cast_fu_1107_p1 + p_shl4_cast_fu_1091_p3);

assign tmp_290_fu_1117_p2 = (tmp_289_fu_1111_p2 + tmp_173_cast_reg_3409);

assign tmp_291_fu_1156_p3 = {{newIndex3_fu_1146_p4}, {5'd0}};

assign tmp_292_fu_1168_p3 = {{newIndex3_fu_1146_p4}, {3'd0}};

assign tmp_293_fu_1180_p2 = (p_shl12_cast_fu_1164_p1 - p_shl13_cast_fu_1176_p1);

assign tmp_294_fu_1186_p2 = (tmp_176_cast_reg_3428 + tmp_293_fu_1180_p2);

assign tmp_295_fu_1191_p3 = {{newIndex3_fu_1146_p4}, {1'd0}};

assign tmp_296_fu_1203_p2 = (p_shl12_cast_fu_1164_p1 + p_shl11_cast_fu_1199_p1);

assign tmp_297_fu_1209_p2 = (tmp_cast_reg_3400 + tmp_296_fu_1203_p2);

assign tmp_298_fu_1234_p2 = (p_shl8_cast_fu_1214_p3 + p_shl9_cast_fu_1230_p1);

assign tmp_299_fu_1240_p2 = (tmp_173_cast_reg_3409 + tmp_298_fu_1234_p2);

assign tmp_313_cast_fu_988_p1 = tmp_277_fu_982_p2;

assign tmp_322_cast_fu_3294_p1 = tmp_284_fu_3288_p2;

assign tmp_330_cast_fu_1122_p1 = tmp_290_fu_1117_p2;

assign tmp_334_cast_fu_1251_p1 = $signed(tmp_294_reg_3486);

assign tmp_342_cast_fu_1262_p1 = tmp_299_reg_3491;

assign tmp_365_fu_883_p1 = tmp_mid2_v_fu_871_p3[2:0];

assign tmp_366_fu_962_p3 = {{tmp_275_reg_3380}, {1'd0}};

assign tmp_367_fu_3189_p1 = arrayNo5_mid2_v_fu_3182_p3[2:0];

assign tmp_368_fu_3268_p3 = {{tmp_282_reg_4248}, {1'd0}};

assign tmp_369_fu_3327_p3 = tmp_184_fu_3306_p10[32'd7];

assign tmp_370_fu_1042_p1 = ci_reg_715[2:0];

assign tmp_371_fu_1099_p3 = {{tmp_288_fu_1086_p2}, {1'd0}};

assign tmp_372_fu_1222_p3 = {{tmp_297_fu_1209_p2}, {1'd0}};

assign tmp_375_fu_1478_p3 = p_Val2_1_fu_1452_p2[32'd13];

assign tmp_376_fu_1492_p3 = p_Val2_3_fu_1486_p2[32'd7];

assign tmp_377_fu_2089_p3 = p_Val2_1_reg_3706[32'd14];

assign tmp_380_fu_1559_p3 = p_Val2_62_1_fu_1533_p2[32'd13];

assign tmp_381_fu_1573_p3 = p_Val2_64_1_fu_1567_p2[32'd7];

assign tmp_382_fu_2186_p3 = p_Val2_62_1_reg_3743[32'd14];

assign tmp_385_fu_1640_p3 = p_Val2_62_2_fu_1614_p2[32'd13];

assign tmp_386_fu_1654_p3 = p_Val2_64_2_fu_1648_p2[32'd7];

assign tmp_387_fu_2283_p3 = p_Val2_62_2_reg_3780[32'd14];

assign tmp_390_fu_1721_p3 = p_Val2_62_3_fu_1695_p2[32'd13];

assign tmp_391_fu_1735_p3 = p_Val2_64_3_fu_1729_p2[32'd7];

assign tmp_392_fu_2380_p3 = p_Val2_62_3_reg_3817[32'd14];

assign tmp_395_fu_1802_p3 = p_Val2_62_4_fu_1776_p2[32'd13];

assign tmp_396_fu_1816_p3 = p_Val2_64_4_fu_1810_p2[32'd7];

assign tmp_397_fu_2477_p3 = p_Val2_62_4_reg_3854[32'd14];

assign tmp_400_fu_1883_p3 = p_Val2_62_5_fu_1857_p2[32'd13];

assign tmp_401_fu_1897_p3 = p_Val2_64_5_fu_1891_p2[32'd7];

assign tmp_402_fu_2574_p3 = p_Val2_62_5_reg_3891[32'd14];

assign tmp_405_fu_1964_p3 = p_Val2_62_6_fu_1938_p2[32'd13];

assign tmp_406_fu_1978_p3 = p_Val2_64_6_fu_1972_p2[32'd7];

assign tmp_407_fu_2671_p3 = p_Val2_62_6_reg_3928[32'd14];

assign tmp_410_fu_2045_p3 = p_Val2_62_7_fu_2019_p2[32'd13];

assign tmp_411_fu_2059_p3 = p_Val2_64_7_fu_2053_p2[32'd7];

assign tmp_412_fu_2768_p3 = p_Val2_62_7_reg_3965[32'd14];

assign tmp_cast_fu_1006_p1 = h1_reg_691;

assign tmp_fu_897_p3 = {{newIndex8_mid2_v_fu_887_p4}, {5'd0}};

assign tmp_mid2_fu_878_p1 = tmp_mid2_v_fu_871_p3;

assign tmp_mid2_v_fu_871_p3 = ((exitcond_flatten5_reg_3344[0:0] === 1'b1) ? co_17_fu_858_p2 : co_phi_fu_649_p4);

assign tmp_s_fu_909_p3 = {{newIndex8_mid2_v_fu_887_p4}, {1'd0}};

assign underflow_1_fu_2272_p2 = (tmp_378_reg_3748 & tmp3_fu_2266_p2);

assign underflow_2_fu_2369_p2 = (tmp_383_reg_3785 & tmp5_fu_2363_p2);

assign underflow_3_fu_2466_p2 = (tmp_388_reg_3822 & tmp7_fu_2460_p2);

assign underflow_4_fu_2563_p2 = (tmp_393_reg_3859 & tmp9_fu_2557_p2);

assign underflow_5_fu_2660_p2 = (tmp_398_reg_3896 & tmp11_fu_2654_p2);

assign underflow_6_fu_2757_p2 = (tmp_403_reg_3933 & tmp13_fu_2751_p2);

assign underflow_7_fu_2854_p2 = (tmp_408_reg_3970 & tmp15_fu_2848_p2);

assign underflow_fu_2175_p2 = (tmp_373_reg_3711 & tmp1_fu_2169_p2);

assign underflow_not_1_fu_2899_p2 = (tmp4_fu_2895_p2 | p_38_i_i_1_reg_4027);

assign underflow_not_2_fu_2929_p2 = (tmp6_fu_2925_p2 | p_38_i_i_2_reg_4052);

assign underflow_not_3_fu_2959_p2 = (tmp8_fu_2955_p2 | p_38_i_i_3_reg_4077);

assign underflow_not_4_fu_2989_p2 = (tmp10_fu_2985_p2 | p_38_i_i_4_reg_4102);

assign underflow_not_5_fu_3019_p2 = (tmp12_fu_3015_p2 | p_38_i_i_5_reg_4127);

assign underflow_not_6_fu_3049_p2 = (tmp14_fu_3045_p2 | p_38_i_i_6_reg_4152);

assign underflow_not_7_fu_3079_p2 = (tmp16_fu_3075_p2 | p_38_i_i_7_reg_4177);

assign underflow_not_fu_2869_p2 = (tmp2_fu_2865_p2 | p_38_i_i_reg_4002);

assign w6_mid2_fu_3147_p3 = ((tmp_281_fu_3141_p2[0:0] === 1'b1) ? 6'd1 : w6_phi_fu_787_p4);

assign w_16_fu_950_p2 = (w_mid2_reg_3355 + 6'd1);

assign w_17_fu_1134_p2 = (w2_reg_703 + 6'd1);

assign w_18_fu_3256_p2 = (w6_mid2_reg_4222 + 6'd1);

assign w_mid2_fu_836_p3 = ((tmp_274_fu_830_p2[0:0] === 1'b1) ? 6'd1 : w_phi_fu_684_p4);

assign weight_0_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_1_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_2_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_3_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_4_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_5_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_6_V_address0 = tmp_334_cast_fu_1251_p1;

assign weight_7_V_address0 = tmp_334_cast_fu_1251_p1;

always @ (posedge ap_clk) begin
    tmp_cast_reg_3400[7:6] <= 2'b00;
    tmp_173_cast_reg_3409[12:6] <= 7'b0000000;
    tmp_176_cast_reg_3428[7:5] <= 3'b000;
end

endmodule //subconv_1x1_32_p
