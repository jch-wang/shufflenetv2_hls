// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_2_Downs_7_address0,
        ShuffleConvs_2_Downs_7_ce0,
        ShuffleConvs_2_Downs_7_we0,
        ShuffleConvs_2_Downs_7_d0,
        ShuffleConvs_2_Downs_7_q0,
        ShuffleConvs_2_Downs_7_address1,
        ShuffleConvs_2_Downs_7_ce1,
        ShuffleConvs_2_Downs_7_we1,
        ShuffleConvs_2_Downs_7_d1,
        ShuffleConvs_2_Downs_6_address0,
        ShuffleConvs_2_Downs_6_ce0,
        ShuffleConvs_2_Downs_6_we0,
        ShuffleConvs_2_Downs_6_d0,
        ShuffleConvs_2_Downs_6_q0,
        ShuffleConvs_2_Downs_6_address1,
        ShuffleConvs_2_Downs_6_ce1,
        ShuffleConvs_2_Downs_6_we1,
        ShuffleConvs_2_Downs_6_d1,
        ShuffleConvs_2_Downs_5_address0,
        ShuffleConvs_2_Downs_5_ce0,
        ShuffleConvs_2_Downs_5_we0,
        ShuffleConvs_2_Downs_5_d0,
        ShuffleConvs_2_Downs_5_q0,
        ShuffleConvs_2_Downs_5_address1,
        ShuffleConvs_2_Downs_5_ce1,
        ShuffleConvs_2_Downs_5_we1,
        ShuffleConvs_2_Downs_5_d1,
        ShuffleConvs_2_Downs_4_address0,
        ShuffleConvs_2_Downs_4_ce0,
        ShuffleConvs_2_Downs_4_we0,
        ShuffleConvs_2_Downs_4_d0,
        ShuffleConvs_2_Downs_4_q0,
        ShuffleConvs_2_Downs_4_address1,
        ShuffleConvs_2_Downs_4_ce1,
        ShuffleConvs_2_Downs_4_we1,
        ShuffleConvs_2_Downs_4_d1,
        ShuffleConvs_2_Downs_3_address0,
        ShuffleConvs_2_Downs_3_ce0,
        ShuffleConvs_2_Downs_3_we0,
        ShuffleConvs_2_Downs_3_d0,
        ShuffleConvs_2_Downs_3_q0,
        ShuffleConvs_2_Downs_3_address1,
        ShuffleConvs_2_Downs_3_ce1,
        ShuffleConvs_2_Downs_3_we1,
        ShuffleConvs_2_Downs_3_d1,
        ShuffleConvs_2_Downs_2_address0,
        ShuffleConvs_2_Downs_2_ce0,
        ShuffleConvs_2_Downs_2_we0,
        ShuffleConvs_2_Downs_2_d0,
        ShuffleConvs_2_Downs_2_q0,
        ShuffleConvs_2_Downs_2_address1,
        ShuffleConvs_2_Downs_2_ce1,
        ShuffleConvs_2_Downs_2_we1,
        ShuffleConvs_2_Downs_2_d1,
        ShuffleConvs_2_Downs_1_address0,
        ShuffleConvs_2_Downs_1_ce0,
        ShuffleConvs_2_Downs_1_we0,
        ShuffleConvs_2_Downs_1_d0,
        ShuffleConvs_2_Downs_1_q0,
        ShuffleConvs_2_Downs_1_address1,
        ShuffleConvs_2_Downs_1_ce1,
        ShuffleConvs_2_Downs_1_we1,
        ShuffleConvs_2_Downs_1_d1,
        ShuffleConvs_2_Downs_address0,
        ShuffleConvs_2_Downs_ce0,
        ShuffleConvs_2_Downs_we0,
        ShuffleConvs_2_Downs_d0,
        ShuffleConvs_2_Downs_q0,
        ShuffleConvs_2_Downs_address1,
        ShuffleConvs_2_Downs_ce1,
        ShuffleConvs_2_Downs_we1,
        ShuffleConvs_2_Downs_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state5 = 14'd4;
parameter    ap_ST_fsm_state6 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_state8 = 14'd32;
parameter    ap_ST_fsm_state9 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [10:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [10:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [10:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [10:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [10:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [10:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [10:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [10:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [10:0] ShuffleConvs_2_Downs_7_address0;
output   ShuffleConvs_2_Downs_7_ce0;
output   ShuffleConvs_2_Downs_7_we0;
output  [7:0] ShuffleConvs_2_Downs_7_d0;
input  [7:0] ShuffleConvs_2_Downs_7_q0;
output  [10:0] ShuffleConvs_2_Downs_7_address1;
output   ShuffleConvs_2_Downs_7_ce1;
output   ShuffleConvs_2_Downs_7_we1;
output  [7:0] ShuffleConvs_2_Downs_7_d1;
output  [10:0] ShuffleConvs_2_Downs_6_address0;
output   ShuffleConvs_2_Downs_6_ce0;
output   ShuffleConvs_2_Downs_6_we0;
output  [7:0] ShuffleConvs_2_Downs_6_d0;
input  [7:0] ShuffleConvs_2_Downs_6_q0;
output  [10:0] ShuffleConvs_2_Downs_6_address1;
output   ShuffleConvs_2_Downs_6_ce1;
output   ShuffleConvs_2_Downs_6_we1;
output  [7:0] ShuffleConvs_2_Downs_6_d1;
output  [10:0] ShuffleConvs_2_Downs_5_address0;
output   ShuffleConvs_2_Downs_5_ce0;
output   ShuffleConvs_2_Downs_5_we0;
output  [7:0] ShuffleConvs_2_Downs_5_d0;
input  [7:0] ShuffleConvs_2_Downs_5_q0;
output  [10:0] ShuffleConvs_2_Downs_5_address1;
output   ShuffleConvs_2_Downs_5_ce1;
output   ShuffleConvs_2_Downs_5_we1;
output  [7:0] ShuffleConvs_2_Downs_5_d1;
output  [10:0] ShuffleConvs_2_Downs_4_address0;
output   ShuffleConvs_2_Downs_4_ce0;
output   ShuffleConvs_2_Downs_4_we0;
output  [7:0] ShuffleConvs_2_Downs_4_d0;
input  [7:0] ShuffleConvs_2_Downs_4_q0;
output  [10:0] ShuffleConvs_2_Downs_4_address1;
output   ShuffleConvs_2_Downs_4_ce1;
output   ShuffleConvs_2_Downs_4_we1;
output  [7:0] ShuffleConvs_2_Downs_4_d1;
output  [10:0] ShuffleConvs_2_Downs_3_address0;
output   ShuffleConvs_2_Downs_3_ce0;
output   ShuffleConvs_2_Downs_3_we0;
output  [7:0] ShuffleConvs_2_Downs_3_d0;
input  [7:0] ShuffleConvs_2_Downs_3_q0;
output  [10:0] ShuffleConvs_2_Downs_3_address1;
output   ShuffleConvs_2_Downs_3_ce1;
output   ShuffleConvs_2_Downs_3_we1;
output  [7:0] ShuffleConvs_2_Downs_3_d1;
output  [10:0] ShuffleConvs_2_Downs_2_address0;
output   ShuffleConvs_2_Downs_2_ce0;
output   ShuffleConvs_2_Downs_2_we0;
output  [7:0] ShuffleConvs_2_Downs_2_d0;
input  [7:0] ShuffleConvs_2_Downs_2_q0;
output  [10:0] ShuffleConvs_2_Downs_2_address1;
output   ShuffleConvs_2_Downs_2_ce1;
output   ShuffleConvs_2_Downs_2_we1;
output  [7:0] ShuffleConvs_2_Downs_2_d1;
output  [10:0] ShuffleConvs_2_Downs_1_address0;
output   ShuffleConvs_2_Downs_1_ce0;
output   ShuffleConvs_2_Downs_1_we0;
output  [7:0] ShuffleConvs_2_Downs_1_d0;
input  [7:0] ShuffleConvs_2_Downs_1_q0;
output  [10:0] ShuffleConvs_2_Downs_1_address1;
output   ShuffleConvs_2_Downs_1_ce1;
output   ShuffleConvs_2_Downs_1_we1;
output  [7:0] ShuffleConvs_2_Downs_1_d1;
output  [10:0] ShuffleConvs_2_Downs_address0;
output   ShuffleConvs_2_Downs_ce0;
output   ShuffleConvs_2_Downs_we0;
output  [7:0] ShuffleConvs_2_Downs_d0;
input  [7:0] ShuffleConvs_2_Downs_q0;
output  [10:0] ShuffleConvs_2_Downs_address1;
output   ShuffleConvs_2_Downs_ce1;
output   ShuffleConvs_2_Downs_we1;
output  [7:0] ShuffleConvs_2_Downs_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg bias_V_ce0;
reg[10:0] ShuffleConvs_2_Downs_7_address0;
reg ShuffleConvs_2_Downs_7_ce0;
reg ShuffleConvs_2_Downs_7_we0;
reg[7:0] ShuffleConvs_2_Downs_7_d0;
reg ShuffleConvs_2_Downs_7_ce1;
reg ShuffleConvs_2_Downs_7_we1;
reg[10:0] ShuffleConvs_2_Downs_6_address0;
reg ShuffleConvs_2_Downs_6_ce0;
reg ShuffleConvs_2_Downs_6_we0;
reg[7:0] ShuffleConvs_2_Downs_6_d0;
reg ShuffleConvs_2_Downs_6_ce1;
reg ShuffleConvs_2_Downs_6_we1;
reg[10:0] ShuffleConvs_2_Downs_5_address0;
reg ShuffleConvs_2_Downs_5_ce0;
reg ShuffleConvs_2_Downs_5_we0;
reg[7:0] ShuffleConvs_2_Downs_5_d0;
reg ShuffleConvs_2_Downs_5_ce1;
reg ShuffleConvs_2_Downs_5_we1;
reg[10:0] ShuffleConvs_2_Downs_4_address0;
reg ShuffleConvs_2_Downs_4_ce0;
reg ShuffleConvs_2_Downs_4_we0;
reg[7:0] ShuffleConvs_2_Downs_4_d0;
reg ShuffleConvs_2_Downs_4_ce1;
reg ShuffleConvs_2_Downs_4_we1;
reg[10:0] ShuffleConvs_2_Downs_3_address0;
reg ShuffleConvs_2_Downs_3_ce0;
reg ShuffleConvs_2_Downs_3_we0;
reg[7:0] ShuffleConvs_2_Downs_3_d0;
reg ShuffleConvs_2_Downs_3_ce1;
reg ShuffleConvs_2_Downs_3_we1;
reg[10:0] ShuffleConvs_2_Downs_2_address0;
reg ShuffleConvs_2_Downs_2_ce0;
reg ShuffleConvs_2_Downs_2_we0;
reg[7:0] ShuffleConvs_2_Downs_2_d0;
reg ShuffleConvs_2_Downs_2_ce1;
reg ShuffleConvs_2_Downs_2_we1;
reg[10:0] ShuffleConvs_2_Downs_1_address0;
reg ShuffleConvs_2_Downs_1_ce0;
reg ShuffleConvs_2_Downs_1_we0;
reg[7:0] ShuffleConvs_2_Downs_1_d0;
reg ShuffleConvs_2_Downs_1_ce1;
reg ShuffleConvs_2_Downs_1_we1;
reg[10:0] ShuffleConvs_2_Downs_address0;
reg ShuffleConvs_2_Downs_ce0;
reg ShuffleConvs_2_Downs_we0;
reg[7:0] ShuffleConvs_2_Downs_d0;
reg ShuffleConvs_2_Downs_ce1;
reg ShuffleConvs_2_Downs_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten1_reg_551;
reg   [6:0] co_reg_562;
reg   [7:0] indvar_flatten_reg_574;
reg   [3:0] h_reg_585;
reg   [3:0] w_reg_597;
reg   [12:0] indvar_flatten2_reg_654;
reg   [6:0] co4_reg_665;
reg   [7:0] indvar_flatten3_reg_677;
reg   [3:0] h5_reg_688;
reg   [3:0] w6_reg_700;
wire   [0:0] exitcond_flatten1_fu_711_p2;
reg   [0:0] exitcond_flatten1_reg_3239;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten1_reg_3239;
wire   [12:0] indvar_flatten_next1_fu_717_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_723_p2;
reg   [0:0] exitcond_flatten_reg_3248;
wire   [0:0] exitcond5_mid_fu_741_p2;
reg   [0:0] exitcond5_mid_reg_3254;
wire   [3:0] w_mid2_fu_753_p3;
reg   [3:0] w_mid2_reg_3259;
reg   [3:0] ap_reg_pp0_iter1_w_mid2_reg_3259;
wire   [7:0] indvar_flatten_next_fu_767_p3;
wire   [6:0] tmp_mid2_v_fu_788_p3;
reg   [6:0] tmp_mid2_v_reg_3270;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] tmp_183_fu_800_p1;
reg   [2:0] tmp_183_reg_3275;
wire   [3:0] tmp_133_mid2_fu_850_p3;
reg   [3:0] tmp_133_mid2_reg_3279;
wire   [7:0] tmp_180_fu_861_p2;
reg   [7:0] tmp_180_reg_3284;
wire   [3:0] w_7_fu_867_p2;
wire   [0:0] exitcond1_fu_921_p2;
wire    ap_CS_fsm_state6;
wire   [7:0] tmp_cast1_fu_927_p1;
reg   [7:0] tmp_cast1_reg_3304;
wire   [10:0] tmp_cast_fu_931_p1;
reg   [10:0] tmp_cast_reg_3309;
wire   [11:0] tmp_121_cast1_fu_941_p1;
reg   [11:0] tmp_121_cast1_reg_3317;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond4_fu_935_p2;
wire   [14:0] tmp_121_cast_fu_945_p1;
reg   [14:0] tmp_121_cast_reg_3322;
wire   [3:0] h_7_fu_949_p2;
wire   [6:0] ci_1_fu_961_p2;
reg   [6:0] ci_1_reg_3335;
wire    ap_CS_fsm_state8;
wire   [11:0] tmp_122_cast_fu_967_p1;
reg   [11:0] tmp_122_cast_reg_3340;
wire   [0:0] exitcond7_fu_955_p2;
reg   [13:0] input_V_addr_reg_3345;
wire   [3:0] w_8_fu_1046_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond8_fu_1052_p2;
wire   [11:0] tmp_216_fu_1180_p2;
reg   [11:0] tmp_216_reg_3398;
wire   [6:0] co_9_7_fu_1185_p2;
reg   [6:0] co_9_7_reg_3403;
reg   [10:0] ShuffleConvs_2_Downs_31_reg_3408;
wire    ap_CS_fsm_state10;
reg   [10:0] ShuffleConvs_2_Downs_32_reg_3413;
reg   [10:0] ShuffleConvs_2_Downs_33_reg_3418;
reg   [10:0] ShuffleConvs_2_Downs_34_reg_3423;
reg   [10:0] ShuffleConvs_2_Downs_35_reg_3428;
reg   [10:0] ShuffleConvs_2_Downs_36_reg_3433;
reg   [10:0] ShuffleConvs_2_Downs_37_reg_3438;
reg   [10:0] ShuffleConvs_2_Downs_38_reg_3443;
reg   [7:0] weight_0_V_load_reg_3448;
reg   [7:0] input_V_load_reg_3453;
reg   [7:0] weight_1_V_load_reg_3458;
reg   [7:0] weight_2_V_load_reg_3463;
reg   [7:0] weight_3_V_load_reg_3468;
reg   [7:0] weight_4_V_load_reg_3473;
reg   [7:0] weight_5_V_load_reg_3478;
reg   [7:0] weight_6_V_load_reg_3483;
reg   [7:0] weight_7_V_load_reg_3488;
wire   [15:0] p_Val2_s_fu_1208_p2;
reg   [15:0] p_Val2_s_reg_3493;
wire    ap_CS_fsm_state11;
reg   [7:0] ShuffleConvs_2_Downs_39_reg_3498;
reg   [0:0] tmp_218_reg_3503;
wire   [15:0] p_Val2_49_1_fu_1225_p2;
reg   [15:0] p_Val2_49_1_reg_3508;
reg   [7:0] ShuffleConvs_2_Downs_40_reg_3513;
reg   [0:0] tmp_223_reg_3518;
wire   [15:0] p_Val2_49_2_fu_1242_p2;
reg   [15:0] p_Val2_49_2_reg_3523;
reg   [7:0] ShuffleConvs_2_Downs_41_reg_3528;
reg   [0:0] tmp_228_reg_3533;
wire   [15:0] p_Val2_49_3_fu_1259_p2;
reg   [15:0] p_Val2_49_3_reg_3538;
reg   [7:0] ShuffleConvs_2_Downs_42_reg_3543;
reg   [0:0] tmp_233_reg_3548;
wire   [15:0] p_Val2_49_4_fu_1276_p2;
reg   [15:0] p_Val2_49_4_reg_3553;
reg   [7:0] ShuffleConvs_2_Downs_43_reg_3558;
reg   [0:0] tmp_238_reg_3563;
wire   [15:0] p_Val2_49_5_fu_1293_p2;
reg   [15:0] p_Val2_49_5_reg_3568;
reg   [7:0] ShuffleConvs_2_Downs_44_reg_3573;
reg   [0:0] tmp_243_reg_3578;
wire   [15:0] p_Val2_49_6_fu_1310_p2;
reg   [15:0] p_Val2_49_6_reg_3583;
reg   [7:0] ShuffleConvs_2_Downs_45_reg_3588;
reg   [0:0] tmp_248_reg_3593;
wire   [15:0] p_Val2_49_7_fu_1327_p2;
reg   [15:0] p_Val2_49_7_reg_3598;
reg   [7:0] ShuffleConvs_2_Downs_46_reg_3603;
reg   [0:0] tmp_253_reg_3608;
wire   [15:0] p_Val2_1_fu_1352_p2;
reg   [15:0] p_Val2_1_reg_3613;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_217_reg_3618;
wire   [7:0] p_Val2_3_fu_1386_p2;
reg   [7:0] p_Val2_3_reg_3625;
wire   [0:0] tmp_220_fu_1392_p3;
reg   [0:0] tmp_220_reg_3631;
wire   [0:0] carry_7_fu_1406_p2;
reg   [0:0] carry_7_reg_3637;
reg   [1:0] tmp_126_reg_3644;
wire   [15:0] p_Val2_50_1_fu_1433_p2;
reg   [15:0] p_Val2_50_1_reg_3650;
reg   [0:0] tmp_222_reg_3655;
wire   [7:0] p_Val2_52_1_fu_1467_p2;
reg   [7:0] p_Val2_52_1_reg_3662;
wire   [0:0] tmp_225_fu_1473_p3;
reg   [0:0] tmp_225_reg_3668;
wire   [0:0] carry_7_1_fu_1487_p2;
reg   [0:0] carry_7_1_reg_3674;
reg   [1:0] tmp_129_reg_3681;
wire   [15:0] p_Val2_50_2_fu_1514_p2;
reg   [15:0] p_Val2_50_2_reg_3687;
reg   [0:0] tmp_227_reg_3692;
wire   [7:0] p_Val2_52_2_fu_1548_p2;
reg   [7:0] p_Val2_52_2_reg_3699;
wire   [0:0] tmp_230_fu_1554_p3;
reg   [0:0] tmp_230_reg_3705;
wire   [0:0] carry_7_2_fu_1568_p2;
reg   [0:0] carry_7_2_reg_3711;
reg   [1:0] tmp_130_reg_3718;
wire   [15:0] p_Val2_50_3_fu_1595_p2;
reg   [15:0] p_Val2_50_3_reg_3724;
reg   [0:0] tmp_232_reg_3729;
wire   [7:0] p_Val2_52_3_fu_1629_p2;
reg   [7:0] p_Val2_52_3_reg_3736;
wire   [0:0] tmp_235_fu_1635_p3;
reg   [0:0] tmp_235_reg_3742;
wire   [0:0] carry_7_3_fu_1649_p2;
reg   [0:0] carry_7_3_reg_3748;
reg   [1:0] tmp_131_reg_3755;
wire   [15:0] p_Val2_50_4_fu_1676_p2;
reg   [15:0] p_Val2_50_4_reg_3761;
reg   [0:0] tmp_237_reg_3766;
wire   [7:0] p_Val2_52_4_fu_1710_p2;
reg   [7:0] p_Val2_52_4_reg_3773;
wire   [0:0] tmp_240_fu_1716_p3;
reg   [0:0] tmp_240_reg_3779;
wire   [0:0] carry_7_4_fu_1730_p2;
reg   [0:0] carry_7_4_reg_3785;
reg   [1:0] tmp_132_reg_3792;
wire   [15:0] p_Val2_50_5_fu_1757_p2;
reg   [15:0] p_Val2_50_5_reg_3798;
reg   [0:0] tmp_242_reg_3803;
wire   [7:0] p_Val2_52_5_fu_1791_p2;
reg   [7:0] p_Val2_52_5_reg_3810;
wire   [0:0] tmp_245_fu_1797_p3;
reg   [0:0] tmp_245_reg_3816;
wire   [0:0] carry_7_5_fu_1811_p2;
reg   [0:0] carry_7_5_reg_3822;
reg   [1:0] tmp_133_reg_3829;
wire   [15:0] p_Val2_50_6_fu_1838_p2;
reg   [15:0] p_Val2_50_6_reg_3835;
reg   [0:0] tmp_247_reg_3840;
wire   [7:0] p_Val2_52_6_fu_1872_p2;
reg   [7:0] p_Val2_52_6_reg_3847;
wire   [0:0] tmp_250_fu_1878_p3;
reg   [0:0] tmp_250_reg_3853;
wire   [0:0] carry_7_6_fu_1892_p2;
reg   [0:0] carry_7_6_reg_3859;
reg   [1:0] tmp_134_reg_3866;
wire   [15:0] p_Val2_50_7_fu_1919_p2;
reg   [15:0] p_Val2_50_7_reg_3872;
reg   [0:0] tmp_252_reg_3877;
wire   [7:0] p_Val2_52_7_fu_1953_p2;
reg   [7:0] p_Val2_52_7_reg_3884;
wire   [0:0] tmp_255_fu_1959_p3;
reg   [0:0] tmp_255_reg_3890;
wire   [0:0] carry_7_7_fu_1973_p2;
reg   [0:0] carry_7_7_reg_3896;
reg   [1:0] tmp_135_reg_3903;
wire   [0:0] p_38_i_i_fu_2031_p2;
reg   [0:0] p_38_i_i_reg_3909;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_128_fu_2047_p2;
reg   [0:0] tmp_128_reg_3914;
wire   [0:0] brmerge40_demorgan_i_fu_2058_p2;
reg   [0:0] brmerge40_demorgan_i_reg_3919;
wire   [0:0] underflow_fu_2075_p2;
reg   [0:0] underflow_reg_3924;
wire   [0:0] brmerge_i_i_i_fu_2080_p2;
reg   [0:0] brmerge_i_i_i_reg_3929;
wire   [0:0] p_38_i_i_1_fu_2128_p2;
reg   [0:0] p_38_i_i_1_reg_3934;
wire   [0:0] tmp_210_1_fu_2144_p2;
reg   [0:0] tmp_210_1_reg_3939;
wire   [0:0] brmerge40_demorgan_i_1_fu_2155_p2;
reg   [0:0] brmerge40_demorgan_i_1_reg_3944;
wire   [0:0] underflow_1_fu_2172_p2;
reg   [0:0] underflow_1_reg_3949;
wire   [0:0] brmerge_i_i_i_1_fu_2177_p2;
reg   [0:0] brmerge_i_i_i_1_reg_3954;
wire   [0:0] p_38_i_i_2_fu_2225_p2;
reg   [0:0] p_38_i_i_2_reg_3959;
wire   [0:0] tmp_210_2_fu_2241_p2;
reg   [0:0] tmp_210_2_reg_3964;
wire   [0:0] brmerge40_demorgan_i_2_fu_2252_p2;
reg   [0:0] brmerge40_demorgan_i_2_reg_3969;
wire   [0:0] underflow_2_fu_2269_p2;
reg   [0:0] underflow_2_reg_3974;
wire   [0:0] brmerge_i_i_i_2_fu_2274_p2;
reg   [0:0] brmerge_i_i_i_2_reg_3979;
wire   [0:0] p_38_i_i_3_fu_2322_p2;
reg   [0:0] p_38_i_i_3_reg_3984;
wire   [0:0] tmp_210_3_fu_2338_p2;
reg   [0:0] tmp_210_3_reg_3989;
wire   [0:0] brmerge40_demorgan_i_3_fu_2349_p2;
reg   [0:0] brmerge40_demorgan_i_3_reg_3994;
wire   [0:0] underflow_3_fu_2366_p2;
reg   [0:0] underflow_3_reg_3999;
wire   [0:0] brmerge_i_i_i_3_fu_2371_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4004;
wire   [0:0] p_38_i_i_4_fu_2419_p2;
reg   [0:0] p_38_i_i_4_reg_4009;
wire   [0:0] tmp_210_4_fu_2435_p2;
reg   [0:0] tmp_210_4_reg_4014;
wire   [0:0] brmerge40_demorgan_i_4_fu_2446_p2;
reg   [0:0] brmerge40_demorgan_i_4_reg_4019;
wire   [0:0] underflow_4_fu_2463_p2;
reg   [0:0] underflow_4_reg_4024;
wire   [0:0] brmerge_i_i_i_4_fu_2468_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4029;
wire   [0:0] p_38_i_i_5_fu_2516_p2;
reg   [0:0] p_38_i_i_5_reg_4034;
wire   [0:0] tmp_210_5_fu_2532_p2;
reg   [0:0] tmp_210_5_reg_4039;
wire   [0:0] brmerge40_demorgan_i_5_fu_2543_p2;
reg   [0:0] brmerge40_demorgan_i_5_reg_4044;
wire   [0:0] underflow_5_fu_2560_p2;
reg   [0:0] underflow_5_reg_4049;
wire   [0:0] brmerge_i_i_i_5_fu_2565_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4054;
wire   [0:0] p_38_i_i_6_fu_2613_p2;
reg   [0:0] p_38_i_i_6_reg_4059;
wire   [0:0] tmp_210_6_fu_2629_p2;
reg   [0:0] tmp_210_6_reg_4064;
wire   [0:0] brmerge40_demorgan_i_6_fu_2640_p2;
reg   [0:0] brmerge40_demorgan_i_6_reg_4069;
wire   [0:0] underflow_6_fu_2657_p2;
reg   [0:0] underflow_6_reg_4074;
wire   [0:0] brmerge_i_i_i_6_fu_2662_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4079;
wire   [0:0] p_38_i_i_7_fu_2710_p2;
reg   [0:0] p_38_i_i_7_reg_4084;
wire   [0:0] tmp_210_7_fu_2726_p2;
reg   [0:0] tmp_210_7_reg_4089;
wire   [0:0] brmerge40_demorgan_i_7_fu_2737_p2;
reg   [0:0] brmerge40_demorgan_i_7_reg_4094;
wire   [0:0] underflow_7_fu_2754_p2;
reg   [0:0] underflow_7_reg_4099;
wire   [0:0] brmerge_i_i_i_7_fu_2759_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4104;
wire   [0:0] exitcond_flatten3_fu_3005_p2;
reg   [0:0] exitcond_flatten3_reg_4109;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten3_reg_4109;
wire   [12:0] indvar_flatten_next3_fu_3011_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten2_fu_3017_p2;
reg   [0:0] exitcond_flatten2_reg_4118;
wire   [0:0] exitcond_mid_fu_3035_p2;
reg   [0:0] exitcond_mid_reg_4124;
wire   [3:0] w6_mid2_fu_3047_p3;
reg   [3:0] w6_mid2_reg_4129;
reg   [3:0] ap_reg_pp1_iter1_w6_mid2_reg_4129;
wire   [7:0] indvar_flatten_next2_fu_3061_p3;
wire   [6:0] arrayNo_mid2_v_fu_3082_p3;
reg   [6:0] arrayNo_mid2_v_reg_4140;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] tmp_186_fu_3089_p1;
reg   [2:0] tmp_186_reg_4145;
reg   [2:0] ap_reg_pp1_iter2_tmp_186_reg_4145;
wire   [3:0] tmp_136_mid2_fu_3139_p3;
reg   [3:0] tmp_136_mid2_reg_4150;
wire   [7:0] tmp_191_fu_3150_p2;
reg   [7:0] tmp_191_reg_4155;
wire   [3:0] w_9_fu_3156_p2;
reg   [10:0] ShuffleConvs_2_Downs_47_reg_4166;
reg   [10:0] ShuffleConvs_2_Downs_48_reg_4172;
reg   [10:0] ShuffleConvs_2_Downs_49_reg_4178;
reg   [10:0] ShuffleConvs_2_Downs_50_reg_4184;
reg   [10:0] ShuffleConvs_2_Downs_51_reg_4190;
reg   [10:0] ShuffleConvs_2_Downs_52_reg_4196;
reg   [10:0] ShuffleConvs_2_Downs_53_reg_4202;
reg   [10:0] ShuffleConvs_2_Downs_54_reg_4208;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [6:0] co_phi_fu_566_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] h_phi_fu_589_p4;
reg   [3:0] w_phi_fu_601_p4;
reg   [3:0] h1_reg_608;
wire    ap_CS_fsm_state5;
reg   [3:0] w2_reg_620;
reg   [6:0] ci_reg_632;
reg   [6:0] co3_reg_643;
wire    ap_CS_fsm_state14;
reg   [6:0] co4_phi_fu_669_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] h5_phi_fu_692_p4;
reg   [3:0] w6_phi_fu_704_p4;
wire   [63:0] tmp_mid2_fu_795_p1;
wire   [63:0] tmp_202_cast_fu_909_p1;
wire   [63:0] tmp_219_cast_fu_1041_p1;
wire  signed [63:0] tmp_223_cast_fu_1103_p1;
wire   [63:0] tmp_231_cast_fu_1191_p1;
wire   [63:0] tmp_211_cast_fu_3198_p1;
wire   [7:0] this_assign_1_6_fu_2966_p3;
wire   [0:0] tmp_196_fu_3231_p3;
wire   [7:0] this_assign_1_5_fu_2936_p3;
wire   [7:0] this_assign_1_4_fu_2906_p3;
wire   [7:0] this_assign_1_3_fu_2876_p3;
wire   [7:0] this_assign_1_2_fu_2846_p3;
wire   [7:0] this_assign_1_1_fu_2816_p3;
wire   [7:0] this_assign_1_fu_2786_p3;
wire   [7:0] this_assign_1_7_fu_2996_p3;
wire   [0:0] exitcond_fu_735_p2;
wire   [0:0] not_exitcond_flatten_fu_729_p2;
wire   [0:0] tmp_179_fu_747_p2;
wire   [7:0] indvar_flatten_op_fu_761_p2;
wire   [6:0] co_7_fu_775_p2;
wire   [3:0] newIndex1_mid2_v_fu_804_p4;
wire   [6:0] tmp_fu_814_p3;
wire   [4:0] tmp_s_fu_826_p3;
wire   [7:0] p_shl3_cast_fu_834_p1;
wire   [7:0] p_shl2_cast_fu_822_p1;
wire   [3:0] h_mid_fu_781_p3;
wire   [3:0] h_8_fu_844_p2;
wire   [7:0] tmp_178_fu_838_p2;
wire   [7:0] tmp_133_mid2_cast_fu_857_p1;
wire   [10:0] tmp_184_fu_872_p3;
wire   [8:0] tmp_185_fu_883_p3;
wire   [11:0] p_shl1_cast_fu_890_p1;
wire   [11:0] p_shl_cast_fu_879_p1;
wire   [11:0] tmp_181_fu_894_p2;
wire   [11:0] tmp_116_cast_fu_900_p1;
wire   [11:0] tmp_182_fu_903_p2;
wire   [9:0] tmp_197_fu_971_p3;
wire   [7:0] tmp_198_fu_983_p3;
wire   [10:0] p_shl6_cast_fu_979_p1;
wire   [10:0] p_shl7_cast_fu_991_p1;
wire   [10:0] tmp_199_fu_995_p2;
wire   [10:0] tmp_200_fu_1001_p2;
wire   [13:0] tmp_201_fu_1006_p3;
wire   [11:0] tmp_202_fu_1018_p3;
wire   [14:0] p_shl4_cast_fu_1014_p1;
wire   [14:0] p_shl5_cast_fu_1026_p1;
wire   [14:0] tmp_203_fu_1030_p2;
wire   [14:0] tmp_204_fu_1036_p2;
wire   [3:0] newIndex4_fu_1058_p4;
wire   [10:0] tmp_205_fu_1068_p3;
wire   [8:0] tmp_206_fu_1080_p3;
wire   [11:0] p_shl12_cast_fu_1076_p1;
wire   [11:0] p_shl13_cast_fu_1088_p1;
wire   [11:0] tmp_207_fu_1092_p2;
wire   [11:0] tmp_208_fu_1098_p2;
wire   [6:0] tmp_209_fu_1115_p3;
wire   [4:0] tmp_210_fu_1127_p3;
wire   [7:0] p_shl10_cast_fu_1123_p1;
wire   [7:0] p_shl11_cast_fu_1135_p1;
wire   [7:0] tmp_211_fu_1139_p2;
wire   [7:0] tmp_212_fu_1145_p2;
wire   [10:0] tmp_213_fu_1150_p3;
wire   [8:0] tmp_214_fu_1162_p3;
wire   [11:0] p_shl8_cast_fu_1158_p1;
wire   [11:0] p_shl9_cast_fu_1170_p1;
wire   [11:0] tmp_215_fu_1174_p2;
wire  signed [7:0] p_Val2_s_fu_1208_p0;
wire  signed [7:0] p_Val2_s_fu_1208_p1;
wire  signed [15:0] OP2_V_fu_1205_p1;
wire  signed [7:0] p_Val2_49_1_fu_1225_p0;
wire  signed [7:0] p_Val2_49_1_fu_1225_p1;
wire  signed [7:0] p_Val2_49_2_fu_1242_p0;
wire  signed [7:0] p_Val2_49_2_fu_1242_p1;
wire  signed [7:0] p_Val2_49_3_fu_1259_p0;
wire  signed [7:0] p_Val2_49_3_fu_1259_p1;
wire  signed [7:0] p_Val2_49_4_fu_1276_p0;
wire  signed [7:0] p_Val2_49_4_fu_1276_p1;
wire  signed [7:0] p_Val2_49_5_fu_1293_p0;
wire  signed [7:0] p_Val2_49_5_fu_1293_p1;
wire  signed [7:0] p_Val2_49_6_fu_1310_p0;
wire  signed [7:0] p_Val2_49_6_fu_1310_p1;
wire  signed [7:0] p_Val2_49_7_fu_1327_p0;
wire  signed [7:0] p_Val2_49_7_fu_1327_p1;
wire   [13:0] tmp_123_fu_1341_p3;
wire  signed [15:0] tmp_176_cast_fu_1348_p1;
wire   [7:0] p_Val2_2_fu_1365_p4;
wire   [7:0] tmp_124_fu_1375_p1;
wire   [0:0] tmp_219_fu_1378_p3;
wire   [0:0] tmp_125_fu_1400_p2;
wire   [13:0] tmp_197_1_fu_1422_p3;
wire  signed [15:0] tmp_197_1_cast_fu_1429_p1;
wire   [7:0] p_Val2_51_1_fu_1446_p4;
wire   [7:0] tmp_201_1_fu_1456_p1;
wire   [0:0] tmp_224_fu_1459_p3;
wire   [0:0] tmp_205_1_fu_1481_p2;
wire   [13:0] tmp_197_2_fu_1503_p3;
wire  signed [15:0] tmp_197_2_cast_fu_1510_p1;
wire   [7:0] p_Val2_51_2_fu_1527_p4;
wire   [7:0] tmp_201_2_fu_1537_p1;
wire   [0:0] tmp_229_fu_1540_p3;
wire   [0:0] tmp_205_2_fu_1562_p2;
wire   [13:0] tmp_197_3_fu_1584_p3;
wire  signed [15:0] tmp_197_3_cast_fu_1591_p1;
wire   [7:0] p_Val2_51_3_fu_1608_p4;
wire   [7:0] tmp_201_3_fu_1618_p1;
wire   [0:0] tmp_234_fu_1621_p3;
wire   [0:0] tmp_205_3_fu_1643_p2;
wire   [13:0] tmp_197_4_fu_1665_p3;
wire  signed [15:0] tmp_197_4_cast_fu_1672_p1;
wire   [7:0] p_Val2_51_4_fu_1689_p4;
wire   [7:0] tmp_201_4_fu_1699_p1;
wire   [0:0] tmp_239_fu_1702_p3;
wire   [0:0] tmp_205_4_fu_1724_p2;
wire   [13:0] tmp_197_5_fu_1746_p3;
wire  signed [15:0] tmp_197_5_cast_fu_1753_p1;
wire   [7:0] p_Val2_51_5_fu_1770_p4;
wire   [7:0] tmp_201_5_fu_1780_p1;
wire   [0:0] tmp_244_fu_1783_p3;
wire   [0:0] tmp_205_5_fu_1805_p2;
wire   [13:0] tmp_197_6_fu_1827_p3;
wire  signed [15:0] tmp_197_6_cast_fu_1834_p1;
wire   [7:0] p_Val2_51_6_fu_1851_p4;
wire   [7:0] tmp_201_6_fu_1861_p1;
wire   [0:0] tmp_249_fu_1864_p3;
wire   [0:0] tmp_205_6_fu_1886_p2;
wire   [13:0] tmp_197_7_fu_1908_p3;
wire  signed [15:0] tmp_197_7_cast_fu_1915_p1;
wire   [7:0] p_Val2_51_7_fu_1932_p4;
wire   [7:0] tmp_201_7_fu_1942_p1;
wire   [0:0] tmp_254_fu_1945_p3;
wire   [0:0] tmp_205_7_fu_1967_p2;
wire   [0:0] Range1_all_ones_fu_1996_p2;
wire   [0:0] Range1_all_zeros_fu_2001_p2;
wire   [0:0] tmp_221_fu_1989_p3;
wire   [0:0] tmp_127_fu_2013_p2;
wire   [0:0] p_41_i_i_fu_2019_p2;
wire   [0:0] deleted_zeros_fu_2006_p3;
wire   [0:0] p_not_i_i_fu_2036_p2;
wire   [0:0] brmerge_i_i_fu_2042_p2;
wire   [0:0] deleted_ones_fu_2024_p3;
wire   [0:0] tmp1_demorgan_fu_2063_p2;
wire   [0:0] tmp1_fu_2069_p2;
wire   [0:0] overflow_fu_2052_p2;
wire   [0:0] Range1_all_ones_1_fu_2093_p2;
wire   [0:0] Range1_all_zeros_1_fu_2098_p2;
wire   [0:0] tmp_226_fu_2086_p3;
wire   [0:0] tmp_208_1_fu_2110_p2;
wire   [0:0] p_41_i_i_1_fu_2116_p2;
wire   [0:0] deleted_zeros_1_fu_2103_p3;
wire   [0:0] p_not_i_i_1_fu_2133_p2;
wire   [0:0] brmerge_i_i_1_fu_2139_p2;
wire   [0:0] deleted_ones_1_fu_2121_p3;
wire   [0:0] tmp3_demorgan_fu_2160_p2;
wire   [0:0] tmp3_fu_2166_p2;
wire   [0:0] overflow_1_fu_2149_p2;
wire   [0:0] Range1_all_ones_2_fu_2190_p2;
wire   [0:0] Range1_all_zeros_2_fu_2195_p2;
wire   [0:0] tmp_231_fu_2183_p3;
wire   [0:0] tmp_208_2_fu_2207_p2;
wire   [0:0] p_41_i_i_2_fu_2213_p2;
wire   [0:0] deleted_zeros_2_fu_2200_p3;
wire   [0:0] p_not_i_i_2_fu_2230_p2;
wire   [0:0] brmerge_i_i_2_fu_2236_p2;
wire   [0:0] deleted_ones_2_fu_2218_p3;
wire   [0:0] tmp5_demorgan_fu_2257_p2;
wire   [0:0] tmp5_fu_2263_p2;
wire   [0:0] overflow_2_fu_2246_p2;
wire   [0:0] Range1_all_ones_3_fu_2287_p2;
wire   [0:0] Range1_all_zeros_3_fu_2292_p2;
wire   [0:0] tmp_236_fu_2280_p3;
wire   [0:0] tmp_208_3_fu_2304_p2;
wire   [0:0] p_41_i_i_3_fu_2310_p2;
wire   [0:0] deleted_zeros_3_fu_2297_p3;
wire   [0:0] p_not_i_i_3_fu_2327_p2;
wire   [0:0] brmerge_i_i_3_fu_2333_p2;
wire   [0:0] deleted_ones_3_fu_2315_p3;
wire   [0:0] tmp7_demorgan_fu_2354_p2;
wire   [0:0] tmp7_fu_2360_p2;
wire   [0:0] overflow_3_fu_2343_p2;
wire   [0:0] Range1_all_ones_4_fu_2384_p2;
wire   [0:0] Range1_all_zeros_4_fu_2389_p2;
wire   [0:0] tmp_241_fu_2377_p3;
wire   [0:0] tmp_208_4_fu_2401_p2;
wire   [0:0] p_41_i_i_4_fu_2407_p2;
wire   [0:0] deleted_zeros_4_fu_2394_p3;
wire   [0:0] p_not_i_i_4_fu_2424_p2;
wire   [0:0] brmerge_i_i_4_fu_2430_p2;
wire   [0:0] deleted_ones_4_fu_2412_p3;
wire   [0:0] tmp9_demorgan_fu_2451_p2;
wire   [0:0] tmp9_fu_2457_p2;
wire   [0:0] overflow_4_fu_2440_p2;
wire   [0:0] Range1_all_ones_5_fu_2481_p2;
wire   [0:0] Range1_all_zeros_5_fu_2486_p2;
wire   [0:0] tmp_246_fu_2474_p3;
wire   [0:0] tmp_208_5_fu_2498_p2;
wire   [0:0] p_41_i_i_5_fu_2504_p2;
wire   [0:0] deleted_zeros_5_fu_2491_p3;
wire   [0:0] p_not_i_i_5_fu_2521_p2;
wire   [0:0] brmerge_i_i_5_fu_2527_p2;
wire   [0:0] deleted_ones_5_fu_2509_p3;
wire   [0:0] tmp11_demorgan_fu_2548_p2;
wire   [0:0] tmp11_fu_2554_p2;
wire   [0:0] overflow_5_fu_2537_p2;
wire   [0:0] Range1_all_ones_6_fu_2578_p2;
wire   [0:0] Range1_all_zeros_6_fu_2583_p2;
wire   [0:0] tmp_251_fu_2571_p3;
wire   [0:0] tmp_208_6_fu_2595_p2;
wire   [0:0] p_41_i_i_6_fu_2601_p2;
wire   [0:0] deleted_zeros_6_fu_2588_p3;
wire   [0:0] p_not_i_i_6_fu_2618_p2;
wire   [0:0] brmerge_i_i_6_fu_2624_p2;
wire   [0:0] deleted_ones_6_fu_2606_p3;
wire   [0:0] tmp13_demorgan_fu_2645_p2;
wire   [0:0] tmp13_fu_2651_p2;
wire   [0:0] overflow_6_fu_2634_p2;
wire   [0:0] Range1_all_ones_7_fu_2675_p2;
wire   [0:0] Range1_all_zeros_7_fu_2680_p2;
wire   [0:0] tmp_256_fu_2668_p3;
wire   [0:0] tmp_208_7_fu_2692_p2;
wire   [0:0] p_41_i_i_7_fu_2698_p2;
wire   [0:0] deleted_zeros_7_fu_2685_p3;
wire   [0:0] p_not_i_i_7_fu_2715_p2;
wire   [0:0] brmerge_i_i_7_fu_2721_p2;
wire   [0:0] deleted_ones_7_fu_2703_p3;
wire   [0:0] tmp15_demorgan_fu_2742_p2;
wire   [0:0] tmp15_fu_2748_p2;
wire   [0:0] overflow_7_fu_2731_p2;
wire   [0:0] tmp2_fu_2765_p2;
wire   [0:0] underflow_not_fu_2769_p2;
wire   [7:0] p_Val2_52_mux_fu_2774_p3;
wire   [7:0] p_Val2_s_67_fu_2780_p3;
wire   [0:0] tmp4_fu_2795_p2;
wire   [0:0] underflow_not_1_fu_2799_p2;
wire   [7:0] p_Val2_52_mux_1_fu_2804_p3;
wire   [7:0] p_Val2_52_1_68_fu_2810_p3;
wire   [0:0] tmp6_fu_2825_p2;
wire   [0:0] underflow_not_2_fu_2829_p2;
wire   [7:0] p_Val2_52_mux_2_fu_2834_p3;
wire   [7:0] p_Val2_52_2_69_fu_2840_p3;
wire   [0:0] tmp8_fu_2855_p2;
wire   [0:0] underflow_not_3_fu_2859_p2;
wire   [7:0] p_Val2_52_mux_3_fu_2864_p3;
wire   [7:0] p_Val2_52_3_70_fu_2870_p3;
wire   [0:0] tmp10_fu_2885_p2;
wire   [0:0] underflow_not_4_fu_2889_p2;
wire   [7:0] p_Val2_52_mux_4_fu_2894_p3;
wire   [7:0] p_Val2_52_4_71_fu_2900_p3;
wire   [0:0] tmp12_fu_2915_p2;
wire   [0:0] underflow_not_5_fu_2919_p2;
wire   [7:0] p_Val2_52_mux_5_fu_2924_p3;
wire   [7:0] p_Val2_52_5_72_fu_2930_p3;
wire   [0:0] tmp14_fu_2945_p2;
wire   [0:0] underflow_not_6_fu_2949_p2;
wire   [7:0] p_Val2_52_mux_6_fu_2954_p3;
wire   [7:0] p_Val2_52_6_73_fu_2960_p3;
wire   [0:0] tmp16_fu_2975_p2;
wire   [0:0] underflow_not_7_fu_2979_p2;
wire   [7:0] p_Val2_52_mux_7_fu_2984_p3;
wire   [7:0] p_Val2_52_7_74_fu_2990_p3;
wire   [0:0] exitcond2_fu_3029_p2;
wire   [0:0] not_exitcond_flatten_2_fu_3023_p2;
wire   [0:0] tmp_190_fu_3041_p2;
wire   [7:0] indvar_flatten21_op_fu_3055_p2;
wire   [6:0] co_8_fu_3069_p2;
wire   [3:0] newIndex3_mid2_v_fu_3093_p4;
wire   [6:0] tmp_187_fu_3103_p3;
wire   [4:0] tmp_188_fu_3115_p3;
wire   [7:0] p_shl17_cast_fu_3123_p1;
wire   [7:0] p_shl16_cast_fu_3111_p1;
wire   [3:0] h5_mid_fu_3075_p3;
wire   [3:0] h_9_fu_3133_p2;
wire   [7:0] tmp_189_fu_3127_p2;
wire   [7:0] tmp_136_mid2_cast_fu_3146_p1;
wire   [10:0] tmp_192_fu_3161_p3;
wire   [8:0] tmp_193_fu_3172_p3;
wire   [11:0] p_shl15_cast_fu_3179_p1;
wire   [11:0] p_shl14_cast_fu_3168_p1;
wire   [11:0] tmp_194_fu_3183_p2;
wire   [11:0] tmp_118_cast_fu_3189_p1;
wire   [11:0] tmp_195_fu_3192_p2;
wire   [7:0] tmp_119_fu_3210_p10;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U214(
    .din1(ShuffleConvs_2_Downs_7_q0),
    .din2(ShuffleConvs_2_Downs_6_q0),
    .din3(ShuffleConvs_2_Downs_5_q0),
    .din4(ShuffleConvs_2_Downs_4_q0),
    .din5(ShuffleConvs_2_Downs_3_q0),
    .din6(ShuffleConvs_2_Downs_2_q0),
    .din7(ShuffleConvs_2_Downs_1_q0),
    .din8(ShuffleConvs_2_Downs_q0),
    .din9(ap_reg_pp1_iter2_tmp_186_reg_4145),
    .dout(tmp_119_fu_3210_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond8_fu_1052_p2))) begin
        ci_reg_632 <= ci_1_reg_3335;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond4_fu_935_p2))) begin
        ci_reg_632 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond7_fu_955_p2))) begin
        co3_reg_643 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co3_reg_643 <= co_9_7_reg_3403;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
        co4_reg_665 <= 7'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_4109) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_665 <= arrayNo_mid2_v_reg_4140;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_3239 == 1'd0))) begin
        co_reg_562 <= tmp_mid2_v_reg_3270;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_562 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_608 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond4_fu_935_p2 == 1'd1))) begin
        h1_reg_608 <= h_7_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
        h5_reg_688 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_4109) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_688 <= tmp_136_mid2_reg_4150;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_3239 == 1'd0))) begin
        h_reg_585 <= tmp_133_mid2_reg_3279;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_585 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_711_p2 == 1'd0))) begin
        indvar_flatten1_reg_551 <= indvar_flatten_next1_fu_717_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_551 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
        indvar_flatten2_reg_654 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_3005_p2))) begin
        indvar_flatten2_reg_654 <= indvar_flatten_next3_fu_3011_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
        indvar_flatten3_reg_677 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_3005_p2))) begin
        indvar_flatten3_reg_677 <= indvar_flatten_next2_fu_3061_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_711_p2 == 1'd0))) begin
        indvar_flatten_reg_574 <= indvar_flatten_next_fu_767_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_574 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond1_fu_921_p2))) begin
        w2_reg_620 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond7_fu_955_p2))) begin
        w2_reg_620 <= w_8_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
        w6_reg_700 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten3_reg_4109))) begin
        w6_reg_700 <= w_9_fu_3156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten1_reg_3239 == 1'd0))) begin
        w_reg_597 <= w_7_fu_867_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_597 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_31_reg_3408 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_32_reg_3413 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_33_reg_3418 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_34_reg_3423 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_35_reg_3428 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_36_reg_3433 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_37_reg_3438 <= tmp_231_cast_fu_1191_p1;
        ShuffleConvs_2_Downs_38_reg_3443 <= tmp_231_cast_fu_1191_p1;
        input_V_load_reg_3453 <= input_V_q0;
        weight_0_V_load_reg_3448 <= weight_0_V_q0;
        weight_1_V_load_reg_3458 <= weight_1_V_q0;
        weight_2_V_load_reg_3463 <= weight_2_V_q0;
        weight_3_V_load_reg_3468 <= weight_3_V_q0;
        weight_4_V_load_reg_3473 <= weight_4_V_q0;
        weight_5_V_load_reg_3478 <= weight_5_V_q0;
        weight_6_V_load_reg_3483 <= weight_6_V_q0;
        weight_7_V_load_reg_3488 <= weight_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_2_Downs_39_reg_3498 <= ShuffleConvs_2_Downs_7_q0;
        ShuffleConvs_2_Downs_40_reg_3513 <= ShuffleConvs_2_Downs_6_q0;
        ShuffleConvs_2_Downs_41_reg_3528 <= ShuffleConvs_2_Downs_5_q0;
        ShuffleConvs_2_Downs_42_reg_3543 <= ShuffleConvs_2_Downs_4_q0;
        ShuffleConvs_2_Downs_43_reg_3558 <= ShuffleConvs_2_Downs_3_q0;
        ShuffleConvs_2_Downs_44_reg_3573 <= ShuffleConvs_2_Downs_2_q0;
        ShuffleConvs_2_Downs_45_reg_3588 <= ShuffleConvs_2_Downs_1_q0;
        ShuffleConvs_2_Downs_46_reg_3603 <= ShuffleConvs_2_Downs_q0;
        p_Val2_49_1_reg_3508 <= p_Val2_49_1_fu_1225_p2;
        p_Val2_49_2_reg_3523 <= p_Val2_49_2_fu_1242_p2;
        p_Val2_49_3_reg_3538 <= p_Val2_49_3_fu_1259_p2;
        p_Val2_49_4_reg_3553 <= p_Val2_49_4_fu_1276_p2;
        p_Val2_49_5_reg_3568 <= p_Val2_49_5_fu_1293_p2;
        p_Val2_49_6_reg_3583 <= p_Val2_49_6_fu_1310_p2;
        p_Val2_49_7_reg_3598 <= p_Val2_49_7_fu_1327_p2;
        p_Val2_s_reg_3493 <= p_Val2_s_fu_1208_p2;
        tmp_218_reg_3503 <= p_Val2_s_fu_1208_p2[32'd5];
        tmp_223_reg_3518 <= p_Val2_49_1_fu_1225_p2[32'd5];
        tmp_228_reg_3533 <= p_Val2_49_2_fu_1242_p2[32'd5];
        tmp_233_reg_3548 <= p_Val2_49_3_fu_1259_p2[32'd5];
        tmp_238_reg_3563 <= p_Val2_49_4_fu_1276_p2[32'd5];
        tmp_243_reg_3578 <= p_Val2_49_5_fu_1293_p2[32'd5];
        tmp_248_reg_3593 <= p_Val2_49_6_fu_1310_p2[32'd5];
        tmp_253_reg_3608 <= p_Val2_49_7_fu_1327_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_4109))) begin
        ShuffleConvs_2_Downs_47_reg_4166 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_48_reg_4172 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_49_reg_4178 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_50_reg_4184 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_51_reg_4190 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_52_reg_4196 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_53_reg_4202 <= tmp_211_cast_fu_3198_p1;
        ShuffleConvs_2_Downs_54_reg_4208 <= tmp_211_cast_fu_3198_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten1_reg_3239 <= exitcond_flatten1_reg_3239;
        ap_reg_pp0_iter1_w_mid2_reg_3259 <= w_mid2_reg_3259;
        exitcond_flatten1_reg_3239 <= exitcond_flatten1_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten3_reg_4109 <= exitcond_flatten3_reg_4109;
        ap_reg_pp1_iter1_w6_mid2_reg_4129 <= w6_mid2_reg_4129;
        exitcond_flatten3_reg_4109 <= exitcond_flatten3_fu_3005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_tmp_186_reg_4145 <= tmp_186_reg_4145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten3_reg_4109))) begin
        arrayNo_mid2_v_reg_4140 <= arrayNo_mid2_v_fu_3082_p3;
        tmp_136_mid2_reg_4150 <= tmp_136_mid2_fu_3139_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        brmerge40_demorgan_i_1_reg_3944 <= brmerge40_demorgan_i_1_fu_2155_p2;
        brmerge40_demorgan_i_2_reg_3969 <= brmerge40_demorgan_i_2_fu_2252_p2;
        brmerge40_demorgan_i_3_reg_3994 <= brmerge40_demorgan_i_3_fu_2349_p2;
        brmerge40_demorgan_i_4_reg_4019 <= brmerge40_demorgan_i_4_fu_2446_p2;
        brmerge40_demorgan_i_5_reg_4044 <= brmerge40_demorgan_i_5_fu_2543_p2;
        brmerge40_demorgan_i_6_reg_4069 <= brmerge40_demorgan_i_6_fu_2640_p2;
        brmerge40_demorgan_i_7_reg_4094 <= brmerge40_demorgan_i_7_fu_2737_p2;
        brmerge40_demorgan_i_reg_3919 <= brmerge40_demorgan_i_fu_2058_p2;
        brmerge_i_i_i_1_reg_3954 <= brmerge_i_i_i_1_fu_2177_p2;
        brmerge_i_i_i_2_reg_3979 <= brmerge_i_i_i_2_fu_2274_p2;
        brmerge_i_i_i_3_reg_4004 <= brmerge_i_i_i_3_fu_2371_p2;
        brmerge_i_i_i_4_reg_4029 <= brmerge_i_i_i_4_fu_2468_p2;
        brmerge_i_i_i_5_reg_4054 <= brmerge_i_i_i_5_fu_2565_p2;
        brmerge_i_i_i_6_reg_4079 <= brmerge_i_i_i_6_fu_2662_p2;
        brmerge_i_i_i_7_reg_4104 <= brmerge_i_i_i_7_fu_2759_p2;
        brmerge_i_i_i_reg_3929 <= brmerge_i_i_i_fu_2080_p2;
        p_38_i_i_1_reg_3934 <= p_38_i_i_1_fu_2128_p2;
        p_38_i_i_2_reg_3959 <= p_38_i_i_2_fu_2225_p2;
        p_38_i_i_3_reg_3984 <= p_38_i_i_3_fu_2322_p2;
        p_38_i_i_4_reg_4009 <= p_38_i_i_4_fu_2419_p2;
        p_38_i_i_5_reg_4034 <= p_38_i_i_5_fu_2516_p2;
        p_38_i_i_6_reg_4059 <= p_38_i_i_6_fu_2613_p2;
        p_38_i_i_7_reg_4084 <= p_38_i_i_7_fu_2710_p2;
        p_38_i_i_reg_3909 <= p_38_i_i_fu_2031_p2;
        tmp_128_reg_3914 <= tmp_128_fu_2047_p2;
        tmp_210_1_reg_3939 <= tmp_210_1_fu_2144_p2;
        tmp_210_2_reg_3964 <= tmp_210_2_fu_2241_p2;
        tmp_210_3_reg_3989 <= tmp_210_3_fu_2338_p2;
        tmp_210_4_reg_4014 <= tmp_210_4_fu_2435_p2;
        tmp_210_5_reg_4039 <= tmp_210_5_fu_2532_p2;
        tmp_210_6_reg_4064 <= tmp_210_6_fu_2629_p2;
        tmp_210_7_reg_4089 <= tmp_210_7_fu_2726_p2;
        underflow_1_reg_3949 <= underflow_1_fu_2172_p2;
        underflow_2_reg_3974 <= underflow_2_fu_2269_p2;
        underflow_3_reg_3999 <= underflow_3_fu_2366_p2;
        underflow_4_reg_4024 <= underflow_4_fu_2463_p2;
        underflow_5_reg_4049 <= underflow_5_fu_2560_p2;
        underflow_6_reg_4074 <= underflow_6_fu_2657_p2;
        underflow_7_reg_4099 <= underflow_7_fu_2754_p2;
        underflow_reg_3924 <= underflow_fu_2075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        carry_7_1_reg_3674 <= carry_7_1_fu_1487_p2;
        carry_7_2_reg_3711 <= carry_7_2_fu_1568_p2;
        carry_7_3_reg_3748 <= carry_7_3_fu_1649_p2;
        carry_7_4_reg_3785 <= carry_7_4_fu_1730_p2;
        carry_7_5_reg_3822 <= carry_7_5_fu_1811_p2;
        carry_7_6_reg_3859 <= carry_7_6_fu_1892_p2;
        carry_7_7_reg_3896 <= carry_7_7_fu_1973_p2;
        carry_7_reg_3637 <= carry_7_fu_1406_p2;
        p_Val2_1_reg_3613 <= p_Val2_1_fu_1352_p2;
        p_Val2_3_reg_3625 <= p_Val2_3_fu_1386_p2;
        p_Val2_50_1_reg_3650 <= p_Val2_50_1_fu_1433_p2;
        p_Val2_50_2_reg_3687 <= p_Val2_50_2_fu_1514_p2;
        p_Val2_50_3_reg_3724 <= p_Val2_50_3_fu_1595_p2;
        p_Val2_50_4_reg_3761 <= p_Val2_50_4_fu_1676_p2;
        p_Val2_50_5_reg_3798 <= p_Val2_50_5_fu_1757_p2;
        p_Val2_50_6_reg_3835 <= p_Val2_50_6_fu_1838_p2;
        p_Val2_50_7_reg_3872 <= p_Val2_50_7_fu_1919_p2;
        p_Val2_52_1_reg_3662 <= p_Val2_52_1_fu_1467_p2;
        p_Val2_52_2_reg_3699 <= p_Val2_52_2_fu_1548_p2;
        p_Val2_52_3_reg_3736 <= p_Val2_52_3_fu_1629_p2;
        p_Val2_52_4_reg_3773 <= p_Val2_52_4_fu_1710_p2;
        p_Val2_52_5_reg_3810 <= p_Val2_52_5_fu_1791_p2;
        p_Val2_52_6_reg_3847 <= p_Val2_52_6_fu_1872_p2;
        p_Val2_52_7_reg_3884 <= p_Val2_52_7_fu_1953_p2;
        tmp_126_reg_3644 <= {{p_Val2_1_fu_1352_p2[15:14]}};
        tmp_129_reg_3681 <= {{p_Val2_50_1_fu_1433_p2[15:14]}};
        tmp_130_reg_3718 <= {{p_Val2_50_2_fu_1514_p2[15:14]}};
        tmp_131_reg_3755 <= {{p_Val2_50_3_fu_1595_p2[15:14]}};
        tmp_132_reg_3792 <= {{p_Val2_50_4_fu_1676_p2[15:14]}};
        tmp_133_reg_3829 <= {{p_Val2_50_5_fu_1757_p2[15:14]}};
        tmp_134_reg_3866 <= {{p_Val2_50_6_fu_1838_p2[15:14]}};
        tmp_135_reg_3903 <= {{p_Val2_50_7_fu_1919_p2[15:14]}};
        tmp_217_reg_3618 <= p_Val2_1_fu_1352_p2[32'd15];
        tmp_220_reg_3631 <= p_Val2_3_fu_1386_p2[32'd7];
        tmp_222_reg_3655 <= p_Val2_50_1_fu_1433_p2[32'd15];
        tmp_225_reg_3668 <= p_Val2_52_1_fu_1467_p2[32'd7];
        tmp_227_reg_3692 <= p_Val2_50_2_fu_1514_p2[32'd15];
        tmp_230_reg_3705 <= p_Val2_52_2_fu_1548_p2[32'd7];
        tmp_232_reg_3729 <= p_Val2_50_3_fu_1595_p2[32'd15];
        tmp_235_reg_3742 <= p_Val2_52_3_fu_1629_p2[32'd7];
        tmp_237_reg_3766 <= p_Val2_50_4_fu_1676_p2[32'd15];
        tmp_240_reg_3779 <= p_Val2_52_4_fu_1710_p2[32'd7];
        tmp_242_reg_3803 <= p_Val2_50_5_fu_1757_p2[32'd15];
        tmp_245_reg_3816 <= p_Val2_52_5_fu_1791_p2[32'd7];
        tmp_247_reg_3840 <= p_Val2_50_6_fu_1838_p2[32'd15];
        tmp_250_reg_3853 <= p_Val2_52_6_fu_1872_p2[32'd7];
        tmp_252_reg_3877 <= p_Val2_50_7_fu_1919_p2[32'd15];
        tmp_255_reg_3890 <= p_Val2_52_7_fu_1953_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_1_reg_3335 <= ci_1_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond8_fu_1052_p2))) begin
        co_9_7_reg_3403 <= co_9_7_fu_1185_p2;
        tmp_216_reg_3398 <= tmp_216_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_fu_711_p2 == 1'd0))) begin
        exitcond5_mid_reg_3254 <= exitcond5_mid_fu_741_p2;
        exitcond_flatten_reg_3248 <= exitcond_flatten_fu_723_p2;
        w_mid2_reg_3259 <= w_mid2_fu_753_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_fu_3005_p2))) begin
        exitcond_flatten2_reg_4118 <= exitcond_flatten2_fu_3017_p2;
        exitcond_mid_reg_4124 <= exitcond_mid_fu_3035_p2;
        w6_mid2_reg_4129 <= w6_mid2_fu_3047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond7_fu_955_p2))) begin
        input_V_addr_reg_3345 <= tmp_219_cast_fu_1041_p1;
        tmp_122_cast_reg_3340[6 : 0] <= tmp_122_cast_fu_967_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond4_fu_935_p2))) begin
        tmp_121_cast1_reg_3317[3 : 0] <= tmp_121_cast1_fu_941_p1[3 : 0];
        tmp_121_cast_reg_3322[3 : 0] <= tmp_121_cast_fu_945_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten1_reg_3239 == 1'd0))) begin
        tmp_133_mid2_reg_3279 <= tmp_133_mid2_fu_850_p3;
        tmp_mid2_v_reg_3270 <= tmp_mid2_v_fu_788_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_reg_3239 == 1'd0))) begin
        tmp_180_reg_3284 <= tmp_180_fu_861_p2;
        tmp_183_reg_3275 <= tmp_183_fu_800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_reg_4109))) begin
        tmp_186_reg_4145 <= tmp_186_fu_3089_p1;
        tmp_191_reg_4155 <= tmp_191_fu_3150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond1_fu_921_p2))) begin
        tmp_cast1_reg_3304[3 : 0] <= tmp_cast1_fu_927_p1[3 : 0];
        tmp_cast_reg_3309[3 : 0] <= tmp_cast_fu_931_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_32_reg_3413;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_1_d0 = this_assign_1_6_fu_2966_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd6)))) begin
        ShuffleConvs_2_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd6))) begin
        ShuffleConvs_2_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_35_reg_3428;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_2_d0 = this_assign_1_5_fu_2936_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd5)))) begin
        ShuffleConvs_2_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd5))) begin
        ShuffleConvs_2_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_33_reg_3418;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_3_d0 = this_assign_1_4_fu_2906_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd4)))) begin
        ShuffleConvs_2_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd4))) begin
        ShuffleConvs_2_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_34_reg_3423;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_4_d0 = this_assign_1_3_fu_2876_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd3)))) begin
        ShuffleConvs_2_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd3))) begin
        ShuffleConvs_2_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_38_reg_3443;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_5_d0 = this_assign_1_2_fu_2846_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd2)))) begin
        ShuffleConvs_2_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd2))) begin
        ShuffleConvs_2_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_36_reg_3433;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_6_d0 = this_assign_1_1_fu_2816_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd1)))) begin
        ShuffleConvs_2_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd1))) begin
        ShuffleConvs_2_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_37_reg_3438;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_7_d0 = this_assign_1_fu_2786_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd0)))) begin
        ShuffleConvs_2_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd0))) begin
        ShuffleConvs_2_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_address0 = tmp_211_cast_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_31_reg_3408;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_2_Downs_address0 = tmp_231_cast_fu_1191_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_address0 = tmp_202_cast_fu_909_p1;
    end else begin
        ShuffleConvs_2_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_d0 = this_assign_1_7_fu_2996_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_183_reg_3275 == 3'd7)))) begin
        ShuffleConvs_2_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_196_fu_3231_p3) & (ap_reg_pp1_iter2_tmp_186_reg_4145 == 3'd7))) begin
        ShuffleConvs_2_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_711_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten3_fu_3005_p2)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_4109) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_669_p4 = arrayNo_mid2_v_reg_4140;
    end else begin
        co4_phi_fu_669_p4 = co4_reg_665;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_3239 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_566_p4 = tmp_mid2_v_reg_3270;
    end else begin
        co_phi_fu_566_p4 = co_reg_562;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_4109) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_692_p4 = tmp_136_mid2_reg_4150;
    end else begin
        h5_phi_fu_692_p4 = h5_reg_688;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_3239 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_589_p4 = tmp_133_mid2_reg_3279;
    end else begin
        h_phi_fu_589_p4 = h_reg_585;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten3_reg_4109) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_704_p4 = w_9_fu_3156_p2;
    end else begin
        w6_phi_fu_704_p4 = w6_reg_700;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten1_reg_3239 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_601_p4 = w_7_fu_867_p2;
    end else begin
        w_phi_fu_601_p4 = w_reg_597;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_711_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_711_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_921_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond4_fu_935_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond7_fu_955_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond8_fu_1052_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_3005_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_3005_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1205_p1 = $signed(input_V_load_reg_3453);

assign Range1_all_ones_1_fu_2093_p2 = ((tmp_129_reg_3681 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2190_p2 = ((tmp_130_reg_3718 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2287_p2 = ((tmp_131_reg_3755 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2384_p2 = ((tmp_132_reg_3792 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2481_p2 = ((tmp_133_reg_3829 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2578_p2 = ((tmp_134_reg_3866 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2675_p2 = ((tmp_135_reg_3903 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1996_p2 = ((tmp_126_reg_3644 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2098_p2 = ((tmp_129_reg_3681 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2195_p2 = ((tmp_130_reg_3718 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2292_p2 = ((tmp_131_reg_3755 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2389_p2 = ((tmp_132_reg_3792 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2486_p2 = ((tmp_133_reg_3829 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2583_p2 = ((tmp_134_reg_3866 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2680_p2 = ((tmp_135_reg_3903 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2001_p2 = ((tmp_126_reg_3644 == 2'd0) ? 1'b1 : 1'b0);

assign ShuffleConvs_2_Downs_1_address1 = ShuffleConvs_2_Downs_48_reg_4172;

assign ShuffleConvs_2_Downs_1_d1 = 8'd0;

assign ShuffleConvs_2_Downs_2_address1 = ShuffleConvs_2_Downs_51_reg_4190;

assign ShuffleConvs_2_Downs_2_d1 = 8'd0;

assign ShuffleConvs_2_Downs_3_address1 = ShuffleConvs_2_Downs_49_reg_4178;

assign ShuffleConvs_2_Downs_3_d1 = 8'd0;

assign ShuffleConvs_2_Downs_4_address1 = ShuffleConvs_2_Downs_50_reg_4184;

assign ShuffleConvs_2_Downs_4_d1 = 8'd0;

assign ShuffleConvs_2_Downs_5_address1 = ShuffleConvs_2_Downs_54_reg_4208;

assign ShuffleConvs_2_Downs_5_d1 = 8'd0;

assign ShuffleConvs_2_Downs_6_address1 = ShuffleConvs_2_Downs_52_reg_4196;

assign ShuffleConvs_2_Downs_6_d1 = 8'd0;

assign ShuffleConvs_2_Downs_7_address1 = ShuffleConvs_2_Downs_53_reg_4202;

assign ShuffleConvs_2_Downs_7_d1 = 8'd0;

assign ShuffleConvs_2_Downs_address1 = ShuffleConvs_2_Downs_47_reg_4166;

assign ShuffleConvs_2_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_3082_p3 = ((exitcond_flatten2_reg_4118[0:0] === 1'b1) ? co_8_fu_3069_p2 : co4_phi_fu_669_p4);

assign bias_V_address0 = tmp_mid2_fu_795_p1;

assign brmerge40_demorgan_i_1_fu_2155_p2 = (tmp_225_reg_3668 & deleted_ones_1_fu_2121_p3);

assign brmerge40_demorgan_i_2_fu_2252_p2 = (tmp_230_reg_3705 & deleted_ones_2_fu_2218_p3);

assign brmerge40_demorgan_i_3_fu_2349_p2 = (tmp_235_reg_3742 & deleted_ones_3_fu_2315_p3);

assign brmerge40_demorgan_i_4_fu_2446_p2 = (tmp_240_reg_3779 & deleted_ones_4_fu_2412_p3);

assign brmerge40_demorgan_i_5_fu_2543_p2 = (tmp_245_reg_3816 & deleted_ones_5_fu_2509_p3);

assign brmerge40_demorgan_i_6_fu_2640_p2 = (tmp_250_reg_3853 & deleted_ones_6_fu_2606_p3);

assign brmerge40_demorgan_i_7_fu_2737_p2 = (tmp_255_reg_3890 & deleted_ones_7_fu_2703_p3);

assign brmerge40_demorgan_i_fu_2058_p2 = (tmp_220_reg_3631 & deleted_ones_fu_2024_p3);

assign brmerge_i_i_1_fu_2139_p2 = (tmp_225_reg_3668 | p_not_i_i_1_fu_2133_p2);

assign brmerge_i_i_2_fu_2236_p2 = (tmp_230_reg_3705 | p_not_i_i_2_fu_2230_p2);

assign brmerge_i_i_3_fu_2333_p2 = (tmp_235_reg_3742 | p_not_i_i_3_fu_2327_p2);

assign brmerge_i_i_4_fu_2430_p2 = (tmp_240_reg_3779 | p_not_i_i_4_fu_2424_p2);

assign brmerge_i_i_5_fu_2527_p2 = (tmp_245_reg_3816 | p_not_i_i_5_fu_2521_p2);

assign brmerge_i_i_6_fu_2624_p2 = (tmp_250_reg_3853 | p_not_i_i_6_fu_2618_p2);

assign brmerge_i_i_7_fu_2721_p2 = (tmp_255_reg_3890 | p_not_i_i_7_fu_2715_p2);

assign brmerge_i_i_fu_2042_p2 = (tmp_220_reg_3631 | p_not_i_i_fu_2036_p2);

assign brmerge_i_i_i_1_fu_2177_p2 = (underflow_1_fu_2172_p2 | overflow_1_fu_2149_p2);

assign brmerge_i_i_i_2_fu_2274_p2 = (underflow_2_fu_2269_p2 | overflow_2_fu_2246_p2);

assign brmerge_i_i_i_3_fu_2371_p2 = (underflow_3_fu_2366_p2 | overflow_3_fu_2343_p2);

assign brmerge_i_i_i_4_fu_2468_p2 = (underflow_4_fu_2463_p2 | overflow_4_fu_2440_p2);

assign brmerge_i_i_i_5_fu_2565_p2 = (underflow_5_fu_2560_p2 | overflow_5_fu_2537_p2);

assign brmerge_i_i_i_6_fu_2662_p2 = (underflow_6_fu_2657_p2 | overflow_6_fu_2634_p2);

assign brmerge_i_i_i_7_fu_2759_p2 = (underflow_7_fu_2754_p2 | overflow_7_fu_2731_p2);

assign brmerge_i_i_i_fu_2080_p2 = (underflow_fu_2075_p2 | overflow_fu_2052_p2);

assign carry_7_1_fu_1487_p2 = (tmp_224_fu_1459_p3 & tmp_205_1_fu_1481_p2);

assign carry_7_2_fu_1568_p2 = (tmp_229_fu_1540_p3 & tmp_205_2_fu_1562_p2);

assign carry_7_3_fu_1649_p2 = (tmp_234_fu_1621_p3 & tmp_205_3_fu_1643_p2);

assign carry_7_4_fu_1730_p2 = (tmp_239_fu_1702_p3 & tmp_205_4_fu_1724_p2);

assign carry_7_5_fu_1811_p2 = (tmp_244_fu_1783_p3 & tmp_205_5_fu_1805_p2);

assign carry_7_6_fu_1892_p2 = (tmp_249_fu_1864_p3 & tmp_205_6_fu_1886_p2);

assign carry_7_7_fu_1973_p2 = (tmp_254_fu_1945_p3 & tmp_205_7_fu_1967_p2);

assign carry_7_fu_1406_p2 = (tmp_219_fu_1378_p3 & tmp_125_fu_1400_p2);

assign ci_1_fu_961_p2 = (ci_reg_632 + 7'd1);

assign co_7_fu_775_p2 = (7'd1 + co_phi_fu_566_p4);

assign co_8_fu_3069_p2 = (7'd1 + co4_phi_fu_669_p4);

assign co_9_7_fu_1185_p2 = (co3_reg_643 + 7'd8);

assign deleted_ones_1_fu_2121_p3 = ((carry_7_1_reg_3674[0:0] === 1'b1) ? p_41_i_i_1_fu_2116_p2 : Range1_all_ones_1_fu_2093_p2);

assign deleted_ones_2_fu_2218_p3 = ((carry_7_2_reg_3711[0:0] === 1'b1) ? p_41_i_i_2_fu_2213_p2 : Range1_all_ones_2_fu_2190_p2);

assign deleted_ones_3_fu_2315_p3 = ((carry_7_3_reg_3748[0:0] === 1'b1) ? p_41_i_i_3_fu_2310_p2 : Range1_all_ones_3_fu_2287_p2);

assign deleted_ones_4_fu_2412_p3 = ((carry_7_4_reg_3785[0:0] === 1'b1) ? p_41_i_i_4_fu_2407_p2 : Range1_all_ones_4_fu_2384_p2);

assign deleted_ones_5_fu_2509_p3 = ((carry_7_5_reg_3822[0:0] === 1'b1) ? p_41_i_i_5_fu_2504_p2 : Range1_all_ones_5_fu_2481_p2);

assign deleted_ones_6_fu_2606_p3 = ((carry_7_6_reg_3859[0:0] === 1'b1) ? p_41_i_i_6_fu_2601_p2 : Range1_all_ones_6_fu_2578_p2);

assign deleted_ones_7_fu_2703_p3 = ((carry_7_7_reg_3896[0:0] === 1'b1) ? p_41_i_i_7_fu_2698_p2 : Range1_all_ones_7_fu_2675_p2);

assign deleted_ones_fu_2024_p3 = ((carry_7_reg_3637[0:0] === 1'b1) ? p_41_i_i_fu_2019_p2 : Range1_all_ones_fu_1996_p2);

assign deleted_zeros_1_fu_2103_p3 = ((carry_7_1_reg_3674[0:0] === 1'b1) ? Range1_all_ones_1_fu_2093_p2 : Range1_all_zeros_1_fu_2098_p2);

assign deleted_zeros_2_fu_2200_p3 = ((carry_7_2_reg_3711[0:0] === 1'b1) ? Range1_all_ones_2_fu_2190_p2 : Range1_all_zeros_2_fu_2195_p2);

assign deleted_zeros_3_fu_2297_p3 = ((carry_7_3_reg_3748[0:0] === 1'b1) ? Range1_all_ones_3_fu_2287_p2 : Range1_all_zeros_3_fu_2292_p2);

assign deleted_zeros_4_fu_2394_p3 = ((carry_7_4_reg_3785[0:0] === 1'b1) ? Range1_all_ones_4_fu_2384_p2 : Range1_all_zeros_4_fu_2389_p2);

assign deleted_zeros_5_fu_2491_p3 = ((carry_7_5_reg_3822[0:0] === 1'b1) ? Range1_all_ones_5_fu_2481_p2 : Range1_all_zeros_5_fu_2486_p2);

assign deleted_zeros_6_fu_2588_p3 = ((carry_7_6_reg_3859[0:0] === 1'b1) ? Range1_all_ones_6_fu_2578_p2 : Range1_all_zeros_6_fu_2583_p2);

assign deleted_zeros_7_fu_2685_p3 = ((carry_7_7_reg_3896[0:0] === 1'b1) ? Range1_all_ones_7_fu_2675_p2 : Range1_all_zeros_7_fu_2680_p2);

assign deleted_zeros_fu_2006_p3 = ((carry_7_reg_3637[0:0] === 1'b1) ? Range1_all_ones_fu_1996_p2 : Range1_all_zeros_fu_2001_p2);

assign exitcond1_fu_921_p2 = ((h1_reg_608 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond2_fu_3029_p2 = ((w6_phi_fu_704_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond4_fu_935_p2 = ((w2_reg_620 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond5_mid_fu_741_p2 = (exitcond_fu_735_p2 & not_exitcond_flatten_fu_729_p2);

assign exitcond7_fu_955_p2 = ((ci_reg_632 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond8_fu_1052_p2 = ((co3_reg_643 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_711_p2 = ((indvar_flatten1_reg_551 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_3017_p2 = ((indvar_flatten3_reg_677 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_3005_p2 = ((indvar_flatten2_reg_654 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_723_p2 = ((indvar_flatten_reg_574 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_735_p2 = ((w_phi_fu_601_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3035_p2 = (exitcond2_fu_3029_p2 & not_exitcond_flatten_2_fu_3023_p2);

assign h5_mid_fu_3075_p3 = ((exitcond_flatten2_reg_4118[0:0] === 1'b1) ? 4'd1 : h5_phi_fu_692_p4);

assign h_7_fu_949_p2 = (h1_reg_608 + 4'd1);

assign h_8_fu_844_p2 = (4'd1 + h_mid_fu_781_p3);

assign h_9_fu_3133_p2 = (4'd1 + h5_mid_fu_3075_p3);

assign h_mid_fu_781_p3 = ((exitcond_flatten_reg_3248[0:0] === 1'b1) ? 4'd1 : h_phi_fu_589_p4);

assign indvar_flatten21_op_fu_3055_p2 = (indvar_flatten3_reg_677 + 8'd1);

assign indvar_flatten_next1_fu_717_p2 = (indvar_flatten1_reg_551 + 13'd1);

assign indvar_flatten_next2_fu_3061_p3 = ((exitcond_flatten2_fu_3017_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten21_op_fu_3055_p2);

assign indvar_flatten_next3_fu_3011_p2 = (indvar_flatten2_reg_654 + 13'd1);

assign indvar_flatten_next_fu_767_p3 = ((exitcond_flatten_fu_723_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_761_p2);

assign indvar_flatten_op_fu_761_p2 = (indvar_flatten_reg_574 + 8'd1);

assign input_V_address0 = input_V_addr_reg_3345;

assign newIndex1_mid2_v_fu_804_p4 = {{tmp_mid2_v_fu_788_p3[6:3]}};

assign newIndex3_mid2_v_fu_3093_p4 = {{arrayNo_mid2_v_fu_3082_p3[6:3]}};

assign newIndex4_fu_1058_p4 = {{co3_reg_643[6:3]}};

assign not_exitcond_flatten_2_fu_3023_p2 = (exitcond_flatten2_fu_3017_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_729_p2 = (exitcond_flatten_fu_723_p2 ^ 1'd1);

assign overflow_1_fu_2149_p2 = (brmerge_i_i_1_fu_2139_p2 & tmp_210_1_fu_2144_p2);

assign overflow_2_fu_2246_p2 = (brmerge_i_i_2_fu_2236_p2 & tmp_210_2_fu_2241_p2);

assign overflow_3_fu_2343_p2 = (brmerge_i_i_3_fu_2333_p2 & tmp_210_3_fu_2338_p2);

assign overflow_4_fu_2440_p2 = (brmerge_i_i_4_fu_2430_p2 & tmp_210_4_fu_2435_p2);

assign overflow_5_fu_2537_p2 = (brmerge_i_i_5_fu_2527_p2 & tmp_210_5_fu_2532_p2);

assign overflow_6_fu_2634_p2 = (brmerge_i_i_6_fu_2624_p2 & tmp_210_6_fu_2629_p2);

assign overflow_7_fu_2731_p2 = (brmerge_i_i_7_fu_2721_p2 & tmp_210_7_fu_2726_p2);

assign overflow_fu_2052_p2 = (brmerge_i_i_fu_2042_p2 & tmp_128_fu_2047_p2);

assign p_38_i_i_1_fu_2128_p2 = (carry_7_1_reg_3674 & Range1_all_ones_1_fu_2093_p2);

assign p_38_i_i_2_fu_2225_p2 = (carry_7_2_reg_3711 & Range1_all_ones_2_fu_2190_p2);

assign p_38_i_i_3_fu_2322_p2 = (carry_7_3_reg_3748 & Range1_all_ones_3_fu_2287_p2);

assign p_38_i_i_4_fu_2419_p2 = (carry_7_4_reg_3785 & Range1_all_ones_4_fu_2384_p2);

assign p_38_i_i_5_fu_2516_p2 = (carry_7_5_reg_3822 & Range1_all_ones_5_fu_2481_p2);

assign p_38_i_i_6_fu_2613_p2 = (carry_7_6_reg_3859 & Range1_all_ones_6_fu_2578_p2);

assign p_38_i_i_7_fu_2710_p2 = (carry_7_7_reg_3896 & Range1_all_ones_7_fu_2675_p2);

assign p_38_i_i_fu_2031_p2 = (carry_7_reg_3637 & Range1_all_ones_fu_1996_p2);

assign p_41_i_i_1_fu_2116_p2 = (tmp_222_reg_3655 & tmp_208_1_fu_2110_p2);

assign p_41_i_i_2_fu_2213_p2 = (tmp_227_reg_3692 & tmp_208_2_fu_2207_p2);

assign p_41_i_i_3_fu_2310_p2 = (tmp_232_reg_3729 & tmp_208_3_fu_2304_p2);

assign p_41_i_i_4_fu_2407_p2 = (tmp_237_reg_3766 & tmp_208_4_fu_2401_p2);

assign p_41_i_i_5_fu_2504_p2 = (tmp_242_reg_3803 & tmp_208_5_fu_2498_p2);

assign p_41_i_i_6_fu_2601_p2 = (tmp_247_reg_3840 & tmp_208_6_fu_2595_p2);

assign p_41_i_i_7_fu_2698_p2 = (tmp_252_reg_3877 & tmp_208_7_fu_2692_p2);

assign p_41_i_i_fu_2019_p2 = (tmp_217_reg_3618 & tmp_127_fu_2013_p2);

assign p_Val2_1_fu_1352_p2 = ($signed(tmp_176_cast_fu_1348_p1) + $signed(p_Val2_s_reg_3493));

assign p_Val2_2_fu_1365_p4 = {{p_Val2_1_fu_1352_p2[13:6]}};

assign p_Val2_3_fu_1386_p2 = (p_Val2_2_fu_1365_p4 + tmp_124_fu_1375_p1);

assign p_Val2_49_1_fu_1225_p0 = weight_1_V_load_reg_3458;

assign p_Val2_49_1_fu_1225_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_1_fu_1225_p2 = ($signed(p_Val2_49_1_fu_1225_p0) * $signed(p_Val2_49_1_fu_1225_p1));

assign p_Val2_49_2_fu_1242_p0 = weight_2_V_load_reg_3463;

assign p_Val2_49_2_fu_1242_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_2_fu_1242_p2 = ($signed(p_Val2_49_2_fu_1242_p0) * $signed(p_Val2_49_2_fu_1242_p1));

assign p_Val2_49_3_fu_1259_p0 = weight_3_V_load_reg_3468;

assign p_Val2_49_3_fu_1259_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_3_fu_1259_p2 = ($signed(p_Val2_49_3_fu_1259_p0) * $signed(p_Val2_49_3_fu_1259_p1));

assign p_Val2_49_4_fu_1276_p0 = weight_4_V_load_reg_3473;

assign p_Val2_49_4_fu_1276_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_4_fu_1276_p2 = ($signed(p_Val2_49_4_fu_1276_p0) * $signed(p_Val2_49_4_fu_1276_p1));

assign p_Val2_49_5_fu_1293_p0 = weight_5_V_load_reg_3478;

assign p_Val2_49_5_fu_1293_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_5_fu_1293_p2 = ($signed(p_Val2_49_5_fu_1293_p0) * $signed(p_Val2_49_5_fu_1293_p1));

assign p_Val2_49_6_fu_1310_p0 = weight_6_V_load_reg_3483;

assign p_Val2_49_6_fu_1310_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_6_fu_1310_p2 = ($signed(p_Val2_49_6_fu_1310_p0) * $signed(p_Val2_49_6_fu_1310_p1));

assign p_Val2_49_7_fu_1327_p0 = weight_7_V_load_reg_3488;

assign p_Val2_49_7_fu_1327_p1 = OP2_V_fu_1205_p1;

assign p_Val2_49_7_fu_1327_p2 = ($signed(p_Val2_49_7_fu_1327_p0) * $signed(p_Val2_49_7_fu_1327_p1));

assign p_Val2_50_1_fu_1433_p2 = ($signed(tmp_197_1_cast_fu_1429_p1) + $signed(p_Val2_49_1_reg_3508));

assign p_Val2_50_2_fu_1514_p2 = ($signed(tmp_197_2_cast_fu_1510_p1) + $signed(p_Val2_49_2_reg_3523));

assign p_Val2_50_3_fu_1595_p2 = ($signed(tmp_197_3_cast_fu_1591_p1) + $signed(p_Val2_49_3_reg_3538));

assign p_Val2_50_4_fu_1676_p2 = ($signed(tmp_197_4_cast_fu_1672_p1) + $signed(p_Val2_49_4_reg_3553));

assign p_Val2_50_5_fu_1757_p2 = ($signed(tmp_197_5_cast_fu_1753_p1) + $signed(p_Val2_49_5_reg_3568));

assign p_Val2_50_6_fu_1838_p2 = ($signed(tmp_197_6_cast_fu_1834_p1) + $signed(p_Val2_49_6_reg_3583));

assign p_Val2_50_7_fu_1919_p2 = ($signed(tmp_197_7_cast_fu_1915_p1) + $signed(p_Val2_49_7_reg_3598));

assign p_Val2_51_1_fu_1446_p4 = {{p_Val2_50_1_fu_1433_p2[13:6]}};

assign p_Val2_51_2_fu_1527_p4 = {{p_Val2_50_2_fu_1514_p2[13:6]}};

assign p_Val2_51_3_fu_1608_p4 = {{p_Val2_50_3_fu_1595_p2[13:6]}};

assign p_Val2_51_4_fu_1689_p4 = {{p_Val2_50_4_fu_1676_p2[13:6]}};

assign p_Val2_51_5_fu_1770_p4 = {{p_Val2_50_5_fu_1757_p2[13:6]}};

assign p_Val2_51_6_fu_1851_p4 = {{p_Val2_50_6_fu_1838_p2[13:6]}};

assign p_Val2_51_7_fu_1932_p4 = {{p_Val2_50_7_fu_1919_p2[13:6]}};

assign p_Val2_52_1_68_fu_2810_p3 = ((underflow_1_reg_3949[0:0] === 1'b1) ? 8'd128 : p_Val2_52_1_reg_3662);

assign p_Val2_52_1_fu_1467_p2 = (p_Val2_51_1_fu_1446_p4 + tmp_201_1_fu_1456_p1);

assign p_Val2_52_2_69_fu_2840_p3 = ((underflow_2_reg_3974[0:0] === 1'b1) ? 8'd128 : p_Val2_52_2_reg_3699);

assign p_Val2_52_2_fu_1548_p2 = (p_Val2_51_2_fu_1527_p4 + tmp_201_2_fu_1537_p1);

assign p_Val2_52_3_70_fu_2870_p3 = ((underflow_3_reg_3999[0:0] === 1'b1) ? 8'd128 : p_Val2_52_3_reg_3736);

assign p_Val2_52_3_fu_1629_p2 = (p_Val2_51_3_fu_1608_p4 + tmp_201_3_fu_1618_p1);

assign p_Val2_52_4_71_fu_2900_p3 = ((underflow_4_reg_4024[0:0] === 1'b1) ? 8'd128 : p_Val2_52_4_reg_3773);

assign p_Val2_52_4_fu_1710_p2 = (p_Val2_51_4_fu_1689_p4 + tmp_201_4_fu_1699_p1);

assign p_Val2_52_5_72_fu_2930_p3 = ((underflow_5_reg_4049[0:0] === 1'b1) ? 8'd128 : p_Val2_52_5_reg_3810);

assign p_Val2_52_5_fu_1791_p2 = (p_Val2_51_5_fu_1770_p4 + tmp_201_5_fu_1780_p1);

assign p_Val2_52_6_73_fu_2960_p3 = ((underflow_6_reg_4074[0:0] === 1'b1) ? 8'd128 : p_Val2_52_6_reg_3847);

assign p_Val2_52_6_fu_1872_p2 = (p_Val2_51_6_fu_1851_p4 + tmp_201_6_fu_1861_p1);

assign p_Val2_52_7_74_fu_2990_p3 = ((underflow_7_reg_4099[0:0] === 1'b1) ? 8'd128 : p_Val2_52_7_reg_3884);

assign p_Val2_52_7_fu_1953_p2 = (p_Val2_51_7_fu_1932_p4 + tmp_201_7_fu_1942_p1);

assign p_Val2_52_mux_1_fu_2804_p3 = ((brmerge_i_i_i_1_reg_3954[0:0] === 1'b1) ? 8'd127 : p_Val2_52_1_reg_3662);

assign p_Val2_52_mux_2_fu_2834_p3 = ((brmerge_i_i_i_2_reg_3979[0:0] === 1'b1) ? 8'd127 : p_Val2_52_2_reg_3699);

assign p_Val2_52_mux_3_fu_2864_p3 = ((brmerge_i_i_i_3_reg_4004[0:0] === 1'b1) ? 8'd127 : p_Val2_52_3_reg_3736);

assign p_Val2_52_mux_4_fu_2894_p3 = ((brmerge_i_i_i_4_reg_4029[0:0] === 1'b1) ? 8'd127 : p_Val2_52_4_reg_3773);

assign p_Val2_52_mux_5_fu_2924_p3 = ((brmerge_i_i_i_5_reg_4054[0:0] === 1'b1) ? 8'd127 : p_Val2_52_5_reg_3810);

assign p_Val2_52_mux_6_fu_2954_p3 = ((brmerge_i_i_i_6_reg_4079[0:0] === 1'b1) ? 8'd127 : p_Val2_52_6_reg_3847);

assign p_Val2_52_mux_7_fu_2984_p3 = ((brmerge_i_i_i_7_reg_4104[0:0] === 1'b1) ? 8'd127 : p_Val2_52_7_reg_3884);

assign p_Val2_52_mux_fu_2774_p3 = ((brmerge_i_i_i_reg_3929[0:0] === 1'b1) ? 8'd127 : p_Val2_3_reg_3625);

assign p_Val2_s_67_fu_2780_p3 = ((underflow_reg_3924[0:0] === 1'b1) ? 8'd128 : p_Val2_3_reg_3625);

assign p_Val2_s_fu_1208_p0 = weight_0_V_load_reg_3448;

assign p_Val2_s_fu_1208_p1 = OP2_V_fu_1205_p1;

assign p_Val2_s_fu_1208_p2 = ($signed(p_Val2_s_fu_1208_p0) * $signed(p_Val2_s_fu_1208_p1));

assign p_not_i_i_1_fu_2133_p2 = (deleted_zeros_1_fu_2103_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2230_p2 = (deleted_zeros_2_fu_2200_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2327_p2 = (deleted_zeros_3_fu_2297_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2424_p2 = (deleted_zeros_4_fu_2394_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2521_p2 = (deleted_zeros_5_fu_2491_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2618_p2 = (deleted_zeros_6_fu_2588_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2715_p2 = (deleted_zeros_7_fu_2685_p3 ^ 1'd1);

assign p_not_i_i_fu_2036_p2 = (deleted_zeros_fu_2006_p3 ^ 1'd1);

assign p_shl10_cast_fu_1123_p1 = tmp_209_fu_1115_p3;

assign p_shl11_cast_fu_1135_p1 = tmp_210_fu_1127_p3;

assign p_shl12_cast_fu_1076_p1 = tmp_205_fu_1068_p3;

assign p_shl13_cast_fu_1088_p1 = tmp_206_fu_1080_p3;

assign p_shl14_cast_fu_3168_p1 = tmp_192_fu_3161_p3;

assign p_shl15_cast_fu_3179_p1 = tmp_193_fu_3172_p3;

assign p_shl16_cast_fu_3111_p1 = tmp_187_fu_3103_p3;

assign p_shl17_cast_fu_3123_p1 = tmp_188_fu_3115_p3;

assign p_shl1_cast_fu_890_p1 = tmp_185_fu_883_p3;

assign p_shl2_cast_fu_822_p1 = tmp_fu_814_p3;

assign p_shl3_cast_fu_834_p1 = tmp_s_fu_826_p3;

assign p_shl4_cast_fu_1014_p1 = tmp_201_fu_1006_p3;

assign p_shl5_cast_fu_1026_p1 = tmp_202_fu_1018_p3;

assign p_shl6_cast_fu_979_p1 = tmp_197_fu_971_p3;

assign p_shl7_cast_fu_991_p1 = tmp_198_fu_983_p3;

assign p_shl8_cast_fu_1158_p1 = tmp_213_fu_1150_p3;

assign p_shl9_cast_fu_1170_p1 = tmp_214_fu_1162_p3;

assign p_shl_cast_fu_879_p1 = tmp_184_fu_872_p3;

assign this_assign_1_1_fu_2816_p3 = ((underflow_not_1_fu_2799_p2[0:0] === 1'b1) ? p_Val2_52_mux_1_fu_2804_p3 : p_Val2_52_1_68_fu_2810_p3);

assign this_assign_1_2_fu_2846_p3 = ((underflow_not_2_fu_2829_p2[0:0] === 1'b1) ? p_Val2_52_mux_2_fu_2834_p3 : p_Val2_52_2_69_fu_2840_p3);

assign this_assign_1_3_fu_2876_p3 = ((underflow_not_3_fu_2859_p2[0:0] === 1'b1) ? p_Val2_52_mux_3_fu_2864_p3 : p_Val2_52_3_70_fu_2870_p3);

assign this_assign_1_4_fu_2906_p3 = ((underflow_not_4_fu_2889_p2[0:0] === 1'b1) ? p_Val2_52_mux_4_fu_2894_p3 : p_Val2_52_4_71_fu_2900_p3);

assign this_assign_1_5_fu_2936_p3 = ((underflow_not_5_fu_2919_p2[0:0] === 1'b1) ? p_Val2_52_mux_5_fu_2924_p3 : p_Val2_52_5_72_fu_2930_p3);

assign this_assign_1_6_fu_2966_p3 = ((underflow_not_6_fu_2949_p2[0:0] === 1'b1) ? p_Val2_52_mux_6_fu_2954_p3 : p_Val2_52_6_73_fu_2960_p3);

assign this_assign_1_7_fu_2996_p3 = ((underflow_not_7_fu_2979_p2[0:0] === 1'b1) ? p_Val2_52_mux_7_fu_2984_p3 : p_Val2_52_7_74_fu_2990_p3);

assign this_assign_1_fu_2786_p3 = ((underflow_not_fu_2769_p2[0:0] === 1'b1) ? p_Val2_52_mux_fu_2774_p3 : p_Val2_s_67_fu_2780_p3);

assign tmp10_fu_2885_p2 = (brmerge40_demorgan_i_4_reg_4019 | tmp_210_4_reg_4014);

assign tmp11_demorgan_fu_2548_p2 = (p_38_i_i_5_fu_2516_p2 | brmerge40_demorgan_i_5_fu_2543_p2);

assign tmp11_fu_2554_p2 = (tmp11_demorgan_fu_2548_p2 ^ 1'd1);

assign tmp12_fu_2915_p2 = (brmerge40_demorgan_i_5_reg_4044 | tmp_210_5_reg_4039);

assign tmp13_demorgan_fu_2645_p2 = (p_38_i_i_6_fu_2613_p2 | brmerge40_demorgan_i_6_fu_2640_p2);

assign tmp13_fu_2651_p2 = (tmp13_demorgan_fu_2645_p2 ^ 1'd1);

assign tmp14_fu_2945_p2 = (brmerge40_demorgan_i_6_reg_4069 | tmp_210_6_reg_4064);

assign tmp15_demorgan_fu_2742_p2 = (p_38_i_i_7_fu_2710_p2 | brmerge40_demorgan_i_7_fu_2737_p2);

assign tmp15_fu_2748_p2 = (tmp15_demorgan_fu_2742_p2 ^ 1'd1);

assign tmp16_fu_2975_p2 = (brmerge40_demorgan_i_7_reg_4094 | tmp_210_7_reg_4089);

assign tmp1_demorgan_fu_2063_p2 = (p_38_i_i_fu_2031_p2 | brmerge40_demorgan_i_fu_2058_p2);

assign tmp1_fu_2069_p2 = (tmp1_demorgan_fu_2063_p2 ^ 1'd1);

assign tmp2_fu_2765_p2 = (brmerge40_demorgan_i_reg_3919 | tmp_128_reg_3914);

assign tmp3_demorgan_fu_2160_p2 = (p_38_i_i_1_fu_2128_p2 | brmerge40_demorgan_i_1_fu_2155_p2);

assign tmp3_fu_2166_p2 = (tmp3_demorgan_fu_2160_p2 ^ 1'd1);

assign tmp4_fu_2795_p2 = (brmerge40_demorgan_i_1_reg_3944 | tmp_210_1_reg_3939);

assign tmp5_demorgan_fu_2257_p2 = (p_38_i_i_2_fu_2225_p2 | brmerge40_demorgan_i_2_fu_2252_p2);

assign tmp5_fu_2263_p2 = (tmp5_demorgan_fu_2257_p2 ^ 1'd1);

assign tmp6_fu_2825_p2 = (brmerge40_demorgan_i_2_reg_3969 | tmp_210_2_reg_3964);

assign tmp7_demorgan_fu_2354_p2 = (p_38_i_i_3_fu_2322_p2 | brmerge40_demorgan_i_3_fu_2349_p2);

assign tmp7_fu_2360_p2 = (tmp7_demorgan_fu_2354_p2 ^ 1'd1);

assign tmp8_fu_2855_p2 = (brmerge40_demorgan_i_3_reg_3994 | tmp_210_3_reg_3989);

assign tmp9_demorgan_fu_2451_p2 = (p_38_i_i_4_fu_2419_p2 | brmerge40_demorgan_i_4_fu_2446_p2);

assign tmp9_fu_2457_p2 = (tmp9_demorgan_fu_2451_p2 ^ 1'd1);

assign tmp_116_cast_fu_900_p1 = ap_reg_pp0_iter1_w_mid2_reg_3259;

assign tmp_118_cast_fu_3189_p1 = ap_reg_pp1_iter1_w6_mid2_reg_4129;

assign tmp_121_cast1_fu_941_p1 = w2_reg_620;

assign tmp_121_cast_fu_945_p1 = w2_reg_620;

assign tmp_122_cast_fu_967_p1 = ci_reg_632;

assign tmp_123_fu_1341_p3 = {{ShuffleConvs_2_Downs_39_reg_3498}, {6'd0}};

assign tmp_124_fu_1375_p1 = tmp_218_reg_3503;

assign tmp_125_fu_1400_p2 = (tmp_220_fu_1392_p3 ^ 1'd1);

assign tmp_127_fu_2013_p2 = (tmp_221_fu_1989_p3 ^ 1'd1);

assign tmp_128_fu_2047_p2 = (tmp_217_reg_3618 ^ 1'd1);

assign tmp_133_mid2_cast_fu_857_p1 = tmp_133_mid2_fu_850_p3;

assign tmp_133_mid2_fu_850_p3 = ((exitcond5_mid_reg_3254[0:0] === 1'b1) ? h_8_fu_844_p2 : h_mid_fu_781_p3);

assign tmp_136_mid2_cast_fu_3146_p1 = tmp_136_mid2_fu_3139_p3;

assign tmp_136_mid2_fu_3139_p3 = ((exitcond_mid_reg_4124[0:0] === 1'b1) ? h_9_fu_3133_p2 : h5_mid_fu_3075_p3);

assign tmp_176_cast_fu_1348_p1 = $signed(tmp_123_fu_1341_p3);

assign tmp_178_fu_838_p2 = (p_shl3_cast_fu_834_p1 + p_shl2_cast_fu_822_p1);

assign tmp_179_fu_747_p2 = (exitcond5_mid_fu_741_p2 | exitcond_flatten_fu_723_p2);

assign tmp_180_fu_861_p2 = (tmp_178_fu_838_p2 + tmp_133_mid2_cast_fu_857_p1);

assign tmp_181_fu_894_p2 = (p_shl1_cast_fu_890_p1 + p_shl_cast_fu_879_p1);

assign tmp_182_fu_903_p2 = (tmp_181_fu_894_p2 + tmp_116_cast_fu_900_p1);

assign tmp_183_fu_800_p1 = tmp_mid2_v_fu_788_p3[2:0];

assign tmp_184_fu_872_p3 = {{tmp_180_reg_3284}, {3'd0}};

assign tmp_185_fu_883_p3 = {{tmp_180_reg_3284}, {1'd0}};

assign tmp_186_fu_3089_p1 = arrayNo_mid2_v_fu_3082_p3[2:0];

assign tmp_187_fu_3103_p3 = {{newIndex3_mid2_v_fu_3093_p4}, {3'd0}};

assign tmp_188_fu_3115_p3 = {{newIndex3_mid2_v_fu_3093_p4}, {1'd0}};

assign tmp_189_fu_3127_p2 = (p_shl17_cast_fu_3123_p1 + p_shl16_cast_fu_3111_p1);

assign tmp_190_fu_3041_p2 = (exitcond_mid_fu_3035_p2 | exitcond_flatten2_fu_3017_p2);

assign tmp_191_fu_3150_p2 = (tmp_189_fu_3127_p2 + tmp_136_mid2_cast_fu_3146_p1);

assign tmp_192_fu_3161_p3 = {{tmp_191_reg_4155}, {3'd0}};

assign tmp_193_fu_3172_p3 = {{tmp_191_reg_4155}, {1'd0}};

assign tmp_194_fu_3183_p2 = (p_shl15_cast_fu_3179_p1 + p_shl14_cast_fu_3168_p1);

assign tmp_195_fu_3192_p2 = (tmp_194_fu_3183_p2 + tmp_118_cast_fu_3189_p1);

assign tmp_196_fu_3231_p3 = tmp_119_fu_3210_p10[32'd7];

assign tmp_197_1_cast_fu_1429_p1 = $signed(tmp_197_1_fu_1422_p3);

assign tmp_197_1_fu_1422_p3 = {{ShuffleConvs_2_Downs_40_reg_3513}, {6'd0}};

assign tmp_197_2_cast_fu_1510_p1 = $signed(tmp_197_2_fu_1503_p3);

assign tmp_197_2_fu_1503_p3 = {{ShuffleConvs_2_Downs_41_reg_3528}, {6'd0}};

assign tmp_197_3_cast_fu_1591_p1 = $signed(tmp_197_3_fu_1584_p3);

assign tmp_197_3_fu_1584_p3 = {{ShuffleConvs_2_Downs_42_reg_3543}, {6'd0}};

assign tmp_197_4_cast_fu_1672_p1 = $signed(tmp_197_4_fu_1665_p3);

assign tmp_197_4_fu_1665_p3 = {{ShuffleConvs_2_Downs_43_reg_3558}, {6'd0}};

assign tmp_197_5_cast_fu_1753_p1 = $signed(tmp_197_5_fu_1746_p3);

assign tmp_197_5_fu_1746_p3 = {{ShuffleConvs_2_Downs_44_reg_3573}, {6'd0}};

assign tmp_197_6_cast_fu_1834_p1 = $signed(tmp_197_6_fu_1827_p3);

assign tmp_197_6_fu_1827_p3 = {{ShuffleConvs_2_Downs_45_reg_3588}, {6'd0}};

assign tmp_197_7_cast_fu_1915_p1 = $signed(tmp_197_7_fu_1908_p3);

assign tmp_197_7_fu_1908_p3 = {{ShuffleConvs_2_Downs_46_reg_3603}, {6'd0}};

assign tmp_197_fu_971_p3 = {{ci_reg_632}, {3'd0}};

assign tmp_198_fu_983_p3 = {{ci_reg_632}, {1'd0}};

assign tmp_199_fu_995_p2 = (p_shl6_cast_fu_979_p1 + p_shl7_cast_fu_991_p1);

assign tmp_200_fu_1001_p2 = (tmp_cast_reg_3309 + tmp_199_fu_995_p2);

assign tmp_201_1_fu_1456_p1 = tmp_223_reg_3518;

assign tmp_201_2_fu_1537_p1 = tmp_228_reg_3533;

assign tmp_201_3_fu_1618_p1 = tmp_233_reg_3548;

assign tmp_201_4_fu_1699_p1 = tmp_238_reg_3563;

assign tmp_201_5_fu_1780_p1 = tmp_243_reg_3578;

assign tmp_201_6_fu_1861_p1 = tmp_248_reg_3593;

assign tmp_201_7_fu_1942_p1 = tmp_253_reg_3608;

assign tmp_201_fu_1006_p3 = {{tmp_200_fu_1001_p2}, {3'd0}};

assign tmp_202_cast_fu_909_p1 = tmp_182_fu_903_p2;

assign tmp_202_fu_1018_p3 = {{tmp_200_fu_1001_p2}, {1'd0}};

assign tmp_203_fu_1030_p2 = (p_shl4_cast_fu_1014_p1 + p_shl5_cast_fu_1026_p1);

assign tmp_204_fu_1036_p2 = (tmp_121_cast_reg_3322 + tmp_203_fu_1030_p2);

assign tmp_205_1_fu_1481_p2 = (tmp_225_fu_1473_p3 ^ 1'd1);

assign tmp_205_2_fu_1562_p2 = (tmp_230_fu_1554_p3 ^ 1'd1);

assign tmp_205_3_fu_1643_p2 = (tmp_235_fu_1635_p3 ^ 1'd1);

assign tmp_205_4_fu_1724_p2 = (tmp_240_fu_1716_p3 ^ 1'd1);

assign tmp_205_5_fu_1805_p2 = (tmp_245_fu_1797_p3 ^ 1'd1);

assign tmp_205_6_fu_1886_p2 = (tmp_250_fu_1878_p3 ^ 1'd1);

assign tmp_205_7_fu_1967_p2 = (tmp_255_fu_1959_p3 ^ 1'd1);

assign tmp_205_fu_1068_p3 = {{newIndex4_fu_1058_p4}, {7'd0}};

assign tmp_206_fu_1080_p3 = {{newIndex4_fu_1058_p4}, {5'd0}};

assign tmp_207_fu_1092_p2 = (p_shl12_cast_fu_1076_p1 - p_shl13_cast_fu_1088_p1);

assign tmp_208_1_fu_2110_p2 = (tmp_226_fu_2086_p3 ^ 1'd1);

assign tmp_208_2_fu_2207_p2 = (tmp_231_fu_2183_p3 ^ 1'd1);

assign tmp_208_3_fu_2304_p2 = (tmp_236_fu_2280_p3 ^ 1'd1);

assign tmp_208_4_fu_2401_p2 = (tmp_241_fu_2377_p3 ^ 1'd1);

assign tmp_208_5_fu_2498_p2 = (tmp_246_fu_2474_p3 ^ 1'd1);

assign tmp_208_6_fu_2595_p2 = (tmp_251_fu_2571_p3 ^ 1'd1);

assign tmp_208_7_fu_2692_p2 = (tmp_256_fu_2668_p3 ^ 1'd1);

assign tmp_208_fu_1098_p2 = (tmp_122_cast_reg_3340 + tmp_207_fu_1092_p2);

assign tmp_209_fu_1115_p3 = {{newIndex4_fu_1058_p4}, {3'd0}};

assign tmp_210_1_fu_2144_p2 = (tmp_222_reg_3655 ^ 1'd1);

assign tmp_210_2_fu_2241_p2 = (tmp_227_reg_3692 ^ 1'd1);

assign tmp_210_3_fu_2338_p2 = (tmp_232_reg_3729 ^ 1'd1);

assign tmp_210_4_fu_2435_p2 = (tmp_237_reg_3766 ^ 1'd1);

assign tmp_210_5_fu_2532_p2 = (tmp_242_reg_3803 ^ 1'd1);

assign tmp_210_6_fu_2629_p2 = (tmp_247_reg_3840 ^ 1'd1);

assign tmp_210_7_fu_2726_p2 = (tmp_252_reg_3877 ^ 1'd1);

assign tmp_210_fu_1127_p3 = {{newIndex4_fu_1058_p4}, {1'd0}};

assign tmp_211_cast_fu_3198_p1 = tmp_195_fu_3192_p2;

assign tmp_211_fu_1139_p2 = (p_shl10_cast_fu_1123_p1 + p_shl11_cast_fu_1135_p1);

assign tmp_212_fu_1145_p2 = (tmp_cast1_reg_3304 + tmp_211_fu_1139_p2);

assign tmp_213_fu_1150_p3 = {{tmp_212_fu_1145_p2}, {3'd0}};

assign tmp_214_fu_1162_p3 = {{tmp_212_fu_1145_p2}, {1'd0}};

assign tmp_215_fu_1174_p2 = (p_shl8_cast_fu_1158_p1 + p_shl9_cast_fu_1170_p1);

assign tmp_216_fu_1180_p2 = (tmp_121_cast1_reg_3317 + tmp_215_fu_1174_p2);

assign tmp_219_cast_fu_1041_p1 = tmp_204_fu_1036_p2;

assign tmp_219_fu_1378_p3 = p_Val2_1_fu_1352_p2[32'd13];

assign tmp_220_fu_1392_p3 = p_Val2_3_fu_1386_p2[32'd7];

assign tmp_221_fu_1989_p3 = p_Val2_1_reg_3613[32'd14];

assign tmp_223_cast_fu_1103_p1 = $signed(tmp_208_fu_1098_p2);

assign tmp_224_fu_1459_p3 = p_Val2_50_1_fu_1433_p2[32'd13];

assign tmp_225_fu_1473_p3 = p_Val2_52_1_fu_1467_p2[32'd7];

assign tmp_226_fu_2086_p3 = p_Val2_50_1_reg_3650[32'd14];

assign tmp_229_fu_1540_p3 = p_Val2_50_2_fu_1514_p2[32'd13];

assign tmp_230_fu_1554_p3 = p_Val2_52_2_fu_1548_p2[32'd7];

assign tmp_231_cast_fu_1191_p1 = tmp_216_reg_3398;

assign tmp_231_fu_2183_p3 = p_Val2_50_2_reg_3687[32'd14];

assign tmp_234_fu_1621_p3 = p_Val2_50_3_fu_1595_p2[32'd13];

assign tmp_235_fu_1635_p3 = p_Val2_52_3_fu_1629_p2[32'd7];

assign tmp_236_fu_2280_p3 = p_Val2_50_3_reg_3724[32'd14];

assign tmp_239_fu_1702_p3 = p_Val2_50_4_fu_1676_p2[32'd13];

assign tmp_240_fu_1716_p3 = p_Val2_52_4_fu_1710_p2[32'd7];

assign tmp_241_fu_2377_p3 = p_Val2_50_4_reg_3761[32'd14];

assign tmp_244_fu_1783_p3 = p_Val2_50_5_fu_1757_p2[32'd13];

assign tmp_245_fu_1797_p3 = p_Val2_52_5_fu_1791_p2[32'd7];

assign tmp_246_fu_2474_p3 = p_Val2_50_5_reg_3798[32'd14];

assign tmp_249_fu_1864_p3 = p_Val2_50_6_fu_1838_p2[32'd13];

assign tmp_250_fu_1878_p3 = p_Val2_52_6_fu_1872_p2[32'd7];

assign tmp_251_fu_2571_p3 = p_Val2_50_6_reg_3835[32'd14];

assign tmp_254_fu_1945_p3 = p_Val2_50_7_fu_1919_p2[32'd13];

assign tmp_255_fu_1959_p3 = p_Val2_52_7_fu_1953_p2[32'd7];

assign tmp_256_fu_2668_p3 = p_Val2_50_7_reg_3872[32'd14];

assign tmp_cast1_fu_927_p1 = h1_reg_608;

assign tmp_cast_fu_931_p1 = h1_reg_608;

assign tmp_fu_814_p3 = {{newIndex1_mid2_v_fu_804_p4}, {3'd0}};

assign tmp_mid2_fu_795_p1 = tmp_mid2_v_fu_788_p3;

assign tmp_mid2_v_fu_788_p3 = ((exitcond_flatten_reg_3248[0:0] === 1'b1) ? co_7_fu_775_p2 : co_phi_fu_566_p4);

assign tmp_s_fu_826_p3 = {{newIndex1_mid2_v_fu_804_p4}, {1'd0}};

assign underflow_1_fu_2172_p2 = (tmp_222_reg_3655 & tmp3_fu_2166_p2);

assign underflow_2_fu_2269_p2 = (tmp_227_reg_3692 & tmp5_fu_2263_p2);

assign underflow_3_fu_2366_p2 = (tmp_232_reg_3729 & tmp7_fu_2360_p2);

assign underflow_4_fu_2463_p2 = (tmp_237_reg_3766 & tmp9_fu_2457_p2);

assign underflow_5_fu_2560_p2 = (tmp_242_reg_3803 & tmp11_fu_2554_p2);

assign underflow_6_fu_2657_p2 = (tmp_247_reg_3840 & tmp13_fu_2651_p2);

assign underflow_7_fu_2754_p2 = (tmp_252_reg_3877 & tmp15_fu_2748_p2);

assign underflow_fu_2075_p2 = (tmp_217_reg_3618 & tmp1_fu_2069_p2);

assign underflow_not_1_fu_2799_p2 = (tmp4_fu_2795_p2 | p_38_i_i_1_reg_3934);

assign underflow_not_2_fu_2829_p2 = (tmp6_fu_2825_p2 | p_38_i_i_2_reg_3959);

assign underflow_not_3_fu_2859_p2 = (tmp8_fu_2855_p2 | p_38_i_i_3_reg_3984);

assign underflow_not_4_fu_2889_p2 = (tmp10_fu_2885_p2 | p_38_i_i_4_reg_4009);

assign underflow_not_5_fu_2919_p2 = (tmp12_fu_2915_p2 | p_38_i_i_5_reg_4034);

assign underflow_not_6_fu_2949_p2 = (tmp14_fu_2945_p2 | p_38_i_i_6_reg_4059);

assign underflow_not_7_fu_2979_p2 = (tmp16_fu_2975_p2 | p_38_i_i_7_reg_4084);

assign underflow_not_fu_2769_p2 = (tmp2_fu_2765_p2 | p_38_i_i_reg_3909);

assign w6_mid2_fu_3047_p3 = ((tmp_190_fu_3041_p2[0:0] === 1'b1) ? 4'd1 : w6_phi_fu_704_p4);

assign w_7_fu_867_p2 = (w_mid2_reg_3259 + 4'd1);

assign w_8_fu_1046_p2 = (w2_reg_620 + 4'd1);

assign w_9_fu_3156_p2 = (w6_mid2_reg_4129 + 4'd1);

assign w_mid2_fu_753_p3 = ((tmp_179_fu_747_p2[0:0] === 1'b1) ? 4'd1 : w_phi_fu_601_p4);

assign weight_0_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_1_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_2_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_3_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_4_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_5_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_6_V_address0 = tmp_223_cast_fu_1103_p1;

assign weight_7_V_address0 = tmp_223_cast_fu_1103_p1;

always @ (posedge ap_clk) begin
    tmp_cast1_reg_3304[7:4] <= 4'b0000;
    tmp_cast_reg_3309[10:4] <= 7'b0000000;
    tmp_121_cast1_reg_3317[11:4] <= 8'b00000000;
    tmp_121_cast_reg_3322[14:4] <= 11'b00000000000;
    tmp_122_cast_reg_3340[11:7] <= 5'b00000;
end

endmodule //subconv_1x1_8p_p
