// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_4_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_96_4x4_p_V_8_address0,
        buffer1_1_96_4x4_p_V_8_ce0,
        buffer1_1_96_4x4_p_V_8_we0,
        buffer1_1_96_4x4_p_V_8_d0,
        buffer1_1_96_4x4_p_V_8_q0,
        buffer1_1_96_4x4_p_V_8_address1,
        buffer1_1_96_4x4_p_V_8_ce1,
        buffer1_1_96_4x4_p_V_8_we1,
        buffer1_1_96_4x4_p_V_8_d1,
        buffer1_1_96_4x4_p_V_1_address0,
        buffer1_1_96_4x4_p_V_1_ce0,
        buffer1_1_96_4x4_p_V_1_we0,
        buffer1_1_96_4x4_p_V_1_d0,
        buffer1_1_96_4x4_p_V_1_q0,
        buffer1_1_96_4x4_p_V_1_address1,
        buffer1_1_96_4x4_p_V_1_ce1,
        buffer1_1_96_4x4_p_V_1_we1,
        buffer1_1_96_4x4_p_V_1_d1,
        buffer1_1_96_4x4_p_V_2_address0,
        buffer1_1_96_4x4_p_V_2_ce0,
        buffer1_1_96_4x4_p_V_2_we0,
        buffer1_1_96_4x4_p_V_2_d0,
        buffer1_1_96_4x4_p_V_2_q0,
        buffer1_1_96_4x4_p_V_2_address1,
        buffer1_1_96_4x4_p_V_2_ce1,
        buffer1_1_96_4x4_p_V_2_we1,
        buffer1_1_96_4x4_p_V_2_d1,
        buffer1_1_96_4x4_p_V_3_address0,
        buffer1_1_96_4x4_p_V_3_ce0,
        buffer1_1_96_4x4_p_V_3_we0,
        buffer1_1_96_4x4_p_V_3_d0,
        buffer1_1_96_4x4_p_V_3_q0,
        buffer1_1_96_4x4_p_V_3_address1,
        buffer1_1_96_4x4_p_V_3_ce1,
        buffer1_1_96_4x4_p_V_3_we1,
        buffer1_1_96_4x4_p_V_3_d1,
        buffer1_1_96_4x4_p_V_4_address0,
        buffer1_1_96_4x4_p_V_4_ce0,
        buffer1_1_96_4x4_p_V_4_we0,
        buffer1_1_96_4x4_p_V_4_d0,
        buffer1_1_96_4x4_p_V_4_q0,
        buffer1_1_96_4x4_p_V_4_address1,
        buffer1_1_96_4x4_p_V_4_ce1,
        buffer1_1_96_4x4_p_V_4_we1,
        buffer1_1_96_4x4_p_V_4_d1,
        buffer1_1_96_4x4_p_V_5_address0,
        buffer1_1_96_4x4_p_V_5_ce0,
        buffer1_1_96_4x4_p_V_5_we0,
        buffer1_1_96_4x4_p_V_5_d0,
        buffer1_1_96_4x4_p_V_5_q0,
        buffer1_1_96_4x4_p_V_5_address1,
        buffer1_1_96_4x4_p_V_5_ce1,
        buffer1_1_96_4x4_p_V_5_we1,
        buffer1_1_96_4x4_p_V_5_d1,
        buffer1_1_96_4x4_p_V_6_address0,
        buffer1_1_96_4x4_p_V_6_ce0,
        buffer1_1_96_4x4_p_V_6_we0,
        buffer1_1_96_4x4_p_V_6_d0,
        buffer1_1_96_4x4_p_V_6_q0,
        buffer1_1_96_4x4_p_V_6_address1,
        buffer1_1_96_4x4_p_V_6_ce1,
        buffer1_1_96_4x4_p_V_6_we1,
        buffer1_1_96_4x4_p_V_6_d1,
        buffer1_1_96_4x4_p_V_7_address0,
        buffer1_1_96_4x4_p_V_7_ce0,
        buffer1_1_96_4x4_p_V_7_we0,
        buffer1_1_96_4x4_p_V_7_d0,
        buffer1_1_96_4x4_p_V_7_q0,
        buffer1_1_96_4x4_p_V_7_address1,
        buffer1_1_96_4x4_p_V_7_ce1,
        buffer1_1_96_4x4_p_V_7_we1,
        buffer1_1_96_4x4_p_V_7_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state5 = 14'd4;
parameter    ap_ST_fsm_state6 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_state8 = 14'd32;
parameter    ap_ST_fsm_state9 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [10:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [10:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [10:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [10:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [10:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [10:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [10:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [10:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [8:0] buffer1_1_96_4x4_p_V_8_address0;
output   buffer1_1_96_4x4_p_V_8_ce0;
output   buffer1_1_96_4x4_p_V_8_we0;
output  [7:0] buffer1_1_96_4x4_p_V_8_d0;
input  [7:0] buffer1_1_96_4x4_p_V_8_q0;
output  [8:0] buffer1_1_96_4x4_p_V_8_address1;
output   buffer1_1_96_4x4_p_V_8_ce1;
output   buffer1_1_96_4x4_p_V_8_we1;
output  [7:0] buffer1_1_96_4x4_p_V_8_d1;
output  [8:0] buffer1_1_96_4x4_p_V_1_address0;
output   buffer1_1_96_4x4_p_V_1_ce0;
output   buffer1_1_96_4x4_p_V_1_we0;
output  [7:0] buffer1_1_96_4x4_p_V_1_d0;
input  [7:0] buffer1_1_96_4x4_p_V_1_q0;
output  [8:0] buffer1_1_96_4x4_p_V_1_address1;
output   buffer1_1_96_4x4_p_V_1_ce1;
output   buffer1_1_96_4x4_p_V_1_we1;
output  [7:0] buffer1_1_96_4x4_p_V_1_d1;
output  [8:0] buffer1_1_96_4x4_p_V_2_address0;
output   buffer1_1_96_4x4_p_V_2_ce0;
output   buffer1_1_96_4x4_p_V_2_we0;
output  [7:0] buffer1_1_96_4x4_p_V_2_d0;
input  [7:0] buffer1_1_96_4x4_p_V_2_q0;
output  [8:0] buffer1_1_96_4x4_p_V_2_address1;
output   buffer1_1_96_4x4_p_V_2_ce1;
output   buffer1_1_96_4x4_p_V_2_we1;
output  [7:0] buffer1_1_96_4x4_p_V_2_d1;
output  [8:0] buffer1_1_96_4x4_p_V_3_address0;
output   buffer1_1_96_4x4_p_V_3_ce0;
output   buffer1_1_96_4x4_p_V_3_we0;
output  [7:0] buffer1_1_96_4x4_p_V_3_d0;
input  [7:0] buffer1_1_96_4x4_p_V_3_q0;
output  [8:0] buffer1_1_96_4x4_p_V_3_address1;
output   buffer1_1_96_4x4_p_V_3_ce1;
output   buffer1_1_96_4x4_p_V_3_we1;
output  [7:0] buffer1_1_96_4x4_p_V_3_d1;
output  [8:0] buffer1_1_96_4x4_p_V_4_address0;
output   buffer1_1_96_4x4_p_V_4_ce0;
output   buffer1_1_96_4x4_p_V_4_we0;
output  [7:0] buffer1_1_96_4x4_p_V_4_d0;
input  [7:0] buffer1_1_96_4x4_p_V_4_q0;
output  [8:0] buffer1_1_96_4x4_p_V_4_address1;
output   buffer1_1_96_4x4_p_V_4_ce1;
output   buffer1_1_96_4x4_p_V_4_we1;
output  [7:0] buffer1_1_96_4x4_p_V_4_d1;
output  [8:0] buffer1_1_96_4x4_p_V_5_address0;
output   buffer1_1_96_4x4_p_V_5_ce0;
output   buffer1_1_96_4x4_p_V_5_we0;
output  [7:0] buffer1_1_96_4x4_p_V_5_d0;
input  [7:0] buffer1_1_96_4x4_p_V_5_q0;
output  [8:0] buffer1_1_96_4x4_p_V_5_address1;
output   buffer1_1_96_4x4_p_V_5_ce1;
output   buffer1_1_96_4x4_p_V_5_we1;
output  [7:0] buffer1_1_96_4x4_p_V_5_d1;
output  [8:0] buffer1_1_96_4x4_p_V_6_address0;
output   buffer1_1_96_4x4_p_V_6_ce0;
output   buffer1_1_96_4x4_p_V_6_we0;
output  [7:0] buffer1_1_96_4x4_p_V_6_d0;
input  [7:0] buffer1_1_96_4x4_p_V_6_q0;
output  [8:0] buffer1_1_96_4x4_p_V_6_address1;
output   buffer1_1_96_4x4_p_V_6_ce1;
output   buffer1_1_96_4x4_p_V_6_we1;
output  [7:0] buffer1_1_96_4x4_p_V_6_d1;
output  [8:0] buffer1_1_96_4x4_p_V_7_address0;
output   buffer1_1_96_4x4_p_V_7_ce0;
output   buffer1_1_96_4x4_p_V_7_we0;
output  [7:0] buffer1_1_96_4x4_p_V_7_d0;
input  [7:0] buffer1_1_96_4x4_p_V_7_q0;
output  [8:0] buffer1_1_96_4x4_p_V_7_address1;
output   buffer1_1_96_4x4_p_V_7_ce1;
output   buffer1_1_96_4x4_p_V_7_we1;
output  [7:0] buffer1_1_96_4x4_p_V_7_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg bias_V_ce0;
reg[8:0] buffer1_1_96_4x4_p_V_8_address0;
reg buffer1_1_96_4x4_p_V_8_ce0;
reg buffer1_1_96_4x4_p_V_8_we0;
reg[7:0] buffer1_1_96_4x4_p_V_8_d0;
reg buffer1_1_96_4x4_p_V_8_ce1;
reg buffer1_1_96_4x4_p_V_8_we1;
reg[8:0] buffer1_1_96_4x4_p_V_1_address0;
reg buffer1_1_96_4x4_p_V_1_ce0;
reg buffer1_1_96_4x4_p_V_1_we0;
reg[7:0] buffer1_1_96_4x4_p_V_1_d0;
reg buffer1_1_96_4x4_p_V_1_ce1;
reg buffer1_1_96_4x4_p_V_1_we1;
reg[8:0] buffer1_1_96_4x4_p_V_2_address0;
reg buffer1_1_96_4x4_p_V_2_ce0;
reg buffer1_1_96_4x4_p_V_2_we0;
reg[7:0] buffer1_1_96_4x4_p_V_2_d0;
reg buffer1_1_96_4x4_p_V_2_ce1;
reg buffer1_1_96_4x4_p_V_2_we1;
reg[8:0] buffer1_1_96_4x4_p_V_3_address0;
reg buffer1_1_96_4x4_p_V_3_ce0;
reg buffer1_1_96_4x4_p_V_3_we0;
reg[7:0] buffer1_1_96_4x4_p_V_3_d0;
reg buffer1_1_96_4x4_p_V_3_ce1;
reg buffer1_1_96_4x4_p_V_3_we1;
reg[8:0] buffer1_1_96_4x4_p_V_4_address0;
reg buffer1_1_96_4x4_p_V_4_ce0;
reg buffer1_1_96_4x4_p_V_4_we0;
reg[7:0] buffer1_1_96_4x4_p_V_4_d0;
reg buffer1_1_96_4x4_p_V_4_ce1;
reg buffer1_1_96_4x4_p_V_4_we1;
reg[8:0] buffer1_1_96_4x4_p_V_5_address0;
reg buffer1_1_96_4x4_p_V_5_ce0;
reg buffer1_1_96_4x4_p_V_5_we0;
reg[7:0] buffer1_1_96_4x4_p_V_5_d0;
reg buffer1_1_96_4x4_p_V_5_ce1;
reg buffer1_1_96_4x4_p_V_5_we1;
reg[8:0] buffer1_1_96_4x4_p_V_6_address0;
reg buffer1_1_96_4x4_p_V_6_ce0;
reg buffer1_1_96_4x4_p_V_6_we0;
reg[7:0] buffer1_1_96_4x4_p_V_6_d0;
reg buffer1_1_96_4x4_p_V_6_ce1;
reg buffer1_1_96_4x4_p_V_6_we1;
reg[8:0] buffer1_1_96_4x4_p_V_7_address0;
reg buffer1_1_96_4x4_p_V_7_ce0;
reg buffer1_1_96_4x4_p_V_7_we0;
reg[7:0] buffer1_1_96_4x4_p_V_7_d0;
reg buffer1_1_96_4x4_p_V_7_ce1;
reg buffer1_1_96_4x4_p_V_7_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten7_reg_545;
reg   [6:0] co_reg_556;
reg   [5:0] indvar_flatten_reg_567;
reg   [2:0] h_reg_578;
reg   [2:0] w_reg_590;
reg   [10:0] indvar_flatten8_reg_648;
reg   [6:0] co4_reg_659;
reg   [5:0] indvar_flatten9_reg_670;
reg   [2:0] h5_reg_681;
reg   [2:0] w6_reg_693;
wire   [0:0] exitcond_flatten7_fu_705_p2;
reg   [0:0] exitcond_flatten7_reg_3230;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten7_reg_3230;
wire   [10:0] indvar_flatten_next7_fu_711_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_723_p2;
reg   [0:0] exitcond_flatten_reg_3239;
wire   [6:0] tmp_mid2_v_fu_729_p3;
reg   [6:0] tmp_mid2_v_reg_3246;
wire   [2:0] tmp_318_fu_737_p1;
reg   [2:0] tmp_318_reg_3252;
reg   [2:0] ap_reg_pp0_iter1_tmp_318_reg_3252;
reg   [3:0] newIndex2_mid2_v_reg_3256;
wire   [5:0] indvar_flatten_next_fu_757_p3;
wire   [2:0] w_mid2_fu_836_p3;
reg   [2:0] w_mid2_reg_3267;
wire   [2:0] tmp_160_mid2_fu_844_p3;
reg   [2:0] tmp_160_mid2_reg_3272;
reg    ap_enable_reg_pp0_iter1;
wire   [8:0] tmp_247_fu_856_p2;
reg   [8:0] tmp_247_reg_3277;
wire   [6:0] tmp_319_fu_862_p1;
reg   [6:0] tmp_319_reg_3282;
wire   [2:0] w_13_fu_866_p2;
reg   [2:0] w_13_reg_3292;
wire   [0:0] exitcond2_fu_913_p2;
wire    ap_CS_fsm_state6;
wire   [8:0] tmp_cast3_fu_919_p1;
reg   [8:0] tmp_cast3_reg_3301;
wire   [11:0] tmp_cast_fu_923_p1;
reg   [11:0] tmp_cast_reg_3306;
wire   [9:0] tmp_161_cast1_fu_933_p1;
reg   [9:0] tmp_161_cast1_reg_3314;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond3_fu_927_p2;
wire   [12:0] tmp_161_cast_fu_937_p1;
reg   [12:0] tmp_161_cast_reg_3319;
wire   [2:0] h_4_fu_941_p2;
wire   [6:0] ci_3_fu_953_p2;
reg   [6:0] ci_3_reg_3332;
wire    ap_CS_fsm_state8;
wire   [11:0] tmp_164_cast_fu_959_p1;
reg   [11:0] tmp_164_cast_reg_3337;
wire   [0:0] exitcond4_fu_947_p2;
reg   [11:0] input_V_addr_reg_3342;
wire   [2:0] w_14_fu_1038_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond5_fu_1044_p2;
wire   [9:0] tmp_272_fu_1172_p2;
reg   [9:0] tmp_272_reg_3395;
wire   [6:0] co_15_7_fu_1177_p2;
reg   [6:0] co_15_7_reg_3400;
reg   [8:0] buffer1_1_96_4x4_p_V_23_reg_3405;
wire    ap_CS_fsm_state10;
reg   [8:0] buffer1_1_96_4x4_p_V_24_reg_3410;
reg   [8:0] buffer1_1_96_4x4_p_V_25_reg_3415;
reg   [8:0] buffer1_1_96_4x4_p_V_26_reg_3420;
reg   [8:0] buffer1_1_96_4x4_p_V_27_reg_3425;
reg   [8:0] buffer1_1_96_4x4_p_V_28_reg_3430;
reg   [8:0] buffer1_1_96_4x4_p_V_29_reg_3435;
reg   [8:0] buffer1_1_96_4x4_p_V_30_reg_3440;
reg   [7:0] weight_0_V_load_reg_3445;
reg   [7:0] input_V_load_reg_3450;
reg   [7:0] weight_1_V_load_reg_3455;
reg   [7:0] weight_2_V_load_reg_3460;
reg   [7:0] weight_3_V_load_reg_3465;
reg   [7:0] weight_4_V_load_reg_3470;
reg   [7:0] weight_5_V_load_reg_3475;
reg   [7:0] weight_6_V_load_reg_3480;
reg   [7:0] weight_7_V_load_reg_3485;
wire   [15:0] p_Val2_s_fu_1200_p2;
reg   [15:0] p_Val2_s_reg_3490;
wire    ap_CS_fsm_state11;
reg   [7:0] buffer1_1_96_4x4_p_V_31_reg_3495;
reg   [0:0] tmp_326_reg_3500;
wire   [15:0] p_Val2_57_1_fu_1217_p2;
reg   [15:0] p_Val2_57_1_reg_3505;
reg   [7:0] buffer1_1_96_4x4_p_V_32_reg_3510;
reg   [0:0] tmp_331_reg_3515;
wire   [15:0] p_Val2_57_2_fu_1234_p2;
reg   [15:0] p_Val2_57_2_reg_3520;
reg   [7:0] buffer1_1_96_4x4_p_V_33_reg_3525;
reg   [0:0] tmp_336_reg_3530;
wire   [15:0] p_Val2_57_3_fu_1251_p2;
reg   [15:0] p_Val2_57_3_reg_3535;
reg   [7:0] buffer1_1_96_4x4_p_V_34_reg_3540;
reg   [0:0] tmp_341_reg_3545;
wire   [15:0] p_Val2_57_4_fu_1268_p2;
reg   [15:0] p_Val2_57_4_reg_3550;
reg   [7:0] buffer1_1_96_4x4_p_V_35_reg_3555;
reg   [0:0] tmp_346_reg_3560;
wire   [15:0] p_Val2_57_5_fu_1285_p2;
reg   [15:0] p_Val2_57_5_reg_3565;
reg   [7:0] buffer1_1_96_4x4_p_V_36_reg_3570;
reg   [0:0] tmp_351_reg_3575;
wire   [15:0] p_Val2_57_6_fu_1302_p2;
reg   [15:0] p_Val2_57_6_reg_3580;
reg   [7:0] buffer1_1_96_4x4_p_V_37_reg_3585;
reg   [0:0] tmp_356_reg_3590;
wire   [15:0] p_Val2_57_7_fu_1319_p2;
reg   [15:0] p_Val2_57_7_reg_3595;
reg   [7:0] buffer1_1_96_4x4_p_V_38_reg_3600;
reg   [0:0] tmp_361_reg_3605;
wire   [15:0] p_Val2_7_fu_1344_p2;
reg   [15:0] p_Val2_7_reg_3610;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_325_reg_3615;
wire   [7:0] p_Val2_9_fu_1378_p2;
reg   [7:0] p_Val2_9_reg_3622;
wire   [0:0] tmp_328_fu_1384_p3;
reg   [0:0] tmp_328_reg_3628;
wire   [0:0] carry_9_fu_1398_p2;
reg   [0:0] carry_9_reg_3634;
reg   [1:0] tmp_168_reg_3641;
wire   [15:0] p_Val2_58_1_fu_1425_p2;
reg   [15:0] p_Val2_58_1_reg_3647;
reg   [0:0] tmp_330_reg_3652;
wire   [7:0] p_Val2_60_1_fu_1459_p2;
reg   [7:0] p_Val2_60_1_reg_3659;
wire   [0:0] tmp_333_fu_1465_p3;
reg   [0:0] tmp_333_reg_3665;
wire   [0:0] carry_9_1_fu_1479_p2;
reg   [0:0] carry_9_1_reg_3671;
reg   [1:0] tmp_171_reg_3678;
wire   [15:0] p_Val2_58_2_fu_1506_p2;
reg   [15:0] p_Val2_58_2_reg_3684;
reg   [0:0] tmp_335_reg_3689;
wire   [7:0] p_Val2_60_2_fu_1540_p2;
reg   [7:0] p_Val2_60_2_reg_3696;
wire   [0:0] tmp_338_fu_1546_p3;
reg   [0:0] tmp_338_reg_3702;
wire   [0:0] carry_9_2_fu_1560_p2;
reg   [0:0] carry_9_2_reg_3708;
reg   [1:0] tmp_172_reg_3715;
wire   [15:0] p_Val2_58_3_fu_1587_p2;
reg   [15:0] p_Val2_58_3_reg_3721;
reg   [0:0] tmp_340_reg_3726;
wire   [7:0] p_Val2_60_3_fu_1621_p2;
reg   [7:0] p_Val2_60_3_reg_3733;
wire   [0:0] tmp_343_fu_1627_p3;
reg   [0:0] tmp_343_reg_3739;
wire   [0:0] carry_9_3_fu_1641_p2;
reg   [0:0] carry_9_3_reg_3745;
reg   [1:0] tmp_173_reg_3752;
wire   [15:0] p_Val2_58_4_fu_1668_p2;
reg   [15:0] p_Val2_58_4_reg_3758;
reg   [0:0] tmp_345_reg_3763;
wire   [7:0] p_Val2_60_4_fu_1702_p2;
reg   [7:0] p_Val2_60_4_reg_3770;
wire   [0:0] tmp_348_fu_1708_p3;
reg   [0:0] tmp_348_reg_3776;
wire   [0:0] carry_9_4_fu_1722_p2;
reg   [0:0] carry_9_4_reg_3782;
reg   [1:0] tmp_174_reg_3789;
wire   [15:0] p_Val2_58_5_fu_1749_p2;
reg   [15:0] p_Val2_58_5_reg_3795;
reg   [0:0] tmp_350_reg_3800;
wire   [7:0] p_Val2_60_5_fu_1783_p2;
reg   [7:0] p_Val2_60_5_reg_3807;
wire   [0:0] tmp_353_fu_1789_p3;
reg   [0:0] tmp_353_reg_3813;
wire   [0:0] carry_9_5_fu_1803_p2;
reg   [0:0] carry_9_5_reg_3819;
reg   [1:0] tmp_175_reg_3826;
wire   [15:0] p_Val2_58_6_fu_1830_p2;
reg   [15:0] p_Val2_58_6_reg_3832;
reg   [0:0] tmp_355_reg_3837;
wire   [7:0] p_Val2_60_6_fu_1864_p2;
reg   [7:0] p_Val2_60_6_reg_3844;
wire   [0:0] tmp_358_fu_1870_p3;
reg   [0:0] tmp_358_reg_3850;
wire   [0:0] carry_9_6_fu_1884_p2;
reg   [0:0] carry_9_6_reg_3856;
reg   [1:0] tmp_176_reg_3863;
wire   [15:0] p_Val2_58_7_fu_1911_p2;
reg   [15:0] p_Val2_58_7_reg_3869;
reg   [0:0] tmp_360_reg_3874;
wire   [7:0] p_Val2_60_7_fu_1945_p2;
reg   [7:0] p_Val2_60_7_reg_3881;
wire   [0:0] tmp_363_fu_1951_p3;
reg   [0:0] tmp_363_reg_3887;
wire   [0:0] carry_9_7_fu_1965_p2;
reg   [0:0] carry_9_7_reg_3893;
reg   [1:0] tmp_177_reg_3900;
wire   [0:0] p_38_i_i_fu_2023_p2;
reg   [0:0] p_38_i_i_reg_3906;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_170_fu_2039_p2;
reg   [0:0] tmp_170_reg_3911;
wire   [0:0] brmerge40_demorgan_i_fu_2050_p2;
reg   [0:0] brmerge40_demorgan_i_reg_3916;
wire   [0:0] underflow_fu_2067_p2;
reg   [0:0] underflow_reg_3921;
wire   [0:0] brmerge_i_i_i_fu_2072_p2;
reg   [0:0] brmerge_i_i_i_reg_3926;
wire   [0:0] p_38_i_i_1_fu_2120_p2;
reg   [0:0] p_38_i_i_1_reg_3931;
wire   [0:0] tmp_258_1_fu_2136_p2;
reg   [0:0] tmp_258_1_reg_3936;
wire   [0:0] brmerge40_demorgan_i_11_fu_2147_p2;
reg   [0:0] brmerge40_demorgan_i_11_reg_3941;
wire   [0:0] underflow_1_fu_2164_p2;
reg   [0:0] underflow_1_reg_3946;
wire   [0:0] brmerge_i_i_i_1_fu_2169_p2;
reg   [0:0] brmerge_i_i_i_1_reg_3951;
wire   [0:0] p_38_i_i_2_fu_2217_p2;
reg   [0:0] p_38_i_i_2_reg_3956;
wire   [0:0] tmp_258_2_fu_2233_p2;
reg   [0:0] tmp_258_2_reg_3961;
wire   [0:0] brmerge40_demorgan_i_5_fu_2244_p2;
reg   [0:0] brmerge40_demorgan_i_5_reg_3966;
wire   [0:0] underflow_2_fu_2261_p2;
reg   [0:0] underflow_2_reg_3971;
wire   [0:0] brmerge_i_i_i_2_fu_2266_p2;
reg   [0:0] brmerge_i_i_i_2_reg_3976;
wire   [0:0] p_38_i_i_3_fu_2314_p2;
reg   [0:0] p_38_i_i_3_reg_3981;
wire   [0:0] tmp_258_3_fu_2330_p2;
reg   [0:0] tmp_258_3_reg_3986;
wire   [0:0] brmerge40_demorgan_i_6_fu_2341_p2;
reg   [0:0] brmerge40_demorgan_i_6_reg_3991;
wire   [0:0] underflow_3_fu_2358_p2;
reg   [0:0] underflow_3_reg_3996;
wire   [0:0] brmerge_i_i_i_3_fu_2363_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4001;
wire   [0:0] p_38_i_i_4_fu_2411_p2;
reg   [0:0] p_38_i_i_4_reg_4006;
wire   [0:0] tmp_258_4_fu_2427_p2;
reg   [0:0] tmp_258_4_reg_4011;
wire   [0:0] brmerge40_demorgan_i_7_fu_2438_p2;
reg   [0:0] brmerge40_demorgan_i_7_reg_4016;
wire   [0:0] underflow_4_fu_2455_p2;
reg   [0:0] underflow_4_reg_4021;
wire   [0:0] brmerge_i_i_i_4_fu_2460_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4026;
wire   [0:0] p_38_i_i_5_fu_2508_p2;
reg   [0:0] p_38_i_i_5_reg_4031;
wire   [0:0] tmp_258_5_fu_2524_p2;
reg   [0:0] tmp_258_5_reg_4036;
wire   [0:0] brmerge40_demorgan_i_8_fu_2535_p2;
reg   [0:0] brmerge40_demorgan_i_8_reg_4041;
wire   [0:0] underflow_5_fu_2552_p2;
reg   [0:0] underflow_5_reg_4046;
wire   [0:0] brmerge_i_i_i_5_fu_2557_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4051;
wire   [0:0] p_38_i_i_6_fu_2605_p2;
reg   [0:0] p_38_i_i_6_reg_4056;
wire   [0:0] tmp_258_6_fu_2621_p2;
reg   [0:0] tmp_258_6_reg_4061;
wire   [0:0] brmerge40_demorgan_i_9_fu_2632_p2;
reg   [0:0] brmerge40_demorgan_i_9_reg_4066;
wire   [0:0] underflow_6_fu_2649_p2;
reg   [0:0] underflow_6_reg_4071;
wire   [0:0] brmerge_i_i_i_6_fu_2654_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4076;
wire   [0:0] p_38_i_i_7_fu_2702_p2;
reg   [0:0] p_38_i_i_7_reg_4081;
wire   [0:0] tmp_258_7_fu_2718_p2;
reg   [0:0] tmp_258_7_reg_4086;
wire   [0:0] brmerge40_demorgan_i_10_fu_2729_p2;
reg   [0:0] brmerge40_demorgan_i_10_reg_4091;
wire   [0:0] underflow_7_fu_2746_p2;
reg   [0:0] underflow_7_reg_4096;
wire   [0:0] brmerge_i_i_i_7_fu_2751_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4101;
wire   [0:0] exitcond_flatten9_fu_2997_p2;
reg   [0:0] exitcond_flatten9_reg_4106;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_4106;
wire   [10:0] indvar_flatten_next9_fu_3003_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten4_fu_3015_p2;
reg   [0:0] exitcond_flatten4_reg_4115;
wire   [6:0] arrayNo_mid2_v_fu_3021_p3;
reg   [6:0] arrayNo_mid2_v_reg_4122;
wire   [2:0] tmp_320_fu_3029_p1;
reg   [2:0] tmp_320_reg_4127;
reg   [2:0] ap_reg_pp1_iter1_tmp_320_reg_4127;
reg   [2:0] ap_reg_pp1_iter2_tmp_320_reg_4127;
reg   [3:0] newIndex4_mid2_v_reg_4132;
wire   [5:0] indvar_flatten_next8_fu_3049_p3;
wire   [2:0] w6_mid2_fu_3124_p3;
reg   [2:0] w6_mid2_reg_4143;
wire   [2:0] tmp_163_mid2_fu_3132_p3;
reg   [2:0] tmp_163_mid2_reg_4148;
reg    ap_enable_reg_pp1_iter1;
wire   [8:0] tmp_254_fu_3144_p2;
reg   [8:0] tmp_254_reg_4153;
wire   [6:0] tmp_321_fu_3150_p1;
reg   [6:0] tmp_321_reg_4158;
wire   [2:0] w_15_fu_3154_p2;
reg   [2:0] w_15_reg_4163;
reg   [8:0] buffer1_1_96_4x4_p_V_39_reg_4168;
reg   [8:0] buffer1_1_96_4x4_p_V_40_reg_4174;
reg   [8:0] buffer1_1_96_4x4_p_V_41_reg_4180;
reg   [8:0] buffer1_1_96_4x4_p_V_42_reg_4186;
reg   [8:0] buffer1_1_96_4x4_p_V_43_reg_4192;
reg   [8:0] buffer1_1_96_4x4_p_V_44_reg_4198;
reg   [8:0] buffer1_1_96_4x4_p_V_45_reg_4204;
reg   [8:0] buffer1_1_96_4x4_p_V_46_reg_4210;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [6:0] co_phi_fu_560_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [2:0] h_phi_fu_582_p4;
reg   [2:0] w_phi_fu_594_p4;
reg   [2:0] h1_reg_602;
wire    ap_CS_fsm_state5;
reg   [2:0] w2_reg_614;
reg   [6:0] ci_reg_626;
reg   [6:0] co3_reg_637;
wire    ap_CS_fsm_state14;
reg   [6:0] co4_phi_fu_663_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [2:0] h5_phi_fu_685_p4;
reg   [2:0] w6_phi_fu_697_p4;
wire   [63:0] tmp_mid2_fu_772_p1;
wire   [63:0] tmp_276_cast_fu_901_p1;
wire   [63:0] tmp_293_cast_fu_1033_p1;
wire  signed [63:0] tmp_297_cast_fu_1095_p1;
wire   [63:0] tmp_305_cast_fu_1183_p1;
wire   [63:0] tmp_285_cast_fu_3189_p1;
wire   [7:0] this_assign_1_6_fu_2958_p3;
wire   [0:0] tmp_322_fu_3222_p3;
wire   [7:0] this_assign_1_5_fu_2928_p3;
wire   [7:0] this_assign_1_4_fu_2898_p3;
wire   [7:0] this_assign_1_3_fu_2868_p3;
wire   [7:0] this_assign_1_2_fu_2838_p3;
wire   [7:0] this_assign_1_1_fu_2808_p3;
wire   [7:0] this_assign_1_fu_2778_p3;
wire   [7:0] this_assign_1_7_fu_2988_p3;
wire   [6:0] co_13_fu_717_p2;
wire   [5:0] indvar_flatten_op_fu_751_p2;
wire   [6:0] tmp_fu_776_p3;
wire   [4:0] tmp_s_fu_787_p3;
wire   [7:0] p_shl2_cast_fu_783_p1;
wire   [7:0] p_shl3_cast_fu_794_p1;
wire   [7:0] tmp_245_fu_798_p2;
wire   [0:0] exitcond_fu_813_p2;
wire   [0:0] not_exitcond_flatten_fu_808_p2;
wire   [2:0] h_mid_fu_765_p3;
wire   [0:0] exitcond14_mid_fu_819_p2;
wire   [0:0] tmp_246_fu_831_p2;
wire   [2:0] h_13_fu_825_p2;
wire   [8:0] tmp_160_mid2_cast_fu_852_p1;
wire  signed [8:0] tmp_270_cast_fu_804_p1;
wire   [9:0] p_shl_cast_fu_872_p3;
wire   [9:0] p_shl1_cast_fu_879_p3;
wire   [9:0] tmp_158_cast_fu_892_p1;
wire   [9:0] tmp_248_fu_886_p2;
wire   [9:0] tmp_249_fu_895_p2;
wire   [9:0] tmp_257_fu_963_p3;
wire   [7:0] tmp_258_fu_975_p3;
wire   [10:0] p_shl6_cast_fu_971_p1;
wire   [10:0] p_shl7_cast_fu_983_p1;
wire   [10:0] tmp_259_fu_987_p2;
wire  signed [11:0] tmp_288_cast_fu_993_p1;
wire   [11:0] tmp_260_fu_997_p2;
wire   [9:0] tmp_323_fu_1002_p1;
wire   [12:0] p_shl4_cast_fu_1006_p3;
wire   [12:0] p_shl5_cast_fu_1014_p3;
wire   [12:0] tmp_261_fu_1022_p2;
wire   [12:0] tmp_262_fu_1028_p2;
wire   [3:0] newIndex5_fu_1050_p4;
wire   [10:0] tmp_263_fu_1060_p3;
wire   [8:0] tmp_264_fu_1072_p3;
wire   [11:0] p_shl12_cast_fu_1068_p1;
wire   [11:0] p_shl13_cast_fu_1080_p1;
wire   [11:0] tmp_265_fu_1084_p2;
wire   [11:0] tmp_266_fu_1090_p2;
wire   [6:0] tmp_267_fu_1107_p3;
wire   [4:0] tmp_268_fu_1119_p3;
wire   [7:0] p_shl10_cast_fu_1115_p1;
wire   [7:0] p_shl11_cast_fu_1127_p1;
wire   [7:0] tmp_269_fu_1131_p2;
wire  signed [8:0] tmp_300_cast_fu_1137_p1;
wire   [8:0] tmp_270_fu_1141_p2;
wire   [6:0] tmp_324_fu_1146_p1;
wire   [9:0] p_shl8_cast_fu_1150_p3;
wire   [9:0] p_shl9_cast_fu_1158_p3;
wire   [9:0] tmp_271_fu_1166_p2;
wire  signed [7:0] p_Val2_s_fu_1200_p0;
wire  signed [7:0] p_Val2_s_fu_1200_p1;
wire  signed [15:0] OP2_V_fu_1197_p1;
wire  signed [7:0] p_Val2_57_1_fu_1217_p0;
wire  signed [7:0] p_Val2_57_1_fu_1217_p1;
wire  signed [7:0] p_Val2_57_2_fu_1234_p0;
wire  signed [7:0] p_Val2_57_2_fu_1234_p1;
wire  signed [7:0] p_Val2_57_3_fu_1251_p0;
wire  signed [7:0] p_Val2_57_3_fu_1251_p1;
wire  signed [7:0] p_Val2_57_4_fu_1268_p0;
wire  signed [7:0] p_Val2_57_4_fu_1268_p1;
wire  signed [7:0] p_Val2_57_5_fu_1285_p0;
wire  signed [7:0] p_Val2_57_5_fu_1285_p1;
wire  signed [7:0] p_Val2_57_6_fu_1302_p0;
wire  signed [7:0] p_Val2_57_6_fu_1302_p1;
wire  signed [7:0] p_Val2_57_7_fu_1319_p0;
wire  signed [7:0] p_Val2_57_7_fu_1319_p1;
wire   [13:0] tmp_165_fu_1333_p3;
wire  signed [15:0] tmp_194_cast_fu_1340_p1;
wire   [7:0] p_Val2_8_fu_1357_p4;
wire   [7:0] tmp_166_fu_1367_p1;
wire   [0:0] tmp_327_fu_1370_p3;
wire   [0:0] tmp_167_fu_1392_p2;
wire   [13:0] tmp_245_1_fu_1414_p3;
wire  signed [15:0] tmp_245_1_cast_fu_1421_p1;
wire   [7:0] p_Val2_59_1_fu_1438_p4;
wire   [7:0] tmp_249_1_fu_1448_p1;
wire   [0:0] tmp_332_fu_1451_p3;
wire   [0:0] tmp_253_1_fu_1473_p2;
wire   [13:0] tmp_245_2_fu_1495_p3;
wire  signed [15:0] tmp_245_2_cast_fu_1502_p1;
wire   [7:0] p_Val2_59_2_fu_1519_p4;
wire   [7:0] tmp_249_2_fu_1529_p1;
wire   [0:0] tmp_337_fu_1532_p3;
wire   [0:0] tmp_253_2_fu_1554_p2;
wire   [13:0] tmp_245_3_fu_1576_p3;
wire  signed [15:0] tmp_245_3_cast_fu_1583_p1;
wire   [7:0] p_Val2_59_3_fu_1600_p4;
wire   [7:0] tmp_249_3_fu_1610_p1;
wire   [0:0] tmp_342_fu_1613_p3;
wire   [0:0] tmp_253_3_fu_1635_p2;
wire   [13:0] tmp_245_4_fu_1657_p3;
wire  signed [15:0] tmp_245_4_cast_fu_1664_p1;
wire   [7:0] p_Val2_59_4_fu_1681_p4;
wire   [7:0] tmp_249_4_fu_1691_p1;
wire   [0:0] tmp_347_fu_1694_p3;
wire   [0:0] tmp_253_4_fu_1716_p2;
wire   [13:0] tmp_245_5_fu_1738_p3;
wire  signed [15:0] tmp_245_5_cast_fu_1745_p1;
wire   [7:0] p_Val2_59_5_fu_1762_p4;
wire   [7:0] tmp_249_5_fu_1772_p1;
wire   [0:0] tmp_352_fu_1775_p3;
wire   [0:0] tmp_253_5_fu_1797_p2;
wire   [13:0] tmp_245_6_fu_1819_p3;
wire  signed [15:0] tmp_245_6_cast_fu_1826_p1;
wire   [7:0] p_Val2_59_6_fu_1843_p4;
wire   [7:0] tmp_249_6_fu_1853_p1;
wire   [0:0] tmp_357_fu_1856_p3;
wire   [0:0] tmp_253_6_fu_1878_p2;
wire   [13:0] tmp_245_7_fu_1900_p3;
wire  signed [15:0] tmp_245_7_cast_fu_1907_p1;
wire   [7:0] p_Val2_59_7_fu_1924_p4;
wire   [7:0] tmp_249_7_fu_1934_p1;
wire   [0:0] tmp_362_fu_1937_p3;
wire   [0:0] tmp_253_7_fu_1959_p2;
wire   [0:0] Range1_all_ones_fu_1988_p2;
wire   [0:0] Range1_all_zeros_fu_1993_p2;
wire   [0:0] tmp_329_fu_1981_p3;
wire   [0:0] tmp_169_fu_2005_p2;
wire   [0:0] p_41_i_i_fu_2011_p2;
wire   [0:0] deleted_zeros_fu_1998_p3;
wire   [0:0] p_not_i_i_fu_2028_p2;
wire   [0:0] brmerge_i_i_fu_2034_p2;
wire   [0:0] deleted_ones_fu_2016_p3;
wire   [0:0] tmp1_demorgan_fu_2055_p2;
wire   [0:0] tmp1_fu_2061_p2;
wire   [0:0] overflow_fu_2044_p2;
wire   [0:0] Range1_all_ones_1_fu_2085_p2;
wire   [0:0] Range1_all_zeros_1_fu_2090_p2;
wire   [0:0] tmp_334_fu_2078_p3;
wire   [0:0] tmp_256_1_fu_2102_p2;
wire   [0:0] p_41_i_i_1_fu_2108_p2;
wire   [0:0] deleted_zeros_1_fu_2095_p3;
wire   [0:0] p_not_i_i_1_fu_2125_p2;
wire   [0:0] brmerge_i_i_1_fu_2131_p2;
wire   [0:0] deleted_ones_1_fu_2113_p3;
wire   [0:0] tmp3_demorgan_fu_2152_p2;
wire   [0:0] tmp3_fu_2158_p2;
wire   [0:0] overflow_1_fu_2141_p2;
wire   [0:0] Range1_all_ones_2_fu_2182_p2;
wire   [0:0] Range1_all_zeros_2_fu_2187_p2;
wire   [0:0] tmp_339_fu_2175_p3;
wire   [0:0] tmp_256_2_fu_2199_p2;
wire   [0:0] p_41_i_i_2_fu_2205_p2;
wire   [0:0] deleted_zeros_2_fu_2192_p3;
wire   [0:0] p_not_i_i_2_fu_2222_p2;
wire   [0:0] brmerge_i_i_2_fu_2228_p2;
wire   [0:0] deleted_ones_2_fu_2210_p3;
wire   [0:0] tmp5_demorgan_fu_2249_p2;
wire   [0:0] tmp5_fu_2255_p2;
wire   [0:0] overflow_2_fu_2238_p2;
wire   [0:0] Range1_all_ones_3_fu_2279_p2;
wire   [0:0] Range1_all_zeros_3_fu_2284_p2;
wire   [0:0] tmp_344_fu_2272_p3;
wire   [0:0] tmp_256_3_fu_2296_p2;
wire   [0:0] p_41_i_i_3_fu_2302_p2;
wire   [0:0] deleted_zeros_3_fu_2289_p3;
wire   [0:0] p_not_i_i_3_fu_2319_p2;
wire   [0:0] brmerge_i_i_3_fu_2325_p2;
wire   [0:0] deleted_ones_3_fu_2307_p3;
wire   [0:0] tmp7_demorgan_fu_2346_p2;
wire   [0:0] tmp7_fu_2352_p2;
wire   [0:0] overflow_3_fu_2335_p2;
wire   [0:0] Range1_all_ones_4_fu_2376_p2;
wire   [0:0] Range1_all_zeros_4_fu_2381_p2;
wire   [0:0] tmp_349_fu_2369_p3;
wire   [0:0] tmp_256_4_fu_2393_p2;
wire   [0:0] p_41_i_i_4_fu_2399_p2;
wire   [0:0] deleted_zeros_4_fu_2386_p3;
wire   [0:0] p_not_i_i_4_fu_2416_p2;
wire   [0:0] brmerge_i_i_4_fu_2422_p2;
wire   [0:0] deleted_ones_4_fu_2404_p3;
wire   [0:0] tmp9_demorgan_fu_2443_p2;
wire   [0:0] tmp9_fu_2449_p2;
wire   [0:0] overflow_4_fu_2432_p2;
wire   [0:0] Range1_all_ones_5_fu_2473_p2;
wire   [0:0] Range1_all_zeros_5_fu_2478_p2;
wire   [0:0] tmp_354_fu_2466_p3;
wire   [0:0] tmp_256_5_fu_2490_p2;
wire   [0:0] p_41_i_i_5_fu_2496_p2;
wire   [0:0] deleted_zeros_5_fu_2483_p3;
wire   [0:0] p_not_i_i_5_fu_2513_p2;
wire   [0:0] brmerge_i_i_5_fu_2519_p2;
wire   [0:0] deleted_ones_5_fu_2501_p3;
wire   [0:0] tmp11_demorgan_fu_2540_p2;
wire   [0:0] tmp11_fu_2546_p2;
wire   [0:0] overflow_5_fu_2529_p2;
wire   [0:0] Range1_all_ones_6_fu_2570_p2;
wire   [0:0] Range1_all_zeros_6_fu_2575_p2;
wire   [0:0] tmp_359_fu_2563_p3;
wire   [0:0] tmp_256_6_fu_2587_p2;
wire   [0:0] p_41_i_i_6_fu_2593_p2;
wire   [0:0] deleted_zeros_6_fu_2580_p3;
wire   [0:0] p_not_i_i_6_fu_2610_p2;
wire   [0:0] brmerge_i_i_6_fu_2616_p2;
wire   [0:0] deleted_ones_6_fu_2598_p3;
wire   [0:0] tmp13_demorgan_fu_2637_p2;
wire   [0:0] tmp13_fu_2643_p2;
wire   [0:0] overflow_6_fu_2626_p2;
wire   [0:0] Range1_all_ones_7_fu_2667_p2;
wire   [0:0] Range1_all_zeros_7_fu_2672_p2;
wire   [0:0] tmp_364_fu_2660_p3;
wire   [0:0] tmp_256_7_fu_2684_p2;
wire   [0:0] p_41_i_i_7_fu_2690_p2;
wire   [0:0] deleted_zeros_7_fu_2677_p3;
wire   [0:0] p_not_i_i_7_fu_2707_p2;
wire   [0:0] brmerge_i_i_7_fu_2713_p2;
wire   [0:0] deleted_ones_7_fu_2695_p3;
wire   [0:0] tmp15_demorgan_fu_2734_p2;
wire   [0:0] tmp15_fu_2740_p2;
wire   [0:0] overflow_7_fu_2723_p2;
wire   [0:0] tmp2_fu_2757_p2;
wire   [0:0] underflow_not_fu_2761_p2;
wire   [7:0] p_Val2_60_mux_fu_2766_p3;
wire   [7:0] p_Val2_s_97_fu_2772_p3;
wire   [0:0] tmp4_fu_2787_p2;
wire   [0:0] underflow_not_1_fu_2791_p2;
wire   [7:0] p_Val2_60_mux_1_fu_2796_p3;
wire   [7:0] p_Val2_60_1_98_fu_2802_p3;
wire   [0:0] tmp6_fu_2817_p2;
wire   [0:0] underflow_not_2_fu_2821_p2;
wire   [7:0] p_Val2_60_mux_2_fu_2826_p3;
wire   [7:0] p_Val2_60_2_99_fu_2832_p3;
wire   [0:0] tmp8_fu_2847_p2;
wire   [0:0] underflow_not_3_fu_2851_p2;
wire   [7:0] p_Val2_60_mux_3_fu_2856_p3;
wire   [7:0] p_Val2_60_3_100_fu_2862_p3;
wire   [0:0] tmp10_fu_2877_p2;
wire   [0:0] underflow_not_4_fu_2881_p2;
wire   [7:0] p_Val2_60_mux_4_fu_2886_p3;
wire   [7:0] p_Val2_60_4_101_fu_2892_p3;
wire   [0:0] tmp12_fu_2907_p2;
wire   [0:0] underflow_not_5_fu_2911_p2;
wire   [7:0] p_Val2_60_mux_5_fu_2916_p3;
wire   [7:0] p_Val2_60_5_102_fu_2922_p3;
wire   [0:0] tmp14_fu_2937_p2;
wire   [0:0] underflow_not_6_fu_2941_p2;
wire   [7:0] p_Val2_60_mux_6_fu_2946_p3;
wire   [7:0] p_Val2_60_6_103_fu_2952_p3;
wire   [0:0] tmp16_fu_2967_p2;
wire   [0:0] underflow_not_7_fu_2971_p2;
wire   [7:0] p_Val2_60_mux_7_fu_2976_p3;
wire   [7:0] p_Val2_60_7_104_fu_2982_p3;
wire   [6:0] co_15_fu_3009_p2;
wire   [5:0] indvar_flatten21_op_fu_3043_p2;
wire   [6:0] tmp_250_fu_3064_p3;
wire   [4:0] tmp_251_fu_3075_p3;
wire   [7:0] p_shl16_cast_fu_3071_p1;
wire   [7:0] p_shl17_cast_fu_3082_p1;
wire   [7:0] tmp_252_fu_3086_p2;
wire   [0:0] exitcond6_fu_3101_p2;
wire   [0:0] not_exitcond_flatten_6_fu_3096_p2;
wire   [2:0] h5_mid_fu_3057_p3;
wire   [0:0] exitcond_mid_fu_3107_p2;
wire   [0:0] tmp_253_fu_3119_p2;
wire   [2:0] h_3_fu_3113_p2;
wire   [8:0] tmp_163_mid2_cast_fu_3140_p1;
wire  signed [8:0] tmp_279_cast_fu_3092_p1;
wire   [9:0] p_shl14_cast_fu_3160_p3;
wire   [9:0] p_shl15_cast_fu_3167_p3;
wire   [9:0] tmp_160_cast_fu_3180_p1;
wire   [9:0] tmp_255_fu_3174_p2;
wire   [9:0] tmp_256_fu_3183_p2;
wire   [7:0] tmp_162_fu_3201_p10;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U245(
    .din1(buffer1_1_96_4x4_p_V_8_q0),
    .din2(buffer1_1_96_4x4_p_V_1_q0),
    .din3(buffer1_1_96_4x4_p_V_2_q0),
    .din4(buffer1_1_96_4x4_p_V_3_q0),
    .din5(buffer1_1_96_4x4_p_V_4_q0),
    .din6(buffer1_1_96_4x4_p_V_5_q0),
    .din7(buffer1_1_96_4x4_p_V_6_q0),
    .din8(buffer1_1_96_4x4_p_V_7_q0),
    .din9(ap_reg_pp1_iter2_tmp_320_reg_4127),
    .dout(tmp_162_fu_3201_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond5_fu_1044_p2))) begin
        ci_reg_626 <= ci_3_reg_3332;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond3_fu_927_p2))) begin
        ci_reg_626 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_947_p2))) begin
        co3_reg_637 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co3_reg_637 <= co_15_7_reg_3400;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
        co4_reg_659 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_4106) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        co4_reg_659 <= arrayNo_mid2_v_reg_4122;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_reg_3230 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        co_reg_556 <= tmp_mid2_v_reg_3246;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_556 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_602 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond3_fu_927_p2 == 1'd1))) begin
        h1_reg_602 <= h_4_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
        h5_reg_681 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4106) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_681 <= tmp_163_mid2_reg_4148;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_3230 == 1'd0))) begin
        h_reg_578 <= tmp_160_mid2_reg_3272;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_578 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_705_p2 == 1'd0))) begin
        indvar_flatten7_reg_545 <= indvar_flatten_next7_fu_711_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten7_reg_545 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
        indvar_flatten8_reg_648 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_2997_p2))) begin
        indvar_flatten8_reg_648 <= indvar_flatten_next9_fu_3003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
        indvar_flatten9_reg_670 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_2997_p2))) begin
        indvar_flatten9_reg_670 <= indvar_flatten_next8_fu_3049_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_705_p2 == 1'd0))) begin
        indvar_flatten_reg_567 <= indvar_flatten_next_fu_757_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_567 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond2_fu_913_p2))) begin
        w2_reg_614 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_947_p2))) begin
        w2_reg_614 <= w_14_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
        w6_reg_693 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4106) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_reg_693 <= w_15_reg_4163;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_3230 == 1'd0))) begin
        w_reg_590 <= w_13_reg_3292;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_590 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten7_reg_3230 <= exitcond_flatten7_reg_3230;
        ap_reg_pp0_iter1_tmp_318_reg_3252 <= tmp_318_reg_3252;
        exitcond_flatten7_reg_3230 <= exitcond_flatten7_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_4106 <= exitcond_flatten9_reg_4106;
        ap_reg_pp1_iter1_tmp_320_reg_4127 <= tmp_320_reg_4127;
        exitcond_flatten9_reg_4106 <= exitcond_flatten9_fu_2997_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_tmp_320_reg_4127 <= ap_reg_pp1_iter1_tmp_320_reg_4127;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_2997_p2))) begin
        arrayNo_mid2_v_reg_4122 <= arrayNo_mid2_v_fu_3021_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        brmerge40_demorgan_i_10_reg_4091 <= brmerge40_demorgan_i_10_fu_2729_p2;
        brmerge40_demorgan_i_11_reg_3941 <= brmerge40_demorgan_i_11_fu_2147_p2;
        brmerge40_demorgan_i_5_reg_3966 <= brmerge40_demorgan_i_5_fu_2244_p2;
        brmerge40_demorgan_i_6_reg_3991 <= brmerge40_demorgan_i_6_fu_2341_p2;
        brmerge40_demorgan_i_7_reg_4016 <= brmerge40_demorgan_i_7_fu_2438_p2;
        brmerge40_demorgan_i_8_reg_4041 <= brmerge40_demorgan_i_8_fu_2535_p2;
        brmerge40_demorgan_i_9_reg_4066 <= brmerge40_demorgan_i_9_fu_2632_p2;
        brmerge40_demorgan_i_reg_3916 <= brmerge40_demorgan_i_fu_2050_p2;
        brmerge_i_i_i_1_reg_3951 <= brmerge_i_i_i_1_fu_2169_p2;
        brmerge_i_i_i_2_reg_3976 <= brmerge_i_i_i_2_fu_2266_p2;
        brmerge_i_i_i_3_reg_4001 <= brmerge_i_i_i_3_fu_2363_p2;
        brmerge_i_i_i_4_reg_4026 <= brmerge_i_i_i_4_fu_2460_p2;
        brmerge_i_i_i_5_reg_4051 <= brmerge_i_i_i_5_fu_2557_p2;
        brmerge_i_i_i_6_reg_4076 <= brmerge_i_i_i_6_fu_2654_p2;
        brmerge_i_i_i_7_reg_4101 <= brmerge_i_i_i_7_fu_2751_p2;
        brmerge_i_i_i_reg_3926 <= brmerge_i_i_i_fu_2072_p2;
        p_38_i_i_1_reg_3931 <= p_38_i_i_1_fu_2120_p2;
        p_38_i_i_2_reg_3956 <= p_38_i_i_2_fu_2217_p2;
        p_38_i_i_3_reg_3981 <= p_38_i_i_3_fu_2314_p2;
        p_38_i_i_4_reg_4006 <= p_38_i_i_4_fu_2411_p2;
        p_38_i_i_5_reg_4031 <= p_38_i_i_5_fu_2508_p2;
        p_38_i_i_6_reg_4056 <= p_38_i_i_6_fu_2605_p2;
        p_38_i_i_7_reg_4081 <= p_38_i_i_7_fu_2702_p2;
        p_38_i_i_reg_3906 <= p_38_i_i_fu_2023_p2;
        tmp_170_reg_3911 <= tmp_170_fu_2039_p2;
        tmp_258_1_reg_3936 <= tmp_258_1_fu_2136_p2;
        tmp_258_2_reg_3961 <= tmp_258_2_fu_2233_p2;
        tmp_258_3_reg_3986 <= tmp_258_3_fu_2330_p2;
        tmp_258_4_reg_4011 <= tmp_258_4_fu_2427_p2;
        tmp_258_5_reg_4036 <= tmp_258_5_fu_2524_p2;
        tmp_258_6_reg_4061 <= tmp_258_6_fu_2621_p2;
        tmp_258_7_reg_4086 <= tmp_258_7_fu_2718_p2;
        underflow_1_reg_3946 <= underflow_1_fu_2164_p2;
        underflow_2_reg_3971 <= underflow_2_fu_2261_p2;
        underflow_3_reg_3996 <= underflow_3_fu_2358_p2;
        underflow_4_reg_4021 <= underflow_4_fu_2455_p2;
        underflow_5_reg_4046 <= underflow_5_fu_2552_p2;
        underflow_6_reg_4071 <= underflow_6_fu_2649_p2;
        underflow_7_reg_4096 <= underflow_7_fu_2746_p2;
        underflow_reg_3921 <= underflow_fu_2067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_23_reg_3405 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_24_reg_3410 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_25_reg_3415 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_26_reg_3420 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_27_reg_3425 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_28_reg_3430 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_29_reg_3435 <= tmp_305_cast_fu_1183_p1;
        buffer1_1_96_4x4_p_V_30_reg_3440 <= tmp_305_cast_fu_1183_p1;
        input_V_load_reg_3450 <= input_V_q0;
        weight_0_V_load_reg_3445 <= weight_0_V_q0;
        weight_1_V_load_reg_3455 <= weight_1_V_q0;
        weight_2_V_load_reg_3460 <= weight_2_V_q0;
        weight_3_V_load_reg_3465 <= weight_3_V_q0;
        weight_4_V_load_reg_3470 <= weight_4_V_q0;
        weight_5_V_load_reg_3475 <= weight_5_V_q0;
        weight_6_V_load_reg_3480 <= weight_6_V_q0;
        weight_7_V_load_reg_3485 <= weight_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer1_1_96_4x4_p_V_31_reg_3495 <= buffer1_1_96_4x4_p_V_8_q0;
        buffer1_1_96_4x4_p_V_32_reg_3510 <= buffer1_1_96_4x4_p_V_1_q0;
        buffer1_1_96_4x4_p_V_33_reg_3525 <= buffer1_1_96_4x4_p_V_2_q0;
        buffer1_1_96_4x4_p_V_34_reg_3540 <= buffer1_1_96_4x4_p_V_3_q0;
        buffer1_1_96_4x4_p_V_35_reg_3555 <= buffer1_1_96_4x4_p_V_4_q0;
        buffer1_1_96_4x4_p_V_36_reg_3570 <= buffer1_1_96_4x4_p_V_5_q0;
        buffer1_1_96_4x4_p_V_37_reg_3585 <= buffer1_1_96_4x4_p_V_6_q0;
        buffer1_1_96_4x4_p_V_38_reg_3600 <= buffer1_1_96_4x4_p_V_7_q0;
        p_Val2_57_1_reg_3505 <= p_Val2_57_1_fu_1217_p2;
        p_Val2_57_2_reg_3520 <= p_Val2_57_2_fu_1234_p2;
        p_Val2_57_3_reg_3535 <= p_Val2_57_3_fu_1251_p2;
        p_Val2_57_4_reg_3550 <= p_Val2_57_4_fu_1268_p2;
        p_Val2_57_5_reg_3565 <= p_Val2_57_5_fu_1285_p2;
        p_Val2_57_6_reg_3580 <= p_Val2_57_6_fu_1302_p2;
        p_Val2_57_7_reg_3595 <= p_Val2_57_7_fu_1319_p2;
        p_Val2_s_reg_3490 <= p_Val2_s_fu_1200_p2;
        tmp_326_reg_3500 <= p_Val2_s_fu_1200_p2[32'd5];
        tmp_331_reg_3515 <= p_Val2_57_1_fu_1217_p2[32'd5];
        tmp_336_reg_3530 <= p_Val2_57_2_fu_1234_p2[32'd5];
        tmp_341_reg_3545 <= p_Val2_57_3_fu_1251_p2[32'd5];
        tmp_346_reg_3560 <= p_Val2_57_4_fu_1268_p2[32'd5];
        tmp_351_reg_3575 <= p_Val2_57_5_fu_1285_p2[32'd5];
        tmp_356_reg_3590 <= p_Val2_57_6_fu_1302_p2[32'd5];
        tmp_361_reg_3605 <= p_Val2_57_7_fu_1319_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4106))) begin
        buffer1_1_96_4x4_p_V_39_reg_4168 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_40_reg_4174 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_41_reg_4180 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_42_reg_4186 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_43_reg_4192 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_44_reg_4198 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_45_reg_4204 <= tmp_285_cast_fu_3189_p1;
        buffer1_1_96_4x4_p_V_46_reg_4210 <= tmp_285_cast_fu_3189_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        carry_9_1_reg_3671 <= carry_9_1_fu_1479_p2;
        carry_9_2_reg_3708 <= carry_9_2_fu_1560_p2;
        carry_9_3_reg_3745 <= carry_9_3_fu_1641_p2;
        carry_9_4_reg_3782 <= carry_9_4_fu_1722_p2;
        carry_9_5_reg_3819 <= carry_9_5_fu_1803_p2;
        carry_9_6_reg_3856 <= carry_9_6_fu_1884_p2;
        carry_9_7_reg_3893 <= carry_9_7_fu_1965_p2;
        carry_9_reg_3634 <= carry_9_fu_1398_p2;
        p_Val2_58_1_reg_3647 <= p_Val2_58_1_fu_1425_p2;
        p_Val2_58_2_reg_3684 <= p_Val2_58_2_fu_1506_p2;
        p_Val2_58_3_reg_3721 <= p_Val2_58_3_fu_1587_p2;
        p_Val2_58_4_reg_3758 <= p_Val2_58_4_fu_1668_p2;
        p_Val2_58_5_reg_3795 <= p_Val2_58_5_fu_1749_p2;
        p_Val2_58_6_reg_3832 <= p_Val2_58_6_fu_1830_p2;
        p_Val2_58_7_reg_3869 <= p_Val2_58_7_fu_1911_p2;
        p_Val2_60_1_reg_3659 <= p_Val2_60_1_fu_1459_p2;
        p_Val2_60_2_reg_3696 <= p_Val2_60_2_fu_1540_p2;
        p_Val2_60_3_reg_3733 <= p_Val2_60_3_fu_1621_p2;
        p_Val2_60_4_reg_3770 <= p_Val2_60_4_fu_1702_p2;
        p_Val2_60_5_reg_3807 <= p_Val2_60_5_fu_1783_p2;
        p_Val2_60_6_reg_3844 <= p_Val2_60_6_fu_1864_p2;
        p_Val2_60_7_reg_3881 <= p_Val2_60_7_fu_1945_p2;
        p_Val2_7_reg_3610 <= p_Val2_7_fu_1344_p2;
        p_Val2_9_reg_3622 <= p_Val2_9_fu_1378_p2;
        tmp_168_reg_3641 <= {{p_Val2_7_fu_1344_p2[15:14]}};
        tmp_171_reg_3678 <= {{p_Val2_58_1_fu_1425_p2[15:14]}};
        tmp_172_reg_3715 <= {{p_Val2_58_2_fu_1506_p2[15:14]}};
        tmp_173_reg_3752 <= {{p_Val2_58_3_fu_1587_p2[15:14]}};
        tmp_174_reg_3789 <= {{p_Val2_58_4_fu_1668_p2[15:14]}};
        tmp_175_reg_3826 <= {{p_Val2_58_5_fu_1749_p2[15:14]}};
        tmp_176_reg_3863 <= {{p_Val2_58_6_fu_1830_p2[15:14]}};
        tmp_177_reg_3900 <= {{p_Val2_58_7_fu_1911_p2[15:14]}};
        tmp_325_reg_3615 <= p_Val2_7_fu_1344_p2[32'd15];
        tmp_328_reg_3628 <= p_Val2_9_fu_1378_p2[32'd7];
        tmp_330_reg_3652 <= p_Val2_58_1_fu_1425_p2[32'd15];
        tmp_333_reg_3665 <= p_Val2_60_1_fu_1459_p2[32'd7];
        tmp_335_reg_3689 <= p_Val2_58_2_fu_1506_p2[32'd15];
        tmp_338_reg_3702 <= p_Val2_60_2_fu_1540_p2[32'd7];
        tmp_340_reg_3726 <= p_Val2_58_3_fu_1587_p2[32'd15];
        tmp_343_reg_3739 <= p_Val2_60_3_fu_1621_p2[32'd7];
        tmp_345_reg_3763 <= p_Val2_58_4_fu_1668_p2[32'd15];
        tmp_348_reg_3776 <= p_Val2_60_4_fu_1702_p2[32'd7];
        tmp_350_reg_3800 <= p_Val2_58_5_fu_1749_p2[32'd15];
        tmp_353_reg_3813 <= p_Val2_60_5_fu_1783_p2[32'd7];
        tmp_355_reg_3837 <= p_Val2_58_6_fu_1830_p2[32'd15];
        tmp_358_reg_3850 <= p_Val2_60_6_fu_1864_p2[32'd7];
        tmp_360_reg_3874 <= p_Val2_58_7_fu_1911_p2[32'd15];
        tmp_363_reg_3887 <= p_Val2_60_7_fu_1945_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_3_reg_3332 <= ci_3_fu_953_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond5_fu_1044_p2))) begin
        co_15_7_reg_3400 <= co_15_7_fu_1177_p2;
        tmp_272_reg_3395 <= tmp_272_fu_1172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_2997_p2))) begin
        exitcond_flatten4_reg_4115 <= exitcond_flatten4_fu_3015_p2;
        newIndex4_mid2_v_reg_4132 <= {{arrayNo_mid2_v_fu_3021_p3[6:3]}};
        tmp_320_reg_4127 <= tmp_320_fu_3029_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_fu_705_p2 == 1'd0))) begin
        exitcond_flatten_reg_3239 <= exitcond_flatten_fu_723_p2;
        newIndex2_mid2_v_reg_3256 <= {{tmp_mid2_v_fu_729_p3[6:3]}};
        tmp_318_reg_3252 <= tmp_318_fu_737_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond4_fu_947_p2))) begin
        input_V_addr_reg_3342 <= tmp_293_cast_fu_1033_p1;
        tmp_164_cast_reg_3337[6 : 0] <= tmp_164_cast_fu_959_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_reg_3230 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        tmp_160_mid2_reg_3272 <= tmp_160_mid2_fu_844_p3;
        w_13_reg_3292 <= w_13_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond3_fu_927_p2))) begin
        tmp_161_cast1_reg_3314[2 : 0] <= tmp_161_cast1_fu_933_p1[2 : 0];
        tmp_161_cast_reg_3319[2 : 0] <= tmp_161_cast_fu_937_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_4106) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        tmp_163_mid2_reg_4148 <= tmp_163_mid2_fu_3132_p3;
        w_15_reg_4163 <= w_15_fu_3154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_reg_3230 == 1'd0))) begin
        tmp_247_reg_3277 <= tmp_247_fu_856_p2;
        tmp_319_reg_3282 <= tmp_319_fu_862_p1;
        w_mid2_reg_3267 <= w_mid2_fu_836_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_4106))) begin
        tmp_254_reg_4153 <= tmp_254_fu_3144_p2;
        tmp_321_reg_4158 <= tmp_321_fu_3150_p1;
        w6_mid2_reg_4143 <= w6_mid2_fu_3124_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond2_fu_913_p2))) begin
        tmp_cast3_reg_3301[2 : 0] <= tmp_cast3_fu_919_p1[2 : 0];
        tmp_cast_reg_3306[2 : 0] <= tmp_cast_fu_923_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_705_p2 == 1'd0))) begin
        tmp_mid2_v_reg_3246 <= tmp_mid2_v_fu_729_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten7_fu_705_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_2997_p2)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_30_reg_3440;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_1_d0 = this_assign_1_1_fu_2808_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd1)))) begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd1))) begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_24_reg_3410;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_2_d0 = this_assign_1_2_fu_2838_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd2)))) begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd2))) begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_25_reg_3415;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_3_d0 = this_assign_1_3_fu_2868_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd3)))) begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd3))) begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_23_reg_3405;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_4_d0 = this_assign_1_4_fu_2898_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd4)))) begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd4))) begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_26_reg_3420;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_5_d0 = this_assign_1_5_fu_2928_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd5)))) begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd5))) begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_27_reg_3425;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_6_d0 = this_assign_1_6_fu_2958_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd6)))) begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd6))) begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_28_reg_3430;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_7_d0 = this_assign_1_7_fu_2988_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd7)))) begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd7))) begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_285_cast_fu_3189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_29_reg_3435;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_305_cast_fu_1183_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_276_cast_fu_901_p1;
    end else begin
        buffer1_1_96_4x4_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_8_d0 = this_assign_1_fu_2778_p3;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffer1_1_96_4x4_p_V_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_tmp_318_reg_3252 == 3'd0)))) begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_322_fu_3222_p3) & (ap_reg_pp1_iter2_tmp_320_reg_4127 == 3'd0))) begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten9_reg_4106) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_663_p4 = arrayNo_mid2_v_reg_4122;
    end else begin
        co4_phi_fu_663_p4 = co4_reg_659;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten7_reg_3230 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_560_p4 = tmp_mid2_v_reg_3246;
    end else begin
        co_phi_fu_560_p4 = co_reg_556;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4106) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_phi_fu_685_p4 = tmp_163_mid2_reg_4148;
    end else begin
        h5_phi_fu_685_p4 = h5_reg_681;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_3230 == 1'd0))) begin
        h_phi_fu_582_p4 = tmp_160_mid2_reg_3272;
    end else begin
        h_phi_fu_582_p4 = h_reg_578;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4106) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_phi_fu_697_p4 = w_15_reg_4163;
    end else begin
        w6_phi_fu_697_p4 = w6_reg_693;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_3230 == 1'd0))) begin
        w_phi_fu_594_p4 = w_13_reg_3292;
    end else begin
        w_phi_fu_594_p4 = w_reg_590;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_705_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_705_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond2_fu_913_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond3_fu_927_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond4_fu_947_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond5_fu_1044_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_2997_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_2997_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1197_p1 = $signed(input_V_load_reg_3450);

assign Range1_all_ones_1_fu_2085_p2 = ((tmp_171_reg_3678 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2182_p2 = ((tmp_172_reg_3715 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2279_p2 = ((tmp_173_reg_3752 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2376_p2 = ((tmp_174_reg_3789 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2473_p2 = ((tmp_175_reg_3826 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2570_p2 = ((tmp_176_reg_3863 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2667_p2 = ((tmp_177_reg_3900 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1988_p2 = ((tmp_168_reg_3641 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2090_p2 = ((tmp_171_reg_3678 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2187_p2 = ((tmp_172_reg_3715 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2284_p2 = ((tmp_173_reg_3752 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2381_p2 = ((tmp_174_reg_3789 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2478_p2 = ((tmp_175_reg_3826 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2575_p2 = ((tmp_176_reg_3863 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2672_p2 = ((tmp_177_reg_3900 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1993_p2 = ((tmp_168_reg_3641 == 2'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_3021_p3 = ((exitcond_flatten4_fu_3015_p2[0:0] === 1'b1) ? co_15_fu_3009_p2 : co4_phi_fu_663_p4);

assign bias_V_address0 = tmp_mid2_fu_772_p1;

assign brmerge40_demorgan_i_10_fu_2729_p2 = (tmp_363_reg_3887 & deleted_ones_7_fu_2695_p3);

assign brmerge40_demorgan_i_11_fu_2147_p2 = (tmp_333_reg_3665 & deleted_ones_1_fu_2113_p3);

assign brmerge40_demorgan_i_5_fu_2244_p2 = (tmp_338_reg_3702 & deleted_ones_2_fu_2210_p3);

assign brmerge40_demorgan_i_6_fu_2341_p2 = (tmp_343_reg_3739 & deleted_ones_3_fu_2307_p3);

assign brmerge40_demorgan_i_7_fu_2438_p2 = (tmp_348_reg_3776 & deleted_ones_4_fu_2404_p3);

assign brmerge40_demorgan_i_8_fu_2535_p2 = (tmp_353_reg_3813 & deleted_ones_5_fu_2501_p3);

assign brmerge40_demorgan_i_9_fu_2632_p2 = (tmp_358_reg_3850 & deleted_ones_6_fu_2598_p3);

assign brmerge40_demorgan_i_fu_2050_p2 = (tmp_328_reg_3628 & deleted_ones_fu_2016_p3);

assign brmerge_i_i_1_fu_2131_p2 = (tmp_333_reg_3665 | p_not_i_i_1_fu_2125_p2);

assign brmerge_i_i_2_fu_2228_p2 = (tmp_338_reg_3702 | p_not_i_i_2_fu_2222_p2);

assign brmerge_i_i_3_fu_2325_p2 = (tmp_343_reg_3739 | p_not_i_i_3_fu_2319_p2);

assign brmerge_i_i_4_fu_2422_p2 = (tmp_348_reg_3776 | p_not_i_i_4_fu_2416_p2);

assign brmerge_i_i_5_fu_2519_p2 = (tmp_353_reg_3813 | p_not_i_i_5_fu_2513_p2);

assign brmerge_i_i_6_fu_2616_p2 = (tmp_358_reg_3850 | p_not_i_i_6_fu_2610_p2);

assign brmerge_i_i_7_fu_2713_p2 = (tmp_363_reg_3887 | p_not_i_i_7_fu_2707_p2);

assign brmerge_i_i_fu_2034_p2 = (tmp_328_reg_3628 | p_not_i_i_fu_2028_p2);

assign brmerge_i_i_i_1_fu_2169_p2 = (underflow_1_fu_2164_p2 | overflow_1_fu_2141_p2);

assign brmerge_i_i_i_2_fu_2266_p2 = (underflow_2_fu_2261_p2 | overflow_2_fu_2238_p2);

assign brmerge_i_i_i_3_fu_2363_p2 = (underflow_3_fu_2358_p2 | overflow_3_fu_2335_p2);

assign brmerge_i_i_i_4_fu_2460_p2 = (underflow_4_fu_2455_p2 | overflow_4_fu_2432_p2);

assign brmerge_i_i_i_5_fu_2557_p2 = (underflow_5_fu_2552_p2 | overflow_5_fu_2529_p2);

assign brmerge_i_i_i_6_fu_2654_p2 = (underflow_6_fu_2649_p2 | overflow_6_fu_2626_p2);

assign brmerge_i_i_i_7_fu_2751_p2 = (underflow_7_fu_2746_p2 | overflow_7_fu_2723_p2);

assign brmerge_i_i_i_fu_2072_p2 = (underflow_fu_2067_p2 | overflow_fu_2044_p2);

assign buffer1_1_96_4x4_p_V_1_address1 = buffer1_1_96_4x4_p_V_46_reg_4210;

assign buffer1_1_96_4x4_p_V_1_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_2_address1 = buffer1_1_96_4x4_p_V_40_reg_4174;

assign buffer1_1_96_4x4_p_V_2_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_3_address1 = buffer1_1_96_4x4_p_V_41_reg_4180;

assign buffer1_1_96_4x4_p_V_3_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_4_address1 = buffer1_1_96_4x4_p_V_39_reg_4168;

assign buffer1_1_96_4x4_p_V_4_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_5_address1 = buffer1_1_96_4x4_p_V_42_reg_4186;

assign buffer1_1_96_4x4_p_V_5_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_6_address1 = buffer1_1_96_4x4_p_V_43_reg_4192;

assign buffer1_1_96_4x4_p_V_6_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_7_address1 = buffer1_1_96_4x4_p_V_44_reg_4198;

assign buffer1_1_96_4x4_p_V_7_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_8_address1 = buffer1_1_96_4x4_p_V_45_reg_4204;

assign buffer1_1_96_4x4_p_V_8_d1 = 8'd0;

assign carry_9_1_fu_1479_p2 = (tmp_332_fu_1451_p3 & tmp_253_1_fu_1473_p2);

assign carry_9_2_fu_1560_p2 = (tmp_337_fu_1532_p3 & tmp_253_2_fu_1554_p2);

assign carry_9_3_fu_1641_p2 = (tmp_342_fu_1613_p3 & tmp_253_3_fu_1635_p2);

assign carry_9_4_fu_1722_p2 = (tmp_347_fu_1694_p3 & tmp_253_4_fu_1716_p2);

assign carry_9_5_fu_1803_p2 = (tmp_352_fu_1775_p3 & tmp_253_5_fu_1797_p2);

assign carry_9_6_fu_1884_p2 = (tmp_357_fu_1856_p3 & tmp_253_6_fu_1878_p2);

assign carry_9_7_fu_1965_p2 = (tmp_362_fu_1937_p3 & tmp_253_7_fu_1959_p2);

assign carry_9_fu_1398_p2 = (tmp_327_fu_1370_p3 & tmp_167_fu_1392_p2);

assign ci_3_fu_953_p2 = (ci_reg_626 + 7'd1);

assign co_13_fu_717_p2 = (7'd1 + co_phi_fu_560_p4);

assign co_15_7_fu_1177_p2 = (7'd8 + co3_reg_637);

assign co_15_fu_3009_p2 = (7'd1 + co4_phi_fu_663_p4);

assign deleted_ones_1_fu_2113_p3 = ((carry_9_1_reg_3671[0:0] === 1'b1) ? p_41_i_i_1_fu_2108_p2 : Range1_all_ones_1_fu_2085_p2);

assign deleted_ones_2_fu_2210_p3 = ((carry_9_2_reg_3708[0:0] === 1'b1) ? p_41_i_i_2_fu_2205_p2 : Range1_all_ones_2_fu_2182_p2);

assign deleted_ones_3_fu_2307_p3 = ((carry_9_3_reg_3745[0:0] === 1'b1) ? p_41_i_i_3_fu_2302_p2 : Range1_all_ones_3_fu_2279_p2);

assign deleted_ones_4_fu_2404_p3 = ((carry_9_4_reg_3782[0:0] === 1'b1) ? p_41_i_i_4_fu_2399_p2 : Range1_all_ones_4_fu_2376_p2);

assign deleted_ones_5_fu_2501_p3 = ((carry_9_5_reg_3819[0:0] === 1'b1) ? p_41_i_i_5_fu_2496_p2 : Range1_all_ones_5_fu_2473_p2);

assign deleted_ones_6_fu_2598_p3 = ((carry_9_6_reg_3856[0:0] === 1'b1) ? p_41_i_i_6_fu_2593_p2 : Range1_all_ones_6_fu_2570_p2);

assign deleted_ones_7_fu_2695_p3 = ((carry_9_7_reg_3893[0:0] === 1'b1) ? p_41_i_i_7_fu_2690_p2 : Range1_all_ones_7_fu_2667_p2);

assign deleted_ones_fu_2016_p3 = ((carry_9_reg_3634[0:0] === 1'b1) ? p_41_i_i_fu_2011_p2 : Range1_all_ones_fu_1988_p2);

assign deleted_zeros_1_fu_2095_p3 = ((carry_9_1_reg_3671[0:0] === 1'b1) ? Range1_all_ones_1_fu_2085_p2 : Range1_all_zeros_1_fu_2090_p2);

assign deleted_zeros_2_fu_2192_p3 = ((carry_9_2_reg_3708[0:0] === 1'b1) ? Range1_all_ones_2_fu_2182_p2 : Range1_all_zeros_2_fu_2187_p2);

assign deleted_zeros_3_fu_2289_p3 = ((carry_9_3_reg_3745[0:0] === 1'b1) ? Range1_all_ones_3_fu_2279_p2 : Range1_all_zeros_3_fu_2284_p2);

assign deleted_zeros_4_fu_2386_p3 = ((carry_9_4_reg_3782[0:0] === 1'b1) ? Range1_all_ones_4_fu_2376_p2 : Range1_all_zeros_4_fu_2381_p2);

assign deleted_zeros_5_fu_2483_p3 = ((carry_9_5_reg_3819[0:0] === 1'b1) ? Range1_all_ones_5_fu_2473_p2 : Range1_all_zeros_5_fu_2478_p2);

assign deleted_zeros_6_fu_2580_p3 = ((carry_9_6_reg_3856[0:0] === 1'b1) ? Range1_all_ones_6_fu_2570_p2 : Range1_all_zeros_6_fu_2575_p2);

assign deleted_zeros_7_fu_2677_p3 = ((carry_9_7_reg_3893[0:0] === 1'b1) ? Range1_all_ones_7_fu_2667_p2 : Range1_all_zeros_7_fu_2672_p2);

assign deleted_zeros_fu_1998_p3 = ((carry_9_reg_3634[0:0] === 1'b1) ? Range1_all_ones_fu_1988_p2 : Range1_all_zeros_fu_1993_p2);

assign exitcond14_mid_fu_819_p2 = (exitcond_fu_813_p2 & not_exitcond_flatten_fu_808_p2);

assign exitcond2_fu_913_p2 = ((h1_reg_602 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_927_p2 = ((w2_reg_614 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_947_p2 = ((ci_reg_626 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond5_fu_1044_p2 = ((co3_reg_637 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond6_fu_3101_p2 = ((w6_phi_fu_697_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_3015_p2 = ((indvar_flatten9_reg_670 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_705_p2 = ((indvar_flatten7_reg_545 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_2997_p2 = ((indvar_flatten8_reg_648 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_723_p2 = ((indvar_flatten_reg_567 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_fu_813_p2 = ((w_phi_fu_594_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3107_p2 = (exitcond6_fu_3101_p2 & not_exitcond_flatten_6_fu_3096_p2);

assign h5_mid_fu_3057_p3 = ((exitcond_flatten4_reg_4115[0:0] === 1'b1) ? 3'd1 : h5_phi_fu_685_p4);

assign h_13_fu_825_p2 = (3'd1 + h_mid_fu_765_p3);

assign h_3_fu_3113_p2 = (3'd1 + h5_mid_fu_3057_p3);

assign h_4_fu_941_p2 = (h1_reg_602 + 3'd1);

assign h_mid_fu_765_p3 = ((exitcond_flatten_reg_3239[0:0] === 1'b1) ? 3'd1 : h_phi_fu_582_p4);

assign indvar_flatten21_op_fu_3043_p2 = (indvar_flatten9_reg_670 + 6'd1);

assign indvar_flatten_next7_fu_711_p2 = (indvar_flatten7_reg_545 + 11'd1);

assign indvar_flatten_next8_fu_3049_p3 = ((exitcond_flatten4_fu_3015_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten21_op_fu_3043_p2);

assign indvar_flatten_next9_fu_3003_p2 = (indvar_flatten8_reg_648 + 11'd1);

assign indvar_flatten_next_fu_757_p3 = ((exitcond_flatten_fu_723_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_751_p2);

assign indvar_flatten_op_fu_751_p2 = (indvar_flatten_reg_567 + 6'd1);

assign input_V_address0 = input_V_addr_reg_3342;

assign newIndex5_fu_1050_p4 = {{co3_reg_637[6:3]}};

assign not_exitcond_flatten_6_fu_3096_p2 = (exitcond_flatten4_reg_4115 ^ 1'd1);

assign not_exitcond_flatten_fu_808_p2 = (exitcond_flatten_reg_3239 ^ 1'd1);

assign overflow_1_fu_2141_p2 = (brmerge_i_i_1_fu_2131_p2 & tmp_258_1_fu_2136_p2);

assign overflow_2_fu_2238_p2 = (brmerge_i_i_2_fu_2228_p2 & tmp_258_2_fu_2233_p2);

assign overflow_3_fu_2335_p2 = (brmerge_i_i_3_fu_2325_p2 & tmp_258_3_fu_2330_p2);

assign overflow_4_fu_2432_p2 = (brmerge_i_i_4_fu_2422_p2 & tmp_258_4_fu_2427_p2);

assign overflow_5_fu_2529_p2 = (brmerge_i_i_5_fu_2519_p2 & tmp_258_5_fu_2524_p2);

assign overflow_6_fu_2626_p2 = (brmerge_i_i_6_fu_2616_p2 & tmp_258_6_fu_2621_p2);

assign overflow_7_fu_2723_p2 = (brmerge_i_i_7_fu_2713_p2 & tmp_258_7_fu_2718_p2);

assign overflow_fu_2044_p2 = (brmerge_i_i_fu_2034_p2 & tmp_170_fu_2039_p2);

assign p_38_i_i_1_fu_2120_p2 = (carry_9_1_reg_3671 & Range1_all_ones_1_fu_2085_p2);

assign p_38_i_i_2_fu_2217_p2 = (carry_9_2_reg_3708 & Range1_all_ones_2_fu_2182_p2);

assign p_38_i_i_3_fu_2314_p2 = (carry_9_3_reg_3745 & Range1_all_ones_3_fu_2279_p2);

assign p_38_i_i_4_fu_2411_p2 = (carry_9_4_reg_3782 & Range1_all_ones_4_fu_2376_p2);

assign p_38_i_i_5_fu_2508_p2 = (carry_9_5_reg_3819 & Range1_all_ones_5_fu_2473_p2);

assign p_38_i_i_6_fu_2605_p2 = (carry_9_6_reg_3856 & Range1_all_ones_6_fu_2570_p2);

assign p_38_i_i_7_fu_2702_p2 = (carry_9_7_reg_3893 & Range1_all_ones_7_fu_2667_p2);

assign p_38_i_i_fu_2023_p2 = (carry_9_reg_3634 & Range1_all_ones_fu_1988_p2);

assign p_41_i_i_1_fu_2108_p2 = (tmp_330_reg_3652 & tmp_256_1_fu_2102_p2);

assign p_41_i_i_2_fu_2205_p2 = (tmp_335_reg_3689 & tmp_256_2_fu_2199_p2);

assign p_41_i_i_3_fu_2302_p2 = (tmp_340_reg_3726 & tmp_256_3_fu_2296_p2);

assign p_41_i_i_4_fu_2399_p2 = (tmp_345_reg_3763 & tmp_256_4_fu_2393_p2);

assign p_41_i_i_5_fu_2496_p2 = (tmp_350_reg_3800 & tmp_256_5_fu_2490_p2);

assign p_41_i_i_6_fu_2593_p2 = (tmp_355_reg_3837 & tmp_256_6_fu_2587_p2);

assign p_41_i_i_7_fu_2690_p2 = (tmp_360_reg_3874 & tmp_256_7_fu_2684_p2);

assign p_41_i_i_fu_2011_p2 = (tmp_325_reg_3615 & tmp_169_fu_2005_p2);

assign p_Val2_57_1_fu_1217_p0 = weight_1_V_load_reg_3455;

assign p_Val2_57_1_fu_1217_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_1_fu_1217_p2 = ($signed(p_Val2_57_1_fu_1217_p0) * $signed(p_Val2_57_1_fu_1217_p1));

assign p_Val2_57_2_fu_1234_p0 = weight_2_V_load_reg_3460;

assign p_Val2_57_2_fu_1234_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_2_fu_1234_p2 = ($signed(p_Val2_57_2_fu_1234_p0) * $signed(p_Val2_57_2_fu_1234_p1));

assign p_Val2_57_3_fu_1251_p0 = weight_3_V_load_reg_3465;

assign p_Val2_57_3_fu_1251_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_3_fu_1251_p2 = ($signed(p_Val2_57_3_fu_1251_p0) * $signed(p_Val2_57_3_fu_1251_p1));

assign p_Val2_57_4_fu_1268_p0 = weight_4_V_load_reg_3470;

assign p_Val2_57_4_fu_1268_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_4_fu_1268_p2 = ($signed(p_Val2_57_4_fu_1268_p0) * $signed(p_Val2_57_4_fu_1268_p1));

assign p_Val2_57_5_fu_1285_p0 = weight_5_V_load_reg_3475;

assign p_Val2_57_5_fu_1285_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_5_fu_1285_p2 = ($signed(p_Val2_57_5_fu_1285_p0) * $signed(p_Val2_57_5_fu_1285_p1));

assign p_Val2_57_6_fu_1302_p0 = weight_6_V_load_reg_3480;

assign p_Val2_57_6_fu_1302_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_6_fu_1302_p2 = ($signed(p_Val2_57_6_fu_1302_p0) * $signed(p_Val2_57_6_fu_1302_p1));

assign p_Val2_57_7_fu_1319_p0 = weight_7_V_load_reg_3485;

assign p_Val2_57_7_fu_1319_p1 = OP2_V_fu_1197_p1;

assign p_Val2_57_7_fu_1319_p2 = ($signed(p_Val2_57_7_fu_1319_p0) * $signed(p_Val2_57_7_fu_1319_p1));

assign p_Val2_58_1_fu_1425_p2 = ($signed(tmp_245_1_cast_fu_1421_p1) + $signed(p_Val2_57_1_reg_3505));

assign p_Val2_58_2_fu_1506_p2 = ($signed(tmp_245_2_cast_fu_1502_p1) + $signed(p_Val2_57_2_reg_3520));

assign p_Val2_58_3_fu_1587_p2 = ($signed(tmp_245_3_cast_fu_1583_p1) + $signed(p_Val2_57_3_reg_3535));

assign p_Val2_58_4_fu_1668_p2 = ($signed(tmp_245_4_cast_fu_1664_p1) + $signed(p_Val2_57_4_reg_3550));

assign p_Val2_58_5_fu_1749_p2 = ($signed(tmp_245_5_cast_fu_1745_p1) + $signed(p_Val2_57_5_reg_3565));

assign p_Val2_58_6_fu_1830_p2 = ($signed(tmp_245_6_cast_fu_1826_p1) + $signed(p_Val2_57_6_reg_3580));

assign p_Val2_58_7_fu_1911_p2 = ($signed(tmp_245_7_cast_fu_1907_p1) + $signed(p_Val2_57_7_reg_3595));

assign p_Val2_59_1_fu_1438_p4 = {{p_Val2_58_1_fu_1425_p2[13:6]}};

assign p_Val2_59_2_fu_1519_p4 = {{p_Val2_58_2_fu_1506_p2[13:6]}};

assign p_Val2_59_3_fu_1600_p4 = {{p_Val2_58_3_fu_1587_p2[13:6]}};

assign p_Val2_59_4_fu_1681_p4 = {{p_Val2_58_4_fu_1668_p2[13:6]}};

assign p_Val2_59_5_fu_1762_p4 = {{p_Val2_58_5_fu_1749_p2[13:6]}};

assign p_Val2_59_6_fu_1843_p4 = {{p_Val2_58_6_fu_1830_p2[13:6]}};

assign p_Val2_59_7_fu_1924_p4 = {{p_Val2_58_7_fu_1911_p2[13:6]}};

assign p_Val2_60_1_98_fu_2802_p3 = ((underflow_1_reg_3946[0:0] === 1'b1) ? 8'd128 : p_Val2_60_1_reg_3659);

assign p_Val2_60_1_fu_1459_p2 = (p_Val2_59_1_fu_1438_p4 + tmp_249_1_fu_1448_p1);

assign p_Val2_60_2_99_fu_2832_p3 = ((underflow_2_reg_3971[0:0] === 1'b1) ? 8'd128 : p_Val2_60_2_reg_3696);

assign p_Val2_60_2_fu_1540_p2 = (p_Val2_59_2_fu_1519_p4 + tmp_249_2_fu_1529_p1);

assign p_Val2_60_3_100_fu_2862_p3 = ((underflow_3_reg_3996[0:0] === 1'b1) ? 8'd128 : p_Val2_60_3_reg_3733);

assign p_Val2_60_3_fu_1621_p2 = (p_Val2_59_3_fu_1600_p4 + tmp_249_3_fu_1610_p1);

assign p_Val2_60_4_101_fu_2892_p3 = ((underflow_4_reg_4021[0:0] === 1'b1) ? 8'd128 : p_Val2_60_4_reg_3770);

assign p_Val2_60_4_fu_1702_p2 = (p_Val2_59_4_fu_1681_p4 + tmp_249_4_fu_1691_p1);

assign p_Val2_60_5_102_fu_2922_p3 = ((underflow_5_reg_4046[0:0] === 1'b1) ? 8'd128 : p_Val2_60_5_reg_3807);

assign p_Val2_60_5_fu_1783_p2 = (p_Val2_59_5_fu_1762_p4 + tmp_249_5_fu_1772_p1);

assign p_Val2_60_6_103_fu_2952_p3 = ((underflow_6_reg_4071[0:0] === 1'b1) ? 8'd128 : p_Val2_60_6_reg_3844);

assign p_Val2_60_6_fu_1864_p2 = (p_Val2_59_6_fu_1843_p4 + tmp_249_6_fu_1853_p1);

assign p_Val2_60_7_104_fu_2982_p3 = ((underflow_7_reg_4096[0:0] === 1'b1) ? 8'd128 : p_Val2_60_7_reg_3881);

assign p_Val2_60_7_fu_1945_p2 = (p_Val2_59_7_fu_1924_p4 + tmp_249_7_fu_1934_p1);

assign p_Val2_60_mux_1_fu_2796_p3 = ((brmerge_i_i_i_1_reg_3951[0:0] === 1'b1) ? 8'd127 : p_Val2_60_1_reg_3659);

assign p_Val2_60_mux_2_fu_2826_p3 = ((brmerge_i_i_i_2_reg_3976[0:0] === 1'b1) ? 8'd127 : p_Val2_60_2_reg_3696);

assign p_Val2_60_mux_3_fu_2856_p3 = ((brmerge_i_i_i_3_reg_4001[0:0] === 1'b1) ? 8'd127 : p_Val2_60_3_reg_3733);

assign p_Val2_60_mux_4_fu_2886_p3 = ((brmerge_i_i_i_4_reg_4026[0:0] === 1'b1) ? 8'd127 : p_Val2_60_4_reg_3770);

assign p_Val2_60_mux_5_fu_2916_p3 = ((brmerge_i_i_i_5_reg_4051[0:0] === 1'b1) ? 8'd127 : p_Val2_60_5_reg_3807);

assign p_Val2_60_mux_6_fu_2946_p3 = ((brmerge_i_i_i_6_reg_4076[0:0] === 1'b1) ? 8'd127 : p_Val2_60_6_reg_3844);

assign p_Val2_60_mux_7_fu_2976_p3 = ((brmerge_i_i_i_7_reg_4101[0:0] === 1'b1) ? 8'd127 : p_Val2_60_7_reg_3881);

assign p_Val2_60_mux_fu_2766_p3 = ((brmerge_i_i_i_reg_3926[0:0] === 1'b1) ? 8'd127 : p_Val2_9_reg_3622);

assign p_Val2_7_fu_1344_p2 = ($signed(tmp_194_cast_fu_1340_p1) + $signed(p_Val2_s_reg_3490));

assign p_Val2_8_fu_1357_p4 = {{p_Val2_7_fu_1344_p2[13:6]}};

assign p_Val2_9_fu_1378_p2 = (p_Val2_8_fu_1357_p4 + tmp_166_fu_1367_p1);

assign p_Val2_s_97_fu_2772_p3 = ((underflow_reg_3921[0:0] === 1'b1) ? 8'd128 : p_Val2_9_reg_3622);

assign p_Val2_s_fu_1200_p0 = weight_0_V_load_reg_3445;

assign p_Val2_s_fu_1200_p1 = OP2_V_fu_1197_p1;

assign p_Val2_s_fu_1200_p2 = ($signed(p_Val2_s_fu_1200_p0) * $signed(p_Val2_s_fu_1200_p1));

assign p_not_i_i_1_fu_2125_p2 = (deleted_zeros_1_fu_2095_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2222_p2 = (deleted_zeros_2_fu_2192_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2319_p2 = (deleted_zeros_3_fu_2289_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2416_p2 = (deleted_zeros_4_fu_2386_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2513_p2 = (deleted_zeros_5_fu_2483_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2610_p2 = (deleted_zeros_6_fu_2580_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2707_p2 = (deleted_zeros_7_fu_2677_p3 ^ 1'd1);

assign p_not_i_i_fu_2028_p2 = (deleted_zeros_fu_1998_p3 ^ 1'd1);

assign p_shl10_cast_fu_1115_p1 = tmp_267_fu_1107_p3;

assign p_shl11_cast_fu_1127_p1 = tmp_268_fu_1119_p3;

assign p_shl12_cast_fu_1068_p1 = tmp_263_fu_1060_p3;

assign p_shl13_cast_fu_1080_p1 = tmp_264_fu_1072_p3;

assign p_shl14_cast_fu_3160_p3 = {{tmp_321_reg_4158}, {3'd0}};

assign p_shl15_cast_fu_3167_p3 = {{tmp_254_reg_4153}, {1'd0}};

assign p_shl16_cast_fu_3071_p1 = tmp_250_fu_3064_p3;

assign p_shl17_cast_fu_3082_p1 = tmp_251_fu_3075_p3;

assign p_shl1_cast_fu_879_p3 = {{tmp_247_reg_3277}, {1'd0}};

assign p_shl2_cast_fu_783_p1 = tmp_fu_776_p3;

assign p_shl3_cast_fu_794_p1 = tmp_s_fu_787_p3;

assign p_shl4_cast_fu_1006_p3 = {{tmp_323_fu_1002_p1}, {3'd0}};

assign p_shl5_cast_fu_1014_p3 = {{tmp_260_fu_997_p2}, {1'd0}};

assign p_shl6_cast_fu_971_p1 = tmp_257_fu_963_p3;

assign p_shl7_cast_fu_983_p1 = tmp_258_fu_975_p3;

assign p_shl8_cast_fu_1150_p3 = {{tmp_324_fu_1146_p1}, {3'd0}};

assign p_shl9_cast_fu_1158_p3 = {{tmp_270_fu_1141_p2}, {1'd0}};

assign p_shl_cast_fu_872_p3 = {{tmp_319_reg_3282}, {3'd0}};

assign this_assign_1_1_fu_2808_p3 = ((underflow_not_1_fu_2791_p2[0:0] === 1'b1) ? p_Val2_60_mux_1_fu_2796_p3 : p_Val2_60_1_98_fu_2802_p3);

assign this_assign_1_2_fu_2838_p3 = ((underflow_not_2_fu_2821_p2[0:0] === 1'b1) ? p_Val2_60_mux_2_fu_2826_p3 : p_Val2_60_2_99_fu_2832_p3);

assign this_assign_1_3_fu_2868_p3 = ((underflow_not_3_fu_2851_p2[0:0] === 1'b1) ? p_Val2_60_mux_3_fu_2856_p3 : p_Val2_60_3_100_fu_2862_p3);

assign this_assign_1_4_fu_2898_p3 = ((underflow_not_4_fu_2881_p2[0:0] === 1'b1) ? p_Val2_60_mux_4_fu_2886_p3 : p_Val2_60_4_101_fu_2892_p3);

assign this_assign_1_5_fu_2928_p3 = ((underflow_not_5_fu_2911_p2[0:0] === 1'b1) ? p_Val2_60_mux_5_fu_2916_p3 : p_Val2_60_5_102_fu_2922_p3);

assign this_assign_1_6_fu_2958_p3 = ((underflow_not_6_fu_2941_p2[0:0] === 1'b1) ? p_Val2_60_mux_6_fu_2946_p3 : p_Val2_60_6_103_fu_2952_p3);

assign this_assign_1_7_fu_2988_p3 = ((underflow_not_7_fu_2971_p2[0:0] === 1'b1) ? p_Val2_60_mux_7_fu_2976_p3 : p_Val2_60_7_104_fu_2982_p3);

assign this_assign_1_fu_2778_p3 = ((underflow_not_fu_2761_p2[0:0] === 1'b1) ? p_Val2_60_mux_fu_2766_p3 : p_Val2_s_97_fu_2772_p3);

assign tmp10_fu_2877_p2 = (brmerge40_demorgan_i_7_reg_4016 | tmp_258_4_reg_4011);

assign tmp11_demorgan_fu_2540_p2 = (p_38_i_i_5_fu_2508_p2 | brmerge40_demorgan_i_8_fu_2535_p2);

assign tmp11_fu_2546_p2 = (tmp11_demorgan_fu_2540_p2 ^ 1'd1);

assign tmp12_fu_2907_p2 = (brmerge40_demorgan_i_8_reg_4041 | tmp_258_5_reg_4036);

assign tmp13_demorgan_fu_2637_p2 = (p_38_i_i_6_fu_2605_p2 | brmerge40_demorgan_i_9_fu_2632_p2);

assign tmp13_fu_2643_p2 = (tmp13_demorgan_fu_2637_p2 ^ 1'd1);

assign tmp14_fu_2937_p2 = (brmerge40_demorgan_i_9_reg_4066 | tmp_258_6_reg_4061);

assign tmp15_demorgan_fu_2734_p2 = (p_38_i_i_7_fu_2702_p2 | brmerge40_demorgan_i_10_fu_2729_p2);

assign tmp15_fu_2740_p2 = (tmp15_demorgan_fu_2734_p2 ^ 1'd1);

assign tmp16_fu_2967_p2 = (brmerge40_demorgan_i_10_reg_4091 | tmp_258_7_reg_4086);

assign tmp1_demorgan_fu_2055_p2 = (p_38_i_i_fu_2023_p2 | brmerge40_demorgan_i_fu_2050_p2);

assign tmp1_fu_2061_p2 = (tmp1_demorgan_fu_2055_p2 ^ 1'd1);

assign tmp2_fu_2757_p2 = (brmerge40_demorgan_i_reg_3916 | tmp_170_reg_3911);

assign tmp3_demorgan_fu_2152_p2 = (p_38_i_i_1_fu_2120_p2 | brmerge40_demorgan_i_11_fu_2147_p2);

assign tmp3_fu_2158_p2 = (tmp3_demorgan_fu_2152_p2 ^ 1'd1);

assign tmp4_fu_2787_p2 = (brmerge40_demorgan_i_11_reg_3941 | tmp_258_1_reg_3936);

assign tmp5_demorgan_fu_2249_p2 = (p_38_i_i_2_fu_2217_p2 | brmerge40_demorgan_i_5_fu_2244_p2);

assign tmp5_fu_2255_p2 = (tmp5_demorgan_fu_2249_p2 ^ 1'd1);

assign tmp6_fu_2817_p2 = (brmerge40_demorgan_i_5_reg_3966 | tmp_258_2_reg_3961);

assign tmp7_demorgan_fu_2346_p2 = (p_38_i_i_3_fu_2314_p2 | brmerge40_demorgan_i_6_fu_2341_p2);

assign tmp7_fu_2352_p2 = (tmp7_demorgan_fu_2346_p2 ^ 1'd1);

assign tmp8_fu_2847_p2 = (brmerge40_demorgan_i_6_reg_3991 | tmp_258_3_reg_3986);

assign tmp9_demorgan_fu_2443_p2 = (p_38_i_i_4_fu_2411_p2 | brmerge40_demorgan_i_7_fu_2438_p2);

assign tmp9_fu_2449_p2 = (tmp9_demorgan_fu_2443_p2 ^ 1'd1);

assign tmp_158_cast_fu_892_p1 = w_mid2_reg_3267;

assign tmp_160_cast_fu_3180_p1 = w6_mid2_reg_4143;

assign tmp_160_mid2_cast_fu_852_p1 = tmp_160_mid2_fu_844_p3;

assign tmp_160_mid2_fu_844_p3 = ((exitcond14_mid_fu_819_p2[0:0] === 1'b1) ? h_13_fu_825_p2 : h_mid_fu_765_p3);

assign tmp_161_cast1_fu_933_p1 = w2_reg_614;

assign tmp_161_cast_fu_937_p1 = w2_reg_614;

assign tmp_163_mid2_cast_fu_3140_p1 = tmp_163_mid2_fu_3132_p3;

assign tmp_163_mid2_fu_3132_p3 = ((exitcond_mid_fu_3107_p2[0:0] === 1'b1) ? h_3_fu_3113_p2 : h5_mid_fu_3057_p3);

assign tmp_164_cast_fu_959_p1 = ci_reg_626;

assign tmp_165_fu_1333_p3 = {{buffer1_1_96_4x4_p_V_31_reg_3495}, {6'd0}};

assign tmp_166_fu_1367_p1 = tmp_326_reg_3500;

assign tmp_167_fu_1392_p2 = (tmp_328_fu_1384_p3 ^ 1'd1);

assign tmp_169_fu_2005_p2 = (tmp_329_fu_1981_p3 ^ 1'd1);

assign tmp_170_fu_2039_p2 = (tmp_325_reg_3615 ^ 1'd1);

assign tmp_194_cast_fu_1340_p1 = $signed(tmp_165_fu_1333_p3);

assign tmp_245_1_cast_fu_1421_p1 = $signed(tmp_245_1_fu_1414_p3);

assign tmp_245_1_fu_1414_p3 = {{buffer1_1_96_4x4_p_V_32_reg_3510}, {6'd0}};

assign tmp_245_2_cast_fu_1502_p1 = $signed(tmp_245_2_fu_1495_p3);

assign tmp_245_2_fu_1495_p3 = {{buffer1_1_96_4x4_p_V_33_reg_3525}, {6'd0}};

assign tmp_245_3_cast_fu_1583_p1 = $signed(tmp_245_3_fu_1576_p3);

assign tmp_245_3_fu_1576_p3 = {{buffer1_1_96_4x4_p_V_34_reg_3540}, {6'd0}};

assign tmp_245_4_cast_fu_1664_p1 = $signed(tmp_245_4_fu_1657_p3);

assign tmp_245_4_fu_1657_p3 = {{buffer1_1_96_4x4_p_V_35_reg_3555}, {6'd0}};

assign tmp_245_5_cast_fu_1745_p1 = $signed(tmp_245_5_fu_1738_p3);

assign tmp_245_5_fu_1738_p3 = {{buffer1_1_96_4x4_p_V_36_reg_3570}, {6'd0}};

assign tmp_245_6_cast_fu_1826_p1 = $signed(tmp_245_6_fu_1819_p3);

assign tmp_245_6_fu_1819_p3 = {{buffer1_1_96_4x4_p_V_37_reg_3585}, {6'd0}};

assign tmp_245_7_cast_fu_1907_p1 = $signed(tmp_245_7_fu_1900_p3);

assign tmp_245_7_fu_1900_p3 = {{buffer1_1_96_4x4_p_V_38_reg_3600}, {6'd0}};

assign tmp_245_fu_798_p2 = (p_shl2_cast_fu_783_p1 - p_shl3_cast_fu_794_p1);

assign tmp_246_fu_831_p2 = (exitcond14_mid_fu_819_p2 | exitcond_flatten_reg_3239);

assign tmp_247_fu_856_p2 = ($signed(tmp_160_mid2_cast_fu_852_p1) + $signed(tmp_270_cast_fu_804_p1));

assign tmp_248_fu_886_p2 = (p_shl_cast_fu_872_p3 - p_shl1_cast_fu_879_p3);

assign tmp_249_1_fu_1448_p1 = tmp_331_reg_3515;

assign tmp_249_2_fu_1529_p1 = tmp_336_reg_3530;

assign tmp_249_3_fu_1610_p1 = tmp_341_reg_3545;

assign tmp_249_4_fu_1691_p1 = tmp_346_reg_3560;

assign tmp_249_5_fu_1772_p1 = tmp_351_reg_3575;

assign tmp_249_6_fu_1853_p1 = tmp_356_reg_3590;

assign tmp_249_7_fu_1934_p1 = tmp_361_reg_3605;

assign tmp_249_fu_895_p2 = (tmp_158_cast_fu_892_p1 + tmp_248_fu_886_p2);

assign tmp_250_fu_3064_p3 = {{newIndex4_mid2_v_reg_4132}, {3'd0}};

assign tmp_251_fu_3075_p3 = {{newIndex4_mid2_v_reg_4132}, {1'd0}};

assign tmp_252_fu_3086_p2 = (p_shl16_cast_fu_3071_p1 - p_shl17_cast_fu_3082_p1);

assign tmp_253_1_fu_1473_p2 = (tmp_333_fu_1465_p3 ^ 1'd1);

assign tmp_253_2_fu_1554_p2 = (tmp_338_fu_1546_p3 ^ 1'd1);

assign tmp_253_3_fu_1635_p2 = (tmp_343_fu_1627_p3 ^ 1'd1);

assign tmp_253_4_fu_1716_p2 = (tmp_348_fu_1708_p3 ^ 1'd1);

assign tmp_253_5_fu_1797_p2 = (tmp_353_fu_1789_p3 ^ 1'd1);

assign tmp_253_6_fu_1878_p2 = (tmp_358_fu_1870_p3 ^ 1'd1);

assign tmp_253_7_fu_1959_p2 = (tmp_363_fu_1951_p3 ^ 1'd1);

assign tmp_253_fu_3119_p2 = (exitcond_mid_fu_3107_p2 | exitcond_flatten4_reg_4115);

assign tmp_254_fu_3144_p2 = ($signed(tmp_163_mid2_cast_fu_3140_p1) + $signed(tmp_279_cast_fu_3092_p1));

assign tmp_255_fu_3174_p2 = (p_shl14_cast_fu_3160_p3 - p_shl15_cast_fu_3167_p3);

assign tmp_256_1_fu_2102_p2 = (tmp_334_fu_2078_p3 ^ 1'd1);

assign tmp_256_2_fu_2199_p2 = (tmp_339_fu_2175_p3 ^ 1'd1);

assign tmp_256_3_fu_2296_p2 = (tmp_344_fu_2272_p3 ^ 1'd1);

assign tmp_256_4_fu_2393_p2 = (tmp_349_fu_2369_p3 ^ 1'd1);

assign tmp_256_5_fu_2490_p2 = (tmp_354_fu_2466_p3 ^ 1'd1);

assign tmp_256_6_fu_2587_p2 = (tmp_359_fu_2563_p3 ^ 1'd1);

assign tmp_256_7_fu_2684_p2 = (tmp_364_fu_2660_p3 ^ 1'd1);

assign tmp_256_fu_3183_p2 = (tmp_160_cast_fu_3180_p1 + tmp_255_fu_3174_p2);

assign tmp_257_fu_963_p3 = {{ci_reg_626}, {3'd0}};

assign tmp_258_1_fu_2136_p2 = (tmp_330_reg_3652 ^ 1'd1);

assign tmp_258_2_fu_2233_p2 = (tmp_335_reg_3689 ^ 1'd1);

assign tmp_258_3_fu_2330_p2 = (tmp_340_reg_3726 ^ 1'd1);

assign tmp_258_4_fu_2427_p2 = (tmp_345_reg_3763 ^ 1'd1);

assign tmp_258_5_fu_2524_p2 = (tmp_350_reg_3800 ^ 1'd1);

assign tmp_258_6_fu_2621_p2 = (tmp_355_reg_3837 ^ 1'd1);

assign tmp_258_7_fu_2718_p2 = (tmp_360_reg_3874 ^ 1'd1);

assign tmp_258_fu_975_p3 = {{ci_reg_626}, {1'd0}};

assign tmp_259_fu_987_p2 = (p_shl6_cast_fu_971_p1 - p_shl7_cast_fu_983_p1);

assign tmp_260_fu_997_p2 = ($signed(tmp_cast_reg_3306) + $signed(tmp_288_cast_fu_993_p1));

assign tmp_261_fu_1022_p2 = (p_shl4_cast_fu_1006_p3 - p_shl5_cast_fu_1014_p3);

assign tmp_262_fu_1028_p2 = (tmp_161_cast_reg_3319 + tmp_261_fu_1022_p2);

assign tmp_263_fu_1060_p3 = {{newIndex5_fu_1050_p4}, {7'd0}};

assign tmp_264_fu_1072_p3 = {{newIndex5_fu_1050_p4}, {5'd0}};

assign tmp_265_fu_1084_p2 = (p_shl12_cast_fu_1068_p1 - p_shl13_cast_fu_1080_p1);

assign tmp_266_fu_1090_p2 = (tmp_164_cast_reg_3337 + tmp_265_fu_1084_p2);

assign tmp_267_fu_1107_p3 = {{newIndex5_fu_1050_p4}, {3'd0}};

assign tmp_268_fu_1119_p3 = {{newIndex5_fu_1050_p4}, {1'd0}};

assign tmp_269_fu_1131_p2 = (p_shl10_cast_fu_1115_p1 - p_shl11_cast_fu_1127_p1);

assign tmp_270_cast_fu_804_p1 = $signed(tmp_245_fu_798_p2);

assign tmp_270_fu_1141_p2 = ($signed(tmp_cast3_reg_3301) + $signed(tmp_300_cast_fu_1137_p1));

assign tmp_271_fu_1166_p2 = (p_shl8_cast_fu_1150_p3 - p_shl9_cast_fu_1158_p3);

assign tmp_272_fu_1172_p2 = (tmp_161_cast1_reg_3314 + tmp_271_fu_1166_p2);

assign tmp_276_cast_fu_901_p1 = tmp_249_fu_895_p2;

assign tmp_279_cast_fu_3092_p1 = $signed(tmp_252_fu_3086_p2);

assign tmp_285_cast_fu_3189_p1 = tmp_256_fu_3183_p2;

assign tmp_288_cast_fu_993_p1 = $signed(tmp_259_fu_987_p2);

assign tmp_293_cast_fu_1033_p1 = tmp_262_fu_1028_p2;

assign tmp_297_cast_fu_1095_p1 = $signed(tmp_266_fu_1090_p2);

assign tmp_300_cast_fu_1137_p1 = $signed(tmp_269_fu_1131_p2);

assign tmp_305_cast_fu_1183_p1 = tmp_272_reg_3395;

assign tmp_318_fu_737_p1 = tmp_mid2_v_fu_729_p3[2:0];

assign tmp_319_fu_862_p1 = tmp_247_fu_856_p2[6:0];

assign tmp_320_fu_3029_p1 = arrayNo_mid2_v_fu_3021_p3[2:0];

assign tmp_321_fu_3150_p1 = tmp_254_fu_3144_p2[6:0];

assign tmp_322_fu_3222_p3 = tmp_162_fu_3201_p10[32'd7];

assign tmp_323_fu_1002_p1 = tmp_260_fu_997_p2[9:0];

assign tmp_324_fu_1146_p1 = tmp_270_fu_1141_p2[6:0];

assign tmp_327_fu_1370_p3 = p_Val2_7_fu_1344_p2[32'd13];

assign tmp_328_fu_1384_p3 = p_Val2_9_fu_1378_p2[32'd7];

assign tmp_329_fu_1981_p3 = p_Val2_7_reg_3610[32'd14];

assign tmp_332_fu_1451_p3 = p_Val2_58_1_fu_1425_p2[32'd13];

assign tmp_333_fu_1465_p3 = p_Val2_60_1_fu_1459_p2[32'd7];

assign tmp_334_fu_2078_p3 = p_Val2_58_1_reg_3647[32'd14];

assign tmp_337_fu_1532_p3 = p_Val2_58_2_fu_1506_p2[32'd13];

assign tmp_338_fu_1546_p3 = p_Val2_60_2_fu_1540_p2[32'd7];

assign tmp_339_fu_2175_p3 = p_Val2_58_2_reg_3684[32'd14];

assign tmp_342_fu_1613_p3 = p_Val2_58_3_fu_1587_p2[32'd13];

assign tmp_343_fu_1627_p3 = p_Val2_60_3_fu_1621_p2[32'd7];

assign tmp_344_fu_2272_p3 = p_Val2_58_3_reg_3721[32'd14];

assign tmp_347_fu_1694_p3 = p_Val2_58_4_fu_1668_p2[32'd13];

assign tmp_348_fu_1708_p3 = p_Val2_60_4_fu_1702_p2[32'd7];

assign tmp_349_fu_2369_p3 = p_Val2_58_4_reg_3758[32'd14];

assign tmp_352_fu_1775_p3 = p_Val2_58_5_fu_1749_p2[32'd13];

assign tmp_353_fu_1789_p3 = p_Val2_60_5_fu_1783_p2[32'd7];

assign tmp_354_fu_2466_p3 = p_Val2_58_5_reg_3795[32'd14];

assign tmp_357_fu_1856_p3 = p_Val2_58_6_fu_1830_p2[32'd13];

assign tmp_358_fu_1870_p3 = p_Val2_60_6_fu_1864_p2[32'd7];

assign tmp_359_fu_2563_p3 = p_Val2_58_6_reg_3832[32'd14];

assign tmp_362_fu_1937_p3 = p_Val2_58_7_fu_1911_p2[32'd13];

assign tmp_363_fu_1951_p3 = p_Val2_60_7_fu_1945_p2[32'd7];

assign tmp_364_fu_2660_p3 = p_Val2_58_7_reg_3869[32'd14];

assign tmp_cast3_fu_919_p1 = h1_reg_602;

assign tmp_cast_fu_923_p1 = h1_reg_602;

assign tmp_fu_776_p3 = {{newIndex2_mid2_v_reg_3256}, {3'd0}};

assign tmp_mid2_fu_772_p1 = tmp_mid2_v_reg_3246;

assign tmp_mid2_v_fu_729_p3 = ((exitcond_flatten_fu_723_p2[0:0] === 1'b1) ? co_13_fu_717_p2 : co_phi_fu_560_p4);

assign tmp_s_fu_787_p3 = {{newIndex2_mid2_v_reg_3256}, {1'd0}};

assign underflow_1_fu_2164_p2 = (tmp_330_reg_3652 & tmp3_fu_2158_p2);

assign underflow_2_fu_2261_p2 = (tmp_335_reg_3689 & tmp5_fu_2255_p2);

assign underflow_3_fu_2358_p2 = (tmp_340_reg_3726 & tmp7_fu_2352_p2);

assign underflow_4_fu_2455_p2 = (tmp_345_reg_3763 & tmp9_fu_2449_p2);

assign underflow_5_fu_2552_p2 = (tmp_350_reg_3800 & tmp11_fu_2546_p2);

assign underflow_6_fu_2649_p2 = (tmp_355_reg_3837 & tmp13_fu_2643_p2);

assign underflow_7_fu_2746_p2 = (tmp_360_reg_3874 & tmp15_fu_2740_p2);

assign underflow_fu_2067_p2 = (tmp_325_reg_3615 & tmp1_fu_2061_p2);

assign underflow_not_1_fu_2791_p2 = (tmp4_fu_2787_p2 | p_38_i_i_1_reg_3931);

assign underflow_not_2_fu_2821_p2 = (tmp6_fu_2817_p2 | p_38_i_i_2_reg_3956);

assign underflow_not_3_fu_2851_p2 = (tmp8_fu_2847_p2 | p_38_i_i_3_reg_3981);

assign underflow_not_4_fu_2881_p2 = (tmp10_fu_2877_p2 | p_38_i_i_4_reg_4006);

assign underflow_not_5_fu_2911_p2 = (tmp12_fu_2907_p2 | p_38_i_i_5_reg_4031);

assign underflow_not_6_fu_2941_p2 = (tmp14_fu_2937_p2 | p_38_i_i_6_reg_4056);

assign underflow_not_7_fu_2971_p2 = (tmp16_fu_2967_p2 | p_38_i_i_7_reg_4081);

assign underflow_not_fu_2761_p2 = (tmp2_fu_2757_p2 | p_38_i_i_reg_3906);

assign w6_mid2_fu_3124_p3 = ((tmp_253_fu_3119_p2[0:0] === 1'b1) ? 3'd1 : w6_phi_fu_697_p4);

assign w_13_fu_866_p2 = (w_mid2_fu_836_p3 + 3'd1);

assign w_14_fu_1038_p2 = (w2_reg_614 + 3'd1);

assign w_15_fu_3154_p2 = (w6_mid2_fu_3124_p3 + 3'd1);

assign w_mid2_fu_836_p3 = ((tmp_246_fu_831_p2[0:0] === 1'b1) ? 3'd1 : w_phi_fu_594_p4);

assign weight_0_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_1_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_2_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_3_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_4_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_5_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_6_V_address0 = tmp_297_cast_fu_1095_p1;

assign weight_7_V_address0 = tmp_297_cast_fu_1095_p1;

always @ (posedge ap_clk) begin
    tmp_cast3_reg_3301[8:3] <= 6'b000000;
    tmp_cast_reg_3306[11:3] <= 9'b000000000;
    tmp_161_cast1_reg_3314[9:3] <= 7'b0000000;
    tmp_161_cast_reg_3319[12:3] <= 10'b0000000000;
    tmp_164_cast_reg_3337[11:7] <= 5'b00000;
end

endmodule //subconv_1x1_4_p
