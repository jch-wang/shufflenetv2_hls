// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_16_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_24_16x16_p_23_address0,
        buffer1_1_24_16x16_p_23_ce0,
        buffer1_1_24_16x16_p_23_we0,
        buffer1_1_24_16x16_p_23_d0,
        buffer1_1_24_16x16_p_23_q0,
        buffer1_1_24_16x16_p_23_address1,
        buffer1_1_24_16x16_p_23_ce1,
        buffer1_1_24_16x16_p_23_we1,
        buffer1_1_24_16x16_p_23_d1,
        buffer1_1_24_16x16_p_19_address0,
        buffer1_1_24_16x16_p_19_ce0,
        buffer1_1_24_16x16_p_19_we0,
        buffer1_1_24_16x16_p_19_d0,
        buffer1_1_24_16x16_p_19_q0,
        buffer1_1_24_16x16_p_19_address1,
        buffer1_1_24_16x16_p_19_ce1,
        buffer1_1_24_16x16_p_19_we1,
        buffer1_1_24_16x16_p_19_d1,
        buffer1_1_24_16x16_p_22_address0,
        buffer1_1_24_16x16_p_22_ce0,
        buffer1_1_24_16x16_p_22_we0,
        buffer1_1_24_16x16_p_22_d0,
        buffer1_1_24_16x16_p_22_q0,
        buffer1_1_24_16x16_p_22_address1,
        buffer1_1_24_16x16_p_22_ce1,
        buffer1_1_24_16x16_p_22_we1,
        buffer1_1_24_16x16_p_22_d1,
        buffer1_1_24_16x16_p_18_address0,
        buffer1_1_24_16x16_p_18_ce0,
        buffer1_1_24_16x16_p_18_we0,
        buffer1_1_24_16x16_p_18_d0,
        buffer1_1_24_16x16_p_18_q0,
        buffer1_1_24_16x16_p_18_address1,
        buffer1_1_24_16x16_p_18_ce1,
        buffer1_1_24_16x16_p_18_we1,
        buffer1_1_24_16x16_p_18_d1,
        buffer1_1_24_16x16_p_11_address0,
        buffer1_1_24_16x16_p_11_ce0,
        buffer1_1_24_16x16_p_11_we0,
        buffer1_1_24_16x16_p_11_d0,
        buffer1_1_24_16x16_p_11_q0,
        buffer1_1_24_16x16_p_11_address1,
        buffer1_1_24_16x16_p_11_ce1,
        buffer1_1_24_16x16_p_11_we1,
        buffer1_1_24_16x16_p_11_d1,
        buffer1_1_24_16x16_p_17_address0,
        buffer1_1_24_16x16_p_17_ce0,
        buffer1_1_24_16x16_p_17_we0,
        buffer1_1_24_16x16_p_17_d0,
        buffer1_1_24_16x16_p_17_q0,
        buffer1_1_24_16x16_p_17_address1,
        buffer1_1_24_16x16_p_17_ce1,
        buffer1_1_24_16x16_p_17_we1,
        buffer1_1_24_16x16_p_17_d1,
        buffer1_1_24_16x16_p_6_address0,
        buffer1_1_24_16x16_p_6_ce0,
        buffer1_1_24_16x16_p_6_we0,
        buffer1_1_24_16x16_p_6_d0,
        buffer1_1_24_16x16_p_6_q0,
        buffer1_1_24_16x16_p_6_address1,
        buffer1_1_24_16x16_p_6_ce1,
        buffer1_1_24_16x16_p_6_we1,
        buffer1_1_24_16x16_p_6_d1,
        buffer1_1_24_16x16_p_16_address0,
        buffer1_1_24_16x16_p_16_ce0,
        buffer1_1_24_16x16_p_16_we0,
        buffer1_1_24_16x16_p_16_d0,
        buffer1_1_24_16x16_p_16_q0,
        buffer1_1_24_16x16_p_16_address1,
        buffer1_1_24_16x16_p_16_ce1,
        buffer1_1_24_16x16_p_16_we1,
        buffer1_1_24_16x16_p_16_d1,
        buffer1_1_24_16x16_p_5_address0,
        buffer1_1_24_16x16_p_5_ce0,
        buffer1_1_24_16x16_p_5_we0,
        buffer1_1_24_16x16_p_5_d0,
        buffer1_1_24_16x16_p_5_q0,
        buffer1_1_24_16x16_p_5_address1,
        buffer1_1_24_16x16_p_5_ce1,
        buffer1_1_24_16x16_p_5_we1,
        buffer1_1_24_16x16_p_5_d1,
        buffer1_1_24_16x16_p_15_address0,
        buffer1_1_24_16x16_p_15_ce0,
        buffer1_1_24_16x16_p_15_we0,
        buffer1_1_24_16x16_p_15_d0,
        buffer1_1_24_16x16_p_15_q0,
        buffer1_1_24_16x16_p_15_address1,
        buffer1_1_24_16x16_p_15_ce1,
        buffer1_1_24_16x16_p_15_we1,
        buffer1_1_24_16x16_p_15_d1,
        buffer1_1_24_16x16_p_4_address0,
        buffer1_1_24_16x16_p_4_ce0,
        buffer1_1_24_16x16_p_4_we0,
        buffer1_1_24_16x16_p_4_d0,
        buffer1_1_24_16x16_p_4_q0,
        buffer1_1_24_16x16_p_4_address1,
        buffer1_1_24_16x16_p_4_ce1,
        buffer1_1_24_16x16_p_4_we1,
        buffer1_1_24_16x16_p_4_d1,
        buffer1_1_24_16x16_p_14_address0,
        buffer1_1_24_16x16_p_14_ce0,
        buffer1_1_24_16x16_p_14_we0,
        buffer1_1_24_16x16_p_14_d0,
        buffer1_1_24_16x16_p_14_q0,
        buffer1_1_24_16x16_p_14_address1,
        buffer1_1_24_16x16_p_14_ce1,
        buffer1_1_24_16x16_p_14_we1,
        buffer1_1_24_16x16_p_14_d1,
        buffer1_1_24_16x16_p_3_address0,
        buffer1_1_24_16x16_p_3_ce0,
        buffer1_1_24_16x16_p_3_we0,
        buffer1_1_24_16x16_p_3_d0,
        buffer1_1_24_16x16_p_3_q0,
        buffer1_1_24_16x16_p_3_address1,
        buffer1_1_24_16x16_p_3_ce1,
        buffer1_1_24_16x16_p_3_we1,
        buffer1_1_24_16x16_p_3_d1,
        buffer1_1_24_16x16_p_13_address0,
        buffer1_1_24_16x16_p_13_ce0,
        buffer1_1_24_16x16_p_13_we0,
        buffer1_1_24_16x16_p_13_d0,
        buffer1_1_24_16x16_p_13_q0,
        buffer1_1_24_16x16_p_13_address1,
        buffer1_1_24_16x16_p_13_ce1,
        buffer1_1_24_16x16_p_13_we1,
        buffer1_1_24_16x16_p_13_d1,
        buffer1_1_24_16x16_p_2_address0,
        buffer1_1_24_16x16_p_2_ce0,
        buffer1_1_24_16x16_p_2_we0,
        buffer1_1_24_16x16_p_2_d0,
        buffer1_1_24_16x16_p_2_q0,
        buffer1_1_24_16x16_p_2_address1,
        buffer1_1_24_16x16_p_2_ce1,
        buffer1_1_24_16x16_p_2_we1,
        buffer1_1_24_16x16_p_2_d1,
        buffer1_1_24_16x16_p_12_address0,
        buffer1_1_24_16x16_p_12_ce0,
        buffer1_1_24_16x16_p_12_we0,
        buffer1_1_24_16x16_p_12_d0,
        buffer1_1_24_16x16_p_12_q0,
        buffer1_1_24_16x16_p_12_address1,
        buffer1_1_24_16x16_p_12_ce1,
        buffer1_1_24_16x16_p_12_we1,
        buffer1_1_24_16x16_p_12_d1,
        buffer1_1_24_16x16_p_1_address0,
        buffer1_1_24_16x16_p_1_ce0,
        buffer1_1_24_16x16_p_1_we0,
        buffer1_1_24_16x16_p_1_d0,
        buffer1_1_24_16x16_p_1_q0,
        buffer1_1_24_16x16_p_1_address1,
        buffer1_1_24_16x16_p_1_ce1,
        buffer1_1_24_16x16_p_1_we1,
        buffer1_1_24_16x16_p_1_d1,
        buffer1_1_24_16x16_p_10_address0,
        buffer1_1_24_16x16_p_10_ce0,
        buffer1_1_24_16x16_p_10_we0,
        buffer1_1_24_16x16_p_10_d0,
        buffer1_1_24_16x16_p_10_q0,
        buffer1_1_24_16x16_p_10_address1,
        buffer1_1_24_16x16_p_10_ce1,
        buffer1_1_24_16x16_p_10_we1,
        buffer1_1_24_16x16_p_10_d1,
        buffer1_1_24_16x16_p_address0,
        buffer1_1_24_16x16_p_ce0,
        buffer1_1_24_16x16_p_we0,
        buffer1_1_24_16x16_p_d0,
        buffer1_1_24_16x16_p_q0,
        buffer1_1_24_16x16_p_address1,
        buffer1_1_24_16x16_p_ce1,
        buffer1_1_24_16x16_p_we1,
        buffer1_1_24_16x16_p_d1,
        buffer1_1_24_16x16_p_9_address0,
        buffer1_1_24_16x16_p_9_ce0,
        buffer1_1_24_16x16_p_9_we0,
        buffer1_1_24_16x16_p_9_d0,
        buffer1_1_24_16x16_p_9_q0,
        buffer1_1_24_16x16_p_9_address1,
        buffer1_1_24_16x16_p_9_ce1,
        buffer1_1_24_16x16_p_9_we1,
        buffer1_1_24_16x16_p_9_d1,
        buffer1_1_24_16x16_p_21_address0,
        buffer1_1_24_16x16_p_21_ce0,
        buffer1_1_24_16x16_p_21_we0,
        buffer1_1_24_16x16_p_21_d0,
        buffer1_1_24_16x16_p_21_q0,
        buffer1_1_24_16x16_p_21_address1,
        buffer1_1_24_16x16_p_21_ce1,
        buffer1_1_24_16x16_p_21_we1,
        buffer1_1_24_16x16_p_21_d1,
        buffer1_1_24_16x16_p_8_address0,
        buffer1_1_24_16x16_p_8_ce0,
        buffer1_1_24_16x16_p_8_we0,
        buffer1_1_24_16x16_p_8_d0,
        buffer1_1_24_16x16_p_8_q0,
        buffer1_1_24_16x16_p_8_address1,
        buffer1_1_24_16x16_p_8_ce1,
        buffer1_1_24_16x16_p_8_we1,
        buffer1_1_24_16x16_p_8_d1,
        buffer1_1_24_16x16_p_20_address0,
        buffer1_1_24_16x16_p_20_ce0,
        buffer1_1_24_16x16_p_20_we0,
        buffer1_1_24_16x16_p_20_d0,
        buffer1_1_24_16x16_p_20_q0,
        buffer1_1_24_16x16_p_20_address1,
        buffer1_1_24_16x16_p_20_ce1,
        buffer1_1_24_16x16_p_20_we1,
        buffer1_1_24_16x16_p_20_d1,
        buffer1_1_24_16x16_p_7_address0,
        buffer1_1_24_16x16_p_7_ce0,
        buffer1_1_24_16x16_p_7_we0,
        buffer1_1_24_16x16_p_7_d0,
        buffer1_1_24_16x16_p_7_q0,
        buffer1_1_24_16x16_p_7_address1,
        buffer1_1_24_16x16_p_7_ce1,
        buffer1_1_24_16x16_p_7_we1,
        buffer1_1_24_16x16_p_7_d1
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_pp0_stage0 = 13'd2;
parameter    ap_ST_fsm_state5 = 13'd4;
parameter    ap_ST_fsm_state6 = 13'd8;
parameter    ap_ST_fsm_state7 = 13'd16;
parameter    ap_ST_fsm_state8 = 13'd32;
parameter    ap_ST_fsm_state9 = 13'd64;
parameter    ap_ST_fsm_state10 = 13'd128;
parameter    ap_ST_fsm_state11 = 13'd256;
parameter    ap_ST_fsm_state12 = 13'd512;
parameter    ap_ST_fsm_state13 = 13'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 13'd2048;
parameter    ap_ST_fsm_state18 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [4:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [4:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [4:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [4:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [4:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [4:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [4:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [4:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [4:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [4:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [4:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [4:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [4:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [4:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [4:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [4:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [4:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [4:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [4:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [4:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [4:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [4:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [4:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [4:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [8:0] buffer1_1_24_16x16_p_23_address0;
output   buffer1_1_24_16x16_p_23_ce0;
output   buffer1_1_24_16x16_p_23_we0;
output  [7:0] buffer1_1_24_16x16_p_23_d0;
input  [7:0] buffer1_1_24_16x16_p_23_q0;
output  [8:0] buffer1_1_24_16x16_p_23_address1;
output   buffer1_1_24_16x16_p_23_ce1;
output   buffer1_1_24_16x16_p_23_we1;
output  [7:0] buffer1_1_24_16x16_p_23_d1;
output  [8:0] buffer1_1_24_16x16_p_19_address0;
output   buffer1_1_24_16x16_p_19_ce0;
output   buffer1_1_24_16x16_p_19_we0;
output  [7:0] buffer1_1_24_16x16_p_19_d0;
input  [7:0] buffer1_1_24_16x16_p_19_q0;
output  [8:0] buffer1_1_24_16x16_p_19_address1;
output   buffer1_1_24_16x16_p_19_ce1;
output   buffer1_1_24_16x16_p_19_we1;
output  [7:0] buffer1_1_24_16x16_p_19_d1;
output  [8:0] buffer1_1_24_16x16_p_22_address0;
output   buffer1_1_24_16x16_p_22_ce0;
output   buffer1_1_24_16x16_p_22_we0;
output  [7:0] buffer1_1_24_16x16_p_22_d0;
input  [7:0] buffer1_1_24_16x16_p_22_q0;
output  [8:0] buffer1_1_24_16x16_p_22_address1;
output   buffer1_1_24_16x16_p_22_ce1;
output   buffer1_1_24_16x16_p_22_we1;
output  [7:0] buffer1_1_24_16x16_p_22_d1;
output  [8:0] buffer1_1_24_16x16_p_18_address0;
output   buffer1_1_24_16x16_p_18_ce0;
output   buffer1_1_24_16x16_p_18_we0;
output  [7:0] buffer1_1_24_16x16_p_18_d0;
input  [7:0] buffer1_1_24_16x16_p_18_q0;
output  [8:0] buffer1_1_24_16x16_p_18_address1;
output   buffer1_1_24_16x16_p_18_ce1;
output   buffer1_1_24_16x16_p_18_we1;
output  [7:0] buffer1_1_24_16x16_p_18_d1;
output  [8:0] buffer1_1_24_16x16_p_11_address0;
output   buffer1_1_24_16x16_p_11_ce0;
output   buffer1_1_24_16x16_p_11_we0;
output  [7:0] buffer1_1_24_16x16_p_11_d0;
input  [7:0] buffer1_1_24_16x16_p_11_q0;
output  [8:0] buffer1_1_24_16x16_p_11_address1;
output   buffer1_1_24_16x16_p_11_ce1;
output   buffer1_1_24_16x16_p_11_we1;
output  [7:0] buffer1_1_24_16x16_p_11_d1;
output  [8:0] buffer1_1_24_16x16_p_17_address0;
output   buffer1_1_24_16x16_p_17_ce0;
output   buffer1_1_24_16x16_p_17_we0;
output  [7:0] buffer1_1_24_16x16_p_17_d0;
input  [7:0] buffer1_1_24_16x16_p_17_q0;
output  [8:0] buffer1_1_24_16x16_p_17_address1;
output   buffer1_1_24_16x16_p_17_ce1;
output   buffer1_1_24_16x16_p_17_we1;
output  [7:0] buffer1_1_24_16x16_p_17_d1;
output  [8:0] buffer1_1_24_16x16_p_6_address0;
output   buffer1_1_24_16x16_p_6_ce0;
output   buffer1_1_24_16x16_p_6_we0;
output  [7:0] buffer1_1_24_16x16_p_6_d0;
input  [7:0] buffer1_1_24_16x16_p_6_q0;
output  [8:0] buffer1_1_24_16x16_p_6_address1;
output   buffer1_1_24_16x16_p_6_ce1;
output   buffer1_1_24_16x16_p_6_we1;
output  [7:0] buffer1_1_24_16x16_p_6_d1;
output  [8:0] buffer1_1_24_16x16_p_16_address0;
output   buffer1_1_24_16x16_p_16_ce0;
output   buffer1_1_24_16x16_p_16_we0;
output  [7:0] buffer1_1_24_16x16_p_16_d0;
input  [7:0] buffer1_1_24_16x16_p_16_q0;
output  [8:0] buffer1_1_24_16x16_p_16_address1;
output   buffer1_1_24_16x16_p_16_ce1;
output   buffer1_1_24_16x16_p_16_we1;
output  [7:0] buffer1_1_24_16x16_p_16_d1;
output  [8:0] buffer1_1_24_16x16_p_5_address0;
output   buffer1_1_24_16x16_p_5_ce0;
output   buffer1_1_24_16x16_p_5_we0;
output  [7:0] buffer1_1_24_16x16_p_5_d0;
input  [7:0] buffer1_1_24_16x16_p_5_q0;
output  [8:0] buffer1_1_24_16x16_p_5_address1;
output   buffer1_1_24_16x16_p_5_ce1;
output   buffer1_1_24_16x16_p_5_we1;
output  [7:0] buffer1_1_24_16x16_p_5_d1;
output  [8:0] buffer1_1_24_16x16_p_15_address0;
output   buffer1_1_24_16x16_p_15_ce0;
output   buffer1_1_24_16x16_p_15_we0;
output  [7:0] buffer1_1_24_16x16_p_15_d0;
input  [7:0] buffer1_1_24_16x16_p_15_q0;
output  [8:0] buffer1_1_24_16x16_p_15_address1;
output   buffer1_1_24_16x16_p_15_ce1;
output   buffer1_1_24_16x16_p_15_we1;
output  [7:0] buffer1_1_24_16x16_p_15_d1;
output  [8:0] buffer1_1_24_16x16_p_4_address0;
output   buffer1_1_24_16x16_p_4_ce0;
output   buffer1_1_24_16x16_p_4_we0;
output  [7:0] buffer1_1_24_16x16_p_4_d0;
input  [7:0] buffer1_1_24_16x16_p_4_q0;
output  [8:0] buffer1_1_24_16x16_p_4_address1;
output   buffer1_1_24_16x16_p_4_ce1;
output   buffer1_1_24_16x16_p_4_we1;
output  [7:0] buffer1_1_24_16x16_p_4_d1;
output  [8:0] buffer1_1_24_16x16_p_14_address0;
output   buffer1_1_24_16x16_p_14_ce0;
output   buffer1_1_24_16x16_p_14_we0;
output  [7:0] buffer1_1_24_16x16_p_14_d0;
input  [7:0] buffer1_1_24_16x16_p_14_q0;
output  [8:0] buffer1_1_24_16x16_p_14_address1;
output   buffer1_1_24_16x16_p_14_ce1;
output   buffer1_1_24_16x16_p_14_we1;
output  [7:0] buffer1_1_24_16x16_p_14_d1;
output  [8:0] buffer1_1_24_16x16_p_3_address0;
output   buffer1_1_24_16x16_p_3_ce0;
output   buffer1_1_24_16x16_p_3_we0;
output  [7:0] buffer1_1_24_16x16_p_3_d0;
input  [7:0] buffer1_1_24_16x16_p_3_q0;
output  [8:0] buffer1_1_24_16x16_p_3_address1;
output   buffer1_1_24_16x16_p_3_ce1;
output   buffer1_1_24_16x16_p_3_we1;
output  [7:0] buffer1_1_24_16x16_p_3_d1;
output  [8:0] buffer1_1_24_16x16_p_13_address0;
output   buffer1_1_24_16x16_p_13_ce0;
output   buffer1_1_24_16x16_p_13_we0;
output  [7:0] buffer1_1_24_16x16_p_13_d0;
input  [7:0] buffer1_1_24_16x16_p_13_q0;
output  [8:0] buffer1_1_24_16x16_p_13_address1;
output   buffer1_1_24_16x16_p_13_ce1;
output   buffer1_1_24_16x16_p_13_we1;
output  [7:0] buffer1_1_24_16x16_p_13_d1;
output  [8:0] buffer1_1_24_16x16_p_2_address0;
output   buffer1_1_24_16x16_p_2_ce0;
output   buffer1_1_24_16x16_p_2_we0;
output  [7:0] buffer1_1_24_16x16_p_2_d0;
input  [7:0] buffer1_1_24_16x16_p_2_q0;
output  [8:0] buffer1_1_24_16x16_p_2_address1;
output   buffer1_1_24_16x16_p_2_ce1;
output   buffer1_1_24_16x16_p_2_we1;
output  [7:0] buffer1_1_24_16x16_p_2_d1;
output  [8:0] buffer1_1_24_16x16_p_12_address0;
output   buffer1_1_24_16x16_p_12_ce0;
output   buffer1_1_24_16x16_p_12_we0;
output  [7:0] buffer1_1_24_16x16_p_12_d0;
input  [7:0] buffer1_1_24_16x16_p_12_q0;
output  [8:0] buffer1_1_24_16x16_p_12_address1;
output   buffer1_1_24_16x16_p_12_ce1;
output   buffer1_1_24_16x16_p_12_we1;
output  [7:0] buffer1_1_24_16x16_p_12_d1;
output  [8:0] buffer1_1_24_16x16_p_1_address0;
output   buffer1_1_24_16x16_p_1_ce0;
output   buffer1_1_24_16x16_p_1_we0;
output  [7:0] buffer1_1_24_16x16_p_1_d0;
input  [7:0] buffer1_1_24_16x16_p_1_q0;
output  [8:0] buffer1_1_24_16x16_p_1_address1;
output   buffer1_1_24_16x16_p_1_ce1;
output   buffer1_1_24_16x16_p_1_we1;
output  [7:0] buffer1_1_24_16x16_p_1_d1;
output  [8:0] buffer1_1_24_16x16_p_10_address0;
output   buffer1_1_24_16x16_p_10_ce0;
output   buffer1_1_24_16x16_p_10_we0;
output  [7:0] buffer1_1_24_16x16_p_10_d0;
input  [7:0] buffer1_1_24_16x16_p_10_q0;
output  [8:0] buffer1_1_24_16x16_p_10_address1;
output   buffer1_1_24_16x16_p_10_ce1;
output   buffer1_1_24_16x16_p_10_we1;
output  [7:0] buffer1_1_24_16x16_p_10_d1;
output  [8:0] buffer1_1_24_16x16_p_address0;
output   buffer1_1_24_16x16_p_ce0;
output   buffer1_1_24_16x16_p_we0;
output  [7:0] buffer1_1_24_16x16_p_d0;
input  [7:0] buffer1_1_24_16x16_p_q0;
output  [8:0] buffer1_1_24_16x16_p_address1;
output   buffer1_1_24_16x16_p_ce1;
output   buffer1_1_24_16x16_p_we1;
output  [7:0] buffer1_1_24_16x16_p_d1;
output  [8:0] buffer1_1_24_16x16_p_9_address0;
output   buffer1_1_24_16x16_p_9_ce0;
output   buffer1_1_24_16x16_p_9_we0;
output  [7:0] buffer1_1_24_16x16_p_9_d0;
input  [7:0] buffer1_1_24_16x16_p_9_q0;
output  [8:0] buffer1_1_24_16x16_p_9_address1;
output   buffer1_1_24_16x16_p_9_ce1;
output   buffer1_1_24_16x16_p_9_we1;
output  [7:0] buffer1_1_24_16x16_p_9_d1;
output  [8:0] buffer1_1_24_16x16_p_21_address0;
output   buffer1_1_24_16x16_p_21_ce0;
output   buffer1_1_24_16x16_p_21_we0;
output  [7:0] buffer1_1_24_16x16_p_21_d0;
input  [7:0] buffer1_1_24_16x16_p_21_q0;
output  [8:0] buffer1_1_24_16x16_p_21_address1;
output   buffer1_1_24_16x16_p_21_ce1;
output   buffer1_1_24_16x16_p_21_we1;
output  [7:0] buffer1_1_24_16x16_p_21_d1;
output  [8:0] buffer1_1_24_16x16_p_8_address0;
output   buffer1_1_24_16x16_p_8_ce0;
output   buffer1_1_24_16x16_p_8_we0;
output  [7:0] buffer1_1_24_16x16_p_8_d0;
input  [7:0] buffer1_1_24_16x16_p_8_q0;
output  [8:0] buffer1_1_24_16x16_p_8_address1;
output   buffer1_1_24_16x16_p_8_ce1;
output   buffer1_1_24_16x16_p_8_we1;
output  [7:0] buffer1_1_24_16x16_p_8_d1;
output  [8:0] buffer1_1_24_16x16_p_20_address0;
output   buffer1_1_24_16x16_p_20_ce0;
output   buffer1_1_24_16x16_p_20_we0;
output  [7:0] buffer1_1_24_16x16_p_20_d0;
input  [7:0] buffer1_1_24_16x16_p_20_q0;
output  [8:0] buffer1_1_24_16x16_p_20_address1;
output   buffer1_1_24_16x16_p_20_ce1;
output   buffer1_1_24_16x16_p_20_we1;
output  [7:0] buffer1_1_24_16x16_p_20_d1;
output  [8:0] buffer1_1_24_16x16_p_7_address0;
output   buffer1_1_24_16x16_p_7_ce0;
output   buffer1_1_24_16x16_p_7_we0;
output  [7:0] buffer1_1_24_16x16_p_7_d0;
input  [7:0] buffer1_1_24_16x16_p_7_q0;
output  [8:0] buffer1_1_24_16x16_p_7_address1;
output   buffer1_1_24_16x16_p_7_ce1;
output   buffer1_1_24_16x16_p_7_we1;
output  [7:0] buffer1_1_24_16x16_p_7_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg bias_V_ce0;
reg[8:0] buffer1_1_24_16x16_p_23_address0;
reg buffer1_1_24_16x16_p_23_ce0;
reg buffer1_1_24_16x16_p_23_we0;
reg[7:0] buffer1_1_24_16x16_p_23_d0;
reg buffer1_1_24_16x16_p_23_ce1;
reg buffer1_1_24_16x16_p_23_we1;
reg[8:0] buffer1_1_24_16x16_p_19_address0;
reg buffer1_1_24_16x16_p_19_ce0;
reg buffer1_1_24_16x16_p_19_we0;
reg[7:0] buffer1_1_24_16x16_p_19_d0;
reg buffer1_1_24_16x16_p_19_ce1;
reg buffer1_1_24_16x16_p_19_we1;
reg[8:0] buffer1_1_24_16x16_p_22_address0;
reg buffer1_1_24_16x16_p_22_ce0;
reg buffer1_1_24_16x16_p_22_we0;
reg[7:0] buffer1_1_24_16x16_p_22_d0;
reg buffer1_1_24_16x16_p_22_ce1;
reg buffer1_1_24_16x16_p_22_we1;
reg[8:0] buffer1_1_24_16x16_p_18_address0;
reg buffer1_1_24_16x16_p_18_ce0;
reg buffer1_1_24_16x16_p_18_we0;
reg[7:0] buffer1_1_24_16x16_p_18_d0;
reg buffer1_1_24_16x16_p_18_ce1;
reg buffer1_1_24_16x16_p_18_we1;
reg[8:0] buffer1_1_24_16x16_p_11_address0;
reg buffer1_1_24_16x16_p_11_ce0;
reg buffer1_1_24_16x16_p_11_we0;
reg[7:0] buffer1_1_24_16x16_p_11_d0;
reg buffer1_1_24_16x16_p_11_ce1;
reg buffer1_1_24_16x16_p_11_we1;
reg[8:0] buffer1_1_24_16x16_p_17_address0;
reg buffer1_1_24_16x16_p_17_ce0;
reg buffer1_1_24_16x16_p_17_we0;
reg[7:0] buffer1_1_24_16x16_p_17_d0;
reg buffer1_1_24_16x16_p_17_ce1;
reg buffer1_1_24_16x16_p_17_we1;
reg[8:0] buffer1_1_24_16x16_p_6_address0;
reg buffer1_1_24_16x16_p_6_ce0;
reg buffer1_1_24_16x16_p_6_we0;
reg[7:0] buffer1_1_24_16x16_p_6_d0;
reg buffer1_1_24_16x16_p_6_ce1;
reg buffer1_1_24_16x16_p_6_we1;
reg[8:0] buffer1_1_24_16x16_p_16_address0;
reg buffer1_1_24_16x16_p_16_ce0;
reg buffer1_1_24_16x16_p_16_we0;
reg[7:0] buffer1_1_24_16x16_p_16_d0;
reg buffer1_1_24_16x16_p_16_ce1;
reg buffer1_1_24_16x16_p_16_we1;
reg[8:0] buffer1_1_24_16x16_p_5_address0;
reg buffer1_1_24_16x16_p_5_ce0;
reg buffer1_1_24_16x16_p_5_we0;
reg[7:0] buffer1_1_24_16x16_p_5_d0;
reg buffer1_1_24_16x16_p_5_ce1;
reg buffer1_1_24_16x16_p_5_we1;
reg[8:0] buffer1_1_24_16x16_p_15_address0;
reg buffer1_1_24_16x16_p_15_ce0;
reg buffer1_1_24_16x16_p_15_we0;
reg[7:0] buffer1_1_24_16x16_p_15_d0;
reg buffer1_1_24_16x16_p_15_ce1;
reg buffer1_1_24_16x16_p_15_we1;
reg[8:0] buffer1_1_24_16x16_p_4_address0;
reg buffer1_1_24_16x16_p_4_ce0;
reg buffer1_1_24_16x16_p_4_we0;
reg[7:0] buffer1_1_24_16x16_p_4_d0;
reg buffer1_1_24_16x16_p_4_ce1;
reg buffer1_1_24_16x16_p_4_we1;
reg[8:0] buffer1_1_24_16x16_p_14_address0;
reg buffer1_1_24_16x16_p_14_ce0;
reg buffer1_1_24_16x16_p_14_we0;
reg[7:0] buffer1_1_24_16x16_p_14_d0;
reg buffer1_1_24_16x16_p_14_ce1;
reg buffer1_1_24_16x16_p_14_we1;
reg[8:0] buffer1_1_24_16x16_p_3_address0;
reg buffer1_1_24_16x16_p_3_ce0;
reg buffer1_1_24_16x16_p_3_we0;
reg[7:0] buffer1_1_24_16x16_p_3_d0;
reg buffer1_1_24_16x16_p_3_ce1;
reg buffer1_1_24_16x16_p_3_we1;
reg[8:0] buffer1_1_24_16x16_p_13_address0;
reg buffer1_1_24_16x16_p_13_ce0;
reg buffer1_1_24_16x16_p_13_we0;
reg[7:0] buffer1_1_24_16x16_p_13_d0;
reg buffer1_1_24_16x16_p_13_ce1;
reg buffer1_1_24_16x16_p_13_we1;
reg[8:0] buffer1_1_24_16x16_p_2_address0;
reg buffer1_1_24_16x16_p_2_ce0;
reg buffer1_1_24_16x16_p_2_we0;
reg[7:0] buffer1_1_24_16x16_p_2_d0;
reg buffer1_1_24_16x16_p_2_ce1;
reg buffer1_1_24_16x16_p_2_we1;
reg[8:0] buffer1_1_24_16x16_p_12_address0;
reg buffer1_1_24_16x16_p_12_ce0;
reg buffer1_1_24_16x16_p_12_we0;
reg[7:0] buffer1_1_24_16x16_p_12_d0;
reg buffer1_1_24_16x16_p_12_ce1;
reg buffer1_1_24_16x16_p_12_we1;
reg[8:0] buffer1_1_24_16x16_p_1_address0;
reg buffer1_1_24_16x16_p_1_ce0;
reg buffer1_1_24_16x16_p_1_we0;
reg[7:0] buffer1_1_24_16x16_p_1_d0;
reg buffer1_1_24_16x16_p_1_ce1;
reg buffer1_1_24_16x16_p_1_we1;
reg[8:0] buffer1_1_24_16x16_p_10_address0;
reg buffer1_1_24_16x16_p_10_ce0;
reg buffer1_1_24_16x16_p_10_we0;
reg[7:0] buffer1_1_24_16x16_p_10_d0;
reg buffer1_1_24_16x16_p_10_ce1;
reg buffer1_1_24_16x16_p_10_we1;
reg[8:0] buffer1_1_24_16x16_p_address0;
reg buffer1_1_24_16x16_p_ce0;
reg buffer1_1_24_16x16_p_we0;
reg[7:0] buffer1_1_24_16x16_p_d0;
reg buffer1_1_24_16x16_p_ce1;
reg buffer1_1_24_16x16_p_we1;
reg[8:0] buffer1_1_24_16x16_p_9_address0;
reg buffer1_1_24_16x16_p_9_ce0;
reg buffer1_1_24_16x16_p_9_we0;
reg[7:0] buffer1_1_24_16x16_p_9_d0;
reg buffer1_1_24_16x16_p_9_ce1;
reg buffer1_1_24_16x16_p_9_we1;
reg[8:0] buffer1_1_24_16x16_p_21_address0;
reg buffer1_1_24_16x16_p_21_ce0;
reg buffer1_1_24_16x16_p_21_we0;
reg[7:0] buffer1_1_24_16x16_p_21_d0;
reg buffer1_1_24_16x16_p_21_ce1;
reg buffer1_1_24_16x16_p_21_we1;
reg[8:0] buffer1_1_24_16x16_p_8_address0;
reg buffer1_1_24_16x16_p_8_ce0;
reg buffer1_1_24_16x16_p_8_we0;
reg[7:0] buffer1_1_24_16x16_p_8_d0;
reg buffer1_1_24_16x16_p_8_ce1;
reg buffer1_1_24_16x16_p_8_we1;
reg[8:0] buffer1_1_24_16x16_p_20_address0;
reg buffer1_1_24_16x16_p_20_ce0;
reg buffer1_1_24_16x16_p_20_we0;
reg[7:0] buffer1_1_24_16x16_p_20_d0;
reg buffer1_1_24_16x16_p_20_ce1;
reg buffer1_1_24_16x16_p_20_we1;
reg[8:0] buffer1_1_24_16x16_p_7_address0;
reg buffer1_1_24_16x16_p_7_ce0;
reg buffer1_1_24_16x16_p_7_we0;
reg[7:0] buffer1_1_24_16x16_p_7_d0;
reg buffer1_1_24_16x16_p_7_ce1;
reg buffer1_1_24_16x16_p_7_we1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten7_reg_1265;
reg   [4:0] co_reg_1276;
reg   [9:0] indvar_flatten_reg_1288;
reg   [4:0] h_reg_1299;
reg   [4:0] w_reg_1311;
reg   [12:0] indvar_flatten8_reg_1358;
reg   [4:0] co4_reg_1369;
reg   [9:0] indvar_flatten9_reg_1381;
reg   [4:0] h5_reg_1392;
reg   [4:0] w6_reg_1404;
wire   [0:0] exitcond_flatten_fu_1536_p2;
reg   [0:0] exitcond_flatten_reg_2480;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_2480;
wire   [12:0] indvar_flatten_next1_fu_1542_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten11_fu_1548_p2;
reg   [0:0] exitcond_flatten11_reg_2489;
wire   [9:0] indvar_flatten_next_fu_1560_p3;
wire   [4:0] co_cast9_mid2_v_fu_1581_p3;
reg   [4:0] co_cast9_mid2_v_reg_2502;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] w_mid2_fu_1621_p3;
reg   [4:0] w_mid2_reg_2507;
wire   [4:0] h_cast8_mid2_fu_1629_p3;
reg   [4:0] h_cast8_mid2_reg_2513;
wire   [4:0] w_31_fu_1702_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [9:0] h1_cast6_cast_fu_1707_p1;
reg   [9:0] h1_cast6_cast_reg_2530;
wire    ap_CS_fsm_state6;
wire   [9:0] tmp_437_fu_1735_p2;
reg   [9:0] tmp_437_reg_2535;
wire   [0:0] exitcond34_fu_1741_p2;
wire   [13:0] w2_cast5_cast2_fu_1747_p1;
reg   [13:0] w2_cast5_cast2_reg_2544;
wire    ap_CS_fsm_state7;
reg   [8:0] buffer1_1_24_16x16_p_95_reg_2549;
reg   [8:0] buffer1_1_24_16x16_p_96_reg_2554;
reg   [8:0] buffer1_1_24_16x16_p_97_reg_2559;
reg   [8:0] buffer1_1_24_16x16_p_98_reg_2564;
reg   [8:0] buffer1_1_24_16x16_p_99_reg_2569;
reg   [8:0] buffer1_1_24_16x16_p_100_reg_2574;
reg   [8:0] buffer1_1_24_16x16_p_101_reg_2579;
reg   [8:0] buffer1_1_24_16x16_p_102_reg_2584;
reg   [8:0] buffer1_1_24_16x16_p_103_reg_2589;
reg   [8:0] buffer1_1_24_16x16_p_104_reg_2594;
reg   [8:0] buffer1_1_24_16x16_p_105_reg_2599;
reg   [8:0] buffer1_1_24_16x16_p_106_reg_2604;
reg   [8:0] buffer1_1_24_16x16_p_107_reg_2609;
reg   [8:0] buffer1_1_24_16x16_p_108_reg_2614;
reg   [8:0] buffer1_1_24_16x16_p_109_reg_2619;
reg   [8:0] buffer1_1_24_16x16_p_110_reg_2624;
reg   [8:0] buffer1_1_24_16x16_p_111_reg_2629;
reg   [8:0] buffer1_1_24_16x16_p_112_reg_2634;
reg   [8:0] buffer1_1_24_16x16_p_113_reg_2639;
reg   [8:0] buffer1_1_24_16x16_p_114_reg_2644;
reg   [8:0] buffer1_1_24_16x16_p_115_reg_2649;
reg   [8:0] buffer1_1_24_16x16_p_116_reg_2654;
reg   [8:0] buffer1_1_24_16x16_p_117_reg_2659;
reg   [8:0] buffer1_1_24_16x16_p_118_reg_2664;
wire   [4:0] h_6_fu_1794_p2;
wire   [0:0] exitcond33_fu_1788_p2;
reg   [12:0] input_V_addr_reg_2677;
wire    ap_CS_fsm_state8;
reg   [4:0] weight_0_V_addr_reg_2682;
reg   [4:0] weight_1_V_addr_reg_2687;
reg   [4:0] weight_2_V_addr_reg_2692;
reg   [4:0] weight_3_V_addr_reg_2697;
reg   [4:0] weight_4_V_addr_reg_2702;
reg   [4:0] weight_5_V_addr_reg_2707;
reg   [4:0] weight_6_V_addr_reg_2712;
reg   [4:0] weight_7_V_addr_reg_2717;
reg   [4:0] weight_8_V_addr_reg_2722;
reg   [4:0] weight_9_V_addr_reg_2727;
reg   [4:0] weight_10_V_addr_reg_2732;
reg   [4:0] weight_11_V_addr_reg_2737;
reg   [4:0] weight_12_V_addr_reg_2742;
reg   [4:0] weight_13_V_addr_reg_2747;
reg   [4:0] weight_14_V_addr_reg_2752;
reg   [4:0] weight_15_V_addr_reg_2757;
reg   [4:0] weight_16_V_addr_reg_2762;
reg   [4:0] weight_17_V_addr_reg_2767;
reg   [4:0] weight_18_V_addr_reg_2772;
reg   [4:0] weight_19_V_addr_reg_2777;
reg   [4:0] weight_20_V_addr_reg_2782;
reg   [4:0] weight_21_V_addr_reg_2787;
reg   [4:0] weight_22_V_addr_reg_2792;
reg   [4:0] weight_23_V_addr_reg_2797;
wire   [4:0] ci_14_fu_1905_p2;
reg   [4:0] ci_14_reg_2805;
wire   [4:0] w_32_fu_1911_p2;
wire   [0:0] exitcond32_fu_1899_p2;
reg   [7:0] buffer1_1_24_16x16_p_119_reg_2815;
wire    ap_CS_fsm_state12;
reg   [7:0] buffer1_1_24_16x16_p_120_reg_2820;
reg   [7:0] buffer1_1_24_16x16_p_121_reg_2825;
reg   [7:0] buffer1_1_24_16x16_p_122_reg_2830;
reg   [7:0] buffer1_1_24_16x16_p_123_reg_2835;
reg   [7:0] buffer1_1_24_16x16_p_124_reg_2840;
reg   [7:0] buffer1_1_24_16x16_p_125_reg_2845;
reg   [7:0] buffer1_1_24_16x16_p_126_reg_2850;
reg   [7:0] buffer1_1_24_16x16_p_127_reg_2855;
reg   [7:0] buffer1_1_24_16x16_p_128_reg_2860;
reg   [7:0] buffer1_1_24_16x16_p_129_reg_2865;
reg   [7:0] buffer1_1_24_16x16_p_130_reg_2870;
reg   [7:0] buffer1_1_24_16x16_p_131_reg_2875;
reg   [7:0] buffer1_1_24_16x16_p_132_reg_2880;
reg   [7:0] buffer1_1_24_16x16_p_133_reg_2885;
reg   [7:0] buffer1_1_24_16x16_p_134_reg_2890;
reg   [7:0] buffer1_1_24_16x16_p_135_reg_2895;
reg   [7:0] buffer1_1_24_16x16_p_136_reg_2900;
reg   [7:0] buffer1_1_24_16x16_p_137_reg_2905;
reg   [7:0] buffer1_1_24_16x16_p_138_reg_2910;
reg   [7:0] buffer1_1_24_16x16_p_139_reg_2915;
reg   [7:0] buffer1_1_24_16x16_p_140_reg_2920;
reg   [7:0] buffer1_1_24_16x16_p_141_reg_2925;
reg   [7:0] buffer1_1_24_16x16_p_142_reg_2930;
wire   [0:0] exitcond_flatten12_fu_2253_p2;
reg   [0:0] exitcond_flatten12_reg_2935;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state15_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_state17_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten12_reg_2935;
wire   [12:0] indvar_flatten_next1_6_fu_2259_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten13_fu_2265_p2;
reg   [0:0] exitcond_flatten13_reg_2944;
wire   [9:0] indvar_flatten_next1_5_fu_2277_p3;
wire   [4:0] co4_mid2_fu_2315_p3;
reg   [4:0] co4_mid2_reg_2957;
reg    ap_enable_reg_pp1_iter1;
reg   [4:0] ap_reg_pp1_iter2_co4_mid2_reg_2957;
wire   [4:0] w6_mid2_fu_2333_p3;
reg   [4:0] w6_mid2_reg_2963;
wire   [4:0] h5_cast2_mid2_fu_2341_p3;
reg   [4:0] h5_cast2_mid2_reg_2969;
reg   [8:0] buffer1_1_24_16x16_p_143_reg_2976;
reg   [8:0] buffer1_1_24_16x16_p_144_reg_2982;
reg   [8:0] buffer1_1_24_16x16_p_145_reg_2988;
reg   [8:0] buffer1_1_24_16x16_p_146_reg_2994;
reg   [8:0] buffer1_1_24_16x16_p_147_reg_3000;
reg   [8:0] buffer1_1_24_16x16_p_148_reg_3006;
reg   [8:0] buffer1_1_24_16x16_p_149_reg_3012;
reg   [8:0] buffer1_1_24_16x16_p_150_reg_3018;
reg   [8:0] buffer1_1_24_16x16_p_151_reg_3024;
reg   [8:0] buffer1_1_24_16x16_p_152_reg_3030;
reg   [8:0] buffer1_1_24_16x16_p_153_reg_3036;
reg   [8:0] buffer1_1_24_16x16_p_154_reg_3042;
reg   [8:0] buffer1_1_24_16x16_p_155_reg_3048;
reg   [8:0] buffer1_1_24_16x16_p_156_reg_3054;
reg   [8:0] buffer1_1_24_16x16_p_157_reg_3060;
reg   [8:0] buffer1_1_24_16x16_p_158_reg_3066;
reg   [8:0] buffer1_1_24_16x16_p_159_reg_3072;
reg   [8:0] buffer1_1_24_16x16_p_160_reg_3078;
reg   [8:0] buffer1_1_24_16x16_p_161_reg_3084;
reg   [8:0] buffer1_1_24_16x16_p_162_reg_3090;
reg   [8:0] buffer1_1_24_16x16_p_163_reg_3096;
reg   [8:0] buffer1_1_24_16x16_p_164_reg_3102;
reg   [8:0] buffer1_1_24_16x16_p_165_reg_3108;
reg   [8:0] buffer1_1_24_16x16_p_166_reg_3114;
wire   [4:0] w_33_fu_2414_p2;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] grp_MUL_DP_fu_1416_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1416_ap_return_1;
reg    grp_MUL_DP_fu_1416_ap_ce;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire   [15:0] grp_MUL_DP_fu_1426_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1426_ap_return_1;
reg    grp_MUL_DP_fu_1426_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1436_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1436_ap_return_1;
reg    grp_MUL_DP_fu_1436_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1446_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1446_ap_return_1;
reg    grp_MUL_DP_fu_1446_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1456_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1456_ap_return_1;
reg    grp_MUL_DP_fu_1456_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1466_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1466_ap_return_1;
reg    grp_MUL_DP_fu_1466_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1476_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1476_ap_return_1;
reg    grp_MUL_DP_fu_1476_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1486_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1486_ap_return_1;
reg    grp_MUL_DP_fu_1486_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1496_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1496_ap_return_1;
reg    grp_MUL_DP_fu_1496_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1506_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1506_ap_return_1;
reg    grp_MUL_DP_fu_1506_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1516_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1516_ap_return_1;
reg    grp_MUL_DP_fu_1516_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1526_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1526_ap_return_1;
reg    grp_MUL_DP_fu_1526_ap_ce;
reg   [4:0] co_phi_fu_1280_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [4:0] h_phi_fu_1303_p4;
reg   [4:0] w_phi_fu_1315_p4;
reg   [4:0] h1_reg_1323;
wire    ap_CS_fsm_state5;
reg   [4:0] w2_reg_1335;
reg   [4:0] ci_reg_1347;
reg   [4:0] co4_phi_fu_1373_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [4:0] h5_phi_fu_1396_p4;
reg   [4:0] w6_phi_fu_1408_p4;
wire   [31:0] co_cast9_mid2_fu_1588_p1;
wire   [31:0] tmp_504_cast_fu_1674_p1;
wire   [31:0] tmp_508_cast_fu_1760_p1;
wire   [31:0] tmp_521_cast_fu_1894_p1;
wire   [31:0] ci_cast4_fu_1800_p1;
wire   [31:0] tmp_513_cast_fu_2386_p1;
wire   [7:0] tmp_78_s_fu_2219_p2;
wire   [0:0] tmp_594_fu_2472_p3;
wire   [7:0] tmp_78_9_fu_2191_p2;
wire   [7:0] tmp_78_8_fu_2163_p2;
wire   [7:0] tmp_78_7_fu_2135_p2;
wire   [7:0] tmp_78_6_fu_2107_p2;
wire   [7:0] tmp_78_5_fu_2079_p2;
wire   [7:0] tmp_78_4_fu_2051_p2;
wire   [7:0] tmp_78_3_fu_2023_p2;
wire   [7:0] tmp_78_2_fu_1995_p2;
wire   [7:0] tmp_78_1_fu_1967_p2;
wire   [7:0] tmp_50_fu_1939_p2;
wire   [7:0] tmp_76_10_fu_2237_p2;
wire   [7:0] tmp_76_s_fu_2209_p2;
wire   [7:0] tmp_76_9_fu_2181_p2;
wire   [7:0] tmp_76_8_fu_2153_p2;
wire   [7:0] tmp_76_7_fu_2125_p2;
wire   [7:0] tmp_76_6_fu_2097_p2;
wire   [7:0] tmp_76_5_fu_2069_p2;
wire   [7:0] tmp_76_4_fu_2041_p2;
wire   [7:0] tmp_76_3_fu_2013_p2;
wire   [7:0] tmp_76_2_fu_1985_p2;
wire   [7:0] tmp_76_1_fu_1957_p2;
wire   [7:0] tmp_48_fu_1929_p2;
wire   [7:0] tmp_78_10_fu_2247_p2;
wire    ap_CS_fsm_state9;
wire   [9:0] indvar_flatten_op_fu_1554_p2;
wire   [4:0] co_22_fu_1568_p2;
wire   [0:0] exitcond_fu_1598_p2;
wire   [0:0] not_exitcond_flatten_fu_1593_p2;
wire   [4:0] h_mid_fu_1574_p3;
wire   [0:0] exitcond35_mid_fu_1604_p2;
wire   [0:0] tmp_s_fu_1616_p2;
wire   [4:0] h_23_fu_1610_p2;
wire   [8:0] tmp_fu_1637_p3;
wire   [5:0] tmp_591_fu_1648_p3;
wire   [9:0] p_shl_cast_fu_1644_p1;
wire   [9:0] p_shl1_cast_fu_1655_p1;
wire   [9:0] w_cast7_cast_fu_1665_p1;
wire   [9:0] tmp_433_fu_1659_p2;
wire   [9:0] tmp_434_fu_1668_p2;
wire   [8:0] tmp_435_fu_1711_p3;
wire   [5:0] tmp_436_fu_1723_p3;
wire   [9:0] p_shl3_cast_fu_1731_p1;
wire   [9:0] p_shl2_cast_fu_1719_p1;
wire   [9:0] w2_cast5_cast_fu_1751_p1;
wire   [9:0] tmp_438_fu_1755_p2;
wire   [8:0] tmp_442_fu_1828_p3;
wire   [5:0] tmp_443_fu_1840_p3;
wire   [9:0] p_shl6_cast_fu_1836_p1;
wire   [9:0] p_shl7_cast_fu_1848_p1;
wire   [9:0] tmp_444_fu_1852_p2;
wire   [9:0] tmp_445_fu_1858_p2;
wire   [10:0] tmp_595_fu_1871_p3;
wire   [13:0] p_shl4_cast_fu_1863_p3;
wire   [13:0] p_shl5_cast_fu_1879_p1;
wire   [13:0] tmp_446_fu_1883_p2;
wire   [13:0] tmp_447_fu_1889_p2;
wire   [7:0] tmp_596_fu_1925_p1;
wire   [7:0] tmp_597_fu_1935_p1;
wire   [7:0] tmp_598_fu_1953_p1;
wire   [7:0] tmp_599_fu_1963_p1;
wire   [7:0] tmp_600_fu_1981_p1;
wire   [7:0] tmp_601_fu_1991_p1;
wire   [7:0] tmp_602_fu_2009_p1;
wire   [7:0] tmp_603_fu_2019_p1;
wire   [7:0] tmp_604_fu_2037_p1;
wire   [7:0] tmp_605_fu_2047_p1;
wire   [7:0] tmp_606_fu_2065_p1;
wire   [7:0] tmp_607_fu_2075_p1;
wire   [7:0] tmp_608_fu_2093_p1;
wire   [7:0] tmp_609_fu_2103_p1;
wire   [7:0] tmp_610_fu_2121_p1;
wire   [7:0] tmp_611_fu_2131_p1;
wire   [7:0] tmp_612_fu_2149_p1;
wire   [7:0] tmp_613_fu_2159_p1;
wire   [7:0] tmp_614_fu_2177_p1;
wire   [7:0] tmp_615_fu_2187_p1;
wire   [7:0] tmp_616_fu_2205_p1;
wire   [7:0] tmp_617_fu_2215_p1;
wire   [7:0] tmp_618_fu_2233_p1;
wire   [7:0] tmp_619_fu_2243_p1;
wire   [9:0] indvar_flatten21_op_fu_2271_p2;
wire   [0:0] exitcond25_fu_2303_p2;
wire   [0:0] not_exitcond_flatten_2_fu_2298_p2;
wire   [4:0] co_23_fu_2285_p2;
wire   [4:0] h5_mid_fu_2291_p3;
wire   [0:0] exitcond_mid_fu_2309_p2;
wire   [0:0] tmp_439_fu_2328_p2;
wire   [4:0] h_5_fu_2322_p2;
wire   [8:0] tmp_592_fu_2349_p3;
wire   [5:0] tmp_593_fu_2360_p3;
wire   [9:0] p_shl8_cast_fu_2356_p1;
wire   [9:0] p_shl9_cast_fu_2367_p1;
wire   [9:0] w6_cast1_cast_fu_2377_p1;
wire   [9:0] tmp_440_fu_2371_p2;
wire   [9:0] tmp_441_fu_2380_p2;
wire   [7:0] tmp_51_fu_2419_p26;
wire    ap_CS_fsm_state18;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_1416(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_0_V_q0),
    .b_V(weight_12_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1416_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1416_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1416_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1426(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_1_V_q0),
    .b_V(weight_13_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1426_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1426_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1426_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1436(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_2_V_q0),
    .b_V(weight_14_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1436_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1436_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1436_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1446(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_3_V_q0),
    .b_V(weight_15_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1446_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1446_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1446_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1456(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_4_V_q0),
    .b_V(weight_16_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1456_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1456_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1456_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1466(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_5_V_q0),
    .b_V(weight_17_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1466_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1466_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1466_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1476(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_6_V_q0),
    .b_V(weight_18_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1476_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1476_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1476_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1486(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_7_V_q0),
    .b_V(weight_19_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1486_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1486_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1486_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1496(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_8_V_q0),
    .b_V(weight_20_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1496_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1496_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1496_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_9_V_q0),
    .b_V(weight_21_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1506_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1506_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1506_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1516(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_10_V_q0),
    .b_V(weight_22_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1516_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1516_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1516_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1526(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_11_V_q0),
    .b_V(weight_23_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1526_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1526_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1526_ap_ce)
);

ShuffleNetV2_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_eOg_x_U91(
    .din1(buffer1_1_24_16x16_p_23_q0),
    .din2(buffer1_1_24_16x16_p_22_q0),
    .din3(buffer1_1_24_16x16_p_11_q0),
    .din4(buffer1_1_24_16x16_p_6_q0),
    .din5(buffer1_1_24_16x16_p_5_q0),
    .din6(buffer1_1_24_16x16_p_4_q0),
    .din7(buffer1_1_24_16x16_p_3_q0),
    .din8(buffer1_1_24_16x16_p_2_q0),
    .din9(buffer1_1_24_16x16_p_1_q0),
    .din10(buffer1_1_24_16x16_p_q0),
    .din11(buffer1_1_24_16x16_p_21_q0),
    .din12(buffer1_1_24_16x16_p_20_q0),
    .din13(buffer1_1_24_16x16_p_19_q0),
    .din14(buffer1_1_24_16x16_p_18_q0),
    .din15(buffer1_1_24_16x16_p_17_q0),
    .din16(buffer1_1_24_16x16_p_16_q0),
    .din17(buffer1_1_24_16x16_p_15_q0),
    .din18(buffer1_1_24_16x16_p_14_q0),
    .din19(buffer1_1_24_16x16_p_13_q0),
    .din20(buffer1_1_24_16x16_p_12_q0),
    .din21(buffer1_1_24_16x16_p_10_q0),
    .din22(buffer1_1_24_16x16_p_9_q0),
    .din23(buffer1_1_24_16x16_p_8_q0),
    .din24(buffer1_1_24_16x16_p_7_q0),
    .din25(ap_reg_pp1_iter2_co4_mid2_reg_2957),
    .dout(tmp_51_fu_2419_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state14)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond33_fu_1788_p2))) begin
        ci_reg_1347 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ci_reg_1347 <= ci_14_reg_2805;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
        co4_reg_1369 <= 5'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_1369 <= co4_mid2_reg_2957;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0))) begin
        co_reg_1276 <= co_cast9_mid2_v_reg_2502;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_1276 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_1323 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond33_fu_1788_p2 == 1'd1))) begin
        h1_reg_1323 <= h_6_fu_1794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
        h5_reg_1392 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_1392 <= h5_cast2_mid2_reg_2969;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0))) begin
        h_reg_1299 <= h_cast8_mid2_reg_2513;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_1299 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_1536_p2 == 1'd0))) begin
        indvar_flatten7_reg_1265 <= indvar_flatten_next1_fu_1542_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten7_reg_1265 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
        indvar_flatten8_reg_1358 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten12_fu_2253_p2))) begin
        indvar_flatten8_reg_1358 <= indvar_flatten_next1_6_fu_2259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
        indvar_flatten9_reg_1381 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten12_fu_2253_p2))) begin
        indvar_flatten9_reg_1381 <= indvar_flatten_next1_5_fu_2277_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_1536_p2 == 1'd0))) begin
        indvar_flatten_reg_1288 <= indvar_flatten_next_fu_1560_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_1288 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond34_fu_1741_p2))) begin
        w2_reg_1335 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond32_fu_1899_p2))) begin
        w2_reg_1335 <= w_32_fu_1911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
        w6_reg_1404 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_reg_1404 <= w_33_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0))) begin
        w_reg_1311 <= w_31_fu_1702_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_1311 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_2480 <= exitcond_flatten_reg_2480;
        exitcond_flatten_reg_2480 <= exitcond_flatten_fu_1536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten12_reg_2935 <= exitcond_flatten12_reg_2935;
        exitcond_flatten12_reg_2935 <= exitcond_flatten12_fu_2253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co4_mid2_reg_2957 <= co4_mid2_reg_2957;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buffer1_1_24_16x16_p_100_reg_2574 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_101_reg_2579 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_102_reg_2584 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_103_reg_2589 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_104_reg_2594 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_105_reg_2599 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_106_reg_2604 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_107_reg_2609 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_108_reg_2614 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_109_reg_2619 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_110_reg_2624 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_111_reg_2629 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_112_reg_2634 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_113_reg_2639 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_114_reg_2644 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_115_reg_2649 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_116_reg_2654 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_117_reg_2659 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_118_reg_2664 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_95_reg_2549 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_96_reg_2554 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_97_reg_2559 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_98_reg_2564 <= tmp_508_cast_fu_1760_p1;
        buffer1_1_24_16x16_p_99_reg_2569 <= tmp_508_cast_fu_1760_p1;
        w2_cast5_cast2_reg_2544[4 : 0] <= w2_cast5_cast2_fu_1747_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer1_1_24_16x16_p_119_reg_2815 <= buffer1_1_24_16x16_p_23_q0;
        buffer1_1_24_16x16_p_120_reg_2820 <= buffer1_1_24_16x16_p_19_q0;
        buffer1_1_24_16x16_p_121_reg_2825 <= buffer1_1_24_16x16_p_22_q0;
        buffer1_1_24_16x16_p_122_reg_2830 <= buffer1_1_24_16x16_p_18_q0;
        buffer1_1_24_16x16_p_123_reg_2835 <= buffer1_1_24_16x16_p_11_q0;
        buffer1_1_24_16x16_p_124_reg_2840 <= buffer1_1_24_16x16_p_17_q0;
        buffer1_1_24_16x16_p_125_reg_2845 <= buffer1_1_24_16x16_p_6_q0;
        buffer1_1_24_16x16_p_126_reg_2850 <= buffer1_1_24_16x16_p_16_q0;
        buffer1_1_24_16x16_p_127_reg_2855 <= buffer1_1_24_16x16_p_5_q0;
        buffer1_1_24_16x16_p_128_reg_2860 <= buffer1_1_24_16x16_p_15_q0;
        buffer1_1_24_16x16_p_129_reg_2865 <= buffer1_1_24_16x16_p_4_q0;
        buffer1_1_24_16x16_p_130_reg_2870 <= buffer1_1_24_16x16_p_14_q0;
        buffer1_1_24_16x16_p_131_reg_2875 <= buffer1_1_24_16x16_p_3_q0;
        buffer1_1_24_16x16_p_132_reg_2880 <= buffer1_1_24_16x16_p_13_q0;
        buffer1_1_24_16x16_p_133_reg_2885 <= buffer1_1_24_16x16_p_2_q0;
        buffer1_1_24_16x16_p_134_reg_2890 <= buffer1_1_24_16x16_p_12_q0;
        buffer1_1_24_16x16_p_135_reg_2895 <= buffer1_1_24_16x16_p_1_q0;
        buffer1_1_24_16x16_p_136_reg_2900 <= buffer1_1_24_16x16_p_10_q0;
        buffer1_1_24_16x16_p_137_reg_2905 <= buffer1_1_24_16x16_p_q0;
        buffer1_1_24_16x16_p_138_reg_2910 <= buffer1_1_24_16x16_p_9_q0;
        buffer1_1_24_16x16_p_139_reg_2915 <= buffer1_1_24_16x16_p_21_q0;
        buffer1_1_24_16x16_p_140_reg_2920 <= buffer1_1_24_16x16_p_8_q0;
        buffer1_1_24_16x16_p_141_reg_2925 <= buffer1_1_24_16x16_p_20_q0;
        buffer1_1_24_16x16_p_142_reg_2930 <= buffer1_1_24_16x16_p_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935))) begin
        buffer1_1_24_16x16_p_143_reg_2976 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_144_reg_2982 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_145_reg_2988 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_146_reg_2994 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_147_reg_3000 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_148_reg_3006 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_149_reg_3012 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_150_reg_3018 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_151_reg_3024 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_152_reg_3030 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_153_reg_3036 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_154_reg_3042 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_155_reg_3048 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_156_reg_3054 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_157_reg_3060 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_158_reg_3066 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_159_reg_3072 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_160_reg_3078 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_161_reg_3084 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_162_reg_3090 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_163_reg_3096 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_164_reg_3102 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_165_reg_3108 <= tmp_513_cast_fu_2386_p1;
        buffer1_1_24_16x16_p_166_reg_3114 <= tmp_513_cast_fu_2386_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_14_reg_2805 <= ci_14_fu_1905_p2;
        input_V_addr_reg_2677 <= tmp_521_cast_fu_1894_p1;
        weight_0_V_addr_reg_2682 <= ci_cast4_fu_1800_p1;
        weight_10_V_addr_reg_2732 <= ci_cast4_fu_1800_p1;
        weight_11_V_addr_reg_2737 <= ci_cast4_fu_1800_p1;
        weight_12_V_addr_reg_2742 <= ci_cast4_fu_1800_p1;
        weight_13_V_addr_reg_2747 <= ci_cast4_fu_1800_p1;
        weight_14_V_addr_reg_2752 <= ci_cast4_fu_1800_p1;
        weight_15_V_addr_reg_2757 <= ci_cast4_fu_1800_p1;
        weight_16_V_addr_reg_2762 <= ci_cast4_fu_1800_p1;
        weight_17_V_addr_reg_2767 <= ci_cast4_fu_1800_p1;
        weight_18_V_addr_reg_2772 <= ci_cast4_fu_1800_p1;
        weight_19_V_addr_reg_2777 <= ci_cast4_fu_1800_p1;
        weight_1_V_addr_reg_2687 <= ci_cast4_fu_1800_p1;
        weight_20_V_addr_reg_2782 <= ci_cast4_fu_1800_p1;
        weight_21_V_addr_reg_2787 <= ci_cast4_fu_1800_p1;
        weight_22_V_addr_reg_2792 <= ci_cast4_fu_1800_p1;
        weight_23_V_addr_reg_2797 <= ci_cast4_fu_1800_p1;
        weight_2_V_addr_reg_2692 <= ci_cast4_fu_1800_p1;
        weight_3_V_addr_reg_2697 <= ci_cast4_fu_1800_p1;
        weight_4_V_addr_reg_2702 <= ci_cast4_fu_1800_p1;
        weight_5_V_addr_reg_2707 <= ci_cast4_fu_1800_p1;
        weight_6_V_addr_reg_2712 <= ci_cast4_fu_1800_p1;
        weight_7_V_addr_reg_2717 <= ci_cast4_fu_1800_p1;
        weight_8_V_addr_reg_2722 <= ci_cast4_fu_1800_p1;
        weight_9_V_addr_reg_2727 <= ci_cast4_fu_1800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten12_reg_2935))) begin
        co4_mid2_reg_2957 <= co4_mid2_fu_2315_p3;
        h5_cast2_mid2_reg_2969 <= h5_cast2_mid2_fu_2341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_2480 == 1'd0))) begin
        co_cast9_mid2_v_reg_2502 <= co_cast9_mid2_v_fu_1581_p3;
        h_cast8_mid2_reg_2513 <= h_cast8_mid2_fu_1629_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_1536_p2 == 1'd0))) begin
        exitcond_flatten11_reg_2489 <= exitcond_flatten11_fu_1548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten12_fu_2253_p2))) begin
        exitcond_flatten13_reg_2944 <= exitcond_flatten13_fu_2265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast6_cast_reg_2530[4 : 0] <= h1_cast6_cast_fu_1707_p1[4 : 0];
        tmp_437_reg_2535[9 : 1] <= tmp_437_fu_1735_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten12_reg_2935))) begin
        w6_mid2_reg_2963 <= w6_mid2_fu_2333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_2480 == 1'd0))) begin
        w_mid2_reg_2507 <= w_mid2_fu_1621_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1536_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten12_fu_2253_p2)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_10_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_10_address0 = buffer1_1_24_16x16_p_109_reg_2619;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_10_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_10_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_10_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_10_d0 = tmp_78_8_fu_2163_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_10_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd20)))) begin
        buffer1_1_24_16x16_p_10_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd20))) begin
        buffer1_1_24_16x16_p_10_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_11_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_11_address0 = buffer1_1_24_16x16_p_113_reg_2639;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_11_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_11_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_11_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_11_d0 = tmp_76_2_fu_1985_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_11_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd2)))) begin
        buffer1_1_24_16x16_p_11_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd2))) begin
        buffer1_1_24_16x16_p_11_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_12_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_12_address0 = buffer1_1_24_16x16_p_102_reg_2584;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_12_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_12_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_12_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_12_d0 = tmp_78_7_fu_2135_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_12_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd19)))) begin
        buffer1_1_24_16x16_p_12_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd19))) begin
        buffer1_1_24_16x16_p_12_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_13_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_13_address0 = buffer1_1_24_16x16_p_106_reg_2604;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_13_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_13_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_13_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_13_d0 = tmp_78_6_fu_2107_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_13_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd18)))) begin
        buffer1_1_24_16x16_p_13_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd18))) begin
        buffer1_1_24_16x16_p_13_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_14_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_14_address0 = buffer1_1_24_16x16_p_112_reg_2634;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_14_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_14_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_14_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_14_d0 = tmp_78_5_fu_2079_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_14_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd17)))) begin
        buffer1_1_24_16x16_p_14_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd17))) begin
        buffer1_1_24_16x16_p_14_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_15_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_15_address0 = buffer1_1_24_16x16_p_110_reg_2624;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_15_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_15_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_15_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_15_d0 = tmp_78_4_fu_2051_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_15_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd16)))) begin
        buffer1_1_24_16x16_p_15_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd16))) begin
        buffer1_1_24_16x16_p_15_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_16_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_16_address0 = buffer1_1_24_16x16_p_98_reg_2564;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_16_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_16_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_16_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_16_d0 = tmp_78_3_fu_2023_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_16_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd15)))) begin
        buffer1_1_24_16x16_p_16_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd15))) begin
        buffer1_1_24_16x16_p_16_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_17_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_17_address0 = buffer1_1_24_16x16_p_111_reg_2629;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_17_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_17_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_17_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_17_d0 = tmp_78_2_fu_1995_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_17_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd14)))) begin
        buffer1_1_24_16x16_p_17_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd14))) begin
        buffer1_1_24_16x16_p_17_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_18_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_18_address0 = buffer1_1_24_16x16_p_95_reg_2549;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_18_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_18_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_18_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_18_d0 = tmp_78_1_fu_1967_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_18_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd13)))) begin
        buffer1_1_24_16x16_p_18_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd13))) begin
        buffer1_1_24_16x16_p_18_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_19_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_19_address0 = buffer1_1_24_16x16_p_97_reg_2559;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_19_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_19_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_19_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_19_d0 = tmp_50_fu_1939_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_19_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd12)))) begin
        buffer1_1_24_16x16_p_19_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd12))) begin
        buffer1_1_24_16x16_p_19_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_1_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_1_address0 = buffer1_1_24_16x16_p_118_reg_2664;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_1_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_1_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_1_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_1_d0 = tmp_76_8_fu_2153_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd8)))) begin
        buffer1_1_24_16x16_p_1_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd8))) begin
        buffer1_1_24_16x16_p_1_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_20_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_20_address0 = buffer1_1_24_16x16_p_108_reg_2614;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_20_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_20_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_20_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_20_d0 = tmp_76_10_fu_2237_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_20_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd11)))) begin
        buffer1_1_24_16x16_p_20_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd11))) begin
        buffer1_1_24_16x16_p_20_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_21_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_21_address0 = buffer1_1_24_16x16_p_107_reg_2609;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_21_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_21_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_21_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_21_d0 = tmp_76_s_fu_2209_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_21_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd10)))) begin
        buffer1_1_24_16x16_p_21_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd10))) begin
        buffer1_1_24_16x16_p_21_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_22_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_22_address0 = buffer1_1_24_16x16_p_100_reg_2574;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_22_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_22_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_22_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_22_d0 = tmp_76_1_fu_1957_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_22_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd1)))) begin
        buffer1_1_24_16x16_p_22_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd1))) begin
        buffer1_1_24_16x16_p_22_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_23_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_23_address0 = buffer1_1_24_16x16_p_99_reg_2569;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_23_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_23_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_23_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_23_d0 = tmp_48_fu_1929_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_23_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd0)))) begin
        buffer1_1_24_16x16_p_23_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd0))) begin
        buffer1_1_24_16x16_p_23_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_2_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_2_address0 = buffer1_1_24_16x16_p_116_reg_2654;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_2_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_2_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_2_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_2_d0 = tmp_76_7_fu_2125_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd7)))) begin
        buffer1_1_24_16x16_p_2_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd7))) begin
        buffer1_1_24_16x16_p_2_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_3_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_3_address0 = buffer1_1_24_16x16_p_117_reg_2659;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_3_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_3_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_3_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_3_d0 = tmp_76_6_fu_2097_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd6)))) begin
        buffer1_1_24_16x16_p_3_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd6))) begin
        buffer1_1_24_16x16_p_3_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_4_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_4_address0 = buffer1_1_24_16x16_p_115_reg_2649;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_4_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_4_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_4_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_4_d0 = tmp_76_5_fu_2069_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd5)))) begin
        buffer1_1_24_16x16_p_4_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd5))) begin
        buffer1_1_24_16x16_p_4_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_5_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_5_address0 = buffer1_1_24_16x16_p_103_reg_2589;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_5_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_5_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_5_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_5_d0 = tmp_76_4_fu_2041_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd4)))) begin
        buffer1_1_24_16x16_p_5_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd4))) begin
        buffer1_1_24_16x16_p_5_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_6_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_6_address0 = buffer1_1_24_16x16_p_104_reg_2594;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_6_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_6_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_6_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_6_d0 = tmp_76_3_fu_2013_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd3)))) begin
        buffer1_1_24_16x16_p_6_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd3))) begin
        buffer1_1_24_16x16_p_6_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_7_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_7_address0 = buffer1_1_24_16x16_p_96_reg_2554;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_7_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_7_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_7_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_7_d0 = tmp_78_10_fu_2247_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast9_mid2_v_reg_2502 == 5'd0) & ~(co_cast9_mid2_v_reg_2502 == 5'd1) & ~(co_cast9_mid2_v_reg_2502 == 5'd2) & ~(co_cast9_mid2_v_reg_2502 == 5'd3) & ~(co_cast9_mid2_v_reg_2502 == 5'd4) & ~(co_cast9_mid2_v_reg_2502 == 5'd5) & ~(co_cast9_mid2_v_reg_2502 == 5'd6) & ~(co_cast9_mid2_v_reg_2502 == 5'd7) & ~(co_cast9_mid2_v_reg_2502 == 5'd8) & ~(co_cast9_mid2_v_reg_2502 == 5'd9) & ~(co_cast9_mid2_v_reg_2502 == 5'd10) & ~(co_cast9_mid2_v_reg_2502 == 5'd11) & ~(co_cast9_mid2_v_reg_2502 == 5'd12) & ~(co_cast9_mid2_v_reg_2502 == 5'd13) & ~(co_cast9_mid2_v_reg_2502 == 5'd14) & ~(co_cast9_mid2_v_reg_2502 == 5'd15) & ~(co_cast9_mid2_v_reg_2502 == 5'd16) & ~(co_cast9_mid2_v_reg_2502 == 5'd17) & ~(co_cast9_mid2_v_reg_2502 == 5'd18) & ~(co_cast9_mid2_v_reg_2502 == 5'd19) & ~(co_cast9_mid2_v_reg_2502 == 5'd20) & ~(co_cast9_mid2_v_reg_2502 == 5'd21) & ~(co_cast9_mid2_v_reg_2502 == 5'd22)))) begin
        buffer1_1_24_16x16_p_7_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd0) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd1) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd2) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd4) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd5) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd6) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd7) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd8) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd9) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd10) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd11) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd12) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd13) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd14) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd15) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd16) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd17) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd18) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd19) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd20) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd21) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd22))) begin
        buffer1_1_24_16x16_p_7_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_8_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_8_address0 = buffer1_1_24_16x16_p_114_reg_2644;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_8_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_8_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_8_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_8_d0 = tmp_78_s_fu_2219_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd22)))) begin
        buffer1_1_24_16x16_p_8_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd22))) begin
        buffer1_1_24_16x16_p_8_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_9_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_9_address0 = buffer1_1_24_16x16_p_105_reg_2599;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_9_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_9_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_9_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_9_d0 = tmp_78_9_fu_2191_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_9_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd21)))) begin
        buffer1_1_24_16x16_p_9_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd21))) begin
        buffer1_1_24_16x16_p_9_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_address0 = tmp_513_cast_fu_2386_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_address0 = buffer1_1_24_16x16_p_101_reg_2579;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_address0 = tmp_504_cast_fu_1674_p1;
    end else begin
        buffer1_1_24_16x16_p_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        buffer1_1_24_16x16_p_ce0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_24_16x16_p_ce1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer1_1_24_16x16_p_d0 = tmp_76_9_fu_2181_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_24_16x16_p_d0 = bias_V_q0;
    end else begin
        buffer1_1_24_16x16_p_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2502 == 5'd9)))) begin
        buffer1_1_24_16x16_p_we0 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_594_fu_2472_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2957 == 5'd9))) begin
        buffer1_1_24_16x16_p_we1 = 1'b1;
    end else begin
        buffer1_1_24_16x16_p_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_1373_p4 = co4_mid2_reg_2957;
    end else begin
        co4_phi_fu_1373_p4 = co4_reg_1369;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_1280_p4 = co_cast9_mid2_v_reg_2502;
    end else begin
        co_phi_fu_1280_p4 = co_reg_1276;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1416_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1416_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1426_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1426_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1436_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1436_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1446_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1446_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1456_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1456_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1466_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1466_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1476_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1476_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1486_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1486_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1496_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1496_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1506_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1506_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1516_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1516_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1526_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1526_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_1396_p4 = h5_cast2_mid2_reg_2969;
    end else begin
        h5_phi_fu_1396_p4 = h5_reg_1392;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_1303_p4 = h_cast8_mid2_reg_2513;
    end else begin
        h_phi_fu_1303_p4 = h_reg_1299;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten12_reg_2935) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_1408_p4 = w_33_fu_2414_p2;
    end else begin
        w6_phi_fu_1408_p4 = w6_reg_1404;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2480 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_1315_p4 = w_31_fu_1702_p2;
    end else begin
        w_phi_fu_1315_p4 = w_reg_1311;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1536_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1536_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond34_fu_1741_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond33_fu_1788_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond32_fu_1899_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten12_fu_2253_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten12_fu_2253_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast9_mid2_fu_1588_p1;

assign buffer1_1_24_16x16_p_10_address1 = buffer1_1_24_16x16_p_157_reg_3060;

assign buffer1_1_24_16x16_p_10_d1 = 8'd0;

assign buffer1_1_24_16x16_p_11_address1 = buffer1_1_24_16x16_p_161_reg_3084;

assign buffer1_1_24_16x16_p_11_d1 = 8'd0;

assign buffer1_1_24_16x16_p_12_address1 = buffer1_1_24_16x16_p_150_reg_3018;

assign buffer1_1_24_16x16_p_12_d1 = 8'd0;

assign buffer1_1_24_16x16_p_13_address1 = buffer1_1_24_16x16_p_154_reg_3042;

assign buffer1_1_24_16x16_p_13_d1 = 8'd0;

assign buffer1_1_24_16x16_p_14_address1 = buffer1_1_24_16x16_p_160_reg_3078;

assign buffer1_1_24_16x16_p_14_d1 = 8'd0;

assign buffer1_1_24_16x16_p_15_address1 = buffer1_1_24_16x16_p_158_reg_3066;

assign buffer1_1_24_16x16_p_15_d1 = 8'd0;

assign buffer1_1_24_16x16_p_16_address1 = buffer1_1_24_16x16_p_146_reg_2994;

assign buffer1_1_24_16x16_p_16_d1 = 8'd0;

assign buffer1_1_24_16x16_p_17_address1 = buffer1_1_24_16x16_p_159_reg_3072;

assign buffer1_1_24_16x16_p_17_d1 = 8'd0;

assign buffer1_1_24_16x16_p_18_address1 = buffer1_1_24_16x16_p_143_reg_2976;

assign buffer1_1_24_16x16_p_18_d1 = 8'd0;

assign buffer1_1_24_16x16_p_19_address1 = buffer1_1_24_16x16_p_145_reg_2988;

assign buffer1_1_24_16x16_p_19_d1 = 8'd0;

assign buffer1_1_24_16x16_p_1_address1 = buffer1_1_24_16x16_p_166_reg_3114;

assign buffer1_1_24_16x16_p_1_d1 = 8'd0;

assign buffer1_1_24_16x16_p_20_address1 = buffer1_1_24_16x16_p_156_reg_3054;

assign buffer1_1_24_16x16_p_20_d1 = 8'd0;

assign buffer1_1_24_16x16_p_21_address1 = buffer1_1_24_16x16_p_155_reg_3048;

assign buffer1_1_24_16x16_p_21_d1 = 8'd0;

assign buffer1_1_24_16x16_p_22_address1 = buffer1_1_24_16x16_p_148_reg_3006;

assign buffer1_1_24_16x16_p_22_d1 = 8'd0;

assign buffer1_1_24_16x16_p_23_address1 = buffer1_1_24_16x16_p_147_reg_3000;

assign buffer1_1_24_16x16_p_23_d1 = 8'd0;

assign buffer1_1_24_16x16_p_2_address1 = buffer1_1_24_16x16_p_164_reg_3102;

assign buffer1_1_24_16x16_p_2_d1 = 8'd0;

assign buffer1_1_24_16x16_p_3_address1 = buffer1_1_24_16x16_p_165_reg_3108;

assign buffer1_1_24_16x16_p_3_d1 = 8'd0;

assign buffer1_1_24_16x16_p_4_address1 = buffer1_1_24_16x16_p_163_reg_3096;

assign buffer1_1_24_16x16_p_4_d1 = 8'd0;

assign buffer1_1_24_16x16_p_5_address1 = buffer1_1_24_16x16_p_151_reg_3024;

assign buffer1_1_24_16x16_p_5_d1 = 8'd0;

assign buffer1_1_24_16x16_p_6_address1 = buffer1_1_24_16x16_p_152_reg_3030;

assign buffer1_1_24_16x16_p_6_d1 = 8'd0;

assign buffer1_1_24_16x16_p_7_address1 = buffer1_1_24_16x16_p_144_reg_2982;

assign buffer1_1_24_16x16_p_7_d1 = 8'd0;

assign buffer1_1_24_16x16_p_8_address1 = buffer1_1_24_16x16_p_162_reg_3090;

assign buffer1_1_24_16x16_p_8_d1 = 8'd0;

assign buffer1_1_24_16x16_p_9_address1 = buffer1_1_24_16x16_p_153_reg_3036;

assign buffer1_1_24_16x16_p_9_d1 = 8'd0;

assign buffer1_1_24_16x16_p_address1 = buffer1_1_24_16x16_p_149_reg_3012;

assign buffer1_1_24_16x16_p_d1 = 8'd0;

assign ci_14_fu_1905_p2 = (ci_reg_1347 + 5'd1);

assign ci_cast4_fu_1800_p1 = ci_reg_1347;

assign co4_mid2_fu_2315_p3 = ((exitcond_flatten13_reg_2944[0:0] === 1'b1) ? co_23_fu_2285_p2 : co4_phi_fu_1373_p4);

assign co_22_fu_1568_p2 = (co_phi_fu_1280_p4 + 5'd1);

assign co_23_fu_2285_p2 = (co4_phi_fu_1373_p4 + 5'd1);

assign co_cast9_mid2_fu_1588_p1 = co_cast9_mid2_v_fu_1581_p3;

assign co_cast9_mid2_v_fu_1581_p3 = ((exitcond_flatten11_reg_2489[0:0] === 1'b1) ? co_22_fu_1568_p2 : co_phi_fu_1280_p4);

assign exitcond25_fu_2303_p2 = ((w6_phi_fu_1408_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond32_fu_1899_p2 = ((ci_reg_1347 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond33_fu_1788_p2 = ((w2_reg_1335 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond34_fu_1741_p2 = ((h1_reg_1323 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond35_mid_fu_1604_p2 = (exitcond_fu_1598_p2 & not_exitcond_flatten_fu_1593_p2);

assign exitcond_flatten11_fu_1548_p2 = ((indvar_flatten_reg_1288 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten12_fu_2253_p2 = ((indvar_flatten8_reg_1358 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten13_fu_2265_p2 = ((indvar_flatten9_reg_1381 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1536_p2 = ((indvar_flatten7_reg_1265 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_fu_1598_p2 = ((w_phi_fu_1315_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_2309_p2 = (exitcond25_fu_2303_p2 & not_exitcond_flatten_2_fu_2298_p2);

assign h1_cast6_cast_fu_1707_p1 = h1_reg_1323;

assign h5_cast2_mid2_fu_2341_p3 = ((exitcond_mid_fu_2309_p2[0:0] === 1'b1) ? h_5_fu_2322_p2 : h5_mid_fu_2291_p3);

assign h5_mid_fu_2291_p3 = ((exitcond_flatten13_reg_2944[0:0] === 1'b1) ? 5'd1 : h5_phi_fu_1396_p4);

assign h_23_fu_1610_p2 = (h_mid_fu_1574_p3 + 5'd1);

assign h_5_fu_2322_p2 = (h5_mid_fu_2291_p3 + 5'd1);

assign h_6_fu_1794_p2 = (h1_reg_1323 + 5'd1);

assign h_cast8_mid2_fu_1629_p3 = ((exitcond35_mid_fu_1604_p2[0:0] === 1'b1) ? h_23_fu_1610_p2 : h_mid_fu_1574_p3);

assign h_mid_fu_1574_p3 = ((exitcond_flatten11_reg_2489[0:0] === 1'b1) ? 5'd1 : h_phi_fu_1303_p4);

assign indvar_flatten21_op_fu_2271_p2 = (indvar_flatten9_reg_1381 + 10'd1);

assign indvar_flatten_next1_5_fu_2277_p3 = ((exitcond_flatten13_fu_2265_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten21_op_fu_2271_p2);

assign indvar_flatten_next1_6_fu_2259_p2 = (indvar_flatten8_reg_1358 + 13'd1);

assign indvar_flatten_next1_fu_1542_p2 = (indvar_flatten7_reg_1265 + 13'd1);

assign indvar_flatten_next_fu_1560_p3 = ((exitcond_flatten11_fu_1548_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten_op_fu_1554_p2);

assign indvar_flatten_op_fu_1554_p2 = (indvar_flatten_reg_1288 + 10'd1);

assign input_V_address0 = input_V_addr_reg_2677;

assign not_exitcond_flatten_2_fu_2298_p2 = (exitcond_flatten13_reg_2944 ^ 1'd1);

assign not_exitcond_flatten_fu_1593_p2 = (exitcond_flatten11_reg_2489 ^ 1'd1);

assign p_shl1_cast_fu_1655_p1 = tmp_591_fu_1648_p3;

assign p_shl2_cast_fu_1719_p1 = tmp_435_fu_1711_p3;

assign p_shl3_cast_fu_1731_p1 = tmp_436_fu_1723_p3;

assign p_shl4_cast_fu_1863_p3 = {{tmp_445_fu_1858_p2}, {4'd0}};

assign p_shl5_cast_fu_1879_p1 = tmp_595_fu_1871_p3;

assign p_shl6_cast_fu_1836_p1 = tmp_442_fu_1828_p3;

assign p_shl7_cast_fu_1848_p1 = tmp_443_fu_1840_p3;

assign p_shl8_cast_fu_2356_p1 = tmp_592_fu_2349_p3;

assign p_shl9_cast_fu_2367_p1 = tmp_593_fu_2360_p3;

assign p_shl_cast_fu_1644_p1 = tmp_fu_1637_p3;

assign tmp_433_fu_1659_p2 = (p_shl_cast_fu_1644_p1 + p_shl1_cast_fu_1655_p1);

assign tmp_434_fu_1668_p2 = (w_cast7_cast_fu_1665_p1 + tmp_433_fu_1659_p2);

assign tmp_435_fu_1711_p3 = {{h1_reg_1323}, {4'd0}};

assign tmp_436_fu_1723_p3 = {{h1_reg_1323}, {1'd0}};

assign tmp_437_fu_1735_p2 = (p_shl3_cast_fu_1731_p1 + p_shl2_cast_fu_1719_p1);

assign tmp_438_fu_1755_p2 = (tmp_437_reg_2535 + w2_cast5_cast_fu_1751_p1);

assign tmp_439_fu_2328_p2 = (exitcond_mid_fu_2309_p2 | exitcond_flatten13_reg_2944);

assign tmp_440_fu_2371_p2 = (p_shl8_cast_fu_2356_p1 + p_shl9_cast_fu_2367_p1);

assign tmp_441_fu_2380_p2 = (w6_cast1_cast_fu_2377_p1 + tmp_440_fu_2371_p2);

assign tmp_442_fu_1828_p3 = {{ci_reg_1347}, {4'd0}};

assign tmp_443_fu_1840_p3 = {{ci_reg_1347}, {1'd0}};

assign tmp_444_fu_1852_p2 = (p_shl6_cast_fu_1836_p1 + p_shl7_cast_fu_1848_p1);

assign tmp_445_fu_1858_p2 = (h1_cast6_cast_reg_2530 + tmp_444_fu_1852_p2);

assign tmp_446_fu_1883_p2 = (p_shl4_cast_fu_1863_p3 + p_shl5_cast_fu_1879_p1);

assign tmp_447_fu_1889_p2 = (w2_cast5_cast2_reg_2544 + tmp_446_fu_1883_p2);

assign tmp_48_fu_1929_p2 = (buffer1_1_24_16x16_p_119_reg_2815 + tmp_596_fu_1925_p1);

assign tmp_504_cast_fu_1674_p1 = tmp_434_fu_1668_p2;

assign tmp_508_cast_fu_1760_p1 = tmp_438_fu_1755_p2;

assign tmp_50_fu_1939_p2 = (buffer1_1_24_16x16_p_120_reg_2820 + tmp_597_fu_1935_p1);

assign tmp_513_cast_fu_2386_p1 = tmp_441_fu_2380_p2;

assign tmp_521_cast_fu_1894_p1 = tmp_447_fu_1889_p2;

assign tmp_591_fu_1648_p3 = {{h_cast8_mid2_reg_2513}, {1'd0}};

assign tmp_592_fu_2349_p3 = {{h5_cast2_mid2_reg_2969}, {4'd0}};

assign tmp_593_fu_2360_p3 = {{h5_cast2_mid2_reg_2969}, {1'd0}};

assign tmp_594_fu_2472_p3 = tmp_51_fu_2419_p26[32'd7];

assign tmp_595_fu_1871_p3 = {{tmp_445_fu_1858_p2}, {1'd0}};

assign tmp_596_fu_1925_p1 = grp_MUL_DP_fu_1416_ap_return_0[7:0];

assign tmp_597_fu_1935_p1 = grp_MUL_DP_fu_1416_ap_return_1[7:0];

assign tmp_598_fu_1953_p1 = grp_MUL_DP_fu_1426_ap_return_0[7:0];

assign tmp_599_fu_1963_p1 = grp_MUL_DP_fu_1426_ap_return_1[7:0];

assign tmp_600_fu_1981_p1 = grp_MUL_DP_fu_1436_ap_return_0[7:0];

assign tmp_601_fu_1991_p1 = grp_MUL_DP_fu_1436_ap_return_1[7:0];

assign tmp_602_fu_2009_p1 = grp_MUL_DP_fu_1446_ap_return_0[7:0];

assign tmp_603_fu_2019_p1 = grp_MUL_DP_fu_1446_ap_return_1[7:0];

assign tmp_604_fu_2037_p1 = grp_MUL_DP_fu_1456_ap_return_0[7:0];

assign tmp_605_fu_2047_p1 = grp_MUL_DP_fu_1456_ap_return_1[7:0];

assign tmp_606_fu_2065_p1 = grp_MUL_DP_fu_1466_ap_return_0[7:0];

assign tmp_607_fu_2075_p1 = grp_MUL_DP_fu_1466_ap_return_1[7:0];

assign tmp_608_fu_2093_p1 = grp_MUL_DP_fu_1476_ap_return_0[7:0];

assign tmp_609_fu_2103_p1 = grp_MUL_DP_fu_1476_ap_return_1[7:0];

assign tmp_610_fu_2121_p1 = grp_MUL_DP_fu_1486_ap_return_0[7:0];

assign tmp_611_fu_2131_p1 = grp_MUL_DP_fu_1486_ap_return_1[7:0];

assign tmp_612_fu_2149_p1 = grp_MUL_DP_fu_1496_ap_return_0[7:0];

assign tmp_613_fu_2159_p1 = grp_MUL_DP_fu_1496_ap_return_1[7:0];

assign tmp_614_fu_2177_p1 = grp_MUL_DP_fu_1506_ap_return_0[7:0];

assign tmp_615_fu_2187_p1 = grp_MUL_DP_fu_1506_ap_return_1[7:0];

assign tmp_616_fu_2205_p1 = grp_MUL_DP_fu_1516_ap_return_0[7:0];

assign tmp_617_fu_2215_p1 = grp_MUL_DP_fu_1516_ap_return_1[7:0];

assign tmp_618_fu_2233_p1 = grp_MUL_DP_fu_1526_ap_return_0[7:0];

assign tmp_619_fu_2243_p1 = grp_MUL_DP_fu_1526_ap_return_1[7:0];

assign tmp_76_10_fu_2237_p2 = (buffer1_1_24_16x16_p_141_reg_2925 + tmp_618_fu_2233_p1);

assign tmp_76_1_fu_1957_p2 = (buffer1_1_24_16x16_p_121_reg_2825 + tmp_598_fu_1953_p1);

assign tmp_76_2_fu_1985_p2 = (buffer1_1_24_16x16_p_123_reg_2835 + tmp_600_fu_1981_p1);

assign tmp_76_3_fu_2013_p2 = (buffer1_1_24_16x16_p_125_reg_2845 + tmp_602_fu_2009_p1);

assign tmp_76_4_fu_2041_p2 = (buffer1_1_24_16x16_p_127_reg_2855 + tmp_604_fu_2037_p1);

assign tmp_76_5_fu_2069_p2 = (buffer1_1_24_16x16_p_129_reg_2865 + tmp_606_fu_2065_p1);

assign tmp_76_6_fu_2097_p2 = (buffer1_1_24_16x16_p_131_reg_2875 + tmp_608_fu_2093_p1);

assign tmp_76_7_fu_2125_p2 = (buffer1_1_24_16x16_p_133_reg_2885 + tmp_610_fu_2121_p1);

assign tmp_76_8_fu_2153_p2 = (buffer1_1_24_16x16_p_135_reg_2895 + tmp_612_fu_2149_p1);

assign tmp_76_9_fu_2181_p2 = (buffer1_1_24_16x16_p_137_reg_2905 + tmp_614_fu_2177_p1);

assign tmp_76_s_fu_2209_p2 = (buffer1_1_24_16x16_p_139_reg_2915 + tmp_616_fu_2205_p1);

assign tmp_78_10_fu_2247_p2 = (buffer1_1_24_16x16_p_142_reg_2930 + tmp_619_fu_2243_p1);

assign tmp_78_1_fu_1967_p2 = (buffer1_1_24_16x16_p_122_reg_2830 + tmp_599_fu_1963_p1);

assign tmp_78_2_fu_1995_p2 = (buffer1_1_24_16x16_p_124_reg_2840 + tmp_601_fu_1991_p1);

assign tmp_78_3_fu_2023_p2 = (buffer1_1_24_16x16_p_126_reg_2850 + tmp_603_fu_2019_p1);

assign tmp_78_4_fu_2051_p2 = (buffer1_1_24_16x16_p_128_reg_2860 + tmp_605_fu_2047_p1);

assign tmp_78_5_fu_2079_p2 = (buffer1_1_24_16x16_p_130_reg_2870 + tmp_607_fu_2075_p1);

assign tmp_78_6_fu_2107_p2 = (buffer1_1_24_16x16_p_132_reg_2880 + tmp_609_fu_2103_p1);

assign tmp_78_7_fu_2135_p2 = (buffer1_1_24_16x16_p_134_reg_2890 + tmp_611_fu_2131_p1);

assign tmp_78_8_fu_2163_p2 = (buffer1_1_24_16x16_p_136_reg_2900 + tmp_613_fu_2159_p1);

assign tmp_78_9_fu_2191_p2 = (buffer1_1_24_16x16_p_138_reg_2910 + tmp_615_fu_2187_p1);

assign tmp_78_s_fu_2219_p2 = (buffer1_1_24_16x16_p_140_reg_2920 + tmp_617_fu_2215_p1);

assign tmp_fu_1637_p3 = {{h_cast8_mid2_reg_2513}, {4'd0}};

assign tmp_s_fu_1616_p2 = (exitcond35_mid_fu_1604_p2 | exitcond_flatten11_reg_2489);

assign w2_cast5_cast2_fu_1747_p1 = w2_reg_1335;

assign w2_cast5_cast_fu_1751_p1 = w2_reg_1335;

assign w6_cast1_cast_fu_2377_p1 = w6_mid2_reg_2963;

assign w6_mid2_fu_2333_p3 = ((tmp_439_fu_2328_p2[0:0] === 1'b1) ? 5'd1 : w6_phi_fu_1408_p4);

assign w_31_fu_1702_p2 = (w_mid2_reg_2507 + 5'd1);

assign w_32_fu_1911_p2 = (w2_reg_1335 + 5'd1);

assign w_33_fu_2414_p2 = (w6_mid2_reg_2963 + 5'd1);

assign w_cast7_cast_fu_1665_p1 = w_mid2_reg_2507;

assign w_mid2_fu_1621_p3 = ((tmp_s_fu_1616_p2[0:0] === 1'b1) ? 5'd1 : w_phi_fu_1315_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_2682;

assign weight_10_V_address0 = weight_10_V_addr_reg_2732;

assign weight_11_V_address0 = weight_11_V_addr_reg_2737;

assign weight_12_V_address0 = weight_12_V_addr_reg_2742;

assign weight_13_V_address0 = weight_13_V_addr_reg_2747;

assign weight_14_V_address0 = weight_14_V_addr_reg_2752;

assign weight_15_V_address0 = weight_15_V_addr_reg_2757;

assign weight_16_V_address0 = weight_16_V_addr_reg_2762;

assign weight_17_V_address0 = weight_17_V_addr_reg_2767;

assign weight_18_V_address0 = weight_18_V_addr_reg_2772;

assign weight_19_V_address0 = weight_19_V_addr_reg_2777;

assign weight_1_V_address0 = weight_1_V_addr_reg_2687;

assign weight_20_V_address0 = weight_20_V_addr_reg_2782;

assign weight_21_V_address0 = weight_21_V_addr_reg_2787;

assign weight_22_V_address0 = weight_22_V_addr_reg_2792;

assign weight_23_V_address0 = weight_23_V_addr_reg_2797;

assign weight_2_V_address0 = weight_2_V_addr_reg_2692;

assign weight_3_V_address0 = weight_3_V_addr_reg_2697;

assign weight_4_V_address0 = weight_4_V_addr_reg_2702;

assign weight_5_V_address0 = weight_5_V_addr_reg_2707;

assign weight_6_V_address0 = weight_6_V_addr_reg_2712;

assign weight_7_V_address0 = weight_7_V_addr_reg_2717;

assign weight_8_V_address0 = weight_8_V_addr_reg_2722;

assign weight_9_V_address0 = weight_9_V_addr_reg_2727;

always @ (posedge ap_clk) begin
    h1_cast6_cast_reg_2530[9:5] <= 5'b00000;
    tmp_437_reg_2535[0] <= 1'b0;
    w2_cast5_cast2_reg_2544[13:5] <= 9'b000000000;
end

endmodule //subconv_1x1_16_p
