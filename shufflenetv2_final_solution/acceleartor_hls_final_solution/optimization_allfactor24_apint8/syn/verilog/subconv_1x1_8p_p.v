// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_0_V_address1,
        weight_0_V_ce1,
        weight_0_V_q1,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_1_V_address1,
        weight_1_V_ce1,
        weight_1_V_q1,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_2_V_address1,
        weight_2_V_ce1,
        weight_2_V_q1,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_3_V_address1,
        weight_3_V_ce1,
        weight_3_V_q1,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_4_V_address1,
        weight_4_V_ce1,
        weight_4_V_q1,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_5_V_address1,
        weight_5_V_ce1,
        weight_5_V_q1,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_6_V_address1,
        weight_6_V_ce1,
        weight_6_V_q1,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_7_V_address1,
        weight_7_V_ce1,
        weight_7_V_q1,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_8_V_address1,
        weight_8_V_ce1,
        weight_8_V_q1,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_9_V_address1,
        weight_9_V_ce1,
        weight_9_V_q1,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_10_V_address1,
        weight_10_V_ce1,
        weight_10_V_q1,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_11_V_address1,
        weight_11_V_ce1,
        weight_11_V_q1,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_12_V_address1,
        weight_12_V_ce1,
        weight_12_V_q1,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_13_V_address1,
        weight_13_V_ce1,
        weight_13_V_q1,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_14_V_address1,
        weight_14_V_ce1,
        weight_14_V_q1,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_15_V_address1,
        weight_15_V_ce1,
        weight_15_V_q1,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_16_V_address1,
        weight_16_V_ce1,
        weight_16_V_q1,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_17_V_address1,
        weight_17_V_ce1,
        weight_17_V_q1,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_18_V_address1,
        weight_18_V_ce1,
        weight_18_V_q1,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_19_V_address1,
        weight_19_V_ce1,
        weight_19_V_q1,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_20_V_address1,
        weight_20_V_ce1,
        weight_20_V_q1,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_21_V_address1,
        weight_21_V_ce1,
        weight_21_V_q1,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_22_V_address1,
        weight_22_V_ce1,
        weight_22_V_q1,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_23_V_address1,
        weight_23_V_ce1,
        weight_23_V_q1,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_2_Downs_23_address0,
        ShuffleConvs_2_Downs_23_ce0,
        ShuffleConvs_2_Downs_23_we0,
        ShuffleConvs_2_Downs_23_d0,
        ShuffleConvs_2_Downs_23_q0,
        ShuffleConvs_2_Downs_23_address1,
        ShuffleConvs_2_Downs_23_ce1,
        ShuffleConvs_2_Downs_23_we1,
        ShuffleConvs_2_Downs_23_d1,
        ShuffleConvs_2_Downs_22_address0,
        ShuffleConvs_2_Downs_22_ce0,
        ShuffleConvs_2_Downs_22_we0,
        ShuffleConvs_2_Downs_22_d0,
        ShuffleConvs_2_Downs_22_q0,
        ShuffleConvs_2_Downs_22_address1,
        ShuffleConvs_2_Downs_22_ce1,
        ShuffleConvs_2_Downs_22_we1,
        ShuffleConvs_2_Downs_22_d1,
        ShuffleConvs_2_Downs_11_address0,
        ShuffleConvs_2_Downs_11_ce0,
        ShuffleConvs_2_Downs_11_we0,
        ShuffleConvs_2_Downs_11_d0,
        ShuffleConvs_2_Downs_11_q0,
        ShuffleConvs_2_Downs_11_address1,
        ShuffleConvs_2_Downs_11_ce1,
        ShuffleConvs_2_Downs_11_we1,
        ShuffleConvs_2_Downs_11_d1,
        ShuffleConvs_2_Downs_6_address0,
        ShuffleConvs_2_Downs_6_ce0,
        ShuffleConvs_2_Downs_6_we0,
        ShuffleConvs_2_Downs_6_d0,
        ShuffleConvs_2_Downs_6_q0,
        ShuffleConvs_2_Downs_6_address1,
        ShuffleConvs_2_Downs_6_ce1,
        ShuffleConvs_2_Downs_6_we1,
        ShuffleConvs_2_Downs_6_d1,
        ShuffleConvs_2_Downs_5_address0,
        ShuffleConvs_2_Downs_5_ce0,
        ShuffleConvs_2_Downs_5_we0,
        ShuffleConvs_2_Downs_5_d0,
        ShuffleConvs_2_Downs_5_q0,
        ShuffleConvs_2_Downs_5_address1,
        ShuffleConvs_2_Downs_5_ce1,
        ShuffleConvs_2_Downs_5_we1,
        ShuffleConvs_2_Downs_5_d1,
        ShuffleConvs_2_Downs_4_address0,
        ShuffleConvs_2_Downs_4_ce0,
        ShuffleConvs_2_Downs_4_we0,
        ShuffleConvs_2_Downs_4_d0,
        ShuffleConvs_2_Downs_4_q0,
        ShuffleConvs_2_Downs_4_address1,
        ShuffleConvs_2_Downs_4_ce1,
        ShuffleConvs_2_Downs_4_we1,
        ShuffleConvs_2_Downs_4_d1,
        ShuffleConvs_2_Downs_3_address0,
        ShuffleConvs_2_Downs_3_ce0,
        ShuffleConvs_2_Downs_3_we0,
        ShuffleConvs_2_Downs_3_d0,
        ShuffleConvs_2_Downs_3_q0,
        ShuffleConvs_2_Downs_3_address1,
        ShuffleConvs_2_Downs_3_ce1,
        ShuffleConvs_2_Downs_3_we1,
        ShuffleConvs_2_Downs_3_d1,
        ShuffleConvs_2_Downs_2_address0,
        ShuffleConvs_2_Downs_2_ce0,
        ShuffleConvs_2_Downs_2_we0,
        ShuffleConvs_2_Downs_2_d0,
        ShuffleConvs_2_Downs_2_q0,
        ShuffleConvs_2_Downs_2_address1,
        ShuffleConvs_2_Downs_2_ce1,
        ShuffleConvs_2_Downs_2_we1,
        ShuffleConvs_2_Downs_2_d1,
        ShuffleConvs_2_Downs_1_address0,
        ShuffleConvs_2_Downs_1_ce0,
        ShuffleConvs_2_Downs_1_we0,
        ShuffleConvs_2_Downs_1_d0,
        ShuffleConvs_2_Downs_1_q0,
        ShuffleConvs_2_Downs_1_address1,
        ShuffleConvs_2_Downs_1_ce1,
        ShuffleConvs_2_Downs_1_we1,
        ShuffleConvs_2_Downs_1_d1,
        ShuffleConvs_2_Downs_address0,
        ShuffleConvs_2_Downs_ce0,
        ShuffleConvs_2_Downs_we0,
        ShuffleConvs_2_Downs_d0,
        ShuffleConvs_2_Downs_q0,
        ShuffleConvs_2_Downs_address1,
        ShuffleConvs_2_Downs_ce1,
        ShuffleConvs_2_Downs_we1,
        ShuffleConvs_2_Downs_d1,
        ShuffleConvs_2_Downs_21_address0,
        ShuffleConvs_2_Downs_21_ce0,
        ShuffleConvs_2_Downs_21_we0,
        ShuffleConvs_2_Downs_21_d0,
        ShuffleConvs_2_Downs_21_q0,
        ShuffleConvs_2_Downs_21_address1,
        ShuffleConvs_2_Downs_21_ce1,
        ShuffleConvs_2_Downs_21_we1,
        ShuffleConvs_2_Downs_21_d1,
        ShuffleConvs_2_Downs_20_address0,
        ShuffleConvs_2_Downs_20_ce0,
        ShuffleConvs_2_Downs_20_we0,
        ShuffleConvs_2_Downs_20_d0,
        ShuffleConvs_2_Downs_20_q0,
        ShuffleConvs_2_Downs_20_address1,
        ShuffleConvs_2_Downs_20_ce1,
        ShuffleConvs_2_Downs_20_we1,
        ShuffleConvs_2_Downs_20_d1,
        ShuffleConvs_2_Downs_19_address0,
        ShuffleConvs_2_Downs_19_ce0,
        ShuffleConvs_2_Downs_19_we0,
        ShuffleConvs_2_Downs_19_d0,
        ShuffleConvs_2_Downs_19_q0,
        ShuffleConvs_2_Downs_19_address1,
        ShuffleConvs_2_Downs_19_ce1,
        ShuffleConvs_2_Downs_19_we1,
        ShuffleConvs_2_Downs_19_d1,
        ShuffleConvs_2_Downs_18_address0,
        ShuffleConvs_2_Downs_18_ce0,
        ShuffleConvs_2_Downs_18_we0,
        ShuffleConvs_2_Downs_18_d0,
        ShuffleConvs_2_Downs_18_q0,
        ShuffleConvs_2_Downs_18_address1,
        ShuffleConvs_2_Downs_18_ce1,
        ShuffleConvs_2_Downs_18_we1,
        ShuffleConvs_2_Downs_18_d1,
        ShuffleConvs_2_Downs_17_address0,
        ShuffleConvs_2_Downs_17_ce0,
        ShuffleConvs_2_Downs_17_we0,
        ShuffleConvs_2_Downs_17_d0,
        ShuffleConvs_2_Downs_17_q0,
        ShuffleConvs_2_Downs_17_address1,
        ShuffleConvs_2_Downs_17_ce1,
        ShuffleConvs_2_Downs_17_we1,
        ShuffleConvs_2_Downs_17_d1,
        ShuffleConvs_2_Downs_16_address0,
        ShuffleConvs_2_Downs_16_ce0,
        ShuffleConvs_2_Downs_16_we0,
        ShuffleConvs_2_Downs_16_d0,
        ShuffleConvs_2_Downs_16_q0,
        ShuffleConvs_2_Downs_16_address1,
        ShuffleConvs_2_Downs_16_ce1,
        ShuffleConvs_2_Downs_16_we1,
        ShuffleConvs_2_Downs_16_d1,
        ShuffleConvs_2_Downs_15_address0,
        ShuffleConvs_2_Downs_15_ce0,
        ShuffleConvs_2_Downs_15_we0,
        ShuffleConvs_2_Downs_15_d0,
        ShuffleConvs_2_Downs_15_q0,
        ShuffleConvs_2_Downs_15_address1,
        ShuffleConvs_2_Downs_15_ce1,
        ShuffleConvs_2_Downs_15_we1,
        ShuffleConvs_2_Downs_15_d1,
        ShuffleConvs_2_Downs_14_address0,
        ShuffleConvs_2_Downs_14_ce0,
        ShuffleConvs_2_Downs_14_we0,
        ShuffleConvs_2_Downs_14_d0,
        ShuffleConvs_2_Downs_14_q0,
        ShuffleConvs_2_Downs_14_address1,
        ShuffleConvs_2_Downs_14_ce1,
        ShuffleConvs_2_Downs_14_we1,
        ShuffleConvs_2_Downs_14_d1,
        ShuffleConvs_2_Downs_13_address0,
        ShuffleConvs_2_Downs_13_ce0,
        ShuffleConvs_2_Downs_13_we0,
        ShuffleConvs_2_Downs_13_d0,
        ShuffleConvs_2_Downs_13_q0,
        ShuffleConvs_2_Downs_13_address1,
        ShuffleConvs_2_Downs_13_ce1,
        ShuffleConvs_2_Downs_13_we1,
        ShuffleConvs_2_Downs_13_d1,
        ShuffleConvs_2_Downs_12_address0,
        ShuffleConvs_2_Downs_12_ce0,
        ShuffleConvs_2_Downs_12_we0,
        ShuffleConvs_2_Downs_12_d0,
        ShuffleConvs_2_Downs_12_q0,
        ShuffleConvs_2_Downs_12_address1,
        ShuffleConvs_2_Downs_12_ce1,
        ShuffleConvs_2_Downs_12_we1,
        ShuffleConvs_2_Downs_12_d1,
        ShuffleConvs_2_Downs_10_address0,
        ShuffleConvs_2_Downs_10_ce0,
        ShuffleConvs_2_Downs_10_we0,
        ShuffleConvs_2_Downs_10_d0,
        ShuffleConvs_2_Downs_10_q0,
        ShuffleConvs_2_Downs_10_address1,
        ShuffleConvs_2_Downs_10_ce1,
        ShuffleConvs_2_Downs_10_we1,
        ShuffleConvs_2_Downs_10_d1,
        ShuffleConvs_2_Downs_9_address0,
        ShuffleConvs_2_Downs_9_ce0,
        ShuffleConvs_2_Downs_9_we0,
        ShuffleConvs_2_Downs_9_d0,
        ShuffleConvs_2_Downs_9_q0,
        ShuffleConvs_2_Downs_9_address1,
        ShuffleConvs_2_Downs_9_ce1,
        ShuffleConvs_2_Downs_9_we1,
        ShuffleConvs_2_Downs_9_d1,
        ShuffleConvs_2_Downs_8_address0,
        ShuffleConvs_2_Downs_8_ce0,
        ShuffleConvs_2_Downs_8_we0,
        ShuffleConvs_2_Downs_8_d0,
        ShuffleConvs_2_Downs_8_q0,
        ShuffleConvs_2_Downs_8_address1,
        ShuffleConvs_2_Downs_8_ce1,
        ShuffleConvs_2_Downs_8_we1,
        ShuffleConvs_2_Downs_8_d1,
        ShuffleConvs_2_Downs_7_address0,
        ShuffleConvs_2_Downs_7_ce0,
        ShuffleConvs_2_Downs_7_we0,
        ShuffleConvs_2_Downs_7_d0,
        ShuffleConvs_2_Downs_7_q0,
        ShuffleConvs_2_Downs_7_address1,
        ShuffleConvs_2_Downs_7_ce1,
        ShuffleConvs_2_Downs_7_we1,
        ShuffleConvs_2_Downs_7_d1
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_pp0_stage0 = 53'd2;
parameter    ap_ST_fsm_state14 = 53'd4;
parameter    ap_ST_fsm_state15 = 53'd8;
parameter    ap_ST_fsm_state16 = 53'd16;
parameter    ap_ST_fsm_state17 = 53'd32;
parameter    ap_ST_fsm_state18 = 53'd64;
parameter    ap_ST_fsm_state19 = 53'd128;
parameter    ap_ST_fsm_state20 = 53'd256;
parameter    ap_ST_fsm_state21 = 53'd512;
parameter    ap_ST_fsm_state22 = 53'd1024;
parameter    ap_ST_fsm_state23 = 53'd2048;
parameter    ap_ST_fsm_state24 = 53'd4096;
parameter    ap_ST_fsm_state25 = 53'd8192;
parameter    ap_ST_fsm_state26 = 53'd16384;
parameter    ap_ST_fsm_state27 = 53'd32768;
parameter    ap_ST_fsm_state28 = 53'd65536;
parameter    ap_ST_fsm_state29 = 53'd131072;
parameter    ap_ST_fsm_state30 = 53'd262144;
parameter    ap_ST_fsm_state31 = 53'd524288;
parameter    ap_ST_fsm_state32 = 53'd1048576;
parameter    ap_ST_fsm_state33 = 53'd2097152;
parameter    ap_ST_fsm_state34 = 53'd4194304;
parameter    ap_ST_fsm_state35 = 53'd8388608;
parameter    ap_ST_fsm_state36 = 53'd16777216;
parameter    ap_ST_fsm_state37 = 53'd33554432;
parameter    ap_ST_fsm_state38 = 53'd67108864;
parameter    ap_ST_fsm_state39 = 53'd134217728;
parameter    ap_ST_fsm_state40 = 53'd268435456;
parameter    ap_ST_fsm_state41 = 53'd536870912;
parameter    ap_ST_fsm_state42 = 53'd1073741824;
parameter    ap_ST_fsm_state43 = 53'd2147483648;
parameter    ap_ST_fsm_state44 = 53'd4294967296;
parameter    ap_ST_fsm_state45 = 53'd8589934592;
parameter    ap_ST_fsm_state46 = 53'd17179869184;
parameter    ap_ST_fsm_state47 = 53'd34359738368;
parameter    ap_ST_fsm_state48 = 53'd68719476736;
parameter    ap_ST_fsm_state49 = 53'd137438953472;
parameter    ap_ST_fsm_state50 = 53'd274877906944;
parameter    ap_ST_fsm_state51 = 53'd549755813888;
parameter    ap_ST_fsm_state52 = 53'd1099511627776;
parameter    ap_ST_fsm_state53 = 53'd2199023255552;
parameter    ap_ST_fsm_state54 = 53'd4398046511104;
parameter    ap_ST_fsm_state55 = 53'd8796093022208;
parameter    ap_ST_fsm_state56 = 53'd17592186044416;
parameter    ap_ST_fsm_state57 = 53'd35184372088832;
parameter    ap_ST_fsm_state58 = 53'd70368744177664;
parameter    ap_ST_fsm_state59 = 53'd140737488355328;
parameter    ap_ST_fsm_state60 = 53'd281474976710656;
parameter    ap_ST_fsm_state61 = 53'd562949953421312;
parameter    ap_ST_fsm_state62 = 53'd1125899906842624;
parameter    ap_ST_fsm_pp1_stage0 = 53'd2251799813685248;
parameter    ap_ST_fsm_state75 = 53'd4503599627370496;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [8:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [8:0] weight_0_V_address1;
output   weight_0_V_ce1;
input  [7:0] weight_0_V_q1;
output  [8:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [8:0] weight_1_V_address1;
output   weight_1_V_ce1;
input  [7:0] weight_1_V_q1;
output  [8:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [8:0] weight_2_V_address1;
output   weight_2_V_ce1;
input  [7:0] weight_2_V_q1;
output  [8:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [8:0] weight_3_V_address1;
output   weight_3_V_ce1;
input  [7:0] weight_3_V_q1;
output  [8:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [8:0] weight_4_V_address1;
output   weight_4_V_ce1;
input  [7:0] weight_4_V_q1;
output  [8:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [8:0] weight_5_V_address1;
output   weight_5_V_ce1;
input  [7:0] weight_5_V_q1;
output  [8:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [8:0] weight_6_V_address1;
output   weight_6_V_ce1;
input  [7:0] weight_6_V_q1;
output  [8:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [8:0] weight_7_V_address1;
output   weight_7_V_ce1;
input  [7:0] weight_7_V_q1;
output  [8:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [8:0] weight_8_V_address1;
output   weight_8_V_ce1;
input  [7:0] weight_8_V_q1;
output  [8:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [8:0] weight_9_V_address1;
output   weight_9_V_ce1;
input  [7:0] weight_9_V_q1;
output  [8:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [8:0] weight_10_V_address1;
output   weight_10_V_ce1;
input  [7:0] weight_10_V_q1;
output  [8:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [8:0] weight_11_V_address1;
output   weight_11_V_ce1;
input  [7:0] weight_11_V_q1;
output  [8:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [8:0] weight_12_V_address1;
output   weight_12_V_ce1;
input  [7:0] weight_12_V_q1;
output  [8:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [8:0] weight_13_V_address1;
output   weight_13_V_ce1;
input  [7:0] weight_13_V_q1;
output  [8:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [8:0] weight_14_V_address1;
output   weight_14_V_ce1;
input  [7:0] weight_14_V_q1;
output  [8:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [8:0] weight_15_V_address1;
output   weight_15_V_ce1;
input  [7:0] weight_15_V_q1;
output  [8:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [8:0] weight_16_V_address1;
output   weight_16_V_ce1;
input  [7:0] weight_16_V_q1;
output  [8:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [8:0] weight_17_V_address1;
output   weight_17_V_ce1;
input  [7:0] weight_17_V_q1;
output  [8:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [8:0] weight_18_V_address1;
output   weight_18_V_ce1;
input  [7:0] weight_18_V_q1;
output  [8:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [8:0] weight_19_V_address1;
output   weight_19_V_ce1;
input  [7:0] weight_19_V_q1;
output  [8:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [8:0] weight_20_V_address1;
output   weight_20_V_ce1;
input  [7:0] weight_20_V_q1;
output  [8:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [8:0] weight_21_V_address1;
output   weight_21_V_ce1;
input  [7:0] weight_21_V_q1;
output  [8:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [8:0] weight_22_V_address1;
output   weight_22_V_ce1;
input  [7:0] weight_22_V_q1;
output  [8:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [8:0] weight_23_V_address1;
output   weight_23_V_ce1;
input  [7:0] weight_23_V_q1;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [8:0] ShuffleConvs_2_Downs_23_address0;
output   ShuffleConvs_2_Downs_23_ce0;
output   ShuffleConvs_2_Downs_23_we0;
output  [7:0] ShuffleConvs_2_Downs_23_d0;
input  [7:0] ShuffleConvs_2_Downs_23_q0;
output  [8:0] ShuffleConvs_2_Downs_23_address1;
output   ShuffleConvs_2_Downs_23_ce1;
output   ShuffleConvs_2_Downs_23_we1;
output  [7:0] ShuffleConvs_2_Downs_23_d1;
output  [8:0] ShuffleConvs_2_Downs_22_address0;
output   ShuffleConvs_2_Downs_22_ce0;
output   ShuffleConvs_2_Downs_22_we0;
output  [7:0] ShuffleConvs_2_Downs_22_d0;
input  [7:0] ShuffleConvs_2_Downs_22_q0;
output  [8:0] ShuffleConvs_2_Downs_22_address1;
output   ShuffleConvs_2_Downs_22_ce1;
output   ShuffleConvs_2_Downs_22_we1;
output  [7:0] ShuffleConvs_2_Downs_22_d1;
output  [8:0] ShuffleConvs_2_Downs_11_address0;
output   ShuffleConvs_2_Downs_11_ce0;
output   ShuffleConvs_2_Downs_11_we0;
output  [7:0] ShuffleConvs_2_Downs_11_d0;
input  [7:0] ShuffleConvs_2_Downs_11_q0;
output  [8:0] ShuffleConvs_2_Downs_11_address1;
output   ShuffleConvs_2_Downs_11_ce1;
output   ShuffleConvs_2_Downs_11_we1;
output  [7:0] ShuffleConvs_2_Downs_11_d1;
output  [8:0] ShuffleConvs_2_Downs_6_address0;
output   ShuffleConvs_2_Downs_6_ce0;
output   ShuffleConvs_2_Downs_6_we0;
output  [7:0] ShuffleConvs_2_Downs_6_d0;
input  [7:0] ShuffleConvs_2_Downs_6_q0;
output  [8:0] ShuffleConvs_2_Downs_6_address1;
output   ShuffleConvs_2_Downs_6_ce1;
output   ShuffleConvs_2_Downs_6_we1;
output  [7:0] ShuffleConvs_2_Downs_6_d1;
output  [8:0] ShuffleConvs_2_Downs_5_address0;
output   ShuffleConvs_2_Downs_5_ce0;
output   ShuffleConvs_2_Downs_5_we0;
output  [7:0] ShuffleConvs_2_Downs_5_d0;
input  [7:0] ShuffleConvs_2_Downs_5_q0;
output  [8:0] ShuffleConvs_2_Downs_5_address1;
output   ShuffleConvs_2_Downs_5_ce1;
output   ShuffleConvs_2_Downs_5_we1;
output  [7:0] ShuffleConvs_2_Downs_5_d1;
output  [8:0] ShuffleConvs_2_Downs_4_address0;
output   ShuffleConvs_2_Downs_4_ce0;
output   ShuffleConvs_2_Downs_4_we0;
output  [7:0] ShuffleConvs_2_Downs_4_d0;
input  [7:0] ShuffleConvs_2_Downs_4_q0;
output  [8:0] ShuffleConvs_2_Downs_4_address1;
output   ShuffleConvs_2_Downs_4_ce1;
output   ShuffleConvs_2_Downs_4_we1;
output  [7:0] ShuffleConvs_2_Downs_4_d1;
output  [8:0] ShuffleConvs_2_Downs_3_address0;
output   ShuffleConvs_2_Downs_3_ce0;
output   ShuffleConvs_2_Downs_3_we0;
output  [7:0] ShuffleConvs_2_Downs_3_d0;
input  [7:0] ShuffleConvs_2_Downs_3_q0;
output  [8:0] ShuffleConvs_2_Downs_3_address1;
output   ShuffleConvs_2_Downs_3_ce1;
output   ShuffleConvs_2_Downs_3_we1;
output  [7:0] ShuffleConvs_2_Downs_3_d1;
output  [8:0] ShuffleConvs_2_Downs_2_address0;
output   ShuffleConvs_2_Downs_2_ce0;
output   ShuffleConvs_2_Downs_2_we0;
output  [7:0] ShuffleConvs_2_Downs_2_d0;
input  [7:0] ShuffleConvs_2_Downs_2_q0;
output  [8:0] ShuffleConvs_2_Downs_2_address1;
output   ShuffleConvs_2_Downs_2_ce1;
output   ShuffleConvs_2_Downs_2_we1;
output  [7:0] ShuffleConvs_2_Downs_2_d1;
output  [8:0] ShuffleConvs_2_Downs_1_address0;
output   ShuffleConvs_2_Downs_1_ce0;
output   ShuffleConvs_2_Downs_1_we0;
output  [7:0] ShuffleConvs_2_Downs_1_d0;
input  [7:0] ShuffleConvs_2_Downs_1_q0;
output  [8:0] ShuffleConvs_2_Downs_1_address1;
output   ShuffleConvs_2_Downs_1_ce1;
output   ShuffleConvs_2_Downs_1_we1;
output  [7:0] ShuffleConvs_2_Downs_1_d1;
output  [8:0] ShuffleConvs_2_Downs_address0;
output   ShuffleConvs_2_Downs_ce0;
output   ShuffleConvs_2_Downs_we0;
output  [7:0] ShuffleConvs_2_Downs_d0;
input  [7:0] ShuffleConvs_2_Downs_q0;
output  [8:0] ShuffleConvs_2_Downs_address1;
output   ShuffleConvs_2_Downs_ce1;
output   ShuffleConvs_2_Downs_we1;
output  [7:0] ShuffleConvs_2_Downs_d1;
output  [8:0] ShuffleConvs_2_Downs_21_address0;
output   ShuffleConvs_2_Downs_21_ce0;
output   ShuffleConvs_2_Downs_21_we0;
output  [7:0] ShuffleConvs_2_Downs_21_d0;
input  [7:0] ShuffleConvs_2_Downs_21_q0;
output  [8:0] ShuffleConvs_2_Downs_21_address1;
output   ShuffleConvs_2_Downs_21_ce1;
output   ShuffleConvs_2_Downs_21_we1;
output  [7:0] ShuffleConvs_2_Downs_21_d1;
output  [8:0] ShuffleConvs_2_Downs_20_address0;
output   ShuffleConvs_2_Downs_20_ce0;
output   ShuffleConvs_2_Downs_20_we0;
output  [7:0] ShuffleConvs_2_Downs_20_d0;
input  [7:0] ShuffleConvs_2_Downs_20_q0;
output  [8:0] ShuffleConvs_2_Downs_20_address1;
output   ShuffleConvs_2_Downs_20_ce1;
output   ShuffleConvs_2_Downs_20_we1;
output  [7:0] ShuffleConvs_2_Downs_20_d1;
output  [8:0] ShuffleConvs_2_Downs_19_address0;
output   ShuffleConvs_2_Downs_19_ce0;
output   ShuffleConvs_2_Downs_19_we0;
output  [7:0] ShuffleConvs_2_Downs_19_d0;
input  [7:0] ShuffleConvs_2_Downs_19_q0;
output  [8:0] ShuffleConvs_2_Downs_19_address1;
output   ShuffleConvs_2_Downs_19_ce1;
output   ShuffleConvs_2_Downs_19_we1;
output  [7:0] ShuffleConvs_2_Downs_19_d1;
output  [8:0] ShuffleConvs_2_Downs_18_address0;
output   ShuffleConvs_2_Downs_18_ce0;
output   ShuffleConvs_2_Downs_18_we0;
output  [7:0] ShuffleConvs_2_Downs_18_d0;
input  [7:0] ShuffleConvs_2_Downs_18_q0;
output  [8:0] ShuffleConvs_2_Downs_18_address1;
output   ShuffleConvs_2_Downs_18_ce1;
output   ShuffleConvs_2_Downs_18_we1;
output  [7:0] ShuffleConvs_2_Downs_18_d1;
output  [8:0] ShuffleConvs_2_Downs_17_address0;
output   ShuffleConvs_2_Downs_17_ce0;
output   ShuffleConvs_2_Downs_17_we0;
output  [7:0] ShuffleConvs_2_Downs_17_d0;
input  [7:0] ShuffleConvs_2_Downs_17_q0;
output  [8:0] ShuffleConvs_2_Downs_17_address1;
output   ShuffleConvs_2_Downs_17_ce1;
output   ShuffleConvs_2_Downs_17_we1;
output  [7:0] ShuffleConvs_2_Downs_17_d1;
output  [8:0] ShuffleConvs_2_Downs_16_address0;
output   ShuffleConvs_2_Downs_16_ce0;
output   ShuffleConvs_2_Downs_16_we0;
output  [7:0] ShuffleConvs_2_Downs_16_d0;
input  [7:0] ShuffleConvs_2_Downs_16_q0;
output  [8:0] ShuffleConvs_2_Downs_16_address1;
output   ShuffleConvs_2_Downs_16_ce1;
output   ShuffleConvs_2_Downs_16_we1;
output  [7:0] ShuffleConvs_2_Downs_16_d1;
output  [8:0] ShuffleConvs_2_Downs_15_address0;
output   ShuffleConvs_2_Downs_15_ce0;
output   ShuffleConvs_2_Downs_15_we0;
output  [7:0] ShuffleConvs_2_Downs_15_d0;
input  [7:0] ShuffleConvs_2_Downs_15_q0;
output  [8:0] ShuffleConvs_2_Downs_15_address1;
output   ShuffleConvs_2_Downs_15_ce1;
output   ShuffleConvs_2_Downs_15_we1;
output  [7:0] ShuffleConvs_2_Downs_15_d1;
output  [8:0] ShuffleConvs_2_Downs_14_address0;
output   ShuffleConvs_2_Downs_14_ce0;
output   ShuffleConvs_2_Downs_14_we0;
output  [7:0] ShuffleConvs_2_Downs_14_d0;
input  [7:0] ShuffleConvs_2_Downs_14_q0;
output  [8:0] ShuffleConvs_2_Downs_14_address1;
output   ShuffleConvs_2_Downs_14_ce1;
output   ShuffleConvs_2_Downs_14_we1;
output  [7:0] ShuffleConvs_2_Downs_14_d1;
output  [8:0] ShuffleConvs_2_Downs_13_address0;
output   ShuffleConvs_2_Downs_13_ce0;
output   ShuffleConvs_2_Downs_13_we0;
output  [7:0] ShuffleConvs_2_Downs_13_d0;
input  [7:0] ShuffleConvs_2_Downs_13_q0;
output  [8:0] ShuffleConvs_2_Downs_13_address1;
output   ShuffleConvs_2_Downs_13_ce1;
output   ShuffleConvs_2_Downs_13_we1;
output  [7:0] ShuffleConvs_2_Downs_13_d1;
output  [8:0] ShuffleConvs_2_Downs_12_address0;
output   ShuffleConvs_2_Downs_12_ce0;
output   ShuffleConvs_2_Downs_12_we0;
output  [7:0] ShuffleConvs_2_Downs_12_d0;
input  [7:0] ShuffleConvs_2_Downs_12_q0;
output  [8:0] ShuffleConvs_2_Downs_12_address1;
output   ShuffleConvs_2_Downs_12_ce1;
output   ShuffleConvs_2_Downs_12_we1;
output  [7:0] ShuffleConvs_2_Downs_12_d1;
output  [8:0] ShuffleConvs_2_Downs_10_address0;
output   ShuffleConvs_2_Downs_10_ce0;
output   ShuffleConvs_2_Downs_10_we0;
output  [7:0] ShuffleConvs_2_Downs_10_d0;
input  [7:0] ShuffleConvs_2_Downs_10_q0;
output  [8:0] ShuffleConvs_2_Downs_10_address1;
output   ShuffleConvs_2_Downs_10_ce1;
output   ShuffleConvs_2_Downs_10_we1;
output  [7:0] ShuffleConvs_2_Downs_10_d1;
output  [8:0] ShuffleConvs_2_Downs_9_address0;
output   ShuffleConvs_2_Downs_9_ce0;
output   ShuffleConvs_2_Downs_9_we0;
output  [7:0] ShuffleConvs_2_Downs_9_d0;
input  [7:0] ShuffleConvs_2_Downs_9_q0;
output  [8:0] ShuffleConvs_2_Downs_9_address1;
output   ShuffleConvs_2_Downs_9_ce1;
output   ShuffleConvs_2_Downs_9_we1;
output  [7:0] ShuffleConvs_2_Downs_9_d1;
output  [8:0] ShuffleConvs_2_Downs_8_address0;
output   ShuffleConvs_2_Downs_8_ce0;
output   ShuffleConvs_2_Downs_8_we0;
output  [7:0] ShuffleConvs_2_Downs_8_d0;
input  [7:0] ShuffleConvs_2_Downs_8_q0;
output  [8:0] ShuffleConvs_2_Downs_8_address1;
output   ShuffleConvs_2_Downs_8_ce1;
output   ShuffleConvs_2_Downs_8_we1;
output  [7:0] ShuffleConvs_2_Downs_8_d1;
output  [8:0] ShuffleConvs_2_Downs_7_address0;
output   ShuffleConvs_2_Downs_7_ce0;
output   ShuffleConvs_2_Downs_7_we0;
output  [7:0] ShuffleConvs_2_Downs_7_d0;
input  [7:0] ShuffleConvs_2_Downs_7_q0;
output  [8:0] ShuffleConvs_2_Downs_7_address1;
output   ShuffleConvs_2_Downs_7_ce1;
output   ShuffleConvs_2_Downs_7_we1;
output  [7:0] ShuffleConvs_2_Downs_7_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_V_address0;
reg input_V_ce0;
reg[8:0] weight_0_V_address0;
reg weight_0_V_ce0;
reg[8:0] weight_0_V_address1;
reg weight_0_V_ce1;
reg[8:0] weight_1_V_address0;
reg weight_1_V_ce0;
reg[8:0] weight_1_V_address1;
reg weight_1_V_ce1;
reg[8:0] weight_2_V_address0;
reg weight_2_V_ce0;
reg[8:0] weight_2_V_address1;
reg weight_2_V_ce1;
reg[8:0] weight_3_V_address0;
reg weight_3_V_ce0;
reg[8:0] weight_3_V_address1;
reg weight_3_V_ce1;
reg[8:0] weight_4_V_address0;
reg weight_4_V_ce0;
reg[8:0] weight_4_V_address1;
reg weight_4_V_ce1;
reg[8:0] weight_5_V_address0;
reg weight_5_V_ce0;
reg[8:0] weight_5_V_address1;
reg weight_5_V_ce1;
reg[8:0] weight_6_V_address0;
reg weight_6_V_ce0;
reg[8:0] weight_6_V_address1;
reg weight_6_V_ce1;
reg[8:0] weight_7_V_address0;
reg weight_7_V_ce0;
reg[8:0] weight_7_V_address1;
reg weight_7_V_ce1;
reg[8:0] weight_8_V_address0;
reg weight_8_V_ce0;
reg[8:0] weight_8_V_address1;
reg weight_8_V_ce1;
reg[8:0] weight_9_V_address0;
reg weight_9_V_ce0;
reg[8:0] weight_9_V_address1;
reg weight_9_V_ce1;
reg[8:0] weight_10_V_address0;
reg weight_10_V_ce0;
reg[8:0] weight_10_V_address1;
reg weight_10_V_ce1;
reg[8:0] weight_11_V_address0;
reg weight_11_V_ce0;
reg[8:0] weight_11_V_address1;
reg weight_11_V_ce1;
reg[8:0] weight_12_V_address0;
reg weight_12_V_ce0;
reg[8:0] weight_12_V_address1;
reg weight_12_V_ce1;
reg[8:0] weight_13_V_address0;
reg weight_13_V_ce0;
reg[8:0] weight_13_V_address1;
reg weight_13_V_ce1;
reg[8:0] weight_14_V_address0;
reg weight_14_V_ce0;
reg[8:0] weight_14_V_address1;
reg weight_14_V_ce1;
reg[8:0] weight_15_V_address0;
reg weight_15_V_ce0;
reg[8:0] weight_15_V_address1;
reg weight_15_V_ce1;
reg[8:0] weight_16_V_address0;
reg weight_16_V_ce0;
reg[8:0] weight_16_V_address1;
reg weight_16_V_ce1;
reg[8:0] weight_17_V_address0;
reg weight_17_V_ce0;
reg[8:0] weight_17_V_address1;
reg weight_17_V_ce1;
reg[8:0] weight_18_V_address0;
reg weight_18_V_ce0;
reg[8:0] weight_18_V_address1;
reg weight_18_V_ce1;
reg[8:0] weight_19_V_address0;
reg weight_19_V_ce0;
reg[8:0] weight_19_V_address1;
reg weight_19_V_ce1;
reg[8:0] weight_20_V_address0;
reg weight_20_V_ce0;
reg[8:0] weight_20_V_address1;
reg weight_20_V_ce1;
reg[8:0] weight_21_V_address0;
reg weight_21_V_ce0;
reg[8:0] weight_21_V_address1;
reg weight_21_V_ce1;
reg[8:0] weight_22_V_address0;
reg weight_22_V_ce0;
reg[8:0] weight_22_V_address1;
reg weight_22_V_ce1;
reg[8:0] weight_23_V_address0;
reg weight_23_V_ce0;
reg[8:0] weight_23_V_address1;
reg weight_23_V_ce1;
reg bias_V_ce0;
reg[8:0] ShuffleConvs_2_Downs_23_address0;
reg ShuffleConvs_2_Downs_23_ce0;
reg ShuffleConvs_2_Downs_23_we0;
reg[7:0] ShuffleConvs_2_Downs_23_d0;
reg ShuffleConvs_2_Downs_23_ce1;
reg ShuffleConvs_2_Downs_23_we1;
reg[8:0] ShuffleConvs_2_Downs_22_address0;
reg ShuffleConvs_2_Downs_22_ce0;
reg ShuffleConvs_2_Downs_22_we0;
reg[7:0] ShuffleConvs_2_Downs_22_d0;
reg ShuffleConvs_2_Downs_22_ce1;
reg ShuffleConvs_2_Downs_22_we1;
reg[8:0] ShuffleConvs_2_Downs_11_address0;
reg ShuffleConvs_2_Downs_11_ce0;
reg ShuffleConvs_2_Downs_11_we0;
reg[7:0] ShuffleConvs_2_Downs_11_d0;
reg ShuffleConvs_2_Downs_11_ce1;
reg ShuffleConvs_2_Downs_11_we1;
reg[8:0] ShuffleConvs_2_Downs_6_address0;
reg ShuffleConvs_2_Downs_6_ce0;
reg ShuffleConvs_2_Downs_6_we0;
reg[7:0] ShuffleConvs_2_Downs_6_d0;
reg ShuffleConvs_2_Downs_6_ce1;
reg ShuffleConvs_2_Downs_6_we1;
reg[8:0] ShuffleConvs_2_Downs_5_address0;
reg ShuffleConvs_2_Downs_5_ce0;
reg ShuffleConvs_2_Downs_5_we0;
reg[7:0] ShuffleConvs_2_Downs_5_d0;
reg ShuffleConvs_2_Downs_5_ce1;
reg ShuffleConvs_2_Downs_5_we1;
reg[8:0] ShuffleConvs_2_Downs_4_address0;
reg ShuffleConvs_2_Downs_4_ce0;
reg ShuffleConvs_2_Downs_4_we0;
reg[7:0] ShuffleConvs_2_Downs_4_d0;
reg ShuffleConvs_2_Downs_4_ce1;
reg ShuffleConvs_2_Downs_4_we1;
reg[8:0] ShuffleConvs_2_Downs_3_address0;
reg ShuffleConvs_2_Downs_3_ce0;
reg ShuffleConvs_2_Downs_3_we0;
reg[7:0] ShuffleConvs_2_Downs_3_d0;
reg ShuffleConvs_2_Downs_3_ce1;
reg ShuffleConvs_2_Downs_3_we1;
reg[8:0] ShuffleConvs_2_Downs_2_address0;
reg ShuffleConvs_2_Downs_2_ce0;
reg ShuffleConvs_2_Downs_2_we0;
reg[7:0] ShuffleConvs_2_Downs_2_d0;
reg ShuffleConvs_2_Downs_2_ce1;
reg ShuffleConvs_2_Downs_2_we1;
reg[8:0] ShuffleConvs_2_Downs_1_address0;
reg ShuffleConvs_2_Downs_1_ce0;
reg ShuffleConvs_2_Downs_1_we0;
reg[7:0] ShuffleConvs_2_Downs_1_d0;
reg ShuffleConvs_2_Downs_1_ce1;
reg ShuffleConvs_2_Downs_1_we1;
reg[8:0] ShuffleConvs_2_Downs_address0;
reg ShuffleConvs_2_Downs_ce0;
reg ShuffleConvs_2_Downs_we0;
reg[7:0] ShuffleConvs_2_Downs_d0;
reg ShuffleConvs_2_Downs_ce1;
reg ShuffleConvs_2_Downs_we1;
reg[8:0] ShuffleConvs_2_Downs_21_address0;
reg ShuffleConvs_2_Downs_21_ce0;
reg ShuffleConvs_2_Downs_21_we0;
reg[7:0] ShuffleConvs_2_Downs_21_d0;
reg ShuffleConvs_2_Downs_21_ce1;
reg ShuffleConvs_2_Downs_21_we1;
reg[8:0] ShuffleConvs_2_Downs_20_address0;
reg ShuffleConvs_2_Downs_20_ce0;
reg ShuffleConvs_2_Downs_20_we0;
reg[7:0] ShuffleConvs_2_Downs_20_d0;
reg ShuffleConvs_2_Downs_20_ce1;
reg ShuffleConvs_2_Downs_20_we1;
reg[8:0] ShuffleConvs_2_Downs_19_address0;
reg ShuffleConvs_2_Downs_19_ce0;
reg ShuffleConvs_2_Downs_19_we0;
reg[7:0] ShuffleConvs_2_Downs_19_d0;
reg ShuffleConvs_2_Downs_19_ce1;
reg ShuffleConvs_2_Downs_19_we1;
reg[8:0] ShuffleConvs_2_Downs_18_address0;
reg ShuffleConvs_2_Downs_18_ce0;
reg ShuffleConvs_2_Downs_18_we0;
reg[7:0] ShuffleConvs_2_Downs_18_d0;
reg ShuffleConvs_2_Downs_18_ce1;
reg ShuffleConvs_2_Downs_18_we1;
reg[8:0] ShuffleConvs_2_Downs_17_address0;
reg ShuffleConvs_2_Downs_17_ce0;
reg ShuffleConvs_2_Downs_17_we0;
reg[7:0] ShuffleConvs_2_Downs_17_d0;
reg ShuffleConvs_2_Downs_17_ce1;
reg ShuffleConvs_2_Downs_17_we1;
reg[8:0] ShuffleConvs_2_Downs_16_address0;
reg ShuffleConvs_2_Downs_16_ce0;
reg ShuffleConvs_2_Downs_16_we0;
reg[7:0] ShuffleConvs_2_Downs_16_d0;
reg ShuffleConvs_2_Downs_16_ce1;
reg ShuffleConvs_2_Downs_16_we1;
reg[8:0] ShuffleConvs_2_Downs_15_address0;
reg ShuffleConvs_2_Downs_15_ce0;
reg ShuffleConvs_2_Downs_15_we0;
reg[7:0] ShuffleConvs_2_Downs_15_d0;
reg ShuffleConvs_2_Downs_15_ce1;
reg ShuffleConvs_2_Downs_15_we1;
reg[8:0] ShuffleConvs_2_Downs_14_address0;
reg ShuffleConvs_2_Downs_14_ce0;
reg ShuffleConvs_2_Downs_14_we0;
reg[7:0] ShuffleConvs_2_Downs_14_d0;
reg ShuffleConvs_2_Downs_14_ce1;
reg ShuffleConvs_2_Downs_14_we1;
reg[8:0] ShuffleConvs_2_Downs_13_address0;
reg ShuffleConvs_2_Downs_13_ce0;
reg ShuffleConvs_2_Downs_13_we0;
reg[7:0] ShuffleConvs_2_Downs_13_d0;
reg ShuffleConvs_2_Downs_13_ce1;
reg ShuffleConvs_2_Downs_13_we1;
reg[8:0] ShuffleConvs_2_Downs_12_address0;
reg ShuffleConvs_2_Downs_12_ce0;
reg ShuffleConvs_2_Downs_12_we0;
reg[7:0] ShuffleConvs_2_Downs_12_d0;
reg ShuffleConvs_2_Downs_12_ce1;
reg ShuffleConvs_2_Downs_12_we1;
reg[8:0] ShuffleConvs_2_Downs_10_address0;
reg ShuffleConvs_2_Downs_10_ce0;
reg ShuffleConvs_2_Downs_10_we0;
reg[7:0] ShuffleConvs_2_Downs_10_d0;
reg ShuffleConvs_2_Downs_10_ce1;
reg ShuffleConvs_2_Downs_10_we1;
reg[8:0] ShuffleConvs_2_Downs_9_address0;
reg ShuffleConvs_2_Downs_9_ce0;
reg ShuffleConvs_2_Downs_9_we0;
reg[7:0] ShuffleConvs_2_Downs_9_d0;
reg ShuffleConvs_2_Downs_9_ce1;
reg ShuffleConvs_2_Downs_9_we1;
reg[8:0] ShuffleConvs_2_Downs_8_address0;
reg ShuffleConvs_2_Downs_8_ce0;
reg ShuffleConvs_2_Downs_8_we0;
reg[7:0] ShuffleConvs_2_Downs_8_d0;
reg ShuffleConvs_2_Downs_8_ce1;
reg ShuffleConvs_2_Downs_8_we1;
reg[8:0] ShuffleConvs_2_Downs_7_address0;
reg ShuffleConvs_2_Downs_7_ce0;
reg ShuffleConvs_2_Downs_7_we0;
reg[7:0] ShuffleConvs_2_Downs_7_d0;
reg ShuffleConvs_2_Downs_7_ce1;
reg ShuffleConvs_2_Downs_7_we1;

(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten1_reg_2472;
reg   [6:0] co_reg_2483;
reg   [7:0] indvar_flatten_reg_2495;
reg   [3:0] h_reg_2506;
reg   [3:0] w_reg_2518;
reg   [12:0] indvar_flatten2_reg_2670;
reg   [6:0] co9_reg_2681;
reg   [7:0] indvar_flatten3_reg_2692;
reg   [3:0] h11_reg_2703;
reg   [3:0] w11_reg_2715;
reg   [7:0] reg_2811;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state42;
reg   [7:0] reg_2817;
wire    ap_CS_fsm_state43;
reg   [7:0] reg_2823;
reg   [7:0] reg_2829;
reg   [7:0] reg_2835;
reg   [7:0] reg_2841;
reg   [7:0] reg_2847;
reg   [7:0] reg_2853;
reg   [7:0] reg_2859;
reg   [7:0] reg_2865;
reg   [7:0] reg_2871;
reg   [7:0] reg_2877;
reg   [7:0] reg_2883;
reg   [7:0] reg_2889;
reg   [7:0] reg_2895;
reg   [7:0] reg_2901;
reg   [7:0] reg_2907;
reg   [7:0] reg_2913;
reg   [7:0] reg_2919;
reg   [7:0] reg_2925;
reg   [7:0] reg_2931;
reg   [7:0] reg_2937;
reg   [7:0] reg_2943;
reg   [7:0] reg_2949;
reg   [7:0] reg_2955;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state55;
reg   [7:0] reg_2971;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state46;
reg   [7:0] reg_2975;
reg   [7:0] reg_2979;
reg   [7:0] reg_2983;
reg   [7:0] reg_2987;
reg   [7:0] reg_2991;
reg   [7:0] reg_2995;
reg   [7:0] reg_2999;
reg   [7:0] reg_3003;
reg   [7:0] reg_3007;
reg   [7:0] reg_3011;
reg   [7:0] reg_3015;
reg   [7:0] reg_3019;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state54;
reg   [7:0] reg_3025;
reg   [7:0] reg_3031;
reg   [7:0] reg_3037;
reg   [7:0] reg_3043;
reg   [7:0] reg_3049;
reg   [7:0] reg_3055;
reg   [7:0] reg_3061;
reg   [7:0] reg_3067;
reg   [7:0] reg_3073;
reg   [7:0] reg_3079;
reg   [7:0] reg_3085;
reg   [7:0] reg_3091;
reg   [7:0] reg_3097;
reg   [7:0] reg_3103;
reg   [7:0] reg_3109;
reg   [7:0] reg_3115;
reg   [7:0] reg_3121;
reg   [7:0] reg_3127;
reg   [7:0] reg_3133;
reg   [7:0] reg_3139;
reg   [7:0] reg_3145;
reg   [7:0] reg_3151;
reg   [7:0] reg_3157;
reg   [7:0] reg_3163;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state58;
reg   [7:0] reg_3167;
reg   [7:0] reg_3171;
reg   [7:0] reg_3175;
reg   [7:0] reg_3179;
reg   [7:0] reg_3183;
reg   [7:0] reg_3187;
reg   [7:0] reg_3191;
reg   [7:0] reg_3195;
reg   [7:0] reg_3199;
reg   [7:0] reg_3203;
reg   [7:0] reg_3207;
wire   [0:0] exitcond_flatten1_fu_3211_p2;
reg   [0:0] exitcond_flatten1_reg_6207;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten1_reg_6207;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten1_reg_6207;
wire   [12:0] indvar_flatten_next1_fu_3217_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_3223_p2;
reg   [0:0] exitcond_flatten_reg_6216;
wire   [7:0] indvar_flatten_next_fu_3235_p3;
wire   [6:0] co_cast_mid2_v_fu_3256_p3;
reg   [6:0] co_cast_mid2_v_reg_6229;
reg    ap_enable_reg_pp0_iter1;
reg   [6:0] ap_reg_pp0_iter2_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter3_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter4_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter5_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter6_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter7_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter8_co_cast_mid2_v_reg_6229;
reg   [6:0] ap_reg_pp0_iter9_co_cast_mid2_v_reg_6229;
wire   [3:0] w_mid2_fu_3297_p3;
reg   [3:0] w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter2_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter3_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter4_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter5_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter6_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter7_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter8_w_mid2_reg_6237;
reg   [3:0] ap_reg_pp0_iter9_w_mid2_reg_6237;
wire   [3:0] h_cast_mid2_fu_3305_p3;
reg   [3:0] h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter2_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter3_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter4_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter5_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter6_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter7_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter8_h_cast_mid2_reg_6243;
reg   [3:0] ap_reg_pp0_iter9_h_cast_mid2_reg_6243;
wire   [3:0] w_7_fu_3313_p2;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] tmp_101_reg_6254;
wire   [9:0] tmp_168_fu_3419_p2;
reg   [9:0] tmp_168_reg_6260;
wire   [6:0] h1_cast_cast1_fu_3456_p1;
reg   [6:0] h1_cast_cast1_reg_6273;
wire    ap_CS_fsm_state15;
wire   [10:0] h1_cast_cast_fu_3460_p1;
reg   [10:0] h1_cast_cast_reg_6278;
wire   [7:0] tmp_171_fu_3488_p2;
reg   [7:0] tmp_171_reg_6283;
wire   [8:0] tmp_172_fu_3498_p2;
reg   [8:0] tmp_172_reg_6288;
wire   [6:0] w2_cast_cast1_fu_3510_p1;
reg   [6:0] w2_cast_cast1_reg_6296;
wire    ap_CS_fsm_state16;
wire   [14:0] w2_cast_cast2_fu_3514_p1;
reg   [14:0] w2_cast_cast2_reg_6301;
reg   [8:0] ShuffleConvs_2_Downs_95_reg_6306;
reg   [8:0] ShuffleConvs_2_Downs_96_reg_6311;
reg   [8:0] ShuffleConvs_2_Downs_97_reg_6316;
reg   [8:0] ShuffleConvs_2_Downs_98_reg_6321;
reg   [8:0] ShuffleConvs_2_Downs_99_reg_6326;
reg   [8:0] ShuffleConvs_2_Downs_100_reg_6331;
reg   [8:0] ShuffleConvs_2_Downs_101_reg_6336;
reg   [8:0] ShuffleConvs_2_Downs_102_reg_6341;
reg   [8:0] ShuffleConvs_2_Downs_103_reg_6346;
reg   [8:0] ShuffleConvs_2_Downs_104_reg_6351;
reg   [8:0] ShuffleConvs_2_Downs_105_reg_6356;
reg   [8:0] ShuffleConvs_2_Downs_106_reg_6361;
reg   [8:0] ShuffleConvs_2_Downs_107_reg_6366;
reg   [8:0] ShuffleConvs_2_Downs_108_reg_6371;
reg   [8:0] ShuffleConvs_2_Downs_109_reg_6376;
reg   [8:0] ShuffleConvs_2_Downs_110_reg_6381;
reg   [8:0] ShuffleConvs_2_Downs_111_reg_6386;
reg   [8:0] ShuffleConvs_2_Downs_112_reg_6391;
reg   [8:0] ShuffleConvs_2_Downs_113_reg_6396;
reg   [8:0] ShuffleConvs_2_Downs_114_reg_6401;
reg   [8:0] ShuffleConvs_2_Downs_115_reg_6406;
reg   [8:0] ShuffleConvs_2_Downs_116_reg_6411;
reg   [8:0] ShuffleConvs_2_Downs_117_reg_6416;
reg   [8:0] ShuffleConvs_2_Downs_118_reg_6421;
wire   [3:0] h_7_fu_3574_p2;
wire   [0:0] exitcond4_fu_3568_p2;
reg   [13:0] input_V_addr_reg_6434;
wire    ap_CS_fsm_state17;
wire   [6:0] ci_1_fu_3713_p2;
reg   [6:0] ci_1_reg_6562;
wire   [3:0] w_8_fu_3719_p2;
wire   [0:0] exitcond8_fu_3707_p2;
wire   [15:0] grp_MUL_DP_fu_2727_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2727_ap_return_1;
reg   [15:0] MUL_DP_ret1_reg_6572_1;
wire    ap_CS_fsm_state23;
wire   [15:0] grp_MUL_DP_fu_2734_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2734_ap_return_1;
reg   [15:0] MUL_DP_ret2_reg_6577_1;
wire   [15:0] grp_MUL_DP_fu_2741_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2741_ap_return_1;
reg   [15:0] MUL_DP_ret3_reg_6582_1;
wire   [15:0] grp_MUL_DP_fu_2748_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2748_ap_return_1;
reg   [15:0] MUL_DP_ret4_reg_6587_1;
wire   [15:0] grp_MUL_DP_fu_2755_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2755_ap_return_1;
reg   [15:0] MUL_DP_ret5_reg_6592_1;
wire   [15:0] grp_MUL_DP_fu_2762_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2762_ap_return_1;
reg   [15:0] MUL_DP_ret6_reg_6597_1;
wire   [15:0] grp_MUL_DP_fu_2769_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2769_ap_return_1;
reg   [15:0] MUL_DP_ret7_reg_6602_1;
wire   [15:0] grp_MUL_DP_fu_2776_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2776_ap_return_1;
reg   [15:0] MUL_DP_ret8_reg_6607_1;
wire   [15:0] grp_MUL_DP_fu_2783_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2783_ap_return_1;
reg   [15:0] MUL_DP_ret9_reg_6612_1;
wire   [15:0] grp_MUL_DP_fu_2790_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2790_ap_return_1;
reg   [15:0] MUL_DP_ret10_reg_6617_1;
wire   [15:0] grp_MUL_DP_fu_2797_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2797_ap_return_1;
reg   [15:0] MUL_DP_ret11_reg_6622_1;
wire   [15:0] grp_MUL_DP_fu_2804_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2804_ap_return_1;
reg   [15:0] MUL_DP_ret12_reg_6627_1;
wire   [7:0] tmp_5_fu_3912_p2;
reg   [7:0] tmp_5_reg_6632;
wire    ap_CS_fsm_state25;
wire   [7:0] tmp_22_1_fu_3925_p2;
reg   [7:0] tmp_22_1_reg_6637;
wire   [7:0] tmp_22_2_fu_3938_p2;
reg   [7:0] tmp_22_2_reg_6642;
wire   [7:0] tmp_22_3_fu_3951_p2;
reg   [7:0] tmp_22_3_reg_6647;
wire   [7:0] tmp_22_4_fu_3964_p2;
reg   [7:0] tmp_22_4_reg_6652;
wire   [7:0] tmp_22_5_fu_3977_p2;
reg   [7:0] tmp_22_5_reg_6657;
wire   [7:0] tmp_22_6_fu_3990_p2;
reg   [7:0] tmp_22_6_reg_6662;
wire   [7:0] tmp_22_7_fu_4003_p2;
reg   [7:0] tmp_22_7_reg_6667;
wire   [7:0] tmp_22_8_fu_4016_p2;
reg   [7:0] tmp_22_8_reg_6672;
wire   [7:0] tmp_22_9_fu_4029_p2;
reg   [7:0] tmp_22_9_reg_6677;
wire   [7:0] tmp_22_s_fu_4042_p2;
reg   [7:0] tmp_22_s_reg_6682;
wire   [7:0] tmp_22_10_fu_4055_p2;
reg   [7:0] tmp_22_10_reg_6687;
wire   [6:0] h4_cast_cast1_fu_4061_p1;
reg   [6:0] h4_cast_cast1_reg_6692;
wire    ap_CS_fsm_state27;
wire   [10:0] h4_cast_cast_fu_4065_p1;
reg   [10:0] h4_cast_cast_reg_6697;
wire   [7:0] tmp_175_fu_4093_p2;
reg   [7:0] tmp_175_reg_6702;
wire   [8:0] tmp_176_fu_4103_p2;
reg   [8:0] tmp_176_reg_6707;
wire   [6:0] w5_cast_cast1_fu_4115_p1;
reg   [6:0] w5_cast_cast1_reg_6715;
wire    ap_CS_fsm_state28;
wire   [14:0] w5_cast_cast2_fu_4119_p1;
reg   [14:0] w5_cast_cast2_reg_6720;
reg   [8:0] ShuffleConvs_2_Downs_143_reg_6725;
reg   [8:0] ShuffleConvs_2_Downs_144_reg_6730;
reg   [8:0] ShuffleConvs_2_Downs_145_reg_6735;
reg   [8:0] ShuffleConvs_2_Downs_146_reg_6740;
reg   [8:0] ShuffleConvs_2_Downs_147_reg_6745;
reg   [8:0] ShuffleConvs_2_Downs_148_reg_6750;
reg   [8:0] ShuffleConvs_2_Downs_149_reg_6755;
reg   [8:0] ShuffleConvs_2_Downs_150_reg_6760;
reg   [8:0] ShuffleConvs_2_Downs_151_reg_6765;
reg   [8:0] ShuffleConvs_2_Downs_152_reg_6770;
reg   [8:0] ShuffleConvs_2_Downs_153_reg_6775;
reg   [8:0] ShuffleConvs_2_Downs_154_reg_6780;
reg   [8:0] ShuffleConvs_2_Downs_155_reg_6785;
reg   [8:0] ShuffleConvs_2_Downs_156_reg_6790;
reg   [8:0] ShuffleConvs_2_Downs_157_reg_6795;
reg   [8:0] ShuffleConvs_2_Downs_158_reg_6800;
reg   [8:0] ShuffleConvs_2_Downs_159_reg_6805;
reg   [8:0] ShuffleConvs_2_Downs_160_reg_6810;
reg   [8:0] ShuffleConvs_2_Downs_161_reg_6815;
reg   [8:0] ShuffleConvs_2_Downs_162_reg_6820;
reg   [8:0] ShuffleConvs_2_Downs_163_reg_6825;
reg   [8:0] ShuffleConvs_2_Downs_164_reg_6830;
reg   [8:0] ShuffleConvs_2_Downs_165_reg_6835;
reg   [8:0] ShuffleConvs_2_Downs_166_reg_6840;
wire   [3:0] h_9_fu_4179_p2;
wire   [0:0] exitcond7_fu_4173_p2;
reg   [13:0] input_V_addr_1_reg_6853;
wire    ap_CS_fsm_state29;
wire   [6:0] ci_2_fu_4318_p2;
reg   [6:0] ci_2_reg_6981;
wire   [3:0] w_9_fu_4324_p2;
wire   [0:0] exitcond5_fu_4312_p2;
reg   [15:0] MUL_DP_ret13_reg_6991_1;
wire    ap_CS_fsm_state35;
reg   [15:0] MUL_DP_ret14_reg_6996_1;
reg   [15:0] MUL_DP_ret15_reg_7001_1;
reg   [15:0] MUL_DP_ret16_reg_7006_1;
reg   [15:0] MUL_DP_ret17_reg_7011_1;
reg   [15:0] MUL_DP_ret18_reg_7016_1;
reg   [15:0] MUL_DP_ret19_reg_7021_1;
reg   [15:0] MUL_DP_ret20_reg_7026_1;
reg   [15:0] MUL_DP_ret21_reg_7031_1;
reg   [15:0] MUL_DP_ret22_reg_7036_1;
reg   [15:0] MUL_DP_ret23_reg_7041_1;
reg   [15:0] MUL_DP_ret24_reg_7046_1;
wire   [7:0] tmp_9_fu_4517_p2;
reg   [7:0] tmp_9_reg_7051;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_27_1_fu_4530_p2;
reg   [7:0] tmp_27_1_reg_7056;
wire   [7:0] tmp_27_2_fu_4543_p2;
reg   [7:0] tmp_27_2_reg_7061;
wire   [7:0] tmp_27_3_fu_4556_p2;
reg   [7:0] tmp_27_3_reg_7066;
wire   [7:0] tmp_27_4_fu_4569_p2;
reg   [7:0] tmp_27_4_reg_7071;
wire   [7:0] tmp_27_5_fu_4582_p2;
reg   [7:0] tmp_27_5_reg_7076;
wire   [7:0] tmp_27_6_fu_4595_p2;
reg   [7:0] tmp_27_6_reg_7081;
wire   [7:0] tmp_27_7_fu_4608_p2;
reg   [7:0] tmp_27_7_reg_7086;
wire   [7:0] tmp_27_8_fu_4621_p2;
reg   [7:0] tmp_27_8_reg_7091;
wire   [7:0] tmp_27_9_fu_4634_p2;
reg   [7:0] tmp_27_9_reg_7096;
wire   [7:0] tmp_27_s_fu_4647_p2;
reg   [7:0] tmp_27_s_reg_7101;
wire   [7:0] tmp_27_10_fu_4660_p2;
reg   [7:0] tmp_27_10_reg_7106;
wire   [7:0] h8_cast9_cast1_fu_4666_p1;
reg   [7:0] h8_cast9_cast1_reg_7111;
wire    ap_CS_fsm_state39;
wire   [10:0] h8_cast9_cast_fu_4670_p1;
reg   [10:0] h8_cast9_cast_reg_7116;
wire   [8:0] tmp_182_fu_4708_p2;
reg   [8:0] tmp_182_reg_7121;
wire   [8:0] tmp_183_fu_4714_p2;
reg   [8:0] tmp_183_reg_7126;
wire   [7:0] w9_cast8_cast1_fu_4726_p1;
reg   [7:0] w9_cast8_cast1_reg_7134;
wire    ap_CS_fsm_state40;
wire   [14:0] w9_cast8_cast2_fu_4730_p1;
reg   [14:0] w9_cast8_cast2_reg_7139;
reg   [8:0] ShuffleConvs_2_Downs_191_reg_7144;
reg   [8:0] ShuffleConvs_2_Downs_192_reg_7149;
reg   [8:0] ShuffleConvs_2_Downs_193_reg_7154;
reg   [8:0] ShuffleConvs_2_Downs_194_reg_7159;
reg   [8:0] ShuffleConvs_2_Downs_195_reg_7164;
reg   [8:0] ShuffleConvs_2_Downs_196_reg_7169;
reg   [8:0] ShuffleConvs_2_Downs_197_reg_7174;
reg   [8:0] ShuffleConvs_2_Downs_198_reg_7179;
reg   [8:0] ShuffleConvs_2_Downs_199_reg_7184;
reg   [8:0] ShuffleConvs_2_Downs_200_reg_7189;
reg   [8:0] ShuffleConvs_2_Downs_201_reg_7194;
reg   [8:0] ShuffleConvs_2_Downs_202_reg_7199;
reg   [8:0] ShuffleConvs_2_Downs_203_reg_7204;
reg   [8:0] ShuffleConvs_2_Downs_204_reg_7209;
reg   [8:0] ShuffleConvs_2_Downs_205_reg_7214;
reg   [8:0] ShuffleConvs_2_Downs_206_reg_7219;
reg   [8:0] ShuffleConvs_2_Downs_207_reg_7224;
reg   [8:0] ShuffleConvs_2_Downs_208_reg_7229;
reg   [8:0] ShuffleConvs_2_Downs_209_reg_7234;
reg   [8:0] ShuffleConvs_2_Downs_210_reg_7239;
reg   [8:0] ShuffleConvs_2_Downs_211_reg_7244;
reg   [8:0] ShuffleConvs_2_Downs_212_reg_7249;
reg   [8:0] ShuffleConvs_2_Downs_213_reg_7254;
reg   [8:0] ShuffleConvs_2_Downs_214_reg_7259;
wire   [3:0] h_10_fu_4786_p2;
wire   [0:0] exitcond9_fu_4780_p2;
reg   [13:0] input_V_addr_2_reg_7272;
wire    ap_CS_fsm_state41;
reg   [8:0] weight_0_V_addr_2_reg_7277;
reg   [8:0] weight_1_V_addr_2_reg_7287;
reg   [8:0] weight_2_V_addr_2_reg_7297;
reg   [8:0] weight_3_V_addr_2_reg_7307;
reg   [8:0] weight_4_V_addr_2_reg_7317;
reg   [8:0] weight_5_V_addr_2_reg_7327;
reg   [8:0] weight_6_V_addr_2_reg_7337;
reg   [8:0] weight_7_V_addr_2_reg_7347;
reg   [8:0] weight_8_V_addr_2_reg_7357;
reg   [8:0] weight_9_V_addr_2_reg_7367;
reg   [8:0] weight_10_V_addr_2_reg_7377;
reg   [8:0] weight_11_V_addr_2_reg_7387;
wire   [6:0] ci_3_fu_4935_p2;
reg   [6:0] ci_3_reg_7400;
wire   [3:0] w_12_fu_4941_p2;
wire   [0:0] exitcond11_fu_4929_p2;
reg   [15:0] MUL_DP_ret25_reg_7410_1;
wire    ap_CS_fsm_state47;
reg   [15:0] MUL_DP_ret26_reg_7415_1;
reg   [15:0] MUL_DP_ret27_reg_7420_1;
reg   [15:0] MUL_DP_ret28_reg_7425_1;
reg   [15:0] MUL_DP_ret29_reg_7430_1;
reg   [15:0] MUL_DP_ret30_reg_7435_1;
reg   [15:0] MUL_DP_ret31_reg_7440_1;
reg   [15:0] MUL_DP_ret32_reg_7445_1;
reg   [15:0] MUL_DP_ret33_reg_7450_1;
reg   [15:0] MUL_DP_ret34_reg_7455_1;
reg   [15:0] MUL_DP_ret35_reg_7460_1;
reg   [15:0] MUL_DP_ret36_reg_7465_1;
wire   [7:0] tmp_14_fu_5134_p2;
reg   [7:0] tmp_14_reg_7470;
wire    ap_CS_fsm_state49;
wire   [7:0] tmp_32_1_fu_5147_p2;
reg   [7:0] tmp_32_1_reg_7475;
wire   [7:0] tmp_32_2_fu_5160_p2;
reg   [7:0] tmp_32_2_reg_7480;
wire   [7:0] tmp_32_3_fu_5173_p2;
reg   [7:0] tmp_32_3_reg_7485;
wire   [7:0] tmp_32_4_fu_5186_p2;
reg   [7:0] tmp_32_4_reg_7490;
wire   [7:0] tmp_32_5_fu_5199_p2;
reg   [7:0] tmp_32_5_reg_7495;
wire   [7:0] tmp_32_6_fu_5212_p2;
reg   [7:0] tmp_32_6_reg_7500;
wire   [7:0] tmp_32_7_fu_5225_p2;
reg   [7:0] tmp_32_7_reg_7505;
wire   [7:0] tmp_32_8_fu_5238_p2;
reg   [7:0] tmp_32_8_reg_7510;
wire   [7:0] tmp_32_9_fu_5251_p2;
reg   [7:0] tmp_32_9_reg_7515;
wire   [7:0] tmp_32_s_fu_5264_p2;
reg   [7:0] tmp_32_s_reg_7520;
wire   [7:0] tmp_32_10_fu_5277_p2;
reg   [7:0] tmp_32_10_reg_7525;
wire   [7:0] h9_cast6_cast1_fu_5283_p1;
reg   [7:0] h9_cast6_cast1_reg_7530;
wire    ap_CS_fsm_state51;
wire   [10:0] h9_cast6_cast_fu_5287_p1;
reg   [10:0] h9_cast6_cast_reg_7535;
wire   [8:0] tmp_198_fu_5325_p2;
reg   [8:0] tmp_198_reg_7540;
wire   [8:0] tmp_199_fu_5331_p2;
reg   [8:0] tmp_199_reg_7545;
wire   [0:0] exitcond2_fu_5337_p2;
wire   [7:0] w10_cast5_cast1_fu_5343_p1;
reg   [7:0] w10_cast5_cast1_reg_7554;
wire    ap_CS_fsm_state52;
wire   [14:0] w10_cast5_cast2_fu_5347_p1;
reg   [14:0] w10_cast5_cast2_reg_7559;
reg   [8:0] ShuffleConvs_2_Downs_239_reg_7564;
reg   [8:0] ShuffleConvs_2_Downs_240_reg_7569;
reg   [8:0] ShuffleConvs_2_Downs_241_reg_7574;
reg   [8:0] ShuffleConvs_2_Downs_242_reg_7579;
reg   [8:0] ShuffleConvs_2_Downs_243_reg_7584;
reg   [8:0] ShuffleConvs_2_Downs_244_reg_7589;
reg   [8:0] ShuffleConvs_2_Downs_245_reg_7594;
reg   [8:0] ShuffleConvs_2_Downs_246_reg_7599;
reg   [8:0] ShuffleConvs_2_Downs_247_reg_7604;
reg   [8:0] ShuffleConvs_2_Downs_248_reg_7609;
reg   [8:0] ShuffleConvs_2_Downs_249_reg_7614;
reg   [8:0] ShuffleConvs_2_Downs_250_reg_7619;
reg   [8:0] ShuffleConvs_2_Downs_251_reg_7624;
reg   [8:0] ShuffleConvs_2_Downs_252_reg_7629;
reg   [8:0] ShuffleConvs_2_Downs_253_reg_7634;
reg   [8:0] ShuffleConvs_2_Downs_254_reg_7639;
reg   [8:0] ShuffleConvs_2_Downs_255_reg_7644;
reg   [8:0] ShuffleConvs_2_Downs_256_reg_7649;
reg   [8:0] ShuffleConvs_2_Downs_257_reg_7654;
reg   [8:0] ShuffleConvs_2_Downs_258_reg_7659;
reg   [8:0] ShuffleConvs_2_Downs_259_reg_7664;
reg   [8:0] ShuffleConvs_2_Downs_260_reg_7669;
reg   [8:0] ShuffleConvs_2_Downs_261_reg_7674;
reg   [8:0] ShuffleConvs_2_Downs_262_reg_7679;
wire   [3:0] h_1_fu_5403_p2;
wire   [0:0] exitcond10_fu_5397_p2;
reg   [13:0] input_V_addr_3_reg_7692;
wire    ap_CS_fsm_state53;
reg   [8:0] weight_12_V_addr_2_reg_7697;
reg   [8:0] weight_13_V_addr_2_reg_7707;
reg   [8:0] weight_14_V_addr_2_reg_7717;
reg   [8:0] weight_15_V_addr_2_reg_7727;
reg   [8:0] weight_16_V_addr_2_reg_7737;
reg   [8:0] weight_17_V_addr_2_reg_7747;
reg   [8:0] weight_18_V_addr_2_reg_7757;
reg   [8:0] weight_19_V_addr_2_reg_7767;
reg   [8:0] weight_20_V_addr_2_reg_7777;
reg   [8:0] weight_21_V_addr_2_reg_7787;
reg   [8:0] weight_22_V_addr_2_reg_7797;
reg   [8:0] weight_23_V_addr_2_reg_7807;
wire   [6:0] ci_4_fu_5552_p2;
reg   [6:0] ci_4_reg_7820;
wire   [3:0] w_13_fu_5558_p2;
wire   [0:0] exitcond13_fu_5546_p2;
reg   [15:0] MUL_DP_ret37_reg_7830_1;
wire    ap_CS_fsm_state59;
reg   [15:0] MUL_DP_ret38_reg_7835_1;
reg   [15:0] MUL_DP_ret39_reg_7840_1;
reg   [15:0] MUL_DP_ret40_reg_7845_1;
reg   [15:0] MUL_DP_ret41_reg_7850_1;
reg   [15:0] MUL_DP_ret42_reg_7855_1;
reg   [15:0] MUL_DP_ret43_reg_7860_1;
reg   [15:0] MUL_DP_ret44_reg_7865_1;
reg   [15:0] MUL_DP_ret45_reg_7870_1;
reg   [15:0] MUL_DP_ret46_reg_7875_1;
reg   [15:0] MUL_DP_ret47_reg_7880_1;
reg   [15:0] MUL_DP_ret_reg_7885_1;
wire   [7:0] tmp_18_fu_5751_p2;
reg   [7:0] tmp_18_reg_7890;
wire    ap_CS_fsm_state61;
wire   [7:0] tmp_38_1_fu_5764_p2;
reg   [7:0] tmp_38_1_reg_7895;
wire   [7:0] tmp_38_2_fu_5777_p2;
reg   [7:0] tmp_38_2_reg_7900;
wire   [7:0] tmp_38_3_fu_5790_p2;
reg   [7:0] tmp_38_3_reg_7905;
wire   [7:0] tmp_38_4_fu_5803_p2;
reg   [7:0] tmp_38_4_reg_7910;
wire   [7:0] tmp_38_5_fu_5816_p2;
reg   [7:0] tmp_38_5_reg_7915;
wire   [7:0] tmp_38_6_fu_5829_p2;
reg   [7:0] tmp_38_6_reg_7920;
wire   [7:0] tmp_38_7_fu_5842_p2;
reg   [7:0] tmp_38_7_reg_7925;
wire   [7:0] tmp_38_8_fu_5855_p2;
reg   [7:0] tmp_38_8_reg_7930;
wire   [7:0] tmp_38_9_fu_5868_p2;
reg   [7:0] tmp_38_9_reg_7935;
wire   [7:0] tmp_38_s_fu_5881_p2;
reg   [7:0] tmp_38_s_reg_7940;
wire   [7:0] tmp_38_10_fu_5894_p2;
reg   [7:0] tmp_38_10_reg_7945;
wire   [0:0] exitcond_flatten3_fu_5900_p2;
reg   [0:0] exitcond_flatten3_reg_7950;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state63_pp1_stage0_iter0;
wire    ap_block_state64_pp1_stage0_iter1;
wire    ap_block_state65_pp1_stage0_iter2;
wire    ap_block_state66_pp1_stage0_iter3;
wire    ap_block_state67_pp1_stage0_iter4;
wire    ap_block_state68_pp1_stage0_iter5;
wire    ap_block_state69_pp1_stage0_iter6;
wire    ap_block_state70_pp1_stage0_iter7;
wire    ap_block_state71_pp1_stage0_iter8;
wire    ap_block_state72_pp1_stage0_iter9;
wire    ap_block_state73_pp1_stage0_iter10;
wire    ap_block_state74_pp1_stage0_iter11;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter3_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter4_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter5_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter6_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter7_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter8_exitcond_flatten3_reg_7950;
reg   [0:0] ap_reg_pp1_iter9_exitcond_flatten3_reg_7950;
wire   [12:0] indvar_flatten_next3_fu_5906_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten2_fu_5918_p2;
reg   [0:0] exitcond_flatten2_reg_7959;
wire   [6:0] arrayNo_cast3_mid2_v_1_fu_5924_p3;
reg   [6:0] arrayNo_cast3_mid2_v_1_reg_7966;
wire   [7:0] indvar_flatten_next2_fu_5938_p3;
reg   [3:0] tmp_161_reg_7978;
wire   [3:0] w12_mid2_fu_6005_p3;
reg   [3:0] w12_mid2_reg_7984;
wire   [3:0] h11_cast2_mid2_fu_6013_p3;
reg   [3:0] h11_cast2_mid2_reg_7990;
reg    ap_enable_reg_pp1_iter1;
wire   [9:0] tmp_232_fu_6099_p2;
reg   [9:0] tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter3_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter4_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter5_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter6_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter7_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter8_tmp_232_reg_7996;
reg   [9:0] ap_reg_pp1_iter9_tmp_232_reg_7996;
wire   [3:0] w_14_fu_6105_p2;
reg    ap_enable_reg_pp1_iter2;
reg   [8:0] ShuffleConvs_2_Downs_287_reg_8006;
reg   [8:0] ShuffleConvs_2_Downs_288_reg_8012;
reg   [8:0] ShuffleConvs_2_Downs_289_reg_8018;
reg   [8:0] ShuffleConvs_2_Downs_290_reg_8024;
reg   [8:0] ShuffleConvs_2_Downs_291_reg_8030;
reg   [8:0] ShuffleConvs_2_Downs_292_reg_8036;
reg   [8:0] ShuffleConvs_2_Downs_293_reg_8042;
reg   [8:0] ShuffleConvs_2_Downs_294_reg_8048;
reg   [8:0] ShuffleConvs_2_Downs_295_reg_8054;
reg   [8:0] ShuffleConvs_2_Downs_296_reg_8060;
reg   [8:0] ShuffleConvs_2_Downs_297_reg_8066;
reg   [8:0] ShuffleConvs_2_Downs_298_reg_8072;
reg   [8:0] ShuffleConvs_2_Downs_299_reg_8078;
reg   [8:0] ShuffleConvs_2_Downs_300_reg_8084;
reg   [8:0] ShuffleConvs_2_Downs_301_reg_8090;
reg   [8:0] ShuffleConvs_2_Downs_302_reg_8096;
reg   [8:0] ShuffleConvs_2_Downs_303_reg_8102;
reg   [8:0] ShuffleConvs_2_Downs_304_reg_8108;
reg   [8:0] ShuffleConvs_2_Downs_305_reg_8114;
reg   [8:0] ShuffleConvs_2_Downs_306_reg_8120;
reg   [8:0] ShuffleConvs_2_Downs_307_reg_8126;
reg   [8:0] ShuffleConvs_2_Downs_308_reg_8132;
reg   [8:0] ShuffleConvs_2_Downs_309_reg_8138;
reg   [8:0] ShuffleConvs_2_Downs_310_reg_8144;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state63;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg   [7:0] grp_MUL_DP_fu_2727_a_V;
reg   [7:0] grp_MUL_DP_fu_2727_b_V;
reg    grp_MUL_DP_fu_2727_ap_ce;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
reg   [7:0] grp_MUL_DP_fu_2734_a_V;
reg   [7:0] grp_MUL_DP_fu_2734_b_V;
reg    grp_MUL_DP_fu_2734_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2741_a_V;
reg   [7:0] grp_MUL_DP_fu_2741_b_V;
reg    grp_MUL_DP_fu_2741_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2748_a_V;
reg   [7:0] grp_MUL_DP_fu_2748_b_V;
reg    grp_MUL_DP_fu_2748_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2755_a_V;
reg   [7:0] grp_MUL_DP_fu_2755_b_V;
reg    grp_MUL_DP_fu_2755_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2762_a_V;
reg   [7:0] grp_MUL_DP_fu_2762_b_V;
reg    grp_MUL_DP_fu_2762_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2769_a_V;
reg   [7:0] grp_MUL_DP_fu_2769_b_V;
reg    grp_MUL_DP_fu_2769_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2776_a_V;
reg   [7:0] grp_MUL_DP_fu_2776_b_V;
reg    grp_MUL_DP_fu_2776_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2783_a_V;
reg   [7:0] grp_MUL_DP_fu_2783_b_V;
reg    grp_MUL_DP_fu_2783_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2790_a_V;
reg   [7:0] grp_MUL_DP_fu_2790_b_V;
reg    grp_MUL_DP_fu_2790_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2797_a_V;
reg   [7:0] grp_MUL_DP_fu_2797_b_V;
reg    grp_MUL_DP_fu_2797_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2804_a_V;
reg   [7:0] grp_MUL_DP_fu_2804_b_V;
reg    grp_MUL_DP_fu_2804_ap_ce;
reg   [6:0] co_phi_fu_2487_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] h_phi_fu_2510_p4;
reg   [3:0] w_phi_fu_2522_p4;
reg   [3:0] h1_reg_2530;
wire    ap_CS_fsm_state14;
reg   [3:0] w2_reg_2542;
wire   [0:0] exitcond1_fu_3504_p2;
reg   [6:0] ci_reg_2554;
wire    ap_CS_fsm_state26;
reg   [3:0] h4_reg_2565;
reg   [3:0] w5_reg_2577;
wire   [0:0] exitcond3_fu_4109_p2;
reg   [6:0] ci6_reg_2589;
wire    ap_CS_fsm_state38;
reg   [3:0] h8_reg_2600;
reg   [3:0] w9_reg_2612;
wire   [0:0] exitcond6_fu_4720_p2;
reg   [6:0] ci2_reg_2624;
wire    ap_CS_fsm_state50;
reg   [3:0] h9_reg_2635;
reg   [3:0] w10_reg_2647;
reg   [6:0] ci3_reg_2659;
wire    ap_CS_fsm_state62;
reg   [6:0] co9_phi_fu_2685_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] h11_phi_fu_2707_p4;
reg   [3:0] w11_phi_fu_2719_p4;
wire   [31:0] co_cast_mid2_fu_3337_p1;
wire   [31:0] tmp_217_cast_fu_3429_p1;
wire   [31:0] tmp_226_cast_fu_3531_p1;
wire   [31:0] tmp_227_cast_fu_3552_p1;
wire   [31:0] tmp_242_cast_fu_3654_p1;
wire   [31:0] tmp_244_cast_fu_3669_p1;
wire   [31:0] tmp_245_cast_fu_3691_p1;
wire   [31:0] tmp_233_cast_fu_4136_p1;
wire   [31:0] tmp_234_cast_fu_4157_p1;
wire   [31:0] tmp_260_cast_fu_4259_p1;
wire   [31:0] tmp_262_cast_fu_4274_p1;
wire   [31:0] tmp_263_cast_fu_4296_p1;
wire   [31:0] tmp_251_cast_fu_4743_p1;
wire   [31:0] tmp_252_cast_fu_4764_p1;
wire   [31:0] tmp_273_cast_fu_4870_p1;
wire   [31:0] tmp_276_cast_fu_4891_p1;
wire   [31:0] tmp_277_cast_fu_4913_p1;
wire   [31:0] tmp_264_cast_fu_5360_p1;
wire   [31:0] tmp_265_cast_fu_5381_p1;
wire   [31:0] tmp_296_cast_fu_5487_p1;
wire   [31:0] tmp_299_cast_fu_5508_p1;
wire   [31:0] tmp_300_cast_fu_5530_p1;
wire   [31:0] tmp_288_cast_fu_6110_p1;
wire   [5:0] tmp_100_fu_3425_p1;
wire   [7:0] tmp_25_s_fu_4488_p2;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_36_s_fu_5722_p2;
wire    ap_CS_fsm_state60;
wire   [0:0] tmp_233_fu_6199_p3;
wire   [5:0] tmp_160_fu_6141_p1;
wire   [7:0] tmp_25_9_fu_4473_p2;
wire   [7:0] tmp_36_9_fu_5707_p2;
wire   [7:0] tmp_25_8_fu_4458_p2;
wire   [7:0] tmp_36_8_fu_5692_p2;
wire   [7:0] tmp_25_7_fu_4443_p2;
wire   [7:0] tmp_36_7_fu_5677_p2;
wire   [7:0] tmp_25_6_fu_4428_p2;
wire   [7:0] tmp_36_6_fu_5662_p2;
wire   [7:0] tmp_25_5_fu_4413_p2;
wire   [7:0] tmp_36_5_fu_5647_p2;
wire   [7:0] tmp_25_4_fu_4398_p2;
wire   [7:0] tmp_36_4_fu_5632_p2;
wire   [7:0] tmp_25_3_fu_4383_p2;
wire   [7:0] tmp_36_3_fu_5617_p2;
wire   [7:0] tmp_25_2_fu_4368_p2;
wire   [7:0] tmp_36_2_fu_5602_p2;
wire   [7:0] tmp_25_1_fu_4353_p2;
wire   [7:0] tmp_36_1_fu_5587_p2;
wire   [7:0] tmp_7_fu_4338_p2;
wire   [7:0] tmp_16_fu_5572_p2;
wire   [7:0] tmp_20_10_fu_3898_p2;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_30_10_fu_5120_p2;
wire    ap_CS_fsm_state48;
wire   [7:0] tmp_20_s_fu_3883_p2;
wire   [7:0] tmp_30_s_fu_5105_p2;
wire   [7:0] tmp_20_9_fu_3868_p2;
wire   [7:0] tmp_30_9_fu_5090_p2;
wire   [7:0] tmp_20_8_fu_3853_p2;
wire   [7:0] tmp_30_8_fu_5075_p2;
wire   [7:0] tmp_20_7_fu_3838_p2;
wire   [7:0] tmp_30_7_fu_5060_p2;
wire   [7:0] tmp_20_6_fu_3823_p2;
wire   [7:0] tmp_30_6_fu_5045_p2;
wire   [7:0] tmp_20_5_fu_3808_p2;
wire   [7:0] tmp_30_5_fu_5030_p2;
wire   [7:0] tmp_20_4_fu_3793_p2;
wire   [7:0] tmp_30_4_fu_5015_p2;
wire   [7:0] tmp_20_3_fu_3778_p2;
wire   [7:0] tmp_30_3_fu_5000_p2;
wire   [7:0] tmp_20_2_fu_3763_p2;
wire   [7:0] tmp_30_2_fu_4985_p2;
wire   [7:0] tmp_20_1_fu_3748_p2;
wire   [7:0] tmp_30_1_fu_4970_p2;
wire   [7:0] tmp_3_fu_3733_p2;
wire   [7:0] tmp_11_fu_4955_p2;
wire   [7:0] tmp_25_10_fu_4503_p2;
wire   [7:0] tmp_36_10_fu_5737_p2;
wire   [7:0] indvar_flatten_op_fu_3229_p2;
wire   [6:0] co_7_fu_3243_p2;
wire   [6:0] grp_fu_3263_p0;
wire   [5:0] grp_fu_3263_p1;
wire   [0:0] exitcond_fu_3274_p2;
wire   [0:0] not_exitcond_flatten_fu_3269_p2;
wire   [3:0] h_mid_fu_3249_p3;
wire   [0:0] exitcond5_mid_fu_3280_p2;
wire   [0:0] tmp_165_fu_3292_p2;
wire   [3:0] h_8_fu_3286_p2;
wire   [6:0] mul_fu_3321_p1;
wire   [15:0] mul_fu_3321_p2;
wire   [6:0] tmp_102_fu_3341_p3;
wire  signed [9:0] tmp_s_fu_3348_p1;
wire   [4:0] tmp_103_fu_3356_p3;
wire  signed [7:0] tmp_163_fu_3363_p1;
wire   [10:0] p_shl2_cast_fu_3352_p1;
wire   [10:0] p_shl3_cast_fu_3367_p1;
wire   [10:0] h_cast_mid2_cast_fu_3377_p1;
wire   [10:0] tmp_164_fu_3371_p2;
wire   [10:0] tmp_166_fu_3380_p2;
wire   [6:0] tmp_104_fu_3386_p1;
wire   [8:0] tmp_105_fu_3398_p1;
wire   [9:0] p_shl_cast_fu_3390_p3;
wire   [9:0] p_shl1_cast_fu_3402_p3;
wire   [9:0] w_cast_cast_fu_3416_p1;
wire   [9:0] tmp_167_fu_3410_p2;
wire   [5:0] grp_fu_3263_p2;
wire   [6:0] tmp_169_fu_3464_p3;
wire   [4:0] tmp_170_fu_3476_p3;
wire   [7:0] p_shl5_cast_fu_3484_p1;
wire   [7:0] p_shl4_cast_fu_3472_p1;
wire   [8:0] tmp_220_cast_fu_3494_p1;
wire   [7:0] w2_cast_cast_fu_3522_p1;
wire   [7:0] tmp_177_fu_3526_p2;
wire   [8:0] w2_cast_cast3_fu_3518_p1;
wire   [8:0] tmp_178_fu_3547_p2;
wire   [9:0] tmp_186_fu_3584_p3;
wire   [7:0] tmp_187_fu_3596_p3;
wire   [10:0] p_shl8_cast_fu_3592_p1;
wire   [10:0] p_shl9_cast_fu_3604_p1;
wire   [10:0] tmp_188_fu_3608_p2;
wire   [10:0] tmp_189_fu_3614_p2;
wire   [13:0] tmp_106_fu_3619_p3;
wire   [11:0] tmp_107_fu_3631_p3;
wire   [14:0] p_shl6_cast_fu_3627_p1;
wire   [14:0] p_shl7_cast_fu_3639_p1;
wire   [14:0] tmp_190_fu_3643_p2;
wire   [14:0] tmp_191_fu_3649_p2;
wire   [6:0] tmp_192_fu_3659_p2;
wire   [6:0] tmp_193_fu_3664_p2;
wire   [8:0] ci_cast_cast_fu_3580_p1;
wire   [8:0] tmp_194_fu_3685_p2;
wire   [7:0] tmp_108_fu_3729_p1;
wire   [7:0] tmp_110_fu_3744_p1;
wire   [7:0] tmp_112_fu_3759_p1;
wire   [7:0] tmp_114_fu_3774_p1;
wire   [7:0] tmp_116_fu_3789_p1;
wire   [7:0] tmp_118_fu_3804_p1;
wire   [7:0] tmp_120_fu_3819_p1;
wire   [7:0] tmp_122_fu_3834_p1;
wire   [7:0] tmp_124_fu_3849_p1;
wire   [7:0] tmp_126_fu_3864_p1;
wire   [7:0] tmp_128_fu_3879_p1;
wire   [7:0] tmp_130_fu_3894_p1;
wire   [7:0] tmp_109_fu_3908_p1;
wire   [7:0] tmp_111_fu_3921_p1;
wire   [7:0] tmp_113_fu_3934_p1;
wire   [7:0] tmp_115_fu_3947_p1;
wire   [7:0] tmp_117_fu_3960_p1;
wire   [7:0] tmp_119_fu_3973_p1;
wire   [7:0] tmp_121_fu_3986_p1;
wire   [7:0] tmp_123_fu_3999_p1;
wire   [7:0] tmp_125_fu_4012_p1;
wire   [7:0] tmp_127_fu_4025_p1;
wire   [7:0] tmp_129_fu_4038_p1;
wire   [7:0] tmp_131_fu_4051_p1;
wire   [6:0] tmp_173_fu_4069_p3;
wire   [4:0] tmp_174_fu_4081_p3;
wire   [7:0] p_shl11_cast_fu_4089_p1;
wire   [7:0] p_shl10_cast_fu_4077_p1;
wire   [8:0] tmp_224_cast_fu_4099_p1;
wire   [7:0] w5_cast_cast_fu_4127_p1;
wire   [7:0] tmp_184_fu_4131_p2;
wire   [8:0] w5_cast_cast3_fu_4123_p1;
wire   [8:0] tmp_185_fu_4152_p2;
wire   [9:0] tmp_202_fu_4189_p3;
wire   [7:0] tmp_203_fu_4201_p3;
wire   [10:0] p_shl14_cast_fu_4197_p1;
wire   [10:0] p_shl15_cast_fu_4209_p1;
wire   [10:0] tmp_204_fu_4213_p2;
wire   [10:0] tmp_205_fu_4219_p2;
wire   [13:0] tmp_132_fu_4224_p3;
wire   [11:0] tmp_133_fu_4236_p3;
wire   [14:0] p_shl12_cast_fu_4232_p1;
wire   [14:0] p_shl13_cast_fu_4244_p1;
wire   [14:0] tmp_206_fu_4248_p2;
wire   [14:0] tmp_207_fu_4254_p2;
wire   [6:0] tmp_208_fu_4264_p2;
wire   [6:0] tmp_209_fu_4269_p2;
wire   [8:0] ci6_cast_cast_fu_4185_p1;
wire   [8:0] tmp_210_fu_4290_p2;
wire   [7:0] tmp_134_fu_4334_p1;
wire   [7:0] tmp_136_fu_4349_p1;
wire   [7:0] tmp_138_fu_4364_p1;
wire   [7:0] tmp_140_fu_4379_p1;
wire   [7:0] tmp_142_fu_4394_p1;
wire   [7:0] tmp_144_fu_4409_p1;
wire   [7:0] tmp_146_fu_4424_p1;
wire   [7:0] tmp_148_fu_4439_p1;
wire   [7:0] tmp_150_fu_4454_p1;
wire   [7:0] tmp_152_fu_4469_p1;
wire   [7:0] tmp_154_fu_4484_p1;
wire   [7:0] tmp_156_fu_4499_p1;
wire   [7:0] tmp_135_fu_4513_p1;
wire   [7:0] tmp_137_fu_4526_p1;
wire   [7:0] tmp_139_fu_4539_p1;
wire   [7:0] tmp_141_fu_4552_p1;
wire   [7:0] tmp_143_fu_4565_p1;
wire   [7:0] tmp_145_fu_4578_p1;
wire   [7:0] tmp_147_fu_4591_p1;
wire   [7:0] tmp_149_fu_4604_p1;
wire   [7:0] tmp_151_fu_4617_p1;
wire   [7:0] tmp_153_fu_4630_p1;
wire   [7:0] tmp_155_fu_4643_p1;
wire   [7:0] tmp_157_fu_4656_p1;
wire   [6:0] tmp_179_fu_4674_p3;
wire   [4:0] tmp_180_fu_4686_p3;
wire   [7:0] p_shl17_cast_fu_4694_p1;
wire   [7:0] p_shl16_cast_fu_4682_p1;
wire   [7:0] tmp_181_fu_4698_p2;
wire   [8:0] tmp_230_cast_fu_4704_p1;
wire   [8:0] w9_cast8_cast_fu_4734_p1;
wire   [8:0] tmp_200_fu_4738_p2;
wire   [8:0] tmp_201_fu_4759_p2;
wire   [9:0] tmp_213_fu_4800_p3;
wire   [7:0] tmp_214_fu_4812_p3;
wire   [10:0] p_shl20_cast_fu_4808_p1;
wire   [10:0] p_shl21_cast_fu_4820_p1;
wire   [10:0] tmp_215_fu_4824_p2;
wire   [10:0] tmp_216_fu_4830_p2;
wire   [13:0] tmp_158_fu_4835_p3;
wire   [11:0] tmp_159_fu_4847_p3;
wire   [14:0] p_shl18_cast_fu_4843_p1;
wire   [14:0] p_shl19_cast_fu_4855_p1;
wire   [14:0] tmp_217_fu_4859_p2;
wire   [14:0] tmp_218_fu_4865_p2;
wire   [7:0] ci2_cast7_cast_fu_4796_p1;
wire   [7:0] tmp_219_fu_4875_p2;
wire   [7:0] tmp_220_fu_4881_p2;
wire   [7:0] tmp_221_fu_4886_p2;
wire   [8:0] ci2_cast7_cast1_fu_4792_p1;
wire   [8:0] tmp_222_fu_4907_p2;
wire   [7:0] tmp_234_fu_4951_p1;
wire   [7:0] tmp_236_fu_4966_p1;
wire   [7:0] tmp_238_fu_4981_p1;
wire   [7:0] tmp_240_fu_4996_p1;
wire   [7:0] tmp_242_fu_5011_p1;
wire   [7:0] tmp_244_fu_5026_p1;
wire   [7:0] tmp_246_fu_5041_p1;
wire   [7:0] tmp_248_fu_5056_p1;
wire   [7:0] tmp_250_fu_5071_p1;
wire   [7:0] tmp_252_fu_5086_p1;
wire   [7:0] tmp_254_fu_5101_p1;
wire   [7:0] tmp_256_fu_5116_p1;
wire   [7:0] tmp_235_fu_5130_p1;
wire   [7:0] tmp_237_fu_5143_p1;
wire   [7:0] tmp_239_fu_5156_p1;
wire   [7:0] tmp_241_fu_5169_p1;
wire   [7:0] tmp_243_fu_5182_p1;
wire   [7:0] tmp_245_fu_5195_p1;
wire   [7:0] tmp_247_fu_5208_p1;
wire   [7:0] tmp_249_fu_5221_p1;
wire   [7:0] tmp_251_fu_5234_p1;
wire   [7:0] tmp_253_fu_5247_p1;
wire   [7:0] tmp_255_fu_5260_p1;
wire   [7:0] tmp_257_fu_5273_p1;
wire   [6:0] tmp_195_fu_5291_p3;
wire   [4:0] tmp_196_fu_5303_p3;
wire   [7:0] p_shl23_cast_fu_5311_p1;
wire   [7:0] p_shl22_cast_fu_5299_p1;
wire   [7:0] tmp_197_fu_5315_p2;
wire   [8:0] tmp_248_cast_fu_5321_p1;
wire   [8:0] w10_cast5_cast_fu_5351_p1;
wire   [8:0] tmp_211_fu_5355_p2;
wire   [8:0] tmp_212_fu_5376_p2;
wire   [9:0] tmp_258_fu_5417_p3;
wire   [7:0] tmp_259_fu_5429_p3;
wire   [10:0] p_shl26_cast_fu_5425_p1;
wire   [10:0] p_shl27_cast_fu_5437_p1;
wire   [10:0] tmp_260_fu_5441_p2;
wire   [10:0] tmp_261_fu_5447_p2;
wire   [13:0] tmp_262_fu_5452_p3;
wire   [11:0] tmp_263_fu_5464_p3;
wire   [14:0] p_shl24_cast_fu_5460_p1;
wire   [14:0] p_shl25_cast_fu_5472_p1;
wire   [14:0] tmp_264_fu_5476_p2;
wire   [14:0] tmp_265_fu_5482_p2;
wire   [7:0] ci3_cast4_cast_fu_5413_p1;
wire   [7:0] tmp_266_fu_5492_p2;
wire   [7:0] tmp_267_fu_5498_p2;
wire   [7:0] tmp_268_fu_5503_p2;
wire   [8:0] ci3_cast4_cast1_fu_5409_p1;
wire   [8:0] tmp_269_fu_5524_p2;
wire   [7:0] tmp_270_fu_5568_p1;
wire   [7:0] tmp_272_fu_5583_p1;
wire   [7:0] tmp_274_fu_5598_p1;
wire   [7:0] tmp_276_fu_5613_p1;
wire   [7:0] tmp_278_fu_5628_p1;
wire   [7:0] tmp_280_fu_5643_p1;
wire   [7:0] tmp_282_fu_5658_p1;
wire   [7:0] tmp_284_fu_5673_p1;
wire   [7:0] tmp_286_fu_5688_p1;
wire   [7:0] tmp_288_fu_5703_p1;
wire   [7:0] tmp_290_fu_5718_p1;
wire   [7:0] tmp_292_fu_5733_p1;
wire   [7:0] tmp_271_fu_5747_p1;
wire   [7:0] tmp_273_fu_5760_p1;
wire   [7:0] tmp_275_fu_5773_p1;
wire   [7:0] tmp_277_fu_5786_p1;
wire   [7:0] tmp_279_fu_5799_p1;
wire   [7:0] tmp_281_fu_5812_p1;
wire   [7:0] tmp_283_fu_5825_p1;
wire   [7:0] tmp_285_fu_5838_p1;
wire   [7:0] tmp_287_fu_5851_p1;
wire   [7:0] tmp_289_fu_5864_p1;
wire   [7:0] tmp_291_fu_5877_p1;
wire   [7:0] tmp_293_fu_5890_p1;
wire   [6:0] co_8_fu_5912_p2;
wire   [7:0] indvar_flatten21_op_fu_5932_p2;
wire   [5:0] grp_fu_5953_p1;
wire   [6:0] mul1_fu_5961_p1;
wire   [15:0] mul1_fu_5961_p2;
wire   [0:0] exitcond12_fu_5982_p2;
wire   [0:0] not_exitcond_flatten_2_fu_5977_p2;
wire   [3:0] h11_mid_fu_5946_p3;
wire   [0:0] exitcond_mid_fu_5988_p2;
wire   [0:0] tmp_227_fu_6000_p2;
wire   [3:0] h_13_fu_5994_p2;
wire   [6:0] tmp_162_fu_6021_p3;
wire  signed [9:0] tmp_223_fu_6028_p1;
wire   [4:0] tmp_224_fu_6036_p3;
wire  signed [7:0] tmp_225_fu_6043_p1;
wire   [10:0] p_shl30_cast_fu_6032_p1;
wire   [10:0] p_shl31_cast_fu_6047_p1;
wire   [10:0] h11_cast2_mid2_cast_fu_6057_p1;
wire   [10:0] tmp_226_fu_6051_p2;
wire   [10:0] tmp_228_fu_6060_p2;
wire   [6:0] tmp_229_fu_6066_p1;
wire   [8:0] tmp_230_fu_6078_p1;
wire   [9:0] p_shl28_cast_fu_6070_p3;
wire   [9:0] p_shl29_cast_fu_6082_p3;
wire   [9:0] w12_cast1_cast_fu_6096_p1;
wire   [9:0] tmp_231_fu_6090_p2;
wire   [6:0] grp_fu_5953_p2;
wire   [31:0] tmp_2_fu_6145_p25;
wire   [7:0] tmp_2_fu_6145_p26;
wire    ap_CS_fsm_state75;
reg   [52:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [15:0] mul1_fu_5961_p10;
wire   [15:0] mul_fu_3321_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_2727(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2727_a_V),
    .b_V(grp_MUL_DP_fu_2727_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2727_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2727_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2727_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2734(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2734_a_V),
    .b_V(grp_MUL_DP_fu_2734_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2734_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2734_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2734_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2741(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2741_a_V),
    .b_V(grp_MUL_DP_fu_2741_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2741_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2741_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2741_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2748(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2748_a_V),
    .b_V(grp_MUL_DP_fu_2748_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2748_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2748_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2748_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2755(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2755_a_V),
    .b_V(grp_MUL_DP_fu_2755_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2755_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2755_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2755_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2762(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2762_a_V),
    .b_V(grp_MUL_DP_fu_2762_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2762_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2762_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2762_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2769(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2769_a_V),
    .b_V(grp_MUL_DP_fu_2769_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2769_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2769_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2769_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2776(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2776_a_V),
    .b_V(grp_MUL_DP_fu_2776_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2776_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2776_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2776_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2783(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2783_a_V),
    .b_V(grp_MUL_DP_fu_2783_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2783_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2783_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2783_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2790(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2790_a_V),
    .b_V(grp_MUL_DP_fu_2790_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2790_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2790_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2790_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2797(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2797_a_V),
    .b_V(grp_MUL_DP_fu_2797_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2797_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2797_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2797_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2804(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2804_a_V),
    .b_V(grp_MUL_DP_fu_2804_b_V),
    .w_V(reg_2955),
    .ap_return_0(grp_MUL_DP_fu_2804_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2804_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2804_ap_ce)
);

ShuffleNetV2_uremjbC #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremjbC_U506(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3263_p0),
    .din1(grp_fu_3263_p1),
    .ce(1'b1),
    .dout(grp_fu_3263_p2)
);

ShuffleNetV2_uremkbM #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
ShuffleNetV2_uremkbM_U507(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayNo_cast3_mid2_v_1_reg_7966),
    .din1(grp_fu_5953_p1),
    .ce(1'b1),
    .dout(grp_fu_5953_p2)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_x_U508(
    .din1(ShuffleConvs_2_Downs_23_q0),
    .din2(ShuffleConvs_2_Downs_22_q0),
    .din3(ShuffleConvs_2_Downs_11_q0),
    .din4(ShuffleConvs_2_Downs_6_q0),
    .din5(ShuffleConvs_2_Downs_5_q0),
    .din6(ShuffleConvs_2_Downs_4_q0),
    .din7(ShuffleConvs_2_Downs_3_q0),
    .din8(ShuffleConvs_2_Downs_2_q0),
    .din9(ShuffleConvs_2_Downs_1_q0),
    .din10(ShuffleConvs_2_Downs_q0),
    .din11(ShuffleConvs_2_Downs_21_q0),
    .din12(ShuffleConvs_2_Downs_20_q0),
    .din13(ShuffleConvs_2_Downs_19_q0),
    .din14(ShuffleConvs_2_Downs_18_q0),
    .din15(ShuffleConvs_2_Downs_17_q0),
    .din16(ShuffleConvs_2_Downs_16_q0),
    .din17(ShuffleConvs_2_Downs_15_q0),
    .din18(ShuffleConvs_2_Downs_14_q0),
    .din19(ShuffleConvs_2_Downs_13_q0),
    .din20(ShuffleConvs_2_Downs_12_q0),
    .din21(ShuffleConvs_2_Downs_10_q0),
    .din22(ShuffleConvs_2_Downs_9_q0),
    .din23(ShuffleConvs_2_Downs_8_q0),
    .din24(ShuffleConvs_2_Downs_7_q0),
    .din25(tmp_2_fu_6145_p25),
    .dout(tmp_2_fu_6145_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state63))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state63)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state63 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'd0 == exitcond9_fu_4780_p2))) begin
        ci2_reg_2624 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ci2_reg_2624 <= ci_3_reg_7400;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (1'd0 == exitcond10_fu_5397_p2))) begin
        ci3_reg_2659 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        ci3_reg_2659 <= ci_4_reg_7820;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond7_fu_4173_p2))) begin
        ci6_reg_2589 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ci6_reg_2589 <= ci_2_reg_6981;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond4_fu_3568_p2))) begin
        ci_reg_2554 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ci_reg_2554 <= ci_1_reg_6562;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
        co9_reg_2681 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        co9_reg_2681 <= arrayNo_cast3_mid2_v_1_reg_7966;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0))) begin
        co_reg_2483 <= co_cast_mid2_v_reg_6229;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_2483 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
        h11_reg_2703 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h11_reg_2703 <= h11_cast2_mid2_reg_7990;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h1_reg_2530 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (exitcond4_fu_3568_p2 == 1'd1))) begin
        h1_reg_2530 <= h_7_fu_3574_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond1_fu_3504_p2))) begin
        h4_reg_2565 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond7_fu_4173_p2))) begin
        h4_reg_2565 <= h_9_fu_4179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond3_fu_4109_p2))) begin
        h8_reg_2600 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == exitcond9_fu_4780_p2))) begin
        h8_reg_2600 <= h_10_fu_4786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == exitcond6_fu_4720_p2))) begin
        h9_reg_2635 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state52) & (1'd1 == exitcond10_fu_5397_p2))) begin
        h9_reg_2635 <= h_1_fu_5403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0))) begin
        h_reg_2506 <= h_cast_mid2_reg_6243;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_2506 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_3211_p2 == 1'd0))) begin
        indvar_flatten1_reg_2472 <= indvar_flatten_next1_fu_3217_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_2472 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
        indvar_flatten2_reg_2670 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_5900_p2))) begin
        indvar_flatten2_reg_2670 <= indvar_flatten_next3_fu_5906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
        indvar_flatten3_reg_2692 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_5900_p2))) begin
        indvar_flatten3_reg_2692 <= indvar_flatten_next2_fu_5938_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_3211_p2 == 1'd0))) begin
        indvar_flatten_reg_2495 <= indvar_flatten_next_fu_3235_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_2495 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd0 == exitcond2_fu_5337_p2))) begin
        w10_reg_2647 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == exitcond13_fu_5546_p2))) begin
        w10_reg_2647 <= w_13_fu_5558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
        w11_reg_2715 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w11_reg_2715 <= w_14_fu_6105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond1_fu_3504_p2))) begin
        w2_reg_2542 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond8_fu_3707_p2))) begin
        w2_reg_2542 <= w_8_fu_3719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond3_fu_4109_p2))) begin
        w5_reg_2577 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond5_fu_4312_p2))) begin
        w5_reg_2577 <= w_9_fu_4324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'd0 == exitcond6_fu_4720_p2))) begin
        w9_reg_2612 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state41) & (1'd1 == exitcond11_fu_4929_p2))) begin
        w9_reg_2612 <= w_12_fu_4941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0))) begin
        w_reg_2518 <= w_7_fu_3313_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_2518 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        MUL_DP_ret10_reg_6617_1 <= grp_MUL_DP_fu_2790_ap_return_1;
        MUL_DP_ret11_reg_6622_1 <= grp_MUL_DP_fu_2797_ap_return_1;
        MUL_DP_ret12_reg_6627_1 <= grp_MUL_DP_fu_2804_ap_return_1;
        MUL_DP_ret1_reg_6572_1 <= grp_MUL_DP_fu_2727_ap_return_1;
        MUL_DP_ret2_reg_6577_1 <= grp_MUL_DP_fu_2734_ap_return_1;
        MUL_DP_ret3_reg_6582_1 <= grp_MUL_DP_fu_2741_ap_return_1;
        MUL_DP_ret4_reg_6587_1 <= grp_MUL_DP_fu_2748_ap_return_1;
        MUL_DP_ret5_reg_6592_1 <= grp_MUL_DP_fu_2755_ap_return_1;
        MUL_DP_ret6_reg_6597_1 <= grp_MUL_DP_fu_2762_ap_return_1;
        MUL_DP_ret7_reg_6602_1 <= grp_MUL_DP_fu_2769_ap_return_1;
        MUL_DP_ret8_reg_6607_1 <= grp_MUL_DP_fu_2776_ap_return_1;
        MUL_DP_ret9_reg_6612_1 <= grp_MUL_DP_fu_2783_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        MUL_DP_ret13_reg_6991_1 <= grp_MUL_DP_fu_2727_ap_return_1;
        MUL_DP_ret14_reg_6996_1 <= grp_MUL_DP_fu_2734_ap_return_1;
        MUL_DP_ret15_reg_7001_1 <= grp_MUL_DP_fu_2741_ap_return_1;
        MUL_DP_ret16_reg_7006_1 <= grp_MUL_DP_fu_2748_ap_return_1;
        MUL_DP_ret17_reg_7011_1 <= grp_MUL_DP_fu_2755_ap_return_1;
        MUL_DP_ret18_reg_7016_1 <= grp_MUL_DP_fu_2762_ap_return_1;
        MUL_DP_ret19_reg_7021_1 <= grp_MUL_DP_fu_2769_ap_return_1;
        MUL_DP_ret20_reg_7026_1 <= grp_MUL_DP_fu_2776_ap_return_1;
        MUL_DP_ret21_reg_7031_1 <= grp_MUL_DP_fu_2783_ap_return_1;
        MUL_DP_ret22_reg_7036_1 <= grp_MUL_DP_fu_2790_ap_return_1;
        MUL_DP_ret23_reg_7041_1 <= grp_MUL_DP_fu_2797_ap_return_1;
        MUL_DP_ret24_reg_7046_1 <= grp_MUL_DP_fu_2804_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        MUL_DP_ret25_reg_7410_1 <= grp_MUL_DP_fu_2727_ap_return_1;
        MUL_DP_ret26_reg_7415_1 <= grp_MUL_DP_fu_2734_ap_return_1;
        MUL_DP_ret27_reg_7420_1 <= grp_MUL_DP_fu_2741_ap_return_1;
        MUL_DP_ret28_reg_7425_1 <= grp_MUL_DP_fu_2748_ap_return_1;
        MUL_DP_ret29_reg_7430_1 <= grp_MUL_DP_fu_2755_ap_return_1;
        MUL_DP_ret30_reg_7435_1 <= grp_MUL_DP_fu_2762_ap_return_1;
        MUL_DP_ret31_reg_7440_1 <= grp_MUL_DP_fu_2769_ap_return_1;
        MUL_DP_ret32_reg_7445_1 <= grp_MUL_DP_fu_2776_ap_return_1;
        MUL_DP_ret33_reg_7450_1 <= grp_MUL_DP_fu_2783_ap_return_1;
        MUL_DP_ret34_reg_7455_1 <= grp_MUL_DP_fu_2790_ap_return_1;
        MUL_DP_ret35_reg_7460_1 <= grp_MUL_DP_fu_2797_ap_return_1;
        MUL_DP_ret36_reg_7465_1 <= grp_MUL_DP_fu_2804_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        MUL_DP_ret37_reg_7830_1 <= grp_MUL_DP_fu_2727_ap_return_1;
        MUL_DP_ret38_reg_7835_1 <= grp_MUL_DP_fu_2734_ap_return_1;
        MUL_DP_ret39_reg_7840_1 <= grp_MUL_DP_fu_2741_ap_return_1;
        MUL_DP_ret40_reg_7845_1 <= grp_MUL_DP_fu_2748_ap_return_1;
        MUL_DP_ret41_reg_7850_1 <= grp_MUL_DP_fu_2755_ap_return_1;
        MUL_DP_ret42_reg_7855_1 <= grp_MUL_DP_fu_2762_ap_return_1;
        MUL_DP_ret43_reg_7860_1 <= grp_MUL_DP_fu_2769_ap_return_1;
        MUL_DP_ret44_reg_7865_1 <= grp_MUL_DP_fu_2776_ap_return_1;
        MUL_DP_ret45_reg_7870_1 <= grp_MUL_DP_fu_2783_ap_return_1;
        MUL_DP_ret46_reg_7875_1 <= grp_MUL_DP_fu_2790_ap_return_1;
        MUL_DP_ret47_reg_7880_1 <= grp_MUL_DP_fu_2797_ap_return_1;
        MUL_DP_ret_reg_7885_1 <= grp_MUL_DP_fu_2804_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_2_Downs_100_reg_6331 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_101_reg_6336[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_102_reg_6341 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_103_reg_6346[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_104_reg_6351 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_105_reg_6356[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_106_reg_6361 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_107_reg_6366[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_108_reg_6371 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_109_reg_6376[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_110_reg_6381 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_111_reg_6386[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_112_reg_6391 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_113_reg_6396[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_114_reg_6401 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_115_reg_6406[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_116_reg_6411 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_117_reg_6416[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_118_reg_6421 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_95_reg_6306[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_96_reg_6311 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_97_reg_6316[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        ShuffleConvs_2_Downs_98_reg_6321 <= tmp_227_cast_fu_3552_p1;
        ShuffleConvs_2_Downs_99_reg_6326[7 : 0] <= tmp_226_cast_fu_3531_p1[7 : 0];
        w2_cast_cast1_reg_6296[3 : 0] <= w2_cast_cast1_fu_3510_p1[3 : 0];
        w2_cast_cast2_reg_6301[3 : 0] <= w2_cast_cast2_fu_3514_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ShuffleConvs_2_Downs_143_reg_6725[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_144_reg_6730 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_145_reg_6735[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_146_reg_6740 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_147_reg_6745[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_148_reg_6750 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_149_reg_6755[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_150_reg_6760 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_151_reg_6765[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_152_reg_6770 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_153_reg_6775[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_154_reg_6780 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_155_reg_6785[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_156_reg_6790 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_157_reg_6795[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_158_reg_6800 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_159_reg_6805[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_160_reg_6810 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_161_reg_6815[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_162_reg_6820 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_163_reg_6825[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_164_reg_6830 <= tmp_234_cast_fu_4157_p1;
        ShuffleConvs_2_Downs_165_reg_6835[7 : 0] <= tmp_233_cast_fu_4136_p1[7 : 0];
        ShuffleConvs_2_Downs_166_reg_6840 <= tmp_234_cast_fu_4157_p1;
        w5_cast_cast1_reg_6715[3 : 0] <= w5_cast_cast1_fu_4115_p1[3 : 0];
        w5_cast_cast2_reg_6720[3 : 0] <= w5_cast_cast2_fu_4119_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_2_Downs_191_reg_7144 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_192_reg_7149 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_193_reg_7154 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_194_reg_7159 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_195_reg_7164 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_196_reg_7169 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_197_reg_7174 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_198_reg_7179 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_199_reg_7184 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_200_reg_7189 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_201_reg_7194 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_202_reg_7199 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_203_reg_7204 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_204_reg_7209 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_205_reg_7214 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_206_reg_7219 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_207_reg_7224 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_208_reg_7229 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_209_reg_7234 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_210_reg_7239 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_211_reg_7244 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_212_reg_7249 <= tmp_252_cast_fu_4764_p1;
        ShuffleConvs_2_Downs_213_reg_7254 <= tmp_251_cast_fu_4743_p1;
        ShuffleConvs_2_Downs_214_reg_7259 <= tmp_252_cast_fu_4764_p1;
        w9_cast8_cast1_reg_7134[3 : 0] <= w9_cast8_cast1_fu_4726_p1[3 : 0];
        w9_cast8_cast2_reg_7139[3 : 0] <= w9_cast8_cast2_fu_4730_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ShuffleConvs_2_Downs_239_reg_7564 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_240_reg_7569 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_241_reg_7574 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_242_reg_7579 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_243_reg_7584 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_244_reg_7589 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_245_reg_7594 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_246_reg_7599 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_247_reg_7604 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_248_reg_7609 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_249_reg_7614 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_250_reg_7619 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_251_reg_7624 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_252_reg_7629 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_253_reg_7634 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_254_reg_7639 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_255_reg_7644 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_256_reg_7649 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_257_reg_7654 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_258_reg_7659 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_259_reg_7664 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_260_reg_7669 <= tmp_265_cast_fu_5381_p1;
        ShuffleConvs_2_Downs_261_reg_7674 <= tmp_264_cast_fu_5360_p1;
        ShuffleConvs_2_Downs_262_reg_7679 <= tmp_265_cast_fu_5381_p1;
        w10_cast5_cast1_reg_7554[3 : 0] <= w10_cast5_cast1_fu_5343_p1[3 : 0];
        w10_cast5_cast2_reg_7559[3 : 0] <= w10_cast5_cast2_fu_5347_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter9_exitcond_flatten3_reg_7950))) begin
        ShuffleConvs_2_Downs_287_reg_8006 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_288_reg_8012 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_289_reg_8018 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_290_reg_8024 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_291_reg_8030 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_292_reg_8036 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_293_reg_8042 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_294_reg_8048 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_295_reg_8054 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_296_reg_8060 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_297_reg_8066 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_298_reg_8072 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_299_reg_8078 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_300_reg_8084 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_301_reg_8090 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_302_reg_8096 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_303_reg_8102 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_304_reg_8108 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_305_reg_8114 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_306_reg_8120 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_307_reg_8126 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_308_reg_8132 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_309_reg_8138 <= tmp_288_cast_fu_6110_p1;
        ShuffleConvs_2_Downs_310_reg_8144 <= tmp_288_cast_fu_6110_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 <= exitcond_flatten1_reg_6207;
        exitcond_flatten1_reg_6207 <= exitcond_flatten1_fu_3211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_co_cast_mid2_v_reg_6229 <= co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter2_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter1_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter2_h_cast_mid2_reg_6243 <= h_cast_mid2_reg_6243;
        ap_reg_pp0_iter2_w_mid2_reg_6237 <= w_mid2_reg_6237;
        ap_reg_pp0_iter3_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter2_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter3_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter2_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter3_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter2_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter3_w_mid2_reg_6237 <= ap_reg_pp0_iter2_w_mid2_reg_6237;
        ap_reg_pp0_iter4_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter3_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter4_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter3_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter4_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter3_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter4_w_mid2_reg_6237 <= ap_reg_pp0_iter3_w_mid2_reg_6237;
        ap_reg_pp0_iter5_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter4_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter5_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter4_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter5_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter4_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter5_w_mid2_reg_6237 <= ap_reg_pp0_iter4_w_mid2_reg_6237;
        ap_reg_pp0_iter6_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter5_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter6_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter5_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter6_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter5_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter6_w_mid2_reg_6237 <= ap_reg_pp0_iter5_w_mid2_reg_6237;
        ap_reg_pp0_iter7_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter6_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter7_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter6_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter7_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter6_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter7_w_mid2_reg_6237 <= ap_reg_pp0_iter6_w_mid2_reg_6237;
        ap_reg_pp0_iter8_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter7_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter8_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter7_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter8_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter7_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter8_w_mid2_reg_6237 <= ap_reg_pp0_iter7_w_mid2_reg_6237;
        ap_reg_pp0_iter9_co_cast_mid2_v_reg_6229 <= ap_reg_pp0_iter8_co_cast_mid2_v_reg_6229;
        ap_reg_pp0_iter9_exitcond_flatten1_reg_6207 <= ap_reg_pp0_iter8_exitcond_flatten1_reg_6207;
        ap_reg_pp0_iter9_h_cast_mid2_reg_6243 <= ap_reg_pp0_iter8_h_cast_mid2_reg_6243;
        ap_reg_pp0_iter9_w_mid2_reg_6237 <= ap_reg_pp0_iter8_w_mid2_reg_6237;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten3_reg_7950 <= exitcond_flatten3_reg_7950;
        exitcond_flatten3_reg_7950 <= exitcond_flatten3_fu_5900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter1_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter3_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter2_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter3_tmp_232_reg_7996 <= tmp_232_reg_7996;
        ap_reg_pp1_iter4_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter3_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter4_tmp_232_reg_7996 <= ap_reg_pp1_iter3_tmp_232_reg_7996;
        ap_reg_pp1_iter5_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter4_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter5_tmp_232_reg_7996 <= ap_reg_pp1_iter4_tmp_232_reg_7996;
        ap_reg_pp1_iter6_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter5_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter6_tmp_232_reg_7996 <= ap_reg_pp1_iter5_tmp_232_reg_7996;
        ap_reg_pp1_iter7_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter6_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter7_tmp_232_reg_7996 <= ap_reg_pp1_iter6_tmp_232_reg_7996;
        ap_reg_pp1_iter8_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter7_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter8_tmp_232_reg_7996 <= ap_reg_pp1_iter7_tmp_232_reg_7996;
        ap_reg_pp1_iter9_exitcond_flatten3_reg_7950 <= ap_reg_pp1_iter8_exitcond_flatten3_reg_7950;
        ap_reg_pp1_iter9_tmp_232_reg_7996 <= ap_reg_pp1_iter8_tmp_232_reg_7996;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_5900_p2))) begin
        arrayNo_cast3_mid2_v_1_reg_7966 <= arrayNo_cast3_mid2_v_1_fu_5924_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ci_1_reg_6562 <= ci_1_fu_3713_p2;
        input_V_addr_reg_6434 <= tmp_242_cast_fu_3654_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ci_2_reg_6981 <= ci_2_fu_4318_p2;
        input_V_addr_1_reg_6853 <= tmp_260_cast_fu_4259_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ci_3_reg_7400 <= ci_3_fu_4935_p2;
        input_V_addr_2_reg_7272 <= tmp_273_cast_fu_4870_p1;
        weight_0_V_addr_2_reg_7277[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_10_V_addr_2_reg_7377[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_11_V_addr_2_reg_7387[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_1_V_addr_2_reg_7287[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_2_V_addr_2_reg_7297[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_3_V_addr_2_reg_7307[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_4_V_addr_2_reg_7317[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_5_V_addr_2_reg_7327[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_6_V_addr_2_reg_7337[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_7_V_addr_2_reg_7347[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_8_V_addr_2_reg_7357[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
        weight_9_V_addr_2_reg_7367[7 : 0] <= tmp_276_cast_fu_4891_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ci_4_reg_7820 <= ci_4_fu_5552_p2;
        input_V_addr_3_reg_7692 <= tmp_296_cast_fu_5487_p1;
        weight_12_V_addr_2_reg_7697[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_13_V_addr_2_reg_7707[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_14_V_addr_2_reg_7717[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_15_V_addr_2_reg_7727[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_16_V_addr_2_reg_7737[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_17_V_addr_2_reg_7747[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_18_V_addr_2_reg_7757[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_19_V_addr_2_reg_7767[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_20_V_addr_2_reg_7777[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_21_V_addr_2_reg_7787[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_22_V_addr_2_reg_7797[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
        weight_23_V_addr_2_reg_7807[7 : 0] <= tmp_299_cast_fu_5508_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten1_reg_6207 == 1'd0))) begin
        co_cast_mid2_v_reg_6229 <= co_cast_mid2_v_fu_3256_p3;
        h_cast_mid2_reg_6243 <= h_cast_mid2_fu_3305_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_fu_5900_p2))) begin
        exitcond_flatten2_reg_7959 <= exitcond_flatten2_fu_5918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_fu_3211_p2 == 1'd0))) begin
        exitcond_flatten_reg_6216 <= exitcond_flatten_fu_3223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        h11_cast2_mid2_reg_7990 <= h11_cast2_mid2_fu_6013_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h1_cast_cast1_reg_6273[3 : 0] <= h1_cast_cast1_fu_3456_p1[3 : 0];
        h1_cast_cast_reg_6278[3 : 0] <= h1_cast_cast_fu_3460_p1[3 : 0];
        tmp_171_reg_6283[7 : 1] <= tmp_171_fu_3488_p2[7 : 1];
        tmp_172_reg_6288[8 : 1] <= tmp_172_fu_3498_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        h4_cast_cast1_reg_6692[3 : 0] <= h4_cast_cast1_fu_4061_p1[3 : 0];
        h4_cast_cast_reg_6697[3 : 0] <= h4_cast_cast_fu_4065_p1[3 : 0];
        tmp_175_reg_6702[7 : 1] <= tmp_175_fu_4093_p2[7 : 1];
        tmp_176_reg_6707[8 : 1] <= tmp_176_fu_4103_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        h8_cast9_cast1_reg_7111[3 : 0] <= h8_cast9_cast1_fu_4666_p1[3 : 0];
        h8_cast9_cast_reg_7116[3 : 0] <= h8_cast9_cast_fu_4670_p1[3 : 0];
        tmp_182_reg_7121[8 : 1] <= tmp_182_fu_4708_p2[8 : 1];
        tmp_183_reg_7126[8 : 1] <= tmp_183_fu_4714_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        h9_cast6_cast1_reg_7530[3 : 0] <= h9_cast6_cast1_fu_5283_p1[3 : 0];
        h9_cast6_cast_reg_7535[3 : 0] <= h9_cast6_cast_fu_5287_p1[3 : 0];
        tmp_198_reg_7540[8 : 1] <= tmp_198_fu_5325_p2[8 : 1];
        tmp_199_reg_7545[8 : 1] <= tmp_199_fu_5331_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state42))) begin
        reg_2811 <= weight_0_V_q0;
        reg_2823 <= weight_1_V_q0;
        reg_2835 <= weight_2_V_q0;
        reg_2847 <= weight_3_V_q0;
        reg_2859 <= weight_4_V_q0;
        reg_2871 <= weight_5_V_q0;
        reg_2883 <= weight_6_V_q0;
        reg_2895 <= weight_7_V_q0;
        reg_2907 <= weight_8_V_q0;
        reg_2919 <= weight_9_V_q0;
        reg_2931 <= weight_10_V_q0;
        reg_2943 <= weight_11_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_2817 <= weight_0_V_q1;
        reg_2829 <= weight_1_V_q1;
        reg_2841 <= weight_2_V_q1;
        reg_2853 <= weight_3_V_q1;
        reg_2865 <= weight_4_V_q1;
        reg_2877 <= weight_5_V_q1;
        reg_2889 <= weight_6_V_q1;
        reg_2901 <= weight_7_V_q1;
        reg_2913 <= weight_8_V_q1;
        reg_2925 <= weight_9_V_q1;
        reg_2937 <= weight_10_V_q1;
        reg_2949 <= weight_11_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state55))) begin
        reg_2955 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_2971 <= ShuffleConvs_2_Downs_23_q0;
        reg_2975 <= ShuffleConvs_2_Downs_22_q0;
        reg_2979 <= ShuffleConvs_2_Downs_11_q0;
        reg_2983 <= ShuffleConvs_2_Downs_6_q0;
        reg_2987 <= ShuffleConvs_2_Downs_5_q0;
        reg_2991 <= ShuffleConvs_2_Downs_4_q0;
        reg_2995 <= ShuffleConvs_2_Downs_3_q0;
        reg_2999 <= ShuffleConvs_2_Downs_2_q0;
        reg_3003 <= ShuffleConvs_2_Downs_1_q0;
        reg_3007 <= ShuffleConvs_2_Downs_q0;
        reg_3011 <= ShuffleConvs_2_Downs_21_q0;
        reg_3015 <= ShuffleConvs_2_Downs_20_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_3019 <= weight_12_V_q0;
        reg_3031 <= weight_13_V_q0;
        reg_3043 <= weight_14_V_q0;
        reg_3055 <= weight_15_V_q0;
        reg_3067 <= weight_16_V_q0;
        reg_3079 <= weight_17_V_q0;
        reg_3091 <= weight_18_V_q0;
        reg_3103 <= weight_19_V_q0;
        reg_3115 <= weight_20_V_q0;
        reg_3127 <= weight_21_V_q0;
        reg_3139 <= weight_22_V_q0;
        reg_3151 <= weight_23_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_3025 <= weight_12_V_q1;
        reg_3037 <= weight_13_V_q1;
        reg_3049 <= weight_14_V_q1;
        reg_3061 <= weight_15_V_q1;
        reg_3073 <= weight_16_V_q1;
        reg_3085 <= weight_17_V_q1;
        reg_3097 <= weight_18_V_q1;
        reg_3109 <= weight_19_V_q1;
        reg_3121 <= weight_20_V_q1;
        reg_3133 <= weight_21_V_q1;
        reg_3145 <= weight_22_V_q1;
        reg_3157 <= weight_23_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_3163 <= ShuffleConvs_2_Downs_19_q0;
        reg_3167 <= ShuffleConvs_2_Downs_18_q0;
        reg_3171 <= ShuffleConvs_2_Downs_17_q0;
        reg_3175 <= ShuffleConvs_2_Downs_16_q0;
        reg_3179 <= ShuffleConvs_2_Downs_15_q0;
        reg_3183 <= ShuffleConvs_2_Downs_14_q0;
        reg_3187 <= ShuffleConvs_2_Downs_13_q0;
        reg_3191 <= ShuffleConvs_2_Downs_12_q0;
        reg_3195 <= ShuffleConvs_2_Downs_10_q0;
        reg_3199 <= ShuffleConvs_2_Downs_9_q0;
        reg_3203 <= ShuffleConvs_2_Downs_8_q0;
        reg_3207 <= ShuffleConvs_2_Downs_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter8_exitcond_flatten1_reg_6207 == 1'd0))) begin
        tmp_101_reg_6254 <= {{mul_fu_3321_p2[15:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_14_reg_7470 <= tmp_14_fu_5134_p2;
        tmp_32_10_reg_7525 <= tmp_32_10_fu_5277_p2;
        tmp_32_1_reg_7475 <= tmp_32_1_fu_5147_p2;
        tmp_32_2_reg_7480 <= tmp_32_2_fu_5160_p2;
        tmp_32_3_reg_7485 <= tmp_32_3_fu_5173_p2;
        tmp_32_4_reg_7490 <= tmp_32_4_fu_5186_p2;
        tmp_32_5_reg_7495 <= tmp_32_5_fu_5199_p2;
        tmp_32_6_reg_7500 <= tmp_32_6_fu_5212_p2;
        tmp_32_7_reg_7505 <= tmp_32_7_fu_5225_p2;
        tmp_32_8_reg_7510 <= tmp_32_8_fu_5238_p2;
        tmp_32_9_reg_7515 <= tmp_32_9_fu_5251_p2;
        tmp_32_s_reg_7520 <= tmp_32_s_fu_5264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_reg_7950))) begin
        tmp_161_reg_7978 <= {{mul1_fu_5961_p2[15:12]}};
        w12_mid2_reg_7984 <= w12_mid2_fu_6005_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter9_exitcond_flatten1_reg_6207 == 1'd0))) begin
        tmp_168_reg_6260 <= tmp_168_fu_3419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        tmp_18_reg_7890 <= tmp_18_fu_5751_p2;
        tmp_38_10_reg_7945 <= tmp_38_10_fu_5894_p2;
        tmp_38_1_reg_7895 <= tmp_38_1_fu_5764_p2;
        tmp_38_2_reg_7900 <= tmp_38_2_fu_5777_p2;
        tmp_38_3_reg_7905 <= tmp_38_3_fu_5790_p2;
        tmp_38_4_reg_7910 <= tmp_38_4_fu_5803_p2;
        tmp_38_5_reg_7915 <= tmp_38_5_fu_5816_p2;
        tmp_38_6_reg_7920 <= tmp_38_6_fu_5829_p2;
        tmp_38_7_reg_7925 <= tmp_38_7_fu_5842_p2;
        tmp_38_8_reg_7930 <= tmp_38_8_fu_5855_p2;
        tmp_38_9_reg_7935 <= tmp_38_9_fu_5868_p2;
        tmp_38_s_reg_7940 <= tmp_38_s_fu_5881_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_22_10_reg_6687 <= tmp_22_10_fu_4055_p2;
        tmp_22_1_reg_6637 <= tmp_22_1_fu_3925_p2;
        tmp_22_2_reg_6642 <= tmp_22_2_fu_3938_p2;
        tmp_22_3_reg_6647 <= tmp_22_3_fu_3951_p2;
        tmp_22_4_reg_6652 <= tmp_22_4_fu_3964_p2;
        tmp_22_5_reg_6657 <= tmp_22_5_fu_3977_p2;
        tmp_22_6_reg_6662 <= tmp_22_6_fu_3990_p2;
        tmp_22_7_reg_6667 <= tmp_22_7_fu_4003_p2;
        tmp_22_8_reg_6672 <= tmp_22_8_fu_4016_p2;
        tmp_22_9_reg_6677 <= tmp_22_9_fu_4029_p2;
        tmp_22_s_reg_6682 <= tmp_22_s_fu_4042_p2;
        tmp_5_reg_6632 <= tmp_5_fu_3912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_7950))) begin
        tmp_232_reg_7996 <= tmp_232_fu_6099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_27_10_reg_7106 <= tmp_27_10_fu_4660_p2;
        tmp_27_1_reg_7056 <= tmp_27_1_fu_4530_p2;
        tmp_27_2_reg_7061 <= tmp_27_2_fu_4543_p2;
        tmp_27_3_reg_7066 <= tmp_27_3_fu_4556_p2;
        tmp_27_4_reg_7071 <= tmp_27_4_fu_4569_p2;
        tmp_27_5_reg_7076 <= tmp_27_5_fu_4582_p2;
        tmp_27_6_reg_7081 <= tmp_27_6_fu_4595_p2;
        tmp_27_7_reg_7086 <= tmp_27_7_fu_4608_p2;
        tmp_27_8_reg_7091 <= tmp_27_8_fu_4621_p2;
        tmp_27_9_reg_7096 <= tmp_27_9_fu_4634_p2;
        tmp_27_s_reg_7101 <= tmp_27_s_fu_4647_p2;
        tmp_9_reg_7051 <= tmp_9_fu_4517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_reg_6207 == 1'd0))) begin
        w_mid2_reg_6237 <= w_mid2_fu_3297_p3;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_10_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_10_address0 = ShuffleConvs_2_Downs_254_reg_7639;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_10_address0 = ShuffleConvs_2_Downs_253_reg_7634;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_10_address0 = ShuffleConvs_2_Downs_158_reg_6800;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_10_address0 = ShuffleConvs_2_Downs_157_reg_6795;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_10_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_10_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_10_d0 = tmp_38_8_reg_7930;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_10_d0 = tmp_36_8_fu_5692_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_10_d0 = tmp_27_8_reg_7091;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_10_d0 = tmp_25_8_fu_4458_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_10_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd20)))) begin
        ShuffleConvs_2_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd20))) begin
        ShuffleConvs_2_Downs_10_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_11_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_11_address0 = ShuffleConvs_2_Downs_202_reg_7199;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_11_address0 = ShuffleConvs_2_Downs_201_reg_7194;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_11_address0 = ShuffleConvs_2_Downs_106_reg_6361;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_11_address0 = ShuffleConvs_2_Downs_105_reg_6356;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_11_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_11_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_11_d0 = tmp_32_2_reg_7480;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_11_d0 = tmp_30_2_fu_4985_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_11_d0 = tmp_22_2_reg_6642;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_11_d0 = tmp_20_2_fu_3763_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_11_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd2)))) begin
        ShuffleConvs_2_Downs_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd2))) begin
        ShuffleConvs_2_Downs_11_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_12_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_12_address0 = ShuffleConvs_2_Downs_252_reg_7629;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_12_address0 = ShuffleConvs_2_Downs_251_reg_7624;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_12_address0 = ShuffleConvs_2_Downs_156_reg_6790;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_12_address0 = ShuffleConvs_2_Downs_155_reg_6785;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_12_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_12_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_12_d0 = tmp_38_7_reg_7925;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_12_d0 = tmp_36_7_fu_5677_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_12_d0 = tmp_27_7_reg_7086;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_12_d0 = tmp_25_7_fu_4443_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_12_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd19)))) begin
        ShuffleConvs_2_Downs_12_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd19))) begin
        ShuffleConvs_2_Downs_12_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_13_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_13_address0 = ShuffleConvs_2_Downs_250_reg_7619;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_13_address0 = ShuffleConvs_2_Downs_249_reg_7614;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_13_address0 = ShuffleConvs_2_Downs_154_reg_6780;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_13_address0 = ShuffleConvs_2_Downs_153_reg_6775;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_13_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_13_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_13_d0 = tmp_38_6_reg_7920;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_13_d0 = tmp_36_6_fu_5662_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_13_d0 = tmp_27_6_reg_7081;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_13_d0 = tmp_25_6_fu_4428_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_13_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd18)))) begin
        ShuffleConvs_2_Downs_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd18))) begin
        ShuffleConvs_2_Downs_13_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_14_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_14_address0 = ShuffleConvs_2_Downs_248_reg_7609;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_14_address0 = ShuffleConvs_2_Downs_247_reg_7604;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_14_address0 = ShuffleConvs_2_Downs_152_reg_6770;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_14_address0 = ShuffleConvs_2_Downs_151_reg_6765;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_14_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_14_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_14_d0 = tmp_38_5_reg_7915;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_14_d0 = tmp_36_5_fu_5647_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_14_d0 = tmp_27_5_reg_7076;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_14_d0 = tmp_25_5_fu_4413_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_14_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd17)))) begin
        ShuffleConvs_2_Downs_14_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd17))) begin
        ShuffleConvs_2_Downs_14_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_15_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_15_address0 = ShuffleConvs_2_Downs_246_reg_7599;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_15_address0 = ShuffleConvs_2_Downs_245_reg_7594;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_15_address0 = ShuffleConvs_2_Downs_150_reg_6760;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_15_address0 = ShuffleConvs_2_Downs_149_reg_6755;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_15_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_15_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_15_d0 = tmp_38_4_reg_7910;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_15_d0 = tmp_36_4_fu_5632_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_15_d0 = tmp_27_4_reg_7071;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_15_d0 = tmp_25_4_fu_4398_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_15_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd16)))) begin
        ShuffleConvs_2_Downs_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd16))) begin
        ShuffleConvs_2_Downs_15_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_16_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_16_address0 = ShuffleConvs_2_Downs_262_reg_7679;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_16_address0 = ShuffleConvs_2_Downs_261_reg_7674;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_16_address0 = ShuffleConvs_2_Downs_166_reg_6840;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_16_address0 = ShuffleConvs_2_Downs_165_reg_6835;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_16_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_16_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_16_d0 = tmp_38_3_reg_7905;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_16_d0 = tmp_36_3_fu_5617_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_16_d0 = tmp_27_3_reg_7066;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_16_d0 = tmp_25_3_fu_4383_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_16_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd15)))) begin
        ShuffleConvs_2_Downs_16_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd15))) begin
        ShuffleConvs_2_Downs_16_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_17_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_17_address0 = ShuffleConvs_2_Downs_256_reg_7649;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_17_address0 = ShuffleConvs_2_Downs_255_reg_7644;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_17_address0 = ShuffleConvs_2_Downs_160_reg_6810;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_17_address0 = ShuffleConvs_2_Downs_159_reg_6805;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_17_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_17_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_17_d0 = tmp_38_2_reg_7900;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_17_d0 = tmp_36_2_fu_5602_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_17_d0 = tmp_27_2_reg_7061;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_17_d0 = tmp_25_2_fu_4368_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_17_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd14)))) begin
        ShuffleConvs_2_Downs_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd14))) begin
        ShuffleConvs_2_Downs_17_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_18_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_18_address0 = ShuffleConvs_2_Downs_260_reg_7669;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_18_address0 = ShuffleConvs_2_Downs_259_reg_7664;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_18_address0 = ShuffleConvs_2_Downs_164_reg_6830;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_18_address0 = ShuffleConvs_2_Downs_163_reg_6825;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_18_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_18_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_18_d0 = tmp_38_1_reg_7895;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_18_d0 = tmp_36_1_fu_5587_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_18_d0 = tmp_27_1_reg_7056;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_18_d0 = tmp_25_1_fu_4353_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_18_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd13)))) begin
        ShuffleConvs_2_Downs_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd13))) begin
        ShuffleConvs_2_Downs_18_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_19_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_19_address0 = ShuffleConvs_2_Downs_258_reg_7659;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_19_address0 = ShuffleConvs_2_Downs_257_reg_7654;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_19_address0 = ShuffleConvs_2_Downs_162_reg_6820;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_19_address0 = ShuffleConvs_2_Downs_161_reg_6815;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_19_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_19_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_19_d0 = tmp_18_reg_7890;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_19_d0 = tmp_16_fu_5572_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_19_d0 = tmp_9_reg_7051;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_19_d0 = tmp_7_fu_4338_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_19_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd12)))) begin
        ShuffleConvs_2_Downs_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd12))) begin
        ShuffleConvs_2_Downs_19_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_192_reg_7149;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_191_reg_7144;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_96_reg_6311;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_95_reg_6306;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_1_d0 = tmp_32_8_reg_7510;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_1_d0 = tmp_30_8_fu_5075_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_1_d0 = tmp_22_8_reg_6672;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_1_d0 = tmp_20_8_fu_3853_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd8)))) begin
        ShuffleConvs_2_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd8))) begin
        ShuffleConvs_2_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_20_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_20_address0 = ShuffleConvs_2_Downs_212_reg_7249;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_20_address0 = ShuffleConvs_2_Downs_211_reg_7244;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_20_address0 = ShuffleConvs_2_Downs_116_reg_6411;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_20_address0 = ShuffleConvs_2_Downs_115_reg_6406;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_20_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_20_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_20_d0 = tmp_32_10_reg_7525;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_20_d0 = tmp_30_10_fu_5120_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_20_d0 = tmp_22_10_reg_6687;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_20_d0 = tmp_20_10_fu_3898_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_20_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd11)))) begin
        ShuffleConvs_2_Downs_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd11))) begin
        ShuffleConvs_2_Downs_20_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_21_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_21_address0 = ShuffleConvs_2_Downs_206_reg_7219;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_21_address0 = ShuffleConvs_2_Downs_205_reg_7214;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_21_address0 = ShuffleConvs_2_Downs_110_reg_6381;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_21_address0 = ShuffleConvs_2_Downs_109_reg_6376;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_21_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_21_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_21_d0 = tmp_32_s_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_21_d0 = tmp_30_s_fu_5105_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_21_d0 = tmp_22_s_reg_6682;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_21_d0 = tmp_20_s_fu_3883_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_21_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd10)))) begin
        ShuffleConvs_2_Downs_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd10))) begin
        ShuffleConvs_2_Downs_21_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_22_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_22_address0 = ShuffleConvs_2_Downs_210_reg_7239;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_22_address0 = ShuffleConvs_2_Downs_209_reg_7234;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_22_address0 = ShuffleConvs_2_Downs_114_reg_6401;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_22_address0 = ShuffleConvs_2_Downs_113_reg_6396;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_22_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_22_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_22_d0 = tmp_32_1_reg_7475;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_22_d0 = tmp_30_1_fu_4970_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_22_d0 = tmp_22_1_reg_6637;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_22_d0 = tmp_20_1_fu_3748_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_22_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd1)))) begin
        ShuffleConvs_2_Downs_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd1))) begin
        ShuffleConvs_2_Downs_22_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_23_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_23_address0 = ShuffleConvs_2_Downs_214_reg_7259;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_23_address0 = ShuffleConvs_2_Downs_213_reg_7254;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_23_address0 = ShuffleConvs_2_Downs_118_reg_6421;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_23_address0 = ShuffleConvs_2_Downs_117_reg_6416;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_23_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_23_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_23_d0 = tmp_14_reg_7470;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_23_d0 = tmp_11_fu_4955_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_23_d0 = tmp_5_reg_6632;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_23_d0 = tmp_3_fu_3733_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_23_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd0)))) begin
        ShuffleConvs_2_Downs_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd0))) begin
        ShuffleConvs_2_Downs_23_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_198_reg_7179;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_197_reg_7174;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_102_reg_6341;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_101_reg_6336;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_2_d0 = tmp_32_7_reg_7505;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_2_d0 = tmp_30_7_fu_5060_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_2_d0 = tmp_22_7_reg_6667;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_2_d0 = tmp_20_7_fu_3838_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd7)))) begin
        ShuffleConvs_2_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd7))) begin
        ShuffleConvs_2_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_208_reg_7229;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_207_reg_7224;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_112_reg_6391;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_111_reg_6386;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_3_d0 = tmp_32_6_reg_7500;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_3_d0 = tmp_30_6_fu_5045_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_3_d0 = tmp_22_6_reg_6662;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_3_d0 = tmp_20_6_fu_3823_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd6)))) begin
        ShuffleConvs_2_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd6))) begin
        ShuffleConvs_2_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_204_reg_7209;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_203_reg_7204;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_108_reg_6371;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_107_reg_6366;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_4_d0 = tmp_32_5_reg_7495;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_4_d0 = tmp_30_5_fu_5030_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_4_d0 = tmp_22_5_reg_6657;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_4_d0 = tmp_20_5_fu_3808_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd5)))) begin
        ShuffleConvs_2_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd5))) begin
        ShuffleConvs_2_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_200_reg_7189;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_199_reg_7184;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_104_reg_6351;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_103_reg_6346;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_5_d0 = tmp_32_4_reg_7490;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_5_d0 = tmp_30_4_fu_5015_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_5_d0 = tmp_22_4_reg_6652;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_5_d0 = tmp_20_4_fu_3793_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd4)))) begin
        ShuffleConvs_2_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd4))) begin
        ShuffleConvs_2_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_194_reg_7159;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_193_reg_7154;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_98_reg_6321;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_97_reg_6316;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_6_d0 = tmp_32_3_reg_7485;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_6_d0 = tmp_30_3_fu_5000_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_6_d0 = tmp_22_3_reg_6647;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_6_d0 = tmp_20_3_fu_3778_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd3)))) begin
        ShuffleConvs_2_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd3))) begin
        ShuffleConvs_2_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_244_reg_7589;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_243_reg_7584;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_148_reg_6750;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_147_reg_6745;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_7_d0 = tmp_38_10_reg_7945;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_7_d0 = tmp_36_10_fu_5737_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_7_d0 = tmp_27_10_reg_7106;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_7_d0 = tmp_25_10_fu_4503_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & ~(tmp_100_fu_3425_p1 == 6'd0) & ~(tmp_100_fu_3425_p1 == 6'd1) & ~(tmp_100_fu_3425_p1 == 6'd2) & ~(tmp_100_fu_3425_p1 == 6'd3) & ~(tmp_100_fu_3425_p1 == 6'd4) & ~(tmp_100_fu_3425_p1 == 6'd5) & ~(tmp_100_fu_3425_p1 == 6'd6) & ~(tmp_100_fu_3425_p1 == 6'd7) & ~(tmp_100_fu_3425_p1 == 6'd8) & ~(tmp_100_fu_3425_p1 == 6'd9) & ~(tmp_100_fu_3425_p1 == 6'd10) & ~(tmp_100_fu_3425_p1 == 6'd11) & ~(tmp_100_fu_3425_p1 == 6'd12) & ~(tmp_100_fu_3425_p1 == 6'd13) & ~(tmp_100_fu_3425_p1 == 6'd14) & ~(tmp_100_fu_3425_p1 == 6'd15) & ~(tmp_100_fu_3425_p1 == 6'd16) & ~(tmp_100_fu_3425_p1 == 6'd17) & ~(tmp_100_fu_3425_p1 == 6'd18) & ~(tmp_100_fu_3425_p1 == 6'd19) & ~(tmp_100_fu_3425_p1 == 6'd20) & ~(tmp_100_fu_3425_p1 == 6'd21) & ~(tmp_100_fu_3425_p1 == 6'd22)))) begin
        ShuffleConvs_2_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & ~(tmp_160_fu_6141_p1 == 6'd0) & ~(tmp_160_fu_6141_p1 == 6'd1) & ~(tmp_160_fu_6141_p1 == 6'd2) & ~(tmp_160_fu_6141_p1 == 6'd3) & ~(tmp_160_fu_6141_p1 == 6'd4) & ~(tmp_160_fu_6141_p1 == 6'd5) & ~(tmp_160_fu_6141_p1 == 6'd6) & ~(tmp_160_fu_6141_p1 == 6'd7) & ~(tmp_160_fu_6141_p1 == 6'd8) & ~(tmp_160_fu_6141_p1 == 6'd9) & ~(tmp_160_fu_6141_p1 == 6'd10) & ~(tmp_160_fu_6141_p1 == 6'd11) & ~(tmp_160_fu_6141_p1 == 6'd12) & ~(tmp_160_fu_6141_p1 == 6'd13) & ~(tmp_160_fu_6141_p1 == 6'd14) & ~(tmp_160_fu_6141_p1 == 6'd15) & ~(tmp_160_fu_6141_p1 == 6'd16) & ~(tmp_160_fu_6141_p1 == 6'd17) & ~(tmp_160_fu_6141_p1 == 6'd18) & ~(tmp_160_fu_6141_p1 == 6'd19) & ~(tmp_160_fu_6141_p1 == 6'd20) & ~(tmp_160_fu_6141_p1 == 6'd21) & ~(6'd22 == tmp_160_fu_6141_p1))) begin
        ShuffleConvs_2_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_8_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_8_address0 = ShuffleConvs_2_Downs_240_reg_7569;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_8_address0 = ShuffleConvs_2_Downs_239_reg_7564;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_8_address0 = ShuffleConvs_2_Downs_144_reg_6730;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_8_address0 = ShuffleConvs_2_Downs_143_reg_6725;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_8_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_8_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_8_d0 = tmp_38_s_reg_7940;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_8_d0 = tmp_36_s_fu_5722_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_8_d0 = tmp_27_s_reg_7101;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_8_d0 = tmp_25_s_fu_4488_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_8_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd22)))) begin
        ShuffleConvs_2_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (6'd22 == tmp_160_fu_6141_p1))) begin
        ShuffleConvs_2_Downs_8_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_9_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60))) begin
        ShuffleConvs_2_Downs_9_address0 = ShuffleConvs_2_Downs_242_reg_7579;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        ShuffleConvs_2_Downs_9_address0 = ShuffleConvs_2_Downs_241_reg_7574;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        ShuffleConvs_2_Downs_9_address0 = ShuffleConvs_2_Downs_146_reg_6740;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        ShuffleConvs_2_Downs_9_address0 = ShuffleConvs_2_Downs_145_reg_6735;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_9_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state60) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_9_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ShuffleConvs_2_Downs_9_d0 = tmp_38_9_reg_7935;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ShuffleConvs_2_Downs_9_d0 = tmp_36_9_fu_5707_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ShuffleConvs_2_Downs_9_d0 = tmp_27_9_reg_7096;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        ShuffleConvs_2_Downs_9_d0 = tmp_25_9_fu_4473_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_9_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state62) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd21)))) begin
        ShuffleConvs_2_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd21))) begin
        ShuffleConvs_2_Downs_9_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_2_Downs_address0 = tmp_288_cast_fu_6110_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_196_reg_7169;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_195_reg_7164;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_100_reg_6331;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_99_reg_6326;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_address0 = tmp_217_cast_fu_3429_p1;
    end else begin
        ShuffleConvs_2_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state48))) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        ShuffleConvs_2_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ShuffleConvs_2_Downs_d0 = tmp_32_9_reg_7515;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ShuffleConvs_2_Downs_d0 = tmp_30_9_fu_5090_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ShuffleConvs_2_Downs_d0 = tmp_22_9_reg_6677;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_d0 = tmp_20_9_fu_3868_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        ShuffleConvs_2_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state50) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_100_fu_3425_p1 == 6'd9)))) begin
        ShuffleConvs_2_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_233_fu_6199_p3) & (tmp_160_fu_6141_p1 == 6'd9))) begin
        ShuffleConvs_2_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_3211_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten3_fu_5900_p2)) begin
        ap_condition_pp1_exit_iter0_state63 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state63 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state75))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3) & (1'b0 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_enable_reg_pp1_iter6) & (1'b0 == ap_enable_reg_pp1_iter7) & (1'b0 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_enable_reg_pp1_iter9) & (1'b0 == ap_enable_reg_pp1_iter10) & (1'b0 == ap_enable_reg_pp1_iter11))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co9_phi_fu_2685_p4 = arrayNo_cast3_mid2_v_1_reg_7966;
    end else begin
        co9_phi_fu_2685_p4 = co9_reg_2681;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_2487_p4 = co_cast_mid2_v_reg_6229;
    end else begin
        co_phi_fu_2487_p4 = co_reg_2483;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2727_a_V = reg_3025;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2727_a_V = reg_2817;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2727_a_V = reg_3019;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2727_a_V = reg_2811;
    end else begin
        grp_MUL_DP_fu_2727_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2727_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2727_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2727_b_V = reg_3019;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2727_b_V = reg_2811;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2727_b_V = reg_3025;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2727_b_V = reg_2817;
    end else begin
        grp_MUL_DP_fu_2727_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2734_a_V = reg_3037;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2734_a_V = reg_2829;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2734_a_V = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2734_a_V = reg_2823;
    end else begin
        grp_MUL_DP_fu_2734_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2734_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2734_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2734_b_V = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2734_b_V = reg_2823;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2734_b_V = reg_3037;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2734_b_V = reg_2829;
    end else begin
        grp_MUL_DP_fu_2734_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2741_a_V = reg_3049;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2741_a_V = reg_2841;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2741_a_V = reg_3043;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2741_a_V = reg_2835;
    end else begin
        grp_MUL_DP_fu_2741_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2741_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2741_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2741_b_V = reg_3043;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2741_b_V = reg_2835;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2741_b_V = reg_3049;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2741_b_V = reg_2841;
    end else begin
        grp_MUL_DP_fu_2741_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2748_a_V = reg_3061;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2748_a_V = reg_2853;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2748_a_V = reg_3055;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2748_a_V = reg_2847;
    end else begin
        grp_MUL_DP_fu_2748_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2748_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2748_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2748_b_V = reg_3055;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2748_b_V = reg_2847;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2748_b_V = reg_3061;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2748_b_V = reg_2853;
    end else begin
        grp_MUL_DP_fu_2748_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2755_a_V = reg_3073;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2755_a_V = reg_2865;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2755_a_V = reg_3067;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2755_a_V = reg_2859;
    end else begin
        grp_MUL_DP_fu_2755_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2755_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2755_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2755_b_V = reg_3067;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2755_b_V = reg_2859;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2755_b_V = reg_3073;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2755_b_V = reg_2865;
    end else begin
        grp_MUL_DP_fu_2755_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2762_a_V = reg_3085;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2762_a_V = reg_2877;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2762_a_V = reg_3079;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2762_a_V = reg_2871;
    end else begin
        grp_MUL_DP_fu_2762_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2762_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2762_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2762_b_V = reg_3079;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2762_b_V = reg_2871;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2762_b_V = reg_3085;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2762_b_V = reg_2877;
    end else begin
        grp_MUL_DP_fu_2762_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2769_a_V = reg_3097;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2769_a_V = reg_2889;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2769_a_V = reg_3091;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2769_a_V = reg_2883;
    end else begin
        grp_MUL_DP_fu_2769_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2769_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2769_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2769_b_V = reg_3091;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2769_b_V = reg_2883;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2769_b_V = reg_3097;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2769_b_V = reg_2889;
    end else begin
        grp_MUL_DP_fu_2769_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2776_a_V = reg_3109;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2776_a_V = reg_2901;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2776_a_V = reg_3103;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2776_a_V = reg_2895;
    end else begin
        grp_MUL_DP_fu_2776_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2776_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2776_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2776_b_V = reg_3103;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2776_b_V = reg_2895;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2776_b_V = reg_3109;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2776_b_V = reg_2901;
    end else begin
        grp_MUL_DP_fu_2776_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2783_a_V = reg_3121;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2783_a_V = reg_2913;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2783_a_V = reg_3115;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2783_a_V = reg_2907;
    end else begin
        grp_MUL_DP_fu_2783_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2783_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2783_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2783_b_V = reg_3115;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2783_b_V = reg_2907;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2783_b_V = reg_3121;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2783_b_V = reg_2913;
    end else begin
        grp_MUL_DP_fu_2783_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2790_a_V = reg_3133;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2790_a_V = reg_2925;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2790_a_V = reg_3127;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2790_a_V = reg_2919;
    end else begin
        grp_MUL_DP_fu_2790_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2790_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2790_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2790_b_V = reg_3127;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2790_b_V = reg_2919;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2790_b_V = reg_3133;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2790_b_V = reg_2925;
    end else begin
        grp_MUL_DP_fu_2790_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2797_a_V = reg_3145;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2797_a_V = reg_2937;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2797_a_V = reg_3139;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2797_a_V = reg_2931;
    end else begin
        grp_MUL_DP_fu_2797_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2797_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2797_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2797_b_V = reg_3139;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2797_b_V = reg_2931;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2797_b_V = reg_3145;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2797_b_V = reg_2937;
    end else begin
        grp_MUL_DP_fu_2797_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2804_a_V = reg_3157;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2804_a_V = reg_2949;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2804_a_V = reg_3151;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2804_a_V = reg_2943;
    end else begin
        grp_MUL_DP_fu_2804_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_MUL_DP_fu_2804_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2804_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_MUL_DP_fu_2804_b_V = reg_3151;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_MUL_DP_fu_2804_b_V = reg_2943;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2804_b_V = reg_3157;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2804_b_V = reg_2949;
    end else begin
        grp_MUL_DP_fu_2804_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h11_phi_fu_2707_p4 = h11_cast2_mid2_reg_7990;
    end else begin
        h11_phi_fu_2707_p4 = h11_reg_2703;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_2510_p4 = h_cast_mid2_reg_6243;
    end else begin
        h_phi_fu_2510_p4 = h_reg_2506;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        input_V_address0 = input_V_addr_3_reg_7692;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        input_V_address0 = input_V_addr_2_reg_7272;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        input_V_address0 = input_V_addr_1_reg_6853;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_address0 = input_V_addr_reg_6434;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state54))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_7950) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w11_phi_fu_2719_p4 = w_14_fu_6105_p2;
    end else begin
        w11_phi_fu_2719_p4 = w11_reg_2715;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_6207 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_2522_p4 = w_7_fu_3313_p2;
    end else begin
        w_phi_fu_2522_p4 = w_reg_2518;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_0_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_0_V_address1 = weight_0_V_addr_2_reg_7277;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_0_V_ce1 = 1'b1;
    end else begin
        weight_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_10_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_10_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_10_V_address1 = weight_10_V_addr_2_reg_7377;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_10_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_10_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_10_V_ce1 = 1'b1;
    end else begin
        weight_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_11_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_11_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_11_V_address1 = weight_11_V_addr_2_reg_7387;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_11_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_11_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_11_V_ce1 = 1'b1;
    end else begin
        weight_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_12_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_12_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_12_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_12_V_address1 = weight_12_V_addr_2_reg_7697;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_12_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_12_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_12_V_ce1 = 1'b1;
    end else begin
        weight_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_13_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_13_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_13_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_13_V_address1 = weight_13_V_addr_2_reg_7707;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_13_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_13_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_13_V_ce1 = 1'b1;
    end else begin
        weight_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_14_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_14_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_14_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_14_V_address1 = weight_14_V_addr_2_reg_7717;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_14_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_14_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_14_V_ce1 = 1'b1;
    end else begin
        weight_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_15_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_15_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_15_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_15_V_address1 = weight_15_V_addr_2_reg_7727;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_15_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_15_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_15_V_ce1 = 1'b1;
    end else begin
        weight_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_16_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_16_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_16_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_16_V_address1 = weight_16_V_addr_2_reg_7737;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_16_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_16_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_16_V_ce1 = 1'b1;
    end else begin
        weight_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_17_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_17_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_17_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_17_V_address1 = weight_17_V_addr_2_reg_7747;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_17_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_17_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_17_V_ce1 = 1'b1;
    end else begin
        weight_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_18_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_18_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_18_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_18_V_address1 = weight_18_V_addr_2_reg_7757;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_18_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_18_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_18_V_ce1 = 1'b1;
    end else begin
        weight_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_19_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_19_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_19_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_19_V_address1 = weight_19_V_addr_2_reg_7767;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_19_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_19_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_19_V_ce1 = 1'b1;
    end else begin
        weight_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_1_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_1_V_address1 = weight_1_V_addr_2_reg_7287;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_1_V_ce1 = 1'b1;
    end else begin
        weight_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_20_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_20_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_20_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_20_V_address1 = weight_20_V_addr_2_reg_7777;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_20_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_20_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_20_V_ce1 = 1'b1;
    end else begin
        weight_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_21_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_21_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_21_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_21_V_address1 = weight_21_V_addr_2_reg_7787;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_21_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_21_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_21_V_ce1 = 1'b1;
    end else begin
        weight_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_22_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_22_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_22_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_22_V_address1 = weight_22_V_addr_2_reg_7797;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_22_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_22_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_22_V_ce1 = 1'b1;
    end else begin
        weight_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        weight_23_V_address0 = tmp_300_cast_fu_5530_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_23_V_address0 = tmp_262_cast_fu_4274_p1;
    end else begin
        weight_23_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_23_V_address1 = weight_23_V_addr_2_reg_7807;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_23_V_address1 = tmp_263_cast_fu_4296_p1;
    end else begin
        weight_23_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state53))) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_23_V_ce1 = 1'b1;
    end else begin
        weight_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_2_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_2_V_address1 = weight_2_V_addr_2_reg_7297;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_2_V_ce1 = 1'b1;
    end else begin
        weight_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_3_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_3_V_address1 = weight_3_V_addr_2_reg_7307;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_3_V_ce1 = 1'b1;
    end else begin
        weight_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_4_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_4_V_address1 = weight_4_V_addr_2_reg_7317;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_4_V_ce1 = 1'b1;
    end else begin
        weight_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_5_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_5_V_address1 = weight_5_V_addr_2_reg_7327;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_5_V_ce1 = 1'b1;
    end else begin
        weight_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_6_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_6_V_address1 = weight_6_V_addr_2_reg_7337;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_6_V_ce1 = 1'b1;
    end else begin
        weight_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_7_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_7_V_address1 = weight_7_V_addr_2_reg_7347;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_7_V_ce1 = 1'b1;
    end else begin
        weight_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_8_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_8_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_8_V_address1 = weight_8_V_addr_2_reg_7357;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_8_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_8_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_8_V_ce1 = 1'b1;
    end else begin
        weight_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        weight_9_V_address0 = tmp_277_cast_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_9_V_address0 = tmp_244_cast_fu_3669_p1;
    end else begin
        weight_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_9_V_address1 = weight_9_V_addr_2_reg_7367;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_9_V_address1 = tmp_245_cast_fu_3691_p1;
    end else begin
        weight_9_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41))) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_9_V_ce1 = 1'b1;
    end else begin
        weight_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (ap_enable_reg_pp0_iter10 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_3211_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (ap_enable_reg_pp0_iter10 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_3211_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond1_fu_3504_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond4_fu_3568_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond8_fu_3707_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond3_fu_4109_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond7_fu_4173_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond5_fu_4312_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == exitcond6_fu_4720_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == exitcond9_fu_4780_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (1'd1 == exitcond11_fu_4929_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond2_fu_5337_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (1'd1 == exitcond10_fu_5397_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == exitcond13_fu_5546_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (ap_enable_reg_pp1_iter10 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_5900_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (ap_enable_reg_pp1_iter10 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_5900_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_2_Downs_10_address1 = ShuffleConvs_2_Downs_301_reg_8090;

assign ShuffleConvs_2_Downs_10_d1 = 8'd0;

assign ShuffleConvs_2_Downs_11_address1 = ShuffleConvs_2_Downs_295_reg_8054;

assign ShuffleConvs_2_Downs_11_d1 = 8'd0;

assign ShuffleConvs_2_Downs_12_address1 = ShuffleConvs_2_Downs_299_reg_8078;

assign ShuffleConvs_2_Downs_12_d1 = 8'd0;

assign ShuffleConvs_2_Downs_13_address1 = ShuffleConvs_2_Downs_298_reg_8072;

assign ShuffleConvs_2_Downs_13_d1 = 8'd0;

assign ShuffleConvs_2_Downs_14_address1 = ShuffleConvs_2_Downs_297_reg_8066;

assign ShuffleConvs_2_Downs_14_d1 = 8'd0;

assign ShuffleConvs_2_Downs_15_address1 = ShuffleConvs_2_Downs_296_reg_8060;

assign ShuffleConvs_2_Downs_15_d1 = 8'd0;

assign ShuffleConvs_2_Downs_16_address1 = ShuffleConvs_2_Downs_310_reg_8144;

assign ShuffleConvs_2_Downs_16_d1 = 8'd0;

assign ShuffleConvs_2_Downs_17_address1 = ShuffleConvs_2_Downs_302_reg_8096;

assign ShuffleConvs_2_Downs_17_d1 = 8'd0;

assign ShuffleConvs_2_Downs_18_address1 = ShuffleConvs_2_Downs_307_reg_8126;

assign ShuffleConvs_2_Downs_18_d1 = 8'd0;

assign ShuffleConvs_2_Downs_19_address1 = ShuffleConvs_2_Downs_305_reg_8114;

assign ShuffleConvs_2_Downs_19_d1 = 8'd0;

assign ShuffleConvs_2_Downs_1_address1 = ShuffleConvs_2_Downs_287_reg_8006;

assign ShuffleConvs_2_Downs_1_d1 = 8'd0;

assign ShuffleConvs_2_Downs_20_address1 = ShuffleConvs_2_Downs_308_reg_8132;

assign ShuffleConvs_2_Downs_20_d1 = 8'd0;

assign ShuffleConvs_2_Downs_21_address1 = ShuffleConvs_2_Downs_303_reg_8102;

assign ShuffleConvs_2_Downs_21_d1 = 8'd0;

assign ShuffleConvs_2_Downs_22_address1 = ShuffleConvs_2_Downs_306_reg_8120;

assign ShuffleConvs_2_Downs_22_d1 = 8'd0;

assign ShuffleConvs_2_Downs_23_address1 = ShuffleConvs_2_Downs_309_reg_8138;

assign ShuffleConvs_2_Downs_23_d1 = 8'd0;

assign ShuffleConvs_2_Downs_2_address1 = ShuffleConvs_2_Downs_291_reg_8030;

assign ShuffleConvs_2_Downs_2_d1 = 8'd0;

assign ShuffleConvs_2_Downs_3_address1 = ShuffleConvs_2_Downs_304_reg_8108;

assign ShuffleConvs_2_Downs_3_d1 = 8'd0;

assign ShuffleConvs_2_Downs_4_address1 = ShuffleConvs_2_Downs_300_reg_8084;

assign ShuffleConvs_2_Downs_4_d1 = 8'd0;

assign ShuffleConvs_2_Downs_5_address1 = ShuffleConvs_2_Downs_292_reg_8036;

assign ShuffleConvs_2_Downs_5_d1 = 8'd0;

assign ShuffleConvs_2_Downs_6_address1 = ShuffleConvs_2_Downs_288_reg_8012;

assign ShuffleConvs_2_Downs_6_d1 = 8'd0;

assign ShuffleConvs_2_Downs_7_address1 = ShuffleConvs_2_Downs_294_reg_8048;

assign ShuffleConvs_2_Downs_7_d1 = 8'd0;

assign ShuffleConvs_2_Downs_8_address1 = ShuffleConvs_2_Downs_289_reg_8018;

assign ShuffleConvs_2_Downs_8_d1 = 8'd0;

assign ShuffleConvs_2_Downs_9_address1 = ShuffleConvs_2_Downs_293_reg_8042;

assign ShuffleConvs_2_Downs_9_d1 = 8'd0;

assign ShuffleConvs_2_Downs_address1 = ShuffleConvs_2_Downs_290_reg_8024;

assign ShuffleConvs_2_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd52];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_cast3_mid2_v_1_fu_5924_p3 = ((exitcond_flatten2_fu_5918_p2[0:0] === 1'b1) ? co_8_fu_5912_p2 : co9_phi_fu_2685_p4);

assign bias_V_address0 = co_cast_mid2_fu_3337_p1;

assign ci2_cast7_cast1_fu_4792_p1 = ci2_reg_2624;

assign ci2_cast7_cast_fu_4796_p1 = ci2_reg_2624;

assign ci3_cast4_cast1_fu_5409_p1 = ci3_reg_2659;

assign ci3_cast4_cast_fu_5413_p1 = ci3_reg_2659;

assign ci6_cast_cast_fu_4185_p1 = ci6_reg_2589;

assign ci_1_fu_3713_p2 = (ci_reg_2554 + 7'd1);

assign ci_2_fu_4318_p2 = (ci6_reg_2589 + 7'd1);

assign ci_3_fu_4935_p2 = (ci2_reg_2624 + 7'd1);

assign ci_4_fu_5552_p2 = (ci3_reg_2659 + 7'd1);

assign ci_cast_cast_fu_3580_p1 = ci_reg_2554;

assign co_7_fu_3243_p2 = (7'd1 + co_phi_fu_2487_p4);

assign co_8_fu_5912_p2 = (7'd1 + co9_phi_fu_2685_p4);

assign co_cast_mid2_fu_3337_p1 = ap_reg_pp0_iter9_co_cast_mid2_v_reg_6229;

assign co_cast_mid2_v_fu_3256_p3 = ((exitcond_flatten_reg_6216[0:0] === 1'b1) ? co_7_fu_3243_p2 : co_phi_fu_2487_p4);

assign exitcond10_fu_5397_p2 = ((w10_reg_2647 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond11_fu_4929_p2 = ((ci2_reg_2624 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond12_fu_5982_p2 = ((w11_phi_fu_2719_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond13_fu_5546_p2 = ((ci3_reg_2659 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond1_fu_3504_p2 = ((h1_reg_2530 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond2_fu_5337_p2 = ((h9_reg_2635 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond3_fu_4109_p2 = ((h4_reg_2565 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond4_fu_3568_p2 = ((w2_reg_2542 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond5_fu_4312_p2 = ((ci6_reg_2589 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond5_mid_fu_3280_p2 = (exitcond_fu_3274_p2 & not_exitcond_flatten_fu_3269_p2);

assign exitcond6_fu_4720_p2 = ((h8_reg_2600 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond7_fu_4173_p2 = ((w5_reg_2577 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond8_fu_3707_p2 = ((ci_reg_2554 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond9_fu_4780_p2 = ((w9_reg_2612 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_3211_p2 = ((indvar_flatten1_reg_2472 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_5918_p2 = ((indvar_flatten3_reg_2692 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_5900_p2 = ((indvar_flatten2_reg_2670 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_3223_p2 = ((indvar_flatten_reg_2495 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_3274_p2 = ((w_phi_fu_2522_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_5988_p2 = (exitcond12_fu_5982_p2 & not_exitcond_flatten_2_fu_5977_p2);

assign grp_fu_3263_p0 = ((exitcond_flatten_reg_6216[0:0] === 1'b1) ? co_7_fu_3243_p2 : co_phi_fu_2487_p4);

assign grp_fu_3263_p1 = 7'd24;

assign grp_fu_5953_p1 = 7'd24;

assign h11_cast2_mid2_cast_fu_6057_p1 = h11_cast2_mid2_reg_7990;

assign h11_cast2_mid2_fu_6013_p3 = ((exitcond_mid_fu_5988_p2[0:0] === 1'b1) ? h_13_fu_5994_p2 : h11_mid_fu_5946_p3);

assign h11_mid_fu_5946_p3 = ((exitcond_flatten2_reg_7959[0:0] === 1'b1) ? 4'd1 : h11_phi_fu_2707_p4);

assign h1_cast_cast1_fu_3456_p1 = h1_reg_2530;

assign h1_cast_cast_fu_3460_p1 = h1_reg_2530;

assign h4_cast_cast1_fu_4061_p1 = h4_reg_2565;

assign h4_cast_cast_fu_4065_p1 = h4_reg_2565;

assign h8_cast9_cast1_fu_4666_p1 = h8_reg_2600;

assign h8_cast9_cast_fu_4670_p1 = h8_reg_2600;

assign h9_cast6_cast1_fu_5283_p1 = h9_reg_2635;

assign h9_cast6_cast_fu_5287_p1 = h9_reg_2635;

assign h_10_fu_4786_p2 = (h8_reg_2600 + 4'd1);

assign h_13_fu_5994_p2 = (4'd1 + h11_mid_fu_5946_p3);

assign h_1_fu_5403_p2 = (h9_reg_2635 + 4'd1);

assign h_7_fu_3574_p2 = (h1_reg_2530 + 4'd1);

assign h_8_fu_3286_p2 = (4'd1 + h_mid_fu_3249_p3);

assign h_9_fu_4179_p2 = (h4_reg_2565 + 4'd1);

assign h_cast_mid2_cast_fu_3377_p1 = ap_reg_pp0_iter9_h_cast_mid2_reg_6243;

assign h_cast_mid2_fu_3305_p3 = ((exitcond5_mid_fu_3280_p2[0:0] === 1'b1) ? h_8_fu_3286_p2 : h_mid_fu_3249_p3);

assign h_mid_fu_3249_p3 = ((exitcond_flatten_reg_6216[0:0] === 1'b1) ? 4'd1 : h_phi_fu_2510_p4);

assign indvar_flatten21_op_fu_5932_p2 = (indvar_flatten3_reg_2692 + 8'd1);

assign indvar_flatten_next1_fu_3217_p2 = (indvar_flatten1_reg_2472 + 13'd1);

assign indvar_flatten_next2_fu_5938_p3 = ((exitcond_flatten2_fu_5918_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten21_op_fu_5932_p2);

assign indvar_flatten_next3_fu_5906_p2 = (indvar_flatten2_reg_2670 + 13'd1);

assign indvar_flatten_next_fu_3235_p3 = ((exitcond_flatten_fu_3223_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_3229_p2);

assign indvar_flatten_op_fu_3229_p2 = (indvar_flatten_reg_2495 + 8'd1);

assign mul1_fu_5961_p1 = mul1_fu_5961_p10;

assign mul1_fu_5961_p10 = arrayNo_cast3_mid2_v_1_reg_7966;

assign mul1_fu_5961_p2 = (16'd171 * mul1_fu_5961_p1);

assign mul_fu_3321_p1 = mul_fu_3321_p10;

assign mul_fu_3321_p10 = ap_reg_pp0_iter8_co_cast_mid2_v_reg_6229;

assign mul_fu_3321_p2 = (16'd171 * mul_fu_3321_p1);

assign not_exitcond_flatten_2_fu_5977_p2 = (exitcond_flatten2_reg_7959 ^ 1'd1);

assign not_exitcond_flatten_fu_3269_p2 = (exitcond_flatten_reg_6216 ^ 1'd1);

assign p_shl10_cast_fu_4077_p1 = tmp_173_fu_4069_p3;

assign p_shl11_cast_fu_4089_p1 = tmp_174_fu_4081_p3;

assign p_shl12_cast_fu_4232_p1 = tmp_132_fu_4224_p3;

assign p_shl13_cast_fu_4244_p1 = tmp_133_fu_4236_p3;

assign p_shl14_cast_fu_4197_p1 = tmp_202_fu_4189_p3;

assign p_shl15_cast_fu_4209_p1 = tmp_203_fu_4201_p3;

assign p_shl16_cast_fu_4682_p1 = tmp_179_fu_4674_p3;

assign p_shl17_cast_fu_4694_p1 = tmp_180_fu_4686_p3;

assign p_shl18_cast_fu_4843_p1 = tmp_158_fu_4835_p3;

assign p_shl19_cast_fu_4855_p1 = tmp_159_fu_4847_p3;

assign p_shl1_cast_fu_3402_p3 = {{tmp_105_fu_3398_p1}, {1'd0}};

assign p_shl20_cast_fu_4808_p1 = tmp_213_fu_4800_p3;

assign p_shl21_cast_fu_4820_p1 = tmp_214_fu_4812_p3;

assign p_shl22_cast_fu_5299_p1 = tmp_195_fu_5291_p3;

assign p_shl23_cast_fu_5311_p1 = tmp_196_fu_5303_p3;

assign p_shl24_cast_fu_5460_p1 = tmp_262_fu_5452_p3;

assign p_shl25_cast_fu_5472_p1 = tmp_263_fu_5464_p3;

assign p_shl26_cast_fu_5425_p1 = tmp_258_fu_5417_p3;

assign p_shl27_cast_fu_5437_p1 = tmp_259_fu_5429_p3;

assign p_shl28_cast_fu_6070_p3 = {{tmp_229_fu_6066_p1}, {3'd0}};

assign p_shl29_cast_fu_6082_p3 = {{tmp_230_fu_6078_p1}, {1'd0}};

assign p_shl2_cast_fu_3352_p1 = $unsigned(tmp_s_fu_3348_p1);

assign p_shl30_cast_fu_6032_p1 = $unsigned(tmp_223_fu_6028_p1);

assign p_shl31_cast_fu_6047_p1 = $unsigned(tmp_225_fu_6043_p1);

assign p_shl3_cast_fu_3367_p1 = $unsigned(tmp_163_fu_3363_p1);

assign p_shl4_cast_fu_3472_p1 = tmp_169_fu_3464_p3;

assign p_shl5_cast_fu_3484_p1 = tmp_170_fu_3476_p3;

assign p_shl6_cast_fu_3627_p1 = tmp_106_fu_3619_p3;

assign p_shl7_cast_fu_3639_p1 = tmp_107_fu_3631_p3;

assign p_shl8_cast_fu_3592_p1 = tmp_186_fu_3584_p3;

assign p_shl9_cast_fu_3604_p1 = tmp_187_fu_3596_p3;

assign p_shl_cast_fu_3390_p3 = {{tmp_104_fu_3386_p1}, {3'd0}};

assign tmp_100_fu_3425_p1 = grp_fu_3263_p2[5:0];

assign tmp_102_fu_3341_p3 = {{tmp_101_reg_6254}, {3'd0}};

assign tmp_103_fu_3356_p3 = {{tmp_101_reg_6254}, {1'd0}};

assign tmp_104_fu_3386_p1 = tmp_166_fu_3380_p2[6:0];

assign tmp_105_fu_3398_p1 = tmp_166_fu_3380_p2[8:0];

assign tmp_106_fu_3619_p3 = {{tmp_189_fu_3614_p2}, {3'd0}};

assign tmp_107_fu_3631_p3 = {{tmp_189_fu_3614_p2}, {1'd0}};

assign tmp_108_fu_3729_p1 = grp_MUL_DP_fu_2727_ap_return_0[7:0];

assign tmp_109_fu_3908_p1 = MUL_DP_ret1_reg_6572_1[7:0];

assign tmp_110_fu_3744_p1 = grp_MUL_DP_fu_2734_ap_return_0[7:0];

assign tmp_111_fu_3921_p1 = MUL_DP_ret2_reg_6577_1[7:0];

assign tmp_112_fu_3759_p1 = grp_MUL_DP_fu_2741_ap_return_0[7:0];

assign tmp_113_fu_3934_p1 = MUL_DP_ret3_reg_6582_1[7:0];

assign tmp_114_fu_3774_p1 = grp_MUL_DP_fu_2748_ap_return_0[7:0];

assign tmp_115_fu_3947_p1 = MUL_DP_ret4_reg_6587_1[7:0];

assign tmp_116_fu_3789_p1 = grp_MUL_DP_fu_2755_ap_return_0[7:0];

assign tmp_117_fu_3960_p1 = MUL_DP_ret5_reg_6592_1[7:0];

assign tmp_118_fu_3804_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_119_fu_3973_p1 = MUL_DP_ret6_reg_6597_1[7:0];

assign tmp_11_fu_4955_p2 = (reg_2971 + tmp_234_fu_4951_p1);

assign tmp_120_fu_3819_p1 = grp_MUL_DP_fu_2769_ap_return_0[7:0];

assign tmp_121_fu_3986_p1 = MUL_DP_ret7_reg_6602_1[7:0];

assign tmp_122_fu_3834_p1 = grp_MUL_DP_fu_2776_ap_return_0[7:0];

assign tmp_123_fu_3999_p1 = MUL_DP_ret8_reg_6607_1[7:0];

assign tmp_124_fu_3849_p1 = grp_MUL_DP_fu_2783_ap_return_0[7:0];

assign tmp_125_fu_4012_p1 = MUL_DP_ret9_reg_6612_1[7:0];

assign tmp_126_fu_3864_p1 = grp_MUL_DP_fu_2790_ap_return_0[7:0];

assign tmp_127_fu_4025_p1 = MUL_DP_ret10_reg_6617_1[7:0];

assign tmp_128_fu_3879_p1 = grp_MUL_DP_fu_2797_ap_return_0[7:0];

assign tmp_129_fu_4038_p1 = MUL_DP_ret11_reg_6622_1[7:0];

assign tmp_130_fu_3894_p1 = grp_MUL_DP_fu_2804_ap_return_0[7:0];

assign tmp_131_fu_4051_p1 = MUL_DP_ret12_reg_6627_1[7:0];

assign tmp_132_fu_4224_p3 = {{tmp_205_fu_4219_p2}, {3'd0}};

assign tmp_133_fu_4236_p3 = {{tmp_205_fu_4219_p2}, {1'd0}};

assign tmp_134_fu_4334_p1 = grp_MUL_DP_fu_2727_ap_return_0[7:0];

assign tmp_135_fu_4513_p1 = MUL_DP_ret13_reg_6991_1[7:0];

assign tmp_136_fu_4349_p1 = grp_MUL_DP_fu_2734_ap_return_0[7:0];

assign tmp_137_fu_4526_p1 = MUL_DP_ret14_reg_6996_1[7:0];

assign tmp_138_fu_4364_p1 = grp_MUL_DP_fu_2741_ap_return_0[7:0];

assign tmp_139_fu_4539_p1 = MUL_DP_ret15_reg_7001_1[7:0];

assign tmp_140_fu_4379_p1 = grp_MUL_DP_fu_2748_ap_return_0[7:0];

assign tmp_141_fu_4552_p1 = MUL_DP_ret16_reg_7006_1[7:0];

assign tmp_142_fu_4394_p1 = grp_MUL_DP_fu_2755_ap_return_0[7:0];

assign tmp_143_fu_4565_p1 = MUL_DP_ret17_reg_7011_1[7:0];

assign tmp_144_fu_4409_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_145_fu_4578_p1 = MUL_DP_ret18_reg_7016_1[7:0];

assign tmp_146_fu_4424_p1 = grp_MUL_DP_fu_2769_ap_return_0[7:0];

assign tmp_147_fu_4591_p1 = MUL_DP_ret19_reg_7021_1[7:0];

assign tmp_148_fu_4439_p1 = grp_MUL_DP_fu_2776_ap_return_0[7:0];

assign tmp_149_fu_4604_p1 = MUL_DP_ret20_reg_7026_1[7:0];

assign tmp_14_fu_5134_p2 = (ShuffleConvs_2_Downs_23_q0 + tmp_235_fu_5130_p1);

assign tmp_150_fu_4454_p1 = grp_MUL_DP_fu_2783_ap_return_0[7:0];

assign tmp_151_fu_4617_p1 = MUL_DP_ret21_reg_7031_1[7:0];

assign tmp_152_fu_4469_p1 = grp_MUL_DP_fu_2790_ap_return_0[7:0];

assign tmp_153_fu_4630_p1 = MUL_DP_ret22_reg_7036_1[7:0];

assign tmp_154_fu_4484_p1 = grp_MUL_DP_fu_2797_ap_return_0[7:0];

assign tmp_155_fu_4643_p1 = MUL_DP_ret23_reg_7041_1[7:0];

assign tmp_156_fu_4499_p1 = grp_MUL_DP_fu_2804_ap_return_0[7:0];

assign tmp_157_fu_4656_p1 = MUL_DP_ret24_reg_7046_1[7:0];

assign tmp_158_fu_4835_p3 = {{tmp_216_fu_4830_p2}, {3'd0}};

assign tmp_159_fu_4847_p3 = {{tmp_216_fu_4830_p2}, {1'd0}};

assign tmp_160_fu_6141_p1 = grp_fu_5953_p2[5:0];

assign tmp_162_fu_6021_p3 = {{tmp_161_reg_7978}, {3'd0}};

assign tmp_163_fu_3363_p1 = $signed(tmp_103_fu_3356_p3);

assign tmp_164_fu_3371_p2 = (p_shl2_cast_fu_3352_p1 + p_shl3_cast_fu_3367_p1);

assign tmp_165_fu_3292_p2 = (exitcond5_mid_fu_3280_p2 | exitcond_flatten_reg_6216);

assign tmp_166_fu_3380_p2 = (h_cast_mid2_cast_fu_3377_p1 + tmp_164_fu_3371_p2);

assign tmp_167_fu_3410_p2 = (p_shl_cast_fu_3390_p3 + p_shl1_cast_fu_3402_p3);

assign tmp_168_fu_3419_p2 = (w_cast_cast_fu_3416_p1 + tmp_167_fu_3410_p2);

assign tmp_169_fu_3464_p3 = {{h1_reg_2530}, {3'd0}};

assign tmp_16_fu_5572_p2 = (reg_3163 + tmp_270_fu_5568_p1);

assign tmp_170_fu_3476_p3 = {{h1_reg_2530}, {1'd0}};

assign tmp_171_fu_3488_p2 = (p_shl5_cast_fu_3484_p1 + p_shl4_cast_fu_3472_p1);

assign tmp_172_fu_3498_p2 = (tmp_220_cast_fu_3494_p1 + 9'd200);

assign tmp_173_fu_4069_p3 = {{h4_reg_2565}, {3'd0}};

assign tmp_174_fu_4081_p3 = {{h4_reg_2565}, {1'd0}};

assign tmp_175_fu_4093_p2 = (p_shl11_cast_fu_4089_p1 + p_shl10_cast_fu_4077_p1);

assign tmp_176_fu_4103_p2 = (tmp_224_cast_fu_4099_p1 + 9'd200);

assign tmp_177_fu_3526_p2 = (tmp_171_reg_6283 + w2_cast_cast_fu_3522_p1);

assign tmp_178_fu_3547_p2 = (tmp_172_reg_6288 + w2_cast_cast3_fu_3518_p1);

assign tmp_179_fu_4674_p3 = {{h8_reg_2600}, {3'd0}};

assign tmp_180_fu_4686_p3 = {{h8_reg_2600}, {1'd0}};

assign tmp_181_fu_4698_p2 = (p_shl17_cast_fu_4694_p1 + p_shl16_cast_fu_4682_p1);

assign tmp_182_fu_4708_p2 = (tmp_230_cast_fu_4704_p1 + 9'd100);

assign tmp_183_fu_4714_p2 = ($signed(tmp_230_cast_fu_4704_p1) + $signed(9'd300));

assign tmp_184_fu_4131_p2 = (tmp_175_reg_6702 + w5_cast_cast_fu_4127_p1);

assign tmp_185_fu_4152_p2 = (tmp_176_reg_6707 + w5_cast_cast3_fu_4123_p1);

assign tmp_186_fu_3584_p3 = {{ci_reg_2554}, {3'd0}};

assign tmp_187_fu_3596_p3 = {{ci_reg_2554}, {1'd0}};

assign tmp_188_fu_3608_p2 = (p_shl8_cast_fu_3592_p1 + p_shl9_cast_fu_3604_p1);

assign tmp_189_fu_3614_p2 = (h1_cast_cast_reg_6278 + tmp_188_fu_3608_p2);

assign tmp_18_fu_5751_p2 = (ShuffleConvs_2_Downs_19_q0 + tmp_271_fu_5747_p1);

assign tmp_190_fu_3643_p2 = (p_shl6_cast_fu_3627_p1 + p_shl7_cast_fu_3639_p1);

assign tmp_191_fu_3649_p2 = (w2_cast_cast2_reg_6301 + tmp_190_fu_3643_p2);

assign tmp_192_fu_3659_p2 = (h1_cast_cast1_reg_6273 + ci_reg_2554);

assign tmp_193_fu_3664_p2 = (w2_cast_cast1_reg_6296 + tmp_192_fu_3659_p2);

assign tmp_194_fu_3685_p2 = (ci_cast_cast_fu_3580_p1 + 9'd192);

assign tmp_195_fu_5291_p3 = {{h9_reg_2635}, {3'd0}};

assign tmp_196_fu_5303_p3 = {{h9_reg_2635}, {1'd0}};

assign tmp_197_fu_5315_p2 = (p_shl23_cast_fu_5311_p1 + p_shl22_cast_fu_5299_p1);

assign tmp_198_fu_5325_p2 = (tmp_248_cast_fu_5321_p1 + 9'd100);

assign tmp_199_fu_5331_p2 = ($signed(tmp_248_cast_fu_5321_p1) + $signed(9'd300));

assign tmp_200_fu_4738_p2 = (tmp_182_reg_7121 + w9_cast8_cast_fu_4734_p1);

assign tmp_201_fu_4759_p2 = (tmp_183_reg_7126 + w9_cast8_cast_fu_4734_p1);

assign tmp_202_fu_4189_p3 = {{ci6_reg_2589}, {3'd0}};

assign tmp_203_fu_4201_p3 = {{ci6_reg_2589}, {1'd0}};

assign tmp_204_fu_4213_p2 = (p_shl14_cast_fu_4197_p1 + p_shl15_cast_fu_4209_p1);

assign tmp_205_fu_4219_p2 = (h4_cast_cast_reg_6697 + tmp_204_fu_4213_p2);

assign tmp_206_fu_4248_p2 = (p_shl12_cast_fu_4232_p1 + p_shl13_cast_fu_4244_p1);

assign tmp_207_fu_4254_p2 = (w5_cast_cast2_reg_6720 + tmp_206_fu_4248_p2);

assign tmp_208_fu_4264_p2 = (h4_cast_cast1_reg_6692 + ci6_reg_2589);

assign tmp_209_fu_4269_p2 = (w5_cast_cast1_reg_6715 + tmp_208_fu_4264_p2);

assign tmp_20_10_fu_3898_p2 = (reg_3015 + tmp_130_fu_3894_p1);

assign tmp_20_1_fu_3748_p2 = (reg_2975 + tmp_110_fu_3744_p1);

assign tmp_20_2_fu_3763_p2 = (reg_2979 + tmp_112_fu_3759_p1);

assign tmp_20_3_fu_3778_p2 = (reg_2983 + tmp_114_fu_3774_p1);

assign tmp_20_4_fu_3793_p2 = (reg_2987 + tmp_116_fu_3789_p1);

assign tmp_20_5_fu_3808_p2 = (reg_2991 + tmp_118_fu_3804_p1);

assign tmp_20_6_fu_3823_p2 = (reg_2995 + tmp_120_fu_3819_p1);

assign tmp_20_7_fu_3838_p2 = (reg_2999 + tmp_122_fu_3834_p1);

assign tmp_20_8_fu_3853_p2 = (reg_3003 + tmp_124_fu_3849_p1);

assign tmp_20_9_fu_3868_p2 = (reg_3007 + tmp_126_fu_3864_p1);

assign tmp_20_s_fu_3883_p2 = (reg_3011 + tmp_128_fu_3879_p1);

assign tmp_210_fu_4290_p2 = (ci6_cast_cast_fu_4185_p1 + 9'd192);

assign tmp_211_fu_5355_p2 = (tmp_198_reg_7540 + w10_cast5_cast_fu_5351_p1);

assign tmp_212_fu_5376_p2 = (tmp_199_reg_7545 + w10_cast5_cast_fu_5351_p1);

assign tmp_213_fu_4800_p3 = {{ci2_reg_2624}, {3'd0}};

assign tmp_214_fu_4812_p3 = {{ci2_reg_2624}, {1'd0}};

assign tmp_215_fu_4824_p2 = (p_shl20_cast_fu_4808_p1 + p_shl21_cast_fu_4820_p1);

assign tmp_216_fu_4830_p2 = (h8_cast9_cast_reg_7116 + tmp_215_fu_4824_p2);

assign tmp_217_cast_fu_3429_p1 = tmp_168_reg_6260;

assign tmp_217_fu_4859_p2 = (p_shl18_cast_fu_4843_p1 + p_shl19_cast_fu_4855_p1);

assign tmp_218_fu_4865_p2 = (w9_cast8_cast2_reg_7139 + tmp_217_fu_4859_p2);

assign tmp_219_fu_4875_p2 = (ci2_cast7_cast_fu_4796_p1 + 8'd96);

assign tmp_220_cast_fu_3494_p1 = tmp_171_fu_3488_p2;

assign tmp_220_fu_4881_p2 = (h8_cast9_cast1_reg_7111 + tmp_219_fu_4875_p2);

assign tmp_221_fu_4886_p2 = (w9_cast8_cast1_reg_7134 + tmp_220_fu_4881_p2);

assign tmp_222_fu_4907_p2 = ($signed(ci2_cast7_cast1_fu_4792_p1) + $signed(9'd288));

assign tmp_223_fu_6028_p1 = $signed(tmp_162_fu_6021_p3);

assign tmp_224_cast_fu_4099_p1 = tmp_175_fu_4093_p2;

assign tmp_224_fu_6036_p3 = {{tmp_161_reg_7978}, {1'd0}};

assign tmp_225_fu_6043_p1 = $signed(tmp_224_fu_6036_p3);

assign tmp_226_cast_fu_3531_p1 = tmp_177_fu_3526_p2;

assign tmp_226_fu_6051_p2 = (p_shl30_cast_fu_6032_p1 + p_shl31_cast_fu_6047_p1);

assign tmp_227_cast_fu_3552_p1 = tmp_178_fu_3547_p2;

assign tmp_227_fu_6000_p2 = (exitcond_mid_fu_5988_p2 | exitcond_flatten2_reg_7959);

assign tmp_228_fu_6060_p2 = (h11_cast2_mid2_cast_fu_6057_p1 + tmp_226_fu_6051_p2);

assign tmp_229_fu_6066_p1 = tmp_228_fu_6060_p2[6:0];

assign tmp_22_10_fu_4055_p2 = (ShuffleConvs_2_Downs_20_q0 + tmp_131_fu_4051_p1);

assign tmp_22_1_fu_3925_p2 = (ShuffleConvs_2_Downs_22_q0 + tmp_111_fu_3921_p1);

assign tmp_22_2_fu_3938_p2 = (ShuffleConvs_2_Downs_11_q0 + tmp_113_fu_3934_p1);

assign tmp_22_3_fu_3951_p2 = (ShuffleConvs_2_Downs_6_q0 + tmp_115_fu_3947_p1);

assign tmp_22_4_fu_3964_p2 = (ShuffleConvs_2_Downs_5_q0 + tmp_117_fu_3960_p1);

assign tmp_22_5_fu_3977_p2 = (ShuffleConvs_2_Downs_4_q0 + tmp_119_fu_3973_p1);

assign tmp_22_6_fu_3990_p2 = (ShuffleConvs_2_Downs_3_q0 + tmp_121_fu_3986_p1);

assign tmp_22_7_fu_4003_p2 = (ShuffleConvs_2_Downs_2_q0 + tmp_123_fu_3999_p1);

assign tmp_22_8_fu_4016_p2 = (ShuffleConvs_2_Downs_1_q0 + tmp_125_fu_4012_p1);

assign tmp_22_9_fu_4029_p2 = (ShuffleConvs_2_Downs_q0 + tmp_127_fu_4025_p1);

assign tmp_22_s_fu_4042_p2 = (ShuffleConvs_2_Downs_21_q0 + tmp_129_fu_4038_p1);

assign tmp_230_cast_fu_4704_p1 = tmp_181_fu_4698_p2;

assign tmp_230_fu_6078_p1 = tmp_228_fu_6060_p2[8:0];

assign tmp_231_fu_6090_p2 = (p_shl28_cast_fu_6070_p3 + p_shl29_cast_fu_6082_p3);

assign tmp_232_fu_6099_p2 = (w12_cast1_cast_fu_6096_p1 + tmp_231_fu_6090_p2);

assign tmp_233_cast_fu_4136_p1 = tmp_184_fu_4131_p2;

assign tmp_233_fu_6199_p3 = tmp_2_fu_6145_p26[32'd7];

assign tmp_234_cast_fu_4157_p1 = tmp_185_fu_4152_p2;

assign tmp_234_fu_4951_p1 = grp_MUL_DP_fu_2727_ap_return_0[7:0];

assign tmp_235_fu_5130_p1 = MUL_DP_ret25_reg_7410_1[7:0];

assign tmp_236_fu_4966_p1 = grp_MUL_DP_fu_2734_ap_return_0[7:0];

assign tmp_237_fu_5143_p1 = MUL_DP_ret26_reg_7415_1[7:0];

assign tmp_238_fu_4981_p1 = grp_MUL_DP_fu_2741_ap_return_0[7:0];

assign tmp_239_fu_5156_p1 = MUL_DP_ret27_reg_7420_1[7:0];

assign tmp_240_fu_4996_p1 = grp_MUL_DP_fu_2748_ap_return_0[7:0];

assign tmp_241_fu_5169_p1 = MUL_DP_ret28_reg_7425_1[7:0];

assign tmp_242_cast_fu_3654_p1 = tmp_191_fu_3649_p2;

assign tmp_242_fu_5011_p1 = grp_MUL_DP_fu_2755_ap_return_0[7:0];

assign tmp_243_fu_5182_p1 = MUL_DP_ret29_reg_7430_1[7:0];

assign tmp_244_cast_fu_3669_p1 = tmp_193_fu_3664_p2;

assign tmp_244_fu_5026_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_245_cast_fu_3691_p1 = tmp_194_fu_3685_p2;

assign tmp_245_fu_5195_p1 = MUL_DP_ret30_reg_7435_1[7:0];

assign tmp_246_fu_5041_p1 = grp_MUL_DP_fu_2769_ap_return_0[7:0];

assign tmp_247_fu_5208_p1 = MUL_DP_ret31_reg_7440_1[7:0];

assign tmp_248_cast_fu_5321_p1 = tmp_197_fu_5315_p2;

assign tmp_248_fu_5056_p1 = grp_MUL_DP_fu_2776_ap_return_0[7:0];

assign tmp_249_fu_5221_p1 = MUL_DP_ret32_reg_7445_1[7:0];

assign tmp_250_fu_5071_p1 = grp_MUL_DP_fu_2783_ap_return_0[7:0];

assign tmp_251_cast_fu_4743_p1 = tmp_200_fu_4738_p2;

assign tmp_251_fu_5234_p1 = MUL_DP_ret33_reg_7450_1[7:0];

assign tmp_252_cast_fu_4764_p1 = tmp_201_fu_4759_p2;

assign tmp_252_fu_5086_p1 = grp_MUL_DP_fu_2790_ap_return_0[7:0];

assign tmp_253_fu_5247_p1 = MUL_DP_ret34_reg_7455_1[7:0];

assign tmp_254_fu_5101_p1 = grp_MUL_DP_fu_2797_ap_return_0[7:0];

assign tmp_255_fu_5260_p1 = MUL_DP_ret35_reg_7460_1[7:0];

assign tmp_256_fu_5116_p1 = grp_MUL_DP_fu_2804_ap_return_0[7:0];

assign tmp_257_fu_5273_p1 = MUL_DP_ret36_reg_7465_1[7:0];

assign tmp_258_fu_5417_p3 = {{ci3_reg_2659}, {3'd0}};

assign tmp_259_fu_5429_p3 = {{ci3_reg_2659}, {1'd0}};

assign tmp_25_10_fu_4503_p2 = (reg_3207 + tmp_156_fu_4499_p1);

assign tmp_25_1_fu_4353_p2 = (reg_3167 + tmp_136_fu_4349_p1);

assign tmp_25_2_fu_4368_p2 = (reg_3171 + tmp_138_fu_4364_p1);

assign tmp_25_3_fu_4383_p2 = (reg_3175 + tmp_140_fu_4379_p1);

assign tmp_25_4_fu_4398_p2 = (reg_3179 + tmp_142_fu_4394_p1);

assign tmp_25_5_fu_4413_p2 = (reg_3183 + tmp_144_fu_4409_p1);

assign tmp_25_6_fu_4428_p2 = (reg_3187 + tmp_146_fu_4424_p1);

assign tmp_25_7_fu_4443_p2 = (reg_3191 + tmp_148_fu_4439_p1);

assign tmp_25_8_fu_4458_p2 = (reg_3195 + tmp_150_fu_4454_p1);

assign tmp_25_9_fu_4473_p2 = (reg_3199 + tmp_152_fu_4469_p1);

assign tmp_25_s_fu_4488_p2 = (reg_3203 + tmp_154_fu_4484_p1);

assign tmp_260_cast_fu_4259_p1 = tmp_207_fu_4254_p2;

assign tmp_260_fu_5441_p2 = (p_shl26_cast_fu_5425_p1 + p_shl27_cast_fu_5437_p1);

assign tmp_261_fu_5447_p2 = (h9_cast6_cast_reg_7535 + tmp_260_fu_5441_p2);

assign tmp_262_cast_fu_4274_p1 = tmp_209_fu_4269_p2;

assign tmp_262_fu_5452_p3 = {{tmp_261_fu_5447_p2}, {3'd0}};

assign tmp_263_cast_fu_4296_p1 = tmp_210_fu_4290_p2;

assign tmp_263_fu_5464_p3 = {{tmp_261_fu_5447_p2}, {1'd0}};

assign tmp_264_cast_fu_5360_p1 = tmp_211_fu_5355_p2;

assign tmp_264_fu_5476_p2 = (p_shl24_cast_fu_5460_p1 + p_shl25_cast_fu_5472_p1);

assign tmp_265_cast_fu_5381_p1 = tmp_212_fu_5376_p2;

assign tmp_265_fu_5482_p2 = (w10_cast5_cast2_reg_7559 + tmp_264_fu_5476_p2);

assign tmp_266_fu_5492_p2 = (ci3_cast4_cast_fu_5413_p1 + 8'd96);

assign tmp_267_fu_5498_p2 = (h9_cast6_cast1_reg_7530 + tmp_266_fu_5492_p2);

assign tmp_268_fu_5503_p2 = (w10_cast5_cast1_reg_7554 + tmp_267_fu_5498_p2);

assign tmp_269_fu_5524_p2 = ($signed(ci3_cast4_cast1_fu_5409_p1) + $signed(9'd288));

assign tmp_270_fu_5568_p1 = grp_MUL_DP_fu_2727_ap_return_0[7:0];

assign tmp_271_fu_5747_p1 = MUL_DP_ret37_reg_7830_1[7:0];

assign tmp_272_fu_5583_p1 = grp_MUL_DP_fu_2734_ap_return_0[7:0];

assign tmp_273_cast_fu_4870_p1 = tmp_218_fu_4865_p2;

assign tmp_273_fu_5760_p1 = MUL_DP_ret38_reg_7835_1[7:0];

assign tmp_274_fu_5598_p1 = grp_MUL_DP_fu_2741_ap_return_0[7:0];

assign tmp_275_fu_5773_p1 = MUL_DP_ret39_reg_7840_1[7:0];

assign tmp_276_cast_fu_4891_p1 = tmp_221_fu_4886_p2;

assign tmp_276_fu_5613_p1 = grp_MUL_DP_fu_2748_ap_return_0[7:0];

assign tmp_277_cast_fu_4913_p1 = tmp_222_fu_4907_p2;

assign tmp_277_fu_5786_p1 = MUL_DP_ret40_reg_7845_1[7:0];

assign tmp_278_fu_5628_p1 = grp_MUL_DP_fu_2755_ap_return_0[7:0];

assign tmp_279_fu_5799_p1 = MUL_DP_ret41_reg_7850_1[7:0];

assign tmp_27_10_fu_4660_p2 = (ShuffleConvs_2_Downs_7_q0 + tmp_157_fu_4656_p1);

assign tmp_27_1_fu_4530_p2 = (ShuffleConvs_2_Downs_18_q0 + tmp_137_fu_4526_p1);

assign tmp_27_2_fu_4543_p2 = (ShuffleConvs_2_Downs_17_q0 + tmp_139_fu_4539_p1);

assign tmp_27_3_fu_4556_p2 = (ShuffleConvs_2_Downs_16_q0 + tmp_141_fu_4552_p1);

assign tmp_27_4_fu_4569_p2 = (ShuffleConvs_2_Downs_15_q0 + tmp_143_fu_4565_p1);

assign tmp_27_5_fu_4582_p2 = (ShuffleConvs_2_Downs_14_q0 + tmp_145_fu_4578_p1);

assign tmp_27_6_fu_4595_p2 = (ShuffleConvs_2_Downs_13_q0 + tmp_147_fu_4591_p1);

assign tmp_27_7_fu_4608_p2 = (ShuffleConvs_2_Downs_12_q0 + tmp_149_fu_4604_p1);

assign tmp_27_8_fu_4621_p2 = (ShuffleConvs_2_Downs_10_q0 + tmp_151_fu_4617_p1);

assign tmp_27_9_fu_4634_p2 = (ShuffleConvs_2_Downs_9_q0 + tmp_153_fu_4630_p1);

assign tmp_27_s_fu_4647_p2 = (ShuffleConvs_2_Downs_8_q0 + tmp_155_fu_4643_p1);

assign tmp_280_fu_5643_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_281_fu_5812_p1 = MUL_DP_ret42_reg_7855_1[7:0];

assign tmp_282_fu_5658_p1 = grp_MUL_DP_fu_2769_ap_return_0[7:0];

assign tmp_283_fu_5825_p1 = MUL_DP_ret43_reg_7860_1[7:0];

assign tmp_284_fu_5673_p1 = grp_MUL_DP_fu_2776_ap_return_0[7:0];

assign tmp_285_fu_5838_p1 = MUL_DP_ret44_reg_7865_1[7:0];

assign tmp_286_fu_5688_p1 = grp_MUL_DP_fu_2783_ap_return_0[7:0];

assign tmp_287_fu_5851_p1 = MUL_DP_ret45_reg_7870_1[7:0];

assign tmp_288_cast_fu_6110_p1 = ap_reg_pp1_iter9_tmp_232_reg_7996;

assign tmp_288_fu_5703_p1 = grp_MUL_DP_fu_2790_ap_return_0[7:0];

assign tmp_289_fu_5864_p1 = MUL_DP_ret46_reg_7875_1[7:0];

assign tmp_290_fu_5718_p1 = grp_MUL_DP_fu_2797_ap_return_0[7:0];

assign tmp_291_fu_5877_p1 = MUL_DP_ret47_reg_7880_1[7:0];

assign tmp_292_fu_5733_p1 = grp_MUL_DP_fu_2804_ap_return_0[7:0];

assign tmp_293_fu_5890_p1 = MUL_DP_ret_reg_7885_1[7:0];

assign tmp_296_cast_fu_5487_p1 = tmp_265_fu_5482_p2;

assign tmp_299_cast_fu_5508_p1 = tmp_268_fu_5503_p2;

assign tmp_2_fu_6145_p25 = grp_fu_5953_p2;

assign tmp_300_cast_fu_5530_p1 = tmp_269_fu_5524_p2;

assign tmp_30_10_fu_5120_p2 = (reg_3015 + tmp_256_fu_5116_p1);

assign tmp_30_1_fu_4970_p2 = (reg_2975 + tmp_236_fu_4966_p1);

assign tmp_30_2_fu_4985_p2 = (reg_2979 + tmp_238_fu_4981_p1);

assign tmp_30_3_fu_5000_p2 = (reg_2983 + tmp_240_fu_4996_p1);

assign tmp_30_4_fu_5015_p2 = (reg_2987 + tmp_242_fu_5011_p1);

assign tmp_30_5_fu_5030_p2 = (reg_2991 + tmp_244_fu_5026_p1);

assign tmp_30_6_fu_5045_p2 = (reg_2995 + tmp_246_fu_5041_p1);

assign tmp_30_7_fu_5060_p2 = (reg_2999 + tmp_248_fu_5056_p1);

assign tmp_30_8_fu_5075_p2 = (reg_3003 + tmp_250_fu_5071_p1);

assign tmp_30_9_fu_5090_p2 = (reg_3007 + tmp_252_fu_5086_p1);

assign tmp_30_s_fu_5105_p2 = (reg_3011 + tmp_254_fu_5101_p1);

assign tmp_32_10_fu_5277_p2 = (ShuffleConvs_2_Downs_20_q0 + tmp_257_fu_5273_p1);

assign tmp_32_1_fu_5147_p2 = (ShuffleConvs_2_Downs_22_q0 + tmp_237_fu_5143_p1);

assign tmp_32_2_fu_5160_p2 = (ShuffleConvs_2_Downs_11_q0 + tmp_239_fu_5156_p1);

assign tmp_32_3_fu_5173_p2 = (ShuffleConvs_2_Downs_6_q0 + tmp_241_fu_5169_p1);

assign tmp_32_4_fu_5186_p2 = (ShuffleConvs_2_Downs_5_q0 + tmp_243_fu_5182_p1);

assign tmp_32_5_fu_5199_p2 = (ShuffleConvs_2_Downs_4_q0 + tmp_245_fu_5195_p1);

assign tmp_32_6_fu_5212_p2 = (ShuffleConvs_2_Downs_3_q0 + tmp_247_fu_5208_p1);

assign tmp_32_7_fu_5225_p2 = (ShuffleConvs_2_Downs_2_q0 + tmp_249_fu_5221_p1);

assign tmp_32_8_fu_5238_p2 = (ShuffleConvs_2_Downs_1_q0 + tmp_251_fu_5234_p1);

assign tmp_32_9_fu_5251_p2 = (ShuffleConvs_2_Downs_q0 + tmp_253_fu_5247_p1);

assign tmp_32_s_fu_5264_p2 = (ShuffleConvs_2_Downs_21_q0 + tmp_255_fu_5260_p1);

assign tmp_36_10_fu_5737_p2 = (reg_3207 + tmp_292_fu_5733_p1);

assign tmp_36_1_fu_5587_p2 = (reg_3167 + tmp_272_fu_5583_p1);

assign tmp_36_2_fu_5602_p2 = (reg_3171 + tmp_274_fu_5598_p1);

assign tmp_36_3_fu_5617_p2 = (reg_3175 + tmp_276_fu_5613_p1);

assign tmp_36_4_fu_5632_p2 = (reg_3179 + tmp_278_fu_5628_p1);

assign tmp_36_5_fu_5647_p2 = (reg_3183 + tmp_280_fu_5643_p1);

assign tmp_36_6_fu_5662_p2 = (reg_3187 + tmp_282_fu_5658_p1);

assign tmp_36_7_fu_5677_p2 = (reg_3191 + tmp_284_fu_5673_p1);

assign tmp_36_8_fu_5692_p2 = (reg_3195 + tmp_286_fu_5688_p1);

assign tmp_36_9_fu_5707_p2 = (reg_3199 + tmp_288_fu_5703_p1);

assign tmp_36_s_fu_5722_p2 = (reg_3203 + tmp_290_fu_5718_p1);

assign tmp_38_10_fu_5894_p2 = (ShuffleConvs_2_Downs_7_q0 + tmp_293_fu_5890_p1);

assign tmp_38_1_fu_5764_p2 = (ShuffleConvs_2_Downs_18_q0 + tmp_273_fu_5760_p1);

assign tmp_38_2_fu_5777_p2 = (ShuffleConvs_2_Downs_17_q0 + tmp_275_fu_5773_p1);

assign tmp_38_3_fu_5790_p2 = (ShuffleConvs_2_Downs_16_q0 + tmp_277_fu_5786_p1);

assign tmp_38_4_fu_5803_p2 = (ShuffleConvs_2_Downs_15_q0 + tmp_279_fu_5799_p1);

assign tmp_38_5_fu_5816_p2 = (ShuffleConvs_2_Downs_14_q0 + tmp_281_fu_5812_p1);

assign tmp_38_6_fu_5829_p2 = (ShuffleConvs_2_Downs_13_q0 + tmp_283_fu_5825_p1);

assign tmp_38_7_fu_5842_p2 = (ShuffleConvs_2_Downs_12_q0 + tmp_285_fu_5838_p1);

assign tmp_38_8_fu_5855_p2 = (ShuffleConvs_2_Downs_10_q0 + tmp_287_fu_5851_p1);

assign tmp_38_9_fu_5868_p2 = (ShuffleConvs_2_Downs_9_q0 + tmp_289_fu_5864_p1);

assign tmp_38_s_fu_5881_p2 = (ShuffleConvs_2_Downs_8_q0 + tmp_291_fu_5877_p1);

assign tmp_3_fu_3733_p2 = (reg_2971 + tmp_108_fu_3729_p1);

assign tmp_5_fu_3912_p2 = (ShuffleConvs_2_Downs_23_q0 + tmp_109_fu_3908_p1);

assign tmp_7_fu_4338_p2 = (reg_3163 + tmp_134_fu_4334_p1);

assign tmp_9_fu_4517_p2 = (ShuffleConvs_2_Downs_19_q0 + tmp_135_fu_4513_p1);

assign tmp_s_fu_3348_p1 = $signed(tmp_102_fu_3341_p3);

assign w10_cast5_cast1_fu_5343_p1 = w10_reg_2647;

assign w10_cast5_cast2_fu_5347_p1 = w10_reg_2647;

assign w10_cast5_cast_fu_5351_p1 = w10_reg_2647;

assign w12_cast1_cast_fu_6096_p1 = w12_mid2_reg_7984;

assign w12_mid2_fu_6005_p3 = ((tmp_227_fu_6000_p2[0:0] === 1'b1) ? 4'd1 : w11_phi_fu_2719_p4);

assign w2_cast_cast1_fu_3510_p1 = w2_reg_2542;

assign w2_cast_cast2_fu_3514_p1 = w2_reg_2542;

assign w2_cast_cast3_fu_3518_p1 = w2_reg_2542;

assign w2_cast_cast_fu_3522_p1 = w2_reg_2542;

assign w5_cast_cast1_fu_4115_p1 = w5_reg_2577;

assign w5_cast_cast2_fu_4119_p1 = w5_reg_2577;

assign w5_cast_cast3_fu_4123_p1 = w5_reg_2577;

assign w5_cast_cast_fu_4127_p1 = w5_reg_2577;

assign w9_cast8_cast1_fu_4726_p1 = w9_reg_2612;

assign w9_cast8_cast2_fu_4730_p1 = w9_reg_2612;

assign w9_cast8_cast_fu_4734_p1 = w9_reg_2612;

assign w_12_fu_4941_p2 = (w9_reg_2612 + 4'd1);

assign w_13_fu_5558_p2 = (w10_reg_2647 + 4'd1);

assign w_14_fu_6105_p2 = (w12_mid2_reg_7984 + 4'd1);

assign w_7_fu_3313_p2 = (w_mid2_reg_6237 + 4'd1);

assign w_8_fu_3719_p2 = (w2_reg_2542 + 4'd1);

assign w_9_fu_4324_p2 = (w5_reg_2577 + 4'd1);

assign w_cast_cast_fu_3416_p1 = ap_reg_pp0_iter9_w_mid2_reg_6237;

assign w_mid2_fu_3297_p3 = ((tmp_165_fu_3292_p2[0:0] === 1'b1) ? 4'd1 : w_phi_fu_2522_p4);

always @ (posedge ap_clk) begin
    h1_cast_cast1_reg_6273[6:4] <= 3'b000;
    h1_cast_cast_reg_6278[10:4] <= 7'b0000000;
    tmp_171_reg_6283[0] <= 1'b0;
    tmp_172_reg_6288[0] <= 1'b0;
    w2_cast_cast1_reg_6296[6:4] <= 3'b000;
    w2_cast_cast2_reg_6301[14:4] <= 11'b00000000000;
    ShuffleConvs_2_Downs_95_reg_6306[8] <= 1'b0;
    ShuffleConvs_2_Downs_97_reg_6316[8] <= 1'b0;
    ShuffleConvs_2_Downs_99_reg_6326[8] <= 1'b0;
    ShuffleConvs_2_Downs_101_reg_6336[8] <= 1'b0;
    ShuffleConvs_2_Downs_103_reg_6346[8] <= 1'b0;
    ShuffleConvs_2_Downs_105_reg_6356[8] <= 1'b0;
    ShuffleConvs_2_Downs_107_reg_6366[8] <= 1'b0;
    ShuffleConvs_2_Downs_109_reg_6376[8] <= 1'b0;
    ShuffleConvs_2_Downs_111_reg_6386[8] <= 1'b0;
    ShuffleConvs_2_Downs_113_reg_6396[8] <= 1'b0;
    ShuffleConvs_2_Downs_115_reg_6406[8] <= 1'b0;
    ShuffleConvs_2_Downs_117_reg_6416[8] <= 1'b0;
    h4_cast_cast1_reg_6692[6:4] <= 3'b000;
    h4_cast_cast_reg_6697[10:4] <= 7'b0000000;
    tmp_175_reg_6702[0] <= 1'b0;
    tmp_176_reg_6707[0] <= 1'b0;
    w5_cast_cast1_reg_6715[6:4] <= 3'b000;
    w5_cast_cast2_reg_6720[14:4] <= 11'b00000000000;
    ShuffleConvs_2_Downs_143_reg_6725[8] <= 1'b0;
    ShuffleConvs_2_Downs_145_reg_6735[8] <= 1'b0;
    ShuffleConvs_2_Downs_147_reg_6745[8] <= 1'b0;
    ShuffleConvs_2_Downs_149_reg_6755[8] <= 1'b0;
    ShuffleConvs_2_Downs_151_reg_6765[8] <= 1'b0;
    ShuffleConvs_2_Downs_153_reg_6775[8] <= 1'b0;
    ShuffleConvs_2_Downs_155_reg_6785[8] <= 1'b0;
    ShuffleConvs_2_Downs_157_reg_6795[8] <= 1'b0;
    ShuffleConvs_2_Downs_159_reg_6805[8] <= 1'b0;
    ShuffleConvs_2_Downs_161_reg_6815[8] <= 1'b0;
    ShuffleConvs_2_Downs_163_reg_6825[8] <= 1'b0;
    ShuffleConvs_2_Downs_165_reg_6835[8] <= 1'b0;
    h8_cast9_cast1_reg_7111[7:4] <= 4'b0000;
    h8_cast9_cast_reg_7116[10:4] <= 7'b0000000;
    tmp_182_reg_7121[0] <= 1'b0;
    tmp_183_reg_7126[0] <= 1'b0;
    w9_cast8_cast1_reg_7134[7:4] <= 4'b0000;
    w9_cast8_cast2_reg_7139[14:4] <= 11'b00000000000;
    weight_0_V_addr_2_reg_7277[8] <= 1'b0;
    weight_1_V_addr_2_reg_7287[8] <= 1'b0;
    weight_2_V_addr_2_reg_7297[8] <= 1'b0;
    weight_3_V_addr_2_reg_7307[8] <= 1'b0;
    weight_4_V_addr_2_reg_7317[8] <= 1'b0;
    weight_5_V_addr_2_reg_7327[8] <= 1'b0;
    weight_6_V_addr_2_reg_7337[8] <= 1'b0;
    weight_7_V_addr_2_reg_7347[8] <= 1'b0;
    weight_8_V_addr_2_reg_7357[8] <= 1'b0;
    weight_9_V_addr_2_reg_7367[8] <= 1'b0;
    weight_10_V_addr_2_reg_7377[8] <= 1'b0;
    weight_11_V_addr_2_reg_7387[8] <= 1'b0;
    h9_cast6_cast1_reg_7530[7:4] <= 4'b0000;
    h9_cast6_cast_reg_7535[10:4] <= 7'b0000000;
    tmp_198_reg_7540[0] <= 1'b0;
    tmp_199_reg_7545[0] <= 1'b0;
    w10_cast5_cast1_reg_7554[7:4] <= 4'b0000;
    w10_cast5_cast2_reg_7559[14:4] <= 11'b00000000000;
    weight_12_V_addr_2_reg_7697[8] <= 1'b0;
    weight_13_V_addr_2_reg_7707[8] <= 1'b0;
    weight_14_V_addr_2_reg_7717[8] <= 1'b0;
    weight_15_V_addr_2_reg_7727[8] <= 1'b0;
    weight_16_V_addr_2_reg_7737[8] <= 1'b0;
    weight_17_V_addr_2_reg_7747[8] <= 1'b0;
    weight_18_V_addr_2_reg_7757[8] <= 1'b0;
    weight_19_V_addr_2_reg_7767[8] <= 1'b0;
    weight_20_V_addr_2_reg_7777[8] <= 1'b0;
    weight_21_V_addr_2_reg_7787[8] <= 1'b0;
    weight_22_V_addr_2_reg_7797[8] <= 1'b0;
    weight_23_V_addr_2_reg_7807[8] <= 1'b0;
end

endmodule //subconv_1x1_8p_p
