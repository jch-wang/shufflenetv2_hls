// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_0_V_address1,
        weight_0_V_ce1,
        weight_0_V_q1,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_1_V_address1,
        weight_1_V_ce1,
        weight_1_V_q1,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_2_V_address1,
        weight_2_V_ce1,
        weight_2_V_q1,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_3_V_address1,
        weight_3_V_ce1,
        weight_3_V_q1,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_4_V_address1,
        weight_4_V_ce1,
        weight_4_V_q1,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_5_V_address1,
        weight_5_V_ce1,
        weight_5_V_q1,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_6_V_address1,
        weight_6_V_ce1,
        weight_6_V_q1,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_7_V_address1,
        weight_7_V_ce1,
        weight_7_V_q1,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_8_V_address1,
        weight_8_V_ce1,
        weight_8_V_q1,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_9_V_address1,
        weight_9_V_ce1,
        weight_9_V_q1,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_10_V_address1,
        weight_10_V_ce1,
        weight_10_V_q1,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_11_V_address1,
        weight_11_V_ce1,
        weight_11_V_q1,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_12_V_address1,
        weight_12_V_ce1,
        weight_12_V_q1,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_13_V_address1,
        weight_13_V_ce1,
        weight_13_V_q1,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_14_V_address1,
        weight_14_V_ce1,
        weight_14_V_q1,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_15_V_address1,
        weight_15_V_ce1,
        weight_15_V_q1,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_16_V_address1,
        weight_16_V_ce1,
        weight_16_V_q1,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_17_V_address1,
        weight_17_V_ce1,
        weight_17_V_q1,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_18_V_address1,
        weight_18_V_ce1,
        weight_18_V_q1,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_19_V_address1,
        weight_19_V_ce1,
        weight_19_V_q1,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_20_V_address1,
        weight_20_V_ce1,
        weight_20_V_q1,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_21_V_address1,
        weight_21_V_ce1,
        weight_21_V_q1,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_22_V_address1,
        weight_22_V_ce1,
        weight_22_V_q1,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_23_V_address1,
        weight_23_V_ce1,
        weight_23_V_q1,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_48_8x8_p_V_24_address0,
        buffer1_1_48_8x8_p_V_24_ce0,
        buffer1_1_48_8x8_p_V_24_we0,
        buffer1_1_48_8x8_p_V_24_d0,
        buffer1_1_48_8x8_p_V_24_q0,
        buffer1_1_48_8x8_p_V_24_address1,
        buffer1_1_48_8x8_p_V_24_ce1,
        buffer1_1_48_8x8_p_V_24_we1,
        buffer1_1_48_8x8_p_V_24_d1,
        buffer1_1_48_8x8_p_V_1_address0,
        buffer1_1_48_8x8_p_V_1_ce0,
        buffer1_1_48_8x8_p_V_1_we0,
        buffer1_1_48_8x8_p_V_1_d0,
        buffer1_1_48_8x8_p_V_1_q0,
        buffer1_1_48_8x8_p_V_1_address1,
        buffer1_1_48_8x8_p_V_1_ce1,
        buffer1_1_48_8x8_p_V_1_we1,
        buffer1_1_48_8x8_p_V_1_d1,
        buffer1_1_48_8x8_p_V_2_address0,
        buffer1_1_48_8x8_p_V_2_ce0,
        buffer1_1_48_8x8_p_V_2_we0,
        buffer1_1_48_8x8_p_V_2_d0,
        buffer1_1_48_8x8_p_V_2_q0,
        buffer1_1_48_8x8_p_V_2_address1,
        buffer1_1_48_8x8_p_V_2_ce1,
        buffer1_1_48_8x8_p_V_2_we1,
        buffer1_1_48_8x8_p_V_2_d1,
        buffer1_1_48_8x8_p_V_3_address0,
        buffer1_1_48_8x8_p_V_3_ce0,
        buffer1_1_48_8x8_p_V_3_we0,
        buffer1_1_48_8x8_p_V_3_d0,
        buffer1_1_48_8x8_p_V_3_q0,
        buffer1_1_48_8x8_p_V_3_address1,
        buffer1_1_48_8x8_p_V_3_ce1,
        buffer1_1_48_8x8_p_V_3_we1,
        buffer1_1_48_8x8_p_V_3_d1,
        buffer1_1_48_8x8_p_V_4_address0,
        buffer1_1_48_8x8_p_V_4_ce0,
        buffer1_1_48_8x8_p_V_4_we0,
        buffer1_1_48_8x8_p_V_4_d0,
        buffer1_1_48_8x8_p_V_4_q0,
        buffer1_1_48_8x8_p_V_4_address1,
        buffer1_1_48_8x8_p_V_4_ce1,
        buffer1_1_48_8x8_p_V_4_we1,
        buffer1_1_48_8x8_p_V_4_d1,
        buffer1_1_48_8x8_p_V_5_address0,
        buffer1_1_48_8x8_p_V_5_ce0,
        buffer1_1_48_8x8_p_V_5_we0,
        buffer1_1_48_8x8_p_V_5_d0,
        buffer1_1_48_8x8_p_V_5_q0,
        buffer1_1_48_8x8_p_V_5_address1,
        buffer1_1_48_8x8_p_V_5_ce1,
        buffer1_1_48_8x8_p_V_5_we1,
        buffer1_1_48_8x8_p_V_5_d1,
        buffer1_1_48_8x8_p_V_6_address0,
        buffer1_1_48_8x8_p_V_6_ce0,
        buffer1_1_48_8x8_p_V_6_we0,
        buffer1_1_48_8x8_p_V_6_d0,
        buffer1_1_48_8x8_p_V_6_q0,
        buffer1_1_48_8x8_p_V_6_address1,
        buffer1_1_48_8x8_p_V_6_ce1,
        buffer1_1_48_8x8_p_V_6_we1,
        buffer1_1_48_8x8_p_V_6_d1,
        buffer1_1_48_8x8_p_V_7_address0,
        buffer1_1_48_8x8_p_V_7_ce0,
        buffer1_1_48_8x8_p_V_7_we0,
        buffer1_1_48_8x8_p_V_7_d0,
        buffer1_1_48_8x8_p_V_7_q0,
        buffer1_1_48_8x8_p_V_7_address1,
        buffer1_1_48_8x8_p_V_7_ce1,
        buffer1_1_48_8x8_p_V_7_we1,
        buffer1_1_48_8x8_p_V_7_d1,
        buffer1_1_48_8x8_p_V_8_address0,
        buffer1_1_48_8x8_p_V_8_ce0,
        buffer1_1_48_8x8_p_V_8_we0,
        buffer1_1_48_8x8_p_V_8_d0,
        buffer1_1_48_8x8_p_V_8_q0,
        buffer1_1_48_8x8_p_V_8_address1,
        buffer1_1_48_8x8_p_V_8_ce1,
        buffer1_1_48_8x8_p_V_8_we1,
        buffer1_1_48_8x8_p_V_8_d1,
        buffer1_1_48_8x8_p_V_9_address0,
        buffer1_1_48_8x8_p_V_9_ce0,
        buffer1_1_48_8x8_p_V_9_we0,
        buffer1_1_48_8x8_p_V_9_d0,
        buffer1_1_48_8x8_p_V_9_q0,
        buffer1_1_48_8x8_p_V_9_address1,
        buffer1_1_48_8x8_p_V_9_ce1,
        buffer1_1_48_8x8_p_V_9_we1,
        buffer1_1_48_8x8_p_V_9_d1,
        buffer1_1_48_8x8_p_V_10_address0,
        buffer1_1_48_8x8_p_V_10_ce0,
        buffer1_1_48_8x8_p_V_10_we0,
        buffer1_1_48_8x8_p_V_10_d0,
        buffer1_1_48_8x8_p_V_10_q0,
        buffer1_1_48_8x8_p_V_10_address1,
        buffer1_1_48_8x8_p_V_10_ce1,
        buffer1_1_48_8x8_p_V_10_we1,
        buffer1_1_48_8x8_p_V_10_d1,
        buffer1_1_48_8x8_p_V_11_address0,
        buffer1_1_48_8x8_p_V_11_ce0,
        buffer1_1_48_8x8_p_V_11_we0,
        buffer1_1_48_8x8_p_V_11_d0,
        buffer1_1_48_8x8_p_V_11_q0,
        buffer1_1_48_8x8_p_V_11_address1,
        buffer1_1_48_8x8_p_V_11_ce1,
        buffer1_1_48_8x8_p_V_11_we1,
        buffer1_1_48_8x8_p_V_11_d1,
        buffer1_1_48_8x8_p_V_12_address0,
        buffer1_1_48_8x8_p_V_12_ce0,
        buffer1_1_48_8x8_p_V_12_we0,
        buffer1_1_48_8x8_p_V_12_d0,
        buffer1_1_48_8x8_p_V_12_q0,
        buffer1_1_48_8x8_p_V_12_address1,
        buffer1_1_48_8x8_p_V_12_ce1,
        buffer1_1_48_8x8_p_V_12_we1,
        buffer1_1_48_8x8_p_V_12_d1,
        buffer1_1_48_8x8_p_V_13_address0,
        buffer1_1_48_8x8_p_V_13_ce0,
        buffer1_1_48_8x8_p_V_13_we0,
        buffer1_1_48_8x8_p_V_13_d0,
        buffer1_1_48_8x8_p_V_13_q0,
        buffer1_1_48_8x8_p_V_13_address1,
        buffer1_1_48_8x8_p_V_13_ce1,
        buffer1_1_48_8x8_p_V_13_we1,
        buffer1_1_48_8x8_p_V_13_d1,
        buffer1_1_48_8x8_p_V_14_address0,
        buffer1_1_48_8x8_p_V_14_ce0,
        buffer1_1_48_8x8_p_V_14_we0,
        buffer1_1_48_8x8_p_V_14_d0,
        buffer1_1_48_8x8_p_V_14_q0,
        buffer1_1_48_8x8_p_V_14_address1,
        buffer1_1_48_8x8_p_V_14_ce1,
        buffer1_1_48_8x8_p_V_14_we1,
        buffer1_1_48_8x8_p_V_14_d1,
        buffer1_1_48_8x8_p_V_15_address0,
        buffer1_1_48_8x8_p_V_15_ce0,
        buffer1_1_48_8x8_p_V_15_we0,
        buffer1_1_48_8x8_p_V_15_d0,
        buffer1_1_48_8x8_p_V_15_q0,
        buffer1_1_48_8x8_p_V_15_address1,
        buffer1_1_48_8x8_p_V_15_ce1,
        buffer1_1_48_8x8_p_V_15_we1,
        buffer1_1_48_8x8_p_V_15_d1,
        buffer1_1_48_8x8_p_V_16_address0,
        buffer1_1_48_8x8_p_V_16_ce0,
        buffer1_1_48_8x8_p_V_16_we0,
        buffer1_1_48_8x8_p_V_16_d0,
        buffer1_1_48_8x8_p_V_16_q0,
        buffer1_1_48_8x8_p_V_16_address1,
        buffer1_1_48_8x8_p_V_16_ce1,
        buffer1_1_48_8x8_p_V_16_we1,
        buffer1_1_48_8x8_p_V_16_d1,
        buffer1_1_48_8x8_p_V_17_address0,
        buffer1_1_48_8x8_p_V_17_ce0,
        buffer1_1_48_8x8_p_V_17_we0,
        buffer1_1_48_8x8_p_V_17_d0,
        buffer1_1_48_8x8_p_V_17_q0,
        buffer1_1_48_8x8_p_V_17_address1,
        buffer1_1_48_8x8_p_V_17_ce1,
        buffer1_1_48_8x8_p_V_17_we1,
        buffer1_1_48_8x8_p_V_17_d1,
        buffer1_1_48_8x8_p_V_18_address0,
        buffer1_1_48_8x8_p_V_18_ce0,
        buffer1_1_48_8x8_p_V_18_we0,
        buffer1_1_48_8x8_p_V_18_d0,
        buffer1_1_48_8x8_p_V_18_q0,
        buffer1_1_48_8x8_p_V_18_address1,
        buffer1_1_48_8x8_p_V_18_ce1,
        buffer1_1_48_8x8_p_V_18_we1,
        buffer1_1_48_8x8_p_V_18_d1,
        buffer1_1_48_8x8_p_V_19_address0,
        buffer1_1_48_8x8_p_V_19_ce0,
        buffer1_1_48_8x8_p_V_19_we0,
        buffer1_1_48_8x8_p_V_19_d0,
        buffer1_1_48_8x8_p_V_19_q0,
        buffer1_1_48_8x8_p_V_19_address1,
        buffer1_1_48_8x8_p_V_19_ce1,
        buffer1_1_48_8x8_p_V_19_we1,
        buffer1_1_48_8x8_p_V_19_d1,
        buffer1_1_48_8x8_p_V_20_address0,
        buffer1_1_48_8x8_p_V_20_ce0,
        buffer1_1_48_8x8_p_V_20_we0,
        buffer1_1_48_8x8_p_V_20_d0,
        buffer1_1_48_8x8_p_V_20_q0,
        buffer1_1_48_8x8_p_V_20_address1,
        buffer1_1_48_8x8_p_V_20_ce1,
        buffer1_1_48_8x8_p_V_20_we1,
        buffer1_1_48_8x8_p_V_20_d1,
        buffer1_1_48_8x8_p_V_21_address0,
        buffer1_1_48_8x8_p_V_21_ce0,
        buffer1_1_48_8x8_p_V_21_we0,
        buffer1_1_48_8x8_p_V_21_d0,
        buffer1_1_48_8x8_p_V_21_q0,
        buffer1_1_48_8x8_p_V_21_address1,
        buffer1_1_48_8x8_p_V_21_ce1,
        buffer1_1_48_8x8_p_V_21_we1,
        buffer1_1_48_8x8_p_V_21_d1,
        buffer1_1_48_8x8_p_V_22_address0,
        buffer1_1_48_8x8_p_V_22_ce0,
        buffer1_1_48_8x8_p_V_22_we0,
        buffer1_1_48_8x8_p_V_22_d0,
        buffer1_1_48_8x8_p_V_22_q0,
        buffer1_1_48_8x8_p_V_22_address1,
        buffer1_1_48_8x8_p_V_22_ce1,
        buffer1_1_48_8x8_p_V_22_we1,
        buffer1_1_48_8x8_p_V_22_d1,
        buffer1_1_48_8x8_p_V_23_address0,
        buffer1_1_48_8x8_p_V_23_ce0,
        buffer1_1_48_8x8_p_V_23_we0,
        buffer1_1_48_8x8_p_V_23_d0,
        buffer1_1_48_8x8_p_V_23_q0,
        buffer1_1_48_8x8_p_V_23_address1,
        buffer1_1_48_8x8_p_V_23_ce1,
        buffer1_1_48_8x8_p_V_23_we1,
        buffer1_1_48_8x8_p_V_23_d1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_state13 = 17'd4;
parameter    ap_ST_fsm_state14 = 17'd8;
parameter    ap_ST_fsm_state15 = 17'd16;
parameter    ap_ST_fsm_state16 = 17'd32;
parameter    ap_ST_fsm_state17 = 17'd64;
parameter    ap_ST_fsm_state18 = 17'd128;
parameter    ap_ST_fsm_state19 = 17'd256;
parameter    ap_ST_fsm_state20 = 17'd512;
parameter    ap_ST_fsm_state21 = 17'd1024;
parameter    ap_ST_fsm_state22 = 17'd2048;
parameter    ap_ST_fsm_state23 = 17'd4096;
parameter    ap_ST_fsm_state24 = 17'd8192;
parameter    ap_ST_fsm_state25 = 17'd16384;
parameter    ap_ST_fsm_pp1_stage0 = 17'd32768;
parameter    ap_ST_fsm_state37 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_0_V_address1;
output   weight_0_V_ce1;
input  [7:0] weight_0_V_q1;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_1_V_address1;
output   weight_1_V_ce1;
input  [7:0] weight_1_V_q1;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_2_V_address1;
output   weight_2_V_ce1;
input  [7:0] weight_2_V_q1;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_3_V_address1;
output   weight_3_V_ce1;
input  [7:0] weight_3_V_q1;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_4_V_address1;
output   weight_4_V_ce1;
input  [7:0] weight_4_V_q1;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_5_V_address1;
output   weight_5_V_ce1;
input  [7:0] weight_5_V_q1;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_6_V_address1;
output   weight_6_V_ce1;
input  [7:0] weight_6_V_q1;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] weight_7_V_address1;
output   weight_7_V_ce1;
input  [7:0] weight_7_V_q1;
output  [6:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [6:0] weight_8_V_address1;
output   weight_8_V_ce1;
input  [7:0] weight_8_V_q1;
output  [6:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [6:0] weight_9_V_address1;
output   weight_9_V_ce1;
input  [7:0] weight_9_V_q1;
output  [6:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [6:0] weight_10_V_address1;
output   weight_10_V_ce1;
input  [7:0] weight_10_V_q1;
output  [6:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [6:0] weight_11_V_address1;
output   weight_11_V_ce1;
input  [7:0] weight_11_V_q1;
output  [6:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [6:0] weight_12_V_address1;
output   weight_12_V_ce1;
input  [7:0] weight_12_V_q1;
output  [6:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [6:0] weight_13_V_address1;
output   weight_13_V_ce1;
input  [7:0] weight_13_V_q1;
output  [6:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [6:0] weight_14_V_address1;
output   weight_14_V_ce1;
input  [7:0] weight_14_V_q1;
output  [6:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [6:0] weight_15_V_address1;
output   weight_15_V_ce1;
input  [7:0] weight_15_V_q1;
output  [6:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [6:0] weight_16_V_address1;
output   weight_16_V_ce1;
input  [7:0] weight_16_V_q1;
output  [6:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [6:0] weight_17_V_address1;
output   weight_17_V_ce1;
input  [7:0] weight_17_V_q1;
output  [6:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [6:0] weight_18_V_address1;
output   weight_18_V_ce1;
input  [7:0] weight_18_V_q1;
output  [6:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [6:0] weight_19_V_address1;
output   weight_19_V_ce1;
input  [7:0] weight_19_V_q1;
output  [6:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [6:0] weight_20_V_address1;
output   weight_20_V_ce1;
input  [7:0] weight_20_V_q1;
output  [6:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [6:0] weight_21_V_address1;
output   weight_21_V_ce1;
input  [7:0] weight_21_V_q1;
output  [6:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [6:0] weight_22_V_address1;
output   weight_22_V_ce1;
input  [7:0] weight_22_V_q1;
output  [6:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [6:0] weight_23_V_address1;
output   weight_23_V_ce1;
input  [7:0] weight_23_V_q1;
output  [5:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [7:0] buffer1_1_48_8x8_p_V_24_address0;
output   buffer1_1_48_8x8_p_V_24_ce0;
output   buffer1_1_48_8x8_p_V_24_we0;
output  [7:0] buffer1_1_48_8x8_p_V_24_d0;
input  [7:0] buffer1_1_48_8x8_p_V_24_q0;
output  [7:0] buffer1_1_48_8x8_p_V_24_address1;
output   buffer1_1_48_8x8_p_V_24_ce1;
output   buffer1_1_48_8x8_p_V_24_we1;
output  [7:0] buffer1_1_48_8x8_p_V_24_d1;
output  [7:0] buffer1_1_48_8x8_p_V_1_address0;
output   buffer1_1_48_8x8_p_V_1_ce0;
output   buffer1_1_48_8x8_p_V_1_we0;
output  [7:0] buffer1_1_48_8x8_p_V_1_d0;
input  [7:0] buffer1_1_48_8x8_p_V_1_q0;
output  [7:0] buffer1_1_48_8x8_p_V_1_address1;
output   buffer1_1_48_8x8_p_V_1_ce1;
output   buffer1_1_48_8x8_p_V_1_we1;
output  [7:0] buffer1_1_48_8x8_p_V_1_d1;
output  [7:0] buffer1_1_48_8x8_p_V_2_address0;
output   buffer1_1_48_8x8_p_V_2_ce0;
output   buffer1_1_48_8x8_p_V_2_we0;
output  [7:0] buffer1_1_48_8x8_p_V_2_d0;
input  [7:0] buffer1_1_48_8x8_p_V_2_q0;
output  [7:0] buffer1_1_48_8x8_p_V_2_address1;
output   buffer1_1_48_8x8_p_V_2_ce1;
output   buffer1_1_48_8x8_p_V_2_we1;
output  [7:0] buffer1_1_48_8x8_p_V_2_d1;
output  [7:0] buffer1_1_48_8x8_p_V_3_address0;
output   buffer1_1_48_8x8_p_V_3_ce0;
output   buffer1_1_48_8x8_p_V_3_we0;
output  [7:0] buffer1_1_48_8x8_p_V_3_d0;
input  [7:0] buffer1_1_48_8x8_p_V_3_q0;
output  [7:0] buffer1_1_48_8x8_p_V_3_address1;
output   buffer1_1_48_8x8_p_V_3_ce1;
output   buffer1_1_48_8x8_p_V_3_we1;
output  [7:0] buffer1_1_48_8x8_p_V_3_d1;
output  [7:0] buffer1_1_48_8x8_p_V_4_address0;
output   buffer1_1_48_8x8_p_V_4_ce0;
output   buffer1_1_48_8x8_p_V_4_we0;
output  [7:0] buffer1_1_48_8x8_p_V_4_d0;
input  [7:0] buffer1_1_48_8x8_p_V_4_q0;
output  [7:0] buffer1_1_48_8x8_p_V_4_address1;
output   buffer1_1_48_8x8_p_V_4_ce1;
output   buffer1_1_48_8x8_p_V_4_we1;
output  [7:0] buffer1_1_48_8x8_p_V_4_d1;
output  [7:0] buffer1_1_48_8x8_p_V_5_address0;
output   buffer1_1_48_8x8_p_V_5_ce0;
output   buffer1_1_48_8x8_p_V_5_we0;
output  [7:0] buffer1_1_48_8x8_p_V_5_d0;
input  [7:0] buffer1_1_48_8x8_p_V_5_q0;
output  [7:0] buffer1_1_48_8x8_p_V_5_address1;
output   buffer1_1_48_8x8_p_V_5_ce1;
output   buffer1_1_48_8x8_p_V_5_we1;
output  [7:0] buffer1_1_48_8x8_p_V_5_d1;
output  [7:0] buffer1_1_48_8x8_p_V_6_address0;
output   buffer1_1_48_8x8_p_V_6_ce0;
output   buffer1_1_48_8x8_p_V_6_we0;
output  [7:0] buffer1_1_48_8x8_p_V_6_d0;
input  [7:0] buffer1_1_48_8x8_p_V_6_q0;
output  [7:0] buffer1_1_48_8x8_p_V_6_address1;
output   buffer1_1_48_8x8_p_V_6_ce1;
output   buffer1_1_48_8x8_p_V_6_we1;
output  [7:0] buffer1_1_48_8x8_p_V_6_d1;
output  [7:0] buffer1_1_48_8x8_p_V_7_address0;
output   buffer1_1_48_8x8_p_V_7_ce0;
output   buffer1_1_48_8x8_p_V_7_we0;
output  [7:0] buffer1_1_48_8x8_p_V_7_d0;
input  [7:0] buffer1_1_48_8x8_p_V_7_q0;
output  [7:0] buffer1_1_48_8x8_p_V_7_address1;
output   buffer1_1_48_8x8_p_V_7_ce1;
output   buffer1_1_48_8x8_p_V_7_we1;
output  [7:0] buffer1_1_48_8x8_p_V_7_d1;
output  [7:0] buffer1_1_48_8x8_p_V_8_address0;
output   buffer1_1_48_8x8_p_V_8_ce0;
output   buffer1_1_48_8x8_p_V_8_we0;
output  [7:0] buffer1_1_48_8x8_p_V_8_d0;
input  [7:0] buffer1_1_48_8x8_p_V_8_q0;
output  [7:0] buffer1_1_48_8x8_p_V_8_address1;
output   buffer1_1_48_8x8_p_V_8_ce1;
output   buffer1_1_48_8x8_p_V_8_we1;
output  [7:0] buffer1_1_48_8x8_p_V_8_d1;
output  [7:0] buffer1_1_48_8x8_p_V_9_address0;
output   buffer1_1_48_8x8_p_V_9_ce0;
output   buffer1_1_48_8x8_p_V_9_we0;
output  [7:0] buffer1_1_48_8x8_p_V_9_d0;
input  [7:0] buffer1_1_48_8x8_p_V_9_q0;
output  [7:0] buffer1_1_48_8x8_p_V_9_address1;
output   buffer1_1_48_8x8_p_V_9_ce1;
output   buffer1_1_48_8x8_p_V_9_we1;
output  [7:0] buffer1_1_48_8x8_p_V_9_d1;
output  [7:0] buffer1_1_48_8x8_p_V_10_address0;
output   buffer1_1_48_8x8_p_V_10_ce0;
output   buffer1_1_48_8x8_p_V_10_we0;
output  [7:0] buffer1_1_48_8x8_p_V_10_d0;
input  [7:0] buffer1_1_48_8x8_p_V_10_q0;
output  [7:0] buffer1_1_48_8x8_p_V_10_address1;
output   buffer1_1_48_8x8_p_V_10_ce1;
output   buffer1_1_48_8x8_p_V_10_we1;
output  [7:0] buffer1_1_48_8x8_p_V_10_d1;
output  [7:0] buffer1_1_48_8x8_p_V_11_address0;
output   buffer1_1_48_8x8_p_V_11_ce0;
output   buffer1_1_48_8x8_p_V_11_we0;
output  [7:0] buffer1_1_48_8x8_p_V_11_d0;
input  [7:0] buffer1_1_48_8x8_p_V_11_q0;
output  [7:0] buffer1_1_48_8x8_p_V_11_address1;
output   buffer1_1_48_8x8_p_V_11_ce1;
output   buffer1_1_48_8x8_p_V_11_we1;
output  [7:0] buffer1_1_48_8x8_p_V_11_d1;
output  [7:0] buffer1_1_48_8x8_p_V_12_address0;
output   buffer1_1_48_8x8_p_V_12_ce0;
output   buffer1_1_48_8x8_p_V_12_we0;
output  [7:0] buffer1_1_48_8x8_p_V_12_d0;
input  [7:0] buffer1_1_48_8x8_p_V_12_q0;
output  [7:0] buffer1_1_48_8x8_p_V_12_address1;
output   buffer1_1_48_8x8_p_V_12_ce1;
output   buffer1_1_48_8x8_p_V_12_we1;
output  [7:0] buffer1_1_48_8x8_p_V_12_d1;
output  [7:0] buffer1_1_48_8x8_p_V_13_address0;
output   buffer1_1_48_8x8_p_V_13_ce0;
output   buffer1_1_48_8x8_p_V_13_we0;
output  [7:0] buffer1_1_48_8x8_p_V_13_d0;
input  [7:0] buffer1_1_48_8x8_p_V_13_q0;
output  [7:0] buffer1_1_48_8x8_p_V_13_address1;
output   buffer1_1_48_8x8_p_V_13_ce1;
output   buffer1_1_48_8x8_p_V_13_we1;
output  [7:0] buffer1_1_48_8x8_p_V_13_d1;
output  [7:0] buffer1_1_48_8x8_p_V_14_address0;
output   buffer1_1_48_8x8_p_V_14_ce0;
output   buffer1_1_48_8x8_p_V_14_we0;
output  [7:0] buffer1_1_48_8x8_p_V_14_d0;
input  [7:0] buffer1_1_48_8x8_p_V_14_q0;
output  [7:0] buffer1_1_48_8x8_p_V_14_address1;
output   buffer1_1_48_8x8_p_V_14_ce1;
output   buffer1_1_48_8x8_p_V_14_we1;
output  [7:0] buffer1_1_48_8x8_p_V_14_d1;
output  [7:0] buffer1_1_48_8x8_p_V_15_address0;
output   buffer1_1_48_8x8_p_V_15_ce0;
output   buffer1_1_48_8x8_p_V_15_we0;
output  [7:0] buffer1_1_48_8x8_p_V_15_d0;
input  [7:0] buffer1_1_48_8x8_p_V_15_q0;
output  [7:0] buffer1_1_48_8x8_p_V_15_address1;
output   buffer1_1_48_8x8_p_V_15_ce1;
output   buffer1_1_48_8x8_p_V_15_we1;
output  [7:0] buffer1_1_48_8x8_p_V_15_d1;
output  [7:0] buffer1_1_48_8x8_p_V_16_address0;
output   buffer1_1_48_8x8_p_V_16_ce0;
output   buffer1_1_48_8x8_p_V_16_we0;
output  [7:0] buffer1_1_48_8x8_p_V_16_d0;
input  [7:0] buffer1_1_48_8x8_p_V_16_q0;
output  [7:0] buffer1_1_48_8x8_p_V_16_address1;
output   buffer1_1_48_8x8_p_V_16_ce1;
output   buffer1_1_48_8x8_p_V_16_we1;
output  [7:0] buffer1_1_48_8x8_p_V_16_d1;
output  [7:0] buffer1_1_48_8x8_p_V_17_address0;
output   buffer1_1_48_8x8_p_V_17_ce0;
output   buffer1_1_48_8x8_p_V_17_we0;
output  [7:0] buffer1_1_48_8x8_p_V_17_d0;
input  [7:0] buffer1_1_48_8x8_p_V_17_q0;
output  [7:0] buffer1_1_48_8x8_p_V_17_address1;
output   buffer1_1_48_8x8_p_V_17_ce1;
output   buffer1_1_48_8x8_p_V_17_we1;
output  [7:0] buffer1_1_48_8x8_p_V_17_d1;
output  [7:0] buffer1_1_48_8x8_p_V_18_address0;
output   buffer1_1_48_8x8_p_V_18_ce0;
output   buffer1_1_48_8x8_p_V_18_we0;
output  [7:0] buffer1_1_48_8x8_p_V_18_d0;
input  [7:0] buffer1_1_48_8x8_p_V_18_q0;
output  [7:0] buffer1_1_48_8x8_p_V_18_address1;
output   buffer1_1_48_8x8_p_V_18_ce1;
output   buffer1_1_48_8x8_p_V_18_we1;
output  [7:0] buffer1_1_48_8x8_p_V_18_d1;
output  [7:0] buffer1_1_48_8x8_p_V_19_address0;
output   buffer1_1_48_8x8_p_V_19_ce0;
output   buffer1_1_48_8x8_p_V_19_we0;
output  [7:0] buffer1_1_48_8x8_p_V_19_d0;
input  [7:0] buffer1_1_48_8x8_p_V_19_q0;
output  [7:0] buffer1_1_48_8x8_p_V_19_address1;
output   buffer1_1_48_8x8_p_V_19_ce1;
output   buffer1_1_48_8x8_p_V_19_we1;
output  [7:0] buffer1_1_48_8x8_p_V_19_d1;
output  [7:0] buffer1_1_48_8x8_p_V_20_address0;
output   buffer1_1_48_8x8_p_V_20_ce0;
output   buffer1_1_48_8x8_p_V_20_we0;
output  [7:0] buffer1_1_48_8x8_p_V_20_d0;
input  [7:0] buffer1_1_48_8x8_p_V_20_q0;
output  [7:0] buffer1_1_48_8x8_p_V_20_address1;
output   buffer1_1_48_8x8_p_V_20_ce1;
output   buffer1_1_48_8x8_p_V_20_we1;
output  [7:0] buffer1_1_48_8x8_p_V_20_d1;
output  [7:0] buffer1_1_48_8x8_p_V_21_address0;
output   buffer1_1_48_8x8_p_V_21_ce0;
output   buffer1_1_48_8x8_p_V_21_we0;
output  [7:0] buffer1_1_48_8x8_p_V_21_d0;
input  [7:0] buffer1_1_48_8x8_p_V_21_q0;
output  [7:0] buffer1_1_48_8x8_p_V_21_address1;
output   buffer1_1_48_8x8_p_V_21_ce1;
output   buffer1_1_48_8x8_p_V_21_we1;
output  [7:0] buffer1_1_48_8x8_p_V_21_d1;
output  [7:0] buffer1_1_48_8x8_p_V_22_address0;
output   buffer1_1_48_8x8_p_V_22_ce0;
output   buffer1_1_48_8x8_p_V_22_we0;
output  [7:0] buffer1_1_48_8x8_p_V_22_d0;
input  [7:0] buffer1_1_48_8x8_p_V_22_q0;
output  [7:0] buffer1_1_48_8x8_p_V_22_address1;
output   buffer1_1_48_8x8_p_V_22_ce1;
output   buffer1_1_48_8x8_p_V_22_we1;
output  [7:0] buffer1_1_48_8x8_p_V_22_d1;
output  [7:0] buffer1_1_48_8x8_p_V_23_address0;
output   buffer1_1_48_8x8_p_V_23_ce0;
output   buffer1_1_48_8x8_p_V_23_we0;
output  [7:0] buffer1_1_48_8x8_p_V_23_d0;
input  [7:0] buffer1_1_48_8x8_p_V_23_q0;
output  [7:0] buffer1_1_48_8x8_p_V_23_address1;
output   buffer1_1_48_8x8_p_V_23_ce1;
output   buffer1_1_48_8x8_p_V_23_we1;
output  [7:0] buffer1_1_48_8x8_p_V_23_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_0_V_ce1;
reg weight_1_V_ce0;
reg weight_1_V_ce1;
reg weight_2_V_ce0;
reg weight_2_V_ce1;
reg weight_3_V_ce0;
reg weight_3_V_ce1;
reg weight_4_V_ce0;
reg weight_4_V_ce1;
reg weight_5_V_ce0;
reg weight_5_V_ce1;
reg weight_6_V_ce0;
reg weight_6_V_ce1;
reg weight_7_V_ce0;
reg weight_7_V_ce1;
reg weight_8_V_ce0;
reg weight_8_V_ce1;
reg weight_9_V_ce0;
reg weight_9_V_ce1;
reg weight_10_V_ce0;
reg weight_10_V_ce1;
reg weight_11_V_ce0;
reg weight_11_V_ce1;
reg weight_12_V_ce0;
reg weight_12_V_ce1;
reg weight_13_V_ce0;
reg weight_13_V_ce1;
reg weight_14_V_ce0;
reg weight_14_V_ce1;
reg weight_15_V_ce0;
reg weight_15_V_ce1;
reg weight_16_V_ce0;
reg weight_16_V_ce1;
reg weight_17_V_ce0;
reg weight_17_V_ce1;
reg weight_18_V_ce0;
reg weight_18_V_ce1;
reg weight_19_V_ce0;
reg weight_19_V_ce1;
reg weight_20_V_ce0;
reg weight_20_V_ce1;
reg weight_21_V_ce0;
reg weight_21_V_ce1;
reg weight_22_V_ce0;
reg weight_22_V_ce1;
reg weight_23_V_ce0;
reg weight_23_V_ce1;
reg bias_V_ce0;
reg[7:0] buffer1_1_48_8x8_p_V_24_address0;
reg buffer1_1_48_8x8_p_V_24_ce0;
reg buffer1_1_48_8x8_p_V_24_we0;
reg[7:0] buffer1_1_48_8x8_p_V_24_d0;
reg buffer1_1_48_8x8_p_V_24_ce1;
reg buffer1_1_48_8x8_p_V_24_we1;
reg[7:0] buffer1_1_48_8x8_p_V_1_address0;
reg buffer1_1_48_8x8_p_V_1_ce0;
reg buffer1_1_48_8x8_p_V_1_we0;
reg[7:0] buffer1_1_48_8x8_p_V_1_d0;
reg buffer1_1_48_8x8_p_V_1_ce1;
reg buffer1_1_48_8x8_p_V_1_we1;
reg[7:0] buffer1_1_48_8x8_p_V_2_address0;
reg buffer1_1_48_8x8_p_V_2_ce0;
reg buffer1_1_48_8x8_p_V_2_we0;
reg[7:0] buffer1_1_48_8x8_p_V_2_d0;
reg buffer1_1_48_8x8_p_V_2_ce1;
reg buffer1_1_48_8x8_p_V_2_we1;
reg[7:0] buffer1_1_48_8x8_p_V_3_address0;
reg buffer1_1_48_8x8_p_V_3_ce0;
reg buffer1_1_48_8x8_p_V_3_we0;
reg[7:0] buffer1_1_48_8x8_p_V_3_d0;
reg buffer1_1_48_8x8_p_V_3_ce1;
reg buffer1_1_48_8x8_p_V_3_we1;
reg[7:0] buffer1_1_48_8x8_p_V_4_address0;
reg buffer1_1_48_8x8_p_V_4_ce0;
reg buffer1_1_48_8x8_p_V_4_we0;
reg[7:0] buffer1_1_48_8x8_p_V_4_d0;
reg buffer1_1_48_8x8_p_V_4_ce1;
reg buffer1_1_48_8x8_p_V_4_we1;
reg[7:0] buffer1_1_48_8x8_p_V_5_address0;
reg buffer1_1_48_8x8_p_V_5_ce0;
reg buffer1_1_48_8x8_p_V_5_we0;
reg[7:0] buffer1_1_48_8x8_p_V_5_d0;
reg buffer1_1_48_8x8_p_V_5_ce1;
reg buffer1_1_48_8x8_p_V_5_we1;
reg[7:0] buffer1_1_48_8x8_p_V_6_address0;
reg buffer1_1_48_8x8_p_V_6_ce0;
reg buffer1_1_48_8x8_p_V_6_we0;
reg[7:0] buffer1_1_48_8x8_p_V_6_d0;
reg buffer1_1_48_8x8_p_V_6_ce1;
reg buffer1_1_48_8x8_p_V_6_we1;
reg[7:0] buffer1_1_48_8x8_p_V_7_address0;
reg buffer1_1_48_8x8_p_V_7_ce0;
reg buffer1_1_48_8x8_p_V_7_we0;
reg[7:0] buffer1_1_48_8x8_p_V_7_d0;
reg buffer1_1_48_8x8_p_V_7_ce1;
reg buffer1_1_48_8x8_p_V_7_we1;
reg[7:0] buffer1_1_48_8x8_p_V_8_address0;
reg buffer1_1_48_8x8_p_V_8_ce0;
reg buffer1_1_48_8x8_p_V_8_we0;
reg[7:0] buffer1_1_48_8x8_p_V_8_d0;
reg buffer1_1_48_8x8_p_V_8_ce1;
reg buffer1_1_48_8x8_p_V_8_we1;
reg[7:0] buffer1_1_48_8x8_p_V_9_address0;
reg buffer1_1_48_8x8_p_V_9_ce0;
reg buffer1_1_48_8x8_p_V_9_we0;
reg[7:0] buffer1_1_48_8x8_p_V_9_d0;
reg buffer1_1_48_8x8_p_V_9_ce1;
reg buffer1_1_48_8x8_p_V_9_we1;
reg[7:0] buffer1_1_48_8x8_p_V_10_address0;
reg buffer1_1_48_8x8_p_V_10_ce0;
reg buffer1_1_48_8x8_p_V_10_we0;
reg[7:0] buffer1_1_48_8x8_p_V_10_d0;
reg buffer1_1_48_8x8_p_V_10_ce1;
reg buffer1_1_48_8x8_p_V_10_we1;
reg[7:0] buffer1_1_48_8x8_p_V_11_address0;
reg buffer1_1_48_8x8_p_V_11_ce0;
reg buffer1_1_48_8x8_p_V_11_we0;
reg[7:0] buffer1_1_48_8x8_p_V_11_d0;
reg buffer1_1_48_8x8_p_V_11_ce1;
reg buffer1_1_48_8x8_p_V_11_we1;
reg[7:0] buffer1_1_48_8x8_p_V_12_address0;
reg buffer1_1_48_8x8_p_V_12_ce0;
reg buffer1_1_48_8x8_p_V_12_we0;
reg[7:0] buffer1_1_48_8x8_p_V_12_d0;
reg buffer1_1_48_8x8_p_V_12_ce1;
reg buffer1_1_48_8x8_p_V_12_we1;
reg[7:0] buffer1_1_48_8x8_p_V_13_address0;
reg buffer1_1_48_8x8_p_V_13_ce0;
reg buffer1_1_48_8x8_p_V_13_we0;
reg[7:0] buffer1_1_48_8x8_p_V_13_d0;
reg buffer1_1_48_8x8_p_V_13_ce1;
reg buffer1_1_48_8x8_p_V_13_we1;
reg[7:0] buffer1_1_48_8x8_p_V_14_address0;
reg buffer1_1_48_8x8_p_V_14_ce0;
reg buffer1_1_48_8x8_p_V_14_we0;
reg[7:0] buffer1_1_48_8x8_p_V_14_d0;
reg buffer1_1_48_8x8_p_V_14_ce1;
reg buffer1_1_48_8x8_p_V_14_we1;
reg[7:0] buffer1_1_48_8x8_p_V_15_address0;
reg buffer1_1_48_8x8_p_V_15_ce0;
reg buffer1_1_48_8x8_p_V_15_we0;
reg[7:0] buffer1_1_48_8x8_p_V_15_d0;
reg buffer1_1_48_8x8_p_V_15_ce1;
reg buffer1_1_48_8x8_p_V_15_we1;
reg[7:0] buffer1_1_48_8x8_p_V_16_address0;
reg buffer1_1_48_8x8_p_V_16_ce0;
reg buffer1_1_48_8x8_p_V_16_we0;
reg[7:0] buffer1_1_48_8x8_p_V_16_d0;
reg buffer1_1_48_8x8_p_V_16_ce1;
reg buffer1_1_48_8x8_p_V_16_we1;
reg[7:0] buffer1_1_48_8x8_p_V_17_address0;
reg buffer1_1_48_8x8_p_V_17_ce0;
reg buffer1_1_48_8x8_p_V_17_we0;
reg[7:0] buffer1_1_48_8x8_p_V_17_d0;
reg buffer1_1_48_8x8_p_V_17_ce1;
reg buffer1_1_48_8x8_p_V_17_we1;
reg[7:0] buffer1_1_48_8x8_p_V_18_address0;
reg buffer1_1_48_8x8_p_V_18_ce0;
reg buffer1_1_48_8x8_p_V_18_we0;
reg[7:0] buffer1_1_48_8x8_p_V_18_d0;
reg buffer1_1_48_8x8_p_V_18_ce1;
reg buffer1_1_48_8x8_p_V_18_we1;
reg[7:0] buffer1_1_48_8x8_p_V_19_address0;
reg buffer1_1_48_8x8_p_V_19_ce0;
reg buffer1_1_48_8x8_p_V_19_we0;
reg[7:0] buffer1_1_48_8x8_p_V_19_d0;
reg buffer1_1_48_8x8_p_V_19_ce1;
reg buffer1_1_48_8x8_p_V_19_we1;
reg[7:0] buffer1_1_48_8x8_p_V_20_address0;
reg buffer1_1_48_8x8_p_V_20_ce0;
reg buffer1_1_48_8x8_p_V_20_we0;
reg[7:0] buffer1_1_48_8x8_p_V_20_d0;
reg buffer1_1_48_8x8_p_V_20_ce1;
reg buffer1_1_48_8x8_p_V_20_we1;
reg[7:0] buffer1_1_48_8x8_p_V_21_address0;
reg buffer1_1_48_8x8_p_V_21_ce0;
reg buffer1_1_48_8x8_p_V_21_we0;
reg[7:0] buffer1_1_48_8x8_p_V_21_d0;
reg buffer1_1_48_8x8_p_V_21_ce1;
reg buffer1_1_48_8x8_p_V_21_we1;
reg[7:0] buffer1_1_48_8x8_p_V_22_address0;
reg buffer1_1_48_8x8_p_V_22_ce0;
reg buffer1_1_48_8x8_p_V_22_we0;
reg[7:0] buffer1_1_48_8x8_p_V_22_d0;
reg buffer1_1_48_8x8_p_V_22_ce1;
reg buffer1_1_48_8x8_p_V_22_we1;
reg[7:0] buffer1_1_48_8x8_p_V_23_address0;
reg buffer1_1_48_8x8_p_V_23_ce0;
reg buffer1_1_48_8x8_p_V_23_we0;
reg[7:0] buffer1_1_48_8x8_p_V_23_d0;
reg buffer1_1_48_8x8_p_V_23_ce1;
reg buffer1_1_48_8x8_p_V_23_we1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] indvar_flatten4_reg_1699;
reg   [5:0] co_reg_1710;
reg   [7:0] indvar_flatten_reg_1722;
reg   [3:0] h_reg_1733;
reg   [3:0] w_reg_1745;
reg   [11:0] indvar_flatten5_reg_1792;
reg   [5:0] co4_reg_1803;
reg   [7:0] indvar_flatten6_reg_1814;
reg   [3:0] h5_reg_1825;
reg   [3:0] w6_reg_1837;
wire   [0:0] exitcond_flatten4_fu_2065_p2;
reg   [0:0] exitcond_flatten4_reg_3556;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten4_reg_3556;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten4_reg_3556;
wire   [11:0] indvar_flatten_next4_fu_2071_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_2077_p2;
reg   [0:0] exitcond_flatten_reg_3565;
wire   [7:0] indvar_flatten_next_fu_2089_p3;
wire   [5:0] co_cast8_mid2_v_fu_2110_p3;
reg   [5:0] co_cast8_mid2_v_reg_3578;
reg    ap_enable_reg_pp0_iter1;
reg   [5:0] ap_reg_pp0_iter2_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter3_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter4_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter5_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter6_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter7_co_cast8_mid2_v_reg_3578;
reg   [5:0] ap_reg_pp0_iter8_co_cast8_mid2_v_reg_3578;
wire   [3:0] w_mid2_fu_2151_p3;
reg   [3:0] w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter2_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter3_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter4_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter5_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter6_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter7_w_mid2_reg_3586;
reg   [3:0] ap_reg_pp0_iter8_w_mid2_reg_3586;
wire   [3:0] h_cast7_mid2_fu_2159_p3;
reg   [3:0] h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter2_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter3_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter4_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter5_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter6_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter7_h_cast7_mid2_reg_3592;
reg   [3:0] ap_reg_pp0_iter8_h_cast7_mid2_reg_3592;
wire   [3:0] w_15_fu_2167_p2;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] tmp_reg_3603;
wire   [8:0] tmp_275_fu_2273_p2;
reg   [8:0] tmp_275_reg_3609;
wire   [9:0] h1_cast5_cast_fu_2306_p1;
reg   [9:0] h1_cast5_cast_reg_3622;
wire    ap_CS_fsm_state14;
wire   [7:0] tmp_278_fu_2334_p2;
reg   [7:0] tmp_278_reg_3627;
wire   [8:0] tmp_279_fu_2344_p2;
reg   [8:0] tmp_279_reg_3632;
wire   [0:0] exitcond14_fu_2350_p2;
wire   [13:0] w2_cast4_cast1_fu_2356_p1;
reg   [13:0] w2_cast4_cast1_reg_3641;
wire    ap_CS_fsm_state15;
reg   [7:0] buffer1_1_48_8x8_p_V_71_reg_3646;
reg   [7:0] buffer1_1_48_8x8_p_V_72_reg_3651;
reg   [7:0] buffer1_1_48_8x8_p_V_73_reg_3656;
reg   [7:0] buffer1_1_48_8x8_p_V_74_reg_3661;
reg   [7:0] buffer1_1_48_8x8_p_V_75_reg_3666;
reg   [7:0] buffer1_1_48_8x8_p_V_76_reg_3671;
reg   [7:0] buffer1_1_48_8x8_p_V_77_reg_3676;
reg   [7:0] buffer1_1_48_8x8_p_V_78_reg_3681;
reg   [7:0] buffer1_1_48_8x8_p_V_79_reg_3686;
reg   [7:0] buffer1_1_48_8x8_p_V_80_reg_3691;
reg   [7:0] buffer1_1_48_8x8_p_V_81_reg_3696;
reg   [7:0] buffer1_1_48_8x8_p_V_82_reg_3701;
reg   [7:0] buffer1_1_48_8x8_p_V_83_reg_3706;
reg   [7:0] buffer1_1_48_8x8_p_V_84_reg_3711;
reg   [7:0] buffer1_1_48_8x8_p_V_85_reg_3716;
reg   [7:0] buffer1_1_48_8x8_p_V_86_reg_3721;
reg   [7:0] buffer1_1_48_8x8_p_V_87_reg_3726;
reg   [7:0] buffer1_1_48_8x8_p_V_88_reg_3731;
reg   [7:0] buffer1_1_48_8x8_p_V_89_reg_3736;
reg   [7:0] buffer1_1_48_8x8_p_V_90_reg_3741;
reg   [7:0] buffer1_1_48_8x8_p_V_91_reg_3746;
reg   [7:0] buffer1_1_48_8x8_p_V_92_reg_3751;
reg   [7:0] buffer1_1_48_8x8_p_V_93_reg_3756;
reg   [7:0] buffer1_1_48_8x8_p_V_94_reg_3761;
reg   [7:0] buffer1_1_48_8x8_p_V_95_reg_3766;
reg   [7:0] buffer1_1_48_8x8_p_V_96_reg_3771;
reg   [7:0] buffer1_1_48_8x8_p_V_97_reg_3776;
reg   [7:0] buffer1_1_48_8x8_p_V_98_reg_3781;
reg   [7:0] buffer1_1_48_8x8_p_V_99_reg_3786;
reg   [7:0] buffer1_1_48_8x8_p_V_100_reg_3791;
reg   [7:0] buffer1_1_48_8x8_p_V_101_reg_3796;
reg   [7:0] buffer1_1_48_8x8_p_V_102_reg_3801;
reg   [7:0] buffer1_1_48_8x8_p_V_103_reg_3806;
reg   [7:0] buffer1_1_48_8x8_p_V_104_reg_3811;
reg   [7:0] buffer1_1_48_8x8_p_V_105_reg_3816;
reg   [7:0] buffer1_1_48_8x8_p_V_106_reg_3821;
reg   [7:0] buffer1_1_48_8x8_p_V_107_reg_3826;
reg   [7:0] buffer1_1_48_8x8_p_V_108_reg_3831;
reg   [7:0] buffer1_1_48_8x8_p_V_109_reg_3836;
reg   [7:0] buffer1_1_48_8x8_p_V_110_reg_3841;
reg   [7:0] buffer1_1_48_8x8_p_V_111_reg_3846;
reg   [7:0] buffer1_1_48_8x8_p_V_112_reg_3851;
reg   [7:0] buffer1_1_48_8x8_p_V_113_reg_3856;
reg   [7:0] buffer1_1_48_8x8_p_V_114_reg_3861;
reg   [7:0] buffer1_1_48_8x8_p_V_115_reg_3866;
reg   [7:0] buffer1_1_48_8x8_p_V_116_reg_3871;
reg   [7:0] buffer1_1_48_8x8_p_V_117_reg_3876;
reg   [7:0] buffer1_1_48_8x8_p_V_118_reg_3881;
wire   [3:0] h_3_fu_2440_p2;
wire   [0:0] exitcond15_fu_2434_p2;
reg   [12:0] input_V_addr_reg_3894;
wire    ap_CS_fsm_state16;
reg   [6:0] weight_0_V_addr_reg_3899;
reg   [6:0] weight_0_V_addr_4_reg_3904;
reg   [6:0] weight_1_V_addr_reg_3909;
reg   [6:0] weight_1_V_addr_4_reg_3914;
reg   [6:0] weight_2_V_addr_reg_3919;
reg   [6:0] weight_2_V_addr_4_reg_3924;
reg   [6:0] weight_3_V_addr_reg_3929;
reg   [6:0] weight_3_V_addr_4_reg_3934;
reg   [6:0] weight_4_V_addr_reg_3939;
reg   [6:0] weight_4_V_addr_4_reg_3944;
reg   [6:0] weight_5_V_addr_reg_3949;
reg   [6:0] weight_5_V_addr_4_reg_3954;
reg   [6:0] weight_6_V_addr_reg_3959;
reg   [6:0] weight_6_V_addr_4_reg_3964;
reg   [6:0] weight_7_V_addr_reg_3969;
reg   [6:0] weight_7_V_addr_4_reg_3974;
reg   [6:0] weight_8_V_addr_reg_3979;
reg   [6:0] weight_8_V_addr_4_reg_3984;
reg   [6:0] weight_9_V_addr_reg_3989;
reg   [6:0] weight_9_V_addr_4_reg_3994;
reg   [6:0] weight_10_V_addr_reg_3999;
reg   [6:0] weight_10_V_addr_4_reg_4004;
reg   [6:0] weight_11_V_addr_reg_4009;
reg   [6:0] weight_11_V_addr_4_reg_4014;
reg   [6:0] weight_12_V_addr_reg_4019;
reg   [6:0] weight_12_V_addr_4_reg_4024;
reg   [6:0] weight_13_V_addr_reg_4029;
reg   [6:0] weight_13_V_addr_4_reg_4034;
reg   [6:0] weight_14_V_addr_reg_4039;
reg   [6:0] weight_14_V_addr_4_reg_4044;
reg   [6:0] weight_15_V_addr_reg_4049;
reg   [6:0] weight_15_V_addr_4_reg_4054;
reg   [6:0] weight_16_V_addr_reg_4059;
reg   [6:0] weight_16_V_addr_4_reg_4064;
reg   [6:0] weight_17_V_addr_reg_4069;
reg   [6:0] weight_17_V_addr_4_reg_4074;
reg   [6:0] weight_18_V_addr_reg_4079;
reg   [6:0] weight_18_V_addr_4_reg_4084;
reg   [6:0] weight_19_V_addr_reg_4089;
reg   [6:0] weight_19_V_addr_4_reg_4094;
reg   [6:0] weight_20_V_addr_reg_4099;
reg   [6:0] weight_20_V_addr_4_reg_4104;
reg   [6:0] weight_21_V_addr_reg_4109;
reg   [6:0] weight_21_V_addr_4_reg_4114;
reg   [6:0] weight_22_V_addr_reg_4119;
reg   [6:0] weight_22_V_addr_4_reg_4124;
reg   [6:0] weight_23_V_addr_reg_4129;
reg   [6:0] weight_23_V_addr_4_reg_4134;
wire   [5:0] ci_5_fu_2593_p2;
reg   [5:0] ci_5_reg_4142;
wire   [3:0] w_16_fu_2599_p2;
wire   [0:0] exitcond17_fu_2587_p2;
reg   [7:0] input_V_load_reg_4152;
wire    ap_CS_fsm_state18;
reg   [7:0] buffer1_1_48_8x8_p_V_119_reg_4180;
wire    ap_CS_fsm_state21;
reg   [7:0] buffer1_1_48_8x8_p_V_121_reg_4185;
reg   [7:0] buffer1_1_48_8x8_p_V_123_reg_4190;
reg   [7:0] buffer1_1_48_8x8_p_V_125_reg_4195;
reg   [7:0] buffer1_1_48_8x8_p_V_127_reg_4200;
reg   [7:0] buffer1_1_48_8x8_p_V_129_reg_4205;
reg   [7:0] buffer1_1_48_8x8_p_V_131_reg_4210;
reg   [7:0] buffer1_1_48_8x8_p_V_133_reg_4215;
reg   [7:0] buffer1_1_48_8x8_p_V_135_reg_4220;
reg   [7:0] buffer1_1_48_8x8_p_V_137_reg_4225;
reg   [7:0] buffer1_1_48_8x8_p_V_139_reg_4230;
reg   [7:0] buffer1_1_48_8x8_p_V_141_reg_4235;
reg   [7:0] buffer1_1_48_8x8_p_V_143_reg_4240;
reg   [7:0] buffer1_1_48_8x8_p_V_145_reg_4245;
reg   [7:0] buffer1_1_48_8x8_p_V_147_reg_4250;
reg   [7:0] buffer1_1_48_8x8_p_V_149_reg_4255;
reg   [7:0] buffer1_1_48_8x8_p_V_151_reg_4260;
reg   [7:0] buffer1_1_48_8x8_p_V_153_reg_4265;
reg   [7:0] buffer1_1_48_8x8_p_V_155_reg_4270;
reg   [7:0] buffer1_1_48_8x8_p_V_157_reg_4275;
reg   [7:0] buffer1_1_48_8x8_p_V_159_reg_4280;
reg   [7:0] buffer1_1_48_8x8_p_V_161_reg_4285;
reg   [7:0] buffer1_1_48_8x8_p_V_163_reg_4290;
reg   [7:0] buffer1_1_48_8x8_p_V_165_reg_4295;
wire   [15:0] grp_MUL_DP_fu_1849_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1849_ap_return_1;
reg   [15:0] MUL_DP_ret48_reg_4300_1;
wire    ap_CS_fsm_state22;
wire   [15:0] grp_MUL_DP_fu_1858_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1858_ap_return_1;
reg   [15:0] MUL_DP_ret49_reg_4305_1;
wire   [15:0] grp_MUL_DP_fu_1867_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1867_ap_return_1;
reg   [15:0] MUL_DP_ret50_reg_4310_1;
wire   [15:0] grp_MUL_DP_fu_1876_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1876_ap_return_1;
reg   [15:0] MUL_DP_ret51_reg_4315_1;
wire   [15:0] grp_MUL_DP_fu_1885_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1885_ap_return_1;
reg   [15:0] MUL_DP_ret52_reg_4320_1;
wire   [15:0] grp_MUL_DP_fu_1894_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1894_ap_return_1;
reg   [15:0] MUL_DP_ret53_reg_4325_1;
wire   [15:0] grp_MUL_DP_fu_1903_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1903_ap_return_1;
reg   [15:0] MUL_DP_ret54_reg_4330_1;
wire   [15:0] grp_MUL_DP_fu_1912_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1912_ap_return_1;
reg   [15:0] MUL_DP_ret55_reg_4335_1;
wire   [15:0] grp_MUL_DP_fu_1921_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1921_ap_return_1;
reg   [15:0] MUL_DP_ret56_reg_4340_1;
wire   [15:0] grp_MUL_DP_fu_1930_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1930_ap_return_1;
reg   [15:0] MUL_DP_ret57_reg_4345_1;
wire   [15:0] grp_MUL_DP_fu_1939_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1939_ap_return_1;
reg   [15:0] MUL_DP_ret58_reg_4350_1;
wire   [15:0] grp_MUL_DP_fu_1948_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1948_ap_return_1;
reg   [15:0] MUL_DP_ret59_reg_4355_1;
wire   [15:0] grp_MUL_DP_fu_1957_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1957_ap_return_1;
reg   [15:0] MUL_DP_ret60_reg_4360_1;
wire   [15:0] grp_MUL_DP_fu_1966_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1966_ap_return_1;
reg   [15:0] MUL_DP_ret61_reg_4365_1;
wire   [15:0] grp_MUL_DP_fu_1975_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1975_ap_return_1;
reg   [15:0] MUL_DP_ret62_reg_4370_1;
wire   [15:0] grp_MUL_DP_fu_1984_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1984_ap_return_1;
reg   [15:0] MUL_DP_ret63_reg_4375_1;
wire   [15:0] grp_MUL_DP_fu_1993_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1993_ap_return_1;
reg   [15:0] MUL_DP_ret64_reg_4380_1;
wire   [15:0] grp_MUL_DP_fu_2002_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2002_ap_return_1;
reg   [15:0] MUL_DP_ret65_reg_4385_1;
wire   [15:0] grp_MUL_DP_fu_2011_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2011_ap_return_1;
reg   [15:0] MUL_DP_ret66_reg_4390_1;
wire   [15:0] grp_MUL_DP_fu_2020_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2020_ap_return_1;
reg   [15:0] MUL_DP_ret67_reg_4395_1;
wire   [15:0] grp_MUL_DP_fu_2029_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2029_ap_return_1;
reg   [15:0] MUL_DP_ret68_reg_4400_1;
wire   [15:0] grp_MUL_DP_fu_2038_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2038_ap_return_1;
reg   [15:0] MUL_DP_ret69_reg_4405_1;
wire   [15:0] grp_MUL_DP_fu_2047_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2047_ap_return_1;
reg   [15:0] MUL_DP_ret70_reg_4410_1;
wire   [15:0] grp_MUL_DP_fu_2056_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2056_ap_return_1;
reg   [15:0] MUL_DP_ret_reg_4415_1;
wire   [7:0] tmp_22_fu_2948_p2;
reg   [7:0] tmp_22_reg_4420;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_42_1_fu_2961_p2;
reg   [7:0] tmp_42_1_reg_4425;
wire   [7:0] tmp_42_2_fu_2974_p2;
reg   [7:0] tmp_42_2_reg_4430;
wire   [7:0] tmp_42_3_fu_2987_p2;
reg   [7:0] tmp_42_3_reg_4435;
wire   [7:0] tmp_42_4_fu_3000_p2;
reg   [7:0] tmp_42_4_reg_4440;
wire   [7:0] tmp_42_5_fu_3013_p2;
reg   [7:0] tmp_42_5_reg_4445;
wire   [7:0] tmp_42_6_fu_3026_p2;
reg   [7:0] tmp_42_6_reg_4450;
wire   [7:0] tmp_42_7_fu_3039_p2;
reg   [7:0] tmp_42_7_reg_4455;
wire   [7:0] tmp_42_8_fu_3052_p2;
reg   [7:0] tmp_42_8_reg_4460;
wire   [7:0] tmp_42_9_fu_3065_p2;
reg   [7:0] tmp_42_9_reg_4465;
wire   [7:0] tmp_42_s_fu_3078_p2;
reg   [7:0] tmp_42_s_reg_4470;
wire   [7:0] tmp_42_10_fu_3091_p2;
reg   [7:0] tmp_42_10_reg_4475;
wire   [7:0] tmp_42_11_fu_3104_p2;
reg   [7:0] tmp_42_11_reg_4480;
wire   [7:0] tmp_42_12_fu_3117_p2;
reg   [7:0] tmp_42_12_reg_4485;
wire   [7:0] tmp_42_13_fu_3130_p2;
reg   [7:0] tmp_42_13_reg_4490;
wire   [7:0] tmp_42_14_fu_3143_p2;
reg   [7:0] tmp_42_14_reg_4495;
wire   [7:0] tmp_42_15_fu_3156_p2;
reg   [7:0] tmp_42_15_reg_4500;
wire   [7:0] tmp_42_16_fu_3169_p2;
reg   [7:0] tmp_42_16_reg_4505;
wire   [7:0] tmp_42_17_fu_3182_p2;
reg   [7:0] tmp_42_17_reg_4510;
wire   [7:0] tmp_42_18_fu_3195_p2;
reg   [7:0] tmp_42_18_reg_4515;
wire   [7:0] tmp_42_19_fu_3208_p2;
reg   [7:0] tmp_42_19_reg_4520;
wire   [7:0] tmp_42_20_fu_3221_p2;
reg   [7:0] tmp_42_20_reg_4525;
wire   [7:0] tmp_42_21_fu_3234_p2;
reg   [7:0] tmp_42_21_reg_4530;
wire   [7:0] tmp_42_22_fu_3247_p2;
reg   [7:0] tmp_42_22_reg_4535;
wire   [0:0] exitcond_flatten6_fu_3253_p2;
reg   [0:0] exitcond_flatten6_reg_4540;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state26_pp1_stage0_iter0;
wire    ap_block_state27_pp1_stage0_iter1;
wire    ap_block_state28_pp1_stage0_iter2;
wire    ap_block_state29_pp1_stage0_iter3;
wire    ap_block_state30_pp1_stage0_iter4;
wire    ap_block_state31_pp1_stage0_iter5;
wire    ap_block_state32_pp1_stage0_iter6;
wire    ap_block_state33_pp1_stage0_iter7;
wire    ap_block_state34_pp1_stage0_iter8;
wire    ap_block_state35_pp1_stage0_iter9;
wire    ap_block_state36_pp1_stage0_iter10;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter3_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter4_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter5_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter6_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter7_exitcond_flatten6_reg_4540;
reg   [0:0] ap_reg_pp1_iter8_exitcond_flatten6_reg_4540;
wire   [11:0] indvar_flatten_next6_fu_3259_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten3_fu_3271_p2;
reg   [0:0] exitcond_flatten3_reg_4549;
wire   [5:0] arrayNo_mid2_v_fu_3277_p3;
reg   [5:0] arrayNo_mid2_v_reg_4556;
wire   [7:0] indvar_flatten_next5_fu_3291_p3;
reg   [2:0] tmp_298_reg_4568;
wire   [3:0] w6_mid2_fu_3358_p3;
reg   [3:0] w6_mid2_reg_4574;
wire   [3:0] h5_cast2_mid2_fu_3366_p3;
reg   [3:0] h5_cast2_mid2_reg_4580;
reg    ap_enable_reg_pp1_iter1;
wire   [8:0] tmp_288_fu_3452_p2;
reg   [8:0] tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter3_tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter4_tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter5_tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter6_tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter7_tmp_288_reg_4586;
reg   [8:0] ap_reg_pp1_iter8_tmp_288_reg_4586;
wire   [3:0] w_17_fu_3458_p2;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] buffer1_1_48_8x8_p_V_167_reg_4596;
reg   [7:0] buffer1_1_48_8x8_p_V_168_reg_4602;
reg   [7:0] buffer1_1_48_8x8_p_V_169_reg_4608;
reg   [7:0] buffer1_1_48_8x8_p_V_170_reg_4614;
reg   [7:0] buffer1_1_48_8x8_p_V_171_reg_4620;
reg   [7:0] buffer1_1_48_8x8_p_V_172_reg_4626;
reg   [7:0] buffer1_1_48_8x8_p_V_173_reg_4632;
reg   [7:0] buffer1_1_48_8x8_p_V_174_reg_4638;
reg   [7:0] buffer1_1_48_8x8_p_V_175_reg_4644;
reg   [7:0] buffer1_1_48_8x8_p_V_176_reg_4650;
reg   [7:0] buffer1_1_48_8x8_p_V_177_reg_4656;
reg   [7:0] buffer1_1_48_8x8_p_V_178_reg_4662;
reg   [7:0] buffer1_1_48_8x8_p_V_179_reg_4668;
reg   [7:0] buffer1_1_48_8x8_p_V_180_reg_4674;
reg   [7:0] buffer1_1_48_8x8_p_V_181_reg_4680;
reg   [7:0] buffer1_1_48_8x8_p_V_182_reg_4686;
reg   [7:0] buffer1_1_48_8x8_p_V_183_reg_4692;
reg   [7:0] buffer1_1_48_8x8_p_V_184_reg_4698;
reg   [7:0] buffer1_1_48_8x8_p_V_185_reg_4704;
reg   [7:0] buffer1_1_48_8x8_p_V_186_reg_4710;
reg   [7:0] buffer1_1_48_8x8_p_V_187_reg_4716;
reg   [7:0] buffer1_1_48_8x8_p_V_188_reg_4722;
reg   [7:0] buffer1_1_48_8x8_p_V_189_reg_4728;
reg   [7:0] buffer1_1_48_8x8_p_V_190_reg_4734;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state26;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    grp_MUL_DP_fu_1849_ap_ce;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_MUL_DP_fu_1858_ap_ce;
reg    grp_MUL_DP_fu_1867_ap_ce;
reg    grp_MUL_DP_fu_1876_ap_ce;
reg    grp_MUL_DP_fu_1885_ap_ce;
reg    grp_MUL_DP_fu_1894_ap_ce;
reg    grp_MUL_DP_fu_1903_ap_ce;
reg    grp_MUL_DP_fu_1912_ap_ce;
reg    grp_MUL_DP_fu_1921_ap_ce;
reg    grp_MUL_DP_fu_1930_ap_ce;
reg    grp_MUL_DP_fu_1939_ap_ce;
reg    grp_MUL_DP_fu_1948_ap_ce;
reg    grp_MUL_DP_fu_1957_ap_ce;
reg    grp_MUL_DP_fu_1966_ap_ce;
reg    grp_MUL_DP_fu_1975_ap_ce;
reg    grp_MUL_DP_fu_1984_ap_ce;
reg    grp_MUL_DP_fu_1993_ap_ce;
reg    grp_MUL_DP_fu_2002_ap_ce;
reg    grp_MUL_DP_fu_2011_ap_ce;
reg    grp_MUL_DP_fu_2020_ap_ce;
reg    grp_MUL_DP_fu_2029_ap_ce;
reg    grp_MUL_DP_fu_2038_ap_ce;
reg    grp_MUL_DP_fu_2047_ap_ce;
reg    grp_MUL_DP_fu_2056_ap_ce;
reg   [5:0] co_phi_fu_1714_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] h_phi_fu_1737_p4;
reg   [3:0] w_phi_fu_1749_p4;
reg   [3:0] h1_reg_1757;
wire    ap_CS_fsm_state13;
reg   [3:0] w2_reg_1769;
reg   [5:0] ci_reg_1781;
wire    ap_CS_fsm_state25;
reg   [5:0] co4_phi_fu_1807_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] h5_phi_fu_1829_p4;
reg   [3:0] w6_phi_fu_1841_p4;
wire   [31:0] co_cast8_mid2_fu_2191_p1;
wire   [31:0] tmp_311_cast_fu_2279_p1;
wire   [31:0] tmp_316_cast_fu_2373_p1;
wire  signed [31:0] tmp_317_cast_fu_2406_p1;
wire   [31:0] tmp_336_cast_fu_2548_p1;
wire   [31:0] ci_cast3_fu_2446_p1;
wire   [31:0] tmp_337_cast_fu_2559_p1;
wire   [31:0] tmp_328_cast_fu_3463_p1;
wire   [5:0] grp_fu_2117_p2;
wire   [7:0] tmp_40_21_fu_2921_p2;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_303_fu_3548_p3;
wire   [5:0] grp_fu_3306_p2;
wire   [7:0] tmp_40_20_fu_2907_p2;
wire   [7:0] tmp_40_19_fu_2893_p2;
wire   [7:0] tmp_40_18_fu_2879_p2;
wire   [7:0] tmp_40_17_fu_2865_p2;
wire   [7:0] tmp_40_16_fu_2851_p2;
wire   [7:0] tmp_40_15_fu_2837_p2;
wire   [7:0] tmp_40_14_fu_2823_p2;
wire   [7:0] tmp_40_13_fu_2809_p2;
wire   [7:0] tmp_40_12_fu_2795_p2;
wire   [7:0] tmp_40_11_fu_2781_p2;
wire   [7:0] tmp_40_10_fu_2767_p2;
wire   [7:0] tmp_40_s_fu_2753_p2;
wire   [7:0] tmp_40_9_fu_2739_p2;
wire   [7:0] tmp_40_8_fu_2725_p2;
wire   [7:0] tmp_40_7_fu_2711_p2;
wire   [7:0] tmp_40_6_fu_2697_p2;
wire   [7:0] tmp_40_5_fu_2683_p2;
wire   [7:0] tmp_40_4_fu_2669_p2;
wire   [7:0] tmp_40_3_fu_2655_p2;
wire   [7:0] tmp_40_2_fu_2641_p2;
wire   [7:0] tmp_40_1_fu_2627_p2;
wire   [7:0] tmp_20_fu_2613_p2;
wire   [7:0] tmp_40_22_fu_2935_p2;
wire    ap_CS_fsm_state17;
wire   [7:0] indvar_flatten_op_fu_2083_p2;
wire   [5:0] co_9_fu_2097_p2;
wire   [5:0] grp_fu_2117_p0;
wire   [0:0] exitcond_fu_2128_p2;
wire   [0:0] not_exitcond_flatten_fu_2123_p2;
wire   [3:0] h_mid_fu_2103_p3;
wire   [0:0] exitcond23_mid_fu_2134_p2;
wire   [0:0] tmp_272_fu_2146_p2;
wire   [3:0] h_15_fu_2140_p2;
wire   [5:0] mul_fu_2175_p1;
wire   [13:0] mul_fu_2175_p2;
wire   [5:0] tmp_294_fu_2195_p3;
wire  signed [8:0] tmp_s_fu_2202_p1;
wire   [3:0] tmp_295_fu_2210_p3;
wire  signed [6:0] tmp_270_fu_2217_p1;
wire   [9:0] p_shl2_cast_fu_2206_p1;
wire   [9:0] p_shl3_cast_fu_2221_p1;
wire   [9:0] h_cast7_mid2_cast_fu_2231_p1;
wire   [9:0] tmp_271_fu_2225_p2;
wire   [9:0] tmp_273_fu_2234_p2;
wire   [5:0] tmp_296_fu_2240_p1;
wire   [7:0] tmp_297_fu_2252_p1;
wire   [8:0] p_shl_cast_fu_2244_p3;
wire   [8:0] p_shl1_cast_fu_2256_p3;
wire   [8:0] w_cast6_cast_fu_2270_p1;
wire   [8:0] tmp_274_fu_2264_p2;
wire   [6:0] tmp_276_fu_2310_p3;
wire   [4:0] tmp_277_fu_2322_p3;
wire   [7:0] p_shl5_cast_fu_2330_p1;
wire   [7:0] p_shl4_cast_fu_2318_p1;
wire   [8:0] tmp_314_cast_fu_2340_p1;
wire   [7:0] w2_cast4_cast_fu_2364_p1;
wire   [7:0] tmp_280_fu_2368_p2;
wire   [8:0] w2_cast4_cast2_fu_2360_p1;
wire   [8:0] tmp_281_fu_2401_p2;
wire   [8:0] tmp_289_fu_2478_p3;
wire   [6:0] tmp_290_fu_2490_p3;
wire   [9:0] p_shl8_cast_fu_2486_p1;
wire   [9:0] p_shl9_cast_fu_2498_p1;
wire   [9:0] tmp_291_fu_2502_p2;
wire   [9:0] tmp_292_fu_2508_p2;
wire   [12:0] tmp_304_fu_2513_p3;
wire   [10:0] tmp_305_fu_2525_p3;
wire   [13:0] p_shl6_cast_fu_2521_p1;
wire   [13:0] p_shl7_cast_fu_2533_p1;
wire   [13:0] tmp_293_fu_2537_p2;
wire   [13:0] tmp_306_fu_2543_p2;
wire   [6:0] ci_cast3_cast_fu_2474_p1;
wire   [6:0] tmp_307_fu_2553_p2;
wire   [7:0] tmp_308_fu_2609_p1;
wire   [7:0] tmp_310_fu_2623_p1;
wire   [7:0] tmp_312_fu_2637_p1;
wire   [7:0] tmp_314_fu_2651_p1;
wire   [7:0] tmp_316_fu_2665_p1;
wire   [7:0] tmp_318_fu_2679_p1;
wire   [7:0] tmp_320_fu_2693_p1;
wire   [7:0] tmp_322_fu_2707_p1;
wire   [7:0] tmp_324_fu_2721_p1;
wire   [7:0] tmp_326_fu_2735_p1;
wire   [7:0] tmp_328_fu_2749_p1;
wire   [7:0] tmp_330_fu_2763_p1;
wire   [7:0] tmp_332_fu_2777_p1;
wire   [7:0] tmp_334_fu_2791_p1;
wire   [7:0] tmp_336_fu_2805_p1;
wire   [7:0] tmp_338_fu_2819_p1;
wire   [7:0] tmp_340_fu_2833_p1;
wire   [7:0] tmp_342_fu_2847_p1;
wire   [7:0] tmp_344_fu_2861_p1;
wire   [7:0] tmp_346_fu_2875_p1;
wire   [7:0] tmp_348_fu_2889_p1;
wire   [7:0] tmp_350_fu_2903_p1;
wire   [7:0] tmp_352_fu_2917_p1;
wire   [7:0] tmp_354_fu_2931_p1;
wire   [7:0] tmp_309_fu_2944_p1;
wire   [7:0] tmp_311_fu_2957_p1;
wire   [7:0] tmp_313_fu_2970_p1;
wire   [7:0] tmp_315_fu_2983_p1;
wire   [7:0] tmp_317_fu_2996_p1;
wire   [7:0] tmp_319_fu_3009_p1;
wire   [7:0] tmp_321_fu_3022_p1;
wire   [7:0] tmp_323_fu_3035_p1;
wire   [7:0] tmp_325_fu_3048_p1;
wire   [7:0] tmp_327_fu_3061_p1;
wire   [7:0] tmp_329_fu_3074_p1;
wire   [7:0] tmp_331_fu_3087_p1;
wire   [7:0] tmp_333_fu_3100_p1;
wire   [7:0] tmp_335_fu_3113_p1;
wire   [7:0] tmp_337_fu_3126_p1;
wire   [7:0] tmp_339_fu_3139_p1;
wire   [7:0] tmp_341_fu_3152_p1;
wire   [7:0] tmp_343_fu_3165_p1;
wire   [7:0] tmp_345_fu_3178_p1;
wire   [7:0] tmp_347_fu_3191_p1;
wire   [7:0] tmp_349_fu_3204_p1;
wire   [7:0] tmp_351_fu_3217_p1;
wire   [7:0] tmp_353_fu_3230_p1;
wire   [7:0] tmp_355_fu_3243_p1;
wire   [5:0] co_11_fu_3265_p2;
wire   [7:0] indvar_flatten21_op_fu_3285_p2;
wire   [5:0] mul2_fu_3314_p1;
wire   [13:0] mul2_fu_3314_p2;
wire   [0:0] exitcond16_fu_3335_p2;
wire   [0:0] not_exitcond_flatten_4_fu_3330_p2;
wire   [3:0] h5_mid_fu_3299_p3;
wire   [0:0] exitcond_mid_fu_3341_p2;
wire   [0:0] tmp_285_fu_3353_p2;
wire   [3:0] h_2_fu_3347_p2;
wire   [5:0] tmp_299_fu_3374_p3;
wire  signed [8:0] tmp_282_fu_3381_p1;
wire   [3:0] tmp_300_fu_3389_p3;
wire  signed [6:0] tmp_283_fu_3396_p1;
wire   [9:0] p_shl12_cast_fu_3385_p1;
wire   [9:0] p_shl13_cast_fu_3400_p1;
wire   [9:0] h5_cast2_mid2_cast_fu_3410_p1;
wire   [9:0] tmp_284_fu_3404_p2;
wire   [9:0] tmp_286_fu_3413_p2;
wire   [5:0] tmp_301_fu_3419_p1;
wire   [7:0] tmp_302_fu_3431_p1;
wire   [8:0] p_shl10_cast_fu_3423_p3;
wire   [8:0] p_shl11_cast_fu_3435_p3;
wire   [8:0] w6_cast1_cast_fu_3449_p1;
wire   [8:0] tmp_287_fu_3443_p2;
wire   [31:0] tmp_19_fu_3494_p25;
wire   [7:0] tmp_19_fu_3494_p26;
wire    ap_CS_fsm_state37;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [13:0] mul2_fu_3314_p10;
wire   [13:0] mul_fu_2175_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_1849(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_0_V_q0),
    .b_V(weight_0_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1849_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1849_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1849_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1858(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_1_V_q0),
    .b_V(weight_1_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1858_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1858_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1858_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1867(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_2_V_q0),
    .b_V(weight_2_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1867_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1867_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1867_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1876(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_3_V_q0),
    .b_V(weight_3_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1876_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1876_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1876_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1885(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_4_V_q0),
    .b_V(weight_4_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1885_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1885_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1885_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1894(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_5_V_q0),
    .b_V(weight_5_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1894_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1894_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1894_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1903(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_6_V_q0),
    .b_V(weight_6_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1903_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1903_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1903_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1912(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_7_V_q0),
    .b_V(weight_7_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1912_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1912_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1912_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1921(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_8_V_q0),
    .b_V(weight_8_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1921_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1921_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1921_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1930(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_9_V_q0),
    .b_V(weight_9_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1930_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1930_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1930_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1939(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_10_V_q0),
    .b_V(weight_10_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1939_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1939_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1939_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1948(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_11_V_q0),
    .b_V(weight_11_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1948_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1948_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1948_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1957(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_12_V_q0),
    .b_V(weight_12_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1957_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1957_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1957_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1966(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_13_V_q0),
    .b_V(weight_13_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1966_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1966_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1966_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1975(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_14_V_q0),
    .b_V(weight_14_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1975_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1975_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1975_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1984(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_15_V_q0),
    .b_V(weight_15_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1984_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1984_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1984_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1993(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_16_V_q0),
    .b_V(weight_16_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_1993_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1993_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1993_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2002(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_17_V_q0),
    .b_V(weight_17_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2002_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2002_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2002_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2011(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_18_V_q0),
    .b_V(weight_18_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2011_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2011_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2011_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2020(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_19_V_q0),
    .b_V(weight_19_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2020_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2020_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2020_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2029(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_20_V_q0),
    .b_V(weight_20_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2029_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2029_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2029_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2038(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_21_V_q0),
    .b_V(weight_21_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2038_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2038_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2038_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2047(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_22_V_q0),
    .b_V(weight_22_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2047_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2047_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2047_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2056(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_23_V_q0),
    .b_V(weight_23_V_q1),
    .w_V(input_V_load_reg_4152),
    .ap_return_0(grp_MUL_DP_fu_2056_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2056_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2056_ap_ce)
);

ShuffleNetV2_uremfYi #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremfYi_x_U337(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2117_p0),
    .din1(6'd24),
    .ce(1'b1),
    .dout(grp_fu_2117_p2)
);

ShuffleNetV2_uremfYi #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremfYi_x_U338(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayNo_mid2_v_reg_4556),
    .din1(6'd24),
    .ce(1'b1),
    .dout(grp_fu_3306_p2)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_x_U339(
    .din1(buffer1_1_48_8x8_p_V_24_q0),
    .din2(buffer1_1_48_8x8_p_V_1_q0),
    .din3(buffer1_1_48_8x8_p_V_2_q0),
    .din4(buffer1_1_48_8x8_p_V_3_q0),
    .din5(buffer1_1_48_8x8_p_V_4_q0),
    .din6(buffer1_1_48_8x8_p_V_5_q0),
    .din7(buffer1_1_48_8x8_p_V_6_q0),
    .din8(buffer1_1_48_8x8_p_V_7_q0),
    .din9(buffer1_1_48_8x8_p_V_8_q0),
    .din10(buffer1_1_48_8x8_p_V_9_q0),
    .din11(buffer1_1_48_8x8_p_V_10_q0),
    .din12(buffer1_1_48_8x8_p_V_11_q0),
    .din13(buffer1_1_48_8x8_p_V_12_q0),
    .din14(buffer1_1_48_8x8_p_V_13_q0),
    .din15(buffer1_1_48_8x8_p_V_14_q0),
    .din16(buffer1_1_48_8x8_p_V_15_q0),
    .din17(buffer1_1_48_8x8_p_V_16_q0),
    .din18(buffer1_1_48_8x8_p_V_17_q0),
    .din19(buffer1_1_48_8x8_p_V_18_q0),
    .din20(buffer1_1_48_8x8_p_V_19_q0),
    .din21(buffer1_1_48_8x8_p_V_20_q0),
    .din22(buffer1_1_48_8x8_p_V_21_q0),
    .din23(buffer1_1_48_8x8_p_V_22_q0),
    .din24(buffer1_1_48_8x8_p_V_23_q0),
    .din25(tmp_19_fu_3494_p25),
    .dout(tmp_19_fu_3494_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state26))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state26)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state26 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond15_fu_2434_p2))) begin
        ci_reg_1781 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        ci_reg_1781 <= ci_5_reg_4142;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
        co4_reg_1803 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        co4_reg_1803 <= arrayNo_mid2_v_reg_4556;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0))) begin
        co_reg_1710 <= co_cast8_mid2_v_reg_3578;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_1710 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        h1_reg_1757 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond15_fu_2434_p2 == 1'd1))) begin
        h1_reg_1757 <= h_3_fu_2440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
        h5_reg_1825 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_1825 <= h5_cast2_mid2_reg_4580;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0))) begin
        h_reg_1733 <= h_cast7_mid2_reg_3592;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_1733 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten4_fu_2065_p2 == 1'd0))) begin
        indvar_flatten4_reg_1699 <= indvar_flatten_next4_fu_2071_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_1699 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
        indvar_flatten5_reg_1792 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3253_p2))) begin
        indvar_flatten5_reg_1792 <= indvar_flatten_next6_fu_3259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
        indvar_flatten6_reg_1814 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3253_p2))) begin
        indvar_flatten6_reg_1814 <= indvar_flatten_next5_fu_3291_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten4_fu_2065_p2 == 1'd0))) begin
        indvar_flatten_reg_1722 <= indvar_flatten_next_fu_2089_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_1722 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond14_fu_2350_p2))) begin
        w2_reg_1769 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond17_fu_2587_p2))) begin
        w2_reg_1769 <= w_16_fu_2599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
        w6_reg_1837 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_reg_1837 <= w_17_fu_3458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0))) begin
        w_reg_1745 <= w_15_fu_2167_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_1745 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        MUL_DP_ret48_reg_4300_1 <= grp_MUL_DP_fu_1849_ap_return_1;
        MUL_DP_ret49_reg_4305_1 <= grp_MUL_DP_fu_1858_ap_return_1;
        MUL_DP_ret50_reg_4310_1 <= grp_MUL_DP_fu_1867_ap_return_1;
        MUL_DP_ret51_reg_4315_1 <= grp_MUL_DP_fu_1876_ap_return_1;
        MUL_DP_ret52_reg_4320_1 <= grp_MUL_DP_fu_1885_ap_return_1;
        MUL_DP_ret53_reg_4325_1 <= grp_MUL_DP_fu_1894_ap_return_1;
        MUL_DP_ret54_reg_4330_1 <= grp_MUL_DP_fu_1903_ap_return_1;
        MUL_DP_ret55_reg_4335_1 <= grp_MUL_DP_fu_1912_ap_return_1;
        MUL_DP_ret56_reg_4340_1 <= grp_MUL_DP_fu_1921_ap_return_1;
        MUL_DP_ret57_reg_4345_1 <= grp_MUL_DP_fu_1930_ap_return_1;
        MUL_DP_ret58_reg_4350_1 <= grp_MUL_DP_fu_1939_ap_return_1;
        MUL_DP_ret59_reg_4355_1 <= grp_MUL_DP_fu_1948_ap_return_1;
        MUL_DP_ret60_reg_4360_1 <= grp_MUL_DP_fu_1957_ap_return_1;
        MUL_DP_ret61_reg_4365_1 <= grp_MUL_DP_fu_1966_ap_return_1;
        MUL_DP_ret62_reg_4370_1 <= grp_MUL_DP_fu_1975_ap_return_1;
        MUL_DP_ret63_reg_4375_1 <= grp_MUL_DP_fu_1984_ap_return_1;
        MUL_DP_ret64_reg_4380_1 <= grp_MUL_DP_fu_1993_ap_return_1;
        MUL_DP_ret65_reg_4385_1 <= grp_MUL_DP_fu_2002_ap_return_1;
        MUL_DP_ret66_reg_4390_1 <= grp_MUL_DP_fu_2011_ap_return_1;
        MUL_DP_ret67_reg_4395_1 <= grp_MUL_DP_fu_2020_ap_return_1;
        MUL_DP_ret68_reg_4400_1 <= grp_MUL_DP_fu_2029_ap_return_1;
        MUL_DP_ret69_reg_4405_1 <= grp_MUL_DP_fu_2038_ap_return_1;
        MUL_DP_ret70_reg_4410_1 <= grp_MUL_DP_fu_2047_ap_return_1;
        MUL_DP_ret_reg_4415_1 <= grp_MUL_DP_fu_2056_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 <= exitcond_flatten4_reg_3556;
        exitcond_flatten4_reg_3556 <= exitcond_flatten4_fu_2065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_co_cast8_mid2_v_reg_3578 <= co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter2_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter1_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter2_h_cast7_mid2_reg_3592 <= h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter2_w_mid2_reg_3586 <= w_mid2_reg_3586;
        ap_reg_pp0_iter3_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter2_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter3_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter2_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter3_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter2_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter3_w_mid2_reg_3586 <= ap_reg_pp0_iter2_w_mid2_reg_3586;
        ap_reg_pp0_iter4_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter3_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter4_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter3_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter4_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter3_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter4_w_mid2_reg_3586 <= ap_reg_pp0_iter3_w_mid2_reg_3586;
        ap_reg_pp0_iter5_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter4_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter5_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter4_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter5_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter4_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter5_w_mid2_reg_3586 <= ap_reg_pp0_iter4_w_mid2_reg_3586;
        ap_reg_pp0_iter6_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter5_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter6_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter5_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter6_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter5_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter6_w_mid2_reg_3586 <= ap_reg_pp0_iter5_w_mid2_reg_3586;
        ap_reg_pp0_iter7_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter6_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter7_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter6_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter7_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter6_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter7_w_mid2_reg_3586 <= ap_reg_pp0_iter6_w_mid2_reg_3586;
        ap_reg_pp0_iter8_co_cast8_mid2_v_reg_3578 <= ap_reg_pp0_iter7_co_cast8_mid2_v_reg_3578;
        ap_reg_pp0_iter8_exitcond_flatten4_reg_3556 <= ap_reg_pp0_iter7_exitcond_flatten4_reg_3556;
        ap_reg_pp0_iter8_h_cast7_mid2_reg_3592 <= ap_reg_pp0_iter7_h_cast7_mid2_reg_3592;
        ap_reg_pp0_iter8_w_mid2_reg_3586 <= ap_reg_pp0_iter7_w_mid2_reg_3586;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten6_reg_4540 <= exitcond_flatten6_reg_4540;
        exitcond_flatten6_reg_4540 <= exitcond_flatten6_fu_3253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter1_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter3_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter2_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter3_tmp_288_reg_4586 <= tmp_288_reg_4586;
        ap_reg_pp1_iter4_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter3_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter4_tmp_288_reg_4586 <= ap_reg_pp1_iter3_tmp_288_reg_4586;
        ap_reg_pp1_iter5_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter4_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter5_tmp_288_reg_4586 <= ap_reg_pp1_iter4_tmp_288_reg_4586;
        ap_reg_pp1_iter6_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter5_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter6_tmp_288_reg_4586 <= ap_reg_pp1_iter5_tmp_288_reg_4586;
        ap_reg_pp1_iter7_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter6_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter7_tmp_288_reg_4586 <= ap_reg_pp1_iter6_tmp_288_reg_4586;
        ap_reg_pp1_iter8_exitcond_flatten6_reg_4540 <= ap_reg_pp1_iter7_exitcond_flatten6_reg_4540;
        ap_reg_pp1_iter8_tmp_288_reg_4586 <= ap_reg_pp1_iter7_tmp_288_reg_4586;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3253_p2))) begin
        arrayNo_mid2_v_reg_4556 <= arrayNo_mid2_v_fu_3277_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        buffer1_1_48_8x8_p_V_100_reg_3791 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_101_reg_3796 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_102_reg_3801 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_103_reg_3806 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_104_reg_3811 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_105_reg_3816 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_106_reg_3821 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_107_reg_3826 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_108_reg_3831 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_109_reg_3836 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_110_reg_3841 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_111_reg_3846 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_112_reg_3851 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_113_reg_3856 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_114_reg_3861 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_115_reg_3866 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_116_reg_3871 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_117_reg_3876 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_118_reg_3881 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_71_reg_3646 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_72_reg_3651 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_73_reg_3656 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_74_reg_3661 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_75_reg_3666 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_76_reg_3671 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_77_reg_3676 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_78_reg_3681 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_79_reg_3686 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_80_reg_3691 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_81_reg_3696 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_82_reg_3701 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_83_reg_3706 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_84_reg_3711 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_85_reg_3716 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_86_reg_3721 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_87_reg_3726 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_88_reg_3731 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_89_reg_3736 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_90_reg_3741 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_91_reg_3746 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_92_reg_3751 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_93_reg_3756 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_94_reg_3761 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_95_reg_3766 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_96_reg_3771 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_97_reg_3776 <= tmp_316_cast_fu_2373_p1;
        buffer1_1_48_8x8_p_V_98_reg_3781 <= tmp_317_cast_fu_2406_p1;
        buffer1_1_48_8x8_p_V_99_reg_3786 <= tmp_316_cast_fu_2373_p1;
        w2_cast4_cast1_reg_3641[3 : 0] <= w2_cast4_cast1_fu_2356_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        buffer1_1_48_8x8_p_V_119_reg_4180 <= buffer1_1_48_8x8_p_V_24_q0;
        buffer1_1_48_8x8_p_V_121_reg_4185 <= buffer1_1_48_8x8_p_V_1_q0;
        buffer1_1_48_8x8_p_V_123_reg_4190 <= buffer1_1_48_8x8_p_V_2_q0;
        buffer1_1_48_8x8_p_V_125_reg_4195 <= buffer1_1_48_8x8_p_V_3_q0;
        buffer1_1_48_8x8_p_V_127_reg_4200 <= buffer1_1_48_8x8_p_V_4_q0;
        buffer1_1_48_8x8_p_V_129_reg_4205 <= buffer1_1_48_8x8_p_V_5_q0;
        buffer1_1_48_8x8_p_V_131_reg_4210 <= buffer1_1_48_8x8_p_V_6_q0;
        buffer1_1_48_8x8_p_V_133_reg_4215 <= buffer1_1_48_8x8_p_V_7_q0;
        buffer1_1_48_8x8_p_V_135_reg_4220 <= buffer1_1_48_8x8_p_V_8_q0;
        buffer1_1_48_8x8_p_V_137_reg_4225 <= buffer1_1_48_8x8_p_V_9_q0;
        buffer1_1_48_8x8_p_V_139_reg_4230 <= buffer1_1_48_8x8_p_V_10_q0;
        buffer1_1_48_8x8_p_V_141_reg_4235 <= buffer1_1_48_8x8_p_V_11_q0;
        buffer1_1_48_8x8_p_V_143_reg_4240 <= buffer1_1_48_8x8_p_V_12_q0;
        buffer1_1_48_8x8_p_V_145_reg_4245 <= buffer1_1_48_8x8_p_V_13_q0;
        buffer1_1_48_8x8_p_V_147_reg_4250 <= buffer1_1_48_8x8_p_V_14_q0;
        buffer1_1_48_8x8_p_V_149_reg_4255 <= buffer1_1_48_8x8_p_V_15_q0;
        buffer1_1_48_8x8_p_V_151_reg_4260 <= buffer1_1_48_8x8_p_V_16_q0;
        buffer1_1_48_8x8_p_V_153_reg_4265 <= buffer1_1_48_8x8_p_V_17_q0;
        buffer1_1_48_8x8_p_V_155_reg_4270 <= buffer1_1_48_8x8_p_V_18_q0;
        buffer1_1_48_8x8_p_V_157_reg_4275 <= buffer1_1_48_8x8_p_V_19_q0;
        buffer1_1_48_8x8_p_V_159_reg_4280 <= buffer1_1_48_8x8_p_V_20_q0;
        buffer1_1_48_8x8_p_V_161_reg_4285 <= buffer1_1_48_8x8_p_V_21_q0;
        buffer1_1_48_8x8_p_V_163_reg_4290 <= buffer1_1_48_8x8_p_V_22_q0;
        buffer1_1_48_8x8_p_V_165_reg_4295 <= buffer1_1_48_8x8_p_V_23_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter8_exitcond_flatten6_reg_4540))) begin
        buffer1_1_48_8x8_p_V_167_reg_4596 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_168_reg_4602 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_169_reg_4608 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_170_reg_4614 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_171_reg_4620 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_172_reg_4626 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_173_reg_4632 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_174_reg_4638 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_175_reg_4644 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_176_reg_4650 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_177_reg_4656 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_178_reg_4662 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_179_reg_4668 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_180_reg_4674 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_181_reg_4680 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_182_reg_4686 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_183_reg_4692 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_184_reg_4698 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_185_reg_4704 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_186_reg_4710 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_187_reg_4716 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_188_reg_4722 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_189_reg_4728 <= tmp_328_cast_fu_3463_p1;
        buffer1_1_48_8x8_p_V_190_reg_4734 <= tmp_328_cast_fu_3463_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ci_5_reg_4142 <= ci_5_fu_2593_p2;
        input_V_addr_reg_3894 <= tmp_336_cast_fu_2548_p1;
        weight_0_V_addr_4_reg_3904 <= tmp_337_cast_fu_2559_p1;
        weight_0_V_addr_reg_3899[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_10_V_addr_4_reg_4004 <= tmp_337_cast_fu_2559_p1;
        weight_10_V_addr_reg_3999[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_11_V_addr_4_reg_4014 <= tmp_337_cast_fu_2559_p1;
        weight_11_V_addr_reg_4009[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_12_V_addr_4_reg_4024 <= tmp_337_cast_fu_2559_p1;
        weight_12_V_addr_reg_4019[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_13_V_addr_4_reg_4034 <= tmp_337_cast_fu_2559_p1;
        weight_13_V_addr_reg_4029[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_14_V_addr_4_reg_4044 <= tmp_337_cast_fu_2559_p1;
        weight_14_V_addr_reg_4039[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_15_V_addr_4_reg_4054 <= tmp_337_cast_fu_2559_p1;
        weight_15_V_addr_reg_4049[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_16_V_addr_4_reg_4064 <= tmp_337_cast_fu_2559_p1;
        weight_16_V_addr_reg_4059[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_17_V_addr_4_reg_4074 <= tmp_337_cast_fu_2559_p1;
        weight_17_V_addr_reg_4069[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_18_V_addr_4_reg_4084 <= tmp_337_cast_fu_2559_p1;
        weight_18_V_addr_reg_4079[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_19_V_addr_4_reg_4094 <= tmp_337_cast_fu_2559_p1;
        weight_19_V_addr_reg_4089[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_1_V_addr_4_reg_3914 <= tmp_337_cast_fu_2559_p1;
        weight_1_V_addr_reg_3909[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_20_V_addr_4_reg_4104 <= tmp_337_cast_fu_2559_p1;
        weight_20_V_addr_reg_4099[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_21_V_addr_4_reg_4114 <= tmp_337_cast_fu_2559_p1;
        weight_21_V_addr_reg_4109[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_22_V_addr_4_reg_4124 <= tmp_337_cast_fu_2559_p1;
        weight_22_V_addr_reg_4119[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_23_V_addr_4_reg_4134 <= tmp_337_cast_fu_2559_p1;
        weight_23_V_addr_reg_4129[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_2_V_addr_4_reg_3924 <= tmp_337_cast_fu_2559_p1;
        weight_2_V_addr_reg_3919[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_3_V_addr_4_reg_3934 <= tmp_337_cast_fu_2559_p1;
        weight_3_V_addr_reg_3929[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_4_V_addr_4_reg_3944 <= tmp_337_cast_fu_2559_p1;
        weight_4_V_addr_reg_3939[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_5_V_addr_4_reg_3954 <= tmp_337_cast_fu_2559_p1;
        weight_5_V_addr_reg_3949[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_6_V_addr_4_reg_3964 <= tmp_337_cast_fu_2559_p1;
        weight_6_V_addr_reg_3959[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_7_V_addr_4_reg_3974 <= tmp_337_cast_fu_2559_p1;
        weight_7_V_addr_reg_3969[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_8_V_addr_4_reg_3984 <= tmp_337_cast_fu_2559_p1;
        weight_8_V_addr_reg_3979[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
        weight_9_V_addr_4_reg_3994 <= tmp_337_cast_fu_2559_p1;
        weight_9_V_addr_reg_3989[5 : 0] <= ci_cast3_fu_2446_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten4_reg_3556 == 1'd0))) begin
        co_cast8_mid2_v_reg_3578 <= co_cast8_mid2_v_fu_2110_p3;
        h_cast7_mid2_reg_3592 <= h_cast7_mid2_fu_2159_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_fu_3253_p2))) begin
        exitcond_flatten3_reg_4549 <= exitcond_flatten3_fu_3271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten4_fu_2065_p2 == 1'd0))) begin
        exitcond_flatten_reg_3565 <= exitcond_flatten_fu_2077_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h1_cast5_cast_reg_3622[3 : 0] <= h1_cast5_cast_fu_2306_p1[3 : 0];
        tmp_278_reg_3627[7 : 1] <= tmp_278_fu_2334_p2[7 : 1];
        tmp_279_reg_3632[8 : 1] <= tmp_279_fu_2344_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        h5_cast2_mid2_reg_4580 <= h5_cast2_mid2_fu_3366_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_load_reg_4152 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_22_reg_4420 <= tmp_22_fu_2948_p2;
        tmp_42_10_reg_4475 <= tmp_42_10_fu_3091_p2;
        tmp_42_11_reg_4480 <= tmp_42_11_fu_3104_p2;
        tmp_42_12_reg_4485 <= tmp_42_12_fu_3117_p2;
        tmp_42_13_reg_4490 <= tmp_42_13_fu_3130_p2;
        tmp_42_14_reg_4495 <= tmp_42_14_fu_3143_p2;
        tmp_42_15_reg_4500 <= tmp_42_15_fu_3156_p2;
        tmp_42_16_reg_4505 <= tmp_42_16_fu_3169_p2;
        tmp_42_17_reg_4510 <= tmp_42_17_fu_3182_p2;
        tmp_42_18_reg_4515 <= tmp_42_18_fu_3195_p2;
        tmp_42_19_reg_4520 <= tmp_42_19_fu_3208_p2;
        tmp_42_1_reg_4425 <= tmp_42_1_fu_2961_p2;
        tmp_42_20_reg_4525 <= tmp_42_20_fu_3221_p2;
        tmp_42_21_reg_4530 <= tmp_42_21_fu_3234_p2;
        tmp_42_22_reg_4535 <= tmp_42_22_fu_3247_p2;
        tmp_42_2_reg_4430 <= tmp_42_2_fu_2974_p2;
        tmp_42_3_reg_4435 <= tmp_42_3_fu_2987_p2;
        tmp_42_4_reg_4440 <= tmp_42_4_fu_3000_p2;
        tmp_42_5_reg_4445 <= tmp_42_5_fu_3013_p2;
        tmp_42_6_reg_4450 <= tmp_42_6_fu_3026_p2;
        tmp_42_7_reg_4455 <= tmp_42_7_fu_3039_p2;
        tmp_42_8_reg_4460 <= tmp_42_8_fu_3052_p2;
        tmp_42_9_reg_4465 <= tmp_42_9_fu_3065_p2;
        tmp_42_s_reg_4470 <= tmp_42_s_fu_3078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter8_exitcond_flatten4_reg_3556 == 1'd0))) begin
        tmp_275_reg_3609 <= tmp_275_fu_2273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4540))) begin
        tmp_288_reg_4586 <= tmp_288_fu_3452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_4540))) begin
        tmp_298_reg_4568 <= {{mul2_fu_3314_p2[13:11]}};
        w6_mid2_reg_4574 <= w6_mid2_fu_3358_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter7_exitcond_flatten4_reg_3556 == 1'd0))) begin
        tmp_reg_3603 <= {{mul_fu_2175_p2[13:11]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten4_reg_3556 == 1'd0))) begin
        w_mid2_reg_3586 <= w_mid2_fu_2151_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten4_fu_2065_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten6_fu_3253_p2)) begin
        ap_condition_pp1_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state37))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3) & (1'b0 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_enable_reg_pp1_iter6) & (1'b0 == ap_enable_reg_pp1_iter7) & (1'b0 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_enable_reg_pp1_iter9) & (1'b0 == ap_enable_reg_pp1_iter10))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_10_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_10_address0 = buffer1_1_48_8x8_p_V_110_reg_3841;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_10_address0 = buffer1_1_48_8x8_p_V_109_reg_3836;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_10_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_10_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_10_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_10_d0 = tmp_42_s_reg_4470;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_10_d0 = tmp_40_s_fu_2753_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_10_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd10)))) begin
        buffer1_1_48_8x8_p_V_10_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd10))) begin
        buffer1_1_48_8x8_p_V_10_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_11_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_11_address0 = buffer1_1_48_8x8_p_V_72_reg_3651;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_11_address0 = buffer1_1_48_8x8_p_V_71_reg_3646;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_11_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_11_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_11_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_11_d0 = tmp_42_10_reg_4475;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_11_d0 = tmp_40_10_fu_2767_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_11_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd11)))) begin
        buffer1_1_48_8x8_p_V_11_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd11))) begin
        buffer1_1_48_8x8_p_V_11_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_12_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_12_address0 = buffer1_1_48_8x8_p_V_80_reg_3691;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_12_address0 = buffer1_1_48_8x8_p_V_79_reg_3686;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_12_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_12_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_12_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_12_d0 = tmp_42_11_reg_4480;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_12_d0 = tmp_40_11_fu_2781_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_12_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd12)))) begin
        buffer1_1_48_8x8_p_V_12_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd12))) begin
        buffer1_1_48_8x8_p_V_12_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_13_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_13_address0 = buffer1_1_48_8x8_p_V_106_reg_3821;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_13_address0 = buffer1_1_48_8x8_p_V_105_reg_3816;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_13_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_13_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_13_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_13_d0 = tmp_42_12_reg_4485;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_13_d0 = tmp_40_12_fu_2795_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_13_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd13)))) begin
        buffer1_1_48_8x8_p_V_13_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd13))) begin
        buffer1_1_48_8x8_p_V_13_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_14_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_14_address0 = buffer1_1_48_8x8_p_V_118_reg_3881;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_14_address0 = buffer1_1_48_8x8_p_V_117_reg_3876;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_14_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_14_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_14_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_14_d0 = tmp_42_13_reg_4490;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_14_d0 = tmp_40_13_fu_2809_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_14_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd14)))) begin
        buffer1_1_48_8x8_p_V_14_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd14))) begin
        buffer1_1_48_8x8_p_V_14_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_15_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_15_address0 = buffer1_1_48_8x8_p_V_86_reg_3721;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_15_address0 = buffer1_1_48_8x8_p_V_85_reg_3716;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_15_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_15_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_15_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_15_d0 = tmp_42_14_reg_4495;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_15_d0 = tmp_40_14_fu_2823_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_15_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd15)))) begin
        buffer1_1_48_8x8_p_V_15_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd15))) begin
        buffer1_1_48_8x8_p_V_15_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_16_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_16_address0 = buffer1_1_48_8x8_p_V_94_reg_3761;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_16_address0 = buffer1_1_48_8x8_p_V_93_reg_3756;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_16_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_16_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_16_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_16_d0 = tmp_42_15_reg_4500;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_16_d0 = tmp_40_15_fu_2837_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_16_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd16)))) begin
        buffer1_1_48_8x8_p_V_16_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd16))) begin
        buffer1_1_48_8x8_p_V_16_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_17_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_17_address0 = buffer1_1_48_8x8_p_V_112_reg_3851;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_17_address0 = buffer1_1_48_8x8_p_V_111_reg_3846;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_17_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_17_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_17_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_17_d0 = tmp_42_16_reg_4505;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_17_d0 = tmp_40_16_fu_2851_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_17_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd17)))) begin
        buffer1_1_48_8x8_p_V_17_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd17))) begin
        buffer1_1_48_8x8_p_V_17_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_18_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_18_address0 = buffer1_1_48_8x8_p_V_100_reg_3791;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_18_address0 = buffer1_1_48_8x8_p_V_99_reg_3786;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_18_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_18_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_18_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_18_d0 = tmp_42_17_reg_4510;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_18_d0 = tmp_40_17_fu_2865_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_18_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd18)))) begin
        buffer1_1_48_8x8_p_V_18_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd18))) begin
        buffer1_1_48_8x8_p_V_18_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_19_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_19_address0 = buffer1_1_48_8x8_p_V_116_reg_3871;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_19_address0 = buffer1_1_48_8x8_p_V_115_reg_3866;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_19_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_19_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_19_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_19_d0 = tmp_42_18_reg_4515;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_19_d0 = tmp_40_18_fu_2879_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_19_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd19)))) begin
        buffer1_1_48_8x8_p_V_19_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd19))) begin
        buffer1_1_48_8x8_p_V_19_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_1_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_1_address0 = buffer1_1_48_8x8_p_V_78_reg_3681;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_1_address0 = buffer1_1_48_8x8_p_V_77_reg_3676;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_1_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_1_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_1_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_1_d0 = tmp_42_1_reg_4425;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_1_d0 = tmp_40_1_fu_2627_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd1)))) begin
        buffer1_1_48_8x8_p_V_1_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd1))) begin
        buffer1_1_48_8x8_p_V_1_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_20_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_20_address0 = buffer1_1_48_8x8_p_V_98_reg_3781;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_20_address0 = buffer1_1_48_8x8_p_V_97_reg_3776;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_20_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_20_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_20_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_20_d0 = tmp_42_19_reg_4520;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_20_d0 = tmp_40_19_fu_2893_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_20_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd20)))) begin
        buffer1_1_48_8x8_p_V_20_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd20))) begin
        buffer1_1_48_8x8_p_V_20_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_21_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_21_address0 = buffer1_1_48_8x8_p_V_114_reg_3861;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_21_address0 = buffer1_1_48_8x8_p_V_113_reg_3856;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_21_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_21_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_21_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_21_d0 = tmp_42_20_reg_4525;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_21_d0 = tmp_40_20_fu_2907_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_21_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd21)))) begin
        buffer1_1_48_8x8_p_V_21_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd21))) begin
        buffer1_1_48_8x8_p_V_21_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_22_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_22_address0 = buffer1_1_48_8x8_p_V_82_reg_3701;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_22_address0 = buffer1_1_48_8x8_p_V_81_reg_3696;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_22_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_22_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_22_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_22_d0 = tmp_42_21_reg_4530;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_22_d0 = tmp_40_21_fu_2921_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_22_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd22)))) begin
        buffer1_1_48_8x8_p_V_22_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (6'd22 == grp_fu_3306_p2))) begin
        buffer1_1_48_8x8_p_V_22_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_23_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_23_address0 = buffer1_1_48_8x8_p_V_74_reg_3661;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_23_address0 = buffer1_1_48_8x8_p_V_73_reg_3656;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_23_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_23_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_23_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_23_d0 = tmp_42_22_reg_4535;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_23_d0 = tmp_40_22_fu_2935_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_23_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & ~(6'd0 == grp_fu_2117_p2) & ~(grp_fu_2117_p2 == 6'd1) & ~(grp_fu_2117_p2 == 6'd2) & ~(grp_fu_2117_p2 == 6'd3) & ~(grp_fu_2117_p2 == 6'd4) & ~(grp_fu_2117_p2 == 6'd5) & ~(grp_fu_2117_p2 == 6'd6) & ~(grp_fu_2117_p2 == 6'd7) & ~(grp_fu_2117_p2 == 6'd8) & ~(grp_fu_2117_p2 == 6'd9) & ~(grp_fu_2117_p2 == 6'd10) & ~(grp_fu_2117_p2 == 6'd11) & ~(grp_fu_2117_p2 == 6'd12) & ~(grp_fu_2117_p2 == 6'd13) & ~(grp_fu_2117_p2 == 6'd14) & ~(grp_fu_2117_p2 == 6'd15) & ~(grp_fu_2117_p2 == 6'd16) & ~(grp_fu_2117_p2 == 6'd17) & ~(grp_fu_2117_p2 == 6'd18) & ~(grp_fu_2117_p2 == 6'd19) & ~(grp_fu_2117_p2 == 6'd20) & ~(grp_fu_2117_p2 == 6'd21) & ~(grp_fu_2117_p2 == 6'd22)))) begin
        buffer1_1_48_8x8_p_V_23_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & ~(6'd0 == grp_fu_3306_p2) & ~(grp_fu_3306_p2 == 6'd1) & ~(grp_fu_3306_p2 == 6'd2) & ~(grp_fu_3306_p2 == 6'd3) & ~(grp_fu_3306_p2 == 6'd4) & ~(grp_fu_3306_p2 == 6'd5) & ~(grp_fu_3306_p2 == 6'd6) & ~(grp_fu_3306_p2 == 6'd7) & ~(grp_fu_3306_p2 == 6'd8) & ~(grp_fu_3306_p2 == 6'd9) & ~(grp_fu_3306_p2 == 6'd10) & ~(grp_fu_3306_p2 == 6'd11) & ~(grp_fu_3306_p2 == 6'd12) & ~(grp_fu_3306_p2 == 6'd13) & ~(grp_fu_3306_p2 == 6'd14) & ~(grp_fu_3306_p2 == 6'd15) & ~(grp_fu_3306_p2 == 6'd16) & ~(grp_fu_3306_p2 == 6'd17) & ~(grp_fu_3306_p2 == 6'd18) & ~(grp_fu_3306_p2 == 6'd19) & ~(grp_fu_3306_p2 == 6'd20) & ~(grp_fu_3306_p2 == 6'd21) & ~(6'd22 == grp_fu_3306_p2))) begin
        buffer1_1_48_8x8_p_V_23_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_24_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_24_address0 = buffer1_1_48_8x8_p_V_108_reg_3831;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_24_address0 = buffer1_1_48_8x8_p_V_107_reg_3826;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_24_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_24_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_24_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_24_d0 = tmp_22_reg_4420;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_24_d0 = tmp_20_fu_2613_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_24_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (6'd0 == grp_fu_2117_p2)))) begin
        buffer1_1_48_8x8_p_V_24_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (6'd0 == grp_fu_3306_p2))) begin
        buffer1_1_48_8x8_p_V_24_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_2_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_2_address0 = buffer1_1_48_8x8_p_V_102_reg_3801;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_2_address0 = buffer1_1_48_8x8_p_V_101_reg_3796;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_2_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_2_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_2_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_2_d0 = tmp_42_2_reg_4430;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_2_d0 = tmp_40_2_fu_2641_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd2)))) begin
        buffer1_1_48_8x8_p_V_2_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd2))) begin
        buffer1_1_48_8x8_p_V_2_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_3_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_3_address0 = buffer1_1_48_8x8_p_V_84_reg_3711;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_3_address0 = buffer1_1_48_8x8_p_V_83_reg_3706;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_3_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_3_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_3_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_3_d0 = tmp_42_3_reg_4435;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_3_d0 = tmp_40_3_fu_2655_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd3)))) begin
        buffer1_1_48_8x8_p_V_3_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd3))) begin
        buffer1_1_48_8x8_p_V_3_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_4_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_4_address0 = buffer1_1_48_8x8_p_V_90_reg_3741;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_4_address0 = buffer1_1_48_8x8_p_V_89_reg_3736;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_4_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_4_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_4_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_4_d0 = tmp_42_4_reg_4440;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_4_d0 = tmp_40_4_fu_2669_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd4)))) begin
        buffer1_1_48_8x8_p_V_4_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd4))) begin
        buffer1_1_48_8x8_p_V_4_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_5_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_5_address0 = buffer1_1_48_8x8_p_V_104_reg_3811;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_5_address0 = buffer1_1_48_8x8_p_V_103_reg_3806;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_5_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_5_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_5_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_5_d0 = tmp_42_5_reg_4445;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_5_d0 = tmp_40_5_fu_2683_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd5)))) begin
        buffer1_1_48_8x8_p_V_5_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd5))) begin
        buffer1_1_48_8x8_p_V_5_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_6_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_6_address0 = buffer1_1_48_8x8_p_V_96_reg_3771;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_6_address0 = buffer1_1_48_8x8_p_V_95_reg_3766;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_6_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_6_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_6_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_6_d0 = tmp_42_6_reg_4450;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_6_d0 = tmp_40_6_fu_2697_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd6)))) begin
        buffer1_1_48_8x8_p_V_6_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd6))) begin
        buffer1_1_48_8x8_p_V_6_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_7_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_7_address0 = buffer1_1_48_8x8_p_V_88_reg_3731;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_7_address0 = buffer1_1_48_8x8_p_V_87_reg_3726;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_7_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_7_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_7_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_7_d0 = tmp_42_7_reg_4455;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_7_d0 = tmp_40_7_fu_2711_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd7)))) begin
        buffer1_1_48_8x8_p_V_7_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd7))) begin
        buffer1_1_48_8x8_p_V_7_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_8_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_8_address0 = buffer1_1_48_8x8_p_V_76_reg_3671;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_8_address0 = buffer1_1_48_8x8_p_V_75_reg_3666;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_8_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_8_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_8_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_8_d0 = tmp_42_8_reg_4460;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_8_d0 = tmp_40_8_fu_2725_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd8)))) begin
        buffer1_1_48_8x8_p_V_8_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd8))) begin
        buffer1_1_48_8x8_p_V_8_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        buffer1_1_48_8x8_p_V_9_address0 = tmp_328_cast_fu_3463_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_48_8x8_p_V_9_address0 = buffer1_1_48_8x8_p_V_92_reg_3751;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        buffer1_1_48_8x8_p_V_9_address0 = buffer1_1_48_8x8_p_V_91_reg_3746;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_9_address0 = tmp_311_cast_fu_2279_p1;
    end else begin
        buffer1_1_48_8x8_p_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        buffer1_1_48_8x8_p_V_9_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_48_8x8_p_V_9_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        buffer1_1_48_8x8_p_V_9_d0 = tmp_42_9_reg_4465;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        buffer1_1_48_8x8_p_V_9_d0 = tmp_40_9_fu_2739_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        buffer1_1_48_8x8_p_V_9_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2117_p2 == 6'd9)))) begin
        buffer1_1_48_8x8_p_V_9_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_303_fu_3548_p3) & (grp_fu_3306_p2 == 6'd9))) begin
        buffer1_1_48_8x8_p_V_9_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_1807_p4 = arrayNo_mid2_v_reg_4556;
    end else begin
        co4_phi_fu_1807_p4 = co4_reg_1803;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_1714_p4 = co_cast8_mid2_v_reg_3578;
    end else begin
        co_phi_fu_1714_p4 = co_reg_1710;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1849_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1849_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1858_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1858_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1867_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1867_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1876_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1876_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1885_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1885_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1894_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1894_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1903_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1903_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1912_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1912_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1921_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1921_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1930_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1930_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1939_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1939_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1948_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1948_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1957_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1957_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1966_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1966_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1975_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1975_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1984_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1984_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_1993_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1993_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2002_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2002_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2011_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2011_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2020_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2020_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2029_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2029_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2038_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2038_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2047_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2047_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_MUL_DP_fu_2056_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2056_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_1829_p4 = h5_cast2_mid2_reg_4580;
    end else begin
        h5_phi_fu_1829_p4 = h5_reg_1825;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_1737_p4 = h_cast7_mid2_reg_3592;
    end else begin
        h_phi_fu_1737_p4 = h_reg_1733;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4540) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_1841_p4 = w_17_fu_3458_p2;
    end else begin
        w6_phi_fu_1841_p4 = w6_reg_1837;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_3556 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_1749_p4 = w_15_fu_2167_p2;
    end else begin
        w_phi_fu_1749_p4 = w_reg_1745;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_ce1 = 1'b1;
    end else begin
        weight_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_10_V_ce1 = 1'b1;
    end else begin
        weight_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_11_V_ce1 = 1'b1;
    end else begin
        weight_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_12_V_ce1 = 1'b1;
    end else begin
        weight_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_13_V_ce1 = 1'b1;
    end else begin
        weight_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_14_V_ce1 = 1'b1;
    end else begin
        weight_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_15_V_ce1 = 1'b1;
    end else begin
        weight_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_16_V_ce1 = 1'b1;
    end else begin
        weight_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_17_V_ce1 = 1'b1;
    end else begin
        weight_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_18_V_ce1 = 1'b1;
    end else begin
        weight_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_19_V_ce1 = 1'b1;
    end else begin
        weight_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_ce1 = 1'b1;
    end else begin
        weight_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_20_V_ce1 = 1'b1;
    end else begin
        weight_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_21_V_ce1 = 1'b1;
    end else begin
        weight_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_22_V_ce1 = 1'b1;
    end else begin
        weight_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_23_V_ce1 = 1'b1;
    end else begin
        weight_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_ce1 = 1'b1;
    end else begin
        weight_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_ce1 = 1'b1;
    end else begin
        weight_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_ce1 = 1'b1;
    end else begin
        weight_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_ce1 = 1'b1;
    end else begin
        weight_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_6_V_ce1 = 1'b1;
    end else begin
        weight_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_7_V_ce1 = 1'b1;
    end else begin
        weight_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_8_V_ce1 = 1'b1;
    end else begin
        weight_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_9_V_ce1 = 1'b1;
    end else begin
        weight_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten4_fu_2065_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten4_fu_2065_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond14_fu_2350_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond15_fu_2434_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond17_fu_2587_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (ap_enable_reg_pp1_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3253_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (ap_enable_reg_pp1_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3253_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_3277_p3 = ((exitcond_flatten3_fu_3271_p2[0:0] === 1'b1) ? co_11_fu_3265_p2 : co4_phi_fu_1807_p4);

assign bias_V_address0 = co_cast8_mid2_fu_2191_p1;

assign buffer1_1_48_8x8_p_V_10_address1 = buffer1_1_48_8x8_p_V_186_reg_4710;

assign buffer1_1_48_8x8_p_V_10_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_11_address1 = buffer1_1_48_8x8_p_V_167_reg_4596;

assign buffer1_1_48_8x8_p_V_11_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_12_address1 = buffer1_1_48_8x8_p_V_171_reg_4620;

assign buffer1_1_48_8x8_p_V_12_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_13_address1 = buffer1_1_48_8x8_p_V_184_reg_4698;

assign buffer1_1_48_8x8_p_V_13_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_14_address1 = buffer1_1_48_8x8_p_V_190_reg_4734;

assign buffer1_1_48_8x8_p_V_14_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_15_address1 = buffer1_1_48_8x8_p_V_174_reg_4638;

assign buffer1_1_48_8x8_p_V_15_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_16_address1 = buffer1_1_48_8x8_p_V_178_reg_4662;

assign buffer1_1_48_8x8_p_V_16_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_17_address1 = buffer1_1_48_8x8_p_V_187_reg_4716;

assign buffer1_1_48_8x8_p_V_17_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_18_address1 = buffer1_1_48_8x8_p_V_181_reg_4680;

assign buffer1_1_48_8x8_p_V_18_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_19_address1 = buffer1_1_48_8x8_p_V_189_reg_4728;

assign buffer1_1_48_8x8_p_V_19_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_1_address1 = buffer1_1_48_8x8_p_V_170_reg_4614;

assign buffer1_1_48_8x8_p_V_1_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_20_address1 = buffer1_1_48_8x8_p_V_180_reg_4674;

assign buffer1_1_48_8x8_p_V_20_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_21_address1 = buffer1_1_48_8x8_p_V_188_reg_4722;

assign buffer1_1_48_8x8_p_V_21_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_22_address1 = buffer1_1_48_8x8_p_V_172_reg_4626;

assign buffer1_1_48_8x8_p_V_22_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_23_address1 = buffer1_1_48_8x8_p_V_168_reg_4602;

assign buffer1_1_48_8x8_p_V_23_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_24_address1 = buffer1_1_48_8x8_p_V_185_reg_4704;

assign buffer1_1_48_8x8_p_V_24_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_2_address1 = buffer1_1_48_8x8_p_V_182_reg_4686;

assign buffer1_1_48_8x8_p_V_2_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_3_address1 = buffer1_1_48_8x8_p_V_173_reg_4632;

assign buffer1_1_48_8x8_p_V_3_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_4_address1 = buffer1_1_48_8x8_p_V_176_reg_4650;

assign buffer1_1_48_8x8_p_V_4_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_5_address1 = buffer1_1_48_8x8_p_V_183_reg_4692;

assign buffer1_1_48_8x8_p_V_5_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_6_address1 = buffer1_1_48_8x8_p_V_179_reg_4668;

assign buffer1_1_48_8x8_p_V_6_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_7_address1 = buffer1_1_48_8x8_p_V_175_reg_4644;

assign buffer1_1_48_8x8_p_V_7_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_8_address1 = buffer1_1_48_8x8_p_V_169_reg_4608;

assign buffer1_1_48_8x8_p_V_8_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_9_address1 = buffer1_1_48_8x8_p_V_177_reg_4656;

assign buffer1_1_48_8x8_p_V_9_d1 = 8'd0;

assign ci_5_fu_2593_p2 = (ci_reg_1781 + 6'd1);

assign ci_cast3_cast_fu_2474_p1 = ci_reg_1781;

assign ci_cast3_fu_2446_p1 = ci_reg_1781;

assign co_11_fu_3265_p2 = (6'd1 + co4_phi_fu_1807_p4);

assign co_9_fu_2097_p2 = (6'd1 + co_phi_fu_1714_p4);

assign co_cast8_mid2_fu_2191_p1 = ap_reg_pp0_iter8_co_cast8_mid2_v_reg_3578;

assign co_cast8_mid2_v_fu_2110_p3 = ((exitcond_flatten_reg_3565[0:0] === 1'b1) ? co_9_fu_2097_p2 : co_phi_fu_1714_p4);

assign exitcond14_fu_2350_p2 = ((h1_reg_1757 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond15_fu_2434_p2 = ((w2_reg_1769 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond16_fu_3335_p2 = ((w6_phi_fu_1841_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond17_fu_2587_p2 = ((ci_reg_1781 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond23_mid_fu_2134_p2 = (exitcond_fu_2128_p2 & not_exitcond_flatten_fu_2123_p2);

assign exitcond_flatten3_fu_3271_p2 = ((indvar_flatten6_reg_1814 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_2065_p2 = ((indvar_flatten4_reg_1699 == 12'd3072) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_3253_p2 = ((indvar_flatten5_reg_1792 == 12'd3072) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2077_p2 = ((indvar_flatten_reg_1722 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_2128_p2 = ((w_phi_fu_1749_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3341_p2 = (exitcond16_fu_3335_p2 & not_exitcond_flatten_4_fu_3330_p2);

assign grp_fu_2117_p0 = ((exitcond_flatten_reg_3565[0:0] === 1'b1) ? co_9_fu_2097_p2 : co_phi_fu_1714_p4);

assign h1_cast5_cast_fu_2306_p1 = h1_reg_1757;

assign h5_cast2_mid2_cast_fu_3410_p1 = h5_cast2_mid2_reg_4580;

assign h5_cast2_mid2_fu_3366_p3 = ((exitcond_mid_fu_3341_p2[0:0] === 1'b1) ? h_2_fu_3347_p2 : h5_mid_fu_3299_p3);

assign h5_mid_fu_3299_p3 = ((exitcond_flatten3_reg_4549[0:0] === 1'b1) ? 4'd1 : h5_phi_fu_1829_p4);

assign h_15_fu_2140_p2 = (4'd1 + h_mid_fu_2103_p3);

assign h_2_fu_3347_p2 = (4'd1 + h5_mid_fu_3299_p3);

assign h_3_fu_2440_p2 = (h1_reg_1757 + 4'd1);

assign h_cast7_mid2_cast_fu_2231_p1 = ap_reg_pp0_iter8_h_cast7_mid2_reg_3592;

assign h_cast7_mid2_fu_2159_p3 = ((exitcond23_mid_fu_2134_p2[0:0] === 1'b1) ? h_15_fu_2140_p2 : h_mid_fu_2103_p3);

assign h_mid_fu_2103_p3 = ((exitcond_flatten_reg_3565[0:0] === 1'b1) ? 4'd1 : h_phi_fu_1737_p4);

assign indvar_flatten21_op_fu_3285_p2 = (indvar_flatten6_reg_1814 + 8'd1);

assign indvar_flatten_next4_fu_2071_p2 = (indvar_flatten4_reg_1699 + 12'd1);

assign indvar_flatten_next5_fu_3291_p3 = ((exitcond_flatten3_fu_3271_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten21_op_fu_3285_p2);

assign indvar_flatten_next6_fu_3259_p2 = (indvar_flatten5_reg_1792 + 12'd1);

assign indvar_flatten_next_fu_2089_p3 = ((exitcond_flatten_fu_2077_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_2083_p2);

assign indvar_flatten_op_fu_2083_p2 = (indvar_flatten_reg_1722 + 8'd1);

assign input_V_address0 = input_V_addr_reg_3894;

assign mul2_fu_3314_p1 = mul2_fu_3314_p10;

assign mul2_fu_3314_p10 = arrayNo_mid2_v_reg_4556;

assign mul2_fu_3314_p2 = (14'd86 * mul2_fu_3314_p1);

assign mul_fu_2175_p1 = mul_fu_2175_p10;

assign mul_fu_2175_p10 = ap_reg_pp0_iter7_co_cast8_mid2_v_reg_3578;

assign mul_fu_2175_p2 = (14'd86 * mul_fu_2175_p1);

assign not_exitcond_flatten_4_fu_3330_p2 = (exitcond_flatten3_reg_4549 ^ 1'd1);

assign not_exitcond_flatten_fu_2123_p2 = (exitcond_flatten_reg_3565 ^ 1'd1);

assign p_shl10_cast_fu_3423_p3 = {{tmp_301_fu_3419_p1}, {3'd0}};

assign p_shl11_cast_fu_3435_p3 = {{tmp_302_fu_3431_p1}, {1'd0}};

assign p_shl12_cast_fu_3385_p1 = $unsigned(tmp_282_fu_3381_p1);

assign p_shl13_cast_fu_3400_p1 = $unsigned(tmp_283_fu_3396_p1);

assign p_shl1_cast_fu_2256_p3 = {{tmp_297_fu_2252_p1}, {1'd0}};

assign p_shl2_cast_fu_2206_p1 = $unsigned(tmp_s_fu_2202_p1);

assign p_shl3_cast_fu_2221_p1 = $unsigned(tmp_270_fu_2217_p1);

assign p_shl4_cast_fu_2318_p1 = tmp_276_fu_2310_p3;

assign p_shl5_cast_fu_2330_p1 = tmp_277_fu_2322_p3;

assign p_shl6_cast_fu_2521_p1 = tmp_304_fu_2513_p3;

assign p_shl7_cast_fu_2533_p1 = tmp_305_fu_2525_p3;

assign p_shl8_cast_fu_2486_p1 = tmp_289_fu_2478_p3;

assign p_shl9_cast_fu_2498_p1 = tmp_290_fu_2490_p3;

assign p_shl_cast_fu_2244_p3 = {{tmp_296_fu_2240_p1}, {3'd0}};

assign tmp_19_fu_3494_p25 = grp_fu_3306_p2;

assign tmp_20_fu_2613_p2 = (buffer1_1_48_8x8_p_V_119_reg_4180 + tmp_308_fu_2609_p1);

assign tmp_22_fu_2948_p2 = (buffer1_1_48_8x8_p_V_24_q0 + tmp_309_fu_2944_p1);

assign tmp_270_fu_2217_p1 = $signed(tmp_295_fu_2210_p3);

assign tmp_271_fu_2225_p2 = (p_shl2_cast_fu_2206_p1 + p_shl3_cast_fu_2221_p1);

assign tmp_272_fu_2146_p2 = (exitcond23_mid_fu_2134_p2 | exitcond_flatten_reg_3565);

assign tmp_273_fu_2234_p2 = (h_cast7_mid2_cast_fu_2231_p1 + tmp_271_fu_2225_p2);

assign tmp_274_fu_2264_p2 = (p_shl_cast_fu_2244_p3 + p_shl1_cast_fu_2256_p3);

assign tmp_275_fu_2273_p2 = (w_cast6_cast_fu_2270_p1 + tmp_274_fu_2264_p2);

assign tmp_276_fu_2310_p3 = {{h1_reg_1757}, {3'd0}};

assign tmp_277_fu_2322_p3 = {{h1_reg_1757}, {1'd0}};

assign tmp_278_fu_2334_p2 = (p_shl5_cast_fu_2330_p1 + p_shl4_cast_fu_2318_p1);

assign tmp_279_fu_2344_p2 = (tmp_314_cast_fu_2340_p1 + 9'd100);

assign tmp_280_fu_2368_p2 = (tmp_278_reg_3627 + w2_cast4_cast_fu_2364_p1);

assign tmp_281_fu_2401_p2 = (tmp_279_reg_3632 + w2_cast4_cast2_fu_2360_p1);

assign tmp_282_fu_3381_p1 = $signed(tmp_299_fu_3374_p3);

assign tmp_283_fu_3396_p1 = $signed(tmp_300_fu_3389_p3);

assign tmp_284_fu_3404_p2 = (p_shl12_cast_fu_3385_p1 + p_shl13_cast_fu_3400_p1);

assign tmp_285_fu_3353_p2 = (exitcond_mid_fu_3341_p2 | exitcond_flatten3_reg_4549);

assign tmp_286_fu_3413_p2 = (h5_cast2_mid2_cast_fu_3410_p1 + tmp_284_fu_3404_p2);

assign tmp_287_fu_3443_p2 = (p_shl10_cast_fu_3423_p3 + p_shl11_cast_fu_3435_p3);

assign tmp_288_fu_3452_p2 = (w6_cast1_cast_fu_3449_p1 + tmp_287_fu_3443_p2);

assign tmp_289_fu_2478_p3 = {{ci_reg_1781}, {3'd0}};

assign tmp_290_fu_2490_p3 = {{ci_reg_1781}, {1'd0}};

assign tmp_291_fu_2502_p2 = (p_shl8_cast_fu_2486_p1 + p_shl9_cast_fu_2498_p1);

assign tmp_292_fu_2508_p2 = (h1_cast5_cast_reg_3622 + tmp_291_fu_2502_p2);

assign tmp_293_fu_2537_p2 = (p_shl6_cast_fu_2521_p1 + p_shl7_cast_fu_2533_p1);

assign tmp_294_fu_2195_p3 = {{tmp_reg_3603}, {3'd0}};

assign tmp_295_fu_2210_p3 = {{tmp_reg_3603}, {1'd0}};

assign tmp_296_fu_2240_p1 = tmp_273_fu_2234_p2[5:0];

assign tmp_297_fu_2252_p1 = tmp_273_fu_2234_p2[7:0];

assign tmp_299_fu_3374_p3 = {{tmp_298_reg_4568}, {3'd0}};

assign tmp_300_fu_3389_p3 = {{tmp_298_reg_4568}, {1'd0}};

assign tmp_301_fu_3419_p1 = tmp_286_fu_3413_p2[5:0];

assign tmp_302_fu_3431_p1 = tmp_286_fu_3413_p2[7:0];

assign tmp_303_fu_3548_p3 = tmp_19_fu_3494_p26[32'd7];

assign tmp_304_fu_2513_p3 = {{tmp_292_fu_2508_p2}, {3'd0}};

assign tmp_305_fu_2525_p3 = {{tmp_292_fu_2508_p2}, {1'd0}};

assign tmp_306_fu_2543_p2 = (w2_cast4_cast1_reg_3641 + tmp_293_fu_2537_p2);

assign tmp_307_fu_2553_p2 = (ci_cast3_cast_fu_2474_p1 + 7'd48);

assign tmp_308_fu_2609_p1 = grp_MUL_DP_fu_1849_ap_return_0[7:0];

assign tmp_309_fu_2944_p1 = MUL_DP_ret48_reg_4300_1[7:0];

assign tmp_310_fu_2623_p1 = grp_MUL_DP_fu_1858_ap_return_0[7:0];

assign tmp_311_cast_fu_2279_p1 = tmp_275_reg_3609;

assign tmp_311_fu_2957_p1 = MUL_DP_ret49_reg_4305_1[7:0];

assign tmp_312_fu_2637_p1 = grp_MUL_DP_fu_1867_ap_return_0[7:0];

assign tmp_313_fu_2970_p1 = MUL_DP_ret50_reg_4310_1[7:0];

assign tmp_314_cast_fu_2340_p1 = tmp_278_fu_2334_p2;

assign tmp_314_fu_2651_p1 = grp_MUL_DP_fu_1876_ap_return_0[7:0];

assign tmp_315_fu_2983_p1 = MUL_DP_ret51_reg_4315_1[7:0];

assign tmp_316_cast_fu_2373_p1 = tmp_280_fu_2368_p2;

assign tmp_316_fu_2665_p1 = grp_MUL_DP_fu_1885_ap_return_0[7:0];

assign tmp_317_cast_fu_2406_p1 = $signed(tmp_281_fu_2401_p2);

assign tmp_317_fu_2996_p1 = MUL_DP_ret52_reg_4320_1[7:0];

assign tmp_318_fu_2679_p1 = grp_MUL_DP_fu_1894_ap_return_0[7:0];

assign tmp_319_fu_3009_p1 = MUL_DP_ret53_reg_4325_1[7:0];

assign tmp_320_fu_2693_p1 = grp_MUL_DP_fu_1903_ap_return_0[7:0];

assign tmp_321_fu_3022_p1 = MUL_DP_ret54_reg_4330_1[7:0];

assign tmp_322_fu_2707_p1 = grp_MUL_DP_fu_1912_ap_return_0[7:0];

assign tmp_323_fu_3035_p1 = MUL_DP_ret55_reg_4335_1[7:0];

assign tmp_324_fu_2721_p1 = grp_MUL_DP_fu_1921_ap_return_0[7:0];

assign tmp_325_fu_3048_p1 = MUL_DP_ret56_reg_4340_1[7:0];

assign tmp_326_fu_2735_p1 = grp_MUL_DP_fu_1930_ap_return_0[7:0];

assign tmp_327_fu_3061_p1 = MUL_DP_ret57_reg_4345_1[7:0];

assign tmp_328_cast_fu_3463_p1 = ap_reg_pp1_iter8_tmp_288_reg_4586;

assign tmp_328_fu_2749_p1 = grp_MUL_DP_fu_1939_ap_return_0[7:0];

assign tmp_329_fu_3074_p1 = MUL_DP_ret58_reg_4350_1[7:0];

assign tmp_330_fu_2763_p1 = grp_MUL_DP_fu_1948_ap_return_0[7:0];

assign tmp_331_fu_3087_p1 = MUL_DP_ret59_reg_4355_1[7:0];

assign tmp_332_fu_2777_p1 = grp_MUL_DP_fu_1957_ap_return_0[7:0];

assign tmp_333_fu_3100_p1 = MUL_DP_ret60_reg_4360_1[7:0];

assign tmp_334_fu_2791_p1 = grp_MUL_DP_fu_1966_ap_return_0[7:0];

assign tmp_335_fu_3113_p1 = MUL_DP_ret61_reg_4365_1[7:0];

assign tmp_336_cast_fu_2548_p1 = tmp_306_fu_2543_p2;

assign tmp_336_fu_2805_p1 = grp_MUL_DP_fu_1975_ap_return_0[7:0];

assign tmp_337_cast_fu_2559_p1 = tmp_307_fu_2553_p2;

assign tmp_337_fu_3126_p1 = MUL_DP_ret62_reg_4370_1[7:0];

assign tmp_338_fu_2819_p1 = grp_MUL_DP_fu_1984_ap_return_0[7:0];

assign tmp_339_fu_3139_p1 = MUL_DP_ret63_reg_4375_1[7:0];

assign tmp_340_fu_2833_p1 = grp_MUL_DP_fu_1993_ap_return_0[7:0];

assign tmp_341_fu_3152_p1 = MUL_DP_ret64_reg_4380_1[7:0];

assign tmp_342_fu_2847_p1 = grp_MUL_DP_fu_2002_ap_return_0[7:0];

assign tmp_343_fu_3165_p1 = MUL_DP_ret65_reg_4385_1[7:0];

assign tmp_344_fu_2861_p1 = grp_MUL_DP_fu_2011_ap_return_0[7:0];

assign tmp_345_fu_3178_p1 = MUL_DP_ret66_reg_4390_1[7:0];

assign tmp_346_fu_2875_p1 = grp_MUL_DP_fu_2020_ap_return_0[7:0];

assign tmp_347_fu_3191_p1 = MUL_DP_ret67_reg_4395_1[7:0];

assign tmp_348_fu_2889_p1 = grp_MUL_DP_fu_2029_ap_return_0[7:0];

assign tmp_349_fu_3204_p1 = MUL_DP_ret68_reg_4400_1[7:0];

assign tmp_350_fu_2903_p1 = grp_MUL_DP_fu_2038_ap_return_0[7:0];

assign tmp_351_fu_3217_p1 = MUL_DP_ret69_reg_4405_1[7:0];

assign tmp_352_fu_2917_p1 = grp_MUL_DP_fu_2047_ap_return_0[7:0];

assign tmp_353_fu_3230_p1 = MUL_DP_ret70_reg_4410_1[7:0];

assign tmp_354_fu_2931_p1 = grp_MUL_DP_fu_2056_ap_return_0[7:0];

assign tmp_355_fu_3243_p1 = MUL_DP_ret_reg_4415_1[7:0];

assign tmp_40_10_fu_2767_p2 = (buffer1_1_48_8x8_p_V_141_reg_4235 + tmp_330_fu_2763_p1);

assign tmp_40_11_fu_2781_p2 = (buffer1_1_48_8x8_p_V_143_reg_4240 + tmp_332_fu_2777_p1);

assign tmp_40_12_fu_2795_p2 = (buffer1_1_48_8x8_p_V_145_reg_4245 + tmp_334_fu_2791_p1);

assign tmp_40_13_fu_2809_p2 = (buffer1_1_48_8x8_p_V_147_reg_4250 + tmp_336_fu_2805_p1);

assign tmp_40_14_fu_2823_p2 = (buffer1_1_48_8x8_p_V_149_reg_4255 + tmp_338_fu_2819_p1);

assign tmp_40_15_fu_2837_p2 = (buffer1_1_48_8x8_p_V_151_reg_4260 + tmp_340_fu_2833_p1);

assign tmp_40_16_fu_2851_p2 = (buffer1_1_48_8x8_p_V_153_reg_4265 + tmp_342_fu_2847_p1);

assign tmp_40_17_fu_2865_p2 = (buffer1_1_48_8x8_p_V_155_reg_4270 + tmp_344_fu_2861_p1);

assign tmp_40_18_fu_2879_p2 = (buffer1_1_48_8x8_p_V_157_reg_4275 + tmp_346_fu_2875_p1);

assign tmp_40_19_fu_2893_p2 = (buffer1_1_48_8x8_p_V_159_reg_4280 + tmp_348_fu_2889_p1);

assign tmp_40_1_fu_2627_p2 = (buffer1_1_48_8x8_p_V_121_reg_4185 + tmp_310_fu_2623_p1);

assign tmp_40_20_fu_2907_p2 = (buffer1_1_48_8x8_p_V_161_reg_4285 + tmp_350_fu_2903_p1);

assign tmp_40_21_fu_2921_p2 = (buffer1_1_48_8x8_p_V_163_reg_4290 + tmp_352_fu_2917_p1);

assign tmp_40_22_fu_2935_p2 = (buffer1_1_48_8x8_p_V_165_reg_4295 + tmp_354_fu_2931_p1);

assign tmp_40_2_fu_2641_p2 = (buffer1_1_48_8x8_p_V_123_reg_4190 + tmp_312_fu_2637_p1);

assign tmp_40_3_fu_2655_p2 = (buffer1_1_48_8x8_p_V_125_reg_4195 + tmp_314_fu_2651_p1);

assign tmp_40_4_fu_2669_p2 = (buffer1_1_48_8x8_p_V_127_reg_4200 + tmp_316_fu_2665_p1);

assign tmp_40_5_fu_2683_p2 = (buffer1_1_48_8x8_p_V_129_reg_4205 + tmp_318_fu_2679_p1);

assign tmp_40_6_fu_2697_p2 = (buffer1_1_48_8x8_p_V_131_reg_4210 + tmp_320_fu_2693_p1);

assign tmp_40_7_fu_2711_p2 = (buffer1_1_48_8x8_p_V_133_reg_4215 + tmp_322_fu_2707_p1);

assign tmp_40_8_fu_2725_p2 = (buffer1_1_48_8x8_p_V_135_reg_4220 + tmp_324_fu_2721_p1);

assign tmp_40_9_fu_2739_p2 = (buffer1_1_48_8x8_p_V_137_reg_4225 + tmp_326_fu_2735_p1);

assign tmp_40_s_fu_2753_p2 = (buffer1_1_48_8x8_p_V_139_reg_4230 + tmp_328_fu_2749_p1);

assign tmp_42_10_fu_3091_p2 = (buffer1_1_48_8x8_p_V_11_q0 + tmp_331_fu_3087_p1);

assign tmp_42_11_fu_3104_p2 = (buffer1_1_48_8x8_p_V_12_q0 + tmp_333_fu_3100_p1);

assign tmp_42_12_fu_3117_p2 = (buffer1_1_48_8x8_p_V_13_q0 + tmp_335_fu_3113_p1);

assign tmp_42_13_fu_3130_p2 = (buffer1_1_48_8x8_p_V_14_q0 + tmp_337_fu_3126_p1);

assign tmp_42_14_fu_3143_p2 = (buffer1_1_48_8x8_p_V_15_q0 + tmp_339_fu_3139_p1);

assign tmp_42_15_fu_3156_p2 = (buffer1_1_48_8x8_p_V_16_q0 + tmp_341_fu_3152_p1);

assign tmp_42_16_fu_3169_p2 = (buffer1_1_48_8x8_p_V_17_q0 + tmp_343_fu_3165_p1);

assign tmp_42_17_fu_3182_p2 = (buffer1_1_48_8x8_p_V_18_q0 + tmp_345_fu_3178_p1);

assign tmp_42_18_fu_3195_p2 = (buffer1_1_48_8x8_p_V_19_q0 + tmp_347_fu_3191_p1);

assign tmp_42_19_fu_3208_p2 = (buffer1_1_48_8x8_p_V_20_q0 + tmp_349_fu_3204_p1);

assign tmp_42_1_fu_2961_p2 = (buffer1_1_48_8x8_p_V_1_q0 + tmp_311_fu_2957_p1);

assign tmp_42_20_fu_3221_p2 = (buffer1_1_48_8x8_p_V_21_q0 + tmp_351_fu_3217_p1);

assign tmp_42_21_fu_3234_p2 = (buffer1_1_48_8x8_p_V_22_q0 + tmp_353_fu_3230_p1);

assign tmp_42_22_fu_3247_p2 = (buffer1_1_48_8x8_p_V_23_q0 + tmp_355_fu_3243_p1);

assign tmp_42_2_fu_2974_p2 = (buffer1_1_48_8x8_p_V_2_q0 + tmp_313_fu_2970_p1);

assign tmp_42_3_fu_2987_p2 = (buffer1_1_48_8x8_p_V_3_q0 + tmp_315_fu_2983_p1);

assign tmp_42_4_fu_3000_p2 = (buffer1_1_48_8x8_p_V_4_q0 + tmp_317_fu_2996_p1);

assign tmp_42_5_fu_3013_p2 = (buffer1_1_48_8x8_p_V_5_q0 + tmp_319_fu_3009_p1);

assign tmp_42_6_fu_3026_p2 = (buffer1_1_48_8x8_p_V_6_q0 + tmp_321_fu_3022_p1);

assign tmp_42_7_fu_3039_p2 = (buffer1_1_48_8x8_p_V_7_q0 + tmp_323_fu_3035_p1);

assign tmp_42_8_fu_3052_p2 = (buffer1_1_48_8x8_p_V_8_q0 + tmp_325_fu_3048_p1);

assign tmp_42_9_fu_3065_p2 = (buffer1_1_48_8x8_p_V_9_q0 + tmp_327_fu_3061_p1);

assign tmp_42_s_fu_3078_p2 = (buffer1_1_48_8x8_p_V_10_q0 + tmp_329_fu_3074_p1);

assign tmp_s_fu_2202_p1 = $signed(tmp_294_fu_2195_p3);

assign w2_cast4_cast1_fu_2356_p1 = w2_reg_1769;

assign w2_cast4_cast2_fu_2360_p1 = w2_reg_1769;

assign w2_cast4_cast_fu_2364_p1 = w2_reg_1769;

assign w6_cast1_cast_fu_3449_p1 = w6_mid2_reg_4574;

assign w6_mid2_fu_3358_p3 = ((tmp_285_fu_3353_p2[0:0] === 1'b1) ? 4'd1 : w6_phi_fu_1841_p4);

assign w_15_fu_2167_p2 = (w_mid2_reg_3586 + 4'd1);

assign w_16_fu_2599_p2 = (w2_reg_1769 + 4'd1);

assign w_17_fu_3458_p2 = (w6_mid2_reg_4574 + 4'd1);

assign w_cast6_cast_fu_2270_p1 = ap_reg_pp0_iter8_w_mid2_reg_3586;

assign w_mid2_fu_2151_p3 = ((tmp_272_fu_2146_p2[0:0] === 1'b1) ? 4'd1 : w_phi_fu_1749_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_3899;

assign weight_0_V_address1 = weight_0_V_addr_4_reg_3904;

assign weight_10_V_address0 = weight_10_V_addr_reg_3999;

assign weight_10_V_address1 = weight_10_V_addr_4_reg_4004;

assign weight_11_V_address0 = weight_11_V_addr_reg_4009;

assign weight_11_V_address1 = weight_11_V_addr_4_reg_4014;

assign weight_12_V_address0 = weight_12_V_addr_reg_4019;

assign weight_12_V_address1 = weight_12_V_addr_4_reg_4024;

assign weight_13_V_address0 = weight_13_V_addr_reg_4029;

assign weight_13_V_address1 = weight_13_V_addr_4_reg_4034;

assign weight_14_V_address0 = weight_14_V_addr_reg_4039;

assign weight_14_V_address1 = weight_14_V_addr_4_reg_4044;

assign weight_15_V_address0 = weight_15_V_addr_reg_4049;

assign weight_15_V_address1 = weight_15_V_addr_4_reg_4054;

assign weight_16_V_address0 = weight_16_V_addr_reg_4059;

assign weight_16_V_address1 = weight_16_V_addr_4_reg_4064;

assign weight_17_V_address0 = weight_17_V_addr_reg_4069;

assign weight_17_V_address1 = weight_17_V_addr_4_reg_4074;

assign weight_18_V_address0 = weight_18_V_addr_reg_4079;

assign weight_18_V_address1 = weight_18_V_addr_4_reg_4084;

assign weight_19_V_address0 = weight_19_V_addr_reg_4089;

assign weight_19_V_address1 = weight_19_V_addr_4_reg_4094;

assign weight_1_V_address0 = weight_1_V_addr_reg_3909;

assign weight_1_V_address1 = weight_1_V_addr_4_reg_3914;

assign weight_20_V_address0 = weight_20_V_addr_reg_4099;

assign weight_20_V_address1 = weight_20_V_addr_4_reg_4104;

assign weight_21_V_address0 = weight_21_V_addr_reg_4109;

assign weight_21_V_address1 = weight_21_V_addr_4_reg_4114;

assign weight_22_V_address0 = weight_22_V_addr_reg_4119;

assign weight_22_V_address1 = weight_22_V_addr_4_reg_4124;

assign weight_23_V_address0 = weight_23_V_addr_reg_4129;

assign weight_23_V_address1 = weight_23_V_addr_4_reg_4134;

assign weight_2_V_address0 = weight_2_V_addr_reg_3919;

assign weight_2_V_address1 = weight_2_V_addr_4_reg_3924;

assign weight_3_V_address0 = weight_3_V_addr_reg_3929;

assign weight_3_V_address1 = weight_3_V_addr_4_reg_3934;

assign weight_4_V_address0 = weight_4_V_addr_reg_3939;

assign weight_4_V_address1 = weight_4_V_addr_4_reg_3944;

assign weight_5_V_address0 = weight_5_V_addr_reg_3949;

assign weight_5_V_address1 = weight_5_V_addr_4_reg_3954;

assign weight_6_V_address0 = weight_6_V_addr_reg_3959;

assign weight_6_V_address1 = weight_6_V_addr_4_reg_3964;

assign weight_7_V_address0 = weight_7_V_addr_reg_3969;

assign weight_7_V_address1 = weight_7_V_addr_4_reg_3974;

assign weight_8_V_address0 = weight_8_V_addr_reg_3979;

assign weight_8_V_address1 = weight_8_V_addr_4_reg_3984;

assign weight_9_V_address0 = weight_9_V_addr_reg_3989;

assign weight_9_V_address1 = weight_9_V_addr_4_reg_3994;

always @ (posedge ap_clk) begin
    h1_cast5_cast_reg_3622[9:4] <= 6'b000000;
    tmp_278_reg_3627[0] <= 1'b0;
    tmp_279_reg_3632[0] <= 1'b0;
    w2_cast4_cast1_reg_3641[13:4] <= 10'b0000000000;
    weight_0_V_addr_reg_3899[6] <= 1'b0;
    weight_1_V_addr_reg_3909[6] <= 1'b0;
    weight_2_V_addr_reg_3919[6] <= 1'b0;
    weight_3_V_addr_reg_3929[6] <= 1'b0;
    weight_4_V_addr_reg_3939[6] <= 1'b0;
    weight_5_V_addr_reg_3949[6] <= 1'b0;
    weight_6_V_addr_reg_3959[6] <= 1'b0;
    weight_7_V_addr_reg_3969[6] <= 1'b0;
    weight_8_V_addr_reg_3979[6] <= 1'b0;
    weight_9_V_addr_reg_3989[6] <= 1'b0;
    weight_10_V_addr_reg_3999[6] <= 1'b0;
    weight_11_V_addr_reg_4009[6] <= 1'b0;
    weight_12_V_addr_reg_4019[6] <= 1'b0;
    weight_13_V_addr_reg_4029[6] <= 1'b0;
    weight_14_V_addr_reg_4039[6] <= 1'b0;
    weight_15_V_addr_reg_4049[6] <= 1'b0;
    weight_16_V_addr_reg_4059[6] <= 1'b0;
    weight_17_V_addr_reg_4069[6] <= 1'b0;
    weight_18_V_addr_reg_4079[6] <= 1'b0;
    weight_19_V_addr_reg_4089[6] <= 1'b0;
    weight_20_V_addr_reg_4099[6] <= 1'b0;
    weight_21_V_addr_reg_4109[6] <= 1'b0;
    weight_22_V_addr_reg_4119[6] <= 1'b0;
    weight_23_V_addr_reg_4129[6] <= 1'b0;
end

endmodule //subconv_1x1_8_p
