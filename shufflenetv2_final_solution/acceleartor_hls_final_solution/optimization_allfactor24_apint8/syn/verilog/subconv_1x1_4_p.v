// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_4_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_0_V_address1,
        weight_0_V_ce1,
        weight_0_V_q1,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_1_V_address1,
        weight_1_V_ce1,
        weight_1_V_q1,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_2_V_address1,
        weight_2_V_ce1,
        weight_2_V_q1,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_3_V_address1,
        weight_3_V_ce1,
        weight_3_V_q1,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_4_V_address1,
        weight_4_V_ce1,
        weight_4_V_q1,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_5_V_address1,
        weight_5_V_ce1,
        weight_5_V_q1,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_6_V_address1,
        weight_6_V_ce1,
        weight_6_V_q1,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_7_V_address1,
        weight_7_V_ce1,
        weight_7_V_q1,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_8_V_address1,
        weight_8_V_ce1,
        weight_8_V_q1,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_9_V_address1,
        weight_9_V_ce1,
        weight_9_V_q1,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_10_V_address1,
        weight_10_V_ce1,
        weight_10_V_q1,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_11_V_address1,
        weight_11_V_ce1,
        weight_11_V_q1,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_12_V_address1,
        weight_12_V_ce1,
        weight_12_V_q1,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_13_V_address1,
        weight_13_V_ce1,
        weight_13_V_q1,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_14_V_address1,
        weight_14_V_ce1,
        weight_14_V_q1,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_15_V_address1,
        weight_15_V_ce1,
        weight_15_V_q1,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_16_V_address1,
        weight_16_V_ce1,
        weight_16_V_q1,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_17_V_address1,
        weight_17_V_ce1,
        weight_17_V_q1,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_18_V_address1,
        weight_18_V_ce1,
        weight_18_V_q1,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_19_V_address1,
        weight_19_V_ce1,
        weight_19_V_q1,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_20_V_address1,
        weight_20_V_ce1,
        weight_20_V_q1,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_21_V_address1,
        weight_21_V_ce1,
        weight_21_V_q1,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_22_V_address1,
        weight_22_V_ce1,
        weight_22_V_q1,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_23_V_address1,
        weight_23_V_ce1,
        weight_23_V_q1,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_96_4x4_p_V_24_address0,
        buffer1_1_96_4x4_p_V_24_ce0,
        buffer1_1_96_4x4_p_V_24_we0,
        buffer1_1_96_4x4_p_V_24_d0,
        buffer1_1_96_4x4_p_V_24_q0,
        buffer1_1_96_4x4_p_V_24_address1,
        buffer1_1_96_4x4_p_V_24_ce1,
        buffer1_1_96_4x4_p_V_24_we1,
        buffer1_1_96_4x4_p_V_24_d1,
        buffer1_1_96_4x4_p_V_1_address0,
        buffer1_1_96_4x4_p_V_1_ce0,
        buffer1_1_96_4x4_p_V_1_we0,
        buffer1_1_96_4x4_p_V_1_d0,
        buffer1_1_96_4x4_p_V_1_q0,
        buffer1_1_96_4x4_p_V_1_address1,
        buffer1_1_96_4x4_p_V_1_ce1,
        buffer1_1_96_4x4_p_V_1_we1,
        buffer1_1_96_4x4_p_V_1_d1,
        buffer1_1_96_4x4_p_V_2_address0,
        buffer1_1_96_4x4_p_V_2_ce0,
        buffer1_1_96_4x4_p_V_2_we0,
        buffer1_1_96_4x4_p_V_2_d0,
        buffer1_1_96_4x4_p_V_2_q0,
        buffer1_1_96_4x4_p_V_2_address1,
        buffer1_1_96_4x4_p_V_2_ce1,
        buffer1_1_96_4x4_p_V_2_we1,
        buffer1_1_96_4x4_p_V_2_d1,
        buffer1_1_96_4x4_p_V_3_address0,
        buffer1_1_96_4x4_p_V_3_ce0,
        buffer1_1_96_4x4_p_V_3_we0,
        buffer1_1_96_4x4_p_V_3_d0,
        buffer1_1_96_4x4_p_V_3_q0,
        buffer1_1_96_4x4_p_V_3_address1,
        buffer1_1_96_4x4_p_V_3_ce1,
        buffer1_1_96_4x4_p_V_3_we1,
        buffer1_1_96_4x4_p_V_3_d1,
        buffer1_1_96_4x4_p_V_4_address0,
        buffer1_1_96_4x4_p_V_4_ce0,
        buffer1_1_96_4x4_p_V_4_we0,
        buffer1_1_96_4x4_p_V_4_d0,
        buffer1_1_96_4x4_p_V_4_q0,
        buffer1_1_96_4x4_p_V_4_address1,
        buffer1_1_96_4x4_p_V_4_ce1,
        buffer1_1_96_4x4_p_V_4_we1,
        buffer1_1_96_4x4_p_V_4_d1,
        buffer1_1_96_4x4_p_V_5_address0,
        buffer1_1_96_4x4_p_V_5_ce0,
        buffer1_1_96_4x4_p_V_5_we0,
        buffer1_1_96_4x4_p_V_5_d0,
        buffer1_1_96_4x4_p_V_5_q0,
        buffer1_1_96_4x4_p_V_5_address1,
        buffer1_1_96_4x4_p_V_5_ce1,
        buffer1_1_96_4x4_p_V_5_we1,
        buffer1_1_96_4x4_p_V_5_d1,
        buffer1_1_96_4x4_p_V_6_address0,
        buffer1_1_96_4x4_p_V_6_ce0,
        buffer1_1_96_4x4_p_V_6_we0,
        buffer1_1_96_4x4_p_V_6_d0,
        buffer1_1_96_4x4_p_V_6_q0,
        buffer1_1_96_4x4_p_V_6_address1,
        buffer1_1_96_4x4_p_V_6_ce1,
        buffer1_1_96_4x4_p_V_6_we1,
        buffer1_1_96_4x4_p_V_6_d1,
        buffer1_1_96_4x4_p_V_7_address0,
        buffer1_1_96_4x4_p_V_7_ce0,
        buffer1_1_96_4x4_p_V_7_we0,
        buffer1_1_96_4x4_p_V_7_d0,
        buffer1_1_96_4x4_p_V_7_q0,
        buffer1_1_96_4x4_p_V_7_address1,
        buffer1_1_96_4x4_p_V_7_ce1,
        buffer1_1_96_4x4_p_V_7_we1,
        buffer1_1_96_4x4_p_V_7_d1,
        buffer1_1_96_4x4_p_V_8_address0,
        buffer1_1_96_4x4_p_V_8_ce0,
        buffer1_1_96_4x4_p_V_8_we0,
        buffer1_1_96_4x4_p_V_8_d0,
        buffer1_1_96_4x4_p_V_8_q0,
        buffer1_1_96_4x4_p_V_8_address1,
        buffer1_1_96_4x4_p_V_8_ce1,
        buffer1_1_96_4x4_p_V_8_we1,
        buffer1_1_96_4x4_p_V_8_d1,
        buffer1_1_96_4x4_p_V_9_address0,
        buffer1_1_96_4x4_p_V_9_ce0,
        buffer1_1_96_4x4_p_V_9_we0,
        buffer1_1_96_4x4_p_V_9_d0,
        buffer1_1_96_4x4_p_V_9_q0,
        buffer1_1_96_4x4_p_V_9_address1,
        buffer1_1_96_4x4_p_V_9_ce1,
        buffer1_1_96_4x4_p_V_9_we1,
        buffer1_1_96_4x4_p_V_9_d1,
        buffer1_1_96_4x4_p_V_10_address0,
        buffer1_1_96_4x4_p_V_10_ce0,
        buffer1_1_96_4x4_p_V_10_we0,
        buffer1_1_96_4x4_p_V_10_d0,
        buffer1_1_96_4x4_p_V_10_q0,
        buffer1_1_96_4x4_p_V_10_address1,
        buffer1_1_96_4x4_p_V_10_ce1,
        buffer1_1_96_4x4_p_V_10_we1,
        buffer1_1_96_4x4_p_V_10_d1,
        buffer1_1_96_4x4_p_V_11_address0,
        buffer1_1_96_4x4_p_V_11_ce0,
        buffer1_1_96_4x4_p_V_11_we0,
        buffer1_1_96_4x4_p_V_11_d0,
        buffer1_1_96_4x4_p_V_11_q0,
        buffer1_1_96_4x4_p_V_11_address1,
        buffer1_1_96_4x4_p_V_11_ce1,
        buffer1_1_96_4x4_p_V_11_we1,
        buffer1_1_96_4x4_p_V_11_d1,
        buffer1_1_96_4x4_p_V_12_address0,
        buffer1_1_96_4x4_p_V_12_ce0,
        buffer1_1_96_4x4_p_V_12_we0,
        buffer1_1_96_4x4_p_V_12_d0,
        buffer1_1_96_4x4_p_V_12_q0,
        buffer1_1_96_4x4_p_V_12_address1,
        buffer1_1_96_4x4_p_V_12_ce1,
        buffer1_1_96_4x4_p_V_12_we1,
        buffer1_1_96_4x4_p_V_12_d1,
        buffer1_1_96_4x4_p_V_13_address0,
        buffer1_1_96_4x4_p_V_13_ce0,
        buffer1_1_96_4x4_p_V_13_we0,
        buffer1_1_96_4x4_p_V_13_d0,
        buffer1_1_96_4x4_p_V_13_q0,
        buffer1_1_96_4x4_p_V_13_address1,
        buffer1_1_96_4x4_p_V_13_ce1,
        buffer1_1_96_4x4_p_V_13_we1,
        buffer1_1_96_4x4_p_V_13_d1,
        buffer1_1_96_4x4_p_V_14_address0,
        buffer1_1_96_4x4_p_V_14_ce0,
        buffer1_1_96_4x4_p_V_14_we0,
        buffer1_1_96_4x4_p_V_14_d0,
        buffer1_1_96_4x4_p_V_14_q0,
        buffer1_1_96_4x4_p_V_14_address1,
        buffer1_1_96_4x4_p_V_14_ce1,
        buffer1_1_96_4x4_p_V_14_we1,
        buffer1_1_96_4x4_p_V_14_d1,
        buffer1_1_96_4x4_p_V_15_address0,
        buffer1_1_96_4x4_p_V_15_ce0,
        buffer1_1_96_4x4_p_V_15_we0,
        buffer1_1_96_4x4_p_V_15_d0,
        buffer1_1_96_4x4_p_V_15_q0,
        buffer1_1_96_4x4_p_V_15_address1,
        buffer1_1_96_4x4_p_V_15_ce1,
        buffer1_1_96_4x4_p_V_15_we1,
        buffer1_1_96_4x4_p_V_15_d1,
        buffer1_1_96_4x4_p_V_16_address0,
        buffer1_1_96_4x4_p_V_16_ce0,
        buffer1_1_96_4x4_p_V_16_we0,
        buffer1_1_96_4x4_p_V_16_d0,
        buffer1_1_96_4x4_p_V_16_q0,
        buffer1_1_96_4x4_p_V_16_address1,
        buffer1_1_96_4x4_p_V_16_ce1,
        buffer1_1_96_4x4_p_V_16_we1,
        buffer1_1_96_4x4_p_V_16_d1,
        buffer1_1_96_4x4_p_V_17_address0,
        buffer1_1_96_4x4_p_V_17_ce0,
        buffer1_1_96_4x4_p_V_17_we0,
        buffer1_1_96_4x4_p_V_17_d0,
        buffer1_1_96_4x4_p_V_17_q0,
        buffer1_1_96_4x4_p_V_17_address1,
        buffer1_1_96_4x4_p_V_17_ce1,
        buffer1_1_96_4x4_p_V_17_we1,
        buffer1_1_96_4x4_p_V_17_d1,
        buffer1_1_96_4x4_p_V_18_address0,
        buffer1_1_96_4x4_p_V_18_ce0,
        buffer1_1_96_4x4_p_V_18_we0,
        buffer1_1_96_4x4_p_V_18_d0,
        buffer1_1_96_4x4_p_V_18_q0,
        buffer1_1_96_4x4_p_V_18_address1,
        buffer1_1_96_4x4_p_V_18_ce1,
        buffer1_1_96_4x4_p_V_18_we1,
        buffer1_1_96_4x4_p_V_18_d1,
        buffer1_1_96_4x4_p_V_19_address0,
        buffer1_1_96_4x4_p_V_19_ce0,
        buffer1_1_96_4x4_p_V_19_we0,
        buffer1_1_96_4x4_p_V_19_d0,
        buffer1_1_96_4x4_p_V_19_q0,
        buffer1_1_96_4x4_p_V_19_address1,
        buffer1_1_96_4x4_p_V_19_ce1,
        buffer1_1_96_4x4_p_V_19_we1,
        buffer1_1_96_4x4_p_V_19_d1,
        buffer1_1_96_4x4_p_V_20_address0,
        buffer1_1_96_4x4_p_V_20_ce0,
        buffer1_1_96_4x4_p_V_20_we0,
        buffer1_1_96_4x4_p_V_20_d0,
        buffer1_1_96_4x4_p_V_20_q0,
        buffer1_1_96_4x4_p_V_20_address1,
        buffer1_1_96_4x4_p_V_20_ce1,
        buffer1_1_96_4x4_p_V_20_we1,
        buffer1_1_96_4x4_p_V_20_d1,
        buffer1_1_96_4x4_p_V_21_address0,
        buffer1_1_96_4x4_p_V_21_ce0,
        buffer1_1_96_4x4_p_V_21_we0,
        buffer1_1_96_4x4_p_V_21_d0,
        buffer1_1_96_4x4_p_V_21_q0,
        buffer1_1_96_4x4_p_V_21_address1,
        buffer1_1_96_4x4_p_V_21_ce1,
        buffer1_1_96_4x4_p_V_21_we1,
        buffer1_1_96_4x4_p_V_21_d1,
        buffer1_1_96_4x4_p_V_22_address0,
        buffer1_1_96_4x4_p_V_22_ce0,
        buffer1_1_96_4x4_p_V_22_we0,
        buffer1_1_96_4x4_p_V_22_d0,
        buffer1_1_96_4x4_p_V_22_q0,
        buffer1_1_96_4x4_p_V_22_address1,
        buffer1_1_96_4x4_p_V_22_ce1,
        buffer1_1_96_4x4_p_V_22_we1,
        buffer1_1_96_4x4_p_V_22_d1,
        buffer1_1_96_4x4_p_V_23_address0,
        buffer1_1_96_4x4_p_V_23_ce0,
        buffer1_1_96_4x4_p_V_23_we0,
        buffer1_1_96_4x4_p_V_23_d0,
        buffer1_1_96_4x4_p_V_23_q0,
        buffer1_1_96_4x4_p_V_23_address1,
        buffer1_1_96_4x4_p_V_23_ce1,
        buffer1_1_96_4x4_p_V_23_we1,
        buffer1_1_96_4x4_p_V_23_d1
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_pp0_stage0 = 29'd2;
parameter    ap_ST_fsm_state14 = 29'd4;
parameter    ap_ST_fsm_state15 = 29'd8;
parameter    ap_ST_fsm_state16 = 29'd16;
parameter    ap_ST_fsm_state17 = 29'd32;
parameter    ap_ST_fsm_state18 = 29'd64;
parameter    ap_ST_fsm_state19 = 29'd128;
parameter    ap_ST_fsm_state20 = 29'd256;
parameter    ap_ST_fsm_state21 = 29'd512;
parameter    ap_ST_fsm_state22 = 29'd1024;
parameter    ap_ST_fsm_state23 = 29'd2048;
parameter    ap_ST_fsm_state24 = 29'd4096;
parameter    ap_ST_fsm_state25 = 29'd8192;
parameter    ap_ST_fsm_state26 = 29'd16384;
parameter    ap_ST_fsm_state27 = 29'd32768;
parameter    ap_ST_fsm_state28 = 29'd65536;
parameter    ap_ST_fsm_state29 = 29'd131072;
parameter    ap_ST_fsm_state30 = 29'd262144;
parameter    ap_ST_fsm_state31 = 29'd524288;
parameter    ap_ST_fsm_state32 = 29'd1048576;
parameter    ap_ST_fsm_state33 = 29'd2097152;
parameter    ap_ST_fsm_state34 = 29'd4194304;
parameter    ap_ST_fsm_state35 = 29'd8388608;
parameter    ap_ST_fsm_state36 = 29'd16777216;
parameter    ap_ST_fsm_state37 = 29'd33554432;
parameter    ap_ST_fsm_state38 = 29'd67108864;
parameter    ap_ST_fsm_pp1_stage0 = 29'd134217728;
parameter    ap_ST_fsm_state51 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [8:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [8:0] weight_0_V_address1;
output   weight_0_V_ce1;
input  [7:0] weight_0_V_q1;
output  [8:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [8:0] weight_1_V_address1;
output   weight_1_V_ce1;
input  [7:0] weight_1_V_q1;
output  [8:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [8:0] weight_2_V_address1;
output   weight_2_V_ce1;
input  [7:0] weight_2_V_q1;
output  [8:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [8:0] weight_3_V_address1;
output   weight_3_V_ce1;
input  [7:0] weight_3_V_q1;
output  [8:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [8:0] weight_4_V_address1;
output   weight_4_V_ce1;
input  [7:0] weight_4_V_q1;
output  [8:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [8:0] weight_5_V_address1;
output   weight_5_V_ce1;
input  [7:0] weight_5_V_q1;
output  [8:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [8:0] weight_6_V_address1;
output   weight_6_V_ce1;
input  [7:0] weight_6_V_q1;
output  [8:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [8:0] weight_7_V_address1;
output   weight_7_V_ce1;
input  [7:0] weight_7_V_q1;
output  [8:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [8:0] weight_8_V_address1;
output   weight_8_V_ce1;
input  [7:0] weight_8_V_q1;
output  [8:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [8:0] weight_9_V_address1;
output   weight_9_V_ce1;
input  [7:0] weight_9_V_q1;
output  [8:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [8:0] weight_10_V_address1;
output   weight_10_V_ce1;
input  [7:0] weight_10_V_q1;
output  [8:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [8:0] weight_11_V_address1;
output   weight_11_V_ce1;
input  [7:0] weight_11_V_q1;
output  [8:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [8:0] weight_12_V_address1;
output   weight_12_V_ce1;
input  [7:0] weight_12_V_q1;
output  [8:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [8:0] weight_13_V_address1;
output   weight_13_V_ce1;
input  [7:0] weight_13_V_q1;
output  [8:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [8:0] weight_14_V_address1;
output   weight_14_V_ce1;
input  [7:0] weight_14_V_q1;
output  [8:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [8:0] weight_15_V_address1;
output   weight_15_V_ce1;
input  [7:0] weight_15_V_q1;
output  [8:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [8:0] weight_16_V_address1;
output   weight_16_V_ce1;
input  [7:0] weight_16_V_q1;
output  [8:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [8:0] weight_17_V_address1;
output   weight_17_V_ce1;
input  [7:0] weight_17_V_q1;
output  [8:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [8:0] weight_18_V_address1;
output   weight_18_V_ce1;
input  [7:0] weight_18_V_q1;
output  [8:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [8:0] weight_19_V_address1;
output   weight_19_V_ce1;
input  [7:0] weight_19_V_q1;
output  [8:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [8:0] weight_20_V_address1;
output   weight_20_V_ce1;
input  [7:0] weight_20_V_q1;
output  [8:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [8:0] weight_21_V_address1;
output   weight_21_V_ce1;
input  [7:0] weight_21_V_q1;
output  [8:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [8:0] weight_22_V_address1;
output   weight_22_V_ce1;
input  [7:0] weight_22_V_q1;
output  [8:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [8:0] weight_23_V_address1;
output   weight_23_V_ce1;
input  [7:0] weight_23_V_q1;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [7:0] buffer1_1_96_4x4_p_V_24_address0;
output   buffer1_1_96_4x4_p_V_24_ce0;
output   buffer1_1_96_4x4_p_V_24_we0;
output  [7:0] buffer1_1_96_4x4_p_V_24_d0;
input  [7:0] buffer1_1_96_4x4_p_V_24_q0;
output  [7:0] buffer1_1_96_4x4_p_V_24_address1;
output   buffer1_1_96_4x4_p_V_24_ce1;
output   buffer1_1_96_4x4_p_V_24_we1;
output  [7:0] buffer1_1_96_4x4_p_V_24_d1;
output  [7:0] buffer1_1_96_4x4_p_V_1_address0;
output   buffer1_1_96_4x4_p_V_1_ce0;
output   buffer1_1_96_4x4_p_V_1_we0;
output  [7:0] buffer1_1_96_4x4_p_V_1_d0;
input  [7:0] buffer1_1_96_4x4_p_V_1_q0;
output  [7:0] buffer1_1_96_4x4_p_V_1_address1;
output   buffer1_1_96_4x4_p_V_1_ce1;
output   buffer1_1_96_4x4_p_V_1_we1;
output  [7:0] buffer1_1_96_4x4_p_V_1_d1;
output  [7:0] buffer1_1_96_4x4_p_V_2_address0;
output   buffer1_1_96_4x4_p_V_2_ce0;
output   buffer1_1_96_4x4_p_V_2_we0;
output  [7:0] buffer1_1_96_4x4_p_V_2_d0;
input  [7:0] buffer1_1_96_4x4_p_V_2_q0;
output  [7:0] buffer1_1_96_4x4_p_V_2_address1;
output   buffer1_1_96_4x4_p_V_2_ce1;
output   buffer1_1_96_4x4_p_V_2_we1;
output  [7:0] buffer1_1_96_4x4_p_V_2_d1;
output  [7:0] buffer1_1_96_4x4_p_V_3_address0;
output   buffer1_1_96_4x4_p_V_3_ce0;
output   buffer1_1_96_4x4_p_V_3_we0;
output  [7:0] buffer1_1_96_4x4_p_V_3_d0;
input  [7:0] buffer1_1_96_4x4_p_V_3_q0;
output  [7:0] buffer1_1_96_4x4_p_V_3_address1;
output   buffer1_1_96_4x4_p_V_3_ce1;
output   buffer1_1_96_4x4_p_V_3_we1;
output  [7:0] buffer1_1_96_4x4_p_V_3_d1;
output  [7:0] buffer1_1_96_4x4_p_V_4_address0;
output   buffer1_1_96_4x4_p_V_4_ce0;
output   buffer1_1_96_4x4_p_V_4_we0;
output  [7:0] buffer1_1_96_4x4_p_V_4_d0;
input  [7:0] buffer1_1_96_4x4_p_V_4_q0;
output  [7:0] buffer1_1_96_4x4_p_V_4_address1;
output   buffer1_1_96_4x4_p_V_4_ce1;
output   buffer1_1_96_4x4_p_V_4_we1;
output  [7:0] buffer1_1_96_4x4_p_V_4_d1;
output  [7:0] buffer1_1_96_4x4_p_V_5_address0;
output   buffer1_1_96_4x4_p_V_5_ce0;
output   buffer1_1_96_4x4_p_V_5_we0;
output  [7:0] buffer1_1_96_4x4_p_V_5_d0;
input  [7:0] buffer1_1_96_4x4_p_V_5_q0;
output  [7:0] buffer1_1_96_4x4_p_V_5_address1;
output   buffer1_1_96_4x4_p_V_5_ce1;
output   buffer1_1_96_4x4_p_V_5_we1;
output  [7:0] buffer1_1_96_4x4_p_V_5_d1;
output  [7:0] buffer1_1_96_4x4_p_V_6_address0;
output   buffer1_1_96_4x4_p_V_6_ce0;
output   buffer1_1_96_4x4_p_V_6_we0;
output  [7:0] buffer1_1_96_4x4_p_V_6_d0;
input  [7:0] buffer1_1_96_4x4_p_V_6_q0;
output  [7:0] buffer1_1_96_4x4_p_V_6_address1;
output   buffer1_1_96_4x4_p_V_6_ce1;
output   buffer1_1_96_4x4_p_V_6_we1;
output  [7:0] buffer1_1_96_4x4_p_V_6_d1;
output  [7:0] buffer1_1_96_4x4_p_V_7_address0;
output   buffer1_1_96_4x4_p_V_7_ce0;
output   buffer1_1_96_4x4_p_V_7_we0;
output  [7:0] buffer1_1_96_4x4_p_V_7_d0;
input  [7:0] buffer1_1_96_4x4_p_V_7_q0;
output  [7:0] buffer1_1_96_4x4_p_V_7_address1;
output   buffer1_1_96_4x4_p_V_7_ce1;
output   buffer1_1_96_4x4_p_V_7_we1;
output  [7:0] buffer1_1_96_4x4_p_V_7_d1;
output  [7:0] buffer1_1_96_4x4_p_V_8_address0;
output   buffer1_1_96_4x4_p_V_8_ce0;
output   buffer1_1_96_4x4_p_V_8_we0;
output  [7:0] buffer1_1_96_4x4_p_V_8_d0;
input  [7:0] buffer1_1_96_4x4_p_V_8_q0;
output  [7:0] buffer1_1_96_4x4_p_V_8_address1;
output   buffer1_1_96_4x4_p_V_8_ce1;
output   buffer1_1_96_4x4_p_V_8_we1;
output  [7:0] buffer1_1_96_4x4_p_V_8_d1;
output  [7:0] buffer1_1_96_4x4_p_V_9_address0;
output   buffer1_1_96_4x4_p_V_9_ce0;
output   buffer1_1_96_4x4_p_V_9_we0;
output  [7:0] buffer1_1_96_4x4_p_V_9_d0;
input  [7:0] buffer1_1_96_4x4_p_V_9_q0;
output  [7:0] buffer1_1_96_4x4_p_V_9_address1;
output   buffer1_1_96_4x4_p_V_9_ce1;
output   buffer1_1_96_4x4_p_V_9_we1;
output  [7:0] buffer1_1_96_4x4_p_V_9_d1;
output  [7:0] buffer1_1_96_4x4_p_V_10_address0;
output   buffer1_1_96_4x4_p_V_10_ce0;
output   buffer1_1_96_4x4_p_V_10_we0;
output  [7:0] buffer1_1_96_4x4_p_V_10_d0;
input  [7:0] buffer1_1_96_4x4_p_V_10_q0;
output  [7:0] buffer1_1_96_4x4_p_V_10_address1;
output   buffer1_1_96_4x4_p_V_10_ce1;
output   buffer1_1_96_4x4_p_V_10_we1;
output  [7:0] buffer1_1_96_4x4_p_V_10_d1;
output  [7:0] buffer1_1_96_4x4_p_V_11_address0;
output   buffer1_1_96_4x4_p_V_11_ce0;
output   buffer1_1_96_4x4_p_V_11_we0;
output  [7:0] buffer1_1_96_4x4_p_V_11_d0;
input  [7:0] buffer1_1_96_4x4_p_V_11_q0;
output  [7:0] buffer1_1_96_4x4_p_V_11_address1;
output   buffer1_1_96_4x4_p_V_11_ce1;
output   buffer1_1_96_4x4_p_V_11_we1;
output  [7:0] buffer1_1_96_4x4_p_V_11_d1;
output  [7:0] buffer1_1_96_4x4_p_V_12_address0;
output   buffer1_1_96_4x4_p_V_12_ce0;
output   buffer1_1_96_4x4_p_V_12_we0;
output  [7:0] buffer1_1_96_4x4_p_V_12_d0;
input  [7:0] buffer1_1_96_4x4_p_V_12_q0;
output  [7:0] buffer1_1_96_4x4_p_V_12_address1;
output   buffer1_1_96_4x4_p_V_12_ce1;
output   buffer1_1_96_4x4_p_V_12_we1;
output  [7:0] buffer1_1_96_4x4_p_V_12_d1;
output  [7:0] buffer1_1_96_4x4_p_V_13_address0;
output   buffer1_1_96_4x4_p_V_13_ce0;
output   buffer1_1_96_4x4_p_V_13_we0;
output  [7:0] buffer1_1_96_4x4_p_V_13_d0;
input  [7:0] buffer1_1_96_4x4_p_V_13_q0;
output  [7:0] buffer1_1_96_4x4_p_V_13_address1;
output   buffer1_1_96_4x4_p_V_13_ce1;
output   buffer1_1_96_4x4_p_V_13_we1;
output  [7:0] buffer1_1_96_4x4_p_V_13_d1;
output  [7:0] buffer1_1_96_4x4_p_V_14_address0;
output   buffer1_1_96_4x4_p_V_14_ce0;
output   buffer1_1_96_4x4_p_V_14_we0;
output  [7:0] buffer1_1_96_4x4_p_V_14_d0;
input  [7:0] buffer1_1_96_4x4_p_V_14_q0;
output  [7:0] buffer1_1_96_4x4_p_V_14_address1;
output   buffer1_1_96_4x4_p_V_14_ce1;
output   buffer1_1_96_4x4_p_V_14_we1;
output  [7:0] buffer1_1_96_4x4_p_V_14_d1;
output  [7:0] buffer1_1_96_4x4_p_V_15_address0;
output   buffer1_1_96_4x4_p_V_15_ce0;
output   buffer1_1_96_4x4_p_V_15_we0;
output  [7:0] buffer1_1_96_4x4_p_V_15_d0;
input  [7:0] buffer1_1_96_4x4_p_V_15_q0;
output  [7:0] buffer1_1_96_4x4_p_V_15_address1;
output   buffer1_1_96_4x4_p_V_15_ce1;
output   buffer1_1_96_4x4_p_V_15_we1;
output  [7:0] buffer1_1_96_4x4_p_V_15_d1;
output  [7:0] buffer1_1_96_4x4_p_V_16_address0;
output   buffer1_1_96_4x4_p_V_16_ce0;
output   buffer1_1_96_4x4_p_V_16_we0;
output  [7:0] buffer1_1_96_4x4_p_V_16_d0;
input  [7:0] buffer1_1_96_4x4_p_V_16_q0;
output  [7:0] buffer1_1_96_4x4_p_V_16_address1;
output   buffer1_1_96_4x4_p_V_16_ce1;
output   buffer1_1_96_4x4_p_V_16_we1;
output  [7:0] buffer1_1_96_4x4_p_V_16_d1;
output  [7:0] buffer1_1_96_4x4_p_V_17_address0;
output   buffer1_1_96_4x4_p_V_17_ce0;
output   buffer1_1_96_4x4_p_V_17_we0;
output  [7:0] buffer1_1_96_4x4_p_V_17_d0;
input  [7:0] buffer1_1_96_4x4_p_V_17_q0;
output  [7:0] buffer1_1_96_4x4_p_V_17_address1;
output   buffer1_1_96_4x4_p_V_17_ce1;
output   buffer1_1_96_4x4_p_V_17_we1;
output  [7:0] buffer1_1_96_4x4_p_V_17_d1;
output  [7:0] buffer1_1_96_4x4_p_V_18_address0;
output   buffer1_1_96_4x4_p_V_18_ce0;
output   buffer1_1_96_4x4_p_V_18_we0;
output  [7:0] buffer1_1_96_4x4_p_V_18_d0;
input  [7:0] buffer1_1_96_4x4_p_V_18_q0;
output  [7:0] buffer1_1_96_4x4_p_V_18_address1;
output   buffer1_1_96_4x4_p_V_18_ce1;
output   buffer1_1_96_4x4_p_V_18_we1;
output  [7:0] buffer1_1_96_4x4_p_V_18_d1;
output  [7:0] buffer1_1_96_4x4_p_V_19_address0;
output   buffer1_1_96_4x4_p_V_19_ce0;
output   buffer1_1_96_4x4_p_V_19_we0;
output  [7:0] buffer1_1_96_4x4_p_V_19_d0;
input  [7:0] buffer1_1_96_4x4_p_V_19_q0;
output  [7:0] buffer1_1_96_4x4_p_V_19_address1;
output   buffer1_1_96_4x4_p_V_19_ce1;
output   buffer1_1_96_4x4_p_V_19_we1;
output  [7:0] buffer1_1_96_4x4_p_V_19_d1;
output  [7:0] buffer1_1_96_4x4_p_V_20_address0;
output   buffer1_1_96_4x4_p_V_20_ce0;
output   buffer1_1_96_4x4_p_V_20_we0;
output  [7:0] buffer1_1_96_4x4_p_V_20_d0;
input  [7:0] buffer1_1_96_4x4_p_V_20_q0;
output  [7:0] buffer1_1_96_4x4_p_V_20_address1;
output   buffer1_1_96_4x4_p_V_20_ce1;
output   buffer1_1_96_4x4_p_V_20_we1;
output  [7:0] buffer1_1_96_4x4_p_V_20_d1;
output  [7:0] buffer1_1_96_4x4_p_V_21_address0;
output   buffer1_1_96_4x4_p_V_21_ce0;
output   buffer1_1_96_4x4_p_V_21_we0;
output  [7:0] buffer1_1_96_4x4_p_V_21_d0;
input  [7:0] buffer1_1_96_4x4_p_V_21_q0;
output  [7:0] buffer1_1_96_4x4_p_V_21_address1;
output   buffer1_1_96_4x4_p_V_21_ce1;
output   buffer1_1_96_4x4_p_V_21_we1;
output  [7:0] buffer1_1_96_4x4_p_V_21_d1;
output  [7:0] buffer1_1_96_4x4_p_V_22_address0;
output   buffer1_1_96_4x4_p_V_22_ce0;
output   buffer1_1_96_4x4_p_V_22_we0;
output  [7:0] buffer1_1_96_4x4_p_V_22_d0;
input  [7:0] buffer1_1_96_4x4_p_V_22_q0;
output  [7:0] buffer1_1_96_4x4_p_V_22_address1;
output   buffer1_1_96_4x4_p_V_22_ce1;
output   buffer1_1_96_4x4_p_V_22_we1;
output  [7:0] buffer1_1_96_4x4_p_V_22_d1;
output  [7:0] buffer1_1_96_4x4_p_V_23_address0;
output   buffer1_1_96_4x4_p_V_23_ce0;
output   buffer1_1_96_4x4_p_V_23_we0;
output  [7:0] buffer1_1_96_4x4_p_V_23_d0;
input  [7:0] buffer1_1_96_4x4_p_V_23_q0;
output  [7:0] buffer1_1_96_4x4_p_V_23_address1;
output   buffer1_1_96_4x4_p_V_23_ce1;
output   buffer1_1_96_4x4_p_V_23_we1;
output  [7:0] buffer1_1_96_4x4_p_V_23_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] input_V_address0;
reg input_V_ce0;
reg[8:0] weight_0_V_address0;
reg weight_0_V_ce0;
reg[8:0] weight_0_V_address1;
reg weight_0_V_ce1;
reg[8:0] weight_1_V_address0;
reg weight_1_V_ce0;
reg[8:0] weight_1_V_address1;
reg weight_1_V_ce1;
reg[8:0] weight_2_V_address0;
reg weight_2_V_ce0;
reg[8:0] weight_2_V_address1;
reg weight_2_V_ce1;
reg[8:0] weight_3_V_address0;
reg weight_3_V_ce0;
reg[8:0] weight_3_V_address1;
reg weight_3_V_ce1;
reg[8:0] weight_4_V_address0;
reg weight_4_V_ce0;
reg[8:0] weight_4_V_address1;
reg weight_4_V_ce1;
reg[8:0] weight_5_V_address0;
reg weight_5_V_ce0;
reg[8:0] weight_5_V_address1;
reg weight_5_V_ce1;
reg[8:0] weight_6_V_address0;
reg weight_6_V_ce0;
reg[8:0] weight_6_V_address1;
reg weight_6_V_ce1;
reg[8:0] weight_7_V_address0;
reg weight_7_V_ce0;
reg[8:0] weight_7_V_address1;
reg weight_7_V_ce1;
reg[8:0] weight_8_V_address0;
reg weight_8_V_ce0;
reg[8:0] weight_8_V_address1;
reg weight_8_V_ce1;
reg[8:0] weight_9_V_address0;
reg weight_9_V_ce0;
reg[8:0] weight_9_V_address1;
reg weight_9_V_ce1;
reg[8:0] weight_10_V_address0;
reg weight_10_V_ce0;
reg[8:0] weight_10_V_address1;
reg weight_10_V_ce1;
reg[8:0] weight_11_V_address0;
reg weight_11_V_ce0;
reg[8:0] weight_11_V_address1;
reg weight_11_V_ce1;
reg[8:0] weight_12_V_address0;
reg weight_12_V_ce0;
reg[8:0] weight_12_V_address1;
reg weight_12_V_ce1;
reg[8:0] weight_13_V_address0;
reg weight_13_V_ce0;
reg[8:0] weight_13_V_address1;
reg weight_13_V_ce1;
reg[8:0] weight_14_V_address0;
reg weight_14_V_ce0;
reg[8:0] weight_14_V_address1;
reg weight_14_V_ce1;
reg[8:0] weight_15_V_address0;
reg weight_15_V_ce0;
reg[8:0] weight_15_V_address1;
reg weight_15_V_ce1;
reg[8:0] weight_16_V_address0;
reg weight_16_V_ce0;
reg[8:0] weight_16_V_address1;
reg weight_16_V_ce1;
reg[8:0] weight_17_V_address0;
reg weight_17_V_ce0;
reg[8:0] weight_17_V_address1;
reg weight_17_V_ce1;
reg[8:0] weight_18_V_address0;
reg weight_18_V_ce0;
reg[8:0] weight_18_V_address1;
reg weight_18_V_ce1;
reg[8:0] weight_19_V_address0;
reg weight_19_V_ce0;
reg[8:0] weight_19_V_address1;
reg weight_19_V_ce1;
reg[8:0] weight_20_V_address0;
reg weight_20_V_ce0;
reg[8:0] weight_20_V_address1;
reg weight_20_V_ce1;
reg[8:0] weight_21_V_address0;
reg weight_21_V_ce0;
reg[8:0] weight_21_V_address1;
reg weight_21_V_ce1;
reg[8:0] weight_22_V_address0;
reg weight_22_V_ce0;
reg[8:0] weight_22_V_address1;
reg weight_22_V_ce1;
reg[8:0] weight_23_V_address0;
reg weight_23_V_ce0;
reg[8:0] weight_23_V_address1;
reg weight_23_V_ce1;
reg bias_V_ce0;
reg[7:0] buffer1_1_96_4x4_p_V_24_address0;
reg buffer1_1_96_4x4_p_V_24_ce0;
reg buffer1_1_96_4x4_p_V_24_we0;
reg[7:0] buffer1_1_96_4x4_p_V_24_d0;
reg buffer1_1_96_4x4_p_V_24_ce1;
reg buffer1_1_96_4x4_p_V_24_we1;
reg[7:0] buffer1_1_96_4x4_p_V_1_address0;
reg buffer1_1_96_4x4_p_V_1_ce0;
reg buffer1_1_96_4x4_p_V_1_we0;
reg[7:0] buffer1_1_96_4x4_p_V_1_d0;
reg buffer1_1_96_4x4_p_V_1_ce1;
reg buffer1_1_96_4x4_p_V_1_we1;
reg[7:0] buffer1_1_96_4x4_p_V_2_address0;
reg buffer1_1_96_4x4_p_V_2_ce0;
reg buffer1_1_96_4x4_p_V_2_we0;
reg[7:0] buffer1_1_96_4x4_p_V_2_d0;
reg buffer1_1_96_4x4_p_V_2_ce1;
reg buffer1_1_96_4x4_p_V_2_we1;
reg[7:0] buffer1_1_96_4x4_p_V_3_address0;
reg buffer1_1_96_4x4_p_V_3_ce0;
reg buffer1_1_96_4x4_p_V_3_we0;
reg[7:0] buffer1_1_96_4x4_p_V_3_d0;
reg buffer1_1_96_4x4_p_V_3_ce1;
reg buffer1_1_96_4x4_p_V_3_we1;
reg[7:0] buffer1_1_96_4x4_p_V_4_address0;
reg buffer1_1_96_4x4_p_V_4_ce0;
reg buffer1_1_96_4x4_p_V_4_we0;
reg[7:0] buffer1_1_96_4x4_p_V_4_d0;
reg buffer1_1_96_4x4_p_V_4_ce1;
reg buffer1_1_96_4x4_p_V_4_we1;
reg[7:0] buffer1_1_96_4x4_p_V_5_address0;
reg buffer1_1_96_4x4_p_V_5_ce0;
reg buffer1_1_96_4x4_p_V_5_we0;
reg[7:0] buffer1_1_96_4x4_p_V_5_d0;
reg buffer1_1_96_4x4_p_V_5_ce1;
reg buffer1_1_96_4x4_p_V_5_we1;
reg[7:0] buffer1_1_96_4x4_p_V_6_address0;
reg buffer1_1_96_4x4_p_V_6_ce0;
reg buffer1_1_96_4x4_p_V_6_we0;
reg[7:0] buffer1_1_96_4x4_p_V_6_d0;
reg buffer1_1_96_4x4_p_V_6_ce1;
reg buffer1_1_96_4x4_p_V_6_we1;
reg[7:0] buffer1_1_96_4x4_p_V_7_address0;
reg buffer1_1_96_4x4_p_V_7_ce0;
reg buffer1_1_96_4x4_p_V_7_we0;
reg[7:0] buffer1_1_96_4x4_p_V_7_d0;
reg buffer1_1_96_4x4_p_V_7_ce1;
reg buffer1_1_96_4x4_p_V_7_we1;
reg[7:0] buffer1_1_96_4x4_p_V_8_address0;
reg buffer1_1_96_4x4_p_V_8_ce0;
reg buffer1_1_96_4x4_p_V_8_we0;
reg[7:0] buffer1_1_96_4x4_p_V_8_d0;
reg buffer1_1_96_4x4_p_V_8_ce1;
reg buffer1_1_96_4x4_p_V_8_we1;
reg[7:0] buffer1_1_96_4x4_p_V_9_address0;
reg buffer1_1_96_4x4_p_V_9_ce0;
reg buffer1_1_96_4x4_p_V_9_we0;
reg[7:0] buffer1_1_96_4x4_p_V_9_d0;
reg buffer1_1_96_4x4_p_V_9_ce1;
reg buffer1_1_96_4x4_p_V_9_we1;
reg[7:0] buffer1_1_96_4x4_p_V_10_address0;
reg buffer1_1_96_4x4_p_V_10_ce0;
reg buffer1_1_96_4x4_p_V_10_we0;
reg[7:0] buffer1_1_96_4x4_p_V_10_d0;
reg buffer1_1_96_4x4_p_V_10_ce1;
reg buffer1_1_96_4x4_p_V_10_we1;
reg[7:0] buffer1_1_96_4x4_p_V_11_address0;
reg buffer1_1_96_4x4_p_V_11_ce0;
reg buffer1_1_96_4x4_p_V_11_we0;
reg[7:0] buffer1_1_96_4x4_p_V_11_d0;
reg buffer1_1_96_4x4_p_V_11_ce1;
reg buffer1_1_96_4x4_p_V_11_we1;
reg[7:0] buffer1_1_96_4x4_p_V_12_address0;
reg buffer1_1_96_4x4_p_V_12_ce0;
reg buffer1_1_96_4x4_p_V_12_we0;
reg[7:0] buffer1_1_96_4x4_p_V_12_d0;
reg buffer1_1_96_4x4_p_V_12_ce1;
reg buffer1_1_96_4x4_p_V_12_we1;
reg[7:0] buffer1_1_96_4x4_p_V_13_address0;
reg buffer1_1_96_4x4_p_V_13_ce0;
reg buffer1_1_96_4x4_p_V_13_we0;
reg[7:0] buffer1_1_96_4x4_p_V_13_d0;
reg buffer1_1_96_4x4_p_V_13_ce1;
reg buffer1_1_96_4x4_p_V_13_we1;
reg[7:0] buffer1_1_96_4x4_p_V_14_address0;
reg buffer1_1_96_4x4_p_V_14_ce0;
reg buffer1_1_96_4x4_p_V_14_we0;
reg[7:0] buffer1_1_96_4x4_p_V_14_d0;
reg buffer1_1_96_4x4_p_V_14_ce1;
reg buffer1_1_96_4x4_p_V_14_we1;
reg[7:0] buffer1_1_96_4x4_p_V_15_address0;
reg buffer1_1_96_4x4_p_V_15_ce0;
reg buffer1_1_96_4x4_p_V_15_we0;
reg[7:0] buffer1_1_96_4x4_p_V_15_d0;
reg buffer1_1_96_4x4_p_V_15_ce1;
reg buffer1_1_96_4x4_p_V_15_we1;
reg[7:0] buffer1_1_96_4x4_p_V_16_address0;
reg buffer1_1_96_4x4_p_V_16_ce0;
reg buffer1_1_96_4x4_p_V_16_we0;
reg[7:0] buffer1_1_96_4x4_p_V_16_d0;
reg buffer1_1_96_4x4_p_V_16_ce1;
reg buffer1_1_96_4x4_p_V_16_we1;
reg[7:0] buffer1_1_96_4x4_p_V_17_address0;
reg buffer1_1_96_4x4_p_V_17_ce0;
reg buffer1_1_96_4x4_p_V_17_we0;
reg[7:0] buffer1_1_96_4x4_p_V_17_d0;
reg buffer1_1_96_4x4_p_V_17_ce1;
reg buffer1_1_96_4x4_p_V_17_we1;
reg[7:0] buffer1_1_96_4x4_p_V_18_address0;
reg buffer1_1_96_4x4_p_V_18_ce0;
reg buffer1_1_96_4x4_p_V_18_we0;
reg[7:0] buffer1_1_96_4x4_p_V_18_d0;
reg buffer1_1_96_4x4_p_V_18_ce1;
reg buffer1_1_96_4x4_p_V_18_we1;
reg[7:0] buffer1_1_96_4x4_p_V_19_address0;
reg buffer1_1_96_4x4_p_V_19_ce0;
reg buffer1_1_96_4x4_p_V_19_we0;
reg[7:0] buffer1_1_96_4x4_p_V_19_d0;
reg buffer1_1_96_4x4_p_V_19_ce1;
reg buffer1_1_96_4x4_p_V_19_we1;
reg[7:0] buffer1_1_96_4x4_p_V_20_address0;
reg buffer1_1_96_4x4_p_V_20_ce0;
reg buffer1_1_96_4x4_p_V_20_we0;
reg[7:0] buffer1_1_96_4x4_p_V_20_d0;
reg buffer1_1_96_4x4_p_V_20_ce1;
reg buffer1_1_96_4x4_p_V_20_we1;
reg[7:0] buffer1_1_96_4x4_p_V_21_address0;
reg buffer1_1_96_4x4_p_V_21_ce0;
reg buffer1_1_96_4x4_p_V_21_we0;
reg[7:0] buffer1_1_96_4x4_p_V_21_d0;
reg buffer1_1_96_4x4_p_V_21_ce1;
reg buffer1_1_96_4x4_p_V_21_we1;
reg[7:0] buffer1_1_96_4x4_p_V_22_address0;
reg buffer1_1_96_4x4_p_V_22_ce0;
reg buffer1_1_96_4x4_p_V_22_we0;
reg[7:0] buffer1_1_96_4x4_p_V_22_d0;
reg buffer1_1_96_4x4_p_V_22_ce1;
reg buffer1_1_96_4x4_p_V_22_we1;
reg[7:0] buffer1_1_96_4x4_p_V_23_address0;
reg buffer1_1_96_4x4_p_V_23_ce0;
reg buffer1_1_96_4x4_p_V_23_we0;
reg[7:0] buffer1_1_96_4x4_p_V_23_d0;
reg buffer1_1_96_4x4_p_V_23_ce1;
reg buffer1_1_96_4x4_p_V_23_we1;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten7_reg_2460;
reg   [6:0] co_reg_2471;
reg   [5:0] indvar_flatten_reg_2483;
reg   [2:0] h_reg_2494;
reg   [2:0] w_reg_2506;
reg   [10:0] indvar_flatten8_reg_2588;
reg   [6:0] co8_reg_2599;
reg   [5:0] indvar_flatten9_reg_2610;
reg   [2:0] h9_reg_2621;
reg   [2:0] w10_reg_2633;
reg   [7:0] reg_2813;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state30;
reg   [7:0] reg_2819;
wire    ap_CS_fsm_state31;
reg   [7:0] reg_2825;
reg   [7:0] reg_2831;
reg   [7:0] reg_2837;
reg   [7:0] reg_2843;
reg   [7:0] reg_2849;
reg   [7:0] reg_2855;
reg   [7:0] reg_2861;
reg   [7:0] reg_2867;
reg   [7:0] reg_2873;
reg   [7:0] reg_2879;
reg   [7:0] reg_2885;
reg   [7:0] reg_2891;
reg   [7:0] reg_2897;
reg   [7:0] reg_2903;
reg   [7:0] reg_2909;
reg   [7:0] reg_2915;
reg   [7:0] reg_2921;
reg   [7:0] reg_2927;
reg   [7:0] reg_2933;
reg   [7:0] reg_2939;
reg   [7:0] reg_2945;
reg   [7:0] reg_2951;
reg   [7:0] reg_2957;
reg   [7:0] reg_2963;
reg   [7:0] reg_2969;
reg   [7:0] reg_2975;
reg   [7:0] reg_2981;
reg   [7:0] reg_2987;
reg   [7:0] reg_2993;
reg   [7:0] reg_2999;
reg   [7:0] reg_3005;
reg   [7:0] reg_3011;
reg   [7:0] reg_3017;
reg   [7:0] reg_3023;
reg   [7:0] reg_3029;
reg   [7:0] reg_3035;
reg   [7:0] reg_3041;
reg   [7:0] reg_3047;
reg   [7:0] reg_3053;
reg   [7:0] reg_3059;
reg   [7:0] reg_3065;
reg   [7:0] reg_3071;
reg   [7:0] reg_3077;
reg   [7:0] reg_3083;
reg   [7:0] reg_3089;
reg   [7:0] reg_3095;
reg   [7:0] reg_3101;
wire    ap_CS_fsm_state19;
reg   [7:0] reg_3129;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state34;
reg   [7:0] reg_3133;
reg   [7:0] reg_3137;
reg   [7:0] reg_3141;
reg   [7:0] reg_3145;
reg   [7:0] reg_3149;
reg   [7:0] reg_3153;
reg   [7:0] reg_3157;
reg   [7:0] reg_3161;
reg   [7:0] reg_3165;
reg   [7:0] reg_3169;
reg   [7:0] reg_3173;
reg   [7:0] reg_3177;
reg   [7:0] reg_3181;
reg   [7:0] reg_3185;
reg   [7:0] reg_3189;
reg   [7:0] reg_3193;
reg   [7:0] reg_3197;
reg   [7:0] reg_3201;
reg   [7:0] reg_3205;
reg   [7:0] reg_3209;
reg   [7:0] reg_3213;
reg   [7:0] reg_3217;
reg   [7:0] reg_3221;
wire   [0:0] exitcond_flatten7_fu_3225_p2;
reg   [0:0] exitcond_flatten7_reg_5773;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten7_reg_5773;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten7_reg_5773;
wire   [10:0] indvar_flatten_next7_fu_3231_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_3237_p2;
reg   [0:0] exitcond_flatten_reg_5782;
wire   [5:0] indvar_flatten_next_fu_3249_p3;
wire   [6:0] co_cast_mid2_v_fu_3270_p3;
reg   [6:0] co_cast_mid2_v_reg_5795;
reg    ap_enable_reg_pp0_iter1;
reg   [6:0] ap_reg_pp0_iter2_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter3_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter4_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter5_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter6_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter7_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter8_co_cast_mid2_v_reg_5795;
reg   [6:0] ap_reg_pp0_iter9_co_cast_mid2_v_reg_5795;
wire   [2:0] w_mid2_fu_3311_p3;
reg   [2:0] w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter2_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter3_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter4_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter5_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter6_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter7_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter8_w_mid2_reg_5803;
reg   [2:0] ap_reg_pp0_iter9_w_mid2_reg_5803;
wire   [2:0] h_cast_mid2_fu_3319_p3;
reg   [2:0] h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter2_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter3_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter4_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter5_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter6_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter7_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter8_h_cast_mid2_reg_5808;
reg   [2:0] ap_reg_pp0_iter9_h_cast_mid2_reg_5808;
wire   [2:0] w_18_fu_3327_p2;
reg   [2:0] w_18_reg_5814;
reg   [3:0] tmp_367_reg_5819;
wire   [8:0] tmp_313_fu_3438_p2;
reg   [8:0] tmp_313_reg_5825;
wire   [6:0] h1_cast9_cast1_fu_3475_p1;
reg   [6:0] h1_cast9_cast1_reg_5838;
wire    ap_CS_fsm_state15;
wire   [11:0] h1_cast9_cast_fu_3479_p1;
reg   [11:0] h1_cast9_cast_reg_5843;
wire  signed [7:0] tmp_351_cast_fu_3513_p1;
reg  signed [7:0] tmp_351_cast_reg_5848;
wire   [7:0] tmp_317_fu_3517_p2;
reg   [7:0] tmp_317_reg_5853;
wire   [6:0] w2_cast8_cast1_fu_3529_p1;
reg   [6:0] w2_cast8_cast1_reg_5861;
wire    ap_CS_fsm_state16;
wire   [12:0] w2_cast8_cast2_fu_3533_p1;
reg   [12:0] w2_cast8_cast2_reg_5866;
reg   [7:0] buffer1_1_96_4x4_p_V_71_reg_5871;
reg   [7:0] buffer1_1_96_4x4_p_V_72_reg_5876;
reg   [7:0] buffer1_1_96_4x4_p_V_73_reg_5881;
reg   [7:0] buffer1_1_96_4x4_p_V_74_reg_5886;
reg   [7:0] buffer1_1_96_4x4_p_V_75_reg_5891;
reg   [7:0] buffer1_1_96_4x4_p_V_76_reg_5896;
reg   [7:0] buffer1_1_96_4x4_p_V_77_reg_5901;
reg   [7:0] buffer1_1_96_4x4_p_V_78_reg_5906;
reg   [7:0] buffer1_1_96_4x4_p_V_79_reg_5911;
reg   [7:0] buffer1_1_96_4x4_p_V_80_reg_5916;
reg   [7:0] buffer1_1_96_4x4_p_V_81_reg_5921;
reg   [7:0] buffer1_1_96_4x4_p_V_82_reg_5926;
reg   [7:0] buffer1_1_96_4x4_p_V_83_reg_5931;
reg   [7:0] buffer1_1_96_4x4_p_V_84_reg_5936;
reg   [7:0] buffer1_1_96_4x4_p_V_85_reg_5941;
reg   [7:0] buffer1_1_96_4x4_p_V_86_reg_5946;
reg   [7:0] buffer1_1_96_4x4_p_V_87_reg_5951;
reg   [7:0] buffer1_1_96_4x4_p_V_88_reg_5956;
reg   [7:0] buffer1_1_96_4x4_p_V_89_reg_5961;
reg   [7:0] buffer1_1_96_4x4_p_V_90_reg_5966;
reg   [7:0] buffer1_1_96_4x4_p_V_91_reg_5971;
reg   [7:0] buffer1_1_96_4x4_p_V_92_reg_5976;
reg   [7:0] buffer1_1_96_4x4_p_V_93_reg_5981;
reg   [7:0] buffer1_1_96_4x4_p_V_94_reg_5986;
reg   [7:0] buffer1_1_96_4x4_p_V_95_reg_5991;
reg   [7:0] buffer1_1_96_4x4_p_V_96_reg_5996;
reg   [7:0] buffer1_1_96_4x4_p_V_97_reg_6001;
reg   [7:0] buffer1_1_96_4x4_p_V_98_reg_6006;
reg   [7:0] buffer1_1_96_4x4_p_V_99_reg_6011;
reg   [7:0] buffer1_1_96_4x4_p_V_100_reg_6016;
reg   [7:0] buffer1_1_96_4x4_p_V_101_reg_6021;
reg   [7:0] buffer1_1_96_4x4_p_V_102_reg_6026;
reg   [7:0] buffer1_1_96_4x4_p_V_103_reg_6031;
reg   [7:0] buffer1_1_96_4x4_p_V_104_reg_6036;
reg   [7:0] buffer1_1_96_4x4_p_V_105_reg_6041;
reg   [7:0] buffer1_1_96_4x4_p_V_106_reg_6046;
reg   [7:0] buffer1_1_96_4x4_p_V_107_reg_6051;
reg   [7:0] buffer1_1_96_4x4_p_V_108_reg_6056;
reg   [7:0] buffer1_1_96_4x4_p_V_109_reg_6061;
reg   [7:0] buffer1_1_96_4x4_p_V_110_reg_6066;
reg   [7:0] buffer1_1_96_4x4_p_V_111_reg_6071;
reg   [7:0] buffer1_1_96_4x4_p_V_112_reg_6076;
reg   [7:0] buffer1_1_96_4x4_p_V_113_reg_6081;
reg   [7:0] buffer1_1_96_4x4_p_V_114_reg_6086;
reg   [7:0] buffer1_1_96_4x4_p_V_115_reg_6091;
reg   [7:0] buffer1_1_96_4x4_p_V_116_reg_6096;
reg   [7:0] buffer1_1_96_4x4_p_V_117_reg_6101;
reg   [7:0] buffer1_1_96_4x4_p_V_118_reg_6106;
wire   [2:0] h_4_fu_3613_p2;
wire   [0:0] exitcond20_fu_3607_p2;
reg   [11:0] input_V_addr_reg_6119;
wire    ap_CS_fsm_state17;
wire   [6:0] ci_6_fu_3776_p2;
reg   [6:0] ci_6_reg_6367;
wire   [2:0] w_19_fu_3782_p2;
wire   [0:0] exitcond22_fu_3770_p2;
wire   [15:0] grp_MUL_DP_fu_2645_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2645_ap_return_1;
reg   [15:0] MUL_DP_ret71_reg_6377_1;
wire    ap_CS_fsm_state23;
wire   [15:0] grp_MUL_DP_fu_2652_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2652_ap_return_1;
reg   [15:0] MUL_DP_ret72_reg_6382_1;
wire   [15:0] grp_MUL_DP_fu_2659_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2659_ap_return_1;
reg   [15:0] MUL_DP_ret73_reg_6387_1;
wire   [15:0] grp_MUL_DP_fu_2666_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2666_ap_return_1;
reg   [15:0] MUL_DP_ret74_reg_6392_1;
wire   [15:0] grp_MUL_DP_fu_2673_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2673_ap_return_1;
reg   [15:0] MUL_DP_ret75_reg_6397_1;
wire   [15:0] grp_MUL_DP_fu_2680_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2680_ap_return_1;
reg   [15:0] MUL_DP_ret76_reg_6402_1;
wire   [15:0] grp_MUL_DP_fu_2687_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2687_ap_return_1;
reg   [15:0] MUL_DP_ret77_reg_6407_1;
wire   [15:0] grp_MUL_DP_fu_2694_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2694_ap_return_1;
reg   [15:0] MUL_DP_ret78_reg_6412_1;
wire   [15:0] grp_MUL_DP_fu_2701_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2701_ap_return_1;
reg   [15:0] MUL_DP_ret79_reg_6417_1;
wire   [15:0] grp_MUL_DP_fu_2708_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2708_ap_return_1;
reg   [15:0] MUL_DP_ret80_reg_6422_1;
wire   [15:0] grp_MUL_DP_fu_2715_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2715_ap_return_1;
reg   [15:0] MUL_DP_ret81_reg_6427_1;
wire   [15:0] grp_MUL_DP_fu_2722_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2722_ap_return_1;
reg   [15:0] MUL_DP_ret82_reg_6432_1;
wire   [15:0] grp_MUL_DP_fu_2729_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2729_ap_return_1;
reg   [15:0] MUL_DP_ret83_reg_6437_1;
wire   [15:0] grp_MUL_DP_fu_2736_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2736_ap_return_1;
reg   [15:0] MUL_DP_ret84_reg_6442_1;
wire   [15:0] grp_MUL_DP_fu_2743_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2743_ap_return_1;
reg   [15:0] MUL_DP_ret85_reg_6447_1;
wire   [15:0] grp_MUL_DP_fu_2750_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2750_ap_return_1;
reg   [15:0] MUL_DP_ret86_reg_6452_1;
wire   [15:0] grp_MUL_DP_fu_2757_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2757_ap_return_1;
reg   [15:0] MUL_DP_ret87_reg_6457_1;
wire   [15:0] grp_MUL_DP_fu_2764_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2764_ap_return_1;
reg   [15:0] MUL_DP_ret88_reg_6462_1;
wire   [15:0] grp_MUL_DP_fu_2771_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2771_ap_return_1;
reg   [15:0] MUL_DP_ret89_reg_6467_1;
wire   [15:0] grp_MUL_DP_fu_2778_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2778_ap_return_1;
reg   [15:0] MUL_DP_ret90_reg_6472_1;
wire   [15:0] grp_MUL_DP_fu_2785_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2785_ap_return_1;
reg   [15:0] MUL_DP_ret91_reg_6477_1;
wire   [15:0] grp_MUL_DP_fu_2792_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2792_ap_return_1;
reg   [15:0] MUL_DP_ret92_reg_6482_1;
wire   [15:0] grp_MUL_DP_fu_2799_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2799_ap_return_1;
reg   [15:0] MUL_DP_ret93_reg_6487_1;
wire   [15:0] grp_MUL_DP_fu_2806_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2806_ap_return_1;
reg   [15:0] MUL_DP_ret94_reg_6492_1;
wire   [7:0] tmp_25_fu_4155_p2;
reg   [7:0] tmp_25_reg_6497;
wire    ap_CS_fsm_state25;
wire   [7:0] tmp_45_1_fu_4168_p2;
reg   [7:0] tmp_45_1_reg_6502;
wire   [7:0] tmp_45_2_fu_4181_p2;
reg   [7:0] tmp_45_2_reg_6507;
wire   [7:0] tmp_45_3_fu_4194_p2;
reg   [7:0] tmp_45_3_reg_6512;
wire   [7:0] tmp_45_4_fu_4207_p2;
reg   [7:0] tmp_45_4_reg_6517;
wire   [7:0] tmp_45_5_fu_4220_p2;
reg   [7:0] tmp_45_5_reg_6522;
wire   [7:0] tmp_45_6_fu_4233_p2;
reg   [7:0] tmp_45_6_reg_6527;
wire   [7:0] tmp_45_7_fu_4246_p2;
reg   [7:0] tmp_45_7_reg_6532;
wire   [7:0] tmp_45_8_fu_4259_p2;
reg   [7:0] tmp_45_8_reg_6537;
wire   [7:0] tmp_45_9_fu_4272_p2;
reg   [7:0] tmp_45_9_reg_6542;
wire   [7:0] tmp_45_s_fu_4285_p2;
reg   [7:0] tmp_45_s_reg_6547;
wire   [7:0] tmp_45_10_fu_4298_p2;
reg   [7:0] tmp_45_10_reg_6552;
wire   [7:0] tmp_45_11_fu_4311_p2;
reg   [7:0] tmp_45_11_reg_6557;
wire   [7:0] tmp_45_12_fu_4324_p2;
reg   [7:0] tmp_45_12_reg_6562;
wire   [7:0] tmp_45_13_fu_4337_p2;
reg   [7:0] tmp_45_13_reg_6567;
wire   [7:0] tmp_45_14_fu_4350_p2;
reg   [7:0] tmp_45_14_reg_6572;
wire   [7:0] tmp_45_15_fu_4363_p2;
reg   [7:0] tmp_45_15_reg_6577;
wire   [7:0] tmp_45_16_fu_4376_p2;
reg   [7:0] tmp_45_16_reg_6582;
wire   [7:0] tmp_45_17_fu_4389_p2;
reg   [7:0] tmp_45_17_reg_6587;
wire   [7:0] tmp_45_18_fu_4402_p2;
reg   [7:0] tmp_45_18_reg_6592;
wire   [7:0] tmp_45_19_fu_4415_p2;
reg   [7:0] tmp_45_19_reg_6597;
wire   [7:0] tmp_45_20_fu_4428_p2;
reg   [7:0] tmp_45_20_reg_6602;
wire   [7:0] tmp_45_21_fu_4441_p2;
reg   [7:0] tmp_45_21_reg_6607;
wire   [7:0] tmp_45_22_fu_4454_p2;
reg   [7:0] tmp_45_22_reg_6612;
wire   [7:0] h4_cast6_cast1_fu_4460_p1;
reg   [7:0] h4_cast6_cast1_reg_6617;
wire    ap_CS_fsm_state27;
wire   [11:0] h4_cast6_cast_fu_4464_p1;
reg   [11:0] h4_cast6_cast_reg_6622;
wire   [6:0] tmp_321_fu_4502_p2;
reg   [6:0] tmp_321_reg_6627;
wire   [7:0] tmp_322_fu_4508_p2;
reg   [7:0] tmp_322_reg_6632;
wire   [0:0] exitcond19_fu_4514_p2;
wire   [12:0] w5_cast5_cast1_fu_4520_p1;
reg   [12:0] w5_cast5_cast1_reg_6641;
wire    ap_CS_fsm_state28;
wire   [7:0] w5_cast5_cast2_fu_4524_p1;
reg   [7:0] w5_cast5_cast2_reg_6646;
reg   [7:0] buffer1_1_96_4x4_p_V_167_reg_6651;
reg   [7:0] buffer1_1_96_4x4_p_V_168_reg_6656;
reg   [7:0] buffer1_1_96_4x4_p_V_169_reg_6661;
reg   [7:0] buffer1_1_96_4x4_p_V_170_reg_6666;
reg   [7:0] buffer1_1_96_4x4_p_V_171_reg_6671;
reg   [7:0] buffer1_1_96_4x4_p_V_172_reg_6676;
reg   [7:0] buffer1_1_96_4x4_p_V_173_reg_6681;
reg   [7:0] buffer1_1_96_4x4_p_V_174_reg_6686;
reg   [7:0] buffer1_1_96_4x4_p_V_175_reg_6691;
reg   [7:0] buffer1_1_96_4x4_p_V_176_reg_6696;
reg   [7:0] buffer1_1_96_4x4_p_V_177_reg_6701;
reg   [7:0] buffer1_1_96_4x4_p_V_178_reg_6706;
reg   [7:0] buffer1_1_96_4x4_p_V_179_reg_6711;
reg   [7:0] buffer1_1_96_4x4_p_V_180_reg_6716;
reg   [7:0] buffer1_1_96_4x4_p_V_181_reg_6721;
reg   [7:0] buffer1_1_96_4x4_p_V_182_reg_6726;
reg   [7:0] buffer1_1_96_4x4_p_V_183_reg_6731;
reg   [7:0] buffer1_1_96_4x4_p_V_184_reg_6736;
reg   [7:0] buffer1_1_96_4x4_p_V_185_reg_6741;
reg   [7:0] buffer1_1_96_4x4_p_V_186_reg_6746;
reg   [7:0] buffer1_1_96_4x4_p_V_187_reg_6751;
reg   [7:0] buffer1_1_96_4x4_p_V_188_reg_6756;
reg   [7:0] buffer1_1_96_4x4_p_V_189_reg_6761;
reg   [7:0] buffer1_1_96_4x4_p_V_190_reg_6766;
reg   [7:0] buffer1_1_96_4x4_p_V_191_reg_6771;
reg   [7:0] buffer1_1_96_4x4_p_V_192_reg_6776;
reg   [7:0] buffer1_1_96_4x4_p_V_193_reg_6781;
reg   [7:0] buffer1_1_96_4x4_p_V_194_reg_6786;
reg   [7:0] buffer1_1_96_4x4_p_V_195_reg_6791;
reg   [7:0] buffer1_1_96_4x4_p_V_196_reg_6796;
reg   [7:0] buffer1_1_96_4x4_p_V_197_reg_6801;
reg   [7:0] buffer1_1_96_4x4_p_V_198_reg_6806;
reg   [7:0] buffer1_1_96_4x4_p_V_199_reg_6811;
reg   [7:0] buffer1_1_96_4x4_p_V_200_reg_6816;
reg   [7:0] buffer1_1_96_4x4_p_V_201_reg_6821;
reg   [7:0] buffer1_1_96_4x4_p_V_202_reg_6826;
reg   [7:0] buffer1_1_96_4x4_p_V_203_reg_6831;
reg   [7:0] buffer1_1_96_4x4_p_V_204_reg_6836;
reg   [7:0] buffer1_1_96_4x4_p_V_205_reg_6841;
reg   [7:0] buffer1_1_96_4x4_p_V_206_reg_6846;
reg   [7:0] buffer1_1_96_4x4_p_V_207_reg_6851;
reg   [7:0] buffer1_1_96_4x4_p_V_208_reg_6856;
reg   [7:0] buffer1_1_96_4x4_p_V_209_reg_6861;
reg   [7:0] buffer1_1_96_4x4_p_V_210_reg_6866;
reg   [7:0] buffer1_1_96_4x4_p_V_211_reg_6871;
reg   [7:0] buffer1_1_96_4x4_p_V_212_reg_6876;
reg   [7:0] buffer1_1_96_4x4_p_V_213_reg_6881;
reg   [7:0] buffer1_1_96_4x4_p_V_214_reg_6886;
wire   [2:0] h_6_fu_4604_p2;
wire   [0:0] exitcond21_fu_4598_p2;
reg   [11:0] input_V_addr_4_reg_6899;
wire    ap_CS_fsm_state29;
reg   [8:0] weight_0_V_addr_6_reg_6904;
reg   [8:0] weight_1_V_addr_6_reg_6914;
reg   [8:0] weight_2_V_addr_6_reg_6924;
reg   [8:0] weight_3_V_addr_6_reg_6934;
reg   [8:0] weight_4_V_addr_6_reg_6944;
reg   [8:0] weight_5_V_addr_6_reg_6954;
reg   [8:0] weight_6_V_addr_6_reg_6964;
reg   [8:0] weight_7_V_addr_6_reg_6974;
reg   [8:0] weight_8_V_addr_6_reg_6984;
reg   [8:0] weight_9_V_addr_6_reg_6994;
reg   [8:0] weight_10_V_addr_6_reg_7004;
reg   [8:0] weight_11_V_addr_6_reg_7014;
reg   [8:0] weight_12_V_addr_6_reg_7024;
reg   [8:0] weight_13_V_addr_6_reg_7034;
reg   [8:0] weight_14_V_addr_6_reg_7044;
reg   [8:0] weight_15_V_addr_6_reg_7054;
reg   [8:0] weight_16_V_addr_6_reg_7064;
reg   [8:0] weight_17_V_addr_6_reg_7074;
reg   [8:0] weight_18_V_addr_6_reg_7084;
reg   [8:0] weight_19_V_addr_6_reg_7094;
reg   [8:0] weight_20_V_addr_6_reg_7104;
reg   [8:0] weight_21_V_addr_6_reg_7114;
reg   [8:0] weight_22_V_addr_6_reg_7124;
reg   [8:0] weight_23_V_addr_6_reg_7134;
wire   [6:0] ci_7_fu_4777_p2;
reg   [6:0] ci_7_reg_7147;
wire   [2:0] w_20_fu_4783_p2;
wire   [0:0] exitcond24_fu_4771_p2;
reg   [15:0] MUL_DP_ret95_reg_7157_1;
wire    ap_CS_fsm_state35;
reg   [15:0] MUL_DP_ret96_reg_7162_1;
reg   [15:0] MUL_DP_ret97_reg_7167_1;
reg   [15:0] MUL_DP_ret98_reg_7172_1;
reg   [15:0] MUL_DP_ret99_reg_7177_1;
reg   [15:0] MUL_DP_ret100_reg_7182_1;
reg   [15:0] MUL_DP_ret101_reg_7187_1;
reg   [15:0] MUL_DP_ret102_reg_7192_1;
reg   [15:0] MUL_DP_ret103_reg_7197_1;
reg   [15:0] MUL_DP_ret104_reg_7202_1;
reg   [15:0] MUL_DP_ret105_reg_7207_1;
reg   [15:0] MUL_DP_ret106_reg_7212_1;
reg   [15:0] MUL_DP_ret107_reg_7217_1;
reg   [15:0] MUL_DP_ret108_reg_7222_1;
reg   [15:0] MUL_DP_ret109_reg_7227_1;
reg   [15:0] MUL_DP_ret110_reg_7232_1;
reg   [15:0] MUL_DP_ret111_reg_7237_1;
reg   [15:0] MUL_DP_ret112_reg_7242_1;
reg   [15:0] MUL_DP_ret113_reg_7247_1;
reg   [15:0] MUL_DP_ret114_reg_7252_1;
reg   [15:0] MUL_DP_ret115_reg_7257_1;
reg   [15:0] MUL_DP_ret116_reg_7262_1;
reg   [15:0] MUL_DP_ret117_reg_7267_1;
reg   [15:0] MUL_DP_ret_reg_7272_1;
wire   [7:0] tmp_29_fu_5156_p2;
reg   [7:0] tmp_29_reg_7277;
wire    ap_CS_fsm_state37;
wire   [7:0] tmp_51_1_fu_5169_p2;
reg   [7:0] tmp_51_1_reg_7282;
wire   [7:0] tmp_51_2_fu_5182_p2;
reg   [7:0] tmp_51_2_reg_7287;
wire   [7:0] tmp_51_3_fu_5195_p2;
reg   [7:0] tmp_51_3_reg_7292;
wire   [7:0] tmp_51_4_fu_5208_p2;
reg   [7:0] tmp_51_4_reg_7297;
wire   [7:0] tmp_51_5_fu_5221_p2;
reg   [7:0] tmp_51_5_reg_7302;
wire   [7:0] tmp_51_6_fu_5234_p2;
reg   [7:0] tmp_51_6_reg_7307;
wire   [7:0] tmp_51_7_fu_5247_p2;
reg   [7:0] tmp_51_7_reg_7312;
wire   [7:0] tmp_51_8_fu_5260_p2;
reg   [7:0] tmp_51_8_reg_7317;
wire   [7:0] tmp_51_9_fu_5273_p2;
reg   [7:0] tmp_51_9_reg_7322;
wire   [7:0] tmp_51_s_fu_5286_p2;
reg   [7:0] tmp_51_s_reg_7327;
wire   [7:0] tmp_51_10_fu_5299_p2;
reg   [7:0] tmp_51_10_reg_7332;
wire   [7:0] tmp_51_11_fu_5312_p2;
reg   [7:0] tmp_51_11_reg_7337;
wire   [7:0] tmp_51_12_fu_5325_p2;
reg   [7:0] tmp_51_12_reg_7342;
wire   [7:0] tmp_51_13_fu_5338_p2;
reg   [7:0] tmp_51_13_reg_7347;
wire   [7:0] tmp_51_14_fu_5351_p2;
reg   [7:0] tmp_51_14_reg_7352;
wire   [7:0] tmp_51_15_fu_5364_p2;
reg   [7:0] tmp_51_15_reg_7357;
wire   [7:0] tmp_51_16_fu_5377_p2;
reg   [7:0] tmp_51_16_reg_7362;
wire   [7:0] tmp_51_17_fu_5390_p2;
reg   [7:0] tmp_51_17_reg_7367;
wire   [7:0] tmp_51_18_fu_5403_p2;
reg   [7:0] tmp_51_18_reg_7372;
wire   [7:0] tmp_51_19_fu_5416_p2;
reg   [7:0] tmp_51_19_reg_7377;
wire   [7:0] tmp_51_20_fu_5429_p2;
reg   [7:0] tmp_51_20_reg_7382;
wire   [7:0] tmp_51_21_fu_5442_p2;
reg   [7:0] tmp_51_21_reg_7387;
wire   [7:0] tmp_51_22_fu_5455_p2;
reg   [7:0] tmp_51_22_reg_7392;
wire   [0:0] exitcond_flatten9_fu_5461_p2;
reg   [0:0] exitcond_flatten9_reg_7397;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state39_pp1_stage0_iter0;
wire    ap_block_state40_pp1_stage0_iter1;
wire    ap_block_state41_pp1_stage0_iter2;
wire    ap_block_state42_pp1_stage0_iter3;
wire    ap_block_state43_pp1_stage0_iter4;
wire    ap_block_state44_pp1_stage0_iter5;
wire    ap_block_state45_pp1_stage0_iter6;
wire    ap_block_state46_pp1_stage0_iter7;
wire    ap_block_state47_pp1_stage0_iter8;
wire    ap_block_state48_pp1_stage0_iter9;
wire    ap_block_state49_pp1_stage0_iter10;
wire    ap_block_state50_pp1_stage0_iter11;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter3_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter4_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter5_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter6_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter7_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter8_exitcond_flatten9_reg_7397;
reg   [0:0] ap_reg_pp1_iter9_exitcond_flatten9_reg_7397;
wire   [10:0] indvar_flatten_next9_fu_5467_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten4_fu_5479_p2;
reg   [0:0] exitcond_flatten4_reg_7406;
wire   [6:0] arrayNo_cast3_mid2_v_2_fu_5485_p3;
reg   [6:0] arrayNo_cast3_mid2_v_2_reg_7413;
wire   [5:0] indvar_flatten_next8_fu_5499_p3;
reg   [3:0] tmp_396_reg_7425;
wire   [2:0] w10_mid2_fu_5566_p3;
reg   [2:0] w10_mid2_reg_7431;
wire   [2:0] h9_cast2_mid2_fu_5574_p3;
reg   [2:0] h9_cast2_mid2_reg_7436;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] w_21_fu_5582_p2;
reg   [2:0] w_21_reg_7442;
wire   [8:0] tmp_342_fu_5670_p2;
reg   [8:0] tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter3_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter4_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter5_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter6_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter7_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter8_tmp_342_reg_7447;
reg   [8:0] ap_reg_pp1_iter9_tmp_342_reg_7447;
reg   [7:0] buffer1_1_96_4x4_p_V_263_reg_7452;
reg   [7:0] buffer1_1_96_4x4_p_V_264_reg_7458;
reg   [7:0] buffer1_1_96_4x4_p_V_265_reg_7464;
reg   [7:0] buffer1_1_96_4x4_p_V_266_reg_7470;
reg   [7:0] buffer1_1_96_4x4_p_V_267_reg_7476;
reg   [7:0] buffer1_1_96_4x4_p_V_268_reg_7482;
reg   [7:0] buffer1_1_96_4x4_p_V_269_reg_7488;
reg   [7:0] buffer1_1_96_4x4_p_V_270_reg_7494;
reg   [7:0] buffer1_1_96_4x4_p_V_271_reg_7500;
reg   [7:0] buffer1_1_96_4x4_p_V_272_reg_7506;
reg   [7:0] buffer1_1_96_4x4_p_V_273_reg_7512;
reg   [7:0] buffer1_1_96_4x4_p_V_274_reg_7518;
reg   [7:0] buffer1_1_96_4x4_p_V_275_reg_7524;
reg   [7:0] buffer1_1_96_4x4_p_V_276_reg_7530;
reg   [7:0] buffer1_1_96_4x4_p_V_277_reg_7536;
reg   [7:0] buffer1_1_96_4x4_p_V_278_reg_7542;
reg   [7:0] buffer1_1_96_4x4_p_V_279_reg_7548;
reg   [7:0] buffer1_1_96_4x4_p_V_280_reg_7554;
reg   [7:0] buffer1_1_96_4x4_p_V_281_reg_7560;
reg   [7:0] buffer1_1_96_4x4_p_V_282_reg_7566;
reg   [7:0] buffer1_1_96_4x4_p_V_283_reg_7572;
reg   [7:0] buffer1_1_96_4x4_p_V_284_reg_7578;
reg   [7:0] buffer1_1_96_4x4_p_V_285_reg_7584;
reg   [7:0] buffer1_1_96_4x4_p_V_286_reg_7590;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state39;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg   [7:0] grp_MUL_DP_fu_2645_a_V;
reg   [7:0] grp_MUL_DP_fu_2645_b_V;
reg    grp_MUL_DP_fu_2645_ap_ce;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg   [7:0] grp_MUL_DP_fu_2652_a_V;
reg   [7:0] grp_MUL_DP_fu_2652_b_V;
reg    grp_MUL_DP_fu_2652_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2659_a_V;
reg   [7:0] grp_MUL_DP_fu_2659_b_V;
reg    grp_MUL_DP_fu_2659_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2666_a_V;
reg   [7:0] grp_MUL_DP_fu_2666_b_V;
reg    grp_MUL_DP_fu_2666_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2673_a_V;
reg   [7:0] grp_MUL_DP_fu_2673_b_V;
reg    grp_MUL_DP_fu_2673_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2680_a_V;
reg   [7:0] grp_MUL_DP_fu_2680_b_V;
reg    grp_MUL_DP_fu_2680_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2687_a_V;
reg   [7:0] grp_MUL_DP_fu_2687_b_V;
reg    grp_MUL_DP_fu_2687_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2694_a_V;
reg   [7:0] grp_MUL_DP_fu_2694_b_V;
reg    grp_MUL_DP_fu_2694_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2701_a_V;
reg   [7:0] grp_MUL_DP_fu_2701_b_V;
reg    grp_MUL_DP_fu_2701_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2708_a_V;
reg   [7:0] grp_MUL_DP_fu_2708_b_V;
reg    grp_MUL_DP_fu_2708_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2715_a_V;
reg   [7:0] grp_MUL_DP_fu_2715_b_V;
reg    grp_MUL_DP_fu_2715_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2722_a_V;
reg   [7:0] grp_MUL_DP_fu_2722_b_V;
reg    grp_MUL_DP_fu_2722_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2729_a_V;
reg   [7:0] grp_MUL_DP_fu_2729_b_V;
reg    grp_MUL_DP_fu_2729_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2736_a_V;
reg   [7:0] grp_MUL_DP_fu_2736_b_V;
reg    grp_MUL_DP_fu_2736_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2743_a_V;
reg   [7:0] grp_MUL_DP_fu_2743_b_V;
reg    grp_MUL_DP_fu_2743_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2750_a_V;
reg   [7:0] grp_MUL_DP_fu_2750_b_V;
reg    grp_MUL_DP_fu_2750_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2757_a_V;
reg   [7:0] grp_MUL_DP_fu_2757_b_V;
reg    grp_MUL_DP_fu_2757_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2764_a_V;
reg   [7:0] grp_MUL_DP_fu_2764_b_V;
reg    grp_MUL_DP_fu_2764_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2771_a_V;
reg   [7:0] grp_MUL_DP_fu_2771_b_V;
reg    grp_MUL_DP_fu_2771_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2778_a_V;
reg   [7:0] grp_MUL_DP_fu_2778_b_V;
reg    grp_MUL_DP_fu_2778_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2785_a_V;
reg   [7:0] grp_MUL_DP_fu_2785_b_V;
reg    grp_MUL_DP_fu_2785_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2792_a_V;
reg   [7:0] grp_MUL_DP_fu_2792_b_V;
reg    grp_MUL_DP_fu_2792_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2799_a_V;
reg   [7:0] grp_MUL_DP_fu_2799_b_V;
reg    grp_MUL_DP_fu_2799_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2806_a_V;
reg   [7:0] grp_MUL_DP_fu_2806_b_V;
reg    grp_MUL_DP_fu_2806_ap_ce;
reg   [6:0] co_phi_fu_2475_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [2:0] h_phi_fu_2498_p4;
reg   [2:0] w_phi_fu_2510_p4;
reg   [2:0] h1_reg_2518;
wire    ap_CS_fsm_state14;
reg   [2:0] w2_reg_2530;
wire   [0:0] exitcond18_fu_3523_p2;
reg   [6:0] ci_reg_2542;
wire    ap_CS_fsm_state26;
reg   [2:0] h4_reg_2553;
reg   [2:0] w5_reg_2565;
reg   [6:0] ci6_reg_2577;
wire    ap_CS_fsm_state38;
reg   [6:0] co8_phi_fu_2603_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [2:0] h9_phi_fu_2625_p4;
reg   [2:0] w10_phi_fu_2637_p4;
wire   [31:0] co_cast_mid2_fu_3352_p1;
wire   [31:0] tmp_348_cast_fu_3448_p1;
wire  signed [31:0] tmp_358_cast_fu_3546_p1;
wire   [31:0] tmp_359_cast_fu_3579_p1;
wire   [31:0] tmp_369_cast_fu_3693_p1;
wire   [31:0] tmp_371_cast_fu_3708_p1;
wire   [31:0] tmp_372_cast_fu_3742_p1;
wire   [31:0] tmp_360_cast_fu_4537_p1;
wire   [31:0] tmp_361_cast_fu_4570_p1;
wire   [31:0] tmp_391_cast_fu_4688_p1;
wire   [31:0] tmp_394_cast_fu_4709_p1;
wire   [31:0] tmp_395_cast_fu_4743_p1;
wire   [31:0] tmp_383_cast_fu_5676_p1;
wire   [5:0] tmp_366_fu_3444_p1;
wire   [7:0] tmp_43_21_fu_4126_p2;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_49_21_fu_5127_p2;
wire    ap_CS_fsm_state36;
wire   [0:0] tmp_401_fu_5765_p3;
wire   [5:0] tmp_389_fu_5707_p1;
wire   [7:0] tmp_43_20_fu_4111_p2;
wire   [7:0] tmp_49_20_fu_5112_p2;
wire   [7:0] tmp_43_19_fu_4096_p2;
wire   [7:0] tmp_49_19_fu_5097_p2;
wire   [7:0] tmp_43_18_fu_4081_p2;
wire   [7:0] tmp_49_18_fu_5082_p2;
wire   [7:0] tmp_43_17_fu_4066_p2;
wire   [7:0] tmp_49_17_fu_5067_p2;
wire   [7:0] tmp_43_16_fu_4051_p2;
wire   [7:0] tmp_49_16_fu_5052_p2;
wire   [7:0] tmp_43_15_fu_4036_p2;
wire   [7:0] tmp_49_15_fu_5037_p2;
wire   [7:0] tmp_43_14_fu_4021_p2;
wire   [7:0] tmp_49_14_fu_5022_p2;
wire   [7:0] tmp_43_13_fu_4006_p2;
wire   [7:0] tmp_49_13_fu_5007_p2;
wire   [7:0] tmp_43_12_fu_3991_p2;
wire   [7:0] tmp_49_12_fu_4992_p2;
wire   [7:0] tmp_43_11_fu_3976_p2;
wire   [7:0] tmp_49_11_fu_4977_p2;
wire   [7:0] tmp_43_10_fu_3961_p2;
wire   [7:0] tmp_49_10_fu_4962_p2;
wire   [7:0] tmp_43_s_fu_3946_p2;
wire   [7:0] tmp_49_s_fu_4947_p2;
wire   [7:0] tmp_43_9_fu_3931_p2;
wire   [7:0] tmp_49_9_fu_4932_p2;
wire   [7:0] tmp_43_8_fu_3916_p2;
wire   [7:0] tmp_49_8_fu_4917_p2;
wire   [7:0] tmp_43_7_fu_3901_p2;
wire   [7:0] tmp_49_7_fu_4902_p2;
wire   [7:0] tmp_43_6_fu_3886_p2;
wire   [7:0] tmp_49_6_fu_4887_p2;
wire   [7:0] tmp_43_5_fu_3871_p2;
wire   [7:0] tmp_49_5_fu_4872_p2;
wire   [7:0] tmp_43_4_fu_3856_p2;
wire   [7:0] tmp_49_4_fu_4857_p2;
wire   [7:0] tmp_43_3_fu_3841_p2;
wire   [7:0] tmp_49_3_fu_4842_p2;
wire   [7:0] tmp_43_2_fu_3826_p2;
wire   [7:0] tmp_49_2_fu_4827_p2;
wire   [7:0] tmp_43_1_fu_3811_p2;
wire   [7:0] tmp_49_1_fu_4812_p2;
wire   [7:0] tmp_23_fu_3796_p2;
wire   [7:0] tmp_27_fu_4797_p2;
wire   [7:0] tmp_43_22_fu_4141_p2;
wire   [7:0] tmp_49_22_fu_5142_p2;
wire   [5:0] indvar_flatten_op_fu_3243_p2;
wire   [6:0] co_13_fu_3257_p2;
wire   [6:0] grp_fu_3277_p0;
wire   [5:0] grp_fu_3277_p1;
wire   [0:0] exitcond_fu_3288_p2;
wire   [0:0] not_exitcond_flatten_fu_3283_p2;
wire   [2:0] h_mid_fu_3263_p3;
wire   [0:0] exitcond31_mid_fu_3294_p2;
wire   [0:0] tmp_310_fu_3306_p2;
wire   [2:0] h_17_fu_3300_p2;
wire   [6:0] mul_fu_3336_p1;
wire   [15:0] mul_fu_3336_p2;
wire   [6:0] tmp_373_fu_3356_p3;
wire  signed [9:0] tmp_s_fu_3363_p1;
wire   [4:0] tmp_375_fu_3371_p3;
wire  signed [7:0] tmp_308_fu_3378_p1;
wire   [10:0] p_shl2_cast_fu_3367_p1;
wire   [10:0] p_shl3_cast_fu_3382_p1;
wire   [10:0] tmp_309_fu_3386_p2;
wire   [11:0] h_cast_mid2_cast_fu_3396_p1;
wire  signed [11:0] tmp_342_cast_fu_3392_p1;
wire   [11:0] tmp_311_fu_3399_p2;
wire   [5:0] tmp_380_fu_3405_p1;
wire   [7:0] tmp_381_fu_3417_p1;
wire   [8:0] p_shl_cast_fu_3409_p3;
wire   [8:0] p_shl1_cast_fu_3421_p3;
wire   [8:0] w_cast_cast_fu_3435_p1;
wire   [8:0] tmp_312_fu_3429_p2;
wire   [5:0] grp_fu_3277_p2;
wire   [5:0] tmp_314_fu_3483_p3;
wire   [3:0] tmp_315_fu_3495_p3;
wire   [6:0] p_shl4_cast_fu_3491_p1;
wire   [6:0] p_shl5_cast_fu_3503_p1;
wire   [6:0] tmp_316_fu_3507_p2;
wire   [7:0] w2_cast8_cast_fu_3537_p1;
wire   [7:0] tmp_323_fu_3541_p2;
wire   [7:0] tmp_324_fu_3574_p2;
wire   [9:0] tmp_327_fu_3623_p3;
wire   [7:0] tmp_328_fu_3635_p3;
wire   [10:0] p_shl8_cast_fu_3631_p1;
wire   [10:0] p_shl9_cast_fu_3643_p1;
wire   [10:0] tmp_329_fu_3647_p2;
wire  signed [11:0] tmp_364_cast_fu_3653_p1;
wire   [11:0] tmp_330_fu_3657_p2;
wire   [9:0] tmp_388_fu_3662_p1;
wire   [12:0] p_shl6_cast_fu_3666_p3;
wire   [12:0] p_shl7_cast_fu_3674_p3;
wire   [12:0] tmp_331_fu_3682_p2;
wire   [12:0] tmp_332_fu_3688_p2;
wire   [6:0] tmp_333_fu_3698_p2;
wire   [6:0] tmp_334_fu_3703_p2;
wire   [8:0] ci_cast7_cast_fu_3619_p1;
wire   [8:0] tmp_335_fu_3736_p2;
wire   [7:0] tmp_402_fu_3792_p1;
wire   [7:0] tmp_404_fu_3807_p1;
wire   [7:0] tmp_406_fu_3822_p1;
wire   [7:0] tmp_408_fu_3837_p1;
wire   [7:0] tmp_410_fu_3852_p1;
wire   [7:0] tmp_412_fu_3867_p1;
wire   [7:0] tmp_414_fu_3882_p1;
wire   [7:0] tmp_416_fu_3897_p1;
wire   [7:0] tmp_418_fu_3912_p1;
wire   [7:0] tmp_420_fu_3927_p1;
wire   [7:0] tmp_422_fu_3942_p1;
wire   [7:0] tmp_424_fu_3957_p1;
wire   [7:0] tmp_426_fu_3972_p1;
wire   [7:0] tmp_428_fu_3987_p1;
wire   [7:0] tmp_430_fu_4002_p1;
wire   [7:0] tmp_432_fu_4017_p1;
wire   [7:0] tmp_434_fu_4032_p1;
wire   [7:0] tmp_436_fu_4047_p1;
wire   [7:0] tmp_438_fu_4062_p1;
wire   [7:0] tmp_440_fu_4077_p1;
wire   [7:0] tmp_442_fu_4092_p1;
wire   [7:0] tmp_444_fu_4107_p1;
wire   [7:0] tmp_446_fu_4122_p1;
wire   [7:0] tmp_448_fu_4137_p1;
wire   [7:0] tmp_403_fu_4151_p1;
wire   [7:0] tmp_405_fu_4164_p1;
wire   [7:0] tmp_407_fu_4177_p1;
wire   [7:0] tmp_409_fu_4190_p1;
wire   [7:0] tmp_411_fu_4203_p1;
wire   [7:0] tmp_413_fu_4216_p1;
wire   [7:0] tmp_415_fu_4229_p1;
wire   [7:0] tmp_417_fu_4242_p1;
wire   [7:0] tmp_419_fu_4255_p1;
wire   [7:0] tmp_421_fu_4268_p1;
wire   [7:0] tmp_423_fu_4281_p1;
wire   [7:0] tmp_425_fu_4294_p1;
wire   [7:0] tmp_427_fu_4307_p1;
wire   [7:0] tmp_429_fu_4320_p1;
wire   [7:0] tmp_431_fu_4333_p1;
wire   [7:0] tmp_433_fu_4346_p1;
wire   [7:0] tmp_435_fu_4359_p1;
wire   [7:0] tmp_437_fu_4372_p1;
wire   [7:0] tmp_439_fu_4385_p1;
wire   [7:0] tmp_441_fu_4398_p1;
wire   [7:0] tmp_443_fu_4411_p1;
wire   [7:0] tmp_445_fu_4424_p1;
wire   [7:0] tmp_447_fu_4437_p1;
wire   [7:0] tmp_449_fu_4450_p1;
wire   [5:0] tmp_318_fu_4468_p3;
wire   [3:0] tmp_319_fu_4480_p3;
wire   [6:0] p_shl10_cast_fu_4476_p1;
wire   [6:0] p_shl11_cast_fu_4488_p1;
wire   [6:0] tmp_320_fu_4492_p2;
wire  signed [7:0] tmp_355_cast_fu_4498_p1;
wire   [6:0] w5_cast5_cast_fu_4528_p1;
wire   [6:0] tmp_325_fu_4532_p2;
wire   [7:0] tmp_326_fu_4565_p2;
wire   [9:0] tmp_343_fu_4618_p3;
wire   [7:0] tmp_344_fu_4630_p3;
wire   [10:0] p_shl14_cast_fu_4626_p1;
wire   [10:0] p_shl15_cast_fu_4638_p1;
wire   [10:0] tmp_345_fu_4642_p2;
wire  signed [11:0] tmp_386_cast_fu_4648_p1;
wire   [11:0] tmp_346_fu_4652_p2;
wire   [9:0] tmp_450_fu_4657_p1;
wire   [12:0] p_shl12_cast_fu_4661_p3;
wire   [12:0] p_shl13_cast_fu_4669_p3;
wire   [12:0] tmp_347_fu_4677_p2;
wire   [12:0] tmp_348_fu_4683_p2;
wire   [7:0] ci6_cast4_cast_fu_4614_p1;
wire   [7:0] tmp_349_fu_4693_p2;
wire   [7:0] tmp_350_fu_4699_p2;
wire   [7:0] tmp_351_fu_4704_p2;
wire   [8:0] ci6_cast4_cast1_fu_4610_p1;
wire   [8:0] tmp_352_fu_4737_p2;
wire   [7:0] tmp_451_fu_4793_p1;
wire   [7:0] tmp_453_fu_4808_p1;
wire   [7:0] tmp_455_fu_4823_p1;
wire   [7:0] tmp_457_fu_4838_p1;
wire   [7:0] tmp_459_fu_4853_p1;
wire   [7:0] tmp_461_fu_4868_p1;
wire   [7:0] tmp_463_fu_4883_p1;
wire   [7:0] tmp_465_fu_4898_p1;
wire   [7:0] tmp_467_fu_4913_p1;
wire   [7:0] tmp_469_fu_4928_p1;
wire   [7:0] tmp_471_fu_4943_p1;
wire   [7:0] tmp_473_fu_4958_p1;
wire   [7:0] tmp_475_fu_4973_p1;
wire   [7:0] tmp_477_fu_4988_p1;
wire   [7:0] tmp_479_fu_5003_p1;
wire   [7:0] tmp_481_fu_5018_p1;
wire   [7:0] tmp_483_fu_5033_p1;
wire   [7:0] tmp_485_fu_5048_p1;
wire   [7:0] tmp_487_fu_5063_p1;
wire   [7:0] tmp_489_fu_5078_p1;
wire   [7:0] tmp_491_fu_5093_p1;
wire   [7:0] tmp_493_fu_5108_p1;
wire   [7:0] tmp_495_fu_5123_p1;
wire   [7:0] tmp_497_fu_5138_p1;
wire   [7:0] tmp_452_fu_5152_p1;
wire   [7:0] tmp_454_fu_5165_p1;
wire   [7:0] tmp_456_fu_5178_p1;
wire   [7:0] tmp_458_fu_5191_p1;
wire   [7:0] tmp_460_fu_5204_p1;
wire   [7:0] tmp_462_fu_5217_p1;
wire   [7:0] tmp_464_fu_5230_p1;
wire   [7:0] tmp_466_fu_5243_p1;
wire   [7:0] tmp_468_fu_5256_p1;
wire   [7:0] tmp_470_fu_5269_p1;
wire   [7:0] tmp_472_fu_5282_p1;
wire   [7:0] tmp_474_fu_5295_p1;
wire   [7:0] tmp_476_fu_5308_p1;
wire   [7:0] tmp_478_fu_5321_p1;
wire   [7:0] tmp_480_fu_5334_p1;
wire   [7:0] tmp_482_fu_5347_p1;
wire   [7:0] tmp_484_fu_5360_p1;
wire   [7:0] tmp_486_fu_5373_p1;
wire   [7:0] tmp_488_fu_5386_p1;
wire   [7:0] tmp_490_fu_5399_p1;
wire   [7:0] tmp_492_fu_5412_p1;
wire   [7:0] tmp_494_fu_5425_p1;
wire   [7:0] tmp_496_fu_5438_p1;
wire   [7:0] tmp_498_fu_5451_p1;
wire   [6:0] co_15_fu_5473_p2;
wire   [5:0] indvar_flatten21_op_fu_5493_p2;
wire   [5:0] grp_fu_5514_p1;
wire   [6:0] mul3_fu_5522_p1;
wire   [15:0] mul3_fu_5522_p2;
wire   [0:0] exitcond23_fu_5543_p2;
wire   [0:0] not_exitcond_flatten_6_fu_5538_p2;
wire   [2:0] h9_mid_fu_5507_p3;
wire   [0:0] exitcond_mid_fu_5549_p2;
wire   [0:0] tmp_339_fu_5561_p2;
wire   [2:0] h_5_fu_5555_p2;
wire   [6:0] tmp_397_fu_5588_p3;
wire  signed [9:0] tmp_336_fu_5595_p1;
wire   [4:0] tmp_398_fu_5603_p3;
wire  signed [7:0] tmp_337_fu_5610_p1;
wire   [10:0] p_shl18_cast_fu_5599_p1;
wire   [10:0] p_shl19_cast_fu_5614_p1;
wire   [10:0] tmp_338_fu_5618_p2;
wire   [11:0] h9_cast2_mid2_cast_fu_5628_p1;
wire  signed [11:0] tmp_377_cast_fu_5624_p1;
wire   [11:0] tmp_340_fu_5631_p2;
wire   [5:0] tmp_399_fu_5637_p1;
wire   [7:0] tmp_400_fu_5649_p1;
wire   [8:0] p_shl16_cast_fu_5641_p3;
wire   [8:0] p_shl17_cast_fu_5653_p3;
wire   [8:0] w10_cast1_cast_fu_5667_p1;
wire   [8:0] tmp_341_fu_5661_p2;
wire   [6:0] grp_fu_5514_p2;
wire   [31:0] tmp_30_fu_5711_p25;
wire   [7:0] tmp_30_fu_5711_p26;
wire    ap_CS_fsm_state51;
reg   [28:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [15:0] mul3_fu_5522_p10;
wire   [15:0] mul_fu_3336_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_2645(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2645_a_V),
    .b_V(grp_MUL_DP_fu_2645_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2645_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2645_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2645_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2652(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2652_a_V),
    .b_V(grp_MUL_DP_fu_2652_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2652_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2652_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2652_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2659(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2659_a_V),
    .b_V(grp_MUL_DP_fu_2659_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2659_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2659_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2659_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2666(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2666_a_V),
    .b_V(grp_MUL_DP_fu_2666_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2666_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2666_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2666_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2673(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2673_a_V),
    .b_V(grp_MUL_DP_fu_2673_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2673_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2673_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2673_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2680(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2680_a_V),
    .b_V(grp_MUL_DP_fu_2680_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2680_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2680_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2680_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2687(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2687_a_V),
    .b_V(grp_MUL_DP_fu_2687_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2687_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2687_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2687_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2694(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2694_a_V),
    .b_V(grp_MUL_DP_fu_2694_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2694_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2694_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2694_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2701(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2701_a_V),
    .b_V(grp_MUL_DP_fu_2701_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2701_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2701_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2701_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2708(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2708_a_V),
    .b_V(grp_MUL_DP_fu_2708_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2708_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2708_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2708_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2715(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2715_a_V),
    .b_V(grp_MUL_DP_fu_2715_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2715_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2715_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2715_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2722(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2722_a_V),
    .b_V(grp_MUL_DP_fu_2722_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2722_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2722_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2722_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2729(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2729_a_V),
    .b_V(grp_MUL_DP_fu_2729_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2729_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2729_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2729_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2736(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2736_a_V),
    .b_V(grp_MUL_DP_fu_2736_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2736_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2736_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2736_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2743(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2743_a_V),
    .b_V(grp_MUL_DP_fu_2743_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2743_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2743_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2743_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2750(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2750_a_V),
    .b_V(grp_MUL_DP_fu_2750_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2750_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2750_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2750_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2757(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2757_a_V),
    .b_V(grp_MUL_DP_fu_2757_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2757_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2757_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2757_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2764(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2764_a_V),
    .b_V(grp_MUL_DP_fu_2764_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2764_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2764_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2764_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2771(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2771_a_V),
    .b_V(grp_MUL_DP_fu_2771_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2771_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2771_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2771_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2778(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2778_a_V),
    .b_V(grp_MUL_DP_fu_2778_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2778_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2778_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2778_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2785(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2785_a_V),
    .b_V(grp_MUL_DP_fu_2785_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2785_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2785_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2785_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2792(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2792_a_V),
    .b_V(grp_MUL_DP_fu_2792_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2792_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2792_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2792_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2799(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2799_a_V),
    .b_V(grp_MUL_DP_fu_2799_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2799_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2799_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2799_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2806(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2806_a_V),
    .b_V(grp_MUL_DP_fu_2806_b_V),
    .w_V(reg_3101),
    .ap_return_0(grp_MUL_DP_fu_2806_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2806_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2806_ap_ce)
);

ShuffleNetV2_uremjbC #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremjbC_x_U588(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3277_p0),
    .din1(grp_fu_3277_p1),
    .ce(1'b1),
    .dout(grp_fu_3277_p2)
);

ShuffleNetV2_uremkbM #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
ShuffleNetV2_uremkbM_x_U589(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayNo_cast3_mid2_v_2_reg_7413),
    .din1(grp_fu_5514_p1),
    .ce(1'b1),
    .dout(grp_fu_5514_p2)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_x_U590(
    .din1(buffer1_1_96_4x4_p_V_24_q0),
    .din2(buffer1_1_96_4x4_p_V_1_q0),
    .din3(buffer1_1_96_4x4_p_V_2_q0),
    .din4(buffer1_1_96_4x4_p_V_3_q0),
    .din5(buffer1_1_96_4x4_p_V_4_q0),
    .din6(buffer1_1_96_4x4_p_V_5_q0),
    .din7(buffer1_1_96_4x4_p_V_6_q0),
    .din8(buffer1_1_96_4x4_p_V_7_q0),
    .din9(buffer1_1_96_4x4_p_V_8_q0),
    .din10(buffer1_1_96_4x4_p_V_9_q0),
    .din11(buffer1_1_96_4x4_p_V_10_q0),
    .din12(buffer1_1_96_4x4_p_V_11_q0),
    .din13(buffer1_1_96_4x4_p_V_12_q0),
    .din14(buffer1_1_96_4x4_p_V_13_q0),
    .din15(buffer1_1_96_4x4_p_V_14_q0),
    .din16(buffer1_1_96_4x4_p_V_15_q0),
    .din17(buffer1_1_96_4x4_p_V_16_q0),
    .din18(buffer1_1_96_4x4_p_V_17_q0),
    .din19(buffer1_1_96_4x4_p_V_18_q0),
    .din20(buffer1_1_96_4x4_p_V_19_q0),
    .din21(buffer1_1_96_4x4_p_V_20_q0),
    .din22(buffer1_1_96_4x4_p_V_21_q0),
    .din23(buffer1_1_96_4x4_p_V_22_q0),
    .din24(buffer1_1_96_4x4_p_V_23_q0),
    .din25(tmp_30_fu_5711_p25),
    .dout(tmp_30_fu_5711_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state39))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state39)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state39 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond21_fu_4598_p2))) begin
        ci6_reg_2577 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ci6_reg_2577 <= ci_7_reg_7147;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond20_fu_3607_p2))) begin
        ci_reg_2542 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        ci_reg_2542 <= ci_6_reg_6367;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
        co8_reg_2599 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_7397) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        co8_reg_2599 <= arrayNo_cast3_mid2_v_2_reg_7413;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0))) begin
        co_reg_2471 <= co_cast_mid2_v_reg_5795;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_2471 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h1_reg_2518 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (exitcond20_fu_3607_p2 == 1'd1))) begin
        h1_reg_2518 <= h_4_fu_3613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond18_fu_3523_p2))) begin
        h4_reg_2553 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond21_fu_4598_p2))) begin
        h4_reg_2553 <= h_6_fu_4604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
        h9_reg_2621 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_7397) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h9_reg_2621 <= h9_cast2_mid2_reg_7436;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0))) begin
        h_reg_2494 <= h_cast_mid2_reg_5808;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_2494 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_3225_p2 == 1'd0))) begin
        indvar_flatten7_reg_2460 <= indvar_flatten_next7_fu_3231_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten7_reg_2460 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
        indvar_flatten8_reg_2588 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_5461_p2))) begin
        indvar_flatten8_reg_2588 <= indvar_flatten_next9_fu_5467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
        indvar_flatten9_reg_2610 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_5461_p2))) begin
        indvar_flatten9_reg_2610 <= indvar_flatten_next8_fu_5499_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_3225_p2 == 1'd0))) begin
        indvar_flatten_reg_2483 <= indvar_flatten_next_fu_3249_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_2483 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
        w10_reg_2633 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_7397) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w10_reg_2633 <= w_21_reg_7442;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond18_fu_3523_p2))) begin
        w2_reg_2530 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond22_fu_3770_p2))) begin
        w2_reg_2530 <= w_19_fu_3782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond19_fu_4514_p2))) begin
        w5_reg_2565 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond24_fu_4771_p2))) begin
        w5_reg_2565 <= w_20_fu_4783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0))) begin
        w_reg_2506 <= w_18_reg_5814;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_2506 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        MUL_DP_ret100_reg_7182_1 <= grp_MUL_DP_fu_2680_ap_return_1;
        MUL_DP_ret101_reg_7187_1 <= grp_MUL_DP_fu_2687_ap_return_1;
        MUL_DP_ret102_reg_7192_1 <= grp_MUL_DP_fu_2694_ap_return_1;
        MUL_DP_ret103_reg_7197_1 <= grp_MUL_DP_fu_2701_ap_return_1;
        MUL_DP_ret104_reg_7202_1 <= grp_MUL_DP_fu_2708_ap_return_1;
        MUL_DP_ret105_reg_7207_1 <= grp_MUL_DP_fu_2715_ap_return_1;
        MUL_DP_ret106_reg_7212_1 <= grp_MUL_DP_fu_2722_ap_return_1;
        MUL_DP_ret107_reg_7217_1 <= grp_MUL_DP_fu_2729_ap_return_1;
        MUL_DP_ret108_reg_7222_1 <= grp_MUL_DP_fu_2736_ap_return_1;
        MUL_DP_ret109_reg_7227_1 <= grp_MUL_DP_fu_2743_ap_return_1;
        MUL_DP_ret110_reg_7232_1 <= grp_MUL_DP_fu_2750_ap_return_1;
        MUL_DP_ret111_reg_7237_1 <= grp_MUL_DP_fu_2757_ap_return_1;
        MUL_DP_ret112_reg_7242_1 <= grp_MUL_DP_fu_2764_ap_return_1;
        MUL_DP_ret113_reg_7247_1 <= grp_MUL_DP_fu_2771_ap_return_1;
        MUL_DP_ret114_reg_7252_1 <= grp_MUL_DP_fu_2778_ap_return_1;
        MUL_DP_ret115_reg_7257_1 <= grp_MUL_DP_fu_2785_ap_return_1;
        MUL_DP_ret116_reg_7262_1 <= grp_MUL_DP_fu_2792_ap_return_1;
        MUL_DP_ret117_reg_7267_1 <= grp_MUL_DP_fu_2799_ap_return_1;
        MUL_DP_ret95_reg_7157_1 <= grp_MUL_DP_fu_2645_ap_return_1;
        MUL_DP_ret96_reg_7162_1 <= grp_MUL_DP_fu_2652_ap_return_1;
        MUL_DP_ret97_reg_7167_1 <= grp_MUL_DP_fu_2659_ap_return_1;
        MUL_DP_ret98_reg_7172_1 <= grp_MUL_DP_fu_2666_ap_return_1;
        MUL_DP_ret99_reg_7177_1 <= grp_MUL_DP_fu_2673_ap_return_1;
        MUL_DP_ret_reg_7272_1 <= grp_MUL_DP_fu_2806_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        MUL_DP_ret71_reg_6377_1 <= grp_MUL_DP_fu_2645_ap_return_1;
        MUL_DP_ret72_reg_6382_1 <= grp_MUL_DP_fu_2652_ap_return_1;
        MUL_DP_ret73_reg_6387_1 <= grp_MUL_DP_fu_2659_ap_return_1;
        MUL_DP_ret74_reg_6392_1 <= grp_MUL_DP_fu_2666_ap_return_1;
        MUL_DP_ret75_reg_6397_1 <= grp_MUL_DP_fu_2673_ap_return_1;
        MUL_DP_ret76_reg_6402_1 <= grp_MUL_DP_fu_2680_ap_return_1;
        MUL_DP_ret77_reg_6407_1 <= grp_MUL_DP_fu_2687_ap_return_1;
        MUL_DP_ret78_reg_6412_1 <= grp_MUL_DP_fu_2694_ap_return_1;
        MUL_DP_ret79_reg_6417_1 <= grp_MUL_DP_fu_2701_ap_return_1;
        MUL_DP_ret80_reg_6422_1 <= grp_MUL_DP_fu_2708_ap_return_1;
        MUL_DP_ret81_reg_6427_1 <= grp_MUL_DP_fu_2715_ap_return_1;
        MUL_DP_ret82_reg_6432_1 <= grp_MUL_DP_fu_2722_ap_return_1;
        MUL_DP_ret83_reg_6437_1 <= grp_MUL_DP_fu_2729_ap_return_1;
        MUL_DP_ret84_reg_6442_1 <= grp_MUL_DP_fu_2736_ap_return_1;
        MUL_DP_ret85_reg_6447_1 <= grp_MUL_DP_fu_2743_ap_return_1;
        MUL_DP_ret86_reg_6452_1 <= grp_MUL_DP_fu_2750_ap_return_1;
        MUL_DP_ret87_reg_6457_1 <= grp_MUL_DP_fu_2757_ap_return_1;
        MUL_DP_ret88_reg_6462_1 <= grp_MUL_DP_fu_2764_ap_return_1;
        MUL_DP_ret89_reg_6467_1 <= grp_MUL_DP_fu_2771_ap_return_1;
        MUL_DP_ret90_reg_6472_1 <= grp_MUL_DP_fu_2778_ap_return_1;
        MUL_DP_ret91_reg_6477_1 <= grp_MUL_DP_fu_2785_ap_return_1;
        MUL_DP_ret92_reg_6482_1 <= grp_MUL_DP_fu_2792_ap_return_1;
        MUL_DP_ret93_reg_6487_1 <= grp_MUL_DP_fu_2799_ap_return_1;
        MUL_DP_ret94_reg_6492_1 <= grp_MUL_DP_fu_2806_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 <= exitcond_flatten7_reg_5773;
        exitcond_flatten7_reg_5773 <= exitcond_flatten7_fu_3225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_co_cast_mid2_v_reg_5795 <= co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter2_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter1_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter2_h_cast_mid2_reg_5808 <= h_cast_mid2_reg_5808;
        ap_reg_pp0_iter2_w_mid2_reg_5803 <= w_mid2_reg_5803;
        ap_reg_pp0_iter3_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter2_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter3_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter2_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter3_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter2_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter3_w_mid2_reg_5803 <= ap_reg_pp0_iter2_w_mid2_reg_5803;
        ap_reg_pp0_iter4_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter3_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter4_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter3_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter4_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter3_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter4_w_mid2_reg_5803 <= ap_reg_pp0_iter3_w_mid2_reg_5803;
        ap_reg_pp0_iter5_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter4_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter5_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter4_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter5_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter4_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter5_w_mid2_reg_5803 <= ap_reg_pp0_iter4_w_mid2_reg_5803;
        ap_reg_pp0_iter6_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter5_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter6_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter5_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter6_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter5_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter6_w_mid2_reg_5803 <= ap_reg_pp0_iter5_w_mid2_reg_5803;
        ap_reg_pp0_iter7_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter6_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter7_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter6_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter7_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter6_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter7_w_mid2_reg_5803 <= ap_reg_pp0_iter6_w_mid2_reg_5803;
        ap_reg_pp0_iter8_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter7_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter8_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter7_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter8_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter7_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter8_w_mid2_reg_5803 <= ap_reg_pp0_iter7_w_mid2_reg_5803;
        ap_reg_pp0_iter9_co_cast_mid2_v_reg_5795 <= ap_reg_pp0_iter8_co_cast_mid2_v_reg_5795;
        ap_reg_pp0_iter9_exitcond_flatten7_reg_5773 <= ap_reg_pp0_iter8_exitcond_flatten7_reg_5773;
        ap_reg_pp0_iter9_h_cast_mid2_reg_5808 <= ap_reg_pp0_iter8_h_cast_mid2_reg_5808;
        ap_reg_pp0_iter9_w_mid2_reg_5803 <= ap_reg_pp0_iter8_w_mid2_reg_5803;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_7397 <= exitcond_flatten9_reg_7397;
        exitcond_flatten9_reg_7397 <= exitcond_flatten9_fu_5461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter1_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter3_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter2_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter3_tmp_342_reg_7447 <= tmp_342_reg_7447;
        ap_reg_pp1_iter4_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter3_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter4_tmp_342_reg_7447 <= ap_reg_pp1_iter3_tmp_342_reg_7447;
        ap_reg_pp1_iter5_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter4_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter5_tmp_342_reg_7447 <= ap_reg_pp1_iter4_tmp_342_reg_7447;
        ap_reg_pp1_iter6_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter5_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter6_tmp_342_reg_7447 <= ap_reg_pp1_iter5_tmp_342_reg_7447;
        ap_reg_pp1_iter7_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter6_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter7_tmp_342_reg_7447 <= ap_reg_pp1_iter6_tmp_342_reg_7447;
        ap_reg_pp1_iter8_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter7_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter8_tmp_342_reg_7447 <= ap_reg_pp1_iter7_tmp_342_reg_7447;
        ap_reg_pp1_iter9_exitcond_flatten9_reg_7397 <= ap_reg_pp1_iter8_exitcond_flatten9_reg_7397;
        ap_reg_pp1_iter9_tmp_342_reg_7447 <= ap_reg_pp1_iter8_tmp_342_reg_7447;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_5461_p2))) begin
        arrayNo_cast3_mid2_v_2_reg_7413 <= arrayNo_cast3_mid2_v_2_fu_5485_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer1_1_96_4x4_p_V_100_reg_6016 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_101_reg_6021 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_102_reg_6026 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_103_reg_6031 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_104_reg_6036 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_105_reg_6041 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_106_reg_6046 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_107_reg_6051 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_108_reg_6056 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_109_reg_6061 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_110_reg_6066 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_111_reg_6071 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_112_reg_6076 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_113_reg_6081 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_114_reg_6086 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_115_reg_6091 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_116_reg_6096 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_117_reg_6101 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_118_reg_6106 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_71_reg_5871 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_72_reg_5876 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_73_reg_5881 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_74_reg_5886 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_75_reg_5891 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_76_reg_5896 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_77_reg_5901 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_78_reg_5906 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_79_reg_5911 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_80_reg_5916 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_81_reg_5921 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_82_reg_5926 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_83_reg_5931 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_84_reg_5936 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_85_reg_5941 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_86_reg_5946 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_87_reg_5951 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_88_reg_5956 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_89_reg_5961 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_90_reg_5966 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_91_reg_5971 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_92_reg_5976 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_93_reg_5981 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_94_reg_5986 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_95_reg_5991 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_96_reg_5996 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_97_reg_6001 <= tmp_358_cast_fu_3546_p1;
        buffer1_1_96_4x4_p_V_98_reg_6006 <= tmp_359_cast_fu_3579_p1;
        buffer1_1_96_4x4_p_V_99_reg_6011 <= tmp_358_cast_fu_3546_p1;
        w2_cast8_cast1_reg_5861[2 : 0] <= w2_cast8_cast1_fu_3529_p1[2 : 0];
        w2_cast8_cast2_reg_5866[2 : 0] <= w2_cast8_cast2_fu_3533_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        buffer1_1_96_4x4_p_V_167_reg_6651[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_168_reg_6656 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_169_reg_6661[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_170_reg_6666 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_171_reg_6671[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_172_reg_6676 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_173_reg_6681[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_174_reg_6686 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_175_reg_6691[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_176_reg_6696 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_177_reg_6701[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_178_reg_6706 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_179_reg_6711[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_180_reg_6716 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_181_reg_6721[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_182_reg_6726 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_183_reg_6731[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_184_reg_6736 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_185_reg_6741[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_186_reg_6746 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_187_reg_6751[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_188_reg_6756 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_189_reg_6761[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_190_reg_6766 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_191_reg_6771[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_192_reg_6776 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_193_reg_6781[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_194_reg_6786 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_195_reg_6791[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_196_reg_6796 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_197_reg_6801[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_198_reg_6806 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_199_reg_6811[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_200_reg_6816 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_201_reg_6821[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_202_reg_6826 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_203_reg_6831[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_204_reg_6836 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_205_reg_6841[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_206_reg_6846 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_207_reg_6851[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_208_reg_6856 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_209_reg_6861[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_210_reg_6866 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_211_reg_6871[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_212_reg_6876 <= tmp_361_cast_fu_4570_p1;
        buffer1_1_96_4x4_p_V_213_reg_6881[6 : 0] <= tmp_360_cast_fu_4537_p1[6 : 0];
        buffer1_1_96_4x4_p_V_214_reg_6886 <= tmp_361_cast_fu_4570_p1;
        w5_cast5_cast1_reg_6641[2 : 0] <= w5_cast5_cast1_fu_4520_p1[2 : 0];
        w5_cast5_cast2_reg_6646[2 : 0] <= w5_cast5_cast2_fu_4524_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter9_exitcond_flatten9_reg_7397))) begin
        buffer1_1_96_4x4_p_V_263_reg_7452 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_264_reg_7458 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_265_reg_7464 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_266_reg_7470 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_267_reg_7476 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_268_reg_7482 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_269_reg_7488 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_270_reg_7494 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_271_reg_7500 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_272_reg_7506 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_273_reg_7512 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_274_reg_7518 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_275_reg_7524 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_276_reg_7530 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_277_reg_7536 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_278_reg_7542 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_279_reg_7548 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_280_reg_7554 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_281_reg_7560 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_282_reg_7566 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_283_reg_7572 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_284_reg_7578 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_285_reg_7584 <= tmp_383_cast_fu_5676_p1;
        buffer1_1_96_4x4_p_V_286_reg_7590 <= tmp_383_cast_fu_5676_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ci_6_reg_6367 <= ci_6_fu_3776_p2;
        input_V_addr_reg_6119 <= tmp_369_cast_fu_3693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ci_7_reg_7147 <= ci_7_fu_4777_p2;
        input_V_addr_4_reg_6899 <= tmp_391_cast_fu_4688_p1;
        weight_0_V_addr_6_reg_6904[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_10_V_addr_6_reg_7004[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_11_V_addr_6_reg_7014[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_12_V_addr_6_reg_7024[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_13_V_addr_6_reg_7034[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_14_V_addr_6_reg_7044[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_15_V_addr_6_reg_7054[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_16_V_addr_6_reg_7064[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_17_V_addr_6_reg_7074[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_18_V_addr_6_reg_7084[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_19_V_addr_6_reg_7094[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_1_V_addr_6_reg_6914[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_20_V_addr_6_reg_7104[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_21_V_addr_6_reg_7114[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_22_V_addr_6_reg_7124[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_23_V_addr_6_reg_7134[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_2_V_addr_6_reg_6924[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_3_V_addr_6_reg_6934[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_4_V_addr_6_reg_6944[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_5_V_addr_6_reg_6954[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_6_V_addr_6_reg_6964[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_7_V_addr_6_reg_6974[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_8_V_addr_6_reg_6984[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
        weight_9_V_addr_6_reg_6994[7 : 0] <= tmp_394_cast_fu_4709_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten7_reg_5773 == 1'd0))) begin
        co_cast_mid2_v_reg_5795 <= co_cast_mid2_v_fu_3270_p3;
        h_cast_mid2_reg_5808 <= h_cast_mid2_fu_3319_p3;
        w_18_reg_5814 <= w_18_fu_3327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_5461_p2))) begin
        exitcond_flatten4_reg_7406 <= exitcond_flatten4_fu_5479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_fu_3225_p2 == 1'd0))) begin
        exitcond_flatten_reg_5782 <= exitcond_flatten_fu_3237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h1_cast9_cast1_reg_5838[2 : 0] <= h1_cast9_cast1_fu_3475_p1[2 : 0];
        h1_cast9_cast_reg_5843[2 : 0] <= h1_cast9_cast_fu_3479_p1[2 : 0];
        tmp_317_reg_5853[7 : 1] <= tmp_317_fu_3517_p2[7 : 1];
        tmp_351_cast_reg_5848[7 : 1] <= tmp_351_cast_fu_3513_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        h4_cast6_cast1_reg_6617[2 : 0] <= h4_cast6_cast1_fu_4460_p1[2 : 0];
        h4_cast6_cast_reg_6622[2 : 0] <= h4_cast6_cast_fu_4464_p1[2 : 0];
        tmp_321_reg_6627[6 : 1] <= tmp_321_fu_4502_p2[6 : 1];
        tmp_322_reg_6632[7 : 1] <= tmp_322_fu_4508_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_7397) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        h9_cast2_mid2_reg_7436 <= h9_cast2_mid2_fu_5574_p3;
        w_21_reg_7442 <= w_21_fu_5582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_2813 <= weight_0_V_q0;
        reg_2825 <= weight_1_V_q0;
        reg_2837 <= weight_2_V_q0;
        reg_2849 <= weight_3_V_q0;
        reg_2861 <= weight_4_V_q0;
        reg_2873 <= weight_5_V_q0;
        reg_2885 <= weight_6_V_q0;
        reg_2897 <= weight_7_V_q0;
        reg_2909 <= weight_8_V_q0;
        reg_2921 <= weight_9_V_q0;
        reg_2933 <= weight_10_V_q0;
        reg_2945 <= weight_11_V_q0;
        reg_2957 <= weight_12_V_q0;
        reg_2969 <= weight_13_V_q0;
        reg_2981 <= weight_14_V_q0;
        reg_2993 <= weight_15_V_q0;
        reg_3005 <= weight_16_V_q0;
        reg_3017 <= weight_17_V_q0;
        reg_3029 <= weight_18_V_q0;
        reg_3041 <= weight_19_V_q0;
        reg_3053 <= weight_20_V_q0;
        reg_3065 <= weight_21_V_q0;
        reg_3077 <= weight_22_V_q0;
        reg_3089 <= weight_23_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_2819 <= weight_0_V_q1;
        reg_2831 <= weight_1_V_q1;
        reg_2843 <= weight_2_V_q1;
        reg_2855 <= weight_3_V_q1;
        reg_2867 <= weight_4_V_q1;
        reg_2879 <= weight_5_V_q1;
        reg_2891 <= weight_6_V_q1;
        reg_2903 <= weight_7_V_q1;
        reg_2915 <= weight_8_V_q1;
        reg_2927 <= weight_9_V_q1;
        reg_2939 <= weight_10_V_q1;
        reg_2951 <= weight_11_V_q1;
        reg_2963 <= weight_12_V_q1;
        reg_2975 <= weight_13_V_q1;
        reg_2987 <= weight_14_V_q1;
        reg_2999 <= weight_15_V_q1;
        reg_3011 <= weight_16_V_q1;
        reg_3023 <= weight_17_V_q1;
        reg_3035 <= weight_18_V_q1;
        reg_3047 <= weight_19_V_q1;
        reg_3059 <= weight_20_V_q1;
        reg_3071 <= weight_21_V_q1;
        reg_3083 <= weight_22_V_q1;
        reg_3095 <= weight_23_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_3101 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_3129 <= buffer1_1_96_4x4_p_V_24_q0;
        reg_3133 <= buffer1_1_96_4x4_p_V_1_q0;
        reg_3137 <= buffer1_1_96_4x4_p_V_2_q0;
        reg_3141 <= buffer1_1_96_4x4_p_V_3_q0;
        reg_3145 <= buffer1_1_96_4x4_p_V_4_q0;
        reg_3149 <= buffer1_1_96_4x4_p_V_5_q0;
        reg_3153 <= buffer1_1_96_4x4_p_V_6_q0;
        reg_3157 <= buffer1_1_96_4x4_p_V_7_q0;
        reg_3161 <= buffer1_1_96_4x4_p_V_8_q0;
        reg_3165 <= buffer1_1_96_4x4_p_V_9_q0;
        reg_3169 <= buffer1_1_96_4x4_p_V_10_q0;
        reg_3173 <= buffer1_1_96_4x4_p_V_11_q0;
        reg_3177 <= buffer1_1_96_4x4_p_V_12_q0;
        reg_3181 <= buffer1_1_96_4x4_p_V_13_q0;
        reg_3185 <= buffer1_1_96_4x4_p_V_14_q0;
        reg_3189 <= buffer1_1_96_4x4_p_V_15_q0;
        reg_3193 <= buffer1_1_96_4x4_p_V_16_q0;
        reg_3197 <= buffer1_1_96_4x4_p_V_17_q0;
        reg_3201 <= buffer1_1_96_4x4_p_V_18_q0;
        reg_3205 <= buffer1_1_96_4x4_p_V_19_q0;
        reg_3209 <= buffer1_1_96_4x4_p_V_20_q0;
        reg_3213 <= buffer1_1_96_4x4_p_V_21_q0;
        reg_3217 <= buffer1_1_96_4x4_p_V_22_q0;
        reg_3221 <= buffer1_1_96_4x4_p_V_23_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_25_reg_6497 <= tmp_25_fu_4155_p2;
        tmp_45_10_reg_6552 <= tmp_45_10_fu_4298_p2;
        tmp_45_11_reg_6557 <= tmp_45_11_fu_4311_p2;
        tmp_45_12_reg_6562 <= tmp_45_12_fu_4324_p2;
        tmp_45_13_reg_6567 <= tmp_45_13_fu_4337_p2;
        tmp_45_14_reg_6572 <= tmp_45_14_fu_4350_p2;
        tmp_45_15_reg_6577 <= tmp_45_15_fu_4363_p2;
        tmp_45_16_reg_6582 <= tmp_45_16_fu_4376_p2;
        tmp_45_17_reg_6587 <= tmp_45_17_fu_4389_p2;
        tmp_45_18_reg_6592 <= tmp_45_18_fu_4402_p2;
        tmp_45_19_reg_6597 <= tmp_45_19_fu_4415_p2;
        tmp_45_1_reg_6502 <= tmp_45_1_fu_4168_p2;
        tmp_45_20_reg_6602 <= tmp_45_20_fu_4428_p2;
        tmp_45_21_reg_6607 <= tmp_45_21_fu_4441_p2;
        tmp_45_22_reg_6612 <= tmp_45_22_fu_4454_p2;
        tmp_45_2_reg_6507 <= tmp_45_2_fu_4181_p2;
        tmp_45_3_reg_6512 <= tmp_45_3_fu_4194_p2;
        tmp_45_4_reg_6517 <= tmp_45_4_fu_4207_p2;
        tmp_45_5_reg_6522 <= tmp_45_5_fu_4220_p2;
        tmp_45_6_reg_6527 <= tmp_45_6_fu_4233_p2;
        tmp_45_7_reg_6532 <= tmp_45_7_fu_4246_p2;
        tmp_45_8_reg_6537 <= tmp_45_8_fu_4259_p2;
        tmp_45_9_reg_6542 <= tmp_45_9_fu_4272_p2;
        tmp_45_s_reg_6547 <= tmp_45_s_fu_4285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_29_reg_7277 <= tmp_29_fu_5156_p2;
        tmp_51_10_reg_7332 <= tmp_51_10_fu_5299_p2;
        tmp_51_11_reg_7337 <= tmp_51_11_fu_5312_p2;
        tmp_51_12_reg_7342 <= tmp_51_12_fu_5325_p2;
        tmp_51_13_reg_7347 <= tmp_51_13_fu_5338_p2;
        tmp_51_14_reg_7352 <= tmp_51_14_fu_5351_p2;
        tmp_51_15_reg_7357 <= tmp_51_15_fu_5364_p2;
        tmp_51_16_reg_7362 <= tmp_51_16_fu_5377_p2;
        tmp_51_17_reg_7367 <= tmp_51_17_fu_5390_p2;
        tmp_51_18_reg_7372 <= tmp_51_18_fu_5403_p2;
        tmp_51_19_reg_7377 <= tmp_51_19_fu_5416_p2;
        tmp_51_1_reg_7282 <= tmp_51_1_fu_5169_p2;
        tmp_51_20_reg_7382 <= tmp_51_20_fu_5429_p2;
        tmp_51_21_reg_7387 <= tmp_51_21_fu_5442_p2;
        tmp_51_22_reg_7392 <= tmp_51_22_fu_5455_p2;
        tmp_51_2_reg_7287 <= tmp_51_2_fu_5182_p2;
        tmp_51_3_reg_7292 <= tmp_51_3_fu_5195_p2;
        tmp_51_4_reg_7297 <= tmp_51_4_fu_5208_p2;
        tmp_51_5_reg_7302 <= tmp_51_5_fu_5221_p2;
        tmp_51_6_reg_7307 <= tmp_51_6_fu_5234_p2;
        tmp_51_7_reg_7312 <= tmp_51_7_fu_5247_p2;
        tmp_51_8_reg_7317 <= tmp_51_8_fu_5260_p2;
        tmp_51_9_reg_7322 <= tmp_51_9_fu_5273_p2;
        tmp_51_s_reg_7327 <= tmp_51_s_fu_5286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter9_exitcond_flatten7_reg_5773 == 1'd0))) begin
        tmp_313_reg_5825 <= tmp_313_fu_3438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_7397))) begin
        tmp_342_reg_7447 <= tmp_342_fu_5670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter8_exitcond_flatten7_reg_5773 == 1'd0))) begin
        tmp_367_reg_5819 <= {{mul_fu_3336_p2[15:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_7397))) begin
        tmp_396_reg_7425 <= {{mul3_fu_5522_p2[15:12]}};
        w10_mid2_reg_7431 <= w10_mid2_fu_5566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_reg_5773 == 1'd0))) begin
        w_mid2_reg_5803 <= w_mid2_fu_3311_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten7_fu_3225_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_5461_p2)) begin
        ap_condition_pp1_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state51))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3) & (1'b0 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_enable_reg_pp1_iter6) & (1'b0 == ap_enable_reg_pp1_iter7) & (1'b0 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_enable_reg_pp1_iter9) & (1'b0 == ap_enable_reg_pp1_iter10) & (1'b0 == ap_enable_reg_pp1_iter11))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_10_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_10_address0 = buffer1_1_96_4x4_p_V_186_reg_6746;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_10_address0 = buffer1_1_96_4x4_p_V_185_reg_6741;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_10_address0 = buffer1_1_96_4x4_p_V_90_reg_5966;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_10_address0 = buffer1_1_96_4x4_p_V_89_reg_5961;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_10_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_10_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_10_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_10_d0 = tmp_51_s_reg_7327;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_10_d0 = tmp_49_s_fu_4947_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_10_d0 = tmp_45_s_reg_6547;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_10_d0 = tmp_43_s_fu_3946_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_10_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd10)))) begin
        buffer1_1_96_4x4_p_V_10_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd10))) begin
        buffer1_1_96_4x4_p_V_10_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_11_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_11_address0 = buffer1_1_96_4x4_p_V_178_reg_6706;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_11_address0 = buffer1_1_96_4x4_p_V_177_reg_6701;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_11_address0 = buffer1_1_96_4x4_p_V_82_reg_5926;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_11_address0 = buffer1_1_96_4x4_p_V_81_reg_5921;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_11_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_11_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_11_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_11_d0 = tmp_51_10_reg_7332;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_11_d0 = tmp_49_10_fu_4962_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_11_d0 = tmp_45_10_reg_6552;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_11_d0 = tmp_43_10_fu_3961_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_11_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd11)))) begin
        buffer1_1_96_4x4_p_V_11_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd11))) begin
        buffer1_1_96_4x4_p_V_11_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_12_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_12_address0 = buffer1_1_96_4x4_p_V_182_reg_6726;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_12_address0 = buffer1_1_96_4x4_p_V_181_reg_6721;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_12_address0 = buffer1_1_96_4x4_p_V_86_reg_5946;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_12_address0 = buffer1_1_96_4x4_p_V_85_reg_5941;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_12_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_12_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_12_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_12_d0 = tmp_51_11_reg_7337;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_12_d0 = tmp_49_11_fu_4977_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_12_d0 = tmp_45_11_reg_6557;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_12_d0 = tmp_43_11_fu_3976_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_12_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd12)))) begin
        buffer1_1_96_4x4_p_V_12_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd12))) begin
        buffer1_1_96_4x4_p_V_12_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_13_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_13_address0 = buffer1_1_96_4x4_p_V_198_reg_6806;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_13_address0 = buffer1_1_96_4x4_p_V_197_reg_6801;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_13_address0 = buffer1_1_96_4x4_p_V_102_reg_6026;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_13_address0 = buffer1_1_96_4x4_p_V_101_reg_6021;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_13_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_13_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_13_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_13_d0 = tmp_51_12_reg_7342;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_13_d0 = tmp_49_12_fu_4992_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_13_d0 = tmp_45_12_reg_6562;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_13_d0 = tmp_43_12_fu_3991_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_13_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd13)))) begin
        buffer1_1_96_4x4_p_V_13_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd13))) begin
        buffer1_1_96_4x4_p_V_13_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_14_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_14_address0 = buffer1_1_96_4x4_p_V_170_reg_6666;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_14_address0 = buffer1_1_96_4x4_p_V_169_reg_6661;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_14_address0 = buffer1_1_96_4x4_p_V_74_reg_5886;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_14_address0 = buffer1_1_96_4x4_p_V_73_reg_5881;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_14_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_14_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_14_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_14_d0 = tmp_51_13_reg_7347;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_14_d0 = tmp_49_13_fu_5007_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_14_d0 = tmp_45_13_reg_6567;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_14_d0 = tmp_43_13_fu_4006_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_14_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd14)))) begin
        buffer1_1_96_4x4_p_V_14_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd14))) begin
        buffer1_1_96_4x4_p_V_14_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_15_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_15_address0 = buffer1_1_96_4x4_p_V_168_reg_6656;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_15_address0 = buffer1_1_96_4x4_p_V_167_reg_6651;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_15_address0 = buffer1_1_96_4x4_p_V_72_reg_5876;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_15_address0 = buffer1_1_96_4x4_p_V_71_reg_5871;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_15_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_15_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_15_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_15_d0 = tmp_51_14_reg_7352;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_15_d0 = tmp_49_14_fu_5022_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_15_d0 = tmp_45_14_reg_6572;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_15_d0 = tmp_43_14_fu_4021_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_15_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd15)))) begin
        buffer1_1_96_4x4_p_V_15_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd15))) begin
        buffer1_1_96_4x4_p_V_15_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_16_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_16_address0 = buffer1_1_96_4x4_p_V_184_reg_6736;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_16_address0 = buffer1_1_96_4x4_p_V_183_reg_6731;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_16_address0 = buffer1_1_96_4x4_p_V_88_reg_5956;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_16_address0 = buffer1_1_96_4x4_p_V_87_reg_5951;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_16_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_16_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_16_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_16_d0 = tmp_51_15_reg_7357;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_16_d0 = tmp_49_15_fu_5037_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_16_d0 = tmp_45_15_reg_6577;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_16_d0 = tmp_43_15_fu_4036_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_16_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd16)))) begin
        buffer1_1_96_4x4_p_V_16_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd16))) begin
        buffer1_1_96_4x4_p_V_16_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_17_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_17_address0 = buffer1_1_96_4x4_p_V_172_reg_6676;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_17_address0 = buffer1_1_96_4x4_p_V_171_reg_6671;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_17_address0 = buffer1_1_96_4x4_p_V_76_reg_5896;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_17_address0 = buffer1_1_96_4x4_p_V_75_reg_5891;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_17_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_17_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_17_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_17_d0 = tmp_51_16_reg_7362;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_17_d0 = tmp_49_16_fu_5052_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_17_d0 = tmp_45_16_reg_6582;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_17_d0 = tmp_43_16_fu_4051_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_17_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd17)))) begin
        buffer1_1_96_4x4_p_V_17_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd17))) begin
        buffer1_1_96_4x4_p_V_17_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_18_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_18_address0 = buffer1_1_96_4x4_p_V_174_reg_6686;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_18_address0 = buffer1_1_96_4x4_p_V_173_reg_6681;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_18_address0 = buffer1_1_96_4x4_p_V_78_reg_5906;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_18_address0 = buffer1_1_96_4x4_p_V_77_reg_5901;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_18_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_18_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_18_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_18_d0 = tmp_51_17_reg_7367;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_18_d0 = tmp_49_17_fu_5067_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_18_d0 = tmp_45_17_reg_6587;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_18_d0 = tmp_43_17_fu_4066_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_18_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd18)))) begin
        buffer1_1_96_4x4_p_V_18_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd18))) begin
        buffer1_1_96_4x4_p_V_18_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_19_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_19_address0 = buffer1_1_96_4x4_p_V_196_reg_6796;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_19_address0 = buffer1_1_96_4x4_p_V_195_reg_6791;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_19_address0 = buffer1_1_96_4x4_p_V_100_reg_6016;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_19_address0 = buffer1_1_96_4x4_p_V_99_reg_6011;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_19_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_19_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_19_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_19_d0 = tmp_51_18_reg_7372;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_19_d0 = tmp_49_18_fu_5082_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_19_d0 = tmp_45_18_reg_6592;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_19_d0 = tmp_43_18_fu_4081_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_19_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd19)))) begin
        buffer1_1_96_4x4_p_V_19_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd19))) begin
        buffer1_1_96_4x4_p_V_19_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_176_reg_6696;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_175_reg_6691;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_80_reg_5916;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_79_reg_5911;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_1_d0 = tmp_51_1_reg_7282;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_1_d0 = tmp_49_1_fu_4812_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_1_d0 = tmp_45_1_reg_6502;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_1_d0 = tmp_43_1_fu_3811_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd1)))) begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd1))) begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_20_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_20_address0 = buffer1_1_96_4x4_p_V_208_reg_6856;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_20_address0 = buffer1_1_96_4x4_p_V_207_reg_6851;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_20_address0 = buffer1_1_96_4x4_p_V_112_reg_6076;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_20_address0 = buffer1_1_96_4x4_p_V_111_reg_6071;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_20_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_20_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_20_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_20_d0 = tmp_51_19_reg_7377;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_20_d0 = tmp_49_19_fu_5097_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_20_d0 = tmp_45_19_reg_6597;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_20_d0 = tmp_43_19_fu_4096_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_20_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd20)))) begin
        buffer1_1_96_4x4_p_V_20_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd20))) begin
        buffer1_1_96_4x4_p_V_20_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_21_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_21_address0 = buffer1_1_96_4x4_p_V_210_reg_6866;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_21_address0 = buffer1_1_96_4x4_p_V_209_reg_6861;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_21_address0 = buffer1_1_96_4x4_p_V_114_reg_6086;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_21_address0 = buffer1_1_96_4x4_p_V_113_reg_6081;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_21_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_21_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_21_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_21_d0 = tmp_51_20_reg_7382;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_21_d0 = tmp_49_20_fu_5112_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_21_d0 = tmp_45_20_reg_6602;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_21_d0 = tmp_43_20_fu_4111_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_21_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd21)))) begin
        buffer1_1_96_4x4_p_V_21_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd21))) begin
        buffer1_1_96_4x4_p_V_21_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_22_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_22_address0 = buffer1_1_96_4x4_p_V_202_reg_6826;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_22_address0 = buffer1_1_96_4x4_p_V_201_reg_6821;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_22_address0 = buffer1_1_96_4x4_p_V_106_reg_6046;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_22_address0 = buffer1_1_96_4x4_p_V_105_reg_6041;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_22_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_22_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_22_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_22_d0 = tmp_51_21_reg_7387;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_22_d0 = tmp_49_21_fu_5127_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_22_d0 = tmp_45_21_reg_6607;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_22_d0 = tmp_43_21_fu_4126_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_22_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd22)))) begin
        buffer1_1_96_4x4_p_V_22_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (6'd22 == tmp_389_fu_5707_p1))) begin
        buffer1_1_96_4x4_p_V_22_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_23_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_23_address0 = buffer1_1_96_4x4_p_V_212_reg_6876;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_23_address0 = buffer1_1_96_4x4_p_V_211_reg_6871;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_23_address0 = buffer1_1_96_4x4_p_V_116_reg_6096;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_23_address0 = buffer1_1_96_4x4_p_V_115_reg_6091;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_23_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_23_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_23_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_23_d0 = tmp_51_22_reg_7392;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_23_d0 = tmp_49_22_fu_5142_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_23_d0 = tmp_45_22_reg_6612;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_23_d0 = tmp_43_22_fu_4141_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_23_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & ~(6'd0 == tmp_366_fu_3444_p1) & ~(tmp_366_fu_3444_p1 == 6'd1) & ~(tmp_366_fu_3444_p1 == 6'd2) & ~(tmp_366_fu_3444_p1 == 6'd3) & ~(tmp_366_fu_3444_p1 == 6'd4) & ~(tmp_366_fu_3444_p1 == 6'd5) & ~(tmp_366_fu_3444_p1 == 6'd6) & ~(tmp_366_fu_3444_p1 == 6'd7) & ~(tmp_366_fu_3444_p1 == 6'd8) & ~(tmp_366_fu_3444_p1 == 6'd9) & ~(tmp_366_fu_3444_p1 == 6'd10) & ~(tmp_366_fu_3444_p1 == 6'd11) & ~(tmp_366_fu_3444_p1 == 6'd12) & ~(tmp_366_fu_3444_p1 == 6'd13) & ~(tmp_366_fu_3444_p1 == 6'd14) & ~(tmp_366_fu_3444_p1 == 6'd15) & ~(tmp_366_fu_3444_p1 == 6'd16) & ~(tmp_366_fu_3444_p1 == 6'd17) & ~(tmp_366_fu_3444_p1 == 6'd18) & ~(tmp_366_fu_3444_p1 == 6'd19) & ~(tmp_366_fu_3444_p1 == 6'd20) & ~(tmp_366_fu_3444_p1 == 6'd21) & ~(tmp_366_fu_3444_p1 == 6'd22)))) begin
        buffer1_1_96_4x4_p_V_23_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & ~(6'd0 == tmp_389_fu_5707_p1) & ~(tmp_389_fu_5707_p1 == 6'd1) & ~(tmp_389_fu_5707_p1 == 6'd2) & ~(tmp_389_fu_5707_p1 == 6'd3) & ~(tmp_389_fu_5707_p1 == 6'd4) & ~(tmp_389_fu_5707_p1 == 6'd5) & ~(tmp_389_fu_5707_p1 == 6'd6) & ~(tmp_389_fu_5707_p1 == 6'd7) & ~(tmp_389_fu_5707_p1 == 6'd8) & ~(tmp_389_fu_5707_p1 == 6'd9) & ~(tmp_389_fu_5707_p1 == 6'd10) & ~(tmp_389_fu_5707_p1 == 6'd11) & ~(tmp_389_fu_5707_p1 == 6'd12) & ~(tmp_389_fu_5707_p1 == 6'd13) & ~(tmp_389_fu_5707_p1 == 6'd14) & ~(tmp_389_fu_5707_p1 == 6'd15) & ~(tmp_389_fu_5707_p1 == 6'd16) & ~(tmp_389_fu_5707_p1 == 6'd17) & ~(tmp_389_fu_5707_p1 == 6'd18) & ~(tmp_389_fu_5707_p1 == 6'd19) & ~(tmp_389_fu_5707_p1 == 6'd20) & ~(tmp_389_fu_5707_p1 == 6'd21) & ~(6'd22 == tmp_389_fu_5707_p1))) begin
        buffer1_1_96_4x4_p_V_23_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_24_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_24_address0 = buffer1_1_96_4x4_p_V_180_reg_6716;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_24_address0 = buffer1_1_96_4x4_p_V_179_reg_6711;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_24_address0 = buffer1_1_96_4x4_p_V_84_reg_5936;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_24_address0 = buffer1_1_96_4x4_p_V_83_reg_5931;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_24_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_24_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_24_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_24_d0 = tmp_29_reg_7277;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_24_d0 = tmp_27_fu_4797_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_24_d0 = tmp_25_reg_6497;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_24_d0 = tmp_23_fu_3796_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_24_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (6'd0 == tmp_366_fu_3444_p1)))) begin
        buffer1_1_96_4x4_p_V_24_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (6'd0 == tmp_389_fu_5707_p1))) begin
        buffer1_1_96_4x4_p_V_24_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_194_reg_6786;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_193_reg_6781;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_98_reg_6006;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_97_reg_6001;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_2_d0 = tmp_51_2_reg_7287;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_2_d0 = tmp_49_2_fu_4827_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_2_d0 = tmp_45_2_reg_6507;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_2_d0 = tmp_43_2_fu_3826_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd2)))) begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd2))) begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_200_reg_6816;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_199_reg_6811;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_104_reg_6036;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_103_reg_6031;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_3_d0 = tmp_51_3_reg_7292;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_3_d0 = tmp_49_3_fu_4842_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_3_d0 = tmp_45_3_reg_6512;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_3_d0 = tmp_43_3_fu_3841_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd3)))) begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd3))) begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_190_reg_6766;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_189_reg_6761;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_94_reg_5986;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_93_reg_5981;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_4_d0 = tmp_51_4_reg_7297;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_4_d0 = tmp_49_4_fu_4857_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_4_d0 = tmp_45_4_reg_6517;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_4_d0 = tmp_43_4_fu_3856_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd4)))) begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd4))) begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_188_reg_6756;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_187_reg_6751;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_92_reg_5976;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_91_reg_5971;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_5_d0 = tmp_51_5_reg_7302;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_5_d0 = tmp_49_5_fu_4872_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_5_d0 = tmp_45_5_reg_6522;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_5_d0 = tmp_43_5_fu_3871_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd5)))) begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd5))) begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_204_reg_6836;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_203_reg_6831;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_108_reg_6056;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_107_reg_6051;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_6_d0 = tmp_51_6_reg_7307;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_6_d0 = tmp_49_6_fu_4887_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_6_d0 = tmp_45_6_reg_6527;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_6_d0 = tmp_43_6_fu_3886_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd6)))) begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd6))) begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_206_reg_6846;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_205_reg_6841;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_110_reg_6066;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_109_reg_6061;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_7_d0 = tmp_51_7_reg_7312;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_7_d0 = tmp_49_7_fu_4902_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_7_d0 = tmp_45_7_reg_6532;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_7_d0 = tmp_43_7_fu_3901_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd7)))) begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd7))) begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_214_reg_6886;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_213_reg_6881;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_118_reg_6106;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_117_reg_6101;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_8_d0 = tmp_51_8_reg_7317;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_8_d0 = tmp_49_8_fu_4917_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_8_d0 = tmp_45_8_reg_6537;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_8_d0 = tmp_43_8_fu_3916_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd8)))) begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd8))) begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        buffer1_1_96_4x4_p_V_9_address0 = tmp_383_cast_fu_5676_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
        buffer1_1_96_4x4_p_V_9_address0 = buffer1_1_96_4x4_p_V_192_reg_6776;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33))) begin
        buffer1_1_96_4x4_p_V_9_address0 = buffer1_1_96_4x4_p_V_191_reg_6771;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        buffer1_1_96_4x4_p_V_9_address0 = buffer1_1_96_4x4_p_V_96_reg_5996;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        buffer1_1_96_4x4_p_V_9_address0 = buffer1_1_96_4x4_p_V_95_reg_5991;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_9_address0 = tmp_348_cast_fu_3448_p1;
    end else begin
        buffer1_1_96_4x4_p_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11)) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state36) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10)))) begin
        buffer1_1_96_4x4_p_V_9_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11))) begin
        buffer1_1_96_4x4_p_V_9_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buffer1_1_96_4x4_p_V_9_d0 = tmp_51_9_reg_7322;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buffer1_1_96_4x4_p_V_9_d0 = tmp_49_9_fu_4932_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buffer1_1_96_4x4_p_V_9_d0 = tmp_45_9_reg_6542;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_9_d0 = tmp_43_9_fu_3931_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        buffer1_1_96_4x4_p_V_9_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (tmp_366_fu_3444_p1 == 6'd9)))) begin
        buffer1_1_96_4x4_p_V_9_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (1'd1 == tmp_401_fu_5765_p3) & (tmp_389_fu_5707_p1 == 6'd9))) begin
        buffer1_1_96_4x4_p_V_9_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten9_reg_7397) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co8_phi_fu_2603_p4 = arrayNo_cast3_mid2_v_2_reg_7413;
    end else begin
        co8_phi_fu_2603_p4 = co8_reg_2599;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_2475_p4 = co_cast_mid2_v_reg_5795;
    end else begin
        co_phi_fu_2475_p4 = co_reg_2471;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2645_a_V = reg_2819;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2645_a_V = reg_2813;
    end else begin
        grp_MUL_DP_fu_2645_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2645_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2645_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2645_b_V = reg_2813;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2645_b_V = reg_2819;
    end else begin
        grp_MUL_DP_fu_2645_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2652_a_V = reg_2831;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2652_a_V = reg_2825;
    end else begin
        grp_MUL_DP_fu_2652_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2652_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2652_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2652_b_V = reg_2825;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2652_b_V = reg_2831;
    end else begin
        grp_MUL_DP_fu_2652_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2659_a_V = reg_2843;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2659_a_V = reg_2837;
    end else begin
        grp_MUL_DP_fu_2659_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2659_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2659_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2659_b_V = reg_2837;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2659_b_V = reg_2843;
    end else begin
        grp_MUL_DP_fu_2659_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2666_a_V = reg_2855;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2666_a_V = reg_2849;
    end else begin
        grp_MUL_DP_fu_2666_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2666_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2666_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2666_b_V = reg_2849;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2666_b_V = reg_2855;
    end else begin
        grp_MUL_DP_fu_2666_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2673_a_V = reg_2867;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2673_a_V = reg_2861;
    end else begin
        grp_MUL_DP_fu_2673_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2673_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2673_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2673_b_V = reg_2861;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2673_b_V = reg_2867;
    end else begin
        grp_MUL_DP_fu_2673_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2680_a_V = reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2680_a_V = reg_2873;
    end else begin
        grp_MUL_DP_fu_2680_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2680_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2680_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2680_b_V = reg_2873;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2680_b_V = reg_2879;
    end else begin
        grp_MUL_DP_fu_2680_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2687_a_V = reg_2891;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2687_a_V = reg_2885;
    end else begin
        grp_MUL_DP_fu_2687_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2687_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2687_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2687_b_V = reg_2885;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2687_b_V = reg_2891;
    end else begin
        grp_MUL_DP_fu_2687_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2694_a_V = reg_2903;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2694_a_V = reg_2897;
    end else begin
        grp_MUL_DP_fu_2694_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2694_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2694_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2694_b_V = reg_2897;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2694_b_V = reg_2903;
    end else begin
        grp_MUL_DP_fu_2694_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2701_a_V = reg_2915;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2701_a_V = reg_2909;
    end else begin
        grp_MUL_DP_fu_2701_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2701_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2701_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2701_b_V = reg_2909;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2701_b_V = reg_2915;
    end else begin
        grp_MUL_DP_fu_2701_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2708_a_V = reg_2927;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2708_a_V = reg_2921;
    end else begin
        grp_MUL_DP_fu_2708_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2708_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2708_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2708_b_V = reg_2921;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2708_b_V = reg_2927;
    end else begin
        grp_MUL_DP_fu_2708_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2715_a_V = reg_2939;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2715_a_V = reg_2933;
    end else begin
        grp_MUL_DP_fu_2715_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2715_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2715_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2715_b_V = reg_2933;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2715_b_V = reg_2939;
    end else begin
        grp_MUL_DP_fu_2715_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2722_a_V = reg_2951;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2722_a_V = reg_2945;
    end else begin
        grp_MUL_DP_fu_2722_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2722_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2722_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2722_b_V = reg_2945;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2722_b_V = reg_2951;
    end else begin
        grp_MUL_DP_fu_2722_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2729_a_V = reg_2963;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2729_a_V = reg_2957;
    end else begin
        grp_MUL_DP_fu_2729_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2729_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2729_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2729_b_V = reg_2957;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2729_b_V = reg_2963;
    end else begin
        grp_MUL_DP_fu_2729_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2736_a_V = reg_2975;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2736_a_V = reg_2969;
    end else begin
        grp_MUL_DP_fu_2736_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2736_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2736_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2736_b_V = reg_2969;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2736_b_V = reg_2975;
    end else begin
        grp_MUL_DP_fu_2736_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2743_a_V = reg_2987;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2743_a_V = reg_2981;
    end else begin
        grp_MUL_DP_fu_2743_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2743_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2743_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2743_b_V = reg_2981;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2743_b_V = reg_2987;
    end else begin
        grp_MUL_DP_fu_2743_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2750_a_V = reg_2999;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2750_a_V = reg_2993;
    end else begin
        grp_MUL_DP_fu_2750_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2750_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2750_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2750_b_V = reg_2993;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2750_b_V = reg_2999;
    end else begin
        grp_MUL_DP_fu_2750_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2757_a_V = reg_3011;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2757_a_V = reg_3005;
    end else begin
        grp_MUL_DP_fu_2757_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2757_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2757_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2757_b_V = reg_3005;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2757_b_V = reg_3011;
    end else begin
        grp_MUL_DP_fu_2757_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2764_a_V = reg_3023;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2764_a_V = reg_3017;
    end else begin
        grp_MUL_DP_fu_2764_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2764_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2764_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2764_b_V = reg_3017;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2764_b_V = reg_3023;
    end else begin
        grp_MUL_DP_fu_2764_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2771_a_V = reg_3035;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2771_a_V = reg_3029;
    end else begin
        grp_MUL_DP_fu_2771_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2771_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2771_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2771_b_V = reg_3029;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2771_b_V = reg_3035;
    end else begin
        grp_MUL_DP_fu_2771_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2778_a_V = reg_3047;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2778_a_V = reg_3041;
    end else begin
        grp_MUL_DP_fu_2778_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2778_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2778_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2778_b_V = reg_3041;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2778_b_V = reg_3047;
    end else begin
        grp_MUL_DP_fu_2778_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2785_a_V = reg_3059;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2785_a_V = reg_3053;
    end else begin
        grp_MUL_DP_fu_2785_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2785_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2785_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2785_b_V = reg_3053;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2785_b_V = reg_3059;
    end else begin
        grp_MUL_DP_fu_2785_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2792_a_V = reg_3071;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2792_a_V = reg_3065;
    end else begin
        grp_MUL_DP_fu_2792_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2792_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2792_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2792_b_V = reg_3065;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2792_b_V = reg_3071;
    end else begin
        grp_MUL_DP_fu_2792_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2799_a_V = reg_3083;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2799_a_V = reg_3077;
    end else begin
        grp_MUL_DP_fu_2799_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2799_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2799_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2799_b_V = reg_3077;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2799_b_V = reg_3083;
    end else begin
        grp_MUL_DP_fu_2799_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2806_a_V = reg_3095;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2806_a_V = reg_3089;
    end else begin
        grp_MUL_DP_fu_2806_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_MUL_DP_fu_2806_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2806_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_MUL_DP_fu_2806_b_V = reg_3089;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2806_b_V = reg_3095;
    end else begin
        grp_MUL_DP_fu_2806_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_7397) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h9_phi_fu_2625_p4 = h9_cast2_mid2_reg_7436;
    end else begin
        h9_phi_fu_2625_p4 = h9_reg_2621;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_2498_p4 = h_cast_mid2_reg_5808;
    end else begin
        h_phi_fu_2498_p4 = h_reg_2494;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        input_V_address0 = input_V_addr_4_reg_6899;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_address0 = input_V_addr_reg_6119;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_7397) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w10_phi_fu_2637_p4 = w_21_reg_7442;
    end else begin
        w10_phi_fu_2637_p4 = w10_reg_2633;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_5773 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_2510_p4 = w_18_reg_5814;
    end else begin
        w_phi_fu_2510_p4 = w_reg_2506;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_0_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_0_V_address1 = weight_0_V_addr_6_reg_6904;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_0_V_ce1 = 1'b1;
    end else begin
        weight_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_10_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_10_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_10_V_address1 = weight_10_V_addr_6_reg_7004;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_10_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_10_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_10_V_ce1 = 1'b1;
    end else begin
        weight_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_11_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_11_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_11_V_address1 = weight_11_V_addr_6_reg_7014;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_11_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_11_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_11_V_ce1 = 1'b1;
    end else begin
        weight_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_12_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_12_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_12_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_12_V_address1 = weight_12_V_addr_6_reg_7024;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_12_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_12_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_12_V_ce1 = 1'b1;
    end else begin
        weight_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_13_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_13_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_13_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_13_V_address1 = weight_13_V_addr_6_reg_7034;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_13_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_13_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_13_V_ce1 = 1'b1;
    end else begin
        weight_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_14_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_14_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_14_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_14_V_address1 = weight_14_V_addr_6_reg_7044;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_14_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_14_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_14_V_ce1 = 1'b1;
    end else begin
        weight_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_15_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_15_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_15_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_15_V_address1 = weight_15_V_addr_6_reg_7054;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_15_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_15_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_15_V_ce1 = 1'b1;
    end else begin
        weight_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_16_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_16_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_16_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_16_V_address1 = weight_16_V_addr_6_reg_7064;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_16_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_16_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_16_V_ce1 = 1'b1;
    end else begin
        weight_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_17_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_17_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_17_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_17_V_address1 = weight_17_V_addr_6_reg_7074;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_17_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_17_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_17_V_ce1 = 1'b1;
    end else begin
        weight_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_18_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_18_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_18_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_18_V_address1 = weight_18_V_addr_6_reg_7084;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_18_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_18_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_18_V_ce1 = 1'b1;
    end else begin
        weight_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_19_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_19_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_19_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_19_V_address1 = weight_19_V_addr_6_reg_7094;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_19_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_19_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_19_V_ce1 = 1'b1;
    end else begin
        weight_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_1_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_1_V_address1 = weight_1_V_addr_6_reg_6914;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_1_V_ce1 = 1'b1;
    end else begin
        weight_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_20_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_20_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_20_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_20_V_address1 = weight_20_V_addr_6_reg_7104;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_20_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_20_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_20_V_ce1 = 1'b1;
    end else begin
        weight_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_21_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_21_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_21_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_21_V_address1 = weight_21_V_addr_6_reg_7114;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_21_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_21_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_21_V_ce1 = 1'b1;
    end else begin
        weight_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_22_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_22_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_22_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_22_V_address1 = weight_22_V_addr_6_reg_7124;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_22_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_22_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_22_V_ce1 = 1'b1;
    end else begin
        weight_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_23_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_23_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_23_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_23_V_address1 = weight_23_V_addr_6_reg_7134;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_23_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_23_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_23_V_ce1 = 1'b1;
    end else begin
        weight_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_2_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_2_V_address1 = weight_2_V_addr_6_reg_6924;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_2_V_ce1 = 1'b1;
    end else begin
        weight_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_3_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_3_V_address1 = weight_3_V_addr_6_reg_6934;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_3_V_ce1 = 1'b1;
    end else begin
        weight_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_4_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_4_V_address1 = weight_4_V_addr_6_reg_6944;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_4_V_ce1 = 1'b1;
    end else begin
        weight_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_5_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_5_V_address1 = weight_5_V_addr_6_reg_6954;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_5_V_ce1 = 1'b1;
    end else begin
        weight_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_6_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_6_V_address1 = weight_6_V_addr_6_reg_6964;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_6_V_ce1 = 1'b1;
    end else begin
        weight_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_7_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_7_V_address1 = weight_7_V_addr_6_reg_6974;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_7_V_ce1 = 1'b1;
    end else begin
        weight_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_8_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_8_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_8_V_address1 = weight_8_V_addr_6_reg_6984;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_8_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_8_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_8_V_ce1 = 1'b1;
    end else begin
        weight_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_9_V_address0 = tmp_395_cast_fu_4743_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_9_V_address0 = tmp_371_cast_fu_3708_p1;
    end else begin
        weight_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_9_V_address1 = weight_9_V_addr_6_reg_6994;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_9_V_address1 = tmp_372_cast_fu_3742_p1;
    end else begin
        weight_9_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29))) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        weight_9_V_ce1 = 1'b1;
    end else begin
        weight_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (ap_enable_reg_pp0_iter10 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_3225_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (ap_enable_reg_pp0_iter10 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_3225_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond18_fu_3523_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond20_fu_3607_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond22_fu_3770_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond19_fu_4514_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond21_fu_4598_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond24_fu_4771_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (ap_enable_reg_pp1_iter10 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_5461_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter11) & (ap_enable_reg_pp1_iter10 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_5461_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd28];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_cast3_mid2_v_2_fu_5485_p3 = ((exitcond_flatten4_fu_5479_p2[0:0] === 1'b1) ? co_15_fu_5473_p2 : co8_phi_fu_2603_p4);

assign bias_V_address0 = co_cast_mid2_fu_3352_p1;

assign buffer1_1_96_4x4_p_V_10_address1 = buffer1_1_96_4x4_p_V_272_reg_7506;

assign buffer1_1_96_4x4_p_V_10_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_11_address1 = buffer1_1_96_4x4_p_V_268_reg_7482;

assign buffer1_1_96_4x4_p_V_11_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_12_address1 = buffer1_1_96_4x4_p_V_270_reg_7494;

assign buffer1_1_96_4x4_p_V_12_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_13_address1 = buffer1_1_96_4x4_p_V_278_reg_7542;

assign buffer1_1_96_4x4_p_V_13_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_14_address1 = buffer1_1_96_4x4_p_V_264_reg_7458;

assign buffer1_1_96_4x4_p_V_14_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_15_address1 = buffer1_1_96_4x4_p_V_263_reg_7452;

assign buffer1_1_96_4x4_p_V_15_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_16_address1 = buffer1_1_96_4x4_p_V_271_reg_7500;

assign buffer1_1_96_4x4_p_V_16_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_17_address1 = buffer1_1_96_4x4_p_V_265_reg_7464;

assign buffer1_1_96_4x4_p_V_17_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_18_address1 = buffer1_1_96_4x4_p_V_266_reg_7470;

assign buffer1_1_96_4x4_p_V_18_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_19_address1 = buffer1_1_96_4x4_p_V_277_reg_7536;

assign buffer1_1_96_4x4_p_V_19_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_1_address1 = buffer1_1_96_4x4_p_V_267_reg_7476;

assign buffer1_1_96_4x4_p_V_1_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_20_address1 = buffer1_1_96_4x4_p_V_283_reg_7572;

assign buffer1_1_96_4x4_p_V_20_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_21_address1 = buffer1_1_96_4x4_p_V_284_reg_7578;

assign buffer1_1_96_4x4_p_V_21_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_22_address1 = buffer1_1_96_4x4_p_V_280_reg_7554;

assign buffer1_1_96_4x4_p_V_22_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_23_address1 = buffer1_1_96_4x4_p_V_285_reg_7584;

assign buffer1_1_96_4x4_p_V_23_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_24_address1 = buffer1_1_96_4x4_p_V_269_reg_7488;

assign buffer1_1_96_4x4_p_V_24_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_2_address1 = buffer1_1_96_4x4_p_V_276_reg_7530;

assign buffer1_1_96_4x4_p_V_2_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_3_address1 = buffer1_1_96_4x4_p_V_279_reg_7548;

assign buffer1_1_96_4x4_p_V_3_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_4_address1 = buffer1_1_96_4x4_p_V_274_reg_7518;

assign buffer1_1_96_4x4_p_V_4_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_5_address1 = buffer1_1_96_4x4_p_V_273_reg_7512;

assign buffer1_1_96_4x4_p_V_5_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_6_address1 = buffer1_1_96_4x4_p_V_281_reg_7560;

assign buffer1_1_96_4x4_p_V_6_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_7_address1 = buffer1_1_96_4x4_p_V_282_reg_7566;

assign buffer1_1_96_4x4_p_V_7_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_8_address1 = buffer1_1_96_4x4_p_V_286_reg_7590;

assign buffer1_1_96_4x4_p_V_8_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_9_address1 = buffer1_1_96_4x4_p_V_275_reg_7524;

assign buffer1_1_96_4x4_p_V_9_d1 = 8'd0;

assign ci6_cast4_cast1_fu_4610_p1 = ci6_reg_2577;

assign ci6_cast4_cast_fu_4614_p1 = ci6_reg_2577;

assign ci_6_fu_3776_p2 = (7'd1 + ci_reg_2542);

assign ci_7_fu_4777_p2 = (7'd1 + ci6_reg_2577);

assign ci_cast7_cast_fu_3619_p1 = ci_reg_2542;

assign co_13_fu_3257_p2 = (7'd1 + co_phi_fu_2475_p4);

assign co_15_fu_5473_p2 = (7'd1 + co8_phi_fu_2603_p4);

assign co_cast_mid2_fu_3352_p1 = ap_reg_pp0_iter9_co_cast_mid2_v_reg_5795;

assign co_cast_mid2_v_fu_3270_p3 = ((exitcond_flatten_reg_5782[0:0] === 1'b1) ? co_13_fu_3257_p2 : co_phi_fu_2475_p4);

assign exitcond18_fu_3523_p2 = ((h1_reg_2518 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond19_fu_4514_p2 = ((h4_reg_2553 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond20_fu_3607_p2 = ((w2_reg_2530 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond21_fu_4598_p2 = ((w5_reg_2565 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond22_fu_3770_p2 = ((ci_reg_2542 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond23_fu_5543_p2 = ((w10_phi_fu_2637_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond24_fu_4771_p2 = ((ci6_reg_2577 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond31_mid_fu_3294_p2 = (exitcond_fu_3288_p2 & not_exitcond_flatten_fu_3283_p2);

assign exitcond_flatten4_fu_5479_p2 = ((indvar_flatten9_reg_2610 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_3225_p2 = ((indvar_flatten7_reg_2460 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_5461_p2 = ((indvar_flatten8_reg_2588 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_3237_p2 = ((indvar_flatten_reg_2483 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_fu_3288_p2 = ((w_phi_fu_2510_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_5549_p2 = (exitcond23_fu_5543_p2 & not_exitcond_flatten_6_fu_5538_p2);

assign grp_fu_3277_p0 = ((exitcond_flatten_reg_5782[0:0] === 1'b1) ? co_13_fu_3257_p2 : co_phi_fu_2475_p4);

assign grp_fu_3277_p1 = 7'd24;

assign grp_fu_5514_p1 = 7'd24;

assign h1_cast9_cast1_fu_3475_p1 = h1_reg_2518;

assign h1_cast9_cast_fu_3479_p1 = h1_reg_2518;

assign h4_cast6_cast1_fu_4460_p1 = h4_reg_2553;

assign h4_cast6_cast_fu_4464_p1 = h4_reg_2553;

assign h9_cast2_mid2_cast_fu_5628_p1 = h9_cast2_mid2_reg_7436;

assign h9_cast2_mid2_fu_5574_p3 = ((exitcond_mid_fu_5549_p2[0:0] === 1'b1) ? h_5_fu_5555_p2 : h9_mid_fu_5507_p3);

assign h9_mid_fu_5507_p3 = ((exitcond_flatten4_reg_7406[0:0] === 1'b1) ? 3'd1 : h9_phi_fu_2625_p4);

assign h_17_fu_3300_p2 = (3'd1 + h_mid_fu_3263_p3);

assign h_4_fu_3613_p2 = (h1_reg_2518 + 3'd1);

assign h_5_fu_5555_p2 = (3'd1 + h9_mid_fu_5507_p3);

assign h_6_fu_4604_p2 = (h4_reg_2553 + 3'd1);

assign h_cast_mid2_cast_fu_3396_p1 = ap_reg_pp0_iter9_h_cast_mid2_reg_5808;

assign h_cast_mid2_fu_3319_p3 = ((exitcond31_mid_fu_3294_p2[0:0] === 1'b1) ? h_17_fu_3300_p2 : h_mid_fu_3263_p3);

assign h_mid_fu_3263_p3 = ((exitcond_flatten_reg_5782[0:0] === 1'b1) ? 3'd1 : h_phi_fu_2498_p4);

assign indvar_flatten21_op_fu_5493_p2 = (indvar_flatten9_reg_2610 + 6'd1);

assign indvar_flatten_next7_fu_3231_p2 = (indvar_flatten7_reg_2460 + 11'd1);

assign indvar_flatten_next8_fu_5499_p3 = ((exitcond_flatten4_fu_5479_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten21_op_fu_5493_p2);

assign indvar_flatten_next9_fu_5467_p2 = (indvar_flatten8_reg_2588 + 11'd1);

assign indvar_flatten_next_fu_3249_p3 = ((exitcond_flatten_fu_3237_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_3243_p2);

assign indvar_flatten_op_fu_3243_p2 = (indvar_flatten_reg_2483 + 6'd1);

assign mul3_fu_5522_p1 = mul3_fu_5522_p10;

assign mul3_fu_5522_p10 = arrayNo_cast3_mid2_v_2_reg_7413;

assign mul3_fu_5522_p2 = (16'd171 * mul3_fu_5522_p1);

assign mul_fu_3336_p1 = mul_fu_3336_p10;

assign mul_fu_3336_p10 = ap_reg_pp0_iter8_co_cast_mid2_v_reg_5795;

assign mul_fu_3336_p2 = (16'd171 * mul_fu_3336_p1);

assign not_exitcond_flatten_6_fu_5538_p2 = (exitcond_flatten4_reg_7406 ^ 1'd1);

assign not_exitcond_flatten_fu_3283_p2 = (exitcond_flatten_reg_5782 ^ 1'd1);

assign p_shl10_cast_fu_4476_p1 = tmp_318_fu_4468_p3;

assign p_shl11_cast_fu_4488_p1 = tmp_319_fu_4480_p3;

assign p_shl12_cast_fu_4661_p3 = {{tmp_450_fu_4657_p1}, {3'd0}};

assign p_shl13_cast_fu_4669_p3 = {{tmp_346_fu_4652_p2}, {1'd0}};

assign p_shl14_cast_fu_4626_p1 = tmp_343_fu_4618_p3;

assign p_shl15_cast_fu_4638_p1 = tmp_344_fu_4630_p3;

assign p_shl16_cast_fu_5641_p3 = {{tmp_399_fu_5637_p1}, {3'd0}};

assign p_shl17_cast_fu_5653_p3 = {{tmp_400_fu_5649_p1}, {1'd0}};

assign p_shl18_cast_fu_5599_p1 = $unsigned(tmp_336_fu_5595_p1);

assign p_shl19_cast_fu_5614_p1 = $unsigned(tmp_337_fu_5610_p1);

assign p_shl1_cast_fu_3421_p3 = {{tmp_381_fu_3417_p1}, {1'd0}};

assign p_shl2_cast_fu_3367_p1 = $unsigned(tmp_s_fu_3363_p1);

assign p_shl3_cast_fu_3382_p1 = $unsigned(tmp_308_fu_3378_p1);

assign p_shl4_cast_fu_3491_p1 = tmp_314_fu_3483_p3;

assign p_shl5_cast_fu_3503_p1 = tmp_315_fu_3495_p3;

assign p_shl6_cast_fu_3666_p3 = {{tmp_388_fu_3662_p1}, {3'd0}};

assign p_shl7_cast_fu_3674_p3 = {{tmp_330_fu_3657_p2}, {1'd0}};

assign p_shl8_cast_fu_3631_p1 = tmp_327_fu_3623_p3;

assign p_shl9_cast_fu_3643_p1 = tmp_328_fu_3635_p3;

assign p_shl_cast_fu_3409_p3 = {{tmp_380_fu_3405_p1}, {3'd0}};

assign tmp_23_fu_3796_p2 = (reg_3129 + tmp_402_fu_3792_p1);

assign tmp_25_fu_4155_p2 = (buffer1_1_96_4x4_p_V_24_q0 + tmp_403_fu_4151_p1);

assign tmp_27_fu_4797_p2 = (reg_3129 + tmp_451_fu_4793_p1);

assign tmp_29_fu_5156_p2 = (buffer1_1_96_4x4_p_V_24_q0 + tmp_452_fu_5152_p1);

assign tmp_308_fu_3378_p1 = $signed(tmp_375_fu_3371_p3);

assign tmp_309_fu_3386_p2 = (p_shl2_cast_fu_3367_p1 - p_shl3_cast_fu_3382_p1);

assign tmp_30_fu_5711_p25 = grp_fu_5514_p2;

assign tmp_310_fu_3306_p2 = (exitcond31_mid_fu_3294_p2 | exitcond_flatten_reg_5782);

assign tmp_311_fu_3399_p2 = ($signed(h_cast_mid2_cast_fu_3396_p1) + $signed(tmp_342_cast_fu_3392_p1));

assign tmp_312_fu_3429_p2 = (p_shl_cast_fu_3409_p3 - p_shl1_cast_fu_3421_p3);

assign tmp_313_fu_3438_p2 = (w_cast_cast_fu_3435_p1 + tmp_312_fu_3429_p2);

assign tmp_314_fu_3483_p3 = {{h1_reg_2518}, {3'd0}};

assign tmp_315_fu_3495_p3 = {{h1_reg_2518}, {1'd0}};

assign tmp_316_fu_3507_p2 = (p_shl4_cast_fu_3491_p1 - p_shl5_cast_fu_3503_p1);

assign tmp_317_fu_3517_p2 = ($signed(tmp_351_cast_fu_3513_p1) + $signed(8'd72));

assign tmp_318_fu_4468_p3 = {{h4_reg_2553}, {3'd0}};

assign tmp_319_fu_4480_p3 = {{h4_reg_2553}, {1'd0}};

assign tmp_320_fu_4492_p2 = (p_shl10_cast_fu_4476_p1 - p_shl11_cast_fu_4488_p1);

assign tmp_321_fu_4502_p2 = (tmp_320_fu_4492_p2 + 7'd36);

assign tmp_322_fu_4508_p2 = ($signed(tmp_355_cast_fu_4498_p1) + $signed(8'd108));

assign tmp_323_fu_3541_p2 = ($signed(tmp_351_cast_reg_5848) + $signed(w2_cast8_cast_fu_3537_p1));

assign tmp_324_fu_3574_p2 = (tmp_317_reg_5853 + w2_cast8_cast_fu_3537_p1);

assign tmp_325_fu_4532_p2 = (tmp_321_reg_6627 + w5_cast5_cast_fu_4528_p1);

assign tmp_326_fu_4565_p2 = (tmp_322_reg_6632 + w5_cast5_cast2_fu_4524_p1);

assign tmp_327_fu_3623_p3 = {{ci_reg_2542}, {3'd0}};

assign tmp_328_fu_3635_p3 = {{ci_reg_2542}, {1'd0}};

assign tmp_329_fu_3647_p2 = (p_shl8_cast_fu_3631_p1 - p_shl9_cast_fu_3643_p1);

assign tmp_330_fu_3657_p2 = ($signed(h1_cast9_cast_reg_5843) + $signed(tmp_364_cast_fu_3653_p1));

assign tmp_331_fu_3682_p2 = (p_shl6_cast_fu_3666_p3 - p_shl7_cast_fu_3674_p3);

assign tmp_332_fu_3688_p2 = (w2_cast8_cast2_reg_5866 + tmp_331_fu_3682_p2);

assign tmp_333_fu_3698_p2 = (h1_cast9_cast1_reg_5838 + ci_reg_2542);

assign tmp_334_fu_3703_p2 = (w2_cast8_cast1_reg_5861 + tmp_333_fu_3698_p2);

assign tmp_335_fu_3736_p2 = (9'd192 + ci_cast7_cast_fu_3619_p1);

assign tmp_336_fu_5595_p1 = $signed(tmp_397_fu_5588_p3);

assign tmp_337_fu_5610_p1 = $signed(tmp_398_fu_5603_p3);

assign tmp_338_fu_5618_p2 = (p_shl18_cast_fu_5599_p1 - p_shl19_cast_fu_5614_p1);

assign tmp_339_fu_5561_p2 = (exitcond_mid_fu_5549_p2 | exitcond_flatten4_reg_7406);

assign tmp_340_fu_5631_p2 = ($signed(h9_cast2_mid2_cast_fu_5628_p1) + $signed(tmp_377_cast_fu_5624_p1));

assign tmp_341_fu_5661_p2 = (p_shl16_cast_fu_5641_p3 - p_shl17_cast_fu_5653_p3);

assign tmp_342_cast_fu_3392_p1 = $signed(tmp_309_fu_3386_p2);

assign tmp_342_fu_5670_p2 = (w10_cast1_cast_fu_5667_p1 + tmp_341_fu_5661_p2);

assign tmp_343_fu_4618_p3 = {{ci6_reg_2577}, {3'd0}};

assign tmp_344_fu_4630_p3 = {{ci6_reg_2577}, {1'd0}};

assign tmp_345_fu_4642_p2 = (p_shl14_cast_fu_4626_p1 - p_shl15_cast_fu_4638_p1);

assign tmp_346_fu_4652_p2 = ($signed(h4_cast6_cast_reg_6622) + $signed(tmp_386_cast_fu_4648_p1));

assign tmp_347_fu_4677_p2 = (p_shl12_cast_fu_4661_p3 - p_shl13_cast_fu_4669_p3);

assign tmp_348_cast_fu_3448_p1 = tmp_313_reg_5825;

assign tmp_348_fu_4683_p2 = (w5_cast5_cast1_reg_6641 + tmp_347_fu_4677_p2);

assign tmp_349_fu_4693_p2 = (8'd96 + ci6_cast4_cast_fu_4614_p1);

assign tmp_350_fu_4699_p2 = (h4_cast6_cast1_reg_6617 + tmp_349_fu_4693_p2);

assign tmp_351_cast_fu_3513_p1 = $signed(tmp_316_fu_3507_p2);

assign tmp_351_fu_4704_p2 = (w5_cast5_cast2_reg_6646 + tmp_350_fu_4699_p2);

assign tmp_352_fu_4737_p2 = ($signed(9'd288) + $signed(ci6_cast4_cast1_fu_4610_p1));

assign tmp_355_cast_fu_4498_p1 = $signed(tmp_320_fu_4492_p2);

assign tmp_358_cast_fu_3546_p1 = $signed(tmp_323_fu_3541_p2);

assign tmp_359_cast_fu_3579_p1 = tmp_324_fu_3574_p2;

assign tmp_360_cast_fu_4537_p1 = tmp_325_fu_4532_p2;

assign tmp_361_cast_fu_4570_p1 = tmp_326_fu_4565_p2;

assign tmp_364_cast_fu_3653_p1 = $signed(tmp_329_fu_3647_p2);

assign tmp_366_fu_3444_p1 = grp_fu_3277_p2[5:0];

assign tmp_369_cast_fu_3693_p1 = tmp_332_fu_3688_p2;

assign tmp_371_cast_fu_3708_p1 = tmp_334_fu_3703_p2;

assign tmp_372_cast_fu_3742_p1 = tmp_335_fu_3736_p2;

assign tmp_373_fu_3356_p3 = {{tmp_367_reg_5819}, {3'd0}};

assign tmp_375_fu_3371_p3 = {{tmp_367_reg_5819}, {1'd0}};

assign tmp_377_cast_fu_5624_p1 = $signed(tmp_338_fu_5618_p2);

assign tmp_380_fu_3405_p1 = tmp_311_fu_3399_p2[5:0];

assign tmp_381_fu_3417_p1 = tmp_311_fu_3399_p2[7:0];

assign tmp_383_cast_fu_5676_p1 = ap_reg_pp1_iter9_tmp_342_reg_7447;

assign tmp_386_cast_fu_4648_p1 = $signed(tmp_345_fu_4642_p2);

assign tmp_388_fu_3662_p1 = tmp_330_fu_3657_p2[9:0];

assign tmp_389_fu_5707_p1 = grp_fu_5514_p2[5:0];

assign tmp_391_cast_fu_4688_p1 = tmp_348_fu_4683_p2;

assign tmp_394_cast_fu_4709_p1 = tmp_351_fu_4704_p2;

assign tmp_395_cast_fu_4743_p1 = tmp_352_fu_4737_p2;

assign tmp_397_fu_5588_p3 = {{tmp_396_reg_7425}, {3'd0}};

assign tmp_398_fu_5603_p3 = {{tmp_396_reg_7425}, {1'd0}};

assign tmp_399_fu_5637_p1 = tmp_340_fu_5631_p2[5:0];

assign tmp_400_fu_5649_p1 = tmp_340_fu_5631_p2[7:0];

assign tmp_401_fu_5765_p3 = tmp_30_fu_5711_p26[32'd7];

assign tmp_402_fu_3792_p1 = grp_MUL_DP_fu_2645_ap_return_0[7:0];

assign tmp_403_fu_4151_p1 = MUL_DP_ret71_reg_6377_1[7:0];

assign tmp_404_fu_3807_p1 = grp_MUL_DP_fu_2652_ap_return_0[7:0];

assign tmp_405_fu_4164_p1 = MUL_DP_ret72_reg_6382_1[7:0];

assign tmp_406_fu_3822_p1 = grp_MUL_DP_fu_2659_ap_return_0[7:0];

assign tmp_407_fu_4177_p1 = MUL_DP_ret73_reg_6387_1[7:0];

assign tmp_408_fu_3837_p1 = grp_MUL_DP_fu_2666_ap_return_0[7:0];

assign tmp_409_fu_4190_p1 = MUL_DP_ret74_reg_6392_1[7:0];

assign tmp_410_fu_3852_p1 = grp_MUL_DP_fu_2673_ap_return_0[7:0];

assign tmp_411_fu_4203_p1 = MUL_DP_ret75_reg_6397_1[7:0];

assign tmp_412_fu_3867_p1 = grp_MUL_DP_fu_2680_ap_return_0[7:0];

assign tmp_413_fu_4216_p1 = MUL_DP_ret76_reg_6402_1[7:0];

assign tmp_414_fu_3882_p1 = grp_MUL_DP_fu_2687_ap_return_0[7:0];

assign tmp_415_fu_4229_p1 = MUL_DP_ret77_reg_6407_1[7:0];

assign tmp_416_fu_3897_p1 = grp_MUL_DP_fu_2694_ap_return_0[7:0];

assign tmp_417_fu_4242_p1 = MUL_DP_ret78_reg_6412_1[7:0];

assign tmp_418_fu_3912_p1 = grp_MUL_DP_fu_2701_ap_return_0[7:0];

assign tmp_419_fu_4255_p1 = MUL_DP_ret79_reg_6417_1[7:0];

assign tmp_420_fu_3927_p1 = grp_MUL_DP_fu_2708_ap_return_0[7:0];

assign tmp_421_fu_4268_p1 = MUL_DP_ret80_reg_6422_1[7:0];

assign tmp_422_fu_3942_p1 = grp_MUL_DP_fu_2715_ap_return_0[7:0];

assign tmp_423_fu_4281_p1 = MUL_DP_ret81_reg_6427_1[7:0];

assign tmp_424_fu_3957_p1 = grp_MUL_DP_fu_2722_ap_return_0[7:0];

assign tmp_425_fu_4294_p1 = MUL_DP_ret82_reg_6432_1[7:0];

assign tmp_426_fu_3972_p1 = grp_MUL_DP_fu_2729_ap_return_0[7:0];

assign tmp_427_fu_4307_p1 = MUL_DP_ret83_reg_6437_1[7:0];

assign tmp_428_fu_3987_p1 = grp_MUL_DP_fu_2736_ap_return_0[7:0];

assign tmp_429_fu_4320_p1 = MUL_DP_ret84_reg_6442_1[7:0];

assign tmp_430_fu_4002_p1 = grp_MUL_DP_fu_2743_ap_return_0[7:0];

assign tmp_431_fu_4333_p1 = MUL_DP_ret85_reg_6447_1[7:0];

assign tmp_432_fu_4017_p1 = grp_MUL_DP_fu_2750_ap_return_0[7:0];

assign tmp_433_fu_4346_p1 = MUL_DP_ret86_reg_6452_1[7:0];

assign tmp_434_fu_4032_p1 = grp_MUL_DP_fu_2757_ap_return_0[7:0];

assign tmp_435_fu_4359_p1 = MUL_DP_ret87_reg_6457_1[7:0];

assign tmp_436_fu_4047_p1 = grp_MUL_DP_fu_2764_ap_return_0[7:0];

assign tmp_437_fu_4372_p1 = MUL_DP_ret88_reg_6462_1[7:0];

assign tmp_438_fu_4062_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_439_fu_4385_p1 = MUL_DP_ret89_reg_6467_1[7:0];

assign tmp_43_10_fu_3961_p2 = (reg_3173 + tmp_424_fu_3957_p1);

assign tmp_43_11_fu_3976_p2 = (reg_3177 + tmp_426_fu_3972_p1);

assign tmp_43_12_fu_3991_p2 = (reg_3181 + tmp_428_fu_3987_p1);

assign tmp_43_13_fu_4006_p2 = (reg_3185 + tmp_430_fu_4002_p1);

assign tmp_43_14_fu_4021_p2 = (reg_3189 + tmp_432_fu_4017_p1);

assign tmp_43_15_fu_4036_p2 = (reg_3193 + tmp_434_fu_4032_p1);

assign tmp_43_16_fu_4051_p2 = (reg_3197 + tmp_436_fu_4047_p1);

assign tmp_43_17_fu_4066_p2 = (reg_3201 + tmp_438_fu_4062_p1);

assign tmp_43_18_fu_4081_p2 = (reg_3205 + tmp_440_fu_4077_p1);

assign tmp_43_19_fu_4096_p2 = (reg_3209 + tmp_442_fu_4092_p1);

assign tmp_43_1_fu_3811_p2 = (reg_3133 + tmp_404_fu_3807_p1);

assign tmp_43_20_fu_4111_p2 = (reg_3213 + tmp_444_fu_4107_p1);

assign tmp_43_21_fu_4126_p2 = (reg_3217 + tmp_446_fu_4122_p1);

assign tmp_43_22_fu_4141_p2 = (reg_3221 + tmp_448_fu_4137_p1);

assign tmp_43_2_fu_3826_p2 = (reg_3137 + tmp_406_fu_3822_p1);

assign tmp_43_3_fu_3841_p2 = (reg_3141 + tmp_408_fu_3837_p1);

assign tmp_43_4_fu_3856_p2 = (reg_3145 + tmp_410_fu_3852_p1);

assign tmp_43_5_fu_3871_p2 = (reg_3149 + tmp_412_fu_3867_p1);

assign tmp_43_6_fu_3886_p2 = (reg_3153 + tmp_414_fu_3882_p1);

assign tmp_43_7_fu_3901_p2 = (reg_3157 + tmp_416_fu_3897_p1);

assign tmp_43_8_fu_3916_p2 = (reg_3161 + tmp_418_fu_3912_p1);

assign tmp_43_9_fu_3931_p2 = (reg_3165 + tmp_420_fu_3927_p1);

assign tmp_43_s_fu_3946_p2 = (reg_3169 + tmp_422_fu_3942_p1);

assign tmp_440_fu_4077_p1 = grp_MUL_DP_fu_2778_ap_return_0[7:0];

assign tmp_441_fu_4398_p1 = MUL_DP_ret90_reg_6472_1[7:0];

assign tmp_442_fu_4092_p1 = grp_MUL_DP_fu_2785_ap_return_0[7:0];

assign tmp_443_fu_4411_p1 = MUL_DP_ret91_reg_6477_1[7:0];

assign tmp_444_fu_4107_p1 = grp_MUL_DP_fu_2792_ap_return_0[7:0];

assign tmp_445_fu_4424_p1 = MUL_DP_ret92_reg_6482_1[7:0];

assign tmp_446_fu_4122_p1 = grp_MUL_DP_fu_2799_ap_return_0[7:0];

assign tmp_447_fu_4437_p1 = MUL_DP_ret93_reg_6487_1[7:0];

assign tmp_448_fu_4137_p1 = grp_MUL_DP_fu_2806_ap_return_0[7:0];

assign tmp_449_fu_4450_p1 = MUL_DP_ret94_reg_6492_1[7:0];

assign tmp_450_fu_4657_p1 = tmp_346_fu_4652_p2[9:0];

assign tmp_451_fu_4793_p1 = grp_MUL_DP_fu_2645_ap_return_0[7:0];

assign tmp_452_fu_5152_p1 = MUL_DP_ret95_reg_7157_1[7:0];

assign tmp_453_fu_4808_p1 = grp_MUL_DP_fu_2652_ap_return_0[7:0];

assign tmp_454_fu_5165_p1 = MUL_DP_ret96_reg_7162_1[7:0];

assign tmp_455_fu_4823_p1 = grp_MUL_DP_fu_2659_ap_return_0[7:0];

assign tmp_456_fu_5178_p1 = MUL_DP_ret97_reg_7167_1[7:0];

assign tmp_457_fu_4838_p1 = grp_MUL_DP_fu_2666_ap_return_0[7:0];

assign tmp_458_fu_5191_p1 = MUL_DP_ret98_reg_7172_1[7:0];

assign tmp_459_fu_4853_p1 = grp_MUL_DP_fu_2673_ap_return_0[7:0];

assign tmp_45_10_fu_4298_p2 = (buffer1_1_96_4x4_p_V_11_q0 + tmp_425_fu_4294_p1);

assign tmp_45_11_fu_4311_p2 = (buffer1_1_96_4x4_p_V_12_q0 + tmp_427_fu_4307_p1);

assign tmp_45_12_fu_4324_p2 = (buffer1_1_96_4x4_p_V_13_q0 + tmp_429_fu_4320_p1);

assign tmp_45_13_fu_4337_p2 = (buffer1_1_96_4x4_p_V_14_q0 + tmp_431_fu_4333_p1);

assign tmp_45_14_fu_4350_p2 = (buffer1_1_96_4x4_p_V_15_q0 + tmp_433_fu_4346_p1);

assign tmp_45_15_fu_4363_p2 = (buffer1_1_96_4x4_p_V_16_q0 + tmp_435_fu_4359_p1);

assign tmp_45_16_fu_4376_p2 = (buffer1_1_96_4x4_p_V_17_q0 + tmp_437_fu_4372_p1);

assign tmp_45_17_fu_4389_p2 = (buffer1_1_96_4x4_p_V_18_q0 + tmp_439_fu_4385_p1);

assign tmp_45_18_fu_4402_p2 = (buffer1_1_96_4x4_p_V_19_q0 + tmp_441_fu_4398_p1);

assign tmp_45_19_fu_4415_p2 = (buffer1_1_96_4x4_p_V_20_q0 + tmp_443_fu_4411_p1);

assign tmp_45_1_fu_4168_p2 = (buffer1_1_96_4x4_p_V_1_q0 + tmp_405_fu_4164_p1);

assign tmp_45_20_fu_4428_p2 = (buffer1_1_96_4x4_p_V_21_q0 + tmp_445_fu_4424_p1);

assign tmp_45_21_fu_4441_p2 = (buffer1_1_96_4x4_p_V_22_q0 + tmp_447_fu_4437_p1);

assign tmp_45_22_fu_4454_p2 = (buffer1_1_96_4x4_p_V_23_q0 + tmp_449_fu_4450_p1);

assign tmp_45_2_fu_4181_p2 = (buffer1_1_96_4x4_p_V_2_q0 + tmp_407_fu_4177_p1);

assign tmp_45_3_fu_4194_p2 = (buffer1_1_96_4x4_p_V_3_q0 + tmp_409_fu_4190_p1);

assign tmp_45_4_fu_4207_p2 = (buffer1_1_96_4x4_p_V_4_q0 + tmp_411_fu_4203_p1);

assign tmp_45_5_fu_4220_p2 = (buffer1_1_96_4x4_p_V_5_q0 + tmp_413_fu_4216_p1);

assign tmp_45_6_fu_4233_p2 = (buffer1_1_96_4x4_p_V_6_q0 + tmp_415_fu_4229_p1);

assign tmp_45_7_fu_4246_p2 = (buffer1_1_96_4x4_p_V_7_q0 + tmp_417_fu_4242_p1);

assign tmp_45_8_fu_4259_p2 = (buffer1_1_96_4x4_p_V_8_q0 + tmp_419_fu_4255_p1);

assign tmp_45_9_fu_4272_p2 = (buffer1_1_96_4x4_p_V_9_q0 + tmp_421_fu_4268_p1);

assign tmp_45_s_fu_4285_p2 = (buffer1_1_96_4x4_p_V_10_q0 + tmp_423_fu_4281_p1);

assign tmp_460_fu_5204_p1 = MUL_DP_ret99_reg_7177_1[7:0];

assign tmp_461_fu_4868_p1 = grp_MUL_DP_fu_2680_ap_return_0[7:0];

assign tmp_462_fu_5217_p1 = MUL_DP_ret100_reg_7182_1[7:0];

assign tmp_463_fu_4883_p1 = grp_MUL_DP_fu_2687_ap_return_0[7:0];

assign tmp_464_fu_5230_p1 = MUL_DP_ret101_reg_7187_1[7:0];

assign tmp_465_fu_4898_p1 = grp_MUL_DP_fu_2694_ap_return_0[7:0];

assign tmp_466_fu_5243_p1 = MUL_DP_ret102_reg_7192_1[7:0];

assign tmp_467_fu_4913_p1 = grp_MUL_DP_fu_2701_ap_return_0[7:0];

assign tmp_468_fu_5256_p1 = MUL_DP_ret103_reg_7197_1[7:0];

assign tmp_469_fu_4928_p1 = grp_MUL_DP_fu_2708_ap_return_0[7:0];

assign tmp_470_fu_5269_p1 = MUL_DP_ret104_reg_7202_1[7:0];

assign tmp_471_fu_4943_p1 = grp_MUL_DP_fu_2715_ap_return_0[7:0];

assign tmp_472_fu_5282_p1 = MUL_DP_ret105_reg_7207_1[7:0];

assign tmp_473_fu_4958_p1 = grp_MUL_DP_fu_2722_ap_return_0[7:0];

assign tmp_474_fu_5295_p1 = MUL_DP_ret106_reg_7212_1[7:0];

assign tmp_475_fu_4973_p1 = grp_MUL_DP_fu_2729_ap_return_0[7:0];

assign tmp_476_fu_5308_p1 = MUL_DP_ret107_reg_7217_1[7:0];

assign tmp_477_fu_4988_p1 = grp_MUL_DP_fu_2736_ap_return_0[7:0];

assign tmp_478_fu_5321_p1 = MUL_DP_ret108_reg_7222_1[7:0];

assign tmp_479_fu_5003_p1 = grp_MUL_DP_fu_2743_ap_return_0[7:0];

assign tmp_480_fu_5334_p1 = MUL_DP_ret109_reg_7227_1[7:0];

assign tmp_481_fu_5018_p1 = grp_MUL_DP_fu_2750_ap_return_0[7:0];

assign tmp_482_fu_5347_p1 = MUL_DP_ret110_reg_7232_1[7:0];

assign tmp_483_fu_5033_p1 = grp_MUL_DP_fu_2757_ap_return_0[7:0];

assign tmp_484_fu_5360_p1 = MUL_DP_ret111_reg_7237_1[7:0];

assign tmp_485_fu_5048_p1 = grp_MUL_DP_fu_2764_ap_return_0[7:0];

assign tmp_486_fu_5373_p1 = MUL_DP_ret112_reg_7242_1[7:0];

assign tmp_487_fu_5063_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_488_fu_5386_p1 = MUL_DP_ret113_reg_7247_1[7:0];

assign tmp_489_fu_5078_p1 = grp_MUL_DP_fu_2778_ap_return_0[7:0];

assign tmp_490_fu_5399_p1 = MUL_DP_ret114_reg_7252_1[7:0];

assign tmp_491_fu_5093_p1 = grp_MUL_DP_fu_2785_ap_return_0[7:0];

assign tmp_492_fu_5412_p1 = MUL_DP_ret115_reg_7257_1[7:0];

assign tmp_493_fu_5108_p1 = grp_MUL_DP_fu_2792_ap_return_0[7:0];

assign tmp_494_fu_5425_p1 = MUL_DP_ret116_reg_7262_1[7:0];

assign tmp_495_fu_5123_p1 = grp_MUL_DP_fu_2799_ap_return_0[7:0];

assign tmp_496_fu_5438_p1 = MUL_DP_ret117_reg_7267_1[7:0];

assign tmp_497_fu_5138_p1 = grp_MUL_DP_fu_2806_ap_return_0[7:0];

assign tmp_498_fu_5451_p1 = MUL_DP_ret_reg_7272_1[7:0];

assign tmp_49_10_fu_4962_p2 = (reg_3173 + tmp_473_fu_4958_p1);

assign tmp_49_11_fu_4977_p2 = (reg_3177 + tmp_475_fu_4973_p1);

assign tmp_49_12_fu_4992_p2 = (reg_3181 + tmp_477_fu_4988_p1);

assign tmp_49_13_fu_5007_p2 = (reg_3185 + tmp_479_fu_5003_p1);

assign tmp_49_14_fu_5022_p2 = (reg_3189 + tmp_481_fu_5018_p1);

assign tmp_49_15_fu_5037_p2 = (reg_3193 + tmp_483_fu_5033_p1);

assign tmp_49_16_fu_5052_p2 = (reg_3197 + tmp_485_fu_5048_p1);

assign tmp_49_17_fu_5067_p2 = (reg_3201 + tmp_487_fu_5063_p1);

assign tmp_49_18_fu_5082_p2 = (reg_3205 + tmp_489_fu_5078_p1);

assign tmp_49_19_fu_5097_p2 = (reg_3209 + tmp_491_fu_5093_p1);

assign tmp_49_1_fu_4812_p2 = (reg_3133 + tmp_453_fu_4808_p1);

assign tmp_49_20_fu_5112_p2 = (reg_3213 + tmp_493_fu_5108_p1);

assign tmp_49_21_fu_5127_p2 = (reg_3217 + tmp_495_fu_5123_p1);

assign tmp_49_22_fu_5142_p2 = (reg_3221 + tmp_497_fu_5138_p1);

assign tmp_49_2_fu_4827_p2 = (reg_3137 + tmp_455_fu_4823_p1);

assign tmp_49_3_fu_4842_p2 = (reg_3141 + tmp_457_fu_4838_p1);

assign tmp_49_4_fu_4857_p2 = (reg_3145 + tmp_459_fu_4853_p1);

assign tmp_49_5_fu_4872_p2 = (reg_3149 + tmp_461_fu_4868_p1);

assign tmp_49_6_fu_4887_p2 = (reg_3153 + tmp_463_fu_4883_p1);

assign tmp_49_7_fu_4902_p2 = (reg_3157 + tmp_465_fu_4898_p1);

assign tmp_49_8_fu_4917_p2 = (reg_3161 + tmp_467_fu_4913_p1);

assign tmp_49_9_fu_4932_p2 = (reg_3165 + tmp_469_fu_4928_p1);

assign tmp_49_s_fu_4947_p2 = (reg_3169 + tmp_471_fu_4943_p1);

assign tmp_51_10_fu_5299_p2 = (buffer1_1_96_4x4_p_V_11_q0 + tmp_474_fu_5295_p1);

assign tmp_51_11_fu_5312_p2 = (buffer1_1_96_4x4_p_V_12_q0 + tmp_476_fu_5308_p1);

assign tmp_51_12_fu_5325_p2 = (buffer1_1_96_4x4_p_V_13_q0 + tmp_478_fu_5321_p1);

assign tmp_51_13_fu_5338_p2 = (buffer1_1_96_4x4_p_V_14_q0 + tmp_480_fu_5334_p1);

assign tmp_51_14_fu_5351_p2 = (buffer1_1_96_4x4_p_V_15_q0 + tmp_482_fu_5347_p1);

assign tmp_51_15_fu_5364_p2 = (buffer1_1_96_4x4_p_V_16_q0 + tmp_484_fu_5360_p1);

assign tmp_51_16_fu_5377_p2 = (buffer1_1_96_4x4_p_V_17_q0 + tmp_486_fu_5373_p1);

assign tmp_51_17_fu_5390_p2 = (buffer1_1_96_4x4_p_V_18_q0 + tmp_488_fu_5386_p1);

assign tmp_51_18_fu_5403_p2 = (buffer1_1_96_4x4_p_V_19_q0 + tmp_490_fu_5399_p1);

assign tmp_51_19_fu_5416_p2 = (buffer1_1_96_4x4_p_V_20_q0 + tmp_492_fu_5412_p1);

assign tmp_51_1_fu_5169_p2 = (buffer1_1_96_4x4_p_V_1_q0 + tmp_454_fu_5165_p1);

assign tmp_51_20_fu_5429_p2 = (buffer1_1_96_4x4_p_V_21_q0 + tmp_494_fu_5425_p1);

assign tmp_51_21_fu_5442_p2 = (buffer1_1_96_4x4_p_V_22_q0 + tmp_496_fu_5438_p1);

assign tmp_51_22_fu_5455_p2 = (buffer1_1_96_4x4_p_V_23_q0 + tmp_498_fu_5451_p1);

assign tmp_51_2_fu_5182_p2 = (buffer1_1_96_4x4_p_V_2_q0 + tmp_456_fu_5178_p1);

assign tmp_51_3_fu_5195_p2 = (buffer1_1_96_4x4_p_V_3_q0 + tmp_458_fu_5191_p1);

assign tmp_51_4_fu_5208_p2 = (buffer1_1_96_4x4_p_V_4_q0 + tmp_460_fu_5204_p1);

assign tmp_51_5_fu_5221_p2 = (buffer1_1_96_4x4_p_V_5_q0 + tmp_462_fu_5217_p1);

assign tmp_51_6_fu_5234_p2 = (buffer1_1_96_4x4_p_V_6_q0 + tmp_464_fu_5230_p1);

assign tmp_51_7_fu_5247_p2 = (buffer1_1_96_4x4_p_V_7_q0 + tmp_466_fu_5243_p1);

assign tmp_51_8_fu_5260_p2 = (buffer1_1_96_4x4_p_V_8_q0 + tmp_468_fu_5256_p1);

assign tmp_51_9_fu_5273_p2 = (buffer1_1_96_4x4_p_V_9_q0 + tmp_470_fu_5269_p1);

assign tmp_51_s_fu_5286_p2 = (buffer1_1_96_4x4_p_V_10_q0 + tmp_472_fu_5282_p1);

assign tmp_s_fu_3363_p1 = $signed(tmp_373_fu_3356_p3);

assign w10_cast1_cast_fu_5667_p1 = w10_mid2_reg_7431;

assign w10_mid2_fu_5566_p3 = ((tmp_339_fu_5561_p2[0:0] === 1'b1) ? 3'd1 : w10_phi_fu_2637_p4);

assign w2_cast8_cast1_fu_3529_p1 = w2_reg_2530;

assign w2_cast8_cast2_fu_3533_p1 = w2_reg_2530;

assign w2_cast8_cast_fu_3537_p1 = w2_reg_2530;

assign w5_cast5_cast1_fu_4520_p1 = w5_reg_2565;

assign w5_cast5_cast2_fu_4524_p1 = w5_reg_2565;

assign w5_cast5_cast_fu_4528_p1 = w5_reg_2565;

assign w_18_fu_3327_p2 = (w_mid2_fu_3311_p3 + 3'd1);

assign w_19_fu_3782_p2 = (w2_reg_2530 + 3'd1);

assign w_20_fu_4783_p2 = (w5_reg_2565 + 3'd1);

assign w_21_fu_5582_p2 = (w10_mid2_fu_5566_p3 + 3'd1);

assign w_cast_cast_fu_3435_p1 = ap_reg_pp0_iter9_w_mid2_reg_5803;

assign w_mid2_fu_3311_p3 = ((tmp_310_fu_3306_p2[0:0] === 1'b1) ? 3'd1 : w_phi_fu_2510_p4);

always @ (posedge ap_clk) begin
    h1_cast9_cast1_reg_5838[6:3] <= 4'b0000;
    h1_cast9_cast_reg_5843[11:3] <= 9'b000000000;
    tmp_351_cast_reg_5848[0] <= 1'b0;
    tmp_317_reg_5853[0] <= 1'b0;
    w2_cast8_cast1_reg_5861[6:3] <= 4'b0000;
    w2_cast8_cast2_reg_5866[12:3] <= 10'b0000000000;
    h4_cast6_cast1_reg_6617[7:3] <= 5'b00000;
    h4_cast6_cast_reg_6622[11:3] <= 9'b000000000;
    tmp_321_reg_6627[0] <= 1'b0;
    tmp_322_reg_6632[0] <= 1'b0;
    w5_cast5_cast1_reg_6641[12:3] <= 10'b0000000000;
    w5_cast5_cast2_reg_6646[7:3] <= 5'b00000;
    buffer1_1_96_4x4_p_V_167_reg_6651[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_169_reg_6661[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_171_reg_6671[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_173_reg_6681[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_175_reg_6691[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_177_reg_6701[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_179_reg_6711[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_181_reg_6721[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_183_reg_6731[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_185_reg_6741[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_187_reg_6751[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_189_reg_6761[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_191_reg_6771[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_193_reg_6781[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_195_reg_6791[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_197_reg_6801[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_199_reg_6811[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_201_reg_6821[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_203_reg_6831[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_205_reg_6841[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_207_reg_6851[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_209_reg_6861[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_211_reg_6871[7] <= 1'b0;
    buffer1_1_96_4x4_p_V_213_reg_6881[7] <= 1'b0;
    weight_0_V_addr_6_reg_6904[8] <= 1'b0;
    weight_1_V_addr_6_reg_6914[8] <= 1'b0;
    weight_2_V_addr_6_reg_6924[8] <= 1'b0;
    weight_3_V_addr_6_reg_6934[8] <= 1'b0;
    weight_4_V_addr_6_reg_6944[8] <= 1'b0;
    weight_5_V_addr_6_reg_6954[8] <= 1'b0;
    weight_6_V_addr_6_reg_6964[8] <= 1'b0;
    weight_7_V_addr_6_reg_6974[8] <= 1'b0;
    weight_8_V_addr_6_reg_6984[8] <= 1'b0;
    weight_9_V_addr_6_reg_6994[8] <= 1'b0;
    weight_10_V_addr_6_reg_7004[8] <= 1'b0;
    weight_11_V_addr_6_reg_7014[8] <= 1'b0;
    weight_12_V_addr_6_reg_7024[8] <= 1'b0;
    weight_13_V_addr_6_reg_7034[8] <= 1'b0;
    weight_14_V_addr_6_reg_7044[8] <= 1'b0;
    weight_15_V_addr_6_reg_7054[8] <= 1'b0;
    weight_16_V_addr_6_reg_7064[8] <= 1'b0;
    weight_17_V_addr_6_reg_7074[8] <= 1'b0;
    weight_18_V_addr_6_reg_7084[8] <= 1'b0;
    weight_19_V_addr_6_reg_7094[8] <= 1'b0;
    weight_20_V_addr_6_reg_7104[8] <= 1'b0;
    weight_21_V_addr_6_reg_7114[8] <= 1'b0;
    weight_22_V_addr_6_reg_7124[8] <= 1'b0;
    weight_23_V_addr_6_reg_7134[8] <= 1'b0;
end

endmodule //subconv_1x1_4_p
