// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_16p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_0_V_address1,
        weight_0_V_ce1,
        weight_0_V_q1,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_1_V_address1,
        weight_1_V_ce1,
        weight_1_V_q1,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_2_V_address1,
        weight_2_V_ce1,
        weight_2_V_q1,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_3_V_address1,
        weight_3_V_ce1,
        weight_3_V_q1,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_4_V_address1,
        weight_4_V_ce1,
        weight_4_V_q1,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_5_V_address1,
        weight_5_V_ce1,
        weight_5_V_q1,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_6_V_address1,
        weight_6_V_ce1,
        weight_6_V_q1,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_7_V_address1,
        weight_7_V_ce1,
        weight_7_V_q1,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_8_V_address1,
        weight_8_V_ce1,
        weight_8_V_q1,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_9_V_address1,
        weight_9_V_ce1,
        weight_9_V_q1,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_10_V_address1,
        weight_10_V_ce1,
        weight_10_V_q1,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_11_V_address1,
        weight_11_V_ce1,
        weight_11_V_q1,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_12_V_address1,
        weight_12_V_ce1,
        weight_12_V_q1,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_13_V_address1,
        weight_13_V_ce1,
        weight_13_V_q1,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_14_V_address1,
        weight_14_V_ce1,
        weight_14_V_q1,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_15_V_address1,
        weight_15_V_ce1,
        weight_15_V_q1,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_16_V_address1,
        weight_16_V_ce1,
        weight_16_V_q1,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_17_V_address1,
        weight_17_V_ce1,
        weight_17_V_q1,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_18_V_address1,
        weight_18_V_ce1,
        weight_18_V_q1,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_19_V_address1,
        weight_19_V_ce1,
        weight_19_V_q1,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_20_V_address1,
        weight_20_V_ce1,
        weight_20_V_q1,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_21_V_address1,
        weight_21_V_ce1,
        weight_21_V_q1,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_22_V_address1,
        weight_22_V_ce1,
        weight_22_V_q1,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_23_V_address1,
        weight_23_V_ce1,
        weight_23_V_q1,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_1_Downs_23_address0,
        ShuffleConvs_1_Downs_23_ce0,
        ShuffleConvs_1_Downs_23_we0,
        ShuffleConvs_1_Downs_23_d0,
        ShuffleConvs_1_Downs_23_q0,
        ShuffleConvs_1_Downs_23_address1,
        ShuffleConvs_1_Downs_23_ce1,
        ShuffleConvs_1_Downs_23_we1,
        ShuffleConvs_1_Downs_23_d1,
        ShuffleConvs_1_Downs_22_address0,
        ShuffleConvs_1_Downs_22_ce0,
        ShuffleConvs_1_Downs_22_we0,
        ShuffleConvs_1_Downs_22_d0,
        ShuffleConvs_1_Downs_22_q0,
        ShuffleConvs_1_Downs_22_address1,
        ShuffleConvs_1_Downs_22_ce1,
        ShuffleConvs_1_Downs_22_we1,
        ShuffleConvs_1_Downs_22_d1,
        ShuffleConvs_1_Downs_11_address0,
        ShuffleConvs_1_Downs_11_ce0,
        ShuffleConvs_1_Downs_11_we0,
        ShuffleConvs_1_Downs_11_d0,
        ShuffleConvs_1_Downs_11_q0,
        ShuffleConvs_1_Downs_11_address1,
        ShuffleConvs_1_Downs_11_ce1,
        ShuffleConvs_1_Downs_11_we1,
        ShuffleConvs_1_Downs_11_d1,
        ShuffleConvs_1_Downs_6_address0,
        ShuffleConvs_1_Downs_6_ce0,
        ShuffleConvs_1_Downs_6_we0,
        ShuffleConvs_1_Downs_6_d0,
        ShuffleConvs_1_Downs_6_q0,
        ShuffleConvs_1_Downs_6_address1,
        ShuffleConvs_1_Downs_6_ce1,
        ShuffleConvs_1_Downs_6_we1,
        ShuffleConvs_1_Downs_6_d1,
        ShuffleConvs_1_Downs_5_address0,
        ShuffleConvs_1_Downs_5_ce0,
        ShuffleConvs_1_Downs_5_we0,
        ShuffleConvs_1_Downs_5_d0,
        ShuffleConvs_1_Downs_5_q0,
        ShuffleConvs_1_Downs_5_address1,
        ShuffleConvs_1_Downs_5_ce1,
        ShuffleConvs_1_Downs_5_we1,
        ShuffleConvs_1_Downs_5_d1,
        ShuffleConvs_1_Downs_4_address0,
        ShuffleConvs_1_Downs_4_ce0,
        ShuffleConvs_1_Downs_4_we0,
        ShuffleConvs_1_Downs_4_d0,
        ShuffleConvs_1_Downs_4_q0,
        ShuffleConvs_1_Downs_4_address1,
        ShuffleConvs_1_Downs_4_ce1,
        ShuffleConvs_1_Downs_4_we1,
        ShuffleConvs_1_Downs_4_d1,
        ShuffleConvs_1_Downs_3_address0,
        ShuffleConvs_1_Downs_3_ce0,
        ShuffleConvs_1_Downs_3_we0,
        ShuffleConvs_1_Downs_3_d0,
        ShuffleConvs_1_Downs_3_q0,
        ShuffleConvs_1_Downs_3_address1,
        ShuffleConvs_1_Downs_3_ce1,
        ShuffleConvs_1_Downs_3_we1,
        ShuffleConvs_1_Downs_3_d1,
        ShuffleConvs_1_Downs_2_address0,
        ShuffleConvs_1_Downs_2_ce0,
        ShuffleConvs_1_Downs_2_we0,
        ShuffleConvs_1_Downs_2_d0,
        ShuffleConvs_1_Downs_2_q0,
        ShuffleConvs_1_Downs_2_address1,
        ShuffleConvs_1_Downs_2_ce1,
        ShuffleConvs_1_Downs_2_we1,
        ShuffleConvs_1_Downs_2_d1,
        ShuffleConvs_1_Downs_1_address0,
        ShuffleConvs_1_Downs_1_ce0,
        ShuffleConvs_1_Downs_1_we0,
        ShuffleConvs_1_Downs_1_d0,
        ShuffleConvs_1_Downs_1_q0,
        ShuffleConvs_1_Downs_1_address1,
        ShuffleConvs_1_Downs_1_ce1,
        ShuffleConvs_1_Downs_1_we1,
        ShuffleConvs_1_Downs_1_d1,
        ShuffleConvs_1_Downs_address0,
        ShuffleConvs_1_Downs_ce0,
        ShuffleConvs_1_Downs_we0,
        ShuffleConvs_1_Downs_d0,
        ShuffleConvs_1_Downs_q0,
        ShuffleConvs_1_Downs_address1,
        ShuffleConvs_1_Downs_ce1,
        ShuffleConvs_1_Downs_we1,
        ShuffleConvs_1_Downs_d1,
        ShuffleConvs_1_Downs_21_address0,
        ShuffleConvs_1_Downs_21_ce0,
        ShuffleConvs_1_Downs_21_we0,
        ShuffleConvs_1_Downs_21_d0,
        ShuffleConvs_1_Downs_21_q0,
        ShuffleConvs_1_Downs_21_address1,
        ShuffleConvs_1_Downs_21_ce1,
        ShuffleConvs_1_Downs_21_we1,
        ShuffleConvs_1_Downs_21_d1,
        ShuffleConvs_1_Downs_20_address0,
        ShuffleConvs_1_Downs_20_ce0,
        ShuffleConvs_1_Downs_20_we0,
        ShuffleConvs_1_Downs_20_d0,
        ShuffleConvs_1_Downs_20_q0,
        ShuffleConvs_1_Downs_20_address1,
        ShuffleConvs_1_Downs_20_ce1,
        ShuffleConvs_1_Downs_20_we1,
        ShuffleConvs_1_Downs_20_d1,
        ShuffleConvs_1_Downs_19_address0,
        ShuffleConvs_1_Downs_19_ce0,
        ShuffleConvs_1_Downs_19_we0,
        ShuffleConvs_1_Downs_19_d0,
        ShuffleConvs_1_Downs_19_q0,
        ShuffleConvs_1_Downs_19_address1,
        ShuffleConvs_1_Downs_19_ce1,
        ShuffleConvs_1_Downs_19_we1,
        ShuffleConvs_1_Downs_19_d1,
        ShuffleConvs_1_Downs_18_address0,
        ShuffleConvs_1_Downs_18_ce0,
        ShuffleConvs_1_Downs_18_we0,
        ShuffleConvs_1_Downs_18_d0,
        ShuffleConvs_1_Downs_18_q0,
        ShuffleConvs_1_Downs_18_address1,
        ShuffleConvs_1_Downs_18_ce1,
        ShuffleConvs_1_Downs_18_we1,
        ShuffleConvs_1_Downs_18_d1,
        ShuffleConvs_1_Downs_17_address0,
        ShuffleConvs_1_Downs_17_ce0,
        ShuffleConvs_1_Downs_17_we0,
        ShuffleConvs_1_Downs_17_d0,
        ShuffleConvs_1_Downs_17_q0,
        ShuffleConvs_1_Downs_17_address1,
        ShuffleConvs_1_Downs_17_ce1,
        ShuffleConvs_1_Downs_17_we1,
        ShuffleConvs_1_Downs_17_d1,
        ShuffleConvs_1_Downs_16_address0,
        ShuffleConvs_1_Downs_16_ce0,
        ShuffleConvs_1_Downs_16_we0,
        ShuffleConvs_1_Downs_16_d0,
        ShuffleConvs_1_Downs_16_q0,
        ShuffleConvs_1_Downs_16_address1,
        ShuffleConvs_1_Downs_16_ce1,
        ShuffleConvs_1_Downs_16_we1,
        ShuffleConvs_1_Downs_16_d1,
        ShuffleConvs_1_Downs_15_address0,
        ShuffleConvs_1_Downs_15_ce0,
        ShuffleConvs_1_Downs_15_we0,
        ShuffleConvs_1_Downs_15_d0,
        ShuffleConvs_1_Downs_15_q0,
        ShuffleConvs_1_Downs_15_address1,
        ShuffleConvs_1_Downs_15_ce1,
        ShuffleConvs_1_Downs_15_we1,
        ShuffleConvs_1_Downs_15_d1,
        ShuffleConvs_1_Downs_14_address0,
        ShuffleConvs_1_Downs_14_ce0,
        ShuffleConvs_1_Downs_14_we0,
        ShuffleConvs_1_Downs_14_d0,
        ShuffleConvs_1_Downs_14_q0,
        ShuffleConvs_1_Downs_14_address1,
        ShuffleConvs_1_Downs_14_ce1,
        ShuffleConvs_1_Downs_14_we1,
        ShuffleConvs_1_Downs_14_d1,
        ShuffleConvs_1_Downs_13_address0,
        ShuffleConvs_1_Downs_13_ce0,
        ShuffleConvs_1_Downs_13_we0,
        ShuffleConvs_1_Downs_13_d0,
        ShuffleConvs_1_Downs_13_q0,
        ShuffleConvs_1_Downs_13_address1,
        ShuffleConvs_1_Downs_13_ce1,
        ShuffleConvs_1_Downs_13_we1,
        ShuffleConvs_1_Downs_13_d1,
        ShuffleConvs_1_Downs_12_address0,
        ShuffleConvs_1_Downs_12_ce0,
        ShuffleConvs_1_Downs_12_we0,
        ShuffleConvs_1_Downs_12_d0,
        ShuffleConvs_1_Downs_12_q0,
        ShuffleConvs_1_Downs_12_address1,
        ShuffleConvs_1_Downs_12_ce1,
        ShuffleConvs_1_Downs_12_we1,
        ShuffleConvs_1_Downs_12_d1,
        ShuffleConvs_1_Downs_10_address0,
        ShuffleConvs_1_Downs_10_ce0,
        ShuffleConvs_1_Downs_10_we0,
        ShuffleConvs_1_Downs_10_d0,
        ShuffleConvs_1_Downs_10_q0,
        ShuffleConvs_1_Downs_10_address1,
        ShuffleConvs_1_Downs_10_ce1,
        ShuffleConvs_1_Downs_10_we1,
        ShuffleConvs_1_Downs_10_d1,
        ShuffleConvs_1_Downs_9_address0,
        ShuffleConvs_1_Downs_9_ce0,
        ShuffleConvs_1_Downs_9_we0,
        ShuffleConvs_1_Downs_9_d0,
        ShuffleConvs_1_Downs_9_q0,
        ShuffleConvs_1_Downs_9_address1,
        ShuffleConvs_1_Downs_9_ce1,
        ShuffleConvs_1_Downs_9_we1,
        ShuffleConvs_1_Downs_9_d1,
        ShuffleConvs_1_Downs_8_address0,
        ShuffleConvs_1_Downs_8_ce0,
        ShuffleConvs_1_Downs_8_we0,
        ShuffleConvs_1_Downs_8_d0,
        ShuffleConvs_1_Downs_8_q0,
        ShuffleConvs_1_Downs_8_address1,
        ShuffleConvs_1_Downs_8_ce1,
        ShuffleConvs_1_Downs_8_we1,
        ShuffleConvs_1_Downs_8_d1,
        ShuffleConvs_1_Downs_7_address0,
        ShuffleConvs_1_Downs_7_ce0,
        ShuffleConvs_1_Downs_7_we0,
        ShuffleConvs_1_Downs_7_d0,
        ShuffleConvs_1_Downs_7_q0,
        ShuffleConvs_1_Downs_7_address1,
        ShuffleConvs_1_Downs_7_ce1,
        ShuffleConvs_1_Downs_7_we1,
        ShuffleConvs_1_Downs_7_d1
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_pp0_stage0 = 53'd2;
parameter    ap_ST_fsm_state13 = 53'd4;
parameter    ap_ST_fsm_state14 = 53'd8;
parameter    ap_ST_fsm_state15 = 53'd16;
parameter    ap_ST_fsm_state16 = 53'd32;
parameter    ap_ST_fsm_state17 = 53'd64;
parameter    ap_ST_fsm_state18 = 53'd128;
parameter    ap_ST_fsm_state19 = 53'd256;
parameter    ap_ST_fsm_state20 = 53'd512;
parameter    ap_ST_fsm_state21 = 53'd1024;
parameter    ap_ST_fsm_state22 = 53'd2048;
parameter    ap_ST_fsm_state23 = 53'd4096;
parameter    ap_ST_fsm_state24 = 53'd8192;
parameter    ap_ST_fsm_state25 = 53'd16384;
parameter    ap_ST_fsm_state26 = 53'd32768;
parameter    ap_ST_fsm_state27 = 53'd65536;
parameter    ap_ST_fsm_state28 = 53'd131072;
parameter    ap_ST_fsm_state29 = 53'd262144;
parameter    ap_ST_fsm_state30 = 53'd524288;
parameter    ap_ST_fsm_state31 = 53'd1048576;
parameter    ap_ST_fsm_state32 = 53'd2097152;
parameter    ap_ST_fsm_state33 = 53'd4194304;
parameter    ap_ST_fsm_state34 = 53'd8388608;
parameter    ap_ST_fsm_state35 = 53'd16777216;
parameter    ap_ST_fsm_state36 = 53'd33554432;
parameter    ap_ST_fsm_state37 = 53'd67108864;
parameter    ap_ST_fsm_state38 = 53'd134217728;
parameter    ap_ST_fsm_state39 = 53'd268435456;
parameter    ap_ST_fsm_state40 = 53'd536870912;
parameter    ap_ST_fsm_state41 = 53'd1073741824;
parameter    ap_ST_fsm_state42 = 53'd2147483648;
parameter    ap_ST_fsm_state43 = 53'd4294967296;
parameter    ap_ST_fsm_state44 = 53'd8589934592;
parameter    ap_ST_fsm_state45 = 53'd17179869184;
parameter    ap_ST_fsm_state46 = 53'd34359738368;
parameter    ap_ST_fsm_state47 = 53'd68719476736;
parameter    ap_ST_fsm_state48 = 53'd137438953472;
parameter    ap_ST_fsm_state49 = 53'd274877906944;
parameter    ap_ST_fsm_state50 = 53'd549755813888;
parameter    ap_ST_fsm_state51 = 53'd1099511627776;
parameter    ap_ST_fsm_state52 = 53'd2199023255552;
parameter    ap_ST_fsm_state53 = 53'd4398046511104;
parameter    ap_ST_fsm_state54 = 53'd8796093022208;
parameter    ap_ST_fsm_state55 = 53'd17592186044416;
parameter    ap_ST_fsm_state56 = 53'd35184372088832;
parameter    ap_ST_fsm_state57 = 53'd70368744177664;
parameter    ap_ST_fsm_state58 = 53'd140737488355328;
parameter    ap_ST_fsm_state59 = 53'd281474976710656;
parameter    ap_ST_fsm_state60 = 53'd562949953421312;
parameter    ap_ST_fsm_state61 = 53'd1125899906842624;
parameter    ap_ST_fsm_pp1_stage0 = 53'd2251799813685248;
parameter    ap_ST_fsm_state73 = 53'd4503599627370496;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_0_V_address1;
output   weight_0_V_ce1;
input  [7:0] weight_0_V_q1;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_1_V_address1;
output   weight_1_V_ce1;
input  [7:0] weight_1_V_q1;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_2_V_address1;
output   weight_2_V_ce1;
input  [7:0] weight_2_V_q1;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_3_V_address1;
output   weight_3_V_ce1;
input  [7:0] weight_3_V_q1;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_4_V_address1;
output   weight_4_V_ce1;
input  [7:0] weight_4_V_q1;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_5_V_address1;
output   weight_5_V_ce1;
input  [7:0] weight_5_V_q1;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_6_V_address1;
output   weight_6_V_ce1;
input  [7:0] weight_6_V_q1;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] weight_7_V_address1;
output   weight_7_V_ce1;
input  [7:0] weight_7_V_q1;
output  [6:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [6:0] weight_8_V_address1;
output   weight_8_V_ce1;
input  [7:0] weight_8_V_q1;
output  [6:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [6:0] weight_9_V_address1;
output   weight_9_V_ce1;
input  [7:0] weight_9_V_q1;
output  [6:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [6:0] weight_10_V_address1;
output   weight_10_V_ce1;
input  [7:0] weight_10_V_q1;
output  [6:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [6:0] weight_11_V_address1;
output   weight_11_V_ce1;
input  [7:0] weight_11_V_q1;
output  [6:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [6:0] weight_12_V_address1;
output   weight_12_V_ce1;
input  [7:0] weight_12_V_q1;
output  [6:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [6:0] weight_13_V_address1;
output   weight_13_V_ce1;
input  [7:0] weight_13_V_q1;
output  [6:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [6:0] weight_14_V_address1;
output   weight_14_V_ce1;
input  [7:0] weight_14_V_q1;
output  [6:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [6:0] weight_15_V_address1;
output   weight_15_V_ce1;
input  [7:0] weight_15_V_q1;
output  [6:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [6:0] weight_16_V_address1;
output   weight_16_V_ce1;
input  [7:0] weight_16_V_q1;
output  [6:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [6:0] weight_17_V_address1;
output   weight_17_V_ce1;
input  [7:0] weight_17_V_q1;
output  [6:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [6:0] weight_18_V_address1;
output   weight_18_V_ce1;
input  [7:0] weight_18_V_q1;
output  [6:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [6:0] weight_19_V_address1;
output   weight_19_V_ce1;
input  [7:0] weight_19_V_q1;
output  [6:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [6:0] weight_20_V_address1;
output   weight_20_V_ce1;
input  [7:0] weight_20_V_q1;
output  [6:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [6:0] weight_21_V_address1;
output   weight_21_V_ce1;
input  [7:0] weight_21_V_q1;
output  [6:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [6:0] weight_22_V_address1;
output   weight_22_V_ce1;
input  [7:0] weight_22_V_q1;
output  [6:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [6:0] weight_23_V_address1;
output   weight_23_V_ce1;
input  [7:0] weight_23_V_q1;
output  [5:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [9:0] ShuffleConvs_1_Downs_23_address0;
output   ShuffleConvs_1_Downs_23_ce0;
output   ShuffleConvs_1_Downs_23_we0;
output  [7:0] ShuffleConvs_1_Downs_23_d0;
input  [7:0] ShuffleConvs_1_Downs_23_q0;
output  [9:0] ShuffleConvs_1_Downs_23_address1;
output   ShuffleConvs_1_Downs_23_ce1;
output   ShuffleConvs_1_Downs_23_we1;
output  [7:0] ShuffleConvs_1_Downs_23_d1;
output  [9:0] ShuffleConvs_1_Downs_22_address0;
output   ShuffleConvs_1_Downs_22_ce0;
output   ShuffleConvs_1_Downs_22_we0;
output  [7:0] ShuffleConvs_1_Downs_22_d0;
input  [7:0] ShuffleConvs_1_Downs_22_q0;
output  [9:0] ShuffleConvs_1_Downs_22_address1;
output   ShuffleConvs_1_Downs_22_ce1;
output   ShuffleConvs_1_Downs_22_we1;
output  [7:0] ShuffleConvs_1_Downs_22_d1;
output  [9:0] ShuffleConvs_1_Downs_11_address0;
output   ShuffleConvs_1_Downs_11_ce0;
output   ShuffleConvs_1_Downs_11_we0;
output  [7:0] ShuffleConvs_1_Downs_11_d0;
input  [7:0] ShuffleConvs_1_Downs_11_q0;
output  [9:0] ShuffleConvs_1_Downs_11_address1;
output   ShuffleConvs_1_Downs_11_ce1;
output   ShuffleConvs_1_Downs_11_we1;
output  [7:0] ShuffleConvs_1_Downs_11_d1;
output  [9:0] ShuffleConvs_1_Downs_6_address0;
output   ShuffleConvs_1_Downs_6_ce0;
output   ShuffleConvs_1_Downs_6_we0;
output  [7:0] ShuffleConvs_1_Downs_6_d0;
input  [7:0] ShuffleConvs_1_Downs_6_q0;
output  [9:0] ShuffleConvs_1_Downs_6_address1;
output   ShuffleConvs_1_Downs_6_ce1;
output   ShuffleConvs_1_Downs_6_we1;
output  [7:0] ShuffleConvs_1_Downs_6_d1;
output  [9:0] ShuffleConvs_1_Downs_5_address0;
output   ShuffleConvs_1_Downs_5_ce0;
output   ShuffleConvs_1_Downs_5_we0;
output  [7:0] ShuffleConvs_1_Downs_5_d0;
input  [7:0] ShuffleConvs_1_Downs_5_q0;
output  [9:0] ShuffleConvs_1_Downs_5_address1;
output   ShuffleConvs_1_Downs_5_ce1;
output   ShuffleConvs_1_Downs_5_we1;
output  [7:0] ShuffleConvs_1_Downs_5_d1;
output  [9:0] ShuffleConvs_1_Downs_4_address0;
output   ShuffleConvs_1_Downs_4_ce0;
output   ShuffleConvs_1_Downs_4_we0;
output  [7:0] ShuffleConvs_1_Downs_4_d0;
input  [7:0] ShuffleConvs_1_Downs_4_q0;
output  [9:0] ShuffleConvs_1_Downs_4_address1;
output   ShuffleConvs_1_Downs_4_ce1;
output   ShuffleConvs_1_Downs_4_we1;
output  [7:0] ShuffleConvs_1_Downs_4_d1;
output  [9:0] ShuffleConvs_1_Downs_3_address0;
output   ShuffleConvs_1_Downs_3_ce0;
output   ShuffleConvs_1_Downs_3_we0;
output  [7:0] ShuffleConvs_1_Downs_3_d0;
input  [7:0] ShuffleConvs_1_Downs_3_q0;
output  [9:0] ShuffleConvs_1_Downs_3_address1;
output   ShuffleConvs_1_Downs_3_ce1;
output   ShuffleConvs_1_Downs_3_we1;
output  [7:0] ShuffleConvs_1_Downs_3_d1;
output  [9:0] ShuffleConvs_1_Downs_2_address0;
output   ShuffleConvs_1_Downs_2_ce0;
output   ShuffleConvs_1_Downs_2_we0;
output  [7:0] ShuffleConvs_1_Downs_2_d0;
input  [7:0] ShuffleConvs_1_Downs_2_q0;
output  [9:0] ShuffleConvs_1_Downs_2_address1;
output   ShuffleConvs_1_Downs_2_ce1;
output   ShuffleConvs_1_Downs_2_we1;
output  [7:0] ShuffleConvs_1_Downs_2_d1;
output  [9:0] ShuffleConvs_1_Downs_1_address0;
output   ShuffleConvs_1_Downs_1_ce0;
output   ShuffleConvs_1_Downs_1_we0;
output  [7:0] ShuffleConvs_1_Downs_1_d0;
input  [7:0] ShuffleConvs_1_Downs_1_q0;
output  [9:0] ShuffleConvs_1_Downs_1_address1;
output   ShuffleConvs_1_Downs_1_ce1;
output   ShuffleConvs_1_Downs_1_we1;
output  [7:0] ShuffleConvs_1_Downs_1_d1;
output  [9:0] ShuffleConvs_1_Downs_address0;
output   ShuffleConvs_1_Downs_ce0;
output   ShuffleConvs_1_Downs_we0;
output  [7:0] ShuffleConvs_1_Downs_d0;
input  [7:0] ShuffleConvs_1_Downs_q0;
output  [9:0] ShuffleConvs_1_Downs_address1;
output   ShuffleConvs_1_Downs_ce1;
output   ShuffleConvs_1_Downs_we1;
output  [7:0] ShuffleConvs_1_Downs_d1;
output  [9:0] ShuffleConvs_1_Downs_21_address0;
output   ShuffleConvs_1_Downs_21_ce0;
output   ShuffleConvs_1_Downs_21_we0;
output  [7:0] ShuffleConvs_1_Downs_21_d0;
input  [7:0] ShuffleConvs_1_Downs_21_q0;
output  [9:0] ShuffleConvs_1_Downs_21_address1;
output   ShuffleConvs_1_Downs_21_ce1;
output   ShuffleConvs_1_Downs_21_we1;
output  [7:0] ShuffleConvs_1_Downs_21_d1;
output  [9:0] ShuffleConvs_1_Downs_20_address0;
output   ShuffleConvs_1_Downs_20_ce0;
output   ShuffleConvs_1_Downs_20_we0;
output  [7:0] ShuffleConvs_1_Downs_20_d0;
input  [7:0] ShuffleConvs_1_Downs_20_q0;
output  [9:0] ShuffleConvs_1_Downs_20_address1;
output   ShuffleConvs_1_Downs_20_ce1;
output   ShuffleConvs_1_Downs_20_we1;
output  [7:0] ShuffleConvs_1_Downs_20_d1;
output  [9:0] ShuffleConvs_1_Downs_19_address0;
output   ShuffleConvs_1_Downs_19_ce0;
output   ShuffleConvs_1_Downs_19_we0;
output  [7:0] ShuffleConvs_1_Downs_19_d0;
input  [7:0] ShuffleConvs_1_Downs_19_q0;
output  [9:0] ShuffleConvs_1_Downs_19_address1;
output   ShuffleConvs_1_Downs_19_ce1;
output   ShuffleConvs_1_Downs_19_we1;
output  [7:0] ShuffleConvs_1_Downs_19_d1;
output  [9:0] ShuffleConvs_1_Downs_18_address0;
output   ShuffleConvs_1_Downs_18_ce0;
output   ShuffleConvs_1_Downs_18_we0;
output  [7:0] ShuffleConvs_1_Downs_18_d0;
input  [7:0] ShuffleConvs_1_Downs_18_q0;
output  [9:0] ShuffleConvs_1_Downs_18_address1;
output   ShuffleConvs_1_Downs_18_ce1;
output   ShuffleConvs_1_Downs_18_we1;
output  [7:0] ShuffleConvs_1_Downs_18_d1;
output  [9:0] ShuffleConvs_1_Downs_17_address0;
output   ShuffleConvs_1_Downs_17_ce0;
output   ShuffleConvs_1_Downs_17_we0;
output  [7:0] ShuffleConvs_1_Downs_17_d0;
input  [7:0] ShuffleConvs_1_Downs_17_q0;
output  [9:0] ShuffleConvs_1_Downs_17_address1;
output   ShuffleConvs_1_Downs_17_ce1;
output   ShuffleConvs_1_Downs_17_we1;
output  [7:0] ShuffleConvs_1_Downs_17_d1;
output  [9:0] ShuffleConvs_1_Downs_16_address0;
output   ShuffleConvs_1_Downs_16_ce0;
output   ShuffleConvs_1_Downs_16_we0;
output  [7:0] ShuffleConvs_1_Downs_16_d0;
input  [7:0] ShuffleConvs_1_Downs_16_q0;
output  [9:0] ShuffleConvs_1_Downs_16_address1;
output   ShuffleConvs_1_Downs_16_ce1;
output   ShuffleConvs_1_Downs_16_we1;
output  [7:0] ShuffleConvs_1_Downs_16_d1;
output  [9:0] ShuffleConvs_1_Downs_15_address0;
output   ShuffleConvs_1_Downs_15_ce0;
output   ShuffleConvs_1_Downs_15_we0;
output  [7:0] ShuffleConvs_1_Downs_15_d0;
input  [7:0] ShuffleConvs_1_Downs_15_q0;
output  [9:0] ShuffleConvs_1_Downs_15_address1;
output   ShuffleConvs_1_Downs_15_ce1;
output   ShuffleConvs_1_Downs_15_we1;
output  [7:0] ShuffleConvs_1_Downs_15_d1;
output  [9:0] ShuffleConvs_1_Downs_14_address0;
output   ShuffleConvs_1_Downs_14_ce0;
output   ShuffleConvs_1_Downs_14_we0;
output  [7:0] ShuffleConvs_1_Downs_14_d0;
input  [7:0] ShuffleConvs_1_Downs_14_q0;
output  [9:0] ShuffleConvs_1_Downs_14_address1;
output   ShuffleConvs_1_Downs_14_ce1;
output   ShuffleConvs_1_Downs_14_we1;
output  [7:0] ShuffleConvs_1_Downs_14_d1;
output  [9:0] ShuffleConvs_1_Downs_13_address0;
output   ShuffleConvs_1_Downs_13_ce0;
output   ShuffleConvs_1_Downs_13_we0;
output  [7:0] ShuffleConvs_1_Downs_13_d0;
input  [7:0] ShuffleConvs_1_Downs_13_q0;
output  [9:0] ShuffleConvs_1_Downs_13_address1;
output   ShuffleConvs_1_Downs_13_ce1;
output   ShuffleConvs_1_Downs_13_we1;
output  [7:0] ShuffleConvs_1_Downs_13_d1;
output  [9:0] ShuffleConvs_1_Downs_12_address0;
output   ShuffleConvs_1_Downs_12_ce0;
output   ShuffleConvs_1_Downs_12_we0;
output  [7:0] ShuffleConvs_1_Downs_12_d0;
input  [7:0] ShuffleConvs_1_Downs_12_q0;
output  [9:0] ShuffleConvs_1_Downs_12_address1;
output   ShuffleConvs_1_Downs_12_ce1;
output   ShuffleConvs_1_Downs_12_we1;
output  [7:0] ShuffleConvs_1_Downs_12_d1;
output  [9:0] ShuffleConvs_1_Downs_10_address0;
output   ShuffleConvs_1_Downs_10_ce0;
output   ShuffleConvs_1_Downs_10_we0;
output  [7:0] ShuffleConvs_1_Downs_10_d0;
input  [7:0] ShuffleConvs_1_Downs_10_q0;
output  [9:0] ShuffleConvs_1_Downs_10_address1;
output   ShuffleConvs_1_Downs_10_ce1;
output   ShuffleConvs_1_Downs_10_we1;
output  [7:0] ShuffleConvs_1_Downs_10_d1;
output  [9:0] ShuffleConvs_1_Downs_9_address0;
output   ShuffleConvs_1_Downs_9_ce0;
output   ShuffleConvs_1_Downs_9_we0;
output  [7:0] ShuffleConvs_1_Downs_9_d0;
input  [7:0] ShuffleConvs_1_Downs_9_q0;
output  [9:0] ShuffleConvs_1_Downs_9_address1;
output   ShuffleConvs_1_Downs_9_ce1;
output   ShuffleConvs_1_Downs_9_we1;
output  [7:0] ShuffleConvs_1_Downs_9_d1;
output  [9:0] ShuffleConvs_1_Downs_8_address0;
output   ShuffleConvs_1_Downs_8_ce0;
output   ShuffleConvs_1_Downs_8_we0;
output  [7:0] ShuffleConvs_1_Downs_8_d0;
input  [7:0] ShuffleConvs_1_Downs_8_q0;
output  [9:0] ShuffleConvs_1_Downs_8_address1;
output   ShuffleConvs_1_Downs_8_ce1;
output   ShuffleConvs_1_Downs_8_we1;
output  [7:0] ShuffleConvs_1_Downs_8_d1;
output  [9:0] ShuffleConvs_1_Downs_7_address0;
output   ShuffleConvs_1_Downs_7_ce0;
output   ShuffleConvs_1_Downs_7_we0;
output  [7:0] ShuffleConvs_1_Downs_7_d0;
input  [7:0] ShuffleConvs_1_Downs_7_q0;
output  [9:0] ShuffleConvs_1_Downs_7_address1;
output   ShuffleConvs_1_Downs_7_ce1;
output   ShuffleConvs_1_Downs_7_we1;
output  [7:0] ShuffleConvs_1_Downs_7_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_V_address0;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_0_V_ce1;
reg weight_1_V_ce0;
reg weight_1_V_ce1;
reg weight_2_V_ce0;
reg weight_2_V_ce1;
reg weight_3_V_ce0;
reg weight_3_V_ce1;
reg weight_4_V_ce0;
reg weight_4_V_ce1;
reg weight_5_V_ce0;
reg weight_5_V_ce1;
reg weight_6_V_ce0;
reg weight_6_V_ce1;
reg weight_7_V_ce0;
reg weight_7_V_ce1;
reg weight_8_V_ce0;
reg weight_8_V_ce1;
reg weight_9_V_ce0;
reg weight_9_V_ce1;
reg weight_10_V_ce0;
reg weight_10_V_ce1;
reg weight_11_V_ce0;
reg weight_11_V_ce1;
reg weight_12_V_ce0;
reg weight_12_V_ce1;
reg weight_13_V_ce0;
reg weight_13_V_ce1;
reg weight_14_V_ce0;
reg weight_14_V_ce1;
reg weight_15_V_ce0;
reg weight_15_V_ce1;
reg weight_16_V_ce0;
reg weight_16_V_ce1;
reg weight_17_V_ce0;
reg weight_17_V_ce1;
reg weight_18_V_ce0;
reg weight_18_V_ce1;
reg weight_19_V_ce0;
reg weight_19_V_ce1;
reg weight_20_V_ce0;
reg weight_20_V_ce1;
reg weight_21_V_ce0;
reg weight_21_V_ce1;
reg weight_22_V_ce0;
reg weight_22_V_ce1;
reg weight_23_V_ce0;
reg weight_23_V_ce1;
reg bias_V_ce0;
reg[9:0] ShuffleConvs_1_Downs_23_address0;
reg ShuffleConvs_1_Downs_23_ce0;
reg ShuffleConvs_1_Downs_23_we0;
reg[7:0] ShuffleConvs_1_Downs_23_d0;
reg ShuffleConvs_1_Downs_23_ce1;
reg ShuffleConvs_1_Downs_23_we1;
reg[9:0] ShuffleConvs_1_Downs_22_address0;
reg ShuffleConvs_1_Downs_22_ce0;
reg ShuffleConvs_1_Downs_22_we0;
reg[7:0] ShuffleConvs_1_Downs_22_d0;
reg ShuffleConvs_1_Downs_22_ce1;
reg ShuffleConvs_1_Downs_22_we1;
reg[9:0] ShuffleConvs_1_Downs_11_address0;
reg ShuffleConvs_1_Downs_11_ce0;
reg ShuffleConvs_1_Downs_11_we0;
reg[7:0] ShuffleConvs_1_Downs_11_d0;
reg ShuffleConvs_1_Downs_11_ce1;
reg ShuffleConvs_1_Downs_11_we1;
reg[9:0] ShuffleConvs_1_Downs_6_address0;
reg ShuffleConvs_1_Downs_6_ce0;
reg ShuffleConvs_1_Downs_6_we0;
reg[7:0] ShuffleConvs_1_Downs_6_d0;
reg ShuffleConvs_1_Downs_6_ce1;
reg ShuffleConvs_1_Downs_6_we1;
reg[9:0] ShuffleConvs_1_Downs_5_address0;
reg ShuffleConvs_1_Downs_5_ce0;
reg ShuffleConvs_1_Downs_5_we0;
reg[7:0] ShuffleConvs_1_Downs_5_d0;
reg ShuffleConvs_1_Downs_5_ce1;
reg ShuffleConvs_1_Downs_5_we1;
reg[9:0] ShuffleConvs_1_Downs_4_address0;
reg ShuffleConvs_1_Downs_4_ce0;
reg ShuffleConvs_1_Downs_4_we0;
reg[7:0] ShuffleConvs_1_Downs_4_d0;
reg ShuffleConvs_1_Downs_4_ce1;
reg ShuffleConvs_1_Downs_4_we1;
reg[9:0] ShuffleConvs_1_Downs_3_address0;
reg ShuffleConvs_1_Downs_3_ce0;
reg ShuffleConvs_1_Downs_3_we0;
reg[7:0] ShuffleConvs_1_Downs_3_d0;
reg ShuffleConvs_1_Downs_3_ce1;
reg ShuffleConvs_1_Downs_3_we1;
reg[9:0] ShuffleConvs_1_Downs_2_address0;
reg ShuffleConvs_1_Downs_2_ce0;
reg ShuffleConvs_1_Downs_2_we0;
reg[7:0] ShuffleConvs_1_Downs_2_d0;
reg ShuffleConvs_1_Downs_2_ce1;
reg ShuffleConvs_1_Downs_2_we1;
reg[9:0] ShuffleConvs_1_Downs_1_address0;
reg ShuffleConvs_1_Downs_1_ce0;
reg ShuffleConvs_1_Downs_1_we0;
reg[7:0] ShuffleConvs_1_Downs_1_d0;
reg ShuffleConvs_1_Downs_1_ce1;
reg ShuffleConvs_1_Downs_1_we1;
reg[9:0] ShuffleConvs_1_Downs_address0;
reg ShuffleConvs_1_Downs_ce0;
reg ShuffleConvs_1_Downs_we0;
reg[7:0] ShuffleConvs_1_Downs_d0;
reg ShuffleConvs_1_Downs_ce1;
reg ShuffleConvs_1_Downs_we1;
reg[9:0] ShuffleConvs_1_Downs_21_address0;
reg ShuffleConvs_1_Downs_21_ce0;
reg ShuffleConvs_1_Downs_21_we0;
reg[7:0] ShuffleConvs_1_Downs_21_d0;
reg ShuffleConvs_1_Downs_21_ce1;
reg ShuffleConvs_1_Downs_21_we1;
reg[9:0] ShuffleConvs_1_Downs_20_address0;
reg ShuffleConvs_1_Downs_20_ce0;
reg ShuffleConvs_1_Downs_20_we0;
reg[7:0] ShuffleConvs_1_Downs_20_d0;
reg ShuffleConvs_1_Downs_20_ce1;
reg ShuffleConvs_1_Downs_20_we1;
reg[9:0] ShuffleConvs_1_Downs_19_address0;
reg ShuffleConvs_1_Downs_19_ce0;
reg ShuffleConvs_1_Downs_19_we0;
reg[7:0] ShuffleConvs_1_Downs_19_d0;
reg ShuffleConvs_1_Downs_19_ce1;
reg ShuffleConvs_1_Downs_19_we1;
reg[9:0] ShuffleConvs_1_Downs_18_address0;
reg ShuffleConvs_1_Downs_18_ce0;
reg ShuffleConvs_1_Downs_18_we0;
reg[7:0] ShuffleConvs_1_Downs_18_d0;
reg ShuffleConvs_1_Downs_18_ce1;
reg ShuffleConvs_1_Downs_18_we1;
reg[9:0] ShuffleConvs_1_Downs_17_address0;
reg ShuffleConvs_1_Downs_17_ce0;
reg ShuffleConvs_1_Downs_17_we0;
reg[7:0] ShuffleConvs_1_Downs_17_d0;
reg ShuffleConvs_1_Downs_17_ce1;
reg ShuffleConvs_1_Downs_17_we1;
reg[9:0] ShuffleConvs_1_Downs_16_address0;
reg ShuffleConvs_1_Downs_16_ce0;
reg ShuffleConvs_1_Downs_16_we0;
reg[7:0] ShuffleConvs_1_Downs_16_d0;
reg ShuffleConvs_1_Downs_16_ce1;
reg ShuffleConvs_1_Downs_16_we1;
reg[9:0] ShuffleConvs_1_Downs_15_address0;
reg ShuffleConvs_1_Downs_15_ce0;
reg ShuffleConvs_1_Downs_15_we0;
reg[7:0] ShuffleConvs_1_Downs_15_d0;
reg ShuffleConvs_1_Downs_15_ce1;
reg ShuffleConvs_1_Downs_15_we1;
reg[9:0] ShuffleConvs_1_Downs_14_address0;
reg ShuffleConvs_1_Downs_14_ce0;
reg ShuffleConvs_1_Downs_14_we0;
reg[7:0] ShuffleConvs_1_Downs_14_d0;
reg ShuffleConvs_1_Downs_14_ce1;
reg ShuffleConvs_1_Downs_14_we1;
reg[9:0] ShuffleConvs_1_Downs_13_address0;
reg ShuffleConvs_1_Downs_13_ce0;
reg ShuffleConvs_1_Downs_13_we0;
reg[7:0] ShuffleConvs_1_Downs_13_d0;
reg ShuffleConvs_1_Downs_13_ce1;
reg ShuffleConvs_1_Downs_13_we1;
reg[9:0] ShuffleConvs_1_Downs_12_address0;
reg ShuffleConvs_1_Downs_12_ce0;
reg ShuffleConvs_1_Downs_12_we0;
reg[7:0] ShuffleConvs_1_Downs_12_d0;
reg ShuffleConvs_1_Downs_12_ce1;
reg ShuffleConvs_1_Downs_12_we1;
reg[9:0] ShuffleConvs_1_Downs_10_address0;
reg ShuffleConvs_1_Downs_10_ce0;
reg ShuffleConvs_1_Downs_10_we0;
reg[7:0] ShuffleConvs_1_Downs_10_d0;
reg ShuffleConvs_1_Downs_10_ce1;
reg ShuffleConvs_1_Downs_10_we1;
reg[9:0] ShuffleConvs_1_Downs_9_address0;
reg ShuffleConvs_1_Downs_9_ce0;
reg ShuffleConvs_1_Downs_9_we0;
reg[7:0] ShuffleConvs_1_Downs_9_d0;
reg ShuffleConvs_1_Downs_9_ce1;
reg ShuffleConvs_1_Downs_9_we1;
reg[9:0] ShuffleConvs_1_Downs_8_address0;
reg ShuffleConvs_1_Downs_8_ce0;
reg ShuffleConvs_1_Downs_8_we0;
reg[7:0] ShuffleConvs_1_Downs_8_d0;
reg ShuffleConvs_1_Downs_8_ce1;
reg ShuffleConvs_1_Downs_8_we1;
reg[9:0] ShuffleConvs_1_Downs_7_address0;
reg ShuffleConvs_1_Downs_7_ce0;
reg ShuffleConvs_1_Downs_7_we0;
reg[7:0] ShuffleConvs_1_Downs_7_d0;
reg ShuffleConvs_1_Downs_7_ce1;
reg ShuffleConvs_1_Downs_7_we1;

(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten4_reg_1724;
reg   [5:0] co_reg_1735;
reg   [9:0] indvar_flatten_reg_1747;
reg   [4:0] h_reg_1758;
reg   [4:0] w_reg_1770;
reg   [13:0] indvar_flatten5_reg_1922;
reg   [5:0] co16_reg_1933;
reg   [9:0] indvar_flatten6_reg_1944;
reg   [4:0] h17_reg_1955;
reg   [4:0] w18_reg_1967;
reg   [7:0] reg_2069;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state54;
wire   [0:0] exitcond_flatten_fu_2079_p2;
reg   [0:0] exitcond_flatten_reg_4107;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_4107;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_4107;
wire   [13:0] indvar_flatten_next1_fu_2085_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten8_fu_2091_p2;
reg   [0:0] exitcond_flatten8_reg_4116;
wire   [9:0] indvar_flatten_next_fu_2103_p3;
wire   [5:0] co_cast_mid2_v_fu_2124_p3;
reg   [5:0] co_cast_mid2_v_reg_4129;
reg    ap_enable_reg_pp0_iter1;
reg   [5:0] ap_reg_pp0_iter2_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter3_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter4_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter5_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter6_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter7_co_cast_mid2_v_reg_4129;
reg   [5:0] ap_reg_pp0_iter8_co_cast_mid2_v_reg_4129;
wire   [4:0] w_mid2_fu_2165_p3;
reg   [4:0] w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter2_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter3_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter4_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter5_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter6_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter7_w_mid2_reg_4137;
reg   [4:0] ap_reg_pp0_iter8_w_mid2_reg_4137;
wire   [4:0] h_cast_mid2_fu_2173_p3;
reg   [4:0] h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter2_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter3_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter4_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter5_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter6_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter7_h_cast_mid2_reg_4143;
reg   [4:0] ap_reg_pp0_iter8_h_cast_mid2_reg_4143;
wire   [4:0] w_25_fu_2181_p2;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] tmp_528_reg_4154;
wire   [10:0] tmp_373_fu_2275_p2;
reg   [10:0] tmp_373_reg_4160;
wire   [10:0] h1_cast_cast_fu_2308_p1;
reg   [10:0] h1_cast_cast_reg_4173;
wire    ap_CS_fsm_state14;
wire   [9:0] tmp_376_fu_2336_p2;
reg   [9:0] tmp_376_reg_4178;
wire   [9:0] tmp_377_fu_2342_p2;
reg   [9:0] tmp_377_reg_4183;
wire   [14:0] w2_cast_cast4_fu_2354_p1;
reg   [14:0] w2_cast_cast4_reg_4191;
wire    ap_CS_fsm_state15;
reg   [9:0] ShuffleConvs_1_Downs_95_reg_4196;
reg   [9:0] ShuffleConvs_1_Downs_96_reg_4201;
reg   [9:0] ShuffleConvs_1_Downs_97_reg_4206;
reg   [9:0] ShuffleConvs_1_Downs_98_reg_4211;
reg   [9:0] ShuffleConvs_1_Downs_99_reg_4216;
reg   [9:0] ShuffleConvs_1_Downs_100_reg_4221;
reg   [9:0] ShuffleConvs_1_Downs_101_reg_4226;
reg   [9:0] ShuffleConvs_1_Downs_102_reg_4231;
reg   [9:0] ShuffleConvs_1_Downs_103_reg_4236;
reg   [9:0] ShuffleConvs_1_Downs_104_reg_4241;
reg   [9:0] ShuffleConvs_1_Downs_105_reg_4246;
reg   [9:0] ShuffleConvs_1_Downs_106_reg_4251;
wire   [4:0] h_9_fu_2398_p2;
wire   [0:0] exitcond31_fu_2392_p2;
reg   [13:0] input_V_addr_reg_4264;
wire    ap_CS_fsm_state16;
reg   [6:0] weight_0_V_addr_reg_4269;
reg   [6:0] weight_0_V_addr_8_reg_4274;
reg   [6:0] weight_1_V_addr_reg_4279;
reg   [6:0] weight_1_V_addr_8_reg_4284;
reg   [6:0] weight_2_V_addr_reg_4289;
reg   [6:0] weight_2_V_addr_8_reg_4294;
reg   [6:0] weight_3_V_addr_reg_4299;
reg   [6:0] weight_3_V_addr_8_reg_4304;
reg   [6:0] weight_4_V_addr_reg_4309;
reg   [6:0] weight_4_V_addr_8_reg_4314;
reg   [6:0] weight_5_V_addr_reg_4319;
reg   [6:0] weight_5_V_addr_8_reg_4324;
wire   [5:0] ci_9_fu_2511_p2;
reg   [5:0] ci_9_reg_4332;
wire   [4:0] w_26_fu_2517_p2;
wire   [0:0] exitcond34_fu_2505_p2;
reg   [7:0] ShuffleConvs_1_Downs_107_reg_4342;
wire    ap_CS_fsm_state21;
reg   [7:0] ShuffleConvs_1_Downs_109_reg_4347;
reg   [7:0] ShuffleConvs_1_Downs_111_reg_4352;
reg   [7:0] ShuffleConvs_1_Downs_113_reg_4357;
reg   [7:0] ShuffleConvs_1_Downs_115_reg_4362;
reg   [7:0] ShuffleConvs_1_Downs_117_reg_4367;
wire   [15:0] grp_MUL_DP_fu_1979_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1979_ap_return_1;
reg   [15:0] MUL_DP_ret118_reg_4372_1;
wire    ap_CS_fsm_state22;
wire   [15:0] grp_MUL_DP_fu_1988_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1988_ap_return_1;
reg   [15:0] MUL_DP_ret119_reg_4377_1;
wire   [15:0] grp_MUL_DP_fu_1997_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1997_ap_return_1;
reg   [15:0] MUL_DP_ret120_reg_4382_1;
wire   [15:0] grp_MUL_DP_fu_2006_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2006_ap_return_1;
reg   [15:0] MUL_DP_ret121_reg_4387_1;
wire   [15:0] grp_MUL_DP_fu_2015_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2015_ap_return_1;
reg   [15:0] MUL_DP_ret122_reg_4392_1;
wire   [15:0] grp_MUL_DP_fu_2024_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2024_ap_return_1;
reg   [15:0] MUL_DP_ret123_reg_4397_1;
wire   [7:0] tmp_35_fu_2614_p2;
reg   [7:0] tmp_35_reg_4402;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_58_1_fu_2627_p2;
reg   [7:0] tmp_58_1_reg_4407;
wire   [7:0] tmp_58_2_fu_2640_p2;
reg   [7:0] tmp_58_2_reg_4412;
wire   [7:0] tmp_58_3_fu_2653_p2;
reg   [7:0] tmp_58_3_reg_4417;
wire   [7:0] tmp_58_4_fu_2666_p2;
reg   [7:0] tmp_58_4_reg_4422;
wire   [7:0] tmp_58_5_fu_2679_p2;
reg   [7:0] tmp_58_5_reg_4427;
wire   [10:0] h4_cast_cast_fu_2685_p1;
reg   [10:0] h4_cast_cast_reg_4432;
wire    ap_CS_fsm_state26;
wire   [9:0] tmp_380_fu_2713_p2;
reg   [9:0] tmp_380_reg_4437;
wire   [9:0] tmp_381_fu_2719_p2;
reg   [9:0] tmp_381_reg_4442;
wire   [14:0] w5_cast_cast4_fu_2731_p1;
reg   [14:0] w5_cast_cast4_reg_4450;
wire    ap_CS_fsm_state27;
reg   [9:0] ShuffleConvs_1_Downs_119_reg_4455;
reg   [9:0] ShuffleConvs_1_Downs_120_reg_4460;
reg   [9:0] ShuffleConvs_1_Downs_121_reg_4465;
reg   [9:0] ShuffleConvs_1_Downs_122_reg_4470;
reg   [9:0] ShuffleConvs_1_Downs_123_reg_4475;
reg   [9:0] ShuffleConvs_1_Downs_124_reg_4480;
reg   [9:0] ShuffleConvs_1_Downs_125_reg_4485;
reg   [9:0] ShuffleConvs_1_Downs_126_reg_4490;
reg   [9:0] ShuffleConvs_1_Downs_127_reg_4495;
reg   [9:0] ShuffleConvs_1_Downs_128_reg_4500;
reg   [9:0] ShuffleConvs_1_Downs_129_reg_4505;
reg   [9:0] ShuffleConvs_1_Downs_130_reg_4510;
wire   [4:0] h_1_fu_2775_p2;
wire   [0:0] exitcond33_fu_2769_p2;
reg   [13:0] input_V_addr_5_reg_4523;
wire    ap_CS_fsm_state28;
reg   [6:0] weight_6_V_addr_reg_4528;
reg   [6:0] weight_6_V_addr_8_reg_4533;
reg   [6:0] weight_7_V_addr_reg_4538;
reg   [6:0] weight_7_V_addr_8_reg_4543;
reg   [6:0] weight_8_V_addr_reg_4548;
reg   [6:0] weight_8_V_addr_8_reg_4553;
reg   [6:0] weight_9_V_addr_reg_4558;
reg   [6:0] weight_9_V_addr_8_reg_4563;
reg   [6:0] weight_10_V_addr_reg_4568;
reg   [6:0] weight_10_V_addr_8_reg_4573;
reg   [6:0] weight_11_V_addr_reg_4578;
reg   [6:0] weight_11_V_addr_8_reg_4583;
wire   [5:0] ci_10_fu_2888_p2;
reg   [5:0] ci_10_reg_4591;
wire   [4:0] w_27_fu_2894_p2;
wire   [0:0] exitcond37_fu_2882_p2;
reg   [7:0] ShuffleConvs_1_Downs_131_reg_4601;
wire    ap_CS_fsm_state33;
reg   [7:0] ShuffleConvs_1_Downs_133_reg_4606;
reg   [7:0] ShuffleConvs_1_Downs_135_reg_4611;
reg   [7:0] ShuffleConvs_1_Downs_137_reg_4616;
reg   [7:0] ShuffleConvs_1_Downs_139_reg_4621;
reg   [7:0] ShuffleConvs_1_Downs_141_reg_4626;
reg   [15:0] MUL_DP_ret124_reg_4631_1;
wire    ap_CS_fsm_state34;
reg   [15:0] MUL_DP_ret125_reg_4636_1;
reg   [15:0] MUL_DP_ret126_reg_4641_1;
reg   [15:0] MUL_DP_ret127_reg_4646_1;
reg   [15:0] MUL_DP_ret128_reg_4651_1;
reg   [15:0] MUL_DP_ret129_reg_4656_1;
wire   [7:0] tmp_39_fu_2991_p2;
reg   [7:0] tmp_39_reg_4661;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_63_1_fu_3004_p2;
reg   [7:0] tmp_63_1_reg_4666;
wire   [7:0] tmp_63_2_fu_3017_p2;
reg   [7:0] tmp_63_2_reg_4671;
wire   [7:0] tmp_63_3_fu_3030_p2;
reg   [7:0] tmp_63_3_reg_4676;
wire   [7:0] tmp_63_4_fu_3043_p2;
reg   [7:0] tmp_63_4_reg_4681;
wire   [7:0] tmp_63_5_fu_3056_p2;
reg   [7:0] tmp_63_5_reg_4686;
wire   [10:0] h8_cast8_cast_fu_3062_p1;
reg   [10:0] h8_cast8_cast_reg_4691;
wire    ap_CS_fsm_state38;
wire   [9:0] tmp_386_fu_3090_p2;
reg   [9:0] tmp_386_reg_4696;
wire   [9:0] tmp_387_fu_3096_p2;
reg   [9:0] tmp_387_reg_4701;
wire   [14:0] w9_cast7_cast1_fu_3108_p1;
reg   [14:0] w9_cast7_cast1_reg_4709;
wire    ap_CS_fsm_state39;
reg   [9:0] ShuffleConvs_1_Downs_143_reg_4714;
reg   [9:0] ShuffleConvs_1_Downs_144_reg_4719;
reg   [9:0] ShuffleConvs_1_Downs_145_reg_4724;
reg   [9:0] ShuffleConvs_1_Downs_146_reg_4729;
reg   [9:0] ShuffleConvs_1_Downs_147_reg_4734;
reg   [9:0] ShuffleConvs_1_Downs_148_reg_4739;
reg   [9:0] ShuffleConvs_1_Downs_149_reg_4744;
reg   [9:0] ShuffleConvs_1_Downs_150_reg_4749;
reg   [9:0] ShuffleConvs_1_Downs_151_reg_4754;
reg   [9:0] ShuffleConvs_1_Downs_152_reg_4759;
reg   [9:0] ShuffleConvs_1_Downs_153_reg_4764;
reg   [9:0] ShuffleConvs_1_Downs_154_reg_4769;
wire   [4:0] h_2_fu_3152_p2;
wire   [0:0] exitcond36_fu_3146_p2;
reg   [13:0] input_V_addr_6_reg_4782;
wire    ap_CS_fsm_state40;
reg   [6:0] weight_12_V_addr_reg_4787;
reg   [6:0] weight_12_V_addr_8_reg_4792;
reg   [6:0] weight_13_V_addr_reg_4797;
reg   [6:0] weight_13_V_addr_8_reg_4802;
reg   [6:0] weight_14_V_addr_reg_4807;
reg   [6:0] weight_14_V_addr_8_reg_4812;
reg   [6:0] weight_15_V_addr_reg_4817;
reg   [6:0] weight_15_V_addr_8_reg_4822;
reg   [6:0] weight_16_V_addr_reg_4827;
reg   [6:0] weight_16_V_addr_8_reg_4832;
reg   [6:0] weight_17_V_addr_reg_4837;
reg   [6:0] weight_17_V_addr_8_reg_4842;
wire   [5:0] ci_11_fu_3265_p2;
reg   [5:0] ci_11_reg_4850;
wire   [4:0] w_28_fu_3271_p2;
wire   [0:0] exitcond39_fu_3259_p2;
reg   [7:0] ShuffleConvs_1_Downs_155_reg_4860;
wire    ap_CS_fsm_state45;
reg   [7:0] ShuffleConvs_1_Downs_157_reg_4865;
reg   [7:0] ShuffleConvs_1_Downs_159_reg_4870;
reg   [7:0] ShuffleConvs_1_Downs_161_reg_4875;
reg   [7:0] ShuffleConvs_1_Downs_163_reg_4880;
reg   [7:0] ShuffleConvs_1_Downs_165_reg_4885;
reg   [15:0] MUL_DP_ret130_reg_4890_1;
wire    ap_CS_fsm_state46;
reg   [15:0] MUL_DP_ret131_reg_4895_1;
reg   [15:0] MUL_DP_ret132_reg_4900_1;
reg   [15:0] MUL_DP_ret133_reg_4905_1;
reg   [15:0] MUL_DP_ret134_reg_4910_1;
reg   [15:0] MUL_DP_ret135_reg_4915_1;
wire   [7:0] tmp_43_fu_3368_p2;
reg   [7:0] tmp_43_reg_4920;
wire    ap_CS_fsm_state48;
wire   [7:0] tmp_68_1_fu_3381_p2;
reg   [7:0] tmp_68_1_reg_4925;
wire   [7:0] tmp_68_2_fu_3394_p2;
reg   [7:0] tmp_68_2_reg_4930;
wire   [7:0] tmp_68_3_fu_3407_p2;
reg   [7:0] tmp_68_3_reg_4935;
wire   [7:0] tmp_68_4_fu_3420_p2;
reg   [7:0] tmp_68_4_reg_4940;
wire   [7:0] tmp_68_5_fu_3433_p2;
reg   [7:0] tmp_68_5_reg_4945;
wire   [10:0] h12_cast5_cast_fu_3439_p1;
reg   [10:0] h12_cast5_cast_reg_4950;
wire    ap_CS_fsm_state50;
wire   [9:0] tmp_399_fu_3467_p2;
reg   [9:0] tmp_399_reg_4955;
wire   [9:0] tmp_400_fu_3473_p2;
reg   [9:0] tmp_400_reg_4960;
wire   [0:0] exitcond35_fu_3479_p2;
wire   [14:0] w13_cast4_cast1_fu_3485_p1;
reg   [14:0] w13_cast4_cast1_reg_4969;
wire    ap_CS_fsm_state51;
reg   [9:0] ShuffleConvs_1_Downs_167_reg_4974;
reg   [9:0] ShuffleConvs_1_Downs_168_reg_4979;
reg   [9:0] ShuffleConvs_1_Downs_169_reg_4984;
reg   [9:0] ShuffleConvs_1_Downs_170_reg_4989;
reg   [9:0] ShuffleConvs_1_Downs_171_reg_4994;
reg   [9:0] ShuffleConvs_1_Downs_172_reg_4999;
reg   [9:0] ShuffleConvs_1_Downs_173_reg_5004;
reg   [9:0] ShuffleConvs_1_Downs_174_reg_5009;
reg   [9:0] ShuffleConvs_1_Downs_175_reg_5014;
reg   [9:0] ShuffleConvs_1_Downs_176_reg_5019;
reg   [9:0] ShuffleConvs_1_Downs_177_reg_5024;
reg   [9:0] ShuffleConvs_1_Downs_178_reg_5029;
wire   [4:0] h_4_fu_3529_p2;
wire   [0:0] exitcond38_fu_3523_p2;
reg   [13:0] input_V_addr_7_reg_5042;
wire    ap_CS_fsm_state52;
reg   [6:0] weight_18_V_addr_reg_5047;
reg   [6:0] weight_18_V_addr_8_reg_5052;
reg   [6:0] weight_19_V_addr_reg_5057;
reg   [6:0] weight_19_V_addr_8_reg_5062;
reg   [6:0] weight_20_V_addr_reg_5067;
reg   [6:0] weight_20_V_addr_8_reg_5072;
reg   [6:0] weight_21_V_addr_reg_5077;
reg   [6:0] weight_21_V_addr_8_reg_5082;
reg   [6:0] weight_22_V_addr_reg_5087;
reg   [6:0] weight_22_V_addr_8_reg_5092;
reg   [6:0] weight_23_V_addr_reg_5097;
reg   [6:0] weight_23_V_addr_8_reg_5102;
wire   [5:0] ci_13_fu_3642_p2;
reg   [5:0] ci_13_reg_5110;
wire   [4:0] w_29_fu_3648_p2;
wire   [0:0] exitcond41_fu_3636_p2;
reg   [7:0] ShuffleConvs_1_Downs_179_reg_5120;
wire    ap_CS_fsm_state57;
reg   [7:0] ShuffleConvs_1_Downs_181_reg_5125;
reg   [7:0] ShuffleConvs_1_Downs_183_reg_5130;
reg   [7:0] ShuffleConvs_1_Downs_185_reg_5135;
reg   [7:0] ShuffleConvs_1_Downs_187_reg_5140;
reg   [7:0] ShuffleConvs_1_Downs_189_reg_5145;
reg   [15:0] MUL_DP_ret136_reg_5150_1;
wire    ap_CS_fsm_state58;
reg   [15:0] MUL_DP_ret137_reg_5155_1;
reg   [15:0] MUL_DP_ret138_reg_5160_1;
reg   [15:0] MUL_DP_ret139_reg_5165_1;
reg   [15:0] MUL_DP_ret140_reg_5170_1;
reg   [15:0] MUL_DP_ret_reg_5175_1;
wire   [7:0] tmp_47_fu_3745_p2;
reg   [7:0] tmp_47_reg_5180;
wire    ap_CS_fsm_state60;
wire   [7:0] tmp_74_1_fu_3758_p2;
reg   [7:0] tmp_74_1_reg_5185;
wire   [7:0] tmp_74_2_fu_3771_p2;
reg   [7:0] tmp_74_2_reg_5190;
wire   [7:0] tmp_74_3_fu_3784_p2;
reg   [7:0] tmp_74_3_reg_5195;
wire   [7:0] tmp_74_4_fu_3797_p2;
reg   [7:0] tmp_74_4_reg_5200;
wire   [7:0] tmp_74_5_fu_3810_p2;
reg   [7:0] tmp_74_5_reg_5205;
wire   [0:0] exitcond_flatten9_fu_3816_p2;
reg   [0:0] exitcond_flatten9_reg_5210;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state62_pp1_stage0_iter0;
wire    ap_block_state63_pp1_stage0_iter1;
wire    ap_block_state64_pp1_stage0_iter2;
wire    ap_block_state65_pp1_stage0_iter3;
wire    ap_block_state66_pp1_stage0_iter4;
wire    ap_block_state67_pp1_stage0_iter5;
wire    ap_block_state68_pp1_stage0_iter6;
wire    ap_block_state69_pp1_stage0_iter7;
wire    ap_block_state70_pp1_stage0_iter8;
wire    ap_block_state71_pp1_stage0_iter9;
wire    ap_block_state72_pp1_stage0_iter10;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter3_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter4_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter5_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter6_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter7_exitcond_flatten9_reg_5210;
reg   [0:0] ap_reg_pp1_iter8_exitcond_flatten9_reg_5210;
wire   [13:0] indvar_flatten_next1_4_fu_3822_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten10_fu_3834_p2;
reg   [0:0] exitcond_flatten10_reg_5219;
wire   [5:0] arrayNo_mid2_v_fu_3840_p3;
reg   [5:0] arrayNo_mid2_v_reg_5226;
wire   [9:0] indvar_flatten_next1_3_fu_3854_p3;
reg   [2:0] tmp_560_reg_5238;
wire   [4:0] w18_mid2_fu_3921_p3;
reg   [4:0] w18_mid2_reg_5244;
wire   [4:0] h17_cast2_mid2_fu_3929_p3;
reg   [4:0] h17_cast2_mid2_reg_5250;
reg    ap_enable_reg_pp1_iter1;
wire   [10:0] tmp_425_fu_4003_p2;
reg   [10:0] tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter3_tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter4_tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter5_tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter6_tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter7_tmp_425_reg_5256;
reg   [10:0] ap_reg_pp1_iter8_tmp_425_reg_5256;
wire   [4:0] w_30_fu_4009_p2;
reg    ap_enable_reg_pp1_iter2;
reg   [9:0] ShuffleConvs_1_Downs_191_reg_5266;
reg   [9:0] ShuffleConvs_1_Downs_192_reg_5272;
reg   [9:0] ShuffleConvs_1_Downs_193_reg_5278;
reg   [9:0] ShuffleConvs_1_Downs_194_reg_5284;
reg   [9:0] ShuffleConvs_1_Downs_195_reg_5290;
reg   [9:0] ShuffleConvs_1_Downs_196_reg_5296;
reg   [9:0] ShuffleConvs_1_Downs_197_reg_5302;
reg   [9:0] ShuffleConvs_1_Downs_198_reg_5308;
reg   [9:0] ShuffleConvs_1_Downs_199_reg_5314;
reg   [9:0] ShuffleConvs_1_Downs_200_reg_5320;
reg   [9:0] ShuffleConvs_1_Downs_201_reg_5326;
reg   [9:0] ShuffleConvs_1_Downs_202_reg_5332;
reg   [9:0] ShuffleConvs_1_Downs_203_reg_5338;
reg   [9:0] ShuffleConvs_1_Downs_204_reg_5344;
reg   [9:0] ShuffleConvs_1_Downs_205_reg_5350;
reg   [9:0] ShuffleConvs_1_Downs_206_reg_5356;
reg   [9:0] ShuffleConvs_1_Downs_207_reg_5362;
reg   [9:0] ShuffleConvs_1_Downs_208_reg_5368;
reg   [9:0] ShuffleConvs_1_Downs_209_reg_5374;
reg   [9:0] ShuffleConvs_1_Downs_210_reg_5380;
reg   [9:0] ShuffleConvs_1_Downs_211_reg_5386;
reg   [9:0] ShuffleConvs_1_Downs_212_reg_5392;
reg   [9:0] ShuffleConvs_1_Downs_213_reg_5398;
reg   [9:0] ShuffleConvs_1_Downs_214_reg_5404;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state62;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg   [7:0] grp_MUL_DP_fu_1979_a_V;
reg   [7:0] grp_MUL_DP_fu_1979_b_V;
reg    grp_MUL_DP_fu_1979_ap_ce;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
reg   [7:0] grp_MUL_DP_fu_1988_a_V;
reg   [7:0] grp_MUL_DP_fu_1988_b_V;
reg    grp_MUL_DP_fu_1988_ap_ce;
reg   [7:0] grp_MUL_DP_fu_1997_a_V;
reg   [7:0] grp_MUL_DP_fu_1997_b_V;
reg    grp_MUL_DP_fu_1997_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2006_a_V;
reg   [7:0] grp_MUL_DP_fu_2006_b_V;
reg    grp_MUL_DP_fu_2006_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2015_a_V;
reg   [7:0] grp_MUL_DP_fu_2015_b_V;
reg    grp_MUL_DP_fu_2015_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2024_a_V;
reg   [7:0] grp_MUL_DP_fu_2024_b_V;
reg    grp_MUL_DP_fu_2024_ap_ce;
reg   [5:0] co_phi_fu_1739_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [4:0] h_phi_fu_1762_p4;
reg   [4:0] w_phi_fu_1774_p4;
reg   [4:0] h1_reg_1782;
wire    ap_CS_fsm_state13;
reg   [4:0] w2_reg_1794;
wire   [0:0] exitcond29_fu_2348_p2;
reg   [5:0] ci_reg_1806;
wire    ap_CS_fsm_state25;
reg   [4:0] h4_reg_1817;
reg   [4:0] w5_reg_1829;
wire   [0:0] exitcond30_fu_2725_p2;
reg   [5:0] ci6_reg_1841;
wire    ap_CS_fsm_state37;
reg   [4:0] h8_reg_1852;
reg   [4:0] w9_reg_1864;
wire   [0:0] exitcond32_fu_3102_p2;
reg   [5:0] ci10_reg_1876;
wire    ap_CS_fsm_state49;
reg   [4:0] h12_reg_1887;
reg   [4:0] w13_reg_1899;
reg   [5:0] ci12_reg_1911;
wire    ap_CS_fsm_state61;
reg   [5:0] co16_phi_fu_1937_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [4:0] h17_phi_fu_1959_p4;
reg   [4:0] w18_phi_fu_1971_p4;
wire   [31:0] co_cast_mid2_fu_2205_p1;
wire   [31:0] tmp_428_cast_fu_2281_p1;
wire   [31:0] tmp_437_cast_fu_2367_p1;
wire   [31:0] tmp_438_cast_fu_2382_p1;
wire   [31:0] tmp_452_cast_fu_2484_p1;
wire   [31:0] ci_cast_fu_2404_p1;
wire   [31:0] tmp_453_cast_fu_2495_p1;
wire   [31:0] tmp_443_cast_fu_2744_p1;
wire   [31:0] tmp_444_cast_fu_2759_p1;
wire   [31:0] tmp_467_cast_fu_2861_p1;
wire   [31:0] ci6_cast9_fu_2781_p1;
wire   [31:0] tmp_468_cast_fu_2872_p1;
wire   [31:0] tmp_458_cast_fu_3121_p1;
wire   [31:0] tmp_459_cast_fu_3136_p1;
wire   [31:0] tmp_478_cast_fu_3238_p1;
wire   [31:0] ci10_cast6_fu_3158_p1;
wire   [31:0] tmp_479_cast_fu_3249_p1;
wire   [31:0] tmp_469_cast_fu_3498_p1;
wire   [31:0] tmp_470_cast_fu_3513_p1;
wire   [31:0] tmp_498_cast_fu_3615_p1;
wire   [31:0] ci12_cast3_fu_3535_p1;
wire   [31:0] tmp_499_cast_fu_3626_p1;
wire   [31:0] tmp_490_cast_fu_4014_p1;
wire   [5:0] grp_fu_2131_p2;
wire   [7:0] tmp_72_4_fu_3718_p2;
wire    ap_CS_fsm_state59;
wire   [0:0] tmp_565_fu_4099_p3;
wire   [5:0] grp_fu_3869_p2;
wire   [7:0] tmp_72_3_fu_3704_p2;
wire   [7:0] tmp_72_2_fu_3690_p2;
wire   [7:0] tmp_72_1_fu_3676_p2;
wire   [7:0] tmp_45_fu_3662_p2;
wire   [7:0] tmp_66_5_fu_3355_p2;
wire    ap_CS_fsm_state47;
wire   [7:0] tmp_66_4_fu_3341_p2;
wire   [7:0] tmp_66_3_fu_3327_p2;
wire   [7:0] tmp_66_2_fu_3313_p2;
wire   [7:0] tmp_66_1_fu_3299_p2;
wire   [7:0] tmp_41_fu_3285_p2;
wire   [7:0] tmp_61_5_fu_2978_p2;
wire    ap_CS_fsm_state35;
wire   [7:0] tmp_61_4_fu_2964_p2;
wire   [7:0] tmp_61_3_fu_2950_p2;
wire   [7:0] tmp_61_2_fu_2936_p2;
wire   [7:0] tmp_61_1_fu_2922_p2;
wire   [7:0] tmp_37_fu_2908_p2;
wire   [7:0] tmp_56_5_fu_2601_p2;
wire    ap_CS_fsm_state23;
wire   [7:0] tmp_56_4_fu_2587_p2;
wire   [7:0] tmp_56_3_fu_2573_p2;
wire   [7:0] tmp_56_2_fu_2559_p2;
wire   [7:0] tmp_56_1_fu_2545_p2;
wire   [7:0] tmp_33_fu_2531_p2;
wire   [7:0] tmp_72_5_fu_3732_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state53;
wire   [9:0] indvar_flatten_op_fu_2097_p2;
wire   [5:0] co_20_fu_2111_p2;
wire   [5:0] grp_fu_2131_p0;
wire   [0:0] exitcond_fu_2142_p2;
wire   [0:0] not_exitcond_flatten_fu_2137_p2;
wire   [4:0] h_mid_fu_2117_p3;
wire   [0:0] exitcond54_mid_fu_2148_p2;
wire   [0:0] tmp_370_fu_2160_p2;
wire   [4:0] h_21_fu_2154_p2;
wire   [5:0] mul_fu_2189_p1;
wire   [13:0] mul_fu_2189_p2;
wire   [6:0] tmp_529_fu_2209_p3;
wire  signed [9:0] tmp_s_fu_2216_p1;
wire   [3:0] tmp_530_fu_2224_p3;
wire  signed [6:0] tmp_368_fu_2231_p1;
wire   [10:0] p_shl2_cast_fu_2220_p1;
wire   [10:0] p_shl3_cast_fu_2235_p1;
wire   [10:0] h_cast_mid2_cast_fu_2245_p1;
wire   [10:0] tmp_369_fu_2239_p2;
wire   [10:0] tmp_371_fu_2248_p2;
wire   [10:0] tmp_531_fu_2254_p2;
wire   [10:0] tmp_532_fu_2260_p2;
wire   [10:0] w_cast_cast_fu_2272_p1;
wire   [10:0] tmp_372_fu_2266_p2;
wire   [8:0] tmp_374_fu_2312_p3;
wire   [5:0] tmp_375_fu_2324_p3;
wire   [9:0] p_shl5_cast_fu_2332_p1;
wire   [9:0] p_shl4_cast_fu_2320_p1;
wire   [9:0] w2_cast_cast_fu_2358_p1;
wire   [9:0] tmp_382_fu_2362_p2;
wire   [9:0] tmp_383_fu_2377_p2;
wire   [9:0] tmp_390_fu_2418_p3;
wire   [6:0] tmp_391_fu_2430_p3;
wire   [10:0] p_shl8_cast_fu_2426_p1;
wire   [10:0] p_shl9_cast_fu_2438_p1;
wire   [10:0] tmp_392_fu_2442_p2;
wire   [10:0] tmp_393_fu_2448_p2;
wire   [11:0] tmp_533_fu_2461_p3;
wire   [14:0] p_shl6_cast_fu_2453_p3;
wire   [14:0] p_shl7_cast_fu_2469_p1;
wire   [14:0] tmp_394_fu_2473_p2;
wire   [14:0] tmp_395_fu_2479_p2;
wire   [6:0] ci_cast_cast_fu_2414_p1;
wire   [6:0] tmp_396_fu_2489_p2;
wire   [7:0] tmp_534_fu_2527_p1;
wire   [7:0] tmp_536_fu_2541_p1;
wire   [7:0] tmp_538_fu_2555_p1;
wire   [7:0] tmp_540_fu_2569_p1;
wire   [7:0] tmp_542_fu_2583_p1;
wire   [7:0] tmp_544_fu_2597_p1;
wire   [7:0] tmp_535_fu_2610_p1;
wire   [7:0] tmp_537_fu_2623_p1;
wire   [7:0] tmp_539_fu_2636_p1;
wire   [7:0] tmp_541_fu_2649_p1;
wire   [7:0] tmp_543_fu_2662_p1;
wire   [7:0] tmp_545_fu_2675_p1;
wire   [8:0] tmp_378_fu_2689_p3;
wire   [5:0] tmp_379_fu_2701_p3;
wire   [9:0] p_shl11_cast_fu_2709_p1;
wire   [9:0] p_shl10_cast_fu_2697_p1;
wire   [9:0] w5_cast_cast_fu_2735_p1;
wire   [9:0] tmp_388_fu_2739_p2;
wire   [9:0] tmp_389_fu_2754_p2;
wire   [9:0] tmp_403_fu_2795_p3;
wire   [6:0] tmp_404_fu_2807_p3;
wire   [10:0] p_shl14_cast_fu_2803_p1;
wire   [10:0] p_shl15_cast_fu_2815_p1;
wire   [10:0] tmp_405_fu_2819_p2;
wire   [10:0] tmp_406_fu_2825_p2;
wire   [11:0] tmp_546_fu_2838_p3;
wire   [14:0] p_shl12_cast_fu_2830_p3;
wire   [14:0] p_shl13_cast_fu_2846_p1;
wire   [14:0] tmp_407_fu_2850_p2;
wire   [14:0] tmp_408_fu_2856_p2;
wire   [6:0] ci6_cast9_cast_fu_2791_p1;
wire   [6:0] tmp_409_fu_2866_p2;
wire   [7:0] tmp_547_fu_2904_p1;
wire   [7:0] tmp_549_fu_2918_p1;
wire   [7:0] tmp_551_fu_2932_p1;
wire   [7:0] tmp_553_fu_2946_p1;
wire   [7:0] tmp_555_fu_2960_p1;
wire   [7:0] tmp_557_fu_2974_p1;
wire   [7:0] tmp_548_fu_2987_p1;
wire   [7:0] tmp_550_fu_3000_p1;
wire   [7:0] tmp_552_fu_3013_p1;
wire   [7:0] tmp_554_fu_3026_p1;
wire   [7:0] tmp_556_fu_3039_p1;
wire   [7:0] tmp_558_fu_3052_p1;
wire   [8:0] tmp_384_fu_3066_p3;
wire   [5:0] tmp_385_fu_3078_p3;
wire   [9:0] p_shl17_cast_fu_3086_p1;
wire   [9:0] p_shl16_cast_fu_3074_p1;
wire   [9:0] w9_cast7_cast_fu_3112_p1;
wire   [9:0] tmp_401_fu_3116_p2;
wire   [9:0] tmp_402_fu_3131_p2;
wire   [9:0] tmp_412_fu_3172_p3;
wire   [6:0] tmp_413_fu_3184_p3;
wire   [10:0] p_shl20_cast_fu_3180_p1;
wire   [10:0] p_shl21_cast_fu_3192_p1;
wire   [10:0] tmp_414_fu_3196_p2;
wire   [10:0] tmp_415_fu_3202_p2;
wire   [11:0] tmp_559_fu_3215_p3;
wire   [14:0] p_shl18_cast_fu_3207_p3;
wire   [14:0] p_shl19_cast_fu_3223_p1;
wire   [14:0] tmp_416_fu_3227_p2;
wire   [14:0] tmp_417_fu_3233_p2;
wire   [6:0] ci10_cast6_cast_fu_3168_p1;
wire   [6:0] tmp_418_fu_3243_p2;
wire   [7:0] tmp_566_fu_3281_p1;
wire   [7:0] tmp_568_fu_3295_p1;
wire   [7:0] tmp_570_fu_3309_p1;
wire   [7:0] tmp_572_fu_3323_p1;
wire   [7:0] tmp_574_fu_3337_p1;
wire   [7:0] tmp_576_fu_3351_p1;
wire   [7:0] tmp_567_fu_3364_p1;
wire   [7:0] tmp_569_fu_3377_p1;
wire   [7:0] tmp_571_fu_3390_p1;
wire   [7:0] tmp_573_fu_3403_p1;
wire   [7:0] tmp_575_fu_3416_p1;
wire   [7:0] tmp_577_fu_3429_p1;
wire   [8:0] tmp_397_fu_3443_p3;
wire   [5:0] tmp_398_fu_3455_p3;
wire   [9:0] p_shl23_cast_fu_3463_p1;
wire   [9:0] p_shl22_cast_fu_3451_p1;
wire   [9:0] w13_cast4_cast_fu_3489_p1;
wire   [9:0] tmp_410_fu_3493_p2;
wire   [9:0] tmp_411_fu_3508_p2;
wire   [9:0] tmp_426_fu_3549_p3;
wire   [6:0] tmp_427_fu_3561_p3;
wire   [10:0] p_shl26_cast_fu_3557_p1;
wire   [10:0] p_shl27_cast_fu_3569_p1;
wire   [10:0] tmp_428_fu_3573_p2;
wire   [10:0] tmp_429_fu_3579_p2;
wire   [11:0] tmp_578_fu_3592_p3;
wire   [14:0] p_shl24_cast_fu_3584_p3;
wire   [14:0] p_shl25_cast_fu_3600_p1;
wire   [14:0] tmp_430_fu_3604_p2;
wire   [14:0] tmp_431_fu_3610_p2;
wire   [6:0] ci12_cast3_cast_fu_3545_p1;
wire   [6:0] tmp_432_fu_3620_p2;
wire   [7:0] tmp_579_fu_3658_p1;
wire   [7:0] tmp_581_fu_3672_p1;
wire   [7:0] tmp_583_fu_3686_p1;
wire   [7:0] tmp_585_fu_3700_p1;
wire   [7:0] tmp_587_fu_3714_p1;
wire   [7:0] tmp_589_fu_3728_p1;
wire   [7:0] tmp_580_fu_3741_p1;
wire   [7:0] tmp_582_fu_3754_p1;
wire   [7:0] tmp_584_fu_3767_p1;
wire   [7:0] tmp_586_fu_3780_p1;
wire   [7:0] tmp_588_fu_3793_p1;
wire   [7:0] tmp_590_fu_3806_p1;
wire   [5:0] co_21_fu_3828_p2;
wire   [9:0] indvar_flatten21_op_fu_3848_p2;
wire   [5:0] mul4_fu_3877_p1;
wire   [13:0] mul4_fu_3877_p2;
wire   [0:0] exitcond40_fu_3898_p2;
wire   [0:0] not_exitcond_flatten_1_fu_3893_p2;
wire   [4:0] h17_mid_fu_3862_p3;
wire   [0:0] exitcond_mid_fu_3904_p2;
wire   [0:0] tmp_422_fu_3916_p2;
wire   [4:0] h_3_fu_3910_p2;
wire   [6:0] tmp_561_fu_3937_p3;
wire  signed [9:0] tmp_419_fu_3944_p1;
wire   [3:0] tmp_562_fu_3952_p3;
wire  signed [6:0] tmp_420_fu_3959_p1;
wire   [10:0] p_shl30_cast_fu_3948_p1;
wire   [10:0] p_shl31_cast_fu_3963_p1;
wire   [10:0] h17_cast2_mid2_cast_fu_3973_p1;
wire   [10:0] tmp_421_fu_3967_p2;
wire   [10:0] tmp_423_fu_3976_p2;
wire   [10:0] tmp_563_fu_3982_p2;
wire   [10:0] tmp_564_fu_3988_p2;
wire   [10:0] w18_cast1_cast_fu_4000_p1;
wire   [10:0] tmp_424_fu_3994_p2;
wire   [31:0] tmp_48_fu_4045_p25;
wire   [7:0] tmp_48_fu_4045_p26;
wire    ap_CS_fsm_state73;
reg   [52:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [13:0] mul4_fu_3877_p10;
wire   [13:0] mul_fu_2189_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_1979(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_1979_a_V),
    .b_V(grp_MUL_DP_fu_1979_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_1979_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1979_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1979_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1988(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_1988_a_V),
    .b_V(grp_MUL_DP_fu_1988_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_1988_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1988_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1988_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1997(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_1997_a_V),
    .b_V(grp_MUL_DP_fu_1997_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_1997_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1997_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1997_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2006(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2006_a_V),
    .b_V(grp_MUL_DP_fu_2006_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_2006_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2006_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2006_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2015(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2015_a_V),
    .b_V(grp_MUL_DP_fu_2015_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_2015_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2015_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2015_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2024(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2024_a_V),
    .b_V(grp_MUL_DP_fu_2024_b_V),
    .w_V(reg_2069),
    .ap_return_0(grp_MUL_DP_fu_2024_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2024_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2024_ap_ce)
);

ShuffleNetV2_uremfYi #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremfYi_U255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2131_p0),
    .din1(6'd24),
    .ce(1'b1),
    .dout(grp_fu_2131_p2)
);

ShuffleNetV2_uremfYi #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
ShuffleNetV2_uremfYi_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arrayNo_mid2_v_reg_5226),
    .din1(6'd24),
    .ce(1'b1),
    .dout(grp_fu_3869_p2)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_U257(
    .din1(ShuffleConvs_1_Downs_23_q0),
    .din2(ShuffleConvs_1_Downs_22_q0),
    .din3(ShuffleConvs_1_Downs_11_q0),
    .din4(ShuffleConvs_1_Downs_6_q0),
    .din5(ShuffleConvs_1_Downs_5_q0),
    .din6(ShuffleConvs_1_Downs_4_q0),
    .din7(ShuffleConvs_1_Downs_3_q0),
    .din8(ShuffleConvs_1_Downs_2_q0),
    .din9(ShuffleConvs_1_Downs_1_q0),
    .din10(ShuffleConvs_1_Downs_q0),
    .din11(ShuffleConvs_1_Downs_21_q0),
    .din12(ShuffleConvs_1_Downs_20_q0),
    .din13(ShuffleConvs_1_Downs_19_q0),
    .din14(ShuffleConvs_1_Downs_18_q0),
    .din15(ShuffleConvs_1_Downs_17_q0),
    .din16(ShuffleConvs_1_Downs_16_q0),
    .din17(ShuffleConvs_1_Downs_15_q0),
    .din18(ShuffleConvs_1_Downs_14_q0),
    .din19(ShuffleConvs_1_Downs_13_q0),
    .din20(ShuffleConvs_1_Downs_12_q0),
    .din21(ShuffleConvs_1_Downs_10_q0),
    .din22(ShuffleConvs_1_Downs_9_q0),
    .din23(ShuffleConvs_1_Downs_8_q0),
    .din24(ShuffleConvs_1_Downs_7_q0),
    .din25(tmp_48_fu_4045_p25),
    .dout(tmp_48_fu_4045_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state62))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state62)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state62 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end else if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
            ap_enable_reg_pp1_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'd0 == exitcond36_fu_3146_p2))) begin
        ci10_reg_1876 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ci10_reg_1876 <= ci_11_reg_4850;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (1'd0 == exitcond38_fu_3523_p2))) begin
        ci12_reg_1911 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        ci12_reg_1911 <= ci_13_reg_5110;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond33_fu_2769_p2))) begin
        ci6_reg_1841 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        ci6_reg_1841 <= ci_10_reg_4591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond31_fu_2392_p2))) begin
        ci_reg_1806 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        ci_reg_1806 <= ci_9_reg_4332;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
        co16_reg_1933 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        co16_reg_1933 <= arrayNo_mid2_v_reg_5226;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0))) begin
        co_reg_1735 <= co_cast_mid2_v_reg_4129;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_1735 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (1'd1 == exitcond32_fu_3102_p2))) begin
        h12_reg_1887 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond38_fu_3523_p2))) begin
        h12_reg_1887 <= h_4_fu_3529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
        h17_reg_1955 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h17_reg_1955 <= h17_cast2_mid2_reg_5250;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        h1_reg_1782 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond31_fu_2392_p2 == 1'd1))) begin
        h1_reg_1782 <= h_9_fu_2398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == exitcond29_fu_2348_p2))) begin
        h4_reg_1817 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond33_fu_2769_p2))) begin
        h4_reg_1817 <= h_1_fu_2775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond30_fu_2725_p2))) begin
        h8_reg_1852 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == exitcond36_fu_3146_p2))) begin
        h8_reg_1852 <= h_2_fu_3152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0))) begin
        h_reg_1758 <= h_cast_mid2_reg_4143;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_1758 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_2079_p2 == 1'd0))) begin
        indvar_flatten4_reg_1724 <= indvar_flatten_next1_fu_2085_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_1724 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
        indvar_flatten5_reg_1922 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_3816_p2))) begin
        indvar_flatten5_reg_1922 <= indvar_flatten_next1_4_fu_3822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
        indvar_flatten6_reg_1944 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_3816_p2))) begin
        indvar_flatten6_reg_1944 <= indvar_flatten_next1_3_fu_3854_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_2079_p2 == 1'd0))) begin
        indvar_flatten_reg_1747 <= indvar_flatten_next_fu_2103_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_1747 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd0 == exitcond35_fu_3479_p2))) begin
        w13_reg_1899 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state52) & (1'd1 == exitcond41_fu_3636_p2))) begin
        w13_reg_1899 <= w_29_fu_3648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
        w18_reg_1967 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w18_reg_1967 <= w_30_fu_4009_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond29_fu_2348_p2))) begin
        w2_reg_1794 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond34_fu_2505_p2))) begin
        w2_reg_1794 <= w_26_fu_2517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd0 == exitcond30_fu_2725_p2))) begin
        w5_reg_1829 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond37_fu_2882_p2))) begin
        w5_reg_1829 <= w_27_fu_2894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (1'd0 == exitcond32_fu_3102_p2))) begin
        w9_reg_1864 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == exitcond39_fu_3259_p2))) begin
        w9_reg_1864 <= w_28_fu_3271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0))) begin
        w_reg_1770 <= w_25_fu_2181_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_1770 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        MUL_DP_ret118_reg_4372_1 <= grp_MUL_DP_fu_1979_ap_return_1;
        MUL_DP_ret119_reg_4377_1 <= grp_MUL_DP_fu_1988_ap_return_1;
        MUL_DP_ret120_reg_4382_1 <= grp_MUL_DP_fu_1997_ap_return_1;
        MUL_DP_ret121_reg_4387_1 <= grp_MUL_DP_fu_2006_ap_return_1;
        MUL_DP_ret122_reg_4392_1 <= grp_MUL_DP_fu_2015_ap_return_1;
        MUL_DP_ret123_reg_4397_1 <= grp_MUL_DP_fu_2024_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        MUL_DP_ret124_reg_4631_1 <= grp_MUL_DP_fu_1979_ap_return_1;
        MUL_DP_ret125_reg_4636_1 <= grp_MUL_DP_fu_1988_ap_return_1;
        MUL_DP_ret126_reg_4641_1 <= grp_MUL_DP_fu_1997_ap_return_1;
        MUL_DP_ret127_reg_4646_1 <= grp_MUL_DP_fu_2006_ap_return_1;
        MUL_DP_ret128_reg_4651_1 <= grp_MUL_DP_fu_2015_ap_return_1;
        MUL_DP_ret129_reg_4656_1 <= grp_MUL_DP_fu_2024_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        MUL_DP_ret130_reg_4890_1 <= grp_MUL_DP_fu_1979_ap_return_1;
        MUL_DP_ret131_reg_4895_1 <= grp_MUL_DP_fu_1988_ap_return_1;
        MUL_DP_ret132_reg_4900_1 <= grp_MUL_DP_fu_1997_ap_return_1;
        MUL_DP_ret133_reg_4905_1 <= grp_MUL_DP_fu_2006_ap_return_1;
        MUL_DP_ret134_reg_4910_1 <= grp_MUL_DP_fu_2015_ap_return_1;
        MUL_DP_ret135_reg_4915_1 <= grp_MUL_DP_fu_2024_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        MUL_DP_ret136_reg_5150_1 <= grp_MUL_DP_fu_1979_ap_return_1;
        MUL_DP_ret137_reg_5155_1 <= grp_MUL_DP_fu_1988_ap_return_1;
        MUL_DP_ret138_reg_5160_1 <= grp_MUL_DP_fu_1997_ap_return_1;
        MUL_DP_ret139_reg_5165_1 <= grp_MUL_DP_fu_2006_ap_return_1;
        MUL_DP_ret140_reg_5170_1 <= grp_MUL_DP_fu_2015_ap_return_1;
        MUL_DP_ret_reg_5175_1 <= grp_MUL_DP_fu_2024_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ShuffleConvs_1_Downs_100_reg_4221 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_101_reg_4226 <= tmp_437_cast_fu_2367_p1;
        ShuffleConvs_1_Downs_102_reg_4231 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_103_reg_4236 <= tmp_437_cast_fu_2367_p1;
        ShuffleConvs_1_Downs_104_reg_4241 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_105_reg_4246 <= tmp_437_cast_fu_2367_p1;
        ShuffleConvs_1_Downs_106_reg_4251 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_95_reg_4196 <= tmp_437_cast_fu_2367_p1;
        ShuffleConvs_1_Downs_96_reg_4201 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_97_reg_4206 <= tmp_437_cast_fu_2367_p1;
        ShuffleConvs_1_Downs_98_reg_4211 <= tmp_438_cast_fu_2382_p1;
        ShuffleConvs_1_Downs_99_reg_4216 <= tmp_437_cast_fu_2367_p1;
        w2_cast_cast4_reg_4191[4 : 0] <= w2_cast_cast4_fu_2354_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ShuffleConvs_1_Downs_107_reg_4342 <= ShuffleConvs_1_Downs_23_q0;
        ShuffleConvs_1_Downs_109_reg_4347 <= ShuffleConvs_1_Downs_22_q0;
        ShuffleConvs_1_Downs_111_reg_4352 <= ShuffleConvs_1_Downs_11_q0;
        ShuffleConvs_1_Downs_113_reg_4357 <= ShuffleConvs_1_Downs_6_q0;
        ShuffleConvs_1_Downs_115_reg_4362 <= ShuffleConvs_1_Downs_5_q0;
        ShuffleConvs_1_Downs_117_reg_4367 <= ShuffleConvs_1_Downs_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ShuffleConvs_1_Downs_119_reg_4455 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_120_reg_4460 <= tmp_444_cast_fu_2759_p1;
        ShuffleConvs_1_Downs_121_reg_4465 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_122_reg_4470 <= tmp_444_cast_fu_2759_p1;
        ShuffleConvs_1_Downs_123_reg_4475 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_124_reg_4480 <= tmp_444_cast_fu_2759_p1;
        ShuffleConvs_1_Downs_125_reg_4485 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_126_reg_4490 <= tmp_444_cast_fu_2759_p1;
        ShuffleConvs_1_Downs_127_reg_4495 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_128_reg_4500 <= tmp_444_cast_fu_2759_p1;
        ShuffleConvs_1_Downs_129_reg_4505 <= tmp_443_cast_fu_2744_p1;
        ShuffleConvs_1_Downs_130_reg_4510 <= tmp_444_cast_fu_2759_p1;
        w5_cast_cast4_reg_4450[4 : 0] <= w5_cast_cast4_fu_2731_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ShuffleConvs_1_Downs_131_reg_4601 <= ShuffleConvs_1_Downs_3_q0;
        ShuffleConvs_1_Downs_133_reg_4606 <= ShuffleConvs_1_Downs_2_q0;
        ShuffleConvs_1_Downs_135_reg_4611 <= ShuffleConvs_1_Downs_1_q0;
        ShuffleConvs_1_Downs_137_reg_4616 <= ShuffleConvs_1_Downs_q0;
        ShuffleConvs_1_Downs_139_reg_4621 <= ShuffleConvs_1_Downs_21_q0;
        ShuffleConvs_1_Downs_141_reg_4626 <= ShuffleConvs_1_Downs_20_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ShuffleConvs_1_Downs_143_reg_4714 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_144_reg_4719 <= tmp_459_cast_fu_3136_p1;
        ShuffleConvs_1_Downs_145_reg_4724 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_146_reg_4729 <= tmp_459_cast_fu_3136_p1;
        ShuffleConvs_1_Downs_147_reg_4734 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_148_reg_4739 <= tmp_459_cast_fu_3136_p1;
        ShuffleConvs_1_Downs_149_reg_4744 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_150_reg_4749 <= tmp_459_cast_fu_3136_p1;
        ShuffleConvs_1_Downs_151_reg_4754 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_152_reg_4759 <= tmp_459_cast_fu_3136_p1;
        ShuffleConvs_1_Downs_153_reg_4764 <= tmp_458_cast_fu_3121_p1;
        ShuffleConvs_1_Downs_154_reg_4769 <= tmp_459_cast_fu_3136_p1;
        w9_cast7_cast1_reg_4709[4 : 0] <= w9_cast7_cast1_fu_3108_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ShuffleConvs_1_Downs_155_reg_4860 <= ShuffleConvs_1_Downs_19_q0;
        ShuffleConvs_1_Downs_157_reg_4865 <= ShuffleConvs_1_Downs_18_q0;
        ShuffleConvs_1_Downs_159_reg_4870 <= ShuffleConvs_1_Downs_17_q0;
        ShuffleConvs_1_Downs_161_reg_4875 <= ShuffleConvs_1_Downs_16_q0;
        ShuffleConvs_1_Downs_163_reg_4880 <= ShuffleConvs_1_Downs_15_q0;
        ShuffleConvs_1_Downs_165_reg_4885 <= ShuffleConvs_1_Downs_14_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ShuffleConvs_1_Downs_167_reg_4974 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_168_reg_4979 <= tmp_470_cast_fu_3513_p1;
        ShuffleConvs_1_Downs_169_reg_4984 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_170_reg_4989 <= tmp_470_cast_fu_3513_p1;
        ShuffleConvs_1_Downs_171_reg_4994 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_172_reg_4999 <= tmp_470_cast_fu_3513_p1;
        ShuffleConvs_1_Downs_173_reg_5004 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_174_reg_5009 <= tmp_470_cast_fu_3513_p1;
        ShuffleConvs_1_Downs_175_reg_5014 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_176_reg_5019 <= tmp_470_cast_fu_3513_p1;
        ShuffleConvs_1_Downs_177_reg_5024 <= tmp_469_cast_fu_3498_p1;
        ShuffleConvs_1_Downs_178_reg_5029 <= tmp_470_cast_fu_3513_p1;
        w13_cast4_cast1_reg_4969[4 : 0] <= w13_cast4_cast1_fu_3485_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ShuffleConvs_1_Downs_179_reg_5120 <= ShuffleConvs_1_Downs_13_q0;
        ShuffleConvs_1_Downs_181_reg_5125 <= ShuffleConvs_1_Downs_12_q0;
        ShuffleConvs_1_Downs_183_reg_5130 <= ShuffleConvs_1_Downs_10_q0;
        ShuffleConvs_1_Downs_185_reg_5135 <= ShuffleConvs_1_Downs_9_q0;
        ShuffleConvs_1_Downs_187_reg_5140 <= ShuffleConvs_1_Downs_8_q0;
        ShuffleConvs_1_Downs_189_reg_5145 <= ShuffleConvs_1_Downs_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter8_exitcond_flatten9_reg_5210))) begin
        ShuffleConvs_1_Downs_191_reg_5266 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_192_reg_5272 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_193_reg_5278 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_194_reg_5284 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_195_reg_5290 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_196_reg_5296 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_197_reg_5302 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_198_reg_5308 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_199_reg_5314 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_200_reg_5320 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_201_reg_5326 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_202_reg_5332 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_203_reg_5338 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_204_reg_5344 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_205_reg_5350 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_206_reg_5356 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_207_reg_5362 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_208_reg_5368 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_209_reg_5374 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_210_reg_5380 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_211_reg_5386 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_212_reg_5392 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_213_reg_5398 <= tmp_490_cast_fu_4014_p1;
        ShuffleConvs_1_Downs_214_reg_5404 <= tmp_490_cast_fu_4014_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_4107 <= exitcond_flatten_reg_4107;
        exitcond_flatten_reg_4107 <= exitcond_flatten_fu_2079_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_co_cast_mid2_v_reg_4129 <= co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter2_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter1_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter2_h_cast_mid2_reg_4143 <= h_cast_mid2_reg_4143;
        ap_reg_pp0_iter2_w_mid2_reg_4137 <= w_mid2_reg_4137;
        ap_reg_pp0_iter3_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter2_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter3_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter2_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter3_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter2_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter3_w_mid2_reg_4137 <= ap_reg_pp0_iter2_w_mid2_reg_4137;
        ap_reg_pp0_iter4_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter3_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter4_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter3_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter4_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter3_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter4_w_mid2_reg_4137 <= ap_reg_pp0_iter3_w_mid2_reg_4137;
        ap_reg_pp0_iter5_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter4_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter5_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter4_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter5_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter4_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter5_w_mid2_reg_4137 <= ap_reg_pp0_iter4_w_mid2_reg_4137;
        ap_reg_pp0_iter6_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter5_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter6_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter5_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter6_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter5_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter6_w_mid2_reg_4137 <= ap_reg_pp0_iter5_w_mid2_reg_4137;
        ap_reg_pp0_iter7_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter6_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter7_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter6_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter7_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter6_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter7_w_mid2_reg_4137 <= ap_reg_pp0_iter6_w_mid2_reg_4137;
        ap_reg_pp0_iter8_co_cast_mid2_v_reg_4129 <= ap_reg_pp0_iter7_co_cast_mid2_v_reg_4129;
        ap_reg_pp0_iter8_exitcond_flatten_reg_4107 <= ap_reg_pp0_iter7_exitcond_flatten_reg_4107;
        ap_reg_pp0_iter8_h_cast_mid2_reg_4143 <= ap_reg_pp0_iter7_h_cast_mid2_reg_4143;
        ap_reg_pp0_iter8_w_mid2_reg_4137 <= ap_reg_pp0_iter7_w_mid2_reg_4137;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_5210 <= exitcond_flatten9_reg_5210;
        exitcond_flatten9_reg_5210 <= exitcond_flatten9_fu_3816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter1_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter3_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter2_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter3_tmp_425_reg_5256 <= tmp_425_reg_5256;
        ap_reg_pp1_iter4_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter3_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter4_tmp_425_reg_5256 <= ap_reg_pp1_iter3_tmp_425_reg_5256;
        ap_reg_pp1_iter5_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter4_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter5_tmp_425_reg_5256 <= ap_reg_pp1_iter4_tmp_425_reg_5256;
        ap_reg_pp1_iter6_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter5_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter6_tmp_425_reg_5256 <= ap_reg_pp1_iter5_tmp_425_reg_5256;
        ap_reg_pp1_iter7_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter6_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter7_tmp_425_reg_5256 <= ap_reg_pp1_iter6_tmp_425_reg_5256;
        ap_reg_pp1_iter8_exitcond_flatten9_reg_5210 <= ap_reg_pp1_iter7_exitcond_flatten9_reg_5210;
        ap_reg_pp1_iter8_tmp_425_reg_5256 <= ap_reg_pp1_iter7_tmp_425_reg_5256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_3816_p2))) begin
        arrayNo_mid2_v_reg_5226 <= arrayNo_mid2_v_fu_3840_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ci_10_reg_4591 <= ci_10_fu_2888_p2;
        input_V_addr_5_reg_4523 <= tmp_467_cast_fu_2861_p1;
        weight_10_V_addr_8_reg_4573 <= tmp_468_cast_fu_2872_p1;
        weight_10_V_addr_reg_4568[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
        weight_11_V_addr_8_reg_4583 <= tmp_468_cast_fu_2872_p1;
        weight_11_V_addr_reg_4578[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
        weight_6_V_addr_8_reg_4533 <= tmp_468_cast_fu_2872_p1;
        weight_6_V_addr_reg_4528[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
        weight_7_V_addr_8_reg_4543 <= tmp_468_cast_fu_2872_p1;
        weight_7_V_addr_reg_4538[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
        weight_8_V_addr_8_reg_4553 <= tmp_468_cast_fu_2872_p1;
        weight_8_V_addr_reg_4548[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
        weight_9_V_addr_8_reg_4563 <= tmp_468_cast_fu_2872_p1;
        weight_9_V_addr_reg_4558[5 : 0] <= ci6_cast9_fu_2781_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ci_11_reg_4850 <= ci_11_fu_3265_p2;
        input_V_addr_6_reg_4782 <= tmp_478_cast_fu_3238_p1;
        weight_12_V_addr_8_reg_4792 <= tmp_479_cast_fu_3249_p1;
        weight_12_V_addr_reg_4787[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
        weight_13_V_addr_8_reg_4802 <= tmp_479_cast_fu_3249_p1;
        weight_13_V_addr_reg_4797[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
        weight_14_V_addr_8_reg_4812 <= tmp_479_cast_fu_3249_p1;
        weight_14_V_addr_reg_4807[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
        weight_15_V_addr_8_reg_4822 <= tmp_479_cast_fu_3249_p1;
        weight_15_V_addr_reg_4817[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
        weight_16_V_addr_8_reg_4832 <= tmp_479_cast_fu_3249_p1;
        weight_16_V_addr_reg_4827[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
        weight_17_V_addr_8_reg_4842 <= tmp_479_cast_fu_3249_p1;
        weight_17_V_addr_reg_4837[5 : 0] <= ci10_cast6_fu_3158_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ci_13_reg_5110 <= ci_13_fu_3642_p2;
        input_V_addr_7_reg_5042 <= tmp_498_cast_fu_3615_p1;
        weight_18_V_addr_8_reg_5052 <= tmp_499_cast_fu_3626_p1;
        weight_18_V_addr_reg_5047[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
        weight_19_V_addr_8_reg_5062 <= tmp_499_cast_fu_3626_p1;
        weight_19_V_addr_reg_5057[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
        weight_20_V_addr_8_reg_5072 <= tmp_499_cast_fu_3626_p1;
        weight_20_V_addr_reg_5067[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
        weight_21_V_addr_8_reg_5082 <= tmp_499_cast_fu_3626_p1;
        weight_21_V_addr_reg_5077[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
        weight_22_V_addr_8_reg_5092 <= tmp_499_cast_fu_3626_p1;
        weight_22_V_addr_reg_5087[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
        weight_23_V_addr_8_reg_5102 <= tmp_499_cast_fu_3626_p1;
        weight_23_V_addr_reg_5097[5 : 0] <= ci12_cast3_fu_3535_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ci_9_reg_4332 <= ci_9_fu_2511_p2;
        input_V_addr_reg_4264 <= tmp_452_cast_fu_2484_p1;
        weight_0_V_addr_8_reg_4274 <= tmp_453_cast_fu_2495_p1;
        weight_0_V_addr_reg_4269[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
        weight_1_V_addr_8_reg_4284 <= tmp_453_cast_fu_2495_p1;
        weight_1_V_addr_reg_4279[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
        weight_2_V_addr_8_reg_4294 <= tmp_453_cast_fu_2495_p1;
        weight_2_V_addr_reg_4289[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
        weight_3_V_addr_8_reg_4304 <= tmp_453_cast_fu_2495_p1;
        weight_3_V_addr_reg_4299[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
        weight_4_V_addr_8_reg_4314 <= tmp_453_cast_fu_2495_p1;
        weight_4_V_addr_reg_4309[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
        weight_5_V_addr_8_reg_4324 <= tmp_453_cast_fu_2495_p1;
        weight_5_V_addr_reg_4319[5 : 0] <= ci_cast_fu_2404_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_4107 == 1'd0))) begin
        co_cast_mid2_v_reg_4129 <= co_cast_mid2_v_fu_2124_p3;
        h_cast_mid2_reg_4143 <= h_cast_mid2_fu_2173_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_3816_p2))) begin
        exitcond_flatten10_reg_5219 <= exitcond_flatten10_fu_3834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_2079_p2 == 1'd0))) begin
        exitcond_flatten8_reg_4116 <= exitcond_flatten8_fu_2091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        h12_cast5_cast_reg_4950[4 : 0] <= h12_cast5_cast_fu_3439_p1[4 : 0];
        tmp_399_reg_4955[9 : 1] <= tmp_399_fu_3467_p2[9 : 1];
        tmp_400_reg_4960[9 : 1] <= tmp_400_fu_3473_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        h17_cast2_mid2_reg_5250 <= h17_cast2_mid2_fu_3929_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h1_cast_cast_reg_4173[4 : 0] <= h1_cast_cast_fu_2308_p1[4 : 0];
        tmp_376_reg_4178[9 : 1] <= tmp_376_fu_2336_p2[9 : 1];
        tmp_377_reg_4183[9 : 1] <= tmp_377_fu_2342_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        h4_cast_cast_reg_4432[4 : 0] <= h4_cast_cast_fu_2685_p1[4 : 0];
        tmp_380_reg_4437[9 : 1] <= tmp_380_fu_2713_p2[9 : 1];
        tmp_381_reg_4442[9 : 1] <= tmp_381_fu_2719_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        h8_cast8_cast_reg_4691[4 : 0] <= h8_cast8_cast_fu_3062_p1[4 : 0];
        tmp_386_reg_4696[9 : 1] <= tmp_386_fu_3090_p2[9 : 1];
        tmp_387_reg_4701[9 : 1] <= tmp_387_fu_3096_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_2069 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_35_reg_4402 <= tmp_35_fu_2614_p2;
        tmp_58_1_reg_4407 <= tmp_58_1_fu_2627_p2;
        tmp_58_2_reg_4412 <= tmp_58_2_fu_2640_p2;
        tmp_58_3_reg_4417 <= tmp_58_3_fu_2653_p2;
        tmp_58_4_reg_4422 <= tmp_58_4_fu_2666_p2;
        tmp_58_5_reg_4427 <= tmp_58_5_fu_2679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter8_exitcond_flatten_reg_4107 == 1'd0))) begin
        tmp_373_reg_4160 <= tmp_373_fu_2275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_39_reg_4661 <= tmp_39_fu_2991_p2;
        tmp_63_1_reg_4666 <= tmp_63_1_fu_3004_p2;
        tmp_63_2_reg_4671 <= tmp_63_2_fu_3017_p2;
        tmp_63_3_reg_4676 <= tmp_63_3_fu_3030_p2;
        tmp_63_4_reg_4681 <= tmp_63_4_fu_3043_p2;
        tmp_63_5_reg_4686 <= tmp_63_5_fu_3056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5210))) begin
        tmp_425_reg_5256 <= tmp_425_fu_4003_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_43_reg_4920 <= tmp_43_fu_3368_p2;
        tmp_68_1_reg_4925 <= tmp_68_1_fu_3381_p2;
        tmp_68_2_reg_4930 <= tmp_68_2_fu_3394_p2;
        tmp_68_3_reg_4935 <= tmp_68_3_fu_3407_p2;
        tmp_68_4_reg_4940 <= tmp_68_4_fu_3420_p2;
        tmp_68_5_reg_4945 <= tmp_68_5_fu_3433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        tmp_47_reg_5180 <= tmp_47_fu_3745_p2;
        tmp_74_1_reg_5185 <= tmp_74_1_fu_3758_p2;
        tmp_74_2_reg_5190 <= tmp_74_2_fu_3771_p2;
        tmp_74_3_reg_5195 <= tmp_74_3_fu_3784_p2;
        tmp_74_4_reg_5200 <= tmp_74_4_fu_3797_p2;
        tmp_74_5_reg_5205 <= tmp_74_5_fu_3810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter7_exitcond_flatten_reg_4107 == 1'd0))) begin
        tmp_528_reg_4154 <= {{mul_fu_2189_p2[13:11]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_5210))) begin
        tmp_560_reg_5238 <= {{mul4_fu_3877_p2[13:11]}};
        w18_mid2_reg_5244 <= w18_mid2_fu_3921_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_4107 == 1'd0))) begin
        w_mid2_reg_4137 <= w_mid2_fu_2165_p3;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_10_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_10_address0 = ShuffleConvs_1_Downs_178_reg_5029;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_10_address0 = ShuffleConvs_1_Downs_177_reg_5024;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_10_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_10_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_10_d0 = tmp_74_2_reg_5190;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_10_d0 = tmp_72_2_fu_3690_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_10_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd20)))) begin
        ShuffleConvs_1_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd20))) begin
        ShuffleConvs_1_Downs_10_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_11_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_11_address0 = ShuffleConvs_1_Downs_106_reg_4251;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_11_address0 = ShuffleConvs_1_Downs_105_reg_4246;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_11_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_11_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_11_d0 = tmp_58_2_reg_4412;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_11_d0 = tmp_56_2_fu_2559_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_11_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd2)))) begin
        ShuffleConvs_1_Downs_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd2))) begin
        ShuffleConvs_1_Downs_11_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_12_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_12_address0 = ShuffleConvs_1_Downs_174_reg_5009;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_12_address0 = ShuffleConvs_1_Downs_173_reg_5004;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_12_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_12_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_12_d0 = tmp_74_1_reg_5185;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_12_d0 = tmp_72_1_fu_3676_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_12_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd19)))) begin
        ShuffleConvs_1_Downs_12_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd19))) begin
        ShuffleConvs_1_Downs_12_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_13_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_13_address0 = ShuffleConvs_1_Downs_176_reg_5019;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_13_address0 = ShuffleConvs_1_Downs_175_reg_5014;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_13_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_13_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_13_d0 = tmp_47_reg_5180;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_13_d0 = tmp_45_fu_3662_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_13_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd18)))) begin
        ShuffleConvs_1_Downs_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd18))) begin
        ShuffleConvs_1_Downs_13_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_14_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_14_address0 = ShuffleConvs_1_Downs_148_reg_4739;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_14_address0 = ShuffleConvs_1_Downs_147_reg_4734;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_14_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_14_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_14_d0 = tmp_68_5_reg_4945;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_14_d0 = tmp_66_5_fu_3355_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_14_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd17)))) begin
        ShuffleConvs_1_Downs_14_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd17))) begin
        ShuffleConvs_1_Downs_14_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_15_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_15_address0 = ShuffleConvs_1_Downs_150_reg_4749;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_15_address0 = ShuffleConvs_1_Downs_149_reg_4744;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_15_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_15_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_15_d0 = tmp_68_4_reg_4940;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_15_d0 = tmp_66_4_fu_3341_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_15_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd16)))) begin
        ShuffleConvs_1_Downs_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd16))) begin
        ShuffleConvs_1_Downs_15_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_16_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_16_address0 = ShuffleConvs_1_Downs_146_reg_4729;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_16_address0 = ShuffleConvs_1_Downs_145_reg_4724;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_16_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_16_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_16_d0 = tmp_68_3_reg_4935;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_16_d0 = tmp_66_3_fu_3327_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_16_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd15)))) begin
        ShuffleConvs_1_Downs_16_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd15))) begin
        ShuffleConvs_1_Downs_16_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_17_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_17_address0 = ShuffleConvs_1_Downs_152_reg_4759;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_17_address0 = ShuffleConvs_1_Downs_151_reg_4754;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_17_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_17_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_17_d0 = tmp_68_2_reg_4930;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_17_d0 = tmp_66_2_fu_3313_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_17_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd14)))) begin
        ShuffleConvs_1_Downs_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd14))) begin
        ShuffleConvs_1_Downs_17_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_18_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_18_address0 = ShuffleConvs_1_Downs_154_reg_4769;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_18_address0 = ShuffleConvs_1_Downs_153_reg_4764;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_18_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_18_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_18_d0 = tmp_68_1_reg_4925;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_18_d0 = tmp_66_1_fu_3299_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_18_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd13)))) begin
        ShuffleConvs_1_Downs_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd13))) begin
        ShuffleConvs_1_Downs_18_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_19_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_19_address0 = ShuffleConvs_1_Downs_144_reg_4719;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44))) begin
        ShuffleConvs_1_Downs_19_address0 = ShuffleConvs_1_Downs_143_reg_4714;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_19_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state47))) begin
        ShuffleConvs_1_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_19_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ShuffleConvs_1_Downs_19_d0 = tmp_43_reg_4920;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ShuffleConvs_1_Downs_19_d0 = tmp_41_fu_3285_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_19_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state49) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd12)))) begin
        ShuffleConvs_1_Downs_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd12))) begin
        ShuffleConvs_1_Downs_19_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_1_address0 = ShuffleConvs_1_Downs_120_reg_4460;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_1_address0 = ShuffleConvs_1_Downs_119_reg_4455;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_1_d0 = tmp_63_2_reg_4671;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_1_d0 = tmp_61_2_fu_2936_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd8)))) begin
        ShuffleConvs_1_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd8))) begin
        ShuffleConvs_1_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_20_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_20_address0 = ShuffleConvs_1_Downs_130_reg_4510;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_20_address0 = ShuffleConvs_1_Downs_129_reg_4505;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_20_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_20_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_20_d0 = tmp_63_5_reg_4686;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_20_d0 = tmp_61_5_fu_2978_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_20_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd11)))) begin
        ShuffleConvs_1_Downs_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd11))) begin
        ShuffleConvs_1_Downs_20_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_21_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_21_address0 = ShuffleConvs_1_Downs_128_reg_4500;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_21_address0 = ShuffleConvs_1_Downs_127_reg_4495;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_21_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_21_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_21_d0 = tmp_63_4_reg_4681;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_21_d0 = tmp_61_4_fu_2964_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_21_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd10)))) begin
        ShuffleConvs_1_Downs_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd10))) begin
        ShuffleConvs_1_Downs_21_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_22_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_22_address0 = ShuffleConvs_1_Downs_102_reg_4231;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_22_address0 = ShuffleConvs_1_Downs_101_reg_4226;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_22_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_22_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_22_d0 = tmp_58_1_reg_4407;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_22_d0 = tmp_56_1_fu_2545_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_22_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd1)))) begin
        ShuffleConvs_1_Downs_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd1))) begin
        ShuffleConvs_1_Downs_22_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_23_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_23_address0 = ShuffleConvs_1_Downs_104_reg_4241;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_23_address0 = ShuffleConvs_1_Downs_103_reg_4236;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_23_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_23_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_23_d0 = tmp_35_reg_4402;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_23_d0 = tmp_33_fu_2531_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_23_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (6'd0 == grp_fu_2131_p2)))) begin
        ShuffleConvs_1_Downs_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (6'd0 == grp_fu_3869_p2))) begin
        ShuffleConvs_1_Downs_23_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_2_address0 = ShuffleConvs_1_Downs_126_reg_4490;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_2_address0 = ShuffleConvs_1_Downs_125_reg_4485;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_2_d0 = tmp_63_1_reg_4666;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_2_d0 = tmp_61_1_fu_2922_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd7)))) begin
        ShuffleConvs_1_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd7))) begin
        ShuffleConvs_1_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_3_address0 = ShuffleConvs_1_Downs_124_reg_4480;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_3_address0 = ShuffleConvs_1_Downs_123_reg_4475;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_3_d0 = tmp_39_reg_4661;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_3_d0 = tmp_37_fu_2908_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd6)))) begin
        ShuffleConvs_1_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd6))) begin
        ShuffleConvs_1_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_4_address0 = ShuffleConvs_1_Downs_98_reg_4211;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_4_address0 = ShuffleConvs_1_Downs_97_reg_4206;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_4_d0 = tmp_58_5_reg_4427;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_4_d0 = tmp_56_5_fu_2601_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd5)))) begin
        ShuffleConvs_1_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd5))) begin
        ShuffleConvs_1_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_5_address0 = ShuffleConvs_1_Downs_96_reg_4201;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_5_address0 = ShuffleConvs_1_Downs_95_reg_4196;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_5_d0 = tmp_58_4_reg_4422;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_5_d0 = tmp_56_4_fu_2587_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd4)))) begin
        ShuffleConvs_1_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd4))) begin
        ShuffleConvs_1_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_6_address0 = ShuffleConvs_1_Downs_100_reg_4221;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        ShuffleConvs_1_Downs_6_address0 = ShuffleConvs_1_Downs_99_reg_4216;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_6_d0 = tmp_58_3_reg_4417;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_6_d0 = tmp_56_3_fu_2573_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd3)))) begin
        ShuffleConvs_1_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd3))) begin
        ShuffleConvs_1_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_7_address0 = ShuffleConvs_1_Downs_168_reg_4979;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_7_address0 = ShuffleConvs_1_Downs_167_reg_4974;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_7_d0 = tmp_74_5_reg_5205;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_7_d0 = tmp_72_5_fu_3732_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & ~(6'd0 == grp_fu_2131_p2) & ~(grp_fu_2131_p2 == 6'd1) & ~(grp_fu_2131_p2 == 6'd2) & ~(grp_fu_2131_p2 == 6'd3) & ~(grp_fu_2131_p2 == 6'd4) & ~(grp_fu_2131_p2 == 6'd5) & ~(grp_fu_2131_p2 == 6'd6) & ~(grp_fu_2131_p2 == 6'd7) & ~(grp_fu_2131_p2 == 6'd8) & ~(grp_fu_2131_p2 == 6'd9) & ~(grp_fu_2131_p2 == 6'd10) & ~(grp_fu_2131_p2 == 6'd11) & ~(grp_fu_2131_p2 == 6'd12) & ~(grp_fu_2131_p2 == 6'd13) & ~(grp_fu_2131_p2 == 6'd14) & ~(grp_fu_2131_p2 == 6'd15) & ~(grp_fu_2131_p2 == 6'd16) & ~(grp_fu_2131_p2 == 6'd17) & ~(grp_fu_2131_p2 == 6'd18) & ~(grp_fu_2131_p2 == 6'd19) & ~(grp_fu_2131_p2 == 6'd20) & ~(grp_fu_2131_p2 == 6'd21) & ~(grp_fu_2131_p2 == 6'd22)))) begin
        ShuffleConvs_1_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & ~(6'd0 == grp_fu_3869_p2) & ~(grp_fu_3869_p2 == 6'd1) & ~(grp_fu_3869_p2 == 6'd2) & ~(grp_fu_3869_p2 == 6'd3) & ~(grp_fu_3869_p2 == 6'd4) & ~(grp_fu_3869_p2 == 6'd5) & ~(grp_fu_3869_p2 == 6'd6) & ~(grp_fu_3869_p2 == 6'd7) & ~(grp_fu_3869_p2 == 6'd8) & ~(grp_fu_3869_p2 == 6'd9) & ~(grp_fu_3869_p2 == 6'd10) & ~(grp_fu_3869_p2 == 6'd11) & ~(grp_fu_3869_p2 == 6'd12) & ~(grp_fu_3869_p2 == 6'd13) & ~(grp_fu_3869_p2 == 6'd14) & ~(grp_fu_3869_p2 == 6'd15) & ~(grp_fu_3869_p2 == 6'd16) & ~(grp_fu_3869_p2 == 6'd17) & ~(grp_fu_3869_p2 == 6'd18) & ~(grp_fu_3869_p2 == 6'd19) & ~(grp_fu_3869_p2 == 6'd20) & ~(grp_fu_3869_p2 == 6'd21) & ~(6'd22 == grp_fu_3869_p2))) begin
        ShuffleConvs_1_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_8_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_8_address0 = ShuffleConvs_1_Downs_170_reg_4989;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_8_address0 = ShuffleConvs_1_Downs_169_reg_4984;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_8_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_8_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_8_d0 = tmp_74_4_reg_5200;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_8_d0 = tmp_72_4_fu_3718_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_8_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd22)))) begin
        ShuffleConvs_1_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (6'd22 == grp_fu_3869_p2))) begin
        ShuffleConvs_1_Downs_8_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_9_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        ShuffleConvs_1_Downs_9_address0 = ShuffleConvs_1_Downs_172_reg_4999;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        ShuffleConvs_1_Downs_9_address0 = ShuffleConvs_1_Downs_171_reg_4994;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_9_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | (1'b1 == ap_CS_fsm_state59) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)))) begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_9_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ShuffleConvs_1_Downs_9_d0 = tmp_74_3_reg_5195;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ShuffleConvs_1_Downs_9_d0 = tmp_72_3_fu_3704_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_9_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state61) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd21)))) begin
        ShuffleConvs_1_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd21))) begin
        ShuffleConvs_1_Downs_9_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9))) begin
        ShuffleConvs_1_Downs_address0 = tmp_490_cast_fu_4014_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_address0 = ShuffleConvs_1_Downs_122_reg_4470;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_address0 = ShuffleConvs_1_Downs_121_reg_4465;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_address0 = tmp_428_cast_fu_2281_p1;
    end else begin
        ShuffleConvs_1_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter9)) | (1'b1 == ap_CS_fsm_state35))) begin
        ShuffleConvs_1_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10))) begin
        ShuffleConvs_1_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ShuffleConvs_1_Downs_d0 = tmp_63_3_reg_4676;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_d0 = tmp_61_3_fu_2950_p2;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        ShuffleConvs_1_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state37) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (grp_fu_2131_p2 == 6'd9)))) begin
        ShuffleConvs_1_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (1'd1 == tmp_565_fu_4099_p3) & (grp_fu_3869_p2 == 6'd9))) begin
        ShuffleConvs_1_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_2079_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_3816_p2)) begin
        ap_condition_pp1_exit_iter0_state62 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state62 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state73))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3) & (1'b0 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_enable_reg_pp1_iter6) & (1'b0 == ap_enable_reg_pp1_iter7) & (1'b0 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_enable_reg_pp1_iter9) & (1'b0 == ap_enable_reg_pp1_iter10))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co16_phi_fu_1937_p4 = arrayNo_mid2_v_reg_5226;
    end else begin
        co16_phi_fu_1937_p4 = co16_reg_1933;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_1739_p4 = co_cast_mid2_v_reg_4129;
    end else begin
        co_phi_fu_1739_p4 = co_reg_1735;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1979_a_V = weight_18_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1979_a_V = weight_12_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1979_a_V = weight_6_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1979_a_V = weight_0_V_q0;
    end else begin
        grp_MUL_DP_fu_1979_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_1979_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1979_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1979_b_V = weight_18_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1979_b_V = weight_12_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1979_b_V = weight_6_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1979_b_V = weight_0_V_q1;
    end else begin
        grp_MUL_DP_fu_1979_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1988_a_V = weight_19_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1988_a_V = weight_13_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1988_a_V = weight_7_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1988_a_V = weight_1_V_q0;
    end else begin
        grp_MUL_DP_fu_1988_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_1988_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1988_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1988_b_V = weight_19_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1988_b_V = weight_13_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1988_b_V = weight_7_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1988_b_V = weight_1_V_q1;
    end else begin
        grp_MUL_DP_fu_1988_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1997_a_V = weight_20_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1997_a_V = weight_14_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1997_a_V = weight_8_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1997_a_V = weight_2_V_q0;
    end else begin
        grp_MUL_DP_fu_1997_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_1997_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1997_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_1997_b_V = weight_20_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_1997_b_V = weight_14_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_1997_b_V = weight_8_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_1997_b_V = weight_2_V_q1;
    end else begin
        grp_MUL_DP_fu_1997_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2006_a_V = weight_21_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2006_a_V = weight_15_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2006_a_V = weight_9_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2006_a_V = weight_3_V_q0;
    end else begin
        grp_MUL_DP_fu_2006_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_2006_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2006_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2006_b_V = weight_21_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2006_b_V = weight_15_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2006_b_V = weight_9_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2006_b_V = weight_3_V_q1;
    end else begin
        grp_MUL_DP_fu_2006_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2015_a_V = weight_22_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2015_a_V = weight_16_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2015_a_V = weight_10_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2015_a_V = weight_4_V_q0;
    end else begin
        grp_MUL_DP_fu_2015_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_2015_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2015_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2015_b_V = weight_22_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2015_b_V = weight_16_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2015_b_V = weight_10_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2015_b_V = weight_4_V_q1;
    end else begin
        grp_MUL_DP_fu_2015_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2024_a_V = weight_23_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2024_a_V = weight_17_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2024_a_V = weight_11_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2024_a_V = weight_5_V_q0;
    end else begin
        grp_MUL_DP_fu_2024_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_MUL_DP_fu_2024_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2024_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_MUL_DP_fu_2024_b_V = weight_23_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_MUL_DP_fu_2024_b_V = weight_17_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_MUL_DP_fu_2024_b_V = weight_11_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_MUL_DP_fu_2024_b_V = weight_5_V_q1;
    end else begin
        grp_MUL_DP_fu_2024_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h17_phi_fu_1959_p4 = h17_cast2_mid2_reg_5250;
    end else begin
        h17_phi_fu_1959_p4 = h17_reg_1955;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_1762_p4 = h_cast_mid2_reg_4143;
    end else begin
        h_phi_fu_1762_p4 = h_reg_1758;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        input_V_address0 = input_V_addr_7_reg_5042;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        input_V_address0 = input_V_addr_6_reg_4782;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        input_V_address0 = input_V_addr_5_reg_4523;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_V_address0 = input_V_addr_reg_4264;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state53))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5210) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w18_phi_fu_1971_p4 = w_30_fu_4009_p2;
    end else begin
        w18_phi_fu_1971_p4 = w18_reg_1967;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4107 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_1774_p4 = w_25_fu_2181_p2;
    end else begin
        w_phi_fu_1774_p4 = w_reg_1770;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_ce1 = 1'b1;
    end else begin
        weight_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_10_V_ce1 = 1'b1;
    end else begin
        weight_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_11_V_ce1 = 1'b1;
    end else begin
        weight_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_12_V_ce1 = 1'b1;
    end else begin
        weight_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_13_V_ce1 = 1'b1;
    end else begin
        weight_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_14_V_ce1 = 1'b1;
    end else begin
        weight_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_15_V_ce1 = 1'b1;
    end else begin
        weight_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_16_V_ce1 = 1'b1;
    end else begin
        weight_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        weight_17_V_ce1 = 1'b1;
    end else begin
        weight_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_18_V_ce1 = 1'b1;
    end else begin
        weight_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_19_V_ce1 = 1'b1;
    end else begin
        weight_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_ce1 = 1'b1;
    end else begin
        weight_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_20_V_ce1 = 1'b1;
    end else begin
        weight_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_21_V_ce1 = 1'b1;
    end else begin
        weight_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_22_V_ce1 = 1'b1;
    end else begin
        weight_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        weight_23_V_ce1 = 1'b1;
    end else begin
        weight_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_ce1 = 1'b1;
    end else begin
        weight_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_ce1 = 1'b1;
    end else begin
        weight_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_ce1 = 1'b1;
    end else begin
        weight_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_ce1 = 1'b1;
    end else begin
        weight_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_6_V_ce1 = 1'b1;
    end else begin
        weight_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_7_V_ce1 = 1'b1;
    end else begin
        weight_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_8_V_ce1 = 1'b1;
    end else begin
        weight_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        weight_9_V_ce1 = 1'b1;
    end else begin
        weight_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == exitcond29_fu_2348_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond31_fu_2392_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond34_fu_2505_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond30_fu_2725_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond33_fu_2769_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond37_fu_2882_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (1'd1 == exitcond32_fu_3102_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'd1 == exitcond36_fu_3146_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == exitcond39_fu_3259_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (1'd1 == exitcond35_fu_3479_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (1'd1 == exitcond38_fu_3523_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (1'd1 == exitcond41_fu_3636_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (ap_enable_reg_pp1_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_3816_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter10) & (ap_enable_reg_pp1_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_3816_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_1_Downs_10_address1 = ShuffleConvs_1_Downs_214_reg_5404;

assign ShuffleConvs_1_Downs_10_d1 = 8'd0;

assign ShuffleConvs_1_Downs_11_address1 = ShuffleConvs_1_Downs_206_reg_5356;

assign ShuffleConvs_1_Downs_11_d1 = 8'd0;

assign ShuffleConvs_1_Downs_12_address1 = ShuffleConvs_1_Downs_199_reg_5314;

assign ShuffleConvs_1_Downs_12_d1 = 8'd0;

assign ShuffleConvs_1_Downs_13_address1 = ShuffleConvs_1_Downs_211_reg_5386;

assign ShuffleConvs_1_Downs_13_d1 = 8'd0;

assign ShuffleConvs_1_Downs_14_address1 = ShuffleConvs_1_Downs_207_reg_5362;

assign ShuffleConvs_1_Downs_14_d1 = 8'd0;

assign ShuffleConvs_1_Downs_15_address1 = ShuffleConvs_1_Downs_208_reg_5368;

assign ShuffleConvs_1_Downs_15_d1 = 8'd0;

assign ShuffleConvs_1_Downs_16_address1 = ShuffleConvs_1_Downs_205_reg_5350;

assign ShuffleConvs_1_Downs_16_d1 = 8'd0;

assign ShuffleConvs_1_Downs_17_address1 = ShuffleConvs_1_Downs_209_reg_5374;

assign ShuffleConvs_1_Downs_17_d1 = 8'd0;

assign ShuffleConvs_1_Downs_18_address1 = ShuffleConvs_1_Downs_210_reg_5380;

assign ShuffleConvs_1_Downs_18_d1 = 8'd0;

assign ShuffleConvs_1_Downs_19_address1 = ShuffleConvs_1_Downs_197_reg_5302;

assign ShuffleConvs_1_Downs_19_d1 = 8'd0;

assign ShuffleConvs_1_Downs_1_address1 = ShuffleConvs_1_Downs_201_reg_5326;

assign ShuffleConvs_1_Downs_1_d1 = 8'd0;

assign ShuffleConvs_1_Downs_20_address1 = ShuffleConvs_1_Downs_213_reg_5398;

assign ShuffleConvs_1_Downs_20_d1 = 8'd0;

assign ShuffleConvs_1_Downs_21_address1 = ShuffleConvs_1_Downs_212_reg_5392;

assign ShuffleConvs_1_Downs_21_d1 = 8'd0;

assign ShuffleConvs_1_Downs_22_address1 = ShuffleConvs_1_Downs_198_reg_5308;

assign ShuffleConvs_1_Downs_22_d1 = 8'd0;

assign ShuffleConvs_1_Downs_23_address1 = ShuffleConvs_1_Downs_200_reg_5320;

assign ShuffleConvs_1_Downs_23_d1 = 8'd0;

assign ShuffleConvs_1_Downs_2_address1 = ShuffleConvs_1_Downs_204_reg_5344;

assign ShuffleConvs_1_Downs_2_d1 = 8'd0;

assign ShuffleConvs_1_Downs_3_address1 = ShuffleConvs_1_Downs_203_reg_5338;

assign ShuffleConvs_1_Downs_3_d1 = 8'd0;

assign ShuffleConvs_1_Downs_4_address1 = ShuffleConvs_1_Downs_194_reg_5284;

assign ShuffleConvs_1_Downs_4_d1 = 8'd0;

assign ShuffleConvs_1_Downs_5_address1 = ShuffleConvs_1_Downs_191_reg_5266;

assign ShuffleConvs_1_Downs_5_d1 = 8'd0;

assign ShuffleConvs_1_Downs_6_address1 = ShuffleConvs_1_Downs_196_reg_5296;

assign ShuffleConvs_1_Downs_6_d1 = 8'd0;

assign ShuffleConvs_1_Downs_7_address1 = ShuffleConvs_1_Downs_192_reg_5272;

assign ShuffleConvs_1_Downs_7_d1 = 8'd0;

assign ShuffleConvs_1_Downs_8_address1 = ShuffleConvs_1_Downs_193_reg_5278;

assign ShuffleConvs_1_Downs_8_d1 = 8'd0;

assign ShuffleConvs_1_Downs_9_address1 = ShuffleConvs_1_Downs_195_reg_5290;

assign ShuffleConvs_1_Downs_9_d1 = 8'd0;

assign ShuffleConvs_1_Downs_address1 = ShuffleConvs_1_Downs_202_reg_5332;

assign ShuffleConvs_1_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd52];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_3840_p3 = ((exitcond_flatten10_fu_3834_p2[0:0] === 1'b1) ? co_21_fu_3828_p2 : co16_phi_fu_1937_p4);

assign bias_V_address0 = co_cast_mid2_fu_2205_p1;

assign ci10_cast6_cast_fu_3168_p1 = ci10_reg_1876;

assign ci10_cast6_fu_3158_p1 = ci10_reg_1876;

assign ci12_cast3_cast_fu_3545_p1 = ci12_reg_1911;

assign ci12_cast3_fu_3535_p1 = ci12_reg_1911;

assign ci6_cast9_cast_fu_2791_p1 = ci6_reg_1841;

assign ci6_cast9_fu_2781_p1 = ci6_reg_1841;

assign ci_10_fu_2888_p2 = (ci6_reg_1841 + 6'd1);

assign ci_11_fu_3265_p2 = (ci10_reg_1876 + 6'd1);

assign ci_13_fu_3642_p2 = (ci12_reg_1911 + 6'd1);

assign ci_9_fu_2511_p2 = (ci_reg_1806 + 6'd1);

assign ci_cast_cast_fu_2414_p1 = ci_reg_1806;

assign ci_cast_fu_2404_p1 = ci_reg_1806;

assign co_20_fu_2111_p2 = (6'd1 + co_phi_fu_1739_p4);

assign co_21_fu_3828_p2 = (6'd1 + co16_phi_fu_1937_p4);

assign co_cast_mid2_fu_2205_p1 = ap_reg_pp0_iter8_co_cast_mid2_v_reg_4129;

assign co_cast_mid2_v_fu_2124_p3 = ((exitcond_flatten8_reg_4116[0:0] === 1'b1) ? co_20_fu_2111_p2 : co_phi_fu_1739_p4);

assign exitcond29_fu_2348_p2 = ((h1_reg_1782 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond30_fu_2725_p2 = ((h4_reg_1817 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond31_fu_2392_p2 = ((w2_reg_1794 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond32_fu_3102_p2 = ((h8_reg_1852 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond33_fu_2769_p2 = ((w5_reg_1829 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond34_fu_2505_p2 = ((ci_reg_1806 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond35_fu_3479_p2 = ((h12_reg_1887 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond36_fu_3146_p2 = ((w9_reg_1864 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond37_fu_2882_p2 = ((ci6_reg_1841 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond38_fu_3523_p2 = ((w13_reg_1899 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond39_fu_3259_p2 = ((ci10_reg_1876 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond40_fu_3898_p2 = ((w18_phi_fu_1971_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond41_fu_3636_p2 = ((ci12_reg_1911 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond54_mid_fu_2148_p2 = (exitcond_fu_2142_p2 & not_exitcond_flatten_fu_2137_p2);

assign exitcond_flatten10_fu_3834_p2 = ((indvar_flatten6_reg_1944 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_2091_p2 = ((indvar_flatten_reg_1747 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_3816_p2 = ((indvar_flatten5_reg_1922 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2079_p2 = ((indvar_flatten4_reg_1724 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_fu_2142_p2 = ((w_phi_fu_1774_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3904_p2 = (exitcond40_fu_3898_p2 & not_exitcond_flatten_1_fu_3893_p2);

assign grp_fu_2131_p0 = ((exitcond_flatten8_reg_4116[0:0] === 1'b1) ? co_20_fu_2111_p2 : co_phi_fu_1739_p4);

assign h12_cast5_cast_fu_3439_p1 = h12_reg_1887;

assign h17_cast2_mid2_cast_fu_3973_p1 = h17_cast2_mid2_reg_5250;

assign h17_cast2_mid2_fu_3929_p3 = ((exitcond_mid_fu_3904_p2[0:0] === 1'b1) ? h_3_fu_3910_p2 : h17_mid_fu_3862_p3);

assign h17_mid_fu_3862_p3 = ((exitcond_flatten10_reg_5219[0:0] === 1'b1) ? 5'd1 : h17_phi_fu_1959_p4);

assign h1_cast_cast_fu_2308_p1 = h1_reg_1782;

assign h4_cast_cast_fu_2685_p1 = h4_reg_1817;

assign h8_cast8_cast_fu_3062_p1 = h8_reg_1852;

assign h_1_fu_2775_p2 = (h4_reg_1817 + 5'd1);

assign h_21_fu_2154_p2 = (5'd1 + h_mid_fu_2117_p3);

assign h_2_fu_3152_p2 = (h8_reg_1852 + 5'd1);

assign h_3_fu_3910_p2 = (5'd1 + h17_mid_fu_3862_p3);

assign h_4_fu_3529_p2 = (h12_reg_1887 + 5'd1);

assign h_9_fu_2398_p2 = (h1_reg_1782 + 5'd1);

assign h_cast_mid2_cast_fu_2245_p1 = ap_reg_pp0_iter8_h_cast_mid2_reg_4143;

assign h_cast_mid2_fu_2173_p3 = ((exitcond54_mid_fu_2148_p2[0:0] === 1'b1) ? h_21_fu_2154_p2 : h_mid_fu_2117_p3);

assign h_mid_fu_2117_p3 = ((exitcond_flatten8_reg_4116[0:0] === 1'b1) ? 5'd1 : h_phi_fu_1762_p4);

assign indvar_flatten21_op_fu_3848_p2 = (indvar_flatten6_reg_1944 + 10'd1);

assign indvar_flatten_next1_3_fu_3854_p3 = ((exitcond_flatten10_fu_3834_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten21_op_fu_3848_p2);

assign indvar_flatten_next1_4_fu_3822_p2 = (indvar_flatten5_reg_1922 + 14'd1);

assign indvar_flatten_next1_fu_2085_p2 = (indvar_flatten4_reg_1724 + 14'd1);

assign indvar_flatten_next_fu_2103_p3 = ((exitcond_flatten8_fu_2091_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten_op_fu_2097_p2);

assign indvar_flatten_op_fu_2097_p2 = (indvar_flatten_reg_1747 + 10'd1);

assign mul4_fu_3877_p1 = mul4_fu_3877_p10;

assign mul4_fu_3877_p10 = arrayNo_mid2_v_reg_5226;

assign mul4_fu_3877_p2 = (14'd86 * mul4_fu_3877_p1);

assign mul_fu_2189_p1 = mul_fu_2189_p10;

assign mul_fu_2189_p10 = ap_reg_pp0_iter7_co_cast_mid2_v_reg_4129;

assign mul_fu_2189_p2 = (14'd86 * mul_fu_2189_p1);

assign not_exitcond_flatten_1_fu_3893_p2 = (exitcond_flatten10_reg_5219 ^ 1'd1);

assign not_exitcond_flatten_fu_2137_p2 = (exitcond_flatten8_reg_4116 ^ 1'd1);

assign p_shl10_cast_fu_2697_p1 = tmp_378_fu_2689_p3;

assign p_shl11_cast_fu_2709_p1 = tmp_379_fu_2701_p3;

assign p_shl12_cast_fu_2830_p3 = {{tmp_406_fu_2825_p2}, {4'd0}};

assign p_shl13_cast_fu_2846_p1 = tmp_546_fu_2838_p3;

assign p_shl14_cast_fu_2803_p1 = tmp_403_fu_2795_p3;

assign p_shl15_cast_fu_2815_p1 = tmp_404_fu_2807_p3;

assign p_shl16_cast_fu_3074_p1 = tmp_384_fu_3066_p3;

assign p_shl17_cast_fu_3086_p1 = tmp_385_fu_3078_p3;

assign p_shl18_cast_fu_3207_p3 = {{tmp_415_fu_3202_p2}, {4'd0}};

assign p_shl19_cast_fu_3223_p1 = tmp_559_fu_3215_p3;

assign p_shl20_cast_fu_3180_p1 = tmp_412_fu_3172_p3;

assign p_shl21_cast_fu_3192_p1 = tmp_413_fu_3184_p3;

assign p_shl22_cast_fu_3451_p1 = tmp_397_fu_3443_p3;

assign p_shl23_cast_fu_3463_p1 = tmp_398_fu_3455_p3;

assign p_shl24_cast_fu_3584_p3 = {{tmp_429_fu_3579_p2}, {4'd0}};

assign p_shl25_cast_fu_3600_p1 = tmp_578_fu_3592_p3;

assign p_shl26_cast_fu_3557_p1 = tmp_426_fu_3549_p3;

assign p_shl27_cast_fu_3569_p1 = tmp_427_fu_3561_p3;

assign p_shl2_cast_fu_2220_p1 = $unsigned(tmp_s_fu_2216_p1);

assign p_shl30_cast_fu_3948_p1 = $unsigned(tmp_419_fu_3944_p1);

assign p_shl31_cast_fu_3963_p1 = $unsigned(tmp_420_fu_3959_p1);

assign p_shl3_cast_fu_2235_p1 = $unsigned(tmp_368_fu_2231_p1);

assign p_shl4_cast_fu_2320_p1 = tmp_374_fu_2312_p3;

assign p_shl5_cast_fu_2332_p1 = tmp_375_fu_2324_p3;

assign p_shl6_cast_fu_2453_p3 = {{tmp_393_fu_2448_p2}, {4'd0}};

assign p_shl7_cast_fu_2469_p1 = tmp_533_fu_2461_p3;

assign p_shl8_cast_fu_2426_p1 = tmp_390_fu_2418_p3;

assign p_shl9_cast_fu_2438_p1 = tmp_391_fu_2430_p3;

assign tmp_33_fu_2531_p2 = (ShuffleConvs_1_Downs_107_reg_4342 + tmp_534_fu_2527_p1);

assign tmp_35_fu_2614_p2 = (ShuffleConvs_1_Downs_23_q0 + tmp_535_fu_2610_p1);

assign tmp_368_fu_2231_p1 = $signed(tmp_530_fu_2224_p3);

assign tmp_369_fu_2239_p2 = (p_shl2_cast_fu_2220_p1 + p_shl3_cast_fu_2235_p1);

assign tmp_370_fu_2160_p2 = (exitcond54_mid_fu_2148_p2 | exitcond_flatten8_reg_4116);

assign tmp_371_fu_2248_p2 = (h_cast_mid2_cast_fu_2245_p1 + tmp_369_fu_2239_p2);

assign tmp_372_fu_2266_p2 = (tmp_531_fu_2254_p2 + tmp_532_fu_2260_p2);

assign tmp_373_fu_2275_p2 = (w_cast_cast_fu_2272_p1 + tmp_372_fu_2266_p2);

assign tmp_374_fu_2312_p3 = {{h1_reg_1782}, {4'd0}};

assign tmp_375_fu_2324_p3 = {{h1_reg_1782}, {1'd0}};

assign tmp_376_fu_2336_p2 = (p_shl5_cast_fu_2332_p1 + p_shl4_cast_fu_2320_p1);

assign tmp_377_fu_2342_p2 = (tmp_376_fu_2336_p2 + 10'd324);

assign tmp_378_fu_2689_p3 = {{h4_reg_1817}, {4'd0}};

assign tmp_379_fu_2701_p3 = {{h4_reg_1817}, {1'd0}};

assign tmp_37_fu_2908_p2 = (ShuffleConvs_1_Downs_131_reg_4601 + tmp_547_fu_2904_p1);

assign tmp_380_fu_2713_p2 = (p_shl11_cast_fu_2709_p1 + p_shl10_cast_fu_2697_p1);

assign tmp_381_fu_2719_p2 = (tmp_380_fu_2713_p2 + 10'd324);

assign tmp_382_fu_2362_p2 = (tmp_376_reg_4178 + w2_cast_cast_fu_2358_p1);

assign tmp_383_fu_2377_p2 = (tmp_377_reg_4183 + w2_cast_cast_fu_2358_p1);

assign tmp_384_fu_3066_p3 = {{h8_reg_1852}, {4'd0}};

assign tmp_385_fu_3078_p3 = {{h8_reg_1852}, {1'd0}};

assign tmp_386_fu_3090_p2 = (p_shl17_cast_fu_3086_p1 + p_shl16_cast_fu_3074_p1);

assign tmp_387_fu_3096_p2 = (tmp_386_fu_3090_p2 + 10'd324);

assign tmp_388_fu_2739_p2 = (tmp_380_reg_4437 + w5_cast_cast_fu_2735_p1);

assign tmp_389_fu_2754_p2 = (tmp_381_reg_4442 + w5_cast_cast_fu_2735_p1);

assign tmp_390_fu_2418_p3 = {{ci_reg_1806}, {4'd0}};

assign tmp_391_fu_2430_p3 = {{ci_reg_1806}, {1'd0}};

assign tmp_392_fu_2442_p2 = (p_shl8_cast_fu_2426_p1 + p_shl9_cast_fu_2438_p1);

assign tmp_393_fu_2448_p2 = (h1_cast_cast_reg_4173 + tmp_392_fu_2442_p2);

assign tmp_394_fu_2473_p2 = (p_shl6_cast_fu_2453_p3 + p_shl7_cast_fu_2469_p1);

assign tmp_395_fu_2479_p2 = (w2_cast_cast4_reg_4191 + tmp_394_fu_2473_p2);

assign tmp_396_fu_2489_p2 = (ci_cast_cast_fu_2414_p1 + 7'd48);

assign tmp_397_fu_3443_p3 = {{h12_reg_1887}, {4'd0}};

assign tmp_398_fu_3455_p3 = {{h12_reg_1887}, {1'd0}};

assign tmp_399_fu_3467_p2 = (p_shl23_cast_fu_3463_p1 + p_shl22_cast_fu_3451_p1);

assign tmp_39_fu_2991_p2 = (ShuffleConvs_1_Downs_3_q0 + tmp_548_fu_2987_p1);

assign tmp_400_fu_3473_p2 = (tmp_399_fu_3467_p2 + 10'd324);

assign tmp_401_fu_3116_p2 = (tmp_386_reg_4696 + w9_cast7_cast_fu_3112_p1);

assign tmp_402_fu_3131_p2 = (tmp_387_reg_4701 + w9_cast7_cast_fu_3112_p1);

assign tmp_403_fu_2795_p3 = {{ci6_reg_1841}, {4'd0}};

assign tmp_404_fu_2807_p3 = {{ci6_reg_1841}, {1'd0}};

assign tmp_405_fu_2819_p2 = (p_shl14_cast_fu_2803_p1 + p_shl15_cast_fu_2815_p1);

assign tmp_406_fu_2825_p2 = (h4_cast_cast_reg_4432 + tmp_405_fu_2819_p2);

assign tmp_407_fu_2850_p2 = (p_shl12_cast_fu_2830_p3 + p_shl13_cast_fu_2846_p1);

assign tmp_408_fu_2856_p2 = (w5_cast_cast4_reg_4450 + tmp_407_fu_2850_p2);

assign tmp_409_fu_2866_p2 = (ci6_cast9_cast_fu_2791_p1 + 7'd48);

assign tmp_410_fu_3493_p2 = (tmp_399_reg_4955 + w13_cast4_cast_fu_3489_p1);

assign tmp_411_fu_3508_p2 = (tmp_400_reg_4960 + w13_cast4_cast_fu_3489_p1);

assign tmp_412_fu_3172_p3 = {{ci10_reg_1876}, {4'd0}};

assign tmp_413_fu_3184_p3 = {{ci10_reg_1876}, {1'd0}};

assign tmp_414_fu_3196_p2 = (p_shl20_cast_fu_3180_p1 + p_shl21_cast_fu_3192_p1);

assign tmp_415_fu_3202_p2 = (h8_cast8_cast_reg_4691 + tmp_414_fu_3196_p2);

assign tmp_416_fu_3227_p2 = (p_shl18_cast_fu_3207_p3 + p_shl19_cast_fu_3223_p1);

assign tmp_417_fu_3233_p2 = (w9_cast7_cast1_reg_4709 + tmp_416_fu_3227_p2);

assign tmp_418_fu_3243_p2 = (ci10_cast6_cast_fu_3168_p1 + 7'd48);

assign tmp_419_fu_3944_p1 = $signed(tmp_561_fu_3937_p3);

assign tmp_41_fu_3285_p2 = (ShuffleConvs_1_Downs_155_reg_4860 + tmp_566_fu_3281_p1);

assign tmp_420_fu_3959_p1 = $signed(tmp_562_fu_3952_p3);

assign tmp_421_fu_3967_p2 = (p_shl30_cast_fu_3948_p1 + p_shl31_cast_fu_3963_p1);

assign tmp_422_fu_3916_p2 = (exitcond_mid_fu_3904_p2 | exitcond_flatten10_reg_5219);

assign tmp_423_fu_3976_p2 = (h17_cast2_mid2_cast_fu_3973_p1 + tmp_421_fu_3967_p2);

assign tmp_424_fu_3994_p2 = (tmp_563_fu_3982_p2 + tmp_564_fu_3988_p2);

assign tmp_425_fu_4003_p2 = (w18_cast1_cast_fu_4000_p1 + tmp_424_fu_3994_p2);

assign tmp_426_fu_3549_p3 = {{ci12_reg_1911}, {4'd0}};

assign tmp_427_fu_3561_p3 = {{ci12_reg_1911}, {1'd0}};

assign tmp_428_cast_fu_2281_p1 = tmp_373_reg_4160;

assign tmp_428_fu_3573_p2 = (p_shl26_cast_fu_3557_p1 + p_shl27_cast_fu_3569_p1);

assign tmp_429_fu_3579_p2 = (h12_cast5_cast_reg_4950 + tmp_428_fu_3573_p2);

assign tmp_430_fu_3604_p2 = (p_shl24_cast_fu_3584_p3 + p_shl25_cast_fu_3600_p1);

assign tmp_431_fu_3610_p2 = (w13_cast4_cast1_reg_4969 + tmp_430_fu_3604_p2);

assign tmp_432_fu_3620_p2 = (ci12_cast3_cast_fu_3545_p1 + 7'd48);

assign tmp_437_cast_fu_2367_p1 = tmp_382_fu_2362_p2;

assign tmp_438_cast_fu_2382_p1 = tmp_383_fu_2377_p2;

assign tmp_43_fu_3368_p2 = (ShuffleConvs_1_Downs_19_q0 + tmp_567_fu_3364_p1);

assign tmp_443_cast_fu_2744_p1 = tmp_388_fu_2739_p2;

assign tmp_444_cast_fu_2759_p1 = tmp_389_fu_2754_p2;

assign tmp_452_cast_fu_2484_p1 = tmp_395_fu_2479_p2;

assign tmp_453_cast_fu_2495_p1 = tmp_396_fu_2489_p2;

assign tmp_458_cast_fu_3121_p1 = tmp_401_fu_3116_p2;

assign tmp_459_cast_fu_3136_p1 = tmp_402_fu_3131_p2;

assign tmp_45_fu_3662_p2 = (ShuffleConvs_1_Downs_179_reg_5120 + tmp_579_fu_3658_p1);

assign tmp_467_cast_fu_2861_p1 = tmp_408_fu_2856_p2;

assign tmp_468_cast_fu_2872_p1 = tmp_409_fu_2866_p2;

assign tmp_469_cast_fu_3498_p1 = tmp_410_fu_3493_p2;

assign tmp_470_cast_fu_3513_p1 = tmp_411_fu_3508_p2;

assign tmp_478_cast_fu_3238_p1 = tmp_417_fu_3233_p2;

assign tmp_479_cast_fu_3249_p1 = tmp_418_fu_3243_p2;

assign tmp_47_fu_3745_p2 = (ShuffleConvs_1_Downs_13_q0 + tmp_580_fu_3741_p1);

assign tmp_48_fu_4045_p25 = grp_fu_3869_p2;

assign tmp_490_cast_fu_4014_p1 = ap_reg_pp1_iter8_tmp_425_reg_5256;

assign tmp_498_cast_fu_3615_p1 = tmp_431_fu_3610_p2;

assign tmp_499_cast_fu_3626_p1 = tmp_432_fu_3620_p2;

assign tmp_529_fu_2209_p3 = {{tmp_528_reg_4154}, {4'd0}};

assign tmp_530_fu_2224_p3 = {{tmp_528_reg_4154}, {1'd0}};

assign tmp_531_fu_2254_p2 = tmp_371_fu_2248_p2 << 11'd4;

assign tmp_532_fu_2260_p2 = tmp_371_fu_2248_p2 << 11'd1;

assign tmp_533_fu_2461_p3 = {{tmp_393_fu_2448_p2}, {1'd0}};

assign tmp_534_fu_2527_p1 = grp_MUL_DP_fu_1979_ap_return_0[7:0];

assign tmp_535_fu_2610_p1 = MUL_DP_ret118_reg_4372_1[7:0];

assign tmp_536_fu_2541_p1 = grp_MUL_DP_fu_1988_ap_return_0[7:0];

assign tmp_537_fu_2623_p1 = MUL_DP_ret119_reg_4377_1[7:0];

assign tmp_538_fu_2555_p1 = grp_MUL_DP_fu_1997_ap_return_0[7:0];

assign tmp_539_fu_2636_p1 = MUL_DP_ret120_reg_4382_1[7:0];

assign tmp_540_fu_2569_p1 = grp_MUL_DP_fu_2006_ap_return_0[7:0];

assign tmp_541_fu_2649_p1 = MUL_DP_ret121_reg_4387_1[7:0];

assign tmp_542_fu_2583_p1 = grp_MUL_DP_fu_2015_ap_return_0[7:0];

assign tmp_543_fu_2662_p1 = MUL_DP_ret122_reg_4392_1[7:0];

assign tmp_544_fu_2597_p1 = grp_MUL_DP_fu_2024_ap_return_0[7:0];

assign tmp_545_fu_2675_p1 = MUL_DP_ret123_reg_4397_1[7:0];

assign tmp_546_fu_2838_p3 = {{tmp_406_fu_2825_p2}, {1'd0}};

assign tmp_547_fu_2904_p1 = grp_MUL_DP_fu_1979_ap_return_0[7:0];

assign tmp_548_fu_2987_p1 = MUL_DP_ret124_reg_4631_1[7:0];

assign tmp_549_fu_2918_p1 = grp_MUL_DP_fu_1988_ap_return_0[7:0];

assign tmp_550_fu_3000_p1 = MUL_DP_ret125_reg_4636_1[7:0];

assign tmp_551_fu_2932_p1 = grp_MUL_DP_fu_1997_ap_return_0[7:0];

assign tmp_552_fu_3013_p1 = MUL_DP_ret126_reg_4641_1[7:0];

assign tmp_553_fu_2946_p1 = grp_MUL_DP_fu_2006_ap_return_0[7:0];

assign tmp_554_fu_3026_p1 = MUL_DP_ret127_reg_4646_1[7:0];

assign tmp_555_fu_2960_p1 = grp_MUL_DP_fu_2015_ap_return_0[7:0];

assign tmp_556_fu_3039_p1 = MUL_DP_ret128_reg_4651_1[7:0];

assign tmp_557_fu_2974_p1 = grp_MUL_DP_fu_2024_ap_return_0[7:0];

assign tmp_558_fu_3052_p1 = MUL_DP_ret129_reg_4656_1[7:0];

assign tmp_559_fu_3215_p3 = {{tmp_415_fu_3202_p2}, {1'd0}};

assign tmp_561_fu_3937_p3 = {{tmp_560_reg_5238}, {4'd0}};

assign tmp_562_fu_3952_p3 = {{tmp_560_reg_5238}, {1'd0}};

assign tmp_563_fu_3982_p2 = tmp_423_fu_3976_p2 << 11'd4;

assign tmp_564_fu_3988_p2 = tmp_423_fu_3976_p2 << 11'd1;

assign tmp_565_fu_4099_p3 = tmp_48_fu_4045_p26[32'd7];

assign tmp_566_fu_3281_p1 = grp_MUL_DP_fu_1979_ap_return_0[7:0];

assign tmp_567_fu_3364_p1 = MUL_DP_ret130_reg_4890_1[7:0];

assign tmp_568_fu_3295_p1 = grp_MUL_DP_fu_1988_ap_return_0[7:0];

assign tmp_569_fu_3377_p1 = MUL_DP_ret131_reg_4895_1[7:0];

assign tmp_56_1_fu_2545_p2 = (ShuffleConvs_1_Downs_109_reg_4347 + tmp_536_fu_2541_p1);

assign tmp_56_2_fu_2559_p2 = (ShuffleConvs_1_Downs_111_reg_4352 + tmp_538_fu_2555_p1);

assign tmp_56_3_fu_2573_p2 = (ShuffleConvs_1_Downs_113_reg_4357 + tmp_540_fu_2569_p1);

assign tmp_56_4_fu_2587_p2 = (ShuffleConvs_1_Downs_115_reg_4362 + tmp_542_fu_2583_p1);

assign tmp_56_5_fu_2601_p2 = (ShuffleConvs_1_Downs_117_reg_4367 + tmp_544_fu_2597_p1);

assign tmp_570_fu_3309_p1 = grp_MUL_DP_fu_1997_ap_return_0[7:0];

assign tmp_571_fu_3390_p1 = MUL_DP_ret132_reg_4900_1[7:0];

assign tmp_572_fu_3323_p1 = grp_MUL_DP_fu_2006_ap_return_0[7:0];

assign tmp_573_fu_3403_p1 = MUL_DP_ret133_reg_4905_1[7:0];

assign tmp_574_fu_3337_p1 = grp_MUL_DP_fu_2015_ap_return_0[7:0];

assign tmp_575_fu_3416_p1 = MUL_DP_ret134_reg_4910_1[7:0];

assign tmp_576_fu_3351_p1 = grp_MUL_DP_fu_2024_ap_return_0[7:0];

assign tmp_577_fu_3429_p1 = MUL_DP_ret135_reg_4915_1[7:0];

assign tmp_578_fu_3592_p3 = {{tmp_429_fu_3579_p2}, {1'd0}};

assign tmp_579_fu_3658_p1 = grp_MUL_DP_fu_1979_ap_return_0[7:0];

assign tmp_580_fu_3741_p1 = MUL_DP_ret136_reg_5150_1[7:0];

assign tmp_581_fu_3672_p1 = grp_MUL_DP_fu_1988_ap_return_0[7:0];

assign tmp_582_fu_3754_p1 = MUL_DP_ret137_reg_5155_1[7:0];

assign tmp_583_fu_3686_p1 = grp_MUL_DP_fu_1997_ap_return_0[7:0];

assign tmp_584_fu_3767_p1 = MUL_DP_ret138_reg_5160_1[7:0];

assign tmp_585_fu_3700_p1 = grp_MUL_DP_fu_2006_ap_return_0[7:0];

assign tmp_586_fu_3780_p1 = MUL_DP_ret139_reg_5165_1[7:0];

assign tmp_587_fu_3714_p1 = grp_MUL_DP_fu_2015_ap_return_0[7:0];

assign tmp_588_fu_3793_p1 = MUL_DP_ret140_reg_5170_1[7:0];

assign tmp_589_fu_3728_p1 = grp_MUL_DP_fu_2024_ap_return_0[7:0];

assign tmp_58_1_fu_2627_p2 = (ShuffleConvs_1_Downs_22_q0 + tmp_537_fu_2623_p1);

assign tmp_58_2_fu_2640_p2 = (ShuffleConvs_1_Downs_11_q0 + tmp_539_fu_2636_p1);

assign tmp_58_3_fu_2653_p2 = (ShuffleConvs_1_Downs_6_q0 + tmp_541_fu_2649_p1);

assign tmp_58_4_fu_2666_p2 = (ShuffleConvs_1_Downs_5_q0 + tmp_543_fu_2662_p1);

assign tmp_58_5_fu_2679_p2 = (ShuffleConvs_1_Downs_4_q0 + tmp_545_fu_2675_p1);

assign tmp_590_fu_3806_p1 = MUL_DP_ret_reg_5175_1[7:0];

assign tmp_61_1_fu_2922_p2 = (ShuffleConvs_1_Downs_133_reg_4606 + tmp_549_fu_2918_p1);

assign tmp_61_2_fu_2936_p2 = (ShuffleConvs_1_Downs_135_reg_4611 + tmp_551_fu_2932_p1);

assign tmp_61_3_fu_2950_p2 = (ShuffleConvs_1_Downs_137_reg_4616 + tmp_553_fu_2946_p1);

assign tmp_61_4_fu_2964_p2 = (ShuffleConvs_1_Downs_139_reg_4621 + tmp_555_fu_2960_p1);

assign tmp_61_5_fu_2978_p2 = (ShuffleConvs_1_Downs_141_reg_4626 + tmp_557_fu_2974_p1);

assign tmp_63_1_fu_3004_p2 = (ShuffleConvs_1_Downs_2_q0 + tmp_550_fu_3000_p1);

assign tmp_63_2_fu_3017_p2 = (ShuffleConvs_1_Downs_1_q0 + tmp_552_fu_3013_p1);

assign tmp_63_3_fu_3030_p2 = (ShuffleConvs_1_Downs_q0 + tmp_554_fu_3026_p1);

assign tmp_63_4_fu_3043_p2 = (ShuffleConvs_1_Downs_21_q0 + tmp_556_fu_3039_p1);

assign tmp_63_5_fu_3056_p2 = (ShuffleConvs_1_Downs_20_q0 + tmp_558_fu_3052_p1);

assign tmp_66_1_fu_3299_p2 = (ShuffleConvs_1_Downs_157_reg_4865 + tmp_568_fu_3295_p1);

assign tmp_66_2_fu_3313_p2 = (ShuffleConvs_1_Downs_159_reg_4870 + tmp_570_fu_3309_p1);

assign tmp_66_3_fu_3327_p2 = (ShuffleConvs_1_Downs_161_reg_4875 + tmp_572_fu_3323_p1);

assign tmp_66_4_fu_3341_p2 = (ShuffleConvs_1_Downs_163_reg_4880 + tmp_574_fu_3337_p1);

assign tmp_66_5_fu_3355_p2 = (ShuffleConvs_1_Downs_165_reg_4885 + tmp_576_fu_3351_p1);

assign tmp_68_1_fu_3381_p2 = (ShuffleConvs_1_Downs_18_q0 + tmp_569_fu_3377_p1);

assign tmp_68_2_fu_3394_p2 = (ShuffleConvs_1_Downs_17_q0 + tmp_571_fu_3390_p1);

assign tmp_68_3_fu_3407_p2 = (ShuffleConvs_1_Downs_16_q0 + tmp_573_fu_3403_p1);

assign tmp_68_4_fu_3420_p2 = (ShuffleConvs_1_Downs_15_q0 + tmp_575_fu_3416_p1);

assign tmp_68_5_fu_3433_p2 = (ShuffleConvs_1_Downs_14_q0 + tmp_577_fu_3429_p1);

assign tmp_72_1_fu_3676_p2 = (ShuffleConvs_1_Downs_181_reg_5125 + tmp_581_fu_3672_p1);

assign tmp_72_2_fu_3690_p2 = (ShuffleConvs_1_Downs_183_reg_5130 + tmp_583_fu_3686_p1);

assign tmp_72_3_fu_3704_p2 = (ShuffleConvs_1_Downs_185_reg_5135 + tmp_585_fu_3700_p1);

assign tmp_72_4_fu_3718_p2 = (ShuffleConvs_1_Downs_187_reg_5140 + tmp_587_fu_3714_p1);

assign tmp_72_5_fu_3732_p2 = (ShuffleConvs_1_Downs_189_reg_5145 + tmp_589_fu_3728_p1);

assign tmp_74_1_fu_3758_p2 = (ShuffleConvs_1_Downs_12_q0 + tmp_582_fu_3754_p1);

assign tmp_74_2_fu_3771_p2 = (ShuffleConvs_1_Downs_10_q0 + tmp_584_fu_3767_p1);

assign tmp_74_3_fu_3784_p2 = (ShuffleConvs_1_Downs_9_q0 + tmp_586_fu_3780_p1);

assign tmp_74_4_fu_3797_p2 = (ShuffleConvs_1_Downs_8_q0 + tmp_588_fu_3793_p1);

assign tmp_74_5_fu_3810_p2 = (ShuffleConvs_1_Downs_7_q0 + tmp_590_fu_3806_p1);

assign tmp_s_fu_2216_p1 = $signed(tmp_529_fu_2209_p3);

assign w13_cast4_cast1_fu_3485_p1 = w13_reg_1899;

assign w13_cast4_cast_fu_3489_p1 = w13_reg_1899;

assign w18_cast1_cast_fu_4000_p1 = w18_mid2_reg_5244;

assign w18_mid2_fu_3921_p3 = ((tmp_422_fu_3916_p2[0:0] === 1'b1) ? 5'd1 : w18_phi_fu_1971_p4);

assign w2_cast_cast4_fu_2354_p1 = w2_reg_1794;

assign w2_cast_cast_fu_2358_p1 = w2_reg_1794;

assign w5_cast_cast4_fu_2731_p1 = w5_reg_1829;

assign w5_cast_cast_fu_2735_p1 = w5_reg_1829;

assign w9_cast7_cast1_fu_3108_p1 = w9_reg_1864;

assign w9_cast7_cast_fu_3112_p1 = w9_reg_1864;

assign w_25_fu_2181_p2 = (w_mid2_reg_4137 + 5'd1);

assign w_26_fu_2517_p2 = (w2_reg_1794 + 5'd1);

assign w_27_fu_2894_p2 = (w5_reg_1829 + 5'd1);

assign w_28_fu_3271_p2 = (w9_reg_1864 + 5'd1);

assign w_29_fu_3648_p2 = (w13_reg_1899 + 5'd1);

assign w_30_fu_4009_p2 = (w18_mid2_reg_5244 + 5'd1);

assign w_cast_cast_fu_2272_p1 = ap_reg_pp0_iter8_w_mid2_reg_4137;

assign w_mid2_fu_2165_p3 = ((tmp_370_fu_2160_p2[0:0] === 1'b1) ? 5'd1 : w_phi_fu_1774_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_4269;

assign weight_0_V_address1 = weight_0_V_addr_8_reg_4274;

assign weight_10_V_address0 = weight_10_V_addr_reg_4568;

assign weight_10_V_address1 = weight_10_V_addr_8_reg_4573;

assign weight_11_V_address0 = weight_11_V_addr_reg_4578;

assign weight_11_V_address1 = weight_11_V_addr_8_reg_4583;

assign weight_12_V_address0 = weight_12_V_addr_reg_4787;

assign weight_12_V_address1 = weight_12_V_addr_8_reg_4792;

assign weight_13_V_address0 = weight_13_V_addr_reg_4797;

assign weight_13_V_address1 = weight_13_V_addr_8_reg_4802;

assign weight_14_V_address0 = weight_14_V_addr_reg_4807;

assign weight_14_V_address1 = weight_14_V_addr_8_reg_4812;

assign weight_15_V_address0 = weight_15_V_addr_reg_4817;

assign weight_15_V_address1 = weight_15_V_addr_8_reg_4822;

assign weight_16_V_address0 = weight_16_V_addr_reg_4827;

assign weight_16_V_address1 = weight_16_V_addr_8_reg_4832;

assign weight_17_V_address0 = weight_17_V_addr_reg_4837;

assign weight_17_V_address1 = weight_17_V_addr_8_reg_4842;

assign weight_18_V_address0 = weight_18_V_addr_reg_5047;

assign weight_18_V_address1 = weight_18_V_addr_8_reg_5052;

assign weight_19_V_address0 = weight_19_V_addr_reg_5057;

assign weight_19_V_address1 = weight_19_V_addr_8_reg_5062;

assign weight_1_V_address0 = weight_1_V_addr_reg_4279;

assign weight_1_V_address1 = weight_1_V_addr_8_reg_4284;

assign weight_20_V_address0 = weight_20_V_addr_reg_5067;

assign weight_20_V_address1 = weight_20_V_addr_8_reg_5072;

assign weight_21_V_address0 = weight_21_V_addr_reg_5077;

assign weight_21_V_address1 = weight_21_V_addr_8_reg_5082;

assign weight_22_V_address0 = weight_22_V_addr_reg_5087;

assign weight_22_V_address1 = weight_22_V_addr_8_reg_5092;

assign weight_23_V_address0 = weight_23_V_addr_reg_5097;

assign weight_23_V_address1 = weight_23_V_addr_8_reg_5102;

assign weight_2_V_address0 = weight_2_V_addr_reg_4289;

assign weight_2_V_address1 = weight_2_V_addr_8_reg_4294;

assign weight_3_V_address0 = weight_3_V_addr_reg_4299;

assign weight_3_V_address1 = weight_3_V_addr_8_reg_4304;

assign weight_4_V_address0 = weight_4_V_addr_reg_4309;

assign weight_4_V_address1 = weight_4_V_addr_8_reg_4314;

assign weight_5_V_address0 = weight_5_V_addr_reg_4319;

assign weight_5_V_address1 = weight_5_V_addr_8_reg_4324;

assign weight_6_V_address0 = weight_6_V_addr_reg_4528;

assign weight_6_V_address1 = weight_6_V_addr_8_reg_4533;

assign weight_7_V_address0 = weight_7_V_addr_reg_4538;

assign weight_7_V_address1 = weight_7_V_addr_8_reg_4543;

assign weight_8_V_address0 = weight_8_V_addr_reg_4548;

assign weight_8_V_address1 = weight_8_V_addr_8_reg_4553;

assign weight_9_V_address0 = weight_9_V_addr_reg_4558;

assign weight_9_V_address1 = weight_9_V_addr_8_reg_4563;

always @ (posedge ap_clk) begin
    h1_cast_cast_reg_4173[10:5] <= 6'b000000;
    tmp_376_reg_4178[0] <= 1'b0;
    tmp_377_reg_4183[0] <= 1'b0;
    w2_cast_cast4_reg_4191[14:5] <= 10'b0000000000;
    weight_0_V_addr_reg_4269[6] <= 1'b0;
    weight_1_V_addr_reg_4279[6] <= 1'b0;
    weight_2_V_addr_reg_4289[6] <= 1'b0;
    weight_3_V_addr_reg_4299[6] <= 1'b0;
    weight_4_V_addr_reg_4309[6] <= 1'b0;
    weight_5_V_addr_reg_4319[6] <= 1'b0;
    h4_cast_cast_reg_4432[10:5] <= 6'b000000;
    tmp_380_reg_4437[0] <= 1'b0;
    tmp_381_reg_4442[0] <= 1'b0;
    w5_cast_cast4_reg_4450[14:5] <= 10'b0000000000;
    weight_6_V_addr_reg_4528[6] <= 1'b0;
    weight_7_V_addr_reg_4538[6] <= 1'b0;
    weight_8_V_addr_reg_4548[6] <= 1'b0;
    weight_9_V_addr_reg_4558[6] <= 1'b0;
    weight_10_V_addr_reg_4568[6] <= 1'b0;
    weight_11_V_addr_reg_4578[6] <= 1'b0;
    h8_cast8_cast_reg_4691[10:5] <= 6'b000000;
    tmp_386_reg_4696[0] <= 1'b0;
    tmp_387_reg_4701[0] <= 1'b0;
    w9_cast7_cast1_reg_4709[14:5] <= 10'b0000000000;
    weight_12_V_addr_reg_4787[6] <= 1'b0;
    weight_13_V_addr_reg_4797[6] <= 1'b0;
    weight_14_V_addr_reg_4807[6] <= 1'b0;
    weight_15_V_addr_reg_4817[6] <= 1'b0;
    weight_16_V_addr_reg_4827[6] <= 1'b0;
    weight_17_V_addr_reg_4837[6] <= 1'b0;
    h12_cast5_cast_reg_4950[10:5] <= 6'b000000;
    tmp_399_reg_4955[0] <= 1'b0;
    tmp_400_reg_4960[0] <= 1'b0;
    w13_cast4_cast1_reg_4969[14:5] <= 10'b0000000000;
    weight_18_V_addr_reg_5047[6] <= 1'b0;
    weight_19_V_addr_reg_5057[6] <= 1'b0;
    weight_20_V_addr_reg_5067[6] <= 1'b0;
    weight_21_V_addr_reg_5077[6] <= 1'b0;
    weight_22_V_addr_reg_5087[6] <= 1'b0;
    weight_23_V_addr_reg_5097[6] <= 1'b0;
end

endmodule //subconv_1x1_16p_p
