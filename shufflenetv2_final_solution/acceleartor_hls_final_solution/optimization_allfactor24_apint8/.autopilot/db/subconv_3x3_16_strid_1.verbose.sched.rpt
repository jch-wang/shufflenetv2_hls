

================================================================
== Vivado HLS Report for 'subconv_3x3_16_strid_1'
================================================================
* Date:           Fri Dec 21 17:11:16 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        acceleartor_hls_padding
* Solution:       try_single_function
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.91|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  111457|  111457|  111457|  111457|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                         |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1                 |  111456|  111456|      2322|          -|          -|    48|    no    |
        | + Loop 1.1              |    2320|    2320|       290|          -|          -|     8|    no    |
        |  ++ Loop 1.1.1          |     288|     288|        36|          -|          -|     8|    no    |
        |   +++ Loop 1.1.1.1      |      33|      33|        11|          -|          -|     3|    no    |
        |    ++++ Loop 1.1.1.1.1  |       9|       9|         3|          -|          -|     3|    no    |
        +-------------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond8)
3 --> 
	4  / (!exitcond9)
	2  / (exitcond9)
4 --> 
	5  / (!exitcond1)
	3  / (exitcond1)
5 --> 
	9  / (exitcond2)
	6  / (!exitcond2)
6 --> 
	7  / (!exitcond)
	5  / (exitcond)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_10 (28)  [1/1] 1.59ns  loc: acceleartor_hls_padding/components.cpp:739
:0  br label %.loopexit


 <State 2>: 5.95ns
ST_2: co (30)  [1/1] 0.00ns
.loopexit:0  %co = phi i6 [ 0, %0 ], [ %co_5, %.loopexit.loopexit ]

ST_2: phi_mul (31)  [1/1] 0.00ns
.loopexit:1  %phi_mul = phi i13 [ 0, %0 ], [ %next_mul, %.loopexit.loopexit ]

ST_2: next_mul (32)  [1/1] 2.34ns
.loopexit:2  %next_mul = add i13 %phi_mul, 86

ST_2: co_cast7 (33)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:3  %co_cast7 = zext i6 %co to i32

ST_2: co_cast7_cast (34)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:4  %co_cast7_cast = zext i6 %co to i9

ST_2: tmp_115 (35)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:5  %tmp_115 = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %co, i2 0)

ST_2: p_shl2_cast (36)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.loopexit:6  %p_shl2_cast = zext i8 %tmp_115 to i9

ST_2: tmp_116 (37)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:745
.loopexit:7  %tmp_116 = sub i9 %p_shl2_cast, %co_cast7_cast

ST_2: tmp_142_cast (38)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.loopexit:8  %tmp_142_cast = sext i9 %tmp_116 to i10

ST_2: tmp_117 (39)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:9  %tmp_117 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %co, i3 0)

ST_2: p_shl_cast (40)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:10  %p_shl_cast = zext i9 %tmp_117 to i10

ST_2: tmp_118 (41)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:11  %tmp_118 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %co, i1 false)

ST_2: p_shl1_cast (42)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.loopexit:12  %p_shl1_cast = zext i7 %tmp_118 to i10

ST_2: tmp_119 (43)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:750
.loopexit:13  %tmp_119 = add i10 %p_shl1_cast, %p_shl_cast

ST_2: exitcond8 (44)  [1/1] 3.88ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:14  %exitcond8 = icmp eq i6 %co, -16

ST_2: empty (45)  [1/1] 0.00ns
.loopexit:15  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)

ST_2: co_5 (46)  [1/1] 2.31ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:16  %co_5 = add i6 %co, 1

ST_2: StgValue_28 (47)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.loopexit:17  br i1 %exitcond8, label %4, label %.preheader70.preheader

ST_2: bias_V_addr (49)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:749
.preheader70.preheader:0  %bias_V_addr = getelementptr [48 x i8]* %bias_V, i32 0, i32 %co_cast7

ST_2: tmp_120 (50)  [1/1] 3.88ns  loc: acceleartor_hls_padding/components.cpp:739
.preheader70.preheader:1  %tmp_120 = icmp ult i6 %co, 24

ST_2: tmp_121 (51)  [1/1] 2.31ns  loc: acceleartor_hls_padding/components.cpp:739
.preheader70.preheader:2  %tmp_121 = add i6 %co, -24

ST_2: arrayNo (52)  [1/1] 2.07ns  loc: acceleartor_hls_padding/components.cpp:739
.preheader70.preheader:3  %arrayNo = select i1 %tmp_120, i6 %co, i6 %tmp_121

ST_2: arrayNo_cast (53)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:739
.preheader70.preheader:4  %arrayNo_cast = zext i6 %arrayNo to i32

ST_2: tmp_86 (54)  [1/1] 0.00ns
.preheader70.preheader:5  %tmp_86 = call i2 @_ssdm_op_PartSelect.i2.i13.i32.i32(i13 %phi_mul, i32 11, i32 12)

ST_2: tmp_87 (55)  [1/1] 0.00ns
.preheader70.preheader:6  %tmp_87 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_86, i4 0)

ST_2: p_shl3_cast (56)  [1/1] 0.00ns
.preheader70.preheader:7  %p_shl3_cast = zext i6 %tmp_87 to i11

ST_2: tmp_88 (57)  [1/1] 0.00ns
.preheader70.preheader:8  %tmp_88 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %tmp_86, i1 false)

ST_2: p_shl4_cast (58)  [1/1] 0.00ns
.preheader70.preheader:9  %p_shl4_cast = zext i3 %tmp_88 to i11

ST_2: tmp_122 (59)  [1/1] 2.31ns
.preheader70.preheader:10  %tmp_122 = add i11 %p_shl3_cast, %p_shl4_cast

ST_2: StgValue_40 (60)  [1/1] 1.59ns  loc: acceleartor_hls_padding/components.cpp:740
.preheader70.preheader:11  br label %.preheader70

ST_2: StgValue_41 (194)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:780
:0  ret void


 <State 3>: 4.66ns
ST_3: h (62)  [1/1] 0.00ns
.preheader70:0  %h = phi i4 [ %h_5, %3 ], [ 1, %.preheader70.preheader ]

ST_3: h_cast6_cast (63)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:1  %h_cast6_cast = zext i4 %h to i10

ST_3: tmp_123 (64)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:2  %tmp_123 = add i10 %h_cast6_cast, %tmp_119

ST_3: tmp_89 (65)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:3  %tmp_89 = call i13 @_ssdm_op_BitConcatenate.i13.i10.i3(i10 %tmp_123, i3 0)

ST_3: p_shl5_cast (66)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:4  %p_shl5_cast = zext i13 %tmp_89 to i14

ST_3: tmp_90 (67)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:5  %tmp_90 = call i11 @_ssdm_op_BitConcatenate.i11.i10.i1(i10 %tmp_123, i1 false)

ST_3: p_shl6_cast (68)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:6  %p_shl6_cast = zext i11 %tmp_90 to i14

ST_3: tmp_124 (69)  [1/1] 2.34ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader70:7  %tmp_124 = add i14 %p_shl5_cast, %p_shl6_cast

ST_3: exitcond9 (70)  [1/1] 3.10ns  loc: acceleartor_hls_padding/components.cpp:740
.preheader70:8  %exitcond9 = icmp eq i4 %h, -7

ST_3: empty_53 (71)  [1/1] 0.00ns
.preheader70:9  %empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_3: StgValue_52 (72)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:740
.preheader70:10  br i1 %exitcond9, label %.loopexit.loopexit, label %.preheader69.preheader

ST_3: tmp (74)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader69.preheader:0  %tmp = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h, i1 false)

ST_3: StgValue_54 (75)  [1/1] 1.59ns  loc: acceleartor_hls_padding/components.cpp:741
.preheader69.preheader:1  br label %.preheader69

ST_3: StgValue_55 (192)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.10ns
ST_4: w (77)  [1/1] 0.00ns
.preheader69:0  %w = phi i4 [ %w_5, %2 ], [ 1, %.preheader69.preheader ]

ST_4: w_cast5_cast (78)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader69:1  %w_cast5_cast = zext i4 %w to i14

ST_4: tmp_125 (79)  [1/1] 2.34ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader69:2  %tmp_125 = add i14 %tmp_124, %w_cast5_cast

ST_4: tmp_157_cast (80)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader69:3  %tmp_157_cast = zext i14 %tmp_125 to i32

ST_4: output_V_addr (81)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:750
.preheader69:4  %output_V_addr = getelementptr [4800 x i8]* %output_V, i32 0, i32 %tmp_157_cast

ST_4: exitcond1 (82)  [1/1] 3.10ns  loc: acceleartor_hls_padding/components.cpp:741
.preheader69:5  %exitcond1 = icmp eq i4 %w, -7

ST_4: empty_54 (83)  [1/1] 0.00ns
.preheader69:6  %empty_54 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_4: StgValue_63 (84)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:741
.preheader69:7  br i1 %exitcond1, label %3, label %.preheader68.preheader

ST_4: tmp_s (86)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader68.preheader:0  %tmp_s = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %w, i1 false)

ST_4: StgValue_65 (87)  [1/1] 1.59ns  loc: acceleartor_hls_padding/components.cpp:743
.preheader68.preheader:1  br label %.preheader68

ST_4: h_5 (189)  [1/1] 2.35ns  loc: acceleartor_hls_padding/components.cpp:740
:0  %h_5 = add i4 %h, 1

ST_4: StgValue_67 (190)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:740
:1  br label %.preheader70


 <State 5>: 6.97ns
ST_5: p_s (89)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader68:0  %p_s = phi i8 [ 0, %.preheader68.preheader ], [ %p_09_1, %.preheader68.loopexit ]

ST_5: m (90)  [1/1] 0.00ns
.preheader68:1  %m = phi i2 [ 0, %.preheader68.preheader ], [ %m_5, %.preheader68.loopexit ]

ST_5: m_cast4_cast (91)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader68:2  %m_cast4_cast = zext i2 %m to i10

ST_5: tmp_126 (92)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader68:3  %tmp_126 = add i10 %m_cast4_cast, %tmp_142_cast

ST_5: tmp_91 (93)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_127)
.preheader68:4  %tmp_91 = shl i10 %tmp_126, 2

ST_5: tmp_127 (94)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:745 (out node of the LUT)
.preheader68:5  %tmp_127 = sub i10 %tmp_91, %tmp_126

ST_5: exitcond2 (95)  [1/1] 2.07ns  loc: acceleartor_hls_padding/components.cpp:743
.preheader68:6  %exitcond2 = icmp eq i2 %m, -1

ST_5: empty_55 (96)  [1/1] 0.00ns
.preheader68:7  %empty_55 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_5: m_5 (97)  [1/1] 2.17ns  loc: acceleartor_hls_padding/components.cpp:743
.preheader68:8  %m_5 = add i2 1, %m

ST_5: StgValue_77 (98)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:743
.preheader68:9  br i1 %exitcond2, label %2, label %.preheader.preheader

ST_5: tmp1 (100)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_6)
.preheader.preheader:0  %tmp1 = xor i2 %m, -2

ST_5: tmp1_cast (101)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_6)
.preheader.preheader:1  %tmp1_cast = sext i2 %tmp1 to i5

ST_5: tmp_6 (102)  [1/1] 2.33ns  loc: acceleartor_hls_padding/components.cpp:745 (out node of the LUT)
.preheader.preheader:2  %tmp_6 = add i5 %tmp1_cast, %tmp

ST_5: tmp_6_cast_cast (103)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader.preheader:3  %tmp_6_cast_cast = zext i5 %tmp_6 to i11

ST_5: tmp_128 (104)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader.preheader:4  %tmp_128 = add i11 %tmp_6_cast_cast, %tmp_122

ST_5: tmp_92 (105)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_129)
.preheader.preheader:5  %tmp_92 = shl i11 %tmp_128, 4

ST_5: tmp_93 (106)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_129)
.preheader.preheader:6  %tmp_93 = shl i11 %tmp_128, 1

ST_5: tmp_129 (107)  [1/1] 2.33ns  loc: acceleartor_hls_padding/components.cpp:745 (out node of the LUT)
.preheader.preheader:7  %tmp_129 = add i11 %tmp_92, %tmp_93

ST_5: StgValue_86 (108)  [1/1] 1.59ns  loc: acceleartor_hls_padding/components.cpp:744
.preheader.preheader:8  br label %.preheader

ST_5: bias_V_load (183)  [2/2] 2.32ns  loc: acceleartor_hls_padding/components.cpp:749
:0  %bias_V_load = load i8* %bias_V_addr, align 1

ST_5: w_5 (186)  [1/1] 2.35ns  loc: acceleartor_hls_padding/components.cpp:741
:3  %w_5 = add i4 %w, 1


 <State 6>: 7.91ns
ST_6: p_09_1 (110)  [1/1] 0.00ns
.preheader:0  %p_09_1 = phi i8 [ %sum_V, %1 ], [ %p_s, %.preheader.preheader ]

ST_6: n (111)  [1/1] 0.00ns
.preheader:1  %n = phi i2 [ %n_5, %1 ], [ 0, %.preheader.preheader ]

ST_6: n_cast3_cast (112)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader:2  %n_cast3_cast = zext i2 %n to i10

ST_6: tmp_130 (113)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader:3  %tmp_130 = add i10 %tmp_127, %n_cast3_cast

ST_6: tmp_165_cast (114)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader:4  %tmp_165_cast = zext i10 %tmp_130 to i32

ST_6: weight_V_addr (115)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
.preheader:5  %weight_V_addr = getelementptr [432 x i8]* %weight_V, i32 0, i32 %tmp_165_cast

ST_6: exitcond (116)  [1/1] 2.07ns  loc: acceleartor_hls_padding/components.cpp:744
.preheader:6  %exitcond = icmp eq i2 %n, -1

ST_6: empty_56 (117)  [1/1] 0.00ns
.preheader:7  %empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_6: n_5 (118)  [1/1] 2.17ns  loc: acceleartor_hls_padding/components.cpp:744
.preheader:8  %n_5 = add i2 %n, 1

ST_6: StgValue_98 (119)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:744
.preheader:9  br i1 %exitcond, label %.preheader68.loopexit, label %1

ST_6: tmp2 (121)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_8)
:0  %tmp2 = xor i2 %n, -2

ST_6: tmp2_cast (122)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745 (grouped into LUT with out node tmp_8)
:1  %tmp2_cast = sext i2 %tmp2 to i5

ST_6: tmp_8 (123)  [1/1] 2.33ns  loc: acceleartor_hls_padding/components.cpp:745 (out node of the LUT)
:2  %tmp_8 = add i5 %tmp_s, %tmp2_cast

ST_6: tmp_8_cast_cast (124)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:3  %tmp_8_cast_cast = zext i5 %tmp_8 to i11

ST_6: tmp_131 (125)  [1/1] 2.33ns  loc: acceleartor_hls_padding/components.cpp:745
:4  %tmp_131 = add i11 %tmp_129, %tmp_8_cast_cast

ST_6: tmp_166_cast (126)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:5  %tmp_166_cast = zext i11 %tmp_131 to i32

ST_6: ShuffleConvs_1_Downs (127)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:6  %ShuffleConvs_1_Downs = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_16, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_25 (128)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:7  %ShuffleConvs_1_Downs_25 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_5, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_26 (129)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:8  %ShuffleConvs_1_Downs_26 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_11, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_27 (130)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:9  %ShuffleConvs_1_Downs_27 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_7, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_28 (131)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:10  %ShuffleConvs_1_Downs_28 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_8, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_29 (132)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:11  %ShuffleConvs_1_Downs_29 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_4, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_30 (133)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:12  %ShuffleConvs_1_Downs_30 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_9, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_31 (134)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:13  %ShuffleConvs_1_Downs_31 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_14, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_32 (135)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:14  %ShuffleConvs_1_Downs_32 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_15, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_33 (136)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:15  %ShuffleConvs_1_Downs_33 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_6, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_34 (137)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:16  %ShuffleConvs_1_Downs_34 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_19, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_35 (138)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:17  %ShuffleConvs_1_Downs_35 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_17, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_36 (139)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:18  %ShuffleConvs_1_Downs_36 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_18, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_37 (140)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:19  %ShuffleConvs_1_Downs_37 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_13, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_38 (141)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:20  %ShuffleConvs_1_Downs_38 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_22, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_39 (142)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:21  %ShuffleConvs_1_Downs_39 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_21, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_40 (143)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:22  %ShuffleConvs_1_Downs_40 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_20, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_41 (144)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:23  %ShuffleConvs_1_Downs_41 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_12, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_42 (145)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:24  %ShuffleConvs_1_Downs_42 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_23, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_43 (146)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:25  %ShuffleConvs_1_Downs_43 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_10, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_44 (147)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:26  %ShuffleConvs_1_Downs_44 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_1, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_45 (148)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:27  %ShuffleConvs_1_Downs_45 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_46 (149)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:28  %ShuffleConvs_1_Downs_46 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_3, i32 0, i32 %tmp_166_cast

ST_6: ShuffleConvs_1_Downs_47 (150)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:745
:29  %ShuffleConvs_1_Downs_47 = getelementptr [648 x i8]* @ShuffleConvs_1_Downs_2, i32 0, i32 %tmp_166_cast

ST_6: weight_V_load (151)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:30  %weight_V_load = load i8* %weight_V_addr, align 1

ST_6: ShuffleConvs_1_Downs_48 (152)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:31  %ShuffleConvs_1_Downs_48 = load i8* %ShuffleConvs_1_Downs_42, align 1

ST_6: ShuffleConvs_1_Downs_49 (153)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:32  %ShuffleConvs_1_Downs_49 = load i8* %ShuffleConvs_1_Downs_38, align 1

ST_6: ShuffleConvs_1_Downs_50 (154)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:33  %ShuffleConvs_1_Downs_50 = load i8* %ShuffleConvs_1_Downs_26, align 1

ST_6: ShuffleConvs_1_Downs_51 (155)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:34  %ShuffleConvs_1_Downs_51 = load i8* %ShuffleConvs_1_Downs_33, align 1

ST_6: ShuffleConvs_1_Downs_52 (156)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:35  %ShuffleConvs_1_Downs_52 = load i8* %ShuffleConvs_1_Downs_25, align 1

ST_6: ShuffleConvs_1_Downs_53 (157)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:36  %ShuffleConvs_1_Downs_53 = load i8* %ShuffleConvs_1_Downs_29, align 1

ST_6: ShuffleConvs_1_Downs_54 (158)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:37  %ShuffleConvs_1_Downs_54 = load i8* %ShuffleConvs_1_Downs_46, align 1

ST_6: ShuffleConvs_1_Downs_55 (159)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:38  %ShuffleConvs_1_Downs_55 = load i8* %ShuffleConvs_1_Downs_47, align 1

ST_6: ShuffleConvs_1_Downs_56 (160)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:39  %ShuffleConvs_1_Downs_56 = load i8* %ShuffleConvs_1_Downs_44, align 1

ST_6: ShuffleConvs_1_Downs_57 (161)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:40  %ShuffleConvs_1_Downs_57 = load i8* %ShuffleConvs_1_Downs_45, align 1

ST_6: ShuffleConvs_1_Downs_58 (162)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:41  %ShuffleConvs_1_Downs_58 = load i8* %ShuffleConvs_1_Downs_39, align 1

ST_6: ShuffleConvs_1_Downs_59 (163)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:42  %ShuffleConvs_1_Downs_59 = load i8* %ShuffleConvs_1_Downs_40, align 1

ST_6: ShuffleConvs_1_Downs_60 (164)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:43  %ShuffleConvs_1_Downs_60 = load i8* %ShuffleConvs_1_Downs_34, align 1

ST_6: ShuffleConvs_1_Downs_61 (165)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:44  %ShuffleConvs_1_Downs_61 = load i8* %ShuffleConvs_1_Downs_36, align 1

ST_6: ShuffleConvs_1_Downs_62 (166)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:45  %ShuffleConvs_1_Downs_62 = load i8* %ShuffleConvs_1_Downs_35, align 1

ST_6: ShuffleConvs_1_Downs_63 (167)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:46  %ShuffleConvs_1_Downs_63 = load i8* %ShuffleConvs_1_Downs, align 1

ST_6: ShuffleConvs_1_Downs_64 (168)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:47  %ShuffleConvs_1_Downs_64 = load i8* %ShuffleConvs_1_Downs_32, align 1

ST_6: ShuffleConvs_1_Downs_65 (169)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:48  %ShuffleConvs_1_Downs_65 = load i8* %ShuffleConvs_1_Downs_31, align 1

ST_6: ShuffleConvs_1_Downs_66 (170)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:49  %ShuffleConvs_1_Downs_66 = load i8* %ShuffleConvs_1_Downs_37, align 1

ST_6: ShuffleConvs_1_Downs_67 (171)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:50  %ShuffleConvs_1_Downs_67 = load i8* %ShuffleConvs_1_Downs_41, align 1

ST_6: ShuffleConvs_1_Downs_68 (172)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:51  %ShuffleConvs_1_Downs_68 = load i8* %ShuffleConvs_1_Downs_43, align 1

ST_6: ShuffleConvs_1_Downs_69 (173)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:52  %ShuffleConvs_1_Downs_69 = load i8* %ShuffleConvs_1_Downs_30, align 1

ST_6: ShuffleConvs_1_Downs_70 (174)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:53  %ShuffleConvs_1_Downs_70 = load i8* %ShuffleConvs_1_Downs_28, align 1

ST_6: ShuffleConvs_1_Downs_71 (175)  [2/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:54  %ShuffleConvs_1_Downs_71 = load i8* %ShuffleConvs_1_Downs_27, align 1

ST_6: StgValue_154 (181)  [1/1] 0.00ns
.preheader68.loopexit:0  br label %.preheader68


 <State 7>: 6.46ns
ST_7: weight_V_load (151)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:30  %weight_V_load = load i8* %weight_V_addr, align 1

ST_7: ShuffleConvs_1_Downs_48 (152)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:31  %ShuffleConvs_1_Downs_48 = load i8* %ShuffleConvs_1_Downs_42, align 1

ST_7: ShuffleConvs_1_Downs_49 (153)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:32  %ShuffleConvs_1_Downs_49 = load i8* %ShuffleConvs_1_Downs_38, align 1

ST_7: ShuffleConvs_1_Downs_50 (154)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:33  %ShuffleConvs_1_Downs_50 = load i8* %ShuffleConvs_1_Downs_26, align 1

ST_7: ShuffleConvs_1_Downs_51 (155)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:34  %ShuffleConvs_1_Downs_51 = load i8* %ShuffleConvs_1_Downs_33, align 1

ST_7: ShuffleConvs_1_Downs_52 (156)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:35  %ShuffleConvs_1_Downs_52 = load i8* %ShuffleConvs_1_Downs_25, align 1

ST_7: ShuffleConvs_1_Downs_53 (157)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:36  %ShuffleConvs_1_Downs_53 = load i8* %ShuffleConvs_1_Downs_29, align 1

ST_7: ShuffleConvs_1_Downs_54 (158)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:37  %ShuffleConvs_1_Downs_54 = load i8* %ShuffleConvs_1_Downs_46, align 1

ST_7: ShuffleConvs_1_Downs_55 (159)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:38  %ShuffleConvs_1_Downs_55 = load i8* %ShuffleConvs_1_Downs_47, align 1

ST_7: ShuffleConvs_1_Downs_56 (160)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:39  %ShuffleConvs_1_Downs_56 = load i8* %ShuffleConvs_1_Downs_44, align 1

ST_7: ShuffleConvs_1_Downs_57 (161)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:40  %ShuffleConvs_1_Downs_57 = load i8* %ShuffleConvs_1_Downs_45, align 1

ST_7: ShuffleConvs_1_Downs_58 (162)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:41  %ShuffleConvs_1_Downs_58 = load i8* %ShuffleConvs_1_Downs_39, align 1

ST_7: ShuffleConvs_1_Downs_59 (163)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:42  %ShuffleConvs_1_Downs_59 = load i8* %ShuffleConvs_1_Downs_40, align 1

ST_7: ShuffleConvs_1_Downs_60 (164)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:43  %ShuffleConvs_1_Downs_60 = load i8* %ShuffleConvs_1_Downs_34, align 1

ST_7: ShuffleConvs_1_Downs_61 (165)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:44  %ShuffleConvs_1_Downs_61 = load i8* %ShuffleConvs_1_Downs_36, align 1

ST_7: ShuffleConvs_1_Downs_62 (166)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:45  %ShuffleConvs_1_Downs_62 = load i8* %ShuffleConvs_1_Downs_35, align 1

ST_7: ShuffleConvs_1_Downs_63 (167)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:46  %ShuffleConvs_1_Downs_63 = load i8* %ShuffleConvs_1_Downs, align 1

ST_7: ShuffleConvs_1_Downs_64 (168)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:47  %ShuffleConvs_1_Downs_64 = load i8* %ShuffleConvs_1_Downs_32, align 1

ST_7: ShuffleConvs_1_Downs_65 (169)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:48  %ShuffleConvs_1_Downs_65 = load i8* %ShuffleConvs_1_Downs_31, align 1

ST_7: ShuffleConvs_1_Downs_66 (170)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:49  %ShuffleConvs_1_Downs_66 = load i8* %ShuffleConvs_1_Downs_37, align 1

ST_7: ShuffleConvs_1_Downs_67 (171)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:50  %ShuffleConvs_1_Downs_67 = load i8* %ShuffleConvs_1_Downs_41, align 1

ST_7: ShuffleConvs_1_Downs_68 (172)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:51  %ShuffleConvs_1_Downs_68 = load i8* %ShuffleConvs_1_Downs_43, align 1

ST_7: ShuffleConvs_1_Downs_69 (173)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:52  %ShuffleConvs_1_Downs_69 = load i8* %ShuffleConvs_1_Downs_30, align 1

ST_7: ShuffleConvs_1_Downs_70 (174)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:53  %ShuffleConvs_1_Downs_70 = load i8* %ShuffleConvs_1_Downs_28, align 1

ST_7: ShuffleConvs_1_Downs_71 (175)  [1/2] 3.25ns  loc: acceleartor_hls_padding/components.cpp:745
:54  %ShuffleConvs_1_Downs_71 = load i8* %ShuffleConvs_1_Downs_27, align 1

ST_7: tmp_4 (176)  [1/1] 3.20ns  loc: acceleartor_hls_padding/components.cpp:745
:55  %tmp_4 = call i8 @_ssdm_op_Mux.ap_auto.24i8.i32(i8 %ShuffleConvs_1_Downs_48, i8 %ShuffleConvs_1_Downs_49, i8 %ShuffleConvs_1_Downs_50, i8 %ShuffleConvs_1_Downs_51, i8 %ShuffleConvs_1_Downs_52, i8 %ShuffleConvs_1_Downs_53, i8 %ShuffleConvs_1_Downs_54, i8 %ShuffleConvs_1_Downs_55, i8 %ShuffleConvs_1_Downs_56, i8 %ShuffleConvs_1_Downs_57, i8 %ShuffleConvs_1_Downs_58, i8 %ShuffleConvs_1_Downs_59, i8 %ShuffleConvs_1_Downs_60, i8 %ShuffleConvs_1_Downs_61, i8 %ShuffleConvs_1_Downs_62, i8 %ShuffleConvs_1_Downs_63, i8 %ShuffleConvs_1_Downs_64, i8 %ShuffleConvs_1_Downs_65, i8 %ShuffleConvs_1_Downs_66, i8 %ShuffleConvs_1_Downs_67, i8 %ShuffleConvs_1_Downs_68, i8 %ShuffleConvs_1_Downs_69, i8 %ShuffleConvs_1_Downs_70, i8 %ShuffleConvs_1_Downs_71, i32 %arrayNo_cast)


 <State 8>: 6.38ns
ST_8: tmp_9 (177)  [1/1] 3.36ns  loc: acceleartor_hls_padding/components.cpp:745
:56  %tmp_9 = mul i8 %tmp_4, %weight_V_load

ST_8: sum_V (178)  [1/1] 3.02ns  loc: acceleartor_hls_padding/components.cpp:745
:57  %sum_V = add i8 %p_09_1, %tmp_9

ST_8: StgValue_183 (179)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:744
:58  br label %.preheader


 <State 9>: 7.89ns
ST_9: bias_V_load (183)  [1/2] 2.32ns  loc: acceleartor_hls_padding/components.cpp:749
:0  %bias_V_load = load i8* %bias_V_addr, align 1

ST_9: result_V (184)  [1/1] 2.32ns  loc: acceleartor_hls_padding/components.cpp:749
:1  %result_V = add i8 %bias_V_load, %p_s

ST_9: StgValue_186 (185)  [1/1] 3.25ns  loc: acceleartor_hls_padding/components.cpp:750
:2  store i8 %result_V, i8* %output_V_addr, align 1

ST_9: StgValue_187 (187)  [1/1] 0.00ns  loc: acceleartor_hls_padding/components.cpp:741
:4  br label %.preheader69



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('co') with incoming values : ('co', acceleartor_hls_padding/components.cpp:739) [30]  (1.59 ns)

 <State 2>: 5.95ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', acceleartor_hls_padding/components.cpp:739) [30]  (0 ns)
	'icmp' operation ('tmp_120', acceleartor_hls_padding/components.cpp:739) [50]  (3.88 ns)
	'select' operation ('arrayNo', acceleartor_hls_padding/components.cpp:739) [52]  (2.07 ns)

 <State 3>: 4.66ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', acceleartor_hls_padding/components.cpp:740) [62]  (0 ns)
	'add' operation ('tmp_123', acceleartor_hls_padding/components.cpp:750) [64]  (2.32 ns)
	'add' operation ('tmp_124', acceleartor_hls_padding/components.cpp:750) [69]  (2.34 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', acceleartor_hls_padding/components.cpp:741) [77]  (0 ns)
	'icmp' operation ('exitcond1', acceleartor_hls_padding/components.cpp:741) [82]  (3.1 ns)

 <State 5>: 6.97ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', acceleartor_hls_padding/components.cpp:743) [90]  (0 ns)
	'xor' operation ('tmp1', acceleartor_hls_padding/components.cpp:745) [100]  (0 ns)
	'add' operation ('tmp_6', acceleartor_hls_padding/components.cpp:745) [102]  (2.33 ns)
	'add' operation ('tmp_128', acceleartor_hls_padding/components.cpp:745) [104]  (2.32 ns)
	'shl' operation ('tmp_93', acceleartor_hls_padding/components.cpp:745) [106]  (0 ns)
	'add' operation ('tmp_129', acceleartor_hls_padding/components.cpp:745) [107]  (2.33 ns)

 <State 6>: 7.91ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', acceleartor_hls_padding/components.cpp:744) [111]  (0 ns)
	'xor' operation ('tmp2', acceleartor_hls_padding/components.cpp:745) [121]  (0 ns)
	'add' operation ('tmp_8', acceleartor_hls_padding/components.cpp:745) [123]  (2.33 ns)
	'add' operation ('tmp_131', acceleartor_hls_padding/components.cpp:745) [125]  (2.33 ns)
	'getelementptr' operation ('ShuffleConvs_1_Downs', acceleartor_hls_padding/components.cpp:745) [127]  (0 ns)
	'load' operation ('ShuffleConvs_1_Downs_63', acceleartor_hls_padding/components.cpp:745) on array 'ShuffleConvs_1_Downs_16' [167]  (3.25 ns)

 <State 7>: 6.46ns
The critical path consists of the following:
	'load' operation ('ShuffleConvs_1_Downs_48', acceleartor_hls_padding/components.cpp:745) on array 'ShuffleConvs_1_Downs_23' [152]  (3.25 ns)
	'mux' operation ('tmp_4', acceleartor_hls_padding/components.cpp:745) [176]  (3.2 ns)

 <State 8>: 6.38ns
The critical path consists of the following:
	'mul' operation ('tmp_9', acceleartor_hls_padding/components.cpp:745) [177]  (3.36 ns)
	'add' operation ('sum.V', acceleartor_hls_padding/components.cpp:745) [178]  (3.02 ns)

 <State 9>: 7.89ns
The critical path consists of the following:
	'load' operation ('bias_V_load', acceleartor_hls_padding/components.cpp:749) on array 'bias_V' [183]  (2.32 ns)
	'add' operation ('result.V', acceleartor_hls_padding/components.cpp:749) [184]  (2.32 ns)
	'store' operation (acceleartor_hls_padding/components.cpp:750) of variable 'result.V', acceleartor_hls_padding/components.cpp:749 on array 'output_V' [185]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
