// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_3x3_8_stride (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_V_address0,
        weight_V_ce0,
        weight_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        ShuffleConvs_2_Downs_95_address0,
        ShuffleConvs_2_Downs_95_ce0,
        ShuffleConvs_2_Downs_95_q0,
        ShuffleConvs_2_Downs_94_address0,
        ShuffleConvs_2_Downs_94_ce0,
        ShuffleConvs_2_Downs_94_q0,
        ShuffleConvs_2_Downs_83_address0,
        ShuffleConvs_2_Downs_83_ce0,
        ShuffleConvs_2_Downs_83_q0,
        ShuffleConvs_2_Downs_72_address0,
        ShuffleConvs_2_Downs_72_ce0,
        ShuffleConvs_2_Downs_72_q0,
        ShuffleConvs_2_Downs_61_address0,
        ShuffleConvs_2_Downs_61_ce0,
        ShuffleConvs_2_Downs_61_q0,
        ShuffleConvs_2_Downs_50_address0,
        ShuffleConvs_2_Downs_50_ce0,
        ShuffleConvs_2_Downs_50_q0,
        ShuffleConvs_2_Downs_39_address0,
        ShuffleConvs_2_Downs_39_ce0,
        ShuffleConvs_2_Downs_39_q0,
        ShuffleConvs_2_Downs_28_address0,
        ShuffleConvs_2_Downs_28_ce0,
        ShuffleConvs_2_Downs_28_q0,
        ShuffleConvs_2_Downs_17_address0,
        ShuffleConvs_2_Downs_17_ce0,
        ShuffleConvs_2_Downs_17_q0,
        ShuffleConvs_2_Downs_6_address0,
        ShuffleConvs_2_Downs_6_ce0,
        ShuffleConvs_2_Downs_6_q0,
        ShuffleConvs_2_Downs_93_address0,
        ShuffleConvs_2_Downs_93_ce0,
        ShuffleConvs_2_Downs_93_q0,
        ShuffleConvs_2_Downs_92_address0,
        ShuffleConvs_2_Downs_92_ce0,
        ShuffleConvs_2_Downs_92_q0,
        ShuffleConvs_2_Downs_91_address0,
        ShuffleConvs_2_Downs_91_ce0,
        ShuffleConvs_2_Downs_91_q0,
        ShuffleConvs_2_Downs_90_address0,
        ShuffleConvs_2_Downs_90_ce0,
        ShuffleConvs_2_Downs_90_q0,
        ShuffleConvs_2_Downs_89_address0,
        ShuffleConvs_2_Downs_89_ce0,
        ShuffleConvs_2_Downs_89_q0,
        ShuffleConvs_2_Downs_88_address0,
        ShuffleConvs_2_Downs_88_ce0,
        ShuffleConvs_2_Downs_88_q0,
        ShuffleConvs_2_Downs_87_address0,
        ShuffleConvs_2_Downs_87_ce0,
        ShuffleConvs_2_Downs_87_q0,
        ShuffleConvs_2_Downs_86_address0,
        ShuffleConvs_2_Downs_86_ce0,
        ShuffleConvs_2_Downs_86_q0,
        ShuffleConvs_2_Downs_85_address0,
        ShuffleConvs_2_Downs_85_ce0,
        ShuffleConvs_2_Downs_85_q0,
        ShuffleConvs_2_Downs_84_address0,
        ShuffleConvs_2_Downs_84_ce0,
        ShuffleConvs_2_Downs_84_q0,
        ShuffleConvs_2_Downs_82_address0,
        ShuffleConvs_2_Downs_82_ce0,
        ShuffleConvs_2_Downs_82_q0,
        ShuffleConvs_2_Downs_81_address0,
        ShuffleConvs_2_Downs_81_ce0,
        ShuffleConvs_2_Downs_81_q0,
        ShuffleConvs_2_Downs_80_address0,
        ShuffleConvs_2_Downs_80_ce0,
        ShuffleConvs_2_Downs_80_q0,
        ShuffleConvs_2_Downs_79_address0,
        ShuffleConvs_2_Downs_79_ce0,
        ShuffleConvs_2_Downs_79_q0,
        ShuffleConvs_2_Downs_78_address0,
        ShuffleConvs_2_Downs_78_ce0,
        ShuffleConvs_2_Downs_78_q0,
        ShuffleConvs_2_Downs_77_address0,
        ShuffleConvs_2_Downs_77_ce0,
        ShuffleConvs_2_Downs_77_q0,
        ShuffleConvs_2_Downs_76_address0,
        ShuffleConvs_2_Downs_76_ce0,
        ShuffleConvs_2_Downs_76_q0,
        ShuffleConvs_2_Downs_75_address0,
        ShuffleConvs_2_Downs_75_ce0,
        ShuffleConvs_2_Downs_75_q0,
        ShuffleConvs_2_Downs_74_address0,
        ShuffleConvs_2_Downs_74_ce0,
        ShuffleConvs_2_Downs_74_q0,
        ShuffleConvs_2_Downs_73_address0,
        ShuffleConvs_2_Downs_73_ce0,
        ShuffleConvs_2_Downs_73_q0,
        ShuffleConvs_2_Downs_71_address0,
        ShuffleConvs_2_Downs_71_ce0,
        ShuffleConvs_2_Downs_71_q0,
        ShuffleConvs_2_Downs_70_address0,
        ShuffleConvs_2_Downs_70_ce0,
        ShuffleConvs_2_Downs_70_q0,
        ShuffleConvs_2_Downs_69_address0,
        ShuffleConvs_2_Downs_69_ce0,
        ShuffleConvs_2_Downs_69_q0,
        ShuffleConvs_2_Downs_68_address0,
        ShuffleConvs_2_Downs_68_ce0,
        ShuffleConvs_2_Downs_68_q0,
        ShuffleConvs_2_Downs_67_address0,
        ShuffleConvs_2_Downs_67_ce0,
        ShuffleConvs_2_Downs_67_q0,
        ShuffleConvs_2_Downs_66_address0,
        ShuffleConvs_2_Downs_66_ce0,
        ShuffleConvs_2_Downs_66_q0,
        ShuffleConvs_2_Downs_65_address0,
        ShuffleConvs_2_Downs_65_ce0,
        ShuffleConvs_2_Downs_65_q0,
        ShuffleConvs_2_Downs_64_address0,
        ShuffleConvs_2_Downs_64_ce0,
        ShuffleConvs_2_Downs_64_q0,
        ShuffleConvs_2_Downs_63_address0,
        ShuffleConvs_2_Downs_63_ce0,
        ShuffleConvs_2_Downs_63_q0,
        ShuffleConvs_2_Downs_62_address0,
        ShuffleConvs_2_Downs_62_ce0,
        ShuffleConvs_2_Downs_62_q0,
        ShuffleConvs_2_Downs_60_address0,
        ShuffleConvs_2_Downs_60_ce0,
        ShuffleConvs_2_Downs_60_q0,
        ShuffleConvs_2_Downs_59_address0,
        ShuffleConvs_2_Downs_59_ce0,
        ShuffleConvs_2_Downs_59_q0,
        ShuffleConvs_2_Downs_58_address0,
        ShuffleConvs_2_Downs_58_ce0,
        ShuffleConvs_2_Downs_58_q0,
        ShuffleConvs_2_Downs_57_address0,
        ShuffleConvs_2_Downs_57_ce0,
        ShuffleConvs_2_Downs_57_q0,
        ShuffleConvs_2_Downs_56_address0,
        ShuffleConvs_2_Downs_56_ce0,
        ShuffleConvs_2_Downs_56_q0,
        ShuffleConvs_2_Downs_55_address0,
        ShuffleConvs_2_Downs_55_ce0,
        ShuffleConvs_2_Downs_55_q0,
        ShuffleConvs_2_Downs_54_address0,
        ShuffleConvs_2_Downs_54_ce0,
        ShuffleConvs_2_Downs_54_q0,
        ShuffleConvs_2_Downs_53_address0,
        ShuffleConvs_2_Downs_53_ce0,
        ShuffleConvs_2_Downs_53_q0,
        ShuffleConvs_2_Downs_52_address0,
        ShuffleConvs_2_Downs_52_ce0,
        ShuffleConvs_2_Downs_52_q0,
        ShuffleConvs_2_Downs_51_address0,
        ShuffleConvs_2_Downs_51_ce0,
        ShuffleConvs_2_Downs_51_q0,
        ShuffleConvs_2_Downs_49_address0,
        ShuffleConvs_2_Downs_49_ce0,
        ShuffleConvs_2_Downs_49_q0,
        ShuffleConvs_2_Downs_48_address0,
        ShuffleConvs_2_Downs_48_ce0,
        ShuffleConvs_2_Downs_48_q0,
        ShuffleConvs_2_Downs_47_address0,
        ShuffleConvs_2_Downs_47_ce0,
        ShuffleConvs_2_Downs_47_q0,
        ShuffleConvs_2_Downs_46_address0,
        ShuffleConvs_2_Downs_46_ce0,
        ShuffleConvs_2_Downs_46_q0,
        ShuffleConvs_2_Downs_45_address0,
        ShuffleConvs_2_Downs_45_ce0,
        ShuffleConvs_2_Downs_45_q0,
        ShuffleConvs_2_Downs_44_address0,
        ShuffleConvs_2_Downs_44_ce0,
        ShuffleConvs_2_Downs_44_q0,
        ShuffleConvs_2_Downs_43_address0,
        ShuffleConvs_2_Downs_43_ce0,
        ShuffleConvs_2_Downs_43_q0,
        ShuffleConvs_2_Downs_42_address0,
        ShuffleConvs_2_Downs_42_ce0,
        ShuffleConvs_2_Downs_42_q0,
        ShuffleConvs_2_Downs_41_address0,
        ShuffleConvs_2_Downs_41_ce0,
        ShuffleConvs_2_Downs_41_q0,
        ShuffleConvs_2_Downs_40_address0,
        ShuffleConvs_2_Downs_40_ce0,
        ShuffleConvs_2_Downs_40_q0,
        ShuffleConvs_2_Downs_38_address0,
        ShuffleConvs_2_Downs_38_ce0,
        ShuffleConvs_2_Downs_38_q0,
        ShuffleConvs_2_Downs_37_address0,
        ShuffleConvs_2_Downs_37_ce0,
        ShuffleConvs_2_Downs_37_q0,
        ShuffleConvs_2_Downs_36_address0,
        ShuffleConvs_2_Downs_36_ce0,
        ShuffleConvs_2_Downs_36_q0,
        ShuffleConvs_2_Downs_35_address0,
        ShuffleConvs_2_Downs_35_ce0,
        ShuffleConvs_2_Downs_35_q0,
        ShuffleConvs_2_Downs_34_address0,
        ShuffleConvs_2_Downs_34_ce0,
        ShuffleConvs_2_Downs_34_q0,
        ShuffleConvs_2_Downs_33_address0,
        ShuffleConvs_2_Downs_33_ce0,
        ShuffleConvs_2_Downs_33_q0,
        ShuffleConvs_2_Downs_32_address0,
        ShuffleConvs_2_Downs_32_ce0,
        ShuffleConvs_2_Downs_32_q0,
        ShuffleConvs_2_Downs_31_address0,
        ShuffleConvs_2_Downs_31_ce0,
        ShuffleConvs_2_Downs_31_q0,
        ShuffleConvs_2_Downs_30_address0,
        ShuffleConvs_2_Downs_30_ce0,
        ShuffleConvs_2_Downs_30_q0,
        ShuffleConvs_2_Downs_29_address0,
        ShuffleConvs_2_Downs_29_ce0,
        ShuffleConvs_2_Downs_29_q0,
        ShuffleConvs_2_Downs_27_address0,
        ShuffleConvs_2_Downs_27_ce0,
        ShuffleConvs_2_Downs_27_q0,
        ShuffleConvs_2_Downs_26_address0,
        ShuffleConvs_2_Downs_26_ce0,
        ShuffleConvs_2_Downs_26_q0,
        ShuffleConvs_2_Downs_25_address0,
        ShuffleConvs_2_Downs_25_ce0,
        ShuffleConvs_2_Downs_25_q0,
        ShuffleConvs_2_Downs_24_address0,
        ShuffleConvs_2_Downs_24_ce0,
        ShuffleConvs_2_Downs_24_q0,
        ShuffleConvs_2_Downs_23_address0,
        ShuffleConvs_2_Downs_23_ce0,
        ShuffleConvs_2_Downs_23_q0,
        ShuffleConvs_2_Downs_22_address0,
        ShuffleConvs_2_Downs_22_ce0,
        ShuffleConvs_2_Downs_22_q0,
        ShuffleConvs_2_Downs_21_address0,
        ShuffleConvs_2_Downs_21_ce0,
        ShuffleConvs_2_Downs_21_q0,
        ShuffleConvs_2_Downs_20_address0,
        ShuffleConvs_2_Downs_20_ce0,
        ShuffleConvs_2_Downs_20_q0,
        ShuffleConvs_2_Downs_19_address0,
        ShuffleConvs_2_Downs_19_ce0,
        ShuffleConvs_2_Downs_19_q0,
        ShuffleConvs_2_Downs_18_address0,
        ShuffleConvs_2_Downs_18_ce0,
        ShuffleConvs_2_Downs_18_q0,
        ShuffleConvs_2_Downs_16_address0,
        ShuffleConvs_2_Downs_16_ce0,
        ShuffleConvs_2_Downs_16_q0,
        ShuffleConvs_2_Downs_15_address0,
        ShuffleConvs_2_Downs_15_ce0,
        ShuffleConvs_2_Downs_15_q0,
        ShuffleConvs_2_Downs_14_address0,
        ShuffleConvs_2_Downs_14_ce0,
        ShuffleConvs_2_Downs_14_q0,
        ShuffleConvs_2_Downs_13_address0,
        ShuffleConvs_2_Downs_13_ce0,
        ShuffleConvs_2_Downs_13_q0,
        ShuffleConvs_2_Downs_12_address0,
        ShuffleConvs_2_Downs_12_ce0,
        ShuffleConvs_2_Downs_12_q0,
        ShuffleConvs_2_Downs_11_address0,
        ShuffleConvs_2_Downs_11_ce0,
        ShuffleConvs_2_Downs_11_q0,
        ShuffleConvs_2_Downs_10_address0,
        ShuffleConvs_2_Downs_10_ce0,
        ShuffleConvs_2_Downs_10_q0,
        ShuffleConvs_2_Downs_9_address0,
        ShuffleConvs_2_Downs_9_ce0,
        ShuffleConvs_2_Downs_9_q0,
        ShuffleConvs_2_Downs_8_address0,
        ShuffleConvs_2_Downs_8_ce0,
        ShuffleConvs_2_Downs_8_q0,
        ShuffleConvs_2_Downs_7_address0,
        ShuffleConvs_2_Downs_7_ce0,
        ShuffleConvs_2_Downs_7_q0,
        ShuffleConvs_2_Downs_5_address0,
        ShuffleConvs_2_Downs_5_ce0,
        ShuffleConvs_2_Downs_5_q0,
        ShuffleConvs_2_Downs_4_address0,
        ShuffleConvs_2_Downs_4_ce0,
        ShuffleConvs_2_Downs_4_q0,
        ShuffleConvs_2_Downs_3_address0,
        ShuffleConvs_2_Downs_3_ce0,
        ShuffleConvs_2_Downs_3_q0,
        ShuffleConvs_2_Downs_2_address0,
        ShuffleConvs_2_Downs_2_ce0,
        ShuffleConvs_2_Downs_2_q0,
        ShuffleConvs_2_Downs_1_address0,
        ShuffleConvs_2_Downs_1_ce0,
        ShuffleConvs_2_Downs_1_q0,
        ShuffleConvs_2_Downs_address0,
        ShuffleConvs_2_Downs_ce0,
        ShuffleConvs_2_Downs_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] weight_V_address0;
output   weight_V_ce0;
input  [7:0] weight_V_q0;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [11:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [7:0] output_V_d0;
output  [6:0] ShuffleConvs_2_Downs_95_address0;
output   ShuffleConvs_2_Downs_95_ce0;
input  [7:0] ShuffleConvs_2_Downs_95_q0;
output  [6:0] ShuffleConvs_2_Downs_94_address0;
output   ShuffleConvs_2_Downs_94_ce0;
input  [7:0] ShuffleConvs_2_Downs_94_q0;
output  [6:0] ShuffleConvs_2_Downs_83_address0;
output   ShuffleConvs_2_Downs_83_ce0;
input  [7:0] ShuffleConvs_2_Downs_83_q0;
output  [6:0] ShuffleConvs_2_Downs_72_address0;
output   ShuffleConvs_2_Downs_72_ce0;
input  [7:0] ShuffleConvs_2_Downs_72_q0;
output  [6:0] ShuffleConvs_2_Downs_61_address0;
output   ShuffleConvs_2_Downs_61_ce0;
input  [7:0] ShuffleConvs_2_Downs_61_q0;
output  [6:0] ShuffleConvs_2_Downs_50_address0;
output   ShuffleConvs_2_Downs_50_ce0;
input  [7:0] ShuffleConvs_2_Downs_50_q0;
output  [6:0] ShuffleConvs_2_Downs_39_address0;
output   ShuffleConvs_2_Downs_39_ce0;
input  [7:0] ShuffleConvs_2_Downs_39_q0;
output  [6:0] ShuffleConvs_2_Downs_28_address0;
output   ShuffleConvs_2_Downs_28_ce0;
input  [7:0] ShuffleConvs_2_Downs_28_q0;
output  [6:0] ShuffleConvs_2_Downs_17_address0;
output   ShuffleConvs_2_Downs_17_ce0;
input  [7:0] ShuffleConvs_2_Downs_17_q0;
output  [6:0] ShuffleConvs_2_Downs_6_address0;
output   ShuffleConvs_2_Downs_6_ce0;
input  [7:0] ShuffleConvs_2_Downs_6_q0;
output  [6:0] ShuffleConvs_2_Downs_93_address0;
output   ShuffleConvs_2_Downs_93_ce0;
input  [7:0] ShuffleConvs_2_Downs_93_q0;
output  [6:0] ShuffleConvs_2_Downs_92_address0;
output   ShuffleConvs_2_Downs_92_ce0;
input  [7:0] ShuffleConvs_2_Downs_92_q0;
output  [6:0] ShuffleConvs_2_Downs_91_address0;
output   ShuffleConvs_2_Downs_91_ce0;
input  [7:0] ShuffleConvs_2_Downs_91_q0;
output  [6:0] ShuffleConvs_2_Downs_90_address0;
output   ShuffleConvs_2_Downs_90_ce0;
input  [7:0] ShuffleConvs_2_Downs_90_q0;
output  [6:0] ShuffleConvs_2_Downs_89_address0;
output   ShuffleConvs_2_Downs_89_ce0;
input  [7:0] ShuffleConvs_2_Downs_89_q0;
output  [6:0] ShuffleConvs_2_Downs_88_address0;
output   ShuffleConvs_2_Downs_88_ce0;
input  [7:0] ShuffleConvs_2_Downs_88_q0;
output  [6:0] ShuffleConvs_2_Downs_87_address0;
output   ShuffleConvs_2_Downs_87_ce0;
input  [7:0] ShuffleConvs_2_Downs_87_q0;
output  [6:0] ShuffleConvs_2_Downs_86_address0;
output   ShuffleConvs_2_Downs_86_ce0;
input  [7:0] ShuffleConvs_2_Downs_86_q0;
output  [6:0] ShuffleConvs_2_Downs_85_address0;
output   ShuffleConvs_2_Downs_85_ce0;
input  [7:0] ShuffleConvs_2_Downs_85_q0;
output  [6:0] ShuffleConvs_2_Downs_84_address0;
output   ShuffleConvs_2_Downs_84_ce0;
input  [7:0] ShuffleConvs_2_Downs_84_q0;
output  [6:0] ShuffleConvs_2_Downs_82_address0;
output   ShuffleConvs_2_Downs_82_ce0;
input  [7:0] ShuffleConvs_2_Downs_82_q0;
output  [6:0] ShuffleConvs_2_Downs_81_address0;
output   ShuffleConvs_2_Downs_81_ce0;
input  [7:0] ShuffleConvs_2_Downs_81_q0;
output  [6:0] ShuffleConvs_2_Downs_80_address0;
output   ShuffleConvs_2_Downs_80_ce0;
input  [7:0] ShuffleConvs_2_Downs_80_q0;
output  [6:0] ShuffleConvs_2_Downs_79_address0;
output   ShuffleConvs_2_Downs_79_ce0;
input  [7:0] ShuffleConvs_2_Downs_79_q0;
output  [6:0] ShuffleConvs_2_Downs_78_address0;
output   ShuffleConvs_2_Downs_78_ce0;
input  [7:0] ShuffleConvs_2_Downs_78_q0;
output  [6:0] ShuffleConvs_2_Downs_77_address0;
output   ShuffleConvs_2_Downs_77_ce0;
input  [7:0] ShuffleConvs_2_Downs_77_q0;
output  [6:0] ShuffleConvs_2_Downs_76_address0;
output   ShuffleConvs_2_Downs_76_ce0;
input  [7:0] ShuffleConvs_2_Downs_76_q0;
output  [6:0] ShuffleConvs_2_Downs_75_address0;
output   ShuffleConvs_2_Downs_75_ce0;
input  [7:0] ShuffleConvs_2_Downs_75_q0;
output  [6:0] ShuffleConvs_2_Downs_74_address0;
output   ShuffleConvs_2_Downs_74_ce0;
input  [7:0] ShuffleConvs_2_Downs_74_q0;
output  [6:0] ShuffleConvs_2_Downs_73_address0;
output   ShuffleConvs_2_Downs_73_ce0;
input  [7:0] ShuffleConvs_2_Downs_73_q0;
output  [6:0] ShuffleConvs_2_Downs_71_address0;
output   ShuffleConvs_2_Downs_71_ce0;
input  [7:0] ShuffleConvs_2_Downs_71_q0;
output  [6:0] ShuffleConvs_2_Downs_70_address0;
output   ShuffleConvs_2_Downs_70_ce0;
input  [7:0] ShuffleConvs_2_Downs_70_q0;
output  [6:0] ShuffleConvs_2_Downs_69_address0;
output   ShuffleConvs_2_Downs_69_ce0;
input  [7:0] ShuffleConvs_2_Downs_69_q0;
output  [6:0] ShuffleConvs_2_Downs_68_address0;
output   ShuffleConvs_2_Downs_68_ce0;
input  [7:0] ShuffleConvs_2_Downs_68_q0;
output  [6:0] ShuffleConvs_2_Downs_67_address0;
output   ShuffleConvs_2_Downs_67_ce0;
input  [7:0] ShuffleConvs_2_Downs_67_q0;
output  [6:0] ShuffleConvs_2_Downs_66_address0;
output   ShuffleConvs_2_Downs_66_ce0;
input  [7:0] ShuffleConvs_2_Downs_66_q0;
output  [6:0] ShuffleConvs_2_Downs_65_address0;
output   ShuffleConvs_2_Downs_65_ce0;
input  [7:0] ShuffleConvs_2_Downs_65_q0;
output  [6:0] ShuffleConvs_2_Downs_64_address0;
output   ShuffleConvs_2_Downs_64_ce0;
input  [7:0] ShuffleConvs_2_Downs_64_q0;
output  [6:0] ShuffleConvs_2_Downs_63_address0;
output   ShuffleConvs_2_Downs_63_ce0;
input  [7:0] ShuffleConvs_2_Downs_63_q0;
output  [6:0] ShuffleConvs_2_Downs_62_address0;
output   ShuffleConvs_2_Downs_62_ce0;
input  [7:0] ShuffleConvs_2_Downs_62_q0;
output  [6:0] ShuffleConvs_2_Downs_60_address0;
output   ShuffleConvs_2_Downs_60_ce0;
input  [7:0] ShuffleConvs_2_Downs_60_q0;
output  [6:0] ShuffleConvs_2_Downs_59_address0;
output   ShuffleConvs_2_Downs_59_ce0;
input  [7:0] ShuffleConvs_2_Downs_59_q0;
output  [6:0] ShuffleConvs_2_Downs_58_address0;
output   ShuffleConvs_2_Downs_58_ce0;
input  [7:0] ShuffleConvs_2_Downs_58_q0;
output  [6:0] ShuffleConvs_2_Downs_57_address0;
output   ShuffleConvs_2_Downs_57_ce0;
input  [7:0] ShuffleConvs_2_Downs_57_q0;
output  [6:0] ShuffleConvs_2_Downs_56_address0;
output   ShuffleConvs_2_Downs_56_ce0;
input  [7:0] ShuffleConvs_2_Downs_56_q0;
output  [6:0] ShuffleConvs_2_Downs_55_address0;
output   ShuffleConvs_2_Downs_55_ce0;
input  [7:0] ShuffleConvs_2_Downs_55_q0;
output  [6:0] ShuffleConvs_2_Downs_54_address0;
output   ShuffleConvs_2_Downs_54_ce0;
input  [7:0] ShuffleConvs_2_Downs_54_q0;
output  [6:0] ShuffleConvs_2_Downs_53_address0;
output   ShuffleConvs_2_Downs_53_ce0;
input  [7:0] ShuffleConvs_2_Downs_53_q0;
output  [6:0] ShuffleConvs_2_Downs_52_address0;
output   ShuffleConvs_2_Downs_52_ce0;
input  [7:0] ShuffleConvs_2_Downs_52_q0;
output  [6:0] ShuffleConvs_2_Downs_51_address0;
output   ShuffleConvs_2_Downs_51_ce0;
input  [7:0] ShuffleConvs_2_Downs_51_q0;
output  [6:0] ShuffleConvs_2_Downs_49_address0;
output   ShuffleConvs_2_Downs_49_ce0;
input  [7:0] ShuffleConvs_2_Downs_49_q0;
output  [6:0] ShuffleConvs_2_Downs_48_address0;
output   ShuffleConvs_2_Downs_48_ce0;
input  [7:0] ShuffleConvs_2_Downs_48_q0;
output  [6:0] ShuffleConvs_2_Downs_47_address0;
output   ShuffleConvs_2_Downs_47_ce0;
input  [7:0] ShuffleConvs_2_Downs_47_q0;
output  [6:0] ShuffleConvs_2_Downs_46_address0;
output   ShuffleConvs_2_Downs_46_ce0;
input  [7:0] ShuffleConvs_2_Downs_46_q0;
output  [6:0] ShuffleConvs_2_Downs_45_address0;
output   ShuffleConvs_2_Downs_45_ce0;
input  [7:0] ShuffleConvs_2_Downs_45_q0;
output  [6:0] ShuffleConvs_2_Downs_44_address0;
output   ShuffleConvs_2_Downs_44_ce0;
input  [7:0] ShuffleConvs_2_Downs_44_q0;
output  [6:0] ShuffleConvs_2_Downs_43_address0;
output   ShuffleConvs_2_Downs_43_ce0;
input  [7:0] ShuffleConvs_2_Downs_43_q0;
output  [6:0] ShuffleConvs_2_Downs_42_address0;
output   ShuffleConvs_2_Downs_42_ce0;
input  [7:0] ShuffleConvs_2_Downs_42_q0;
output  [6:0] ShuffleConvs_2_Downs_41_address0;
output   ShuffleConvs_2_Downs_41_ce0;
input  [7:0] ShuffleConvs_2_Downs_41_q0;
output  [6:0] ShuffleConvs_2_Downs_40_address0;
output   ShuffleConvs_2_Downs_40_ce0;
input  [7:0] ShuffleConvs_2_Downs_40_q0;
output  [6:0] ShuffleConvs_2_Downs_38_address0;
output   ShuffleConvs_2_Downs_38_ce0;
input  [7:0] ShuffleConvs_2_Downs_38_q0;
output  [6:0] ShuffleConvs_2_Downs_37_address0;
output   ShuffleConvs_2_Downs_37_ce0;
input  [7:0] ShuffleConvs_2_Downs_37_q0;
output  [6:0] ShuffleConvs_2_Downs_36_address0;
output   ShuffleConvs_2_Downs_36_ce0;
input  [7:0] ShuffleConvs_2_Downs_36_q0;
output  [6:0] ShuffleConvs_2_Downs_35_address0;
output   ShuffleConvs_2_Downs_35_ce0;
input  [7:0] ShuffleConvs_2_Downs_35_q0;
output  [6:0] ShuffleConvs_2_Downs_34_address0;
output   ShuffleConvs_2_Downs_34_ce0;
input  [7:0] ShuffleConvs_2_Downs_34_q0;
output  [6:0] ShuffleConvs_2_Downs_33_address0;
output   ShuffleConvs_2_Downs_33_ce0;
input  [7:0] ShuffleConvs_2_Downs_33_q0;
output  [6:0] ShuffleConvs_2_Downs_32_address0;
output   ShuffleConvs_2_Downs_32_ce0;
input  [7:0] ShuffleConvs_2_Downs_32_q0;
output  [6:0] ShuffleConvs_2_Downs_31_address0;
output   ShuffleConvs_2_Downs_31_ce0;
input  [7:0] ShuffleConvs_2_Downs_31_q0;
output  [6:0] ShuffleConvs_2_Downs_30_address0;
output   ShuffleConvs_2_Downs_30_ce0;
input  [7:0] ShuffleConvs_2_Downs_30_q0;
output  [6:0] ShuffleConvs_2_Downs_29_address0;
output   ShuffleConvs_2_Downs_29_ce0;
input  [7:0] ShuffleConvs_2_Downs_29_q0;
output  [6:0] ShuffleConvs_2_Downs_27_address0;
output   ShuffleConvs_2_Downs_27_ce0;
input  [7:0] ShuffleConvs_2_Downs_27_q0;
output  [6:0] ShuffleConvs_2_Downs_26_address0;
output   ShuffleConvs_2_Downs_26_ce0;
input  [7:0] ShuffleConvs_2_Downs_26_q0;
output  [6:0] ShuffleConvs_2_Downs_25_address0;
output   ShuffleConvs_2_Downs_25_ce0;
input  [7:0] ShuffleConvs_2_Downs_25_q0;
output  [6:0] ShuffleConvs_2_Downs_24_address0;
output   ShuffleConvs_2_Downs_24_ce0;
input  [7:0] ShuffleConvs_2_Downs_24_q0;
output  [6:0] ShuffleConvs_2_Downs_23_address0;
output   ShuffleConvs_2_Downs_23_ce0;
input  [7:0] ShuffleConvs_2_Downs_23_q0;
output  [6:0] ShuffleConvs_2_Downs_22_address0;
output   ShuffleConvs_2_Downs_22_ce0;
input  [7:0] ShuffleConvs_2_Downs_22_q0;
output  [6:0] ShuffleConvs_2_Downs_21_address0;
output   ShuffleConvs_2_Downs_21_ce0;
input  [7:0] ShuffleConvs_2_Downs_21_q0;
output  [6:0] ShuffleConvs_2_Downs_20_address0;
output   ShuffleConvs_2_Downs_20_ce0;
input  [7:0] ShuffleConvs_2_Downs_20_q0;
output  [6:0] ShuffleConvs_2_Downs_19_address0;
output   ShuffleConvs_2_Downs_19_ce0;
input  [7:0] ShuffleConvs_2_Downs_19_q0;
output  [6:0] ShuffleConvs_2_Downs_18_address0;
output   ShuffleConvs_2_Downs_18_ce0;
input  [7:0] ShuffleConvs_2_Downs_18_q0;
output  [6:0] ShuffleConvs_2_Downs_16_address0;
output   ShuffleConvs_2_Downs_16_ce0;
input  [7:0] ShuffleConvs_2_Downs_16_q0;
output  [6:0] ShuffleConvs_2_Downs_15_address0;
output   ShuffleConvs_2_Downs_15_ce0;
input  [7:0] ShuffleConvs_2_Downs_15_q0;
output  [6:0] ShuffleConvs_2_Downs_14_address0;
output   ShuffleConvs_2_Downs_14_ce0;
input  [7:0] ShuffleConvs_2_Downs_14_q0;
output  [6:0] ShuffleConvs_2_Downs_13_address0;
output   ShuffleConvs_2_Downs_13_ce0;
input  [7:0] ShuffleConvs_2_Downs_13_q0;
output  [6:0] ShuffleConvs_2_Downs_12_address0;
output   ShuffleConvs_2_Downs_12_ce0;
input  [7:0] ShuffleConvs_2_Downs_12_q0;
output  [6:0] ShuffleConvs_2_Downs_11_address0;
output   ShuffleConvs_2_Downs_11_ce0;
input  [7:0] ShuffleConvs_2_Downs_11_q0;
output  [6:0] ShuffleConvs_2_Downs_10_address0;
output   ShuffleConvs_2_Downs_10_ce0;
input  [7:0] ShuffleConvs_2_Downs_10_q0;
output  [6:0] ShuffleConvs_2_Downs_9_address0;
output   ShuffleConvs_2_Downs_9_ce0;
input  [7:0] ShuffleConvs_2_Downs_9_q0;
output  [6:0] ShuffleConvs_2_Downs_8_address0;
output   ShuffleConvs_2_Downs_8_ce0;
input  [7:0] ShuffleConvs_2_Downs_8_q0;
output  [6:0] ShuffleConvs_2_Downs_7_address0;
output   ShuffleConvs_2_Downs_7_ce0;
input  [7:0] ShuffleConvs_2_Downs_7_q0;
output  [6:0] ShuffleConvs_2_Downs_5_address0;
output   ShuffleConvs_2_Downs_5_ce0;
input  [7:0] ShuffleConvs_2_Downs_5_q0;
output  [6:0] ShuffleConvs_2_Downs_4_address0;
output   ShuffleConvs_2_Downs_4_ce0;
input  [7:0] ShuffleConvs_2_Downs_4_q0;
output  [6:0] ShuffleConvs_2_Downs_3_address0;
output   ShuffleConvs_2_Downs_3_ce0;
input  [7:0] ShuffleConvs_2_Downs_3_q0;
output  [6:0] ShuffleConvs_2_Downs_2_address0;
output   ShuffleConvs_2_Downs_2_ce0;
input  [7:0] ShuffleConvs_2_Downs_2_q0;
output  [6:0] ShuffleConvs_2_Downs_1_address0;
output   ShuffleConvs_2_Downs_1_ce0;
input  [7:0] ShuffleConvs_2_Downs_1_q0;
output  [6:0] ShuffleConvs_2_Downs_address0;
output   ShuffleConvs_2_Downs_ce0;
input  [7:0] ShuffleConvs_2_Downs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_V_ce0;
reg bias_V_ce0;
reg output_V_ce0;
reg output_V_we0;
reg ShuffleConvs_2_Downs_95_ce0;
reg ShuffleConvs_2_Downs_94_ce0;
reg ShuffleConvs_2_Downs_83_ce0;
reg ShuffleConvs_2_Downs_72_ce0;
reg ShuffleConvs_2_Downs_61_ce0;
reg ShuffleConvs_2_Downs_50_ce0;
reg ShuffleConvs_2_Downs_39_ce0;
reg ShuffleConvs_2_Downs_28_ce0;
reg ShuffleConvs_2_Downs_17_ce0;
reg ShuffleConvs_2_Downs_6_ce0;
reg ShuffleConvs_2_Downs_93_ce0;
reg ShuffleConvs_2_Downs_92_ce0;
reg ShuffleConvs_2_Downs_91_ce0;
reg ShuffleConvs_2_Downs_90_ce0;
reg ShuffleConvs_2_Downs_89_ce0;
reg ShuffleConvs_2_Downs_88_ce0;
reg ShuffleConvs_2_Downs_87_ce0;
reg ShuffleConvs_2_Downs_86_ce0;
reg ShuffleConvs_2_Downs_85_ce0;
reg ShuffleConvs_2_Downs_84_ce0;
reg ShuffleConvs_2_Downs_82_ce0;
reg ShuffleConvs_2_Downs_81_ce0;
reg ShuffleConvs_2_Downs_80_ce0;
reg ShuffleConvs_2_Downs_79_ce0;
reg ShuffleConvs_2_Downs_78_ce0;
reg ShuffleConvs_2_Downs_77_ce0;
reg ShuffleConvs_2_Downs_76_ce0;
reg ShuffleConvs_2_Downs_75_ce0;
reg ShuffleConvs_2_Downs_74_ce0;
reg ShuffleConvs_2_Downs_73_ce0;
reg ShuffleConvs_2_Downs_71_ce0;
reg ShuffleConvs_2_Downs_70_ce0;
reg ShuffleConvs_2_Downs_69_ce0;
reg ShuffleConvs_2_Downs_68_ce0;
reg ShuffleConvs_2_Downs_67_ce0;
reg ShuffleConvs_2_Downs_66_ce0;
reg ShuffleConvs_2_Downs_65_ce0;
reg ShuffleConvs_2_Downs_64_ce0;
reg ShuffleConvs_2_Downs_63_ce0;
reg ShuffleConvs_2_Downs_62_ce0;
reg ShuffleConvs_2_Downs_60_ce0;
reg ShuffleConvs_2_Downs_59_ce0;
reg ShuffleConvs_2_Downs_58_ce0;
reg ShuffleConvs_2_Downs_57_ce0;
reg ShuffleConvs_2_Downs_56_ce0;
reg ShuffleConvs_2_Downs_55_ce0;
reg ShuffleConvs_2_Downs_54_ce0;
reg ShuffleConvs_2_Downs_53_ce0;
reg ShuffleConvs_2_Downs_52_ce0;
reg ShuffleConvs_2_Downs_51_ce0;
reg ShuffleConvs_2_Downs_49_ce0;
reg ShuffleConvs_2_Downs_48_ce0;
reg ShuffleConvs_2_Downs_47_ce0;
reg ShuffleConvs_2_Downs_46_ce0;
reg ShuffleConvs_2_Downs_45_ce0;
reg ShuffleConvs_2_Downs_44_ce0;
reg ShuffleConvs_2_Downs_43_ce0;
reg ShuffleConvs_2_Downs_42_ce0;
reg ShuffleConvs_2_Downs_41_ce0;
reg ShuffleConvs_2_Downs_40_ce0;
reg ShuffleConvs_2_Downs_38_ce0;
reg ShuffleConvs_2_Downs_37_ce0;
reg ShuffleConvs_2_Downs_36_ce0;
reg ShuffleConvs_2_Downs_35_ce0;
reg ShuffleConvs_2_Downs_34_ce0;
reg ShuffleConvs_2_Downs_33_ce0;
reg ShuffleConvs_2_Downs_32_ce0;
reg ShuffleConvs_2_Downs_31_ce0;
reg ShuffleConvs_2_Downs_30_ce0;
reg ShuffleConvs_2_Downs_29_ce0;
reg ShuffleConvs_2_Downs_27_ce0;
reg ShuffleConvs_2_Downs_26_ce0;
reg ShuffleConvs_2_Downs_25_ce0;
reg ShuffleConvs_2_Downs_24_ce0;
reg ShuffleConvs_2_Downs_23_ce0;
reg ShuffleConvs_2_Downs_22_ce0;
reg ShuffleConvs_2_Downs_21_ce0;
reg ShuffleConvs_2_Downs_20_ce0;
reg ShuffleConvs_2_Downs_19_ce0;
reg ShuffleConvs_2_Downs_18_ce0;
reg ShuffleConvs_2_Downs_16_ce0;
reg ShuffleConvs_2_Downs_15_ce0;
reg ShuffleConvs_2_Downs_14_ce0;
reg ShuffleConvs_2_Downs_13_ce0;
reg ShuffleConvs_2_Downs_12_ce0;
reg ShuffleConvs_2_Downs_11_ce0;
reg ShuffleConvs_2_Downs_10_ce0;
reg ShuffleConvs_2_Downs_9_ce0;
reg ShuffleConvs_2_Downs_8_ce0;
reg ShuffleConvs_2_Downs_7_ce0;
reg ShuffleConvs_2_Downs_5_ce0;
reg ShuffleConvs_2_Downs_4_ce0;
reg ShuffleConvs_2_Downs_3_ce0;
reg ShuffleConvs_2_Downs_2_ce0;
reg ShuffleConvs_2_Downs_1_ce0;
reg ShuffleConvs_2_Downs_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [10:0] tmp_28_cast_fu_1547_p1;
reg  signed [10:0] tmp_28_cast_reg_2125;
wire    ap_CS_fsm_state2;
wire  signed [11:0] tmp_31_cast_fu_1581_p1;
reg  signed [11:0] tmp_31_cast_reg_2130;
wire   [6:0] co_1_fu_1591_p2;
reg   [6:0] co_1_reg_2138;
reg   [6:0] bias_V_addr_reg_2143;
wire   [0:0] exitcond1_fu_1585_p2;
wire   [12:0] tmp_28_fu_1626_p2;
reg   [12:0] tmp_28_reg_2148;
wire    ap_CS_fsm_state3;
wire   [3:0] tmp_fu_1638_p3;
reg   [3:0] tmp_reg_2156;
wire   [0:0] exitcond2_fu_1632_p2;
reg   [11:0] output_V_addr_reg_2161;
wire    ap_CS_fsm_state4;
wire   [3:0] tmp_2_fu_1666_p3;
reg   [3:0] tmp_2_reg_2169;
wire   [0:0] exitcond3_fu_1660_p2;
wire   [2:0] h_1_fu_1674_p2;
wire   [10:0] tmp_31_fu_1695_p2;
reg   [10:0] tmp_31_reg_2179;
wire    ap_CS_fsm_state5;
wire   [1:0] m_1_fu_1707_p2;
reg   [1:0] m_1_reg_2187;
wire   [7:0] tmp_34_fu_1752_p2;
reg   [7:0] tmp_34_reg_2192;
wire   [0:0] exitcond4_fu_1701_p2;
wire   [2:0] w_1_fu_1758_p2;
reg   [2:0] w_1_reg_2197;
wire    ap_CS_fsm_state6;
wire   [1:0] n_1_fu_1784_p2;
reg   [1:0] n_1_reg_2210;
wire   [0:0] exitcond_fu_1778_p2;
reg  signed [7:0] weight_V_load_reg_2695;
wire    ap_CS_fsm_state7;
wire  signed [7:0] tmp_1_fu_1914_p98;
reg  signed [7:0] tmp_1_reg_2700;
wire  signed [7:0] grp_fu_2119_p3;
wire    ap_CS_fsm_state8;
reg   [6:0] co_reg_1438;
reg   [2:0] h_reg_1450;
reg   [2:0] w_reg_1462;
wire    ap_CS_fsm_state9;
reg   [7:0] p_s_reg_1474;
reg   [1:0] m_reg_1486;
reg   [7:0] p_09_1_reg_1497;
reg   [1:0] n_reg_1509;
wire   [31:0] co_cast7_fu_1520_p1;
wire   [31:0] tmp_36_cast_fu_1655_p1;
wire   [31:0] tmp_43_cast_fu_1773_p1;
wire   [31:0] tmp_44_cast_fu_1814_p1;
wire   [8:0] tmp_s_fu_1529_p3;
wire   [9:0] p_shl2_cast_fu_1537_p1;
wire   [9:0] co_cast7_cast_fu_1525_p1;
wire   [9:0] tmp_23_fu_1541_p2;
wire   [9:0] tmp_24_fu_1551_p3;
wire   [7:0] tmp_25_fu_1563_p3;
wire   [10:0] p_shl_cast_fu_1559_p1;
wire   [10:0] p_shl1_cast_fu_1571_p1;
wire   [10:0] tmp_26_fu_1575_p2;
wire   [11:0] h_cast6_cast_fu_1597_p1;
wire   [11:0] tmp_27_fu_1601_p2;
wire   [9:0] tmp_20_fu_1606_p1;
wire   [12:0] p_shl3_cast_fu_1610_p3;
wire   [12:0] p_shl4_cast_fu_1618_p3;
wire   [12:0] w_cast5_cast_fu_1646_p1;
wire   [12:0] tmp_29_fu_1650_p2;
wire   [10:0] m_cast4_cast_fu_1680_p1;
wire   [10:0] tmp_30_fu_1684_p2;
wire   [10:0] tmp_21_fu_1689_p2;
wire   [1:0] tmp1_fu_1713_p2;
wire  signed [3:0] tmp1_cast_fu_1719_p1;
wire   [3:0] tmp_5_fu_1723_p2;
wire   [6:0] tmp_32_fu_1728_p3;
wire   [4:0] tmp_33_fu_1740_p3;
wire   [7:0] p_shl7_cast_fu_1748_p1;
wire   [7:0] p_shl6_cast_fu_1736_p1;
wire   [10:0] n_cast3_cast_fu_1764_p1;
wire   [10:0] tmp_35_fu_1768_p2;
wire   [1:0] tmp2_fu_1790_p2;
wire  signed [3:0] tmp2_cast_fu_1796_p1;
wire   [3:0] tmp_8_fu_1800_p2;
wire   [7:0] tmp_8_cast_cast_fu_1805_p1;
wire   [7:0] tmp_36_fu_1809_p2;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
end

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_x_U910(
    .din1(ShuffleConvs_2_Downs_95_q0),
    .din2(ShuffleConvs_2_Downs_94_q0),
    .din3(ShuffleConvs_2_Downs_83_q0),
    .din4(ShuffleConvs_2_Downs_72_q0),
    .din5(ShuffleConvs_2_Downs_61_q0),
    .din6(ShuffleConvs_2_Downs_50_q0),
    .din7(ShuffleConvs_2_Downs_39_q0),
    .din8(ShuffleConvs_2_Downs_28_q0),
    .din9(ShuffleConvs_2_Downs_17_q0),
    .din10(ShuffleConvs_2_Downs_6_q0),
    .din11(ShuffleConvs_2_Downs_93_q0),
    .din12(ShuffleConvs_2_Downs_92_q0),
    .din13(ShuffleConvs_2_Downs_91_q0),
    .din14(ShuffleConvs_2_Downs_90_q0),
    .din15(ShuffleConvs_2_Downs_89_q0),
    .din16(ShuffleConvs_2_Downs_88_q0),
    .din17(ShuffleConvs_2_Downs_87_q0),
    .din18(ShuffleConvs_2_Downs_86_q0),
    .din19(ShuffleConvs_2_Downs_85_q0),
    .din20(ShuffleConvs_2_Downs_84_q0),
    .din21(ShuffleConvs_2_Downs_82_q0),
    .din22(ShuffleConvs_2_Downs_81_q0),
    .din23(ShuffleConvs_2_Downs_80_q0),
    .din24(ShuffleConvs_2_Downs_79_q0),
    .din25(ShuffleConvs_2_Downs_78_q0),
    .din26(ShuffleConvs_2_Downs_77_q0),
    .din27(ShuffleConvs_2_Downs_76_q0),
    .din28(ShuffleConvs_2_Downs_75_q0),
    .din29(ShuffleConvs_2_Downs_74_q0),
    .din30(ShuffleConvs_2_Downs_73_q0),
    .din31(ShuffleConvs_2_Downs_71_q0),
    .din32(ShuffleConvs_2_Downs_70_q0),
    .din33(ShuffleConvs_2_Downs_69_q0),
    .din34(ShuffleConvs_2_Downs_68_q0),
    .din35(ShuffleConvs_2_Downs_67_q0),
    .din36(ShuffleConvs_2_Downs_66_q0),
    .din37(ShuffleConvs_2_Downs_65_q0),
    .din38(ShuffleConvs_2_Downs_64_q0),
    .din39(ShuffleConvs_2_Downs_63_q0),
    .din40(ShuffleConvs_2_Downs_62_q0),
    .din41(ShuffleConvs_2_Downs_60_q0),
    .din42(ShuffleConvs_2_Downs_59_q0),
    .din43(ShuffleConvs_2_Downs_58_q0),
    .din44(ShuffleConvs_2_Downs_57_q0),
    .din45(ShuffleConvs_2_Downs_56_q0),
    .din46(ShuffleConvs_2_Downs_55_q0),
    .din47(ShuffleConvs_2_Downs_54_q0),
    .din48(ShuffleConvs_2_Downs_53_q0),
    .din49(ShuffleConvs_2_Downs_52_q0),
    .din50(ShuffleConvs_2_Downs_51_q0),
    .din51(ShuffleConvs_2_Downs_49_q0),
    .din52(ShuffleConvs_2_Downs_48_q0),
    .din53(ShuffleConvs_2_Downs_47_q0),
    .din54(ShuffleConvs_2_Downs_46_q0),
    .din55(ShuffleConvs_2_Downs_45_q0),
    .din56(ShuffleConvs_2_Downs_44_q0),
    .din57(ShuffleConvs_2_Downs_43_q0),
    .din58(ShuffleConvs_2_Downs_42_q0),
    .din59(ShuffleConvs_2_Downs_41_q0),
    .din60(ShuffleConvs_2_Downs_40_q0),
    .din61(ShuffleConvs_2_Downs_38_q0),
    .din62(ShuffleConvs_2_Downs_37_q0),
    .din63(ShuffleConvs_2_Downs_36_q0),
    .din64(ShuffleConvs_2_Downs_35_q0),
    .din65(ShuffleConvs_2_Downs_34_q0),
    .din66(ShuffleConvs_2_Downs_33_q0),
    .din67(ShuffleConvs_2_Downs_32_q0),
    .din68(ShuffleConvs_2_Downs_31_q0),
    .din69(ShuffleConvs_2_Downs_30_q0),
    .din70(ShuffleConvs_2_Downs_29_q0),
    .din71(ShuffleConvs_2_Downs_27_q0),
    .din72(ShuffleConvs_2_Downs_26_q0),
    .din73(ShuffleConvs_2_Downs_25_q0),
    .din74(ShuffleConvs_2_Downs_24_q0),
    .din75(ShuffleConvs_2_Downs_23_q0),
    .din76(ShuffleConvs_2_Downs_22_q0),
    .din77(ShuffleConvs_2_Downs_21_q0),
    .din78(ShuffleConvs_2_Downs_20_q0),
    .din79(ShuffleConvs_2_Downs_19_q0),
    .din80(ShuffleConvs_2_Downs_18_q0),
    .din81(ShuffleConvs_2_Downs_16_q0),
    .din82(ShuffleConvs_2_Downs_15_q0),
    .din83(ShuffleConvs_2_Downs_14_q0),
    .din84(ShuffleConvs_2_Downs_13_q0),
    .din85(ShuffleConvs_2_Downs_12_q0),
    .din86(ShuffleConvs_2_Downs_11_q0),
    .din87(ShuffleConvs_2_Downs_10_q0),
    .din88(ShuffleConvs_2_Downs_9_q0),
    .din89(ShuffleConvs_2_Downs_8_q0),
    .din90(ShuffleConvs_2_Downs_7_q0),
    .din91(ShuffleConvs_2_Downs_5_q0),
    .din92(ShuffleConvs_2_Downs_4_q0),
    .din93(ShuffleConvs_2_Downs_3_q0),
    .din94(ShuffleConvs_2_Downs_2_q0),
    .din95(ShuffleConvs_2_Downs_1_q0),
    .din96(ShuffleConvs_2_Downs_q0),
    .din97(co_reg_1438),
    .dout(tmp_1_fu_1914_p98)
);

ShuffleNetV2_mac_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mac_cud_x_U911(
    .din0(tmp_1_reg_2700),
    .din1(weight_V_load_reg_2695),
    .din2(p_09_1_reg_1497),
    .dout(grp_fu_2119_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_1632_p2 == 1'd1))) begin
        co_reg_1438 <= co_1_reg_2138;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_1438 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_1585_p2 == 1'd0))) begin
        h_reg_1450 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_1660_p2 == 1'd1))) begin
        h_reg_1450 <= h_1_fu_1674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond_fu_1778_p2))) begin
        m_reg_1486 <= m_1_reg_2187;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond3_fu_1660_p2))) begin
        m_reg_1486 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond4_fu_1701_p2))) begin
        n_reg_1509 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        n_reg_1509 <= n_1_reg_2210;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond4_fu_1701_p2))) begin
        p_09_1_reg_1497 <= p_s_reg_1474;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_09_1_reg_1497 <= grp_fu_2119_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond_fu_1778_p2))) begin
        p_s_reg_1474 <= p_09_1_reg_1497;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond3_fu_1660_p2))) begin
        p_s_reg_1474 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond2_fu_1632_p2))) begin
        w_reg_1462 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        w_reg_1462 <= w_1_reg_2197;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_1585_p2 == 1'd0))) begin
        bias_V_addr_reg_2143 <= co_cast7_fu_1520_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        co_1_reg_2138 <= co_1_fu_1591_p2;
        tmp_28_cast_reg_2125 <= tmp_28_cast_fu_1547_p1;
        tmp_31_cast_reg_2130[11 : 1] <= tmp_31_cast_fu_1581_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m_1_reg_2187 <= m_1_fu_1707_p2;
        tmp_31_reg_2179 <= tmp_31_fu_1695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        n_1_reg_2210 <= n_1_fu_1784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        output_V_addr_reg_2161 <= tmp_36_cast_fu_1655_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_1_reg_2700 <= tmp_1_fu_1914_p98;
        weight_V_load_reg_2695 <= weight_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_28_reg_2148[12 : 1] <= tmp_28_fu_1626_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond3_fu_1660_p2))) begin
        tmp_2_reg_2169[3 : 1] <= tmp_2_fu_1666_p3[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond4_fu_1701_p2))) begin
        tmp_34_reg_2192[7 : 1] <= tmp_34_fu_1752_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond2_fu_1632_p2))) begin
        tmp_reg_2156[3 : 1] <= tmp_fu_1638_p3[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == exitcond4_fu_1701_p2))) begin
        w_1_reg_2197 <= w_1_fu_1758_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_24_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_25_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_26_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_27_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_28_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_29_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_30_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_31_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_32_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_33_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_34_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_35_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_36_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_37_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_38_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_39_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_40_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_41_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_42_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_43_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_44_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_45_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_46_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_47_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_48_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_49_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_50_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_51_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_52_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_53_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_54_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_55_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_56_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_57_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_58_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_59_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_60_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_61_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_62_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_63_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_64_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_65_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_66_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_67_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_68_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_69_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_70_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_71_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_72_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_73_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_73_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_74_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_74_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_75_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_76_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_77_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_78_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_79_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_80_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_81_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_82_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_83_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_84_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_85_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_86_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_87_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_88_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_89_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_90_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_91_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_91_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_92_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_92_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_93_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_93_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_94_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_94_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_95_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_95_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_1585_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_1585_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        weight_V_ce0 = 1'b1;
    end else begin
        weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_1585_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_1632_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_1660_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd0 == exitcond4_fu_1701_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond_fu_1778_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_2_Downs_10_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_11_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_12_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_13_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_14_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_15_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_16_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_17_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_18_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_19_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_1_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_20_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_21_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_22_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_23_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_24_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_25_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_26_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_27_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_28_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_29_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_2_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_30_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_31_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_32_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_33_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_34_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_35_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_36_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_37_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_38_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_39_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_3_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_40_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_41_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_42_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_43_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_44_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_45_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_46_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_47_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_48_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_49_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_4_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_50_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_51_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_52_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_53_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_54_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_55_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_56_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_57_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_58_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_59_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_5_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_60_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_61_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_62_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_63_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_64_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_65_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_66_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_67_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_68_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_69_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_6_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_70_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_71_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_72_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_73_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_74_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_75_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_76_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_77_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_78_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_79_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_7_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_80_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_81_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_82_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_83_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_84_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_85_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_86_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_87_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_88_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_89_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_8_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_90_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_91_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_92_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_93_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_94_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_95_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_9_address0 = tmp_44_cast_fu_1814_p1;

assign ShuffleConvs_2_Downs_address0 = tmp_44_cast_fu_1814_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bias_V_address0 = bias_V_addr_reg_2143;

assign co_1_fu_1591_p2 = (co_reg_1438 + 7'd1);

assign co_cast7_cast_fu_1525_p1 = co_reg_1438;

assign co_cast7_fu_1520_p1 = co_reg_1438;

assign exitcond1_fu_1585_p2 = ((co_reg_1438 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond2_fu_1632_p2 = ((h_reg_1450 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_1660_p2 = ((w_reg_1462 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_1701_p2 = ((m_reg_1486 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_fu_1778_p2 = ((n_reg_1509 == 2'd3) ? 1'b1 : 1'b0);

assign h_1_fu_1674_p2 = (h_reg_1450 + 3'd1);

assign h_cast6_cast_fu_1597_p1 = h_reg_1450;

assign m_1_fu_1707_p2 = (2'd1 + m_reg_1486);

assign m_cast4_cast_fu_1680_p1 = m_reg_1486;

assign n_1_fu_1784_p2 = (n_reg_1509 + 2'd1);

assign n_cast3_cast_fu_1764_p1 = n_reg_1509;

assign output_V_address0 = output_V_addr_reg_2161;

assign output_V_d0 = (bias_V_q0 + p_s_reg_1474);

assign p_shl1_cast_fu_1571_p1 = tmp_25_fu_1563_p3;

assign p_shl2_cast_fu_1537_p1 = tmp_s_fu_1529_p3;

assign p_shl3_cast_fu_1610_p3 = {{tmp_20_fu_1606_p1}, {3'd0}};

assign p_shl4_cast_fu_1618_p3 = {{tmp_27_fu_1601_p2}, {1'd0}};

assign p_shl6_cast_fu_1736_p1 = tmp_32_fu_1728_p3;

assign p_shl7_cast_fu_1748_p1 = tmp_33_fu_1740_p3;

assign p_shl_cast_fu_1559_p1 = tmp_24_fu_1551_p3;

assign tmp1_cast_fu_1719_p1 = $signed(tmp1_fu_1713_p2);

assign tmp1_fu_1713_p2 = (m_reg_1486 ^ 2'd2);

assign tmp2_cast_fu_1796_p1 = $signed(tmp2_fu_1790_p2);

assign tmp2_fu_1790_p2 = (n_reg_1509 ^ 2'd2);

assign tmp_20_fu_1606_p1 = tmp_27_fu_1601_p2[9:0];

assign tmp_21_fu_1689_p2 = tmp_30_fu_1684_p2 << 11'd2;

assign tmp_23_fu_1541_p2 = (p_shl2_cast_fu_1537_p1 - co_cast7_cast_fu_1525_p1);

assign tmp_24_fu_1551_p3 = {{co_reg_1438}, {3'd0}};

assign tmp_25_fu_1563_p3 = {{co_reg_1438}, {1'd0}};

assign tmp_26_fu_1575_p2 = (p_shl_cast_fu_1559_p1 - p_shl1_cast_fu_1571_p1);

assign tmp_27_fu_1601_p2 = ($signed(h_cast6_cast_fu_1597_p1) + $signed(tmp_31_cast_reg_2130));

assign tmp_28_cast_fu_1547_p1 = $signed(tmp_23_fu_1541_p2);

assign tmp_28_fu_1626_p2 = (p_shl3_cast_fu_1610_p3 - p_shl4_cast_fu_1618_p3);

assign tmp_29_fu_1650_p2 = (tmp_28_reg_2148 + w_cast5_cast_fu_1646_p1);

assign tmp_2_fu_1666_p3 = {{w_reg_1462}, {1'd0}};

assign tmp_30_fu_1684_p2 = ($signed(m_cast4_cast_fu_1680_p1) + $signed(tmp_28_cast_reg_2125));

assign tmp_31_cast_fu_1581_p1 = $signed(tmp_26_fu_1575_p2);

assign tmp_31_fu_1695_p2 = (tmp_21_fu_1689_p2 - tmp_30_fu_1684_p2);

assign tmp_32_fu_1728_p3 = {{tmp_5_fu_1723_p2}, {3'd0}};

assign tmp_33_fu_1740_p3 = {{tmp_5_fu_1723_p2}, {1'd0}};

assign tmp_34_fu_1752_p2 = (p_shl7_cast_fu_1748_p1 + p_shl6_cast_fu_1736_p1);

assign tmp_35_fu_1768_p2 = (tmp_31_reg_2179 + n_cast3_cast_fu_1764_p1);

assign tmp_36_cast_fu_1655_p1 = tmp_29_fu_1650_p2;

assign tmp_36_fu_1809_p2 = (tmp_34_reg_2192 + tmp_8_cast_cast_fu_1805_p1);

assign tmp_43_cast_fu_1773_p1 = tmp_35_fu_1768_p2;

assign tmp_44_cast_fu_1814_p1 = tmp_36_fu_1809_p2;

assign tmp_5_fu_1723_p2 = ($signed(tmp_reg_2156) + $signed(tmp1_cast_fu_1719_p1));

assign tmp_8_cast_cast_fu_1805_p1 = tmp_8_fu_1800_p2;

assign tmp_8_fu_1800_p2 = ($signed(tmp_2_reg_2169) + $signed(tmp2_cast_fu_1796_p1));

assign tmp_fu_1638_p3 = {{h_reg_1450}, {1'd0}};

assign tmp_s_fu_1529_p3 = {{co_reg_1438}, {2'd0}};

assign w_1_fu_1758_p2 = (w_reg_1462 + 3'd1);

assign w_cast5_cast_fu_1646_p1 = w_reg_1462;

assign weight_V_address0 = tmp_43_cast_fu_1773_p1;

always @ (posedge ap_clk) begin
    tmp_31_cast_reg_2130[0] <= 1'b0;
    tmp_28_reg_2148[0] <= 1'b0;
    tmp_reg_2156[0] <= 1'b0;
    tmp_2_reg_2169[0] <= 1'b0;
    tmp_34_reg_2192[0] <= 1'b0;
end

endmodule //subconv_3x3_8_stride
