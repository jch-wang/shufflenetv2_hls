// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_4_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_24_V_address0,
        weight_24_V_ce0,
        weight_24_V_q0,
        weight_25_V_address0,
        weight_25_V_ce0,
        weight_25_V_q0,
        weight_26_V_address0,
        weight_26_V_ce0,
        weight_26_V_q0,
        weight_27_V_address0,
        weight_27_V_ce0,
        weight_27_V_q0,
        weight_28_V_address0,
        weight_28_V_ce0,
        weight_28_V_q0,
        weight_29_V_address0,
        weight_29_V_ce0,
        weight_29_V_q0,
        weight_30_V_address0,
        weight_30_V_ce0,
        weight_30_V_q0,
        weight_31_V_address0,
        weight_31_V_ce0,
        weight_31_V_q0,
        weight_32_V_address0,
        weight_32_V_ce0,
        weight_32_V_q0,
        weight_33_V_address0,
        weight_33_V_ce0,
        weight_33_V_q0,
        weight_34_V_address0,
        weight_34_V_ce0,
        weight_34_V_q0,
        weight_35_V_address0,
        weight_35_V_ce0,
        weight_35_V_q0,
        weight_36_V_address0,
        weight_36_V_ce0,
        weight_36_V_q0,
        weight_37_V_address0,
        weight_37_V_ce0,
        weight_37_V_q0,
        weight_38_V_address0,
        weight_38_V_ce0,
        weight_38_V_q0,
        weight_39_V_address0,
        weight_39_V_ce0,
        weight_39_V_q0,
        weight_40_V_address0,
        weight_40_V_ce0,
        weight_40_V_q0,
        weight_41_V_address0,
        weight_41_V_ce0,
        weight_41_V_q0,
        weight_42_V_address0,
        weight_42_V_ce0,
        weight_42_V_q0,
        weight_43_V_address0,
        weight_43_V_ce0,
        weight_43_V_q0,
        weight_44_V_address0,
        weight_44_V_ce0,
        weight_44_V_q0,
        weight_45_V_address0,
        weight_45_V_ce0,
        weight_45_V_q0,
        weight_46_V_address0,
        weight_46_V_ce0,
        weight_46_V_q0,
        weight_47_V_address0,
        weight_47_V_ce0,
        weight_47_V_q0,
        weight_48_V_address0,
        weight_48_V_ce0,
        weight_48_V_q0,
        weight_49_V_address0,
        weight_49_V_ce0,
        weight_49_V_q0,
        weight_50_V_address0,
        weight_50_V_ce0,
        weight_50_V_q0,
        weight_51_V_address0,
        weight_51_V_ce0,
        weight_51_V_q0,
        weight_52_V_address0,
        weight_52_V_ce0,
        weight_52_V_q0,
        weight_53_V_address0,
        weight_53_V_ce0,
        weight_53_V_q0,
        weight_54_V_address0,
        weight_54_V_ce0,
        weight_54_V_q0,
        weight_55_V_address0,
        weight_55_V_ce0,
        weight_55_V_q0,
        weight_56_V_address0,
        weight_56_V_ce0,
        weight_56_V_q0,
        weight_57_V_address0,
        weight_57_V_ce0,
        weight_57_V_q0,
        weight_58_V_address0,
        weight_58_V_ce0,
        weight_58_V_q0,
        weight_59_V_address0,
        weight_59_V_ce0,
        weight_59_V_q0,
        weight_60_V_address0,
        weight_60_V_ce0,
        weight_60_V_q0,
        weight_61_V_address0,
        weight_61_V_ce0,
        weight_61_V_q0,
        weight_62_V_address0,
        weight_62_V_ce0,
        weight_62_V_q0,
        weight_63_V_address0,
        weight_63_V_ce0,
        weight_63_V_q0,
        weight_64_V_address0,
        weight_64_V_ce0,
        weight_64_V_q0,
        weight_65_V_address0,
        weight_65_V_ce0,
        weight_65_V_q0,
        weight_66_V_address0,
        weight_66_V_ce0,
        weight_66_V_q0,
        weight_67_V_address0,
        weight_67_V_ce0,
        weight_67_V_q0,
        weight_68_V_address0,
        weight_68_V_ce0,
        weight_68_V_q0,
        weight_69_V_address0,
        weight_69_V_ce0,
        weight_69_V_q0,
        weight_70_V_address0,
        weight_70_V_ce0,
        weight_70_V_q0,
        weight_71_V_address0,
        weight_71_V_ce0,
        weight_71_V_q0,
        weight_72_V_address0,
        weight_72_V_ce0,
        weight_72_V_q0,
        weight_73_V_address0,
        weight_73_V_ce0,
        weight_73_V_q0,
        weight_74_V_address0,
        weight_74_V_ce0,
        weight_74_V_q0,
        weight_75_V_address0,
        weight_75_V_ce0,
        weight_75_V_q0,
        weight_76_V_address0,
        weight_76_V_ce0,
        weight_76_V_q0,
        weight_77_V_address0,
        weight_77_V_ce0,
        weight_77_V_q0,
        weight_78_V_address0,
        weight_78_V_ce0,
        weight_78_V_q0,
        weight_79_V_address0,
        weight_79_V_ce0,
        weight_79_V_q0,
        weight_80_V_address0,
        weight_80_V_ce0,
        weight_80_V_q0,
        weight_81_V_address0,
        weight_81_V_ce0,
        weight_81_V_q0,
        weight_82_V_address0,
        weight_82_V_ce0,
        weight_82_V_q0,
        weight_83_V_address0,
        weight_83_V_ce0,
        weight_83_V_q0,
        weight_84_V_address0,
        weight_84_V_ce0,
        weight_84_V_q0,
        weight_85_V_address0,
        weight_85_V_ce0,
        weight_85_V_q0,
        weight_86_V_address0,
        weight_86_V_ce0,
        weight_86_V_q0,
        weight_87_V_address0,
        weight_87_V_ce0,
        weight_87_V_q0,
        weight_88_V_address0,
        weight_88_V_ce0,
        weight_88_V_q0,
        weight_89_V_address0,
        weight_89_V_ce0,
        weight_89_V_q0,
        weight_90_V_address0,
        weight_90_V_ce0,
        weight_90_V_q0,
        weight_91_V_address0,
        weight_91_V_ce0,
        weight_91_V_q0,
        weight_92_V_address0,
        weight_92_V_ce0,
        weight_92_V_q0,
        weight_93_V_address0,
        weight_93_V_ce0,
        weight_93_V_q0,
        weight_94_V_address0,
        weight_94_V_ce0,
        weight_94_V_q0,
        weight_95_V_address0,
        weight_95_V_ce0,
        weight_95_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_96_4x4_p_V_96_address0,
        buffer1_1_96_4x4_p_V_96_ce0,
        buffer1_1_96_4x4_p_V_96_we0,
        buffer1_1_96_4x4_p_V_96_d0,
        buffer1_1_96_4x4_p_V_96_q0,
        buffer1_1_96_4x4_p_V_96_address1,
        buffer1_1_96_4x4_p_V_96_ce1,
        buffer1_1_96_4x4_p_V_96_we1,
        buffer1_1_96_4x4_p_V_96_d1,
        buffer1_1_96_4x4_p_V_48_address0,
        buffer1_1_96_4x4_p_V_48_ce0,
        buffer1_1_96_4x4_p_V_48_we0,
        buffer1_1_96_4x4_p_V_48_d0,
        buffer1_1_96_4x4_p_V_48_q0,
        buffer1_1_96_4x4_p_V_48_address1,
        buffer1_1_96_4x4_p_V_48_ce1,
        buffer1_1_96_4x4_p_V_48_we1,
        buffer1_1_96_4x4_p_V_48_d1,
        buffer1_1_96_4x4_p_V_1_address0,
        buffer1_1_96_4x4_p_V_1_ce0,
        buffer1_1_96_4x4_p_V_1_we0,
        buffer1_1_96_4x4_p_V_1_d0,
        buffer1_1_96_4x4_p_V_1_q0,
        buffer1_1_96_4x4_p_V_1_address1,
        buffer1_1_96_4x4_p_V_1_ce1,
        buffer1_1_96_4x4_p_V_1_we1,
        buffer1_1_96_4x4_p_V_1_d1,
        buffer1_1_96_4x4_p_V_49_address0,
        buffer1_1_96_4x4_p_V_49_ce0,
        buffer1_1_96_4x4_p_V_49_we0,
        buffer1_1_96_4x4_p_V_49_d0,
        buffer1_1_96_4x4_p_V_49_q0,
        buffer1_1_96_4x4_p_V_49_address1,
        buffer1_1_96_4x4_p_V_49_ce1,
        buffer1_1_96_4x4_p_V_49_we1,
        buffer1_1_96_4x4_p_V_49_d1,
        buffer1_1_96_4x4_p_V_2_address0,
        buffer1_1_96_4x4_p_V_2_ce0,
        buffer1_1_96_4x4_p_V_2_we0,
        buffer1_1_96_4x4_p_V_2_d0,
        buffer1_1_96_4x4_p_V_2_q0,
        buffer1_1_96_4x4_p_V_2_address1,
        buffer1_1_96_4x4_p_V_2_ce1,
        buffer1_1_96_4x4_p_V_2_we1,
        buffer1_1_96_4x4_p_V_2_d1,
        buffer1_1_96_4x4_p_V_50_address0,
        buffer1_1_96_4x4_p_V_50_ce0,
        buffer1_1_96_4x4_p_V_50_we0,
        buffer1_1_96_4x4_p_V_50_d0,
        buffer1_1_96_4x4_p_V_50_q0,
        buffer1_1_96_4x4_p_V_50_address1,
        buffer1_1_96_4x4_p_V_50_ce1,
        buffer1_1_96_4x4_p_V_50_we1,
        buffer1_1_96_4x4_p_V_50_d1,
        buffer1_1_96_4x4_p_V_3_address0,
        buffer1_1_96_4x4_p_V_3_ce0,
        buffer1_1_96_4x4_p_V_3_we0,
        buffer1_1_96_4x4_p_V_3_d0,
        buffer1_1_96_4x4_p_V_3_q0,
        buffer1_1_96_4x4_p_V_3_address1,
        buffer1_1_96_4x4_p_V_3_ce1,
        buffer1_1_96_4x4_p_V_3_we1,
        buffer1_1_96_4x4_p_V_3_d1,
        buffer1_1_96_4x4_p_V_51_address0,
        buffer1_1_96_4x4_p_V_51_ce0,
        buffer1_1_96_4x4_p_V_51_we0,
        buffer1_1_96_4x4_p_V_51_d0,
        buffer1_1_96_4x4_p_V_51_q0,
        buffer1_1_96_4x4_p_V_51_address1,
        buffer1_1_96_4x4_p_V_51_ce1,
        buffer1_1_96_4x4_p_V_51_we1,
        buffer1_1_96_4x4_p_V_51_d1,
        buffer1_1_96_4x4_p_V_4_address0,
        buffer1_1_96_4x4_p_V_4_ce0,
        buffer1_1_96_4x4_p_V_4_we0,
        buffer1_1_96_4x4_p_V_4_d0,
        buffer1_1_96_4x4_p_V_4_q0,
        buffer1_1_96_4x4_p_V_4_address1,
        buffer1_1_96_4x4_p_V_4_ce1,
        buffer1_1_96_4x4_p_V_4_we1,
        buffer1_1_96_4x4_p_V_4_d1,
        buffer1_1_96_4x4_p_V_52_address0,
        buffer1_1_96_4x4_p_V_52_ce0,
        buffer1_1_96_4x4_p_V_52_we0,
        buffer1_1_96_4x4_p_V_52_d0,
        buffer1_1_96_4x4_p_V_52_q0,
        buffer1_1_96_4x4_p_V_52_address1,
        buffer1_1_96_4x4_p_V_52_ce1,
        buffer1_1_96_4x4_p_V_52_we1,
        buffer1_1_96_4x4_p_V_52_d1,
        buffer1_1_96_4x4_p_V_5_address0,
        buffer1_1_96_4x4_p_V_5_ce0,
        buffer1_1_96_4x4_p_V_5_we0,
        buffer1_1_96_4x4_p_V_5_d0,
        buffer1_1_96_4x4_p_V_5_q0,
        buffer1_1_96_4x4_p_V_5_address1,
        buffer1_1_96_4x4_p_V_5_ce1,
        buffer1_1_96_4x4_p_V_5_we1,
        buffer1_1_96_4x4_p_V_5_d1,
        buffer1_1_96_4x4_p_V_53_address0,
        buffer1_1_96_4x4_p_V_53_ce0,
        buffer1_1_96_4x4_p_V_53_we0,
        buffer1_1_96_4x4_p_V_53_d0,
        buffer1_1_96_4x4_p_V_53_q0,
        buffer1_1_96_4x4_p_V_53_address1,
        buffer1_1_96_4x4_p_V_53_ce1,
        buffer1_1_96_4x4_p_V_53_we1,
        buffer1_1_96_4x4_p_V_53_d1,
        buffer1_1_96_4x4_p_V_6_address0,
        buffer1_1_96_4x4_p_V_6_ce0,
        buffer1_1_96_4x4_p_V_6_we0,
        buffer1_1_96_4x4_p_V_6_d0,
        buffer1_1_96_4x4_p_V_6_q0,
        buffer1_1_96_4x4_p_V_6_address1,
        buffer1_1_96_4x4_p_V_6_ce1,
        buffer1_1_96_4x4_p_V_6_we1,
        buffer1_1_96_4x4_p_V_6_d1,
        buffer1_1_96_4x4_p_V_54_address0,
        buffer1_1_96_4x4_p_V_54_ce0,
        buffer1_1_96_4x4_p_V_54_we0,
        buffer1_1_96_4x4_p_V_54_d0,
        buffer1_1_96_4x4_p_V_54_q0,
        buffer1_1_96_4x4_p_V_54_address1,
        buffer1_1_96_4x4_p_V_54_ce1,
        buffer1_1_96_4x4_p_V_54_we1,
        buffer1_1_96_4x4_p_V_54_d1,
        buffer1_1_96_4x4_p_V_7_address0,
        buffer1_1_96_4x4_p_V_7_ce0,
        buffer1_1_96_4x4_p_V_7_we0,
        buffer1_1_96_4x4_p_V_7_d0,
        buffer1_1_96_4x4_p_V_7_q0,
        buffer1_1_96_4x4_p_V_7_address1,
        buffer1_1_96_4x4_p_V_7_ce1,
        buffer1_1_96_4x4_p_V_7_we1,
        buffer1_1_96_4x4_p_V_7_d1,
        buffer1_1_96_4x4_p_V_55_address0,
        buffer1_1_96_4x4_p_V_55_ce0,
        buffer1_1_96_4x4_p_V_55_we0,
        buffer1_1_96_4x4_p_V_55_d0,
        buffer1_1_96_4x4_p_V_55_q0,
        buffer1_1_96_4x4_p_V_55_address1,
        buffer1_1_96_4x4_p_V_55_ce1,
        buffer1_1_96_4x4_p_V_55_we1,
        buffer1_1_96_4x4_p_V_55_d1,
        buffer1_1_96_4x4_p_V_8_address0,
        buffer1_1_96_4x4_p_V_8_ce0,
        buffer1_1_96_4x4_p_V_8_we0,
        buffer1_1_96_4x4_p_V_8_d0,
        buffer1_1_96_4x4_p_V_8_q0,
        buffer1_1_96_4x4_p_V_8_address1,
        buffer1_1_96_4x4_p_V_8_ce1,
        buffer1_1_96_4x4_p_V_8_we1,
        buffer1_1_96_4x4_p_V_8_d1,
        buffer1_1_96_4x4_p_V_56_address0,
        buffer1_1_96_4x4_p_V_56_ce0,
        buffer1_1_96_4x4_p_V_56_we0,
        buffer1_1_96_4x4_p_V_56_d0,
        buffer1_1_96_4x4_p_V_56_q0,
        buffer1_1_96_4x4_p_V_56_address1,
        buffer1_1_96_4x4_p_V_56_ce1,
        buffer1_1_96_4x4_p_V_56_we1,
        buffer1_1_96_4x4_p_V_56_d1,
        buffer1_1_96_4x4_p_V_9_address0,
        buffer1_1_96_4x4_p_V_9_ce0,
        buffer1_1_96_4x4_p_V_9_we0,
        buffer1_1_96_4x4_p_V_9_d0,
        buffer1_1_96_4x4_p_V_9_q0,
        buffer1_1_96_4x4_p_V_9_address1,
        buffer1_1_96_4x4_p_V_9_ce1,
        buffer1_1_96_4x4_p_V_9_we1,
        buffer1_1_96_4x4_p_V_9_d1,
        buffer1_1_96_4x4_p_V_57_address0,
        buffer1_1_96_4x4_p_V_57_ce0,
        buffer1_1_96_4x4_p_V_57_we0,
        buffer1_1_96_4x4_p_V_57_d0,
        buffer1_1_96_4x4_p_V_57_q0,
        buffer1_1_96_4x4_p_V_57_address1,
        buffer1_1_96_4x4_p_V_57_ce1,
        buffer1_1_96_4x4_p_V_57_we1,
        buffer1_1_96_4x4_p_V_57_d1,
        buffer1_1_96_4x4_p_V_10_address0,
        buffer1_1_96_4x4_p_V_10_ce0,
        buffer1_1_96_4x4_p_V_10_we0,
        buffer1_1_96_4x4_p_V_10_d0,
        buffer1_1_96_4x4_p_V_10_q0,
        buffer1_1_96_4x4_p_V_10_address1,
        buffer1_1_96_4x4_p_V_10_ce1,
        buffer1_1_96_4x4_p_V_10_we1,
        buffer1_1_96_4x4_p_V_10_d1,
        buffer1_1_96_4x4_p_V_58_address0,
        buffer1_1_96_4x4_p_V_58_ce0,
        buffer1_1_96_4x4_p_V_58_we0,
        buffer1_1_96_4x4_p_V_58_d0,
        buffer1_1_96_4x4_p_V_58_q0,
        buffer1_1_96_4x4_p_V_58_address1,
        buffer1_1_96_4x4_p_V_58_ce1,
        buffer1_1_96_4x4_p_V_58_we1,
        buffer1_1_96_4x4_p_V_58_d1,
        buffer1_1_96_4x4_p_V_11_address0,
        buffer1_1_96_4x4_p_V_11_ce0,
        buffer1_1_96_4x4_p_V_11_we0,
        buffer1_1_96_4x4_p_V_11_d0,
        buffer1_1_96_4x4_p_V_11_q0,
        buffer1_1_96_4x4_p_V_11_address1,
        buffer1_1_96_4x4_p_V_11_ce1,
        buffer1_1_96_4x4_p_V_11_we1,
        buffer1_1_96_4x4_p_V_11_d1,
        buffer1_1_96_4x4_p_V_59_address0,
        buffer1_1_96_4x4_p_V_59_ce0,
        buffer1_1_96_4x4_p_V_59_we0,
        buffer1_1_96_4x4_p_V_59_d0,
        buffer1_1_96_4x4_p_V_59_q0,
        buffer1_1_96_4x4_p_V_59_address1,
        buffer1_1_96_4x4_p_V_59_ce1,
        buffer1_1_96_4x4_p_V_59_we1,
        buffer1_1_96_4x4_p_V_59_d1,
        buffer1_1_96_4x4_p_V_12_address0,
        buffer1_1_96_4x4_p_V_12_ce0,
        buffer1_1_96_4x4_p_V_12_we0,
        buffer1_1_96_4x4_p_V_12_d0,
        buffer1_1_96_4x4_p_V_12_q0,
        buffer1_1_96_4x4_p_V_12_address1,
        buffer1_1_96_4x4_p_V_12_ce1,
        buffer1_1_96_4x4_p_V_12_we1,
        buffer1_1_96_4x4_p_V_12_d1,
        buffer1_1_96_4x4_p_V_60_address0,
        buffer1_1_96_4x4_p_V_60_ce0,
        buffer1_1_96_4x4_p_V_60_we0,
        buffer1_1_96_4x4_p_V_60_d0,
        buffer1_1_96_4x4_p_V_60_q0,
        buffer1_1_96_4x4_p_V_60_address1,
        buffer1_1_96_4x4_p_V_60_ce1,
        buffer1_1_96_4x4_p_V_60_we1,
        buffer1_1_96_4x4_p_V_60_d1,
        buffer1_1_96_4x4_p_V_13_address0,
        buffer1_1_96_4x4_p_V_13_ce0,
        buffer1_1_96_4x4_p_V_13_we0,
        buffer1_1_96_4x4_p_V_13_d0,
        buffer1_1_96_4x4_p_V_13_q0,
        buffer1_1_96_4x4_p_V_13_address1,
        buffer1_1_96_4x4_p_V_13_ce1,
        buffer1_1_96_4x4_p_V_13_we1,
        buffer1_1_96_4x4_p_V_13_d1,
        buffer1_1_96_4x4_p_V_61_address0,
        buffer1_1_96_4x4_p_V_61_ce0,
        buffer1_1_96_4x4_p_V_61_we0,
        buffer1_1_96_4x4_p_V_61_d0,
        buffer1_1_96_4x4_p_V_61_q0,
        buffer1_1_96_4x4_p_V_61_address1,
        buffer1_1_96_4x4_p_V_61_ce1,
        buffer1_1_96_4x4_p_V_61_we1,
        buffer1_1_96_4x4_p_V_61_d1,
        buffer1_1_96_4x4_p_V_14_address0,
        buffer1_1_96_4x4_p_V_14_ce0,
        buffer1_1_96_4x4_p_V_14_we0,
        buffer1_1_96_4x4_p_V_14_d0,
        buffer1_1_96_4x4_p_V_14_q0,
        buffer1_1_96_4x4_p_V_14_address1,
        buffer1_1_96_4x4_p_V_14_ce1,
        buffer1_1_96_4x4_p_V_14_we1,
        buffer1_1_96_4x4_p_V_14_d1,
        buffer1_1_96_4x4_p_V_62_address0,
        buffer1_1_96_4x4_p_V_62_ce0,
        buffer1_1_96_4x4_p_V_62_we0,
        buffer1_1_96_4x4_p_V_62_d0,
        buffer1_1_96_4x4_p_V_62_q0,
        buffer1_1_96_4x4_p_V_62_address1,
        buffer1_1_96_4x4_p_V_62_ce1,
        buffer1_1_96_4x4_p_V_62_we1,
        buffer1_1_96_4x4_p_V_62_d1,
        buffer1_1_96_4x4_p_V_15_address0,
        buffer1_1_96_4x4_p_V_15_ce0,
        buffer1_1_96_4x4_p_V_15_we0,
        buffer1_1_96_4x4_p_V_15_d0,
        buffer1_1_96_4x4_p_V_15_q0,
        buffer1_1_96_4x4_p_V_15_address1,
        buffer1_1_96_4x4_p_V_15_ce1,
        buffer1_1_96_4x4_p_V_15_we1,
        buffer1_1_96_4x4_p_V_15_d1,
        buffer1_1_96_4x4_p_V_63_address0,
        buffer1_1_96_4x4_p_V_63_ce0,
        buffer1_1_96_4x4_p_V_63_we0,
        buffer1_1_96_4x4_p_V_63_d0,
        buffer1_1_96_4x4_p_V_63_q0,
        buffer1_1_96_4x4_p_V_63_address1,
        buffer1_1_96_4x4_p_V_63_ce1,
        buffer1_1_96_4x4_p_V_63_we1,
        buffer1_1_96_4x4_p_V_63_d1,
        buffer1_1_96_4x4_p_V_16_address0,
        buffer1_1_96_4x4_p_V_16_ce0,
        buffer1_1_96_4x4_p_V_16_we0,
        buffer1_1_96_4x4_p_V_16_d0,
        buffer1_1_96_4x4_p_V_16_q0,
        buffer1_1_96_4x4_p_V_16_address1,
        buffer1_1_96_4x4_p_V_16_ce1,
        buffer1_1_96_4x4_p_V_16_we1,
        buffer1_1_96_4x4_p_V_16_d1,
        buffer1_1_96_4x4_p_V_64_address0,
        buffer1_1_96_4x4_p_V_64_ce0,
        buffer1_1_96_4x4_p_V_64_we0,
        buffer1_1_96_4x4_p_V_64_d0,
        buffer1_1_96_4x4_p_V_64_q0,
        buffer1_1_96_4x4_p_V_64_address1,
        buffer1_1_96_4x4_p_V_64_ce1,
        buffer1_1_96_4x4_p_V_64_we1,
        buffer1_1_96_4x4_p_V_64_d1,
        buffer1_1_96_4x4_p_V_17_address0,
        buffer1_1_96_4x4_p_V_17_ce0,
        buffer1_1_96_4x4_p_V_17_we0,
        buffer1_1_96_4x4_p_V_17_d0,
        buffer1_1_96_4x4_p_V_17_q0,
        buffer1_1_96_4x4_p_V_17_address1,
        buffer1_1_96_4x4_p_V_17_ce1,
        buffer1_1_96_4x4_p_V_17_we1,
        buffer1_1_96_4x4_p_V_17_d1,
        buffer1_1_96_4x4_p_V_65_address0,
        buffer1_1_96_4x4_p_V_65_ce0,
        buffer1_1_96_4x4_p_V_65_we0,
        buffer1_1_96_4x4_p_V_65_d0,
        buffer1_1_96_4x4_p_V_65_q0,
        buffer1_1_96_4x4_p_V_65_address1,
        buffer1_1_96_4x4_p_V_65_ce1,
        buffer1_1_96_4x4_p_V_65_we1,
        buffer1_1_96_4x4_p_V_65_d1,
        buffer1_1_96_4x4_p_V_18_address0,
        buffer1_1_96_4x4_p_V_18_ce0,
        buffer1_1_96_4x4_p_V_18_we0,
        buffer1_1_96_4x4_p_V_18_d0,
        buffer1_1_96_4x4_p_V_18_q0,
        buffer1_1_96_4x4_p_V_18_address1,
        buffer1_1_96_4x4_p_V_18_ce1,
        buffer1_1_96_4x4_p_V_18_we1,
        buffer1_1_96_4x4_p_V_18_d1,
        buffer1_1_96_4x4_p_V_66_address0,
        buffer1_1_96_4x4_p_V_66_ce0,
        buffer1_1_96_4x4_p_V_66_we0,
        buffer1_1_96_4x4_p_V_66_d0,
        buffer1_1_96_4x4_p_V_66_q0,
        buffer1_1_96_4x4_p_V_66_address1,
        buffer1_1_96_4x4_p_V_66_ce1,
        buffer1_1_96_4x4_p_V_66_we1,
        buffer1_1_96_4x4_p_V_66_d1,
        buffer1_1_96_4x4_p_V_19_address0,
        buffer1_1_96_4x4_p_V_19_ce0,
        buffer1_1_96_4x4_p_V_19_we0,
        buffer1_1_96_4x4_p_V_19_d0,
        buffer1_1_96_4x4_p_V_19_q0,
        buffer1_1_96_4x4_p_V_19_address1,
        buffer1_1_96_4x4_p_V_19_ce1,
        buffer1_1_96_4x4_p_V_19_we1,
        buffer1_1_96_4x4_p_V_19_d1,
        buffer1_1_96_4x4_p_V_67_address0,
        buffer1_1_96_4x4_p_V_67_ce0,
        buffer1_1_96_4x4_p_V_67_we0,
        buffer1_1_96_4x4_p_V_67_d0,
        buffer1_1_96_4x4_p_V_67_q0,
        buffer1_1_96_4x4_p_V_67_address1,
        buffer1_1_96_4x4_p_V_67_ce1,
        buffer1_1_96_4x4_p_V_67_we1,
        buffer1_1_96_4x4_p_V_67_d1,
        buffer1_1_96_4x4_p_V_20_address0,
        buffer1_1_96_4x4_p_V_20_ce0,
        buffer1_1_96_4x4_p_V_20_we0,
        buffer1_1_96_4x4_p_V_20_d0,
        buffer1_1_96_4x4_p_V_20_q0,
        buffer1_1_96_4x4_p_V_20_address1,
        buffer1_1_96_4x4_p_V_20_ce1,
        buffer1_1_96_4x4_p_V_20_we1,
        buffer1_1_96_4x4_p_V_20_d1,
        buffer1_1_96_4x4_p_V_68_address0,
        buffer1_1_96_4x4_p_V_68_ce0,
        buffer1_1_96_4x4_p_V_68_we0,
        buffer1_1_96_4x4_p_V_68_d0,
        buffer1_1_96_4x4_p_V_68_q0,
        buffer1_1_96_4x4_p_V_68_address1,
        buffer1_1_96_4x4_p_V_68_ce1,
        buffer1_1_96_4x4_p_V_68_we1,
        buffer1_1_96_4x4_p_V_68_d1,
        buffer1_1_96_4x4_p_V_21_address0,
        buffer1_1_96_4x4_p_V_21_ce0,
        buffer1_1_96_4x4_p_V_21_we0,
        buffer1_1_96_4x4_p_V_21_d0,
        buffer1_1_96_4x4_p_V_21_q0,
        buffer1_1_96_4x4_p_V_21_address1,
        buffer1_1_96_4x4_p_V_21_ce1,
        buffer1_1_96_4x4_p_V_21_we1,
        buffer1_1_96_4x4_p_V_21_d1,
        buffer1_1_96_4x4_p_V_69_address0,
        buffer1_1_96_4x4_p_V_69_ce0,
        buffer1_1_96_4x4_p_V_69_we0,
        buffer1_1_96_4x4_p_V_69_d0,
        buffer1_1_96_4x4_p_V_69_q0,
        buffer1_1_96_4x4_p_V_69_address1,
        buffer1_1_96_4x4_p_V_69_ce1,
        buffer1_1_96_4x4_p_V_69_we1,
        buffer1_1_96_4x4_p_V_69_d1,
        buffer1_1_96_4x4_p_V_22_address0,
        buffer1_1_96_4x4_p_V_22_ce0,
        buffer1_1_96_4x4_p_V_22_we0,
        buffer1_1_96_4x4_p_V_22_d0,
        buffer1_1_96_4x4_p_V_22_q0,
        buffer1_1_96_4x4_p_V_22_address1,
        buffer1_1_96_4x4_p_V_22_ce1,
        buffer1_1_96_4x4_p_V_22_we1,
        buffer1_1_96_4x4_p_V_22_d1,
        buffer1_1_96_4x4_p_V_70_address0,
        buffer1_1_96_4x4_p_V_70_ce0,
        buffer1_1_96_4x4_p_V_70_we0,
        buffer1_1_96_4x4_p_V_70_d0,
        buffer1_1_96_4x4_p_V_70_q0,
        buffer1_1_96_4x4_p_V_70_address1,
        buffer1_1_96_4x4_p_V_70_ce1,
        buffer1_1_96_4x4_p_V_70_we1,
        buffer1_1_96_4x4_p_V_70_d1,
        buffer1_1_96_4x4_p_V_23_address0,
        buffer1_1_96_4x4_p_V_23_ce0,
        buffer1_1_96_4x4_p_V_23_we0,
        buffer1_1_96_4x4_p_V_23_d0,
        buffer1_1_96_4x4_p_V_23_q0,
        buffer1_1_96_4x4_p_V_23_address1,
        buffer1_1_96_4x4_p_V_23_ce1,
        buffer1_1_96_4x4_p_V_23_we1,
        buffer1_1_96_4x4_p_V_23_d1,
        buffer1_1_96_4x4_p_V_71_address0,
        buffer1_1_96_4x4_p_V_71_ce0,
        buffer1_1_96_4x4_p_V_71_we0,
        buffer1_1_96_4x4_p_V_71_d0,
        buffer1_1_96_4x4_p_V_71_q0,
        buffer1_1_96_4x4_p_V_71_address1,
        buffer1_1_96_4x4_p_V_71_ce1,
        buffer1_1_96_4x4_p_V_71_we1,
        buffer1_1_96_4x4_p_V_71_d1,
        buffer1_1_96_4x4_p_V_24_address0,
        buffer1_1_96_4x4_p_V_24_ce0,
        buffer1_1_96_4x4_p_V_24_we0,
        buffer1_1_96_4x4_p_V_24_d0,
        buffer1_1_96_4x4_p_V_24_q0,
        buffer1_1_96_4x4_p_V_24_address1,
        buffer1_1_96_4x4_p_V_24_ce1,
        buffer1_1_96_4x4_p_V_24_we1,
        buffer1_1_96_4x4_p_V_24_d1,
        buffer1_1_96_4x4_p_V_72_address0,
        buffer1_1_96_4x4_p_V_72_ce0,
        buffer1_1_96_4x4_p_V_72_we0,
        buffer1_1_96_4x4_p_V_72_d0,
        buffer1_1_96_4x4_p_V_72_q0,
        buffer1_1_96_4x4_p_V_72_address1,
        buffer1_1_96_4x4_p_V_72_ce1,
        buffer1_1_96_4x4_p_V_72_we1,
        buffer1_1_96_4x4_p_V_72_d1,
        buffer1_1_96_4x4_p_V_25_address0,
        buffer1_1_96_4x4_p_V_25_ce0,
        buffer1_1_96_4x4_p_V_25_we0,
        buffer1_1_96_4x4_p_V_25_d0,
        buffer1_1_96_4x4_p_V_25_q0,
        buffer1_1_96_4x4_p_V_25_address1,
        buffer1_1_96_4x4_p_V_25_ce1,
        buffer1_1_96_4x4_p_V_25_we1,
        buffer1_1_96_4x4_p_V_25_d1,
        buffer1_1_96_4x4_p_V_73_address0,
        buffer1_1_96_4x4_p_V_73_ce0,
        buffer1_1_96_4x4_p_V_73_we0,
        buffer1_1_96_4x4_p_V_73_d0,
        buffer1_1_96_4x4_p_V_73_q0,
        buffer1_1_96_4x4_p_V_73_address1,
        buffer1_1_96_4x4_p_V_73_ce1,
        buffer1_1_96_4x4_p_V_73_we1,
        buffer1_1_96_4x4_p_V_73_d1,
        buffer1_1_96_4x4_p_V_26_address0,
        buffer1_1_96_4x4_p_V_26_ce0,
        buffer1_1_96_4x4_p_V_26_we0,
        buffer1_1_96_4x4_p_V_26_d0,
        buffer1_1_96_4x4_p_V_26_q0,
        buffer1_1_96_4x4_p_V_26_address1,
        buffer1_1_96_4x4_p_V_26_ce1,
        buffer1_1_96_4x4_p_V_26_we1,
        buffer1_1_96_4x4_p_V_26_d1,
        buffer1_1_96_4x4_p_V_74_address0,
        buffer1_1_96_4x4_p_V_74_ce0,
        buffer1_1_96_4x4_p_V_74_we0,
        buffer1_1_96_4x4_p_V_74_d0,
        buffer1_1_96_4x4_p_V_74_q0,
        buffer1_1_96_4x4_p_V_74_address1,
        buffer1_1_96_4x4_p_V_74_ce1,
        buffer1_1_96_4x4_p_V_74_we1,
        buffer1_1_96_4x4_p_V_74_d1,
        buffer1_1_96_4x4_p_V_27_address0,
        buffer1_1_96_4x4_p_V_27_ce0,
        buffer1_1_96_4x4_p_V_27_we0,
        buffer1_1_96_4x4_p_V_27_d0,
        buffer1_1_96_4x4_p_V_27_q0,
        buffer1_1_96_4x4_p_V_27_address1,
        buffer1_1_96_4x4_p_V_27_ce1,
        buffer1_1_96_4x4_p_V_27_we1,
        buffer1_1_96_4x4_p_V_27_d1,
        buffer1_1_96_4x4_p_V_75_address0,
        buffer1_1_96_4x4_p_V_75_ce0,
        buffer1_1_96_4x4_p_V_75_we0,
        buffer1_1_96_4x4_p_V_75_d0,
        buffer1_1_96_4x4_p_V_75_q0,
        buffer1_1_96_4x4_p_V_75_address1,
        buffer1_1_96_4x4_p_V_75_ce1,
        buffer1_1_96_4x4_p_V_75_we1,
        buffer1_1_96_4x4_p_V_75_d1,
        buffer1_1_96_4x4_p_V_28_address0,
        buffer1_1_96_4x4_p_V_28_ce0,
        buffer1_1_96_4x4_p_V_28_we0,
        buffer1_1_96_4x4_p_V_28_d0,
        buffer1_1_96_4x4_p_V_28_q0,
        buffer1_1_96_4x4_p_V_28_address1,
        buffer1_1_96_4x4_p_V_28_ce1,
        buffer1_1_96_4x4_p_V_28_we1,
        buffer1_1_96_4x4_p_V_28_d1,
        buffer1_1_96_4x4_p_V_76_address0,
        buffer1_1_96_4x4_p_V_76_ce0,
        buffer1_1_96_4x4_p_V_76_we0,
        buffer1_1_96_4x4_p_V_76_d0,
        buffer1_1_96_4x4_p_V_76_q0,
        buffer1_1_96_4x4_p_V_76_address1,
        buffer1_1_96_4x4_p_V_76_ce1,
        buffer1_1_96_4x4_p_V_76_we1,
        buffer1_1_96_4x4_p_V_76_d1,
        buffer1_1_96_4x4_p_V_29_address0,
        buffer1_1_96_4x4_p_V_29_ce0,
        buffer1_1_96_4x4_p_V_29_we0,
        buffer1_1_96_4x4_p_V_29_d0,
        buffer1_1_96_4x4_p_V_29_q0,
        buffer1_1_96_4x4_p_V_29_address1,
        buffer1_1_96_4x4_p_V_29_ce1,
        buffer1_1_96_4x4_p_V_29_we1,
        buffer1_1_96_4x4_p_V_29_d1,
        buffer1_1_96_4x4_p_V_77_address0,
        buffer1_1_96_4x4_p_V_77_ce0,
        buffer1_1_96_4x4_p_V_77_we0,
        buffer1_1_96_4x4_p_V_77_d0,
        buffer1_1_96_4x4_p_V_77_q0,
        buffer1_1_96_4x4_p_V_77_address1,
        buffer1_1_96_4x4_p_V_77_ce1,
        buffer1_1_96_4x4_p_V_77_we1,
        buffer1_1_96_4x4_p_V_77_d1,
        buffer1_1_96_4x4_p_V_30_address0,
        buffer1_1_96_4x4_p_V_30_ce0,
        buffer1_1_96_4x4_p_V_30_we0,
        buffer1_1_96_4x4_p_V_30_d0,
        buffer1_1_96_4x4_p_V_30_q0,
        buffer1_1_96_4x4_p_V_30_address1,
        buffer1_1_96_4x4_p_V_30_ce1,
        buffer1_1_96_4x4_p_V_30_we1,
        buffer1_1_96_4x4_p_V_30_d1,
        buffer1_1_96_4x4_p_V_78_address0,
        buffer1_1_96_4x4_p_V_78_ce0,
        buffer1_1_96_4x4_p_V_78_we0,
        buffer1_1_96_4x4_p_V_78_d0,
        buffer1_1_96_4x4_p_V_78_q0,
        buffer1_1_96_4x4_p_V_78_address1,
        buffer1_1_96_4x4_p_V_78_ce1,
        buffer1_1_96_4x4_p_V_78_we1,
        buffer1_1_96_4x4_p_V_78_d1,
        buffer1_1_96_4x4_p_V_31_address0,
        buffer1_1_96_4x4_p_V_31_ce0,
        buffer1_1_96_4x4_p_V_31_we0,
        buffer1_1_96_4x4_p_V_31_d0,
        buffer1_1_96_4x4_p_V_31_q0,
        buffer1_1_96_4x4_p_V_31_address1,
        buffer1_1_96_4x4_p_V_31_ce1,
        buffer1_1_96_4x4_p_V_31_we1,
        buffer1_1_96_4x4_p_V_31_d1,
        buffer1_1_96_4x4_p_V_79_address0,
        buffer1_1_96_4x4_p_V_79_ce0,
        buffer1_1_96_4x4_p_V_79_we0,
        buffer1_1_96_4x4_p_V_79_d0,
        buffer1_1_96_4x4_p_V_79_q0,
        buffer1_1_96_4x4_p_V_79_address1,
        buffer1_1_96_4x4_p_V_79_ce1,
        buffer1_1_96_4x4_p_V_79_we1,
        buffer1_1_96_4x4_p_V_79_d1,
        buffer1_1_96_4x4_p_V_32_address0,
        buffer1_1_96_4x4_p_V_32_ce0,
        buffer1_1_96_4x4_p_V_32_we0,
        buffer1_1_96_4x4_p_V_32_d0,
        buffer1_1_96_4x4_p_V_32_q0,
        buffer1_1_96_4x4_p_V_32_address1,
        buffer1_1_96_4x4_p_V_32_ce1,
        buffer1_1_96_4x4_p_V_32_we1,
        buffer1_1_96_4x4_p_V_32_d1,
        buffer1_1_96_4x4_p_V_80_address0,
        buffer1_1_96_4x4_p_V_80_ce0,
        buffer1_1_96_4x4_p_V_80_we0,
        buffer1_1_96_4x4_p_V_80_d0,
        buffer1_1_96_4x4_p_V_80_q0,
        buffer1_1_96_4x4_p_V_80_address1,
        buffer1_1_96_4x4_p_V_80_ce1,
        buffer1_1_96_4x4_p_V_80_we1,
        buffer1_1_96_4x4_p_V_80_d1,
        buffer1_1_96_4x4_p_V_33_address0,
        buffer1_1_96_4x4_p_V_33_ce0,
        buffer1_1_96_4x4_p_V_33_we0,
        buffer1_1_96_4x4_p_V_33_d0,
        buffer1_1_96_4x4_p_V_33_q0,
        buffer1_1_96_4x4_p_V_33_address1,
        buffer1_1_96_4x4_p_V_33_ce1,
        buffer1_1_96_4x4_p_V_33_we1,
        buffer1_1_96_4x4_p_V_33_d1,
        buffer1_1_96_4x4_p_V_81_address0,
        buffer1_1_96_4x4_p_V_81_ce0,
        buffer1_1_96_4x4_p_V_81_we0,
        buffer1_1_96_4x4_p_V_81_d0,
        buffer1_1_96_4x4_p_V_81_q0,
        buffer1_1_96_4x4_p_V_81_address1,
        buffer1_1_96_4x4_p_V_81_ce1,
        buffer1_1_96_4x4_p_V_81_we1,
        buffer1_1_96_4x4_p_V_81_d1,
        buffer1_1_96_4x4_p_V_34_address0,
        buffer1_1_96_4x4_p_V_34_ce0,
        buffer1_1_96_4x4_p_V_34_we0,
        buffer1_1_96_4x4_p_V_34_d0,
        buffer1_1_96_4x4_p_V_34_q0,
        buffer1_1_96_4x4_p_V_34_address1,
        buffer1_1_96_4x4_p_V_34_ce1,
        buffer1_1_96_4x4_p_V_34_we1,
        buffer1_1_96_4x4_p_V_34_d1,
        buffer1_1_96_4x4_p_V_82_address0,
        buffer1_1_96_4x4_p_V_82_ce0,
        buffer1_1_96_4x4_p_V_82_we0,
        buffer1_1_96_4x4_p_V_82_d0,
        buffer1_1_96_4x4_p_V_82_q0,
        buffer1_1_96_4x4_p_V_82_address1,
        buffer1_1_96_4x4_p_V_82_ce1,
        buffer1_1_96_4x4_p_V_82_we1,
        buffer1_1_96_4x4_p_V_82_d1,
        buffer1_1_96_4x4_p_V_35_address0,
        buffer1_1_96_4x4_p_V_35_ce0,
        buffer1_1_96_4x4_p_V_35_we0,
        buffer1_1_96_4x4_p_V_35_d0,
        buffer1_1_96_4x4_p_V_35_q0,
        buffer1_1_96_4x4_p_V_35_address1,
        buffer1_1_96_4x4_p_V_35_ce1,
        buffer1_1_96_4x4_p_V_35_we1,
        buffer1_1_96_4x4_p_V_35_d1,
        buffer1_1_96_4x4_p_V_83_address0,
        buffer1_1_96_4x4_p_V_83_ce0,
        buffer1_1_96_4x4_p_V_83_we0,
        buffer1_1_96_4x4_p_V_83_d0,
        buffer1_1_96_4x4_p_V_83_q0,
        buffer1_1_96_4x4_p_V_83_address1,
        buffer1_1_96_4x4_p_V_83_ce1,
        buffer1_1_96_4x4_p_V_83_we1,
        buffer1_1_96_4x4_p_V_83_d1,
        buffer1_1_96_4x4_p_V_36_address0,
        buffer1_1_96_4x4_p_V_36_ce0,
        buffer1_1_96_4x4_p_V_36_we0,
        buffer1_1_96_4x4_p_V_36_d0,
        buffer1_1_96_4x4_p_V_36_q0,
        buffer1_1_96_4x4_p_V_36_address1,
        buffer1_1_96_4x4_p_V_36_ce1,
        buffer1_1_96_4x4_p_V_36_we1,
        buffer1_1_96_4x4_p_V_36_d1,
        buffer1_1_96_4x4_p_V_84_address0,
        buffer1_1_96_4x4_p_V_84_ce0,
        buffer1_1_96_4x4_p_V_84_we0,
        buffer1_1_96_4x4_p_V_84_d0,
        buffer1_1_96_4x4_p_V_84_q0,
        buffer1_1_96_4x4_p_V_84_address1,
        buffer1_1_96_4x4_p_V_84_ce1,
        buffer1_1_96_4x4_p_V_84_we1,
        buffer1_1_96_4x4_p_V_84_d1,
        buffer1_1_96_4x4_p_V_37_address0,
        buffer1_1_96_4x4_p_V_37_ce0,
        buffer1_1_96_4x4_p_V_37_we0,
        buffer1_1_96_4x4_p_V_37_d0,
        buffer1_1_96_4x4_p_V_37_q0,
        buffer1_1_96_4x4_p_V_37_address1,
        buffer1_1_96_4x4_p_V_37_ce1,
        buffer1_1_96_4x4_p_V_37_we1,
        buffer1_1_96_4x4_p_V_37_d1,
        buffer1_1_96_4x4_p_V_85_address0,
        buffer1_1_96_4x4_p_V_85_ce0,
        buffer1_1_96_4x4_p_V_85_we0,
        buffer1_1_96_4x4_p_V_85_d0,
        buffer1_1_96_4x4_p_V_85_q0,
        buffer1_1_96_4x4_p_V_85_address1,
        buffer1_1_96_4x4_p_V_85_ce1,
        buffer1_1_96_4x4_p_V_85_we1,
        buffer1_1_96_4x4_p_V_85_d1,
        buffer1_1_96_4x4_p_V_38_address0,
        buffer1_1_96_4x4_p_V_38_ce0,
        buffer1_1_96_4x4_p_V_38_we0,
        buffer1_1_96_4x4_p_V_38_d0,
        buffer1_1_96_4x4_p_V_38_q0,
        buffer1_1_96_4x4_p_V_38_address1,
        buffer1_1_96_4x4_p_V_38_ce1,
        buffer1_1_96_4x4_p_V_38_we1,
        buffer1_1_96_4x4_p_V_38_d1,
        buffer1_1_96_4x4_p_V_86_address0,
        buffer1_1_96_4x4_p_V_86_ce0,
        buffer1_1_96_4x4_p_V_86_we0,
        buffer1_1_96_4x4_p_V_86_d0,
        buffer1_1_96_4x4_p_V_86_q0,
        buffer1_1_96_4x4_p_V_86_address1,
        buffer1_1_96_4x4_p_V_86_ce1,
        buffer1_1_96_4x4_p_V_86_we1,
        buffer1_1_96_4x4_p_V_86_d1,
        buffer1_1_96_4x4_p_V_39_address0,
        buffer1_1_96_4x4_p_V_39_ce0,
        buffer1_1_96_4x4_p_V_39_we0,
        buffer1_1_96_4x4_p_V_39_d0,
        buffer1_1_96_4x4_p_V_39_q0,
        buffer1_1_96_4x4_p_V_39_address1,
        buffer1_1_96_4x4_p_V_39_ce1,
        buffer1_1_96_4x4_p_V_39_we1,
        buffer1_1_96_4x4_p_V_39_d1,
        buffer1_1_96_4x4_p_V_87_address0,
        buffer1_1_96_4x4_p_V_87_ce0,
        buffer1_1_96_4x4_p_V_87_we0,
        buffer1_1_96_4x4_p_V_87_d0,
        buffer1_1_96_4x4_p_V_87_q0,
        buffer1_1_96_4x4_p_V_87_address1,
        buffer1_1_96_4x4_p_V_87_ce1,
        buffer1_1_96_4x4_p_V_87_we1,
        buffer1_1_96_4x4_p_V_87_d1,
        buffer1_1_96_4x4_p_V_40_address0,
        buffer1_1_96_4x4_p_V_40_ce0,
        buffer1_1_96_4x4_p_V_40_we0,
        buffer1_1_96_4x4_p_V_40_d0,
        buffer1_1_96_4x4_p_V_40_q0,
        buffer1_1_96_4x4_p_V_40_address1,
        buffer1_1_96_4x4_p_V_40_ce1,
        buffer1_1_96_4x4_p_V_40_we1,
        buffer1_1_96_4x4_p_V_40_d1,
        buffer1_1_96_4x4_p_V_88_address0,
        buffer1_1_96_4x4_p_V_88_ce0,
        buffer1_1_96_4x4_p_V_88_we0,
        buffer1_1_96_4x4_p_V_88_d0,
        buffer1_1_96_4x4_p_V_88_q0,
        buffer1_1_96_4x4_p_V_88_address1,
        buffer1_1_96_4x4_p_V_88_ce1,
        buffer1_1_96_4x4_p_V_88_we1,
        buffer1_1_96_4x4_p_V_88_d1,
        buffer1_1_96_4x4_p_V_41_address0,
        buffer1_1_96_4x4_p_V_41_ce0,
        buffer1_1_96_4x4_p_V_41_we0,
        buffer1_1_96_4x4_p_V_41_d0,
        buffer1_1_96_4x4_p_V_41_q0,
        buffer1_1_96_4x4_p_V_41_address1,
        buffer1_1_96_4x4_p_V_41_ce1,
        buffer1_1_96_4x4_p_V_41_we1,
        buffer1_1_96_4x4_p_V_41_d1,
        buffer1_1_96_4x4_p_V_89_address0,
        buffer1_1_96_4x4_p_V_89_ce0,
        buffer1_1_96_4x4_p_V_89_we0,
        buffer1_1_96_4x4_p_V_89_d0,
        buffer1_1_96_4x4_p_V_89_q0,
        buffer1_1_96_4x4_p_V_89_address1,
        buffer1_1_96_4x4_p_V_89_ce1,
        buffer1_1_96_4x4_p_V_89_we1,
        buffer1_1_96_4x4_p_V_89_d1,
        buffer1_1_96_4x4_p_V_42_address0,
        buffer1_1_96_4x4_p_V_42_ce0,
        buffer1_1_96_4x4_p_V_42_we0,
        buffer1_1_96_4x4_p_V_42_d0,
        buffer1_1_96_4x4_p_V_42_q0,
        buffer1_1_96_4x4_p_V_42_address1,
        buffer1_1_96_4x4_p_V_42_ce1,
        buffer1_1_96_4x4_p_V_42_we1,
        buffer1_1_96_4x4_p_V_42_d1,
        buffer1_1_96_4x4_p_V_90_address0,
        buffer1_1_96_4x4_p_V_90_ce0,
        buffer1_1_96_4x4_p_V_90_we0,
        buffer1_1_96_4x4_p_V_90_d0,
        buffer1_1_96_4x4_p_V_90_q0,
        buffer1_1_96_4x4_p_V_90_address1,
        buffer1_1_96_4x4_p_V_90_ce1,
        buffer1_1_96_4x4_p_V_90_we1,
        buffer1_1_96_4x4_p_V_90_d1,
        buffer1_1_96_4x4_p_V_43_address0,
        buffer1_1_96_4x4_p_V_43_ce0,
        buffer1_1_96_4x4_p_V_43_we0,
        buffer1_1_96_4x4_p_V_43_d0,
        buffer1_1_96_4x4_p_V_43_q0,
        buffer1_1_96_4x4_p_V_43_address1,
        buffer1_1_96_4x4_p_V_43_ce1,
        buffer1_1_96_4x4_p_V_43_we1,
        buffer1_1_96_4x4_p_V_43_d1,
        buffer1_1_96_4x4_p_V_91_address0,
        buffer1_1_96_4x4_p_V_91_ce0,
        buffer1_1_96_4x4_p_V_91_we0,
        buffer1_1_96_4x4_p_V_91_d0,
        buffer1_1_96_4x4_p_V_91_q0,
        buffer1_1_96_4x4_p_V_91_address1,
        buffer1_1_96_4x4_p_V_91_ce1,
        buffer1_1_96_4x4_p_V_91_we1,
        buffer1_1_96_4x4_p_V_91_d1,
        buffer1_1_96_4x4_p_V_44_address0,
        buffer1_1_96_4x4_p_V_44_ce0,
        buffer1_1_96_4x4_p_V_44_we0,
        buffer1_1_96_4x4_p_V_44_d0,
        buffer1_1_96_4x4_p_V_44_q0,
        buffer1_1_96_4x4_p_V_44_address1,
        buffer1_1_96_4x4_p_V_44_ce1,
        buffer1_1_96_4x4_p_V_44_we1,
        buffer1_1_96_4x4_p_V_44_d1,
        buffer1_1_96_4x4_p_V_92_address0,
        buffer1_1_96_4x4_p_V_92_ce0,
        buffer1_1_96_4x4_p_V_92_we0,
        buffer1_1_96_4x4_p_V_92_d0,
        buffer1_1_96_4x4_p_V_92_q0,
        buffer1_1_96_4x4_p_V_92_address1,
        buffer1_1_96_4x4_p_V_92_ce1,
        buffer1_1_96_4x4_p_V_92_we1,
        buffer1_1_96_4x4_p_V_92_d1,
        buffer1_1_96_4x4_p_V_45_address0,
        buffer1_1_96_4x4_p_V_45_ce0,
        buffer1_1_96_4x4_p_V_45_we0,
        buffer1_1_96_4x4_p_V_45_d0,
        buffer1_1_96_4x4_p_V_45_q0,
        buffer1_1_96_4x4_p_V_45_address1,
        buffer1_1_96_4x4_p_V_45_ce1,
        buffer1_1_96_4x4_p_V_45_we1,
        buffer1_1_96_4x4_p_V_45_d1,
        buffer1_1_96_4x4_p_V_93_address0,
        buffer1_1_96_4x4_p_V_93_ce0,
        buffer1_1_96_4x4_p_V_93_we0,
        buffer1_1_96_4x4_p_V_93_d0,
        buffer1_1_96_4x4_p_V_93_q0,
        buffer1_1_96_4x4_p_V_93_address1,
        buffer1_1_96_4x4_p_V_93_ce1,
        buffer1_1_96_4x4_p_V_93_we1,
        buffer1_1_96_4x4_p_V_93_d1,
        buffer1_1_96_4x4_p_V_46_address0,
        buffer1_1_96_4x4_p_V_46_ce0,
        buffer1_1_96_4x4_p_V_46_we0,
        buffer1_1_96_4x4_p_V_46_d0,
        buffer1_1_96_4x4_p_V_46_q0,
        buffer1_1_96_4x4_p_V_46_address1,
        buffer1_1_96_4x4_p_V_46_ce1,
        buffer1_1_96_4x4_p_V_46_we1,
        buffer1_1_96_4x4_p_V_46_d1,
        buffer1_1_96_4x4_p_V_94_address0,
        buffer1_1_96_4x4_p_V_94_ce0,
        buffer1_1_96_4x4_p_V_94_we0,
        buffer1_1_96_4x4_p_V_94_d0,
        buffer1_1_96_4x4_p_V_94_q0,
        buffer1_1_96_4x4_p_V_94_address1,
        buffer1_1_96_4x4_p_V_94_ce1,
        buffer1_1_96_4x4_p_V_94_we1,
        buffer1_1_96_4x4_p_V_94_d1,
        buffer1_1_96_4x4_p_V_47_address0,
        buffer1_1_96_4x4_p_V_47_ce0,
        buffer1_1_96_4x4_p_V_47_we0,
        buffer1_1_96_4x4_p_V_47_d0,
        buffer1_1_96_4x4_p_V_47_q0,
        buffer1_1_96_4x4_p_V_47_address1,
        buffer1_1_96_4x4_p_V_47_ce1,
        buffer1_1_96_4x4_p_V_47_we1,
        buffer1_1_96_4x4_p_V_47_d1,
        buffer1_1_96_4x4_p_V_95_address0,
        buffer1_1_96_4x4_p_V_95_ce0,
        buffer1_1_96_4x4_p_V_95_we0,
        buffer1_1_96_4x4_p_V_95_d0,
        buffer1_1_96_4x4_p_V_95_q0,
        buffer1_1_96_4x4_p_V_95_address1,
        buffer1_1_96_4x4_p_V_95_ce1,
        buffer1_1_96_4x4_p_V_95_we1,
        buffer1_1_96_4x4_p_V_95_d1
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_pp0_stage0 = 23'd2;
parameter    ap_ST_fsm_state5 = 23'd4;
parameter    ap_ST_fsm_state6 = 23'd8;
parameter    ap_ST_fsm_state7 = 23'd16;
parameter    ap_ST_fsm_state8 = 23'd32;
parameter    ap_ST_fsm_state9 = 23'd64;
parameter    ap_ST_fsm_state10 = 23'd128;
parameter    ap_ST_fsm_state11 = 23'd256;
parameter    ap_ST_fsm_state12 = 23'd512;
parameter    ap_ST_fsm_state13 = 23'd1024;
parameter    ap_ST_fsm_state14 = 23'd2048;
parameter    ap_ST_fsm_state15 = 23'd4096;
parameter    ap_ST_fsm_state16 = 23'd8192;
parameter    ap_ST_fsm_state17 = 23'd16384;
parameter    ap_ST_fsm_state18 = 23'd32768;
parameter    ap_ST_fsm_state19 = 23'd65536;
parameter    ap_ST_fsm_state20 = 23'd131072;
parameter    ap_ST_fsm_state21 = 23'd262144;
parameter    ap_ST_fsm_state22 = 23'd524288;
parameter    ap_ST_fsm_state23 = 23'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 23'd2097152;
parameter    ap_ST_fsm_state28 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [6:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [6:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [6:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [6:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [6:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [6:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [6:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [6:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [6:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [6:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [6:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [6:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [6:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [6:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [6:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [6:0] weight_24_V_address0;
output   weight_24_V_ce0;
input  [7:0] weight_24_V_q0;
output  [6:0] weight_25_V_address0;
output   weight_25_V_ce0;
input  [7:0] weight_25_V_q0;
output  [6:0] weight_26_V_address0;
output   weight_26_V_ce0;
input  [7:0] weight_26_V_q0;
output  [6:0] weight_27_V_address0;
output   weight_27_V_ce0;
input  [7:0] weight_27_V_q0;
output  [6:0] weight_28_V_address0;
output   weight_28_V_ce0;
input  [7:0] weight_28_V_q0;
output  [6:0] weight_29_V_address0;
output   weight_29_V_ce0;
input  [7:0] weight_29_V_q0;
output  [6:0] weight_30_V_address0;
output   weight_30_V_ce0;
input  [7:0] weight_30_V_q0;
output  [6:0] weight_31_V_address0;
output   weight_31_V_ce0;
input  [7:0] weight_31_V_q0;
output  [6:0] weight_32_V_address0;
output   weight_32_V_ce0;
input  [7:0] weight_32_V_q0;
output  [6:0] weight_33_V_address0;
output   weight_33_V_ce0;
input  [7:0] weight_33_V_q0;
output  [6:0] weight_34_V_address0;
output   weight_34_V_ce0;
input  [7:0] weight_34_V_q0;
output  [6:0] weight_35_V_address0;
output   weight_35_V_ce0;
input  [7:0] weight_35_V_q0;
output  [6:0] weight_36_V_address0;
output   weight_36_V_ce0;
input  [7:0] weight_36_V_q0;
output  [6:0] weight_37_V_address0;
output   weight_37_V_ce0;
input  [7:0] weight_37_V_q0;
output  [6:0] weight_38_V_address0;
output   weight_38_V_ce0;
input  [7:0] weight_38_V_q0;
output  [6:0] weight_39_V_address0;
output   weight_39_V_ce0;
input  [7:0] weight_39_V_q0;
output  [6:0] weight_40_V_address0;
output   weight_40_V_ce0;
input  [7:0] weight_40_V_q0;
output  [6:0] weight_41_V_address0;
output   weight_41_V_ce0;
input  [7:0] weight_41_V_q0;
output  [6:0] weight_42_V_address0;
output   weight_42_V_ce0;
input  [7:0] weight_42_V_q0;
output  [6:0] weight_43_V_address0;
output   weight_43_V_ce0;
input  [7:0] weight_43_V_q0;
output  [6:0] weight_44_V_address0;
output   weight_44_V_ce0;
input  [7:0] weight_44_V_q0;
output  [6:0] weight_45_V_address0;
output   weight_45_V_ce0;
input  [7:0] weight_45_V_q0;
output  [6:0] weight_46_V_address0;
output   weight_46_V_ce0;
input  [7:0] weight_46_V_q0;
output  [6:0] weight_47_V_address0;
output   weight_47_V_ce0;
input  [7:0] weight_47_V_q0;
output  [6:0] weight_48_V_address0;
output   weight_48_V_ce0;
input  [7:0] weight_48_V_q0;
output  [6:0] weight_49_V_address0;
output   weight_49_V_ce0;
input  [7:0] weight_49_V_q0;
output  [6:0] weight_50_V_address0;
output   weight_50_V_ce0;
input  [7:0] weight_50_V_q0;
output  [6:0] weight_51_V_address0;
output   weight_51_V_ce0;
input  [7:0] weight_51_V_q0;
output  [6:0] weight_52_V_address0;
output   weight_52_V_ce0;
input  [7:0] weight_52_V_q0;
output  [6:0] weight_53_V_address0;
output   weight_53_V_ce0;
input  [7:0] weight_53_V_q0;
output  [6:0] weight_54_V_address0;
output   weight_54_V_ce0;
input  [7:0] weight_54_V_q0;
output  [6:0] weight_55_V_address0;
output   weight_55_V_ce0;
input  [7:0] weight_55_V_q0;
output  [6:0] weight_56_V_address0;
output   weight_56_V_ce0;
input  [7:0] weight_56_V_q0;
output  [6:0] weight_57_V_address0;
output   weight_57_V_ce0;
input  [7:0] weight_57_V_q0;
output  [6:0] weight_58_V_address0;
output   weight_58_V_ce0;
input  [7:0] weight_58_V_q0;
output  [6:0] weight_59_V_address0;
output   weight_59_V_ce0;
input  [7:0] weight_59_V_q0;
output  [6:0] weight_60_V_address0;
output   weight_60_V_ce0;
input  [7:0] weight_60_V_q0;
output  [6:0] weight_61_V_address0;
output   weight_61_V_ce0;
input  [7:0] weight_61_V_q0;
output  [6:0] weight_62_V_address0;
output   weight_62_V_ce0;
input  [7:0] weight_62_V_q0;
output  [6:0] weight_63_V_address0;
output   weight_63_V_ce0;
input  [7:0] weight_63_V_q0;
output  [6:0] weight_64_V_address0;
output   weight_64_V_ce0;
input  [7:0] weight_64_V_q0;
output  [6:0] weight_65_V_address0;
output   weight_65_V_ce0;
input  [7:0] weight_65_V_q0;
output  [6:0] weight_66_V_address0;
output   weight_66_V_ce0;
input  [7:0] weight_66_V_q0;
output  [6:0] weight_67_V_address0;
output   weight_67_V_ce0;
input  [7:0] weight_67_V_q0;
output  [6:0] weight_68_V_address0;
output   weight_68_V_ce0;
input  [7:0] weight_68_V_q0;
output  [6:0] weight_69_V_address0;
output   weight_69_V_ce0;
input  [7:0] weight_69_V_q0;
output  [6:0] weight_70_V_address0;
output   weight_70_V_ce0;
input  [7:0] weight_70_V_q0;
output  [6:0] weight_71_V_address0;
output   weight_71_V_ce0;
input  [7:0] weight_71_V_q0;
output  [6:0] weight_72_V_address0;
output   weight_72_V_ce0;
input  [7:0] weight_72_V_q0;
output  [6:0] weight_73_V_address0;
output   weight_73_V_ce0;
input  [7:0] weight_73_V_q0;
output  [6:0] weight_74_V_address0;
output   weight_74_V_ce0;
input  [7:0] weight_74_V_q0;
output  [6:0] weight_75_V_address0;
output   weight_75_V_ce0;
input  [7:0] weight_75_V_q0;
output  [6:0] weight_76_V_address0;
output   weight_76_V_ce0;
input  [7:0] weight_76_V_q0;
output  [6:0] weight_77_V_address0;
output   weight_77_V_ce0;
input  [7:0] weight_77_V_q0;
output  [6:0] weight_78_V_address0;
output   weight_78_V_ce0;
input  [7:0] weight_78_V_q0;
output  [6:0] weight_79_V_address0;
output   weight_79_V_ce0;
input  [7:0] weight_79_V_q0;
output  [6:0] weight_80_V_address0;
output   weight_80_V_ce0;
input  [7:0] weight_80_V_q0;
output  [6:0] weight_81_V_address0;
output   weight_81_V_ce0;
input  [7:0] weight_81_V_q0;
output  [6:0] weight_82_V_address0;
output   weight_82_V_ce0;
input  [7:0] weight_82_V_q0;
output  [6:0] weight_83_V_address0;
output   weight_83_V_ce0;
input  [7:0] weight_83_V_q0;
output  [6:0] weight_84_V_address0;
output   weight_84_V_ce0;
input  [7:0] weight_84_V_q0;
output  [6:0] weight_85_V_address0;
output   weight_85_V_ce0;
input  [7:0] weight_85_V_q0;
output  [6:0] weight_86_V_address0;
output   weight_86_V_ce0;
input  [7:0] weight_86_V_q0;
output  [6:0] weight_87_V_address0;
output   weight_87_V_ce0;
input  [7:0] weight_87_V_q0;
output  [6:0] weight_88_V_address0;
output   weight_88_V_ce0;
input  [7:0] weight_88_V_q0;
output  [6:0] weight_89_V_address0;
output   weight_89_V_ce0;
input  [7:0] weight_89_V_q0;
output  [6:0] weight_90_V_address0;
output   weight_90_V_ce0;
input  [7:0] weight_90_V_q0;
output  [6:0] weight_91_V_address0;
output   weight_91_V_ce0;
input  [7:0] weight_91_V_q0;
output  [6:0] weight_92_V_address0;
output   weight_92_V_ce0;
input  [7:0] weight_92_V_q0;
output  [6:0] weight_93_V_address0;
output   weight_93_V_ce0;
input  [7:0] weight_93_V_q0;
output  [6:0] weight_94_V_address0;
output   weight_94_V_ce0;
input  [7:0] weight_94_V_q0;
output  [6:0] weight_95_V_address0;
output   weight_95_V_ce0;
input  [7:0] weight_95_V_q0;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [5:0] buffer1_1_96_4x4_p_V_96_address0;
output   buffer1_1_96_4x4_p_V_96_ce0;
output   buffer1_1_96_4x4_p_V_96_we0;
output  [7:0] buffer1_1_96_4x4_p_V_96_d0;
input  [7:0] buffer1_1_96_4x4_p_V_96_q0;
output  [5:0] buffer1_1_96_4x4_p_V_96_address1;
output   buffer1_1_96_4x4_p_V_96_ce1;
output   buffer1_1_96_4x4_p_V_96_we1;
output  [7:0] buffer1_1_96_4x4_p_V_96_d1;
output  [5:0] buffer1_1_96_4x4_p_V_48_address0;
output   buffer1_1_96_4x4_p_V_48_ce0;
output   buffer1_1_96_4x4_p_V_48_we0;
output  [7:0] buffer1_1_96_4x4_p_V_48_d0;
input  [7:0] buffer1_1_96_4x4_p_V_48_q0;
output  [5:0] buffer1_1_96_4x4_p_V_48_address1;
output   buffer1_1_96_4x4_p_V_48_ce1;
output   buffer1_1_96_4x4_p_V_48_we1;
output  [7:0] buffer1_1_96_4x4_p_V_48_d1;
output  [5:0] buffer1_1_96_4x4_p_V_1_address0;
output   buffer1_1_96_4x4_p_V_1_ce0;
output   buffer1_1_96_4x4_p_V_1_we0;
output  [7:0] buffer1_1_96_4x4_p_V_1_d0;
input  [7:0] buffer1_1_96_4x4_p_V_1_q0;
output  [5:0] buffer1_1_96_4x4_p_V_1_address1;
output   buffer1_1_96_4x4_p_V_1_ce1;
output   buffer1_1_96_4x4_p_V_1_we1;
output  [7:0] buffer1_1_96_4x4_p_V_1_d1;
output  [5:0] buffer1_1_96_4x4_p_V_49_address0;
output   buffer1_1_96_4x4_p_V_49_ce0;
output   buffer1_1_96_4x4_p_V_49_we0;
output  [7:0] buffer1_1_96_4x4_p_V_49_d0;
input  [7:0] buffer1_1_96_4x4_p_V_49_q0;
output  [5:0] buffer1_1_96_4x4_p_V_49_address1;
output   buffer1_1_96_4x4_p_V_49_ce1;
output   buffer1_1_96_4x4_p_V_49_we1;
output  [7:0] buffer1_1_96_4x4_p_V_49_d1;
output  [5:0] buffer1_1_96_4x4_p_V_2_address0;
output   buffer1_1_96_4x4_p_V_2_ce0;
output   buffer1_1_96_4x4_p_V_2_we0;
output  [7:0] buffer1_1_96_4x4_p_V_2_d0;
input  [7:0] buffer1_1_96_4x4_p_V_2_q0;
output  [5:0] buffer1_1_96_4x4_p_V_2_address1;
output   buffer1_1_96_4x4_p_V_2_ce1;
output   buffer1_1_96_4x4_p_V_2_we1;
output  [7:0] buffer1_1_96_4x4_p_V_2_d1;
output  [5:0] buffer1_1_96_4x4_p_V_50_address0;
output   buffer1_1_96_4x4_p_V_50_ce0;
output   buffer1_1_96_4x4_p_V_50_we0;
output  [7:0] buffer1_1_96_4x4_p_V_50_d0;
input  [7:0] buffer1_1_96_4x4_p_V_50_q0;
output  [5:0] buffer1_1_96_4x4_p_V_50_address1;
output   buffer1_1_96_4x4_p_V_50_ce1;
output   buffer1_1_96_4x4_p_V_50_we1;
output  [7:0] buffer1_1_96_4x4_p_V_50_d1;
output  [5:0] buffer1_1_96_4x4_p_V_3_address0;
output   buffer1_1_96_4x4_p_V_3_ce0;
output   buffer1_1_96_4x4_p_V_3_we0;
output  [7:0] buffer1_1_96_4x4_p_V_3_d0;
input  [7:0] buffer1_1_96_4x4_p_V_3_q0;
output  [5:0] buffer1_1_96_4x4_p_V_3_address1;
output   buffer1_1_96_4x4_p_V_3_ce1;
output   buffer1_1_96_4x4_p_V_3_we1;
output  [7:0] buffer1_1_96_4x4_p_V_3_d1;
output  [5:0] buffer1_1_96_4x4_p_V_51_address0;
output   buffer1_1_96_4x4_p_V_51_ce0;
output   buffer1_1_96_4x4_p_V_51_we0;
output  [7:0] buffer1_1_96_4x4_p_V_51_d0;
input  [7:0] buffer1_1_96_4x4_p_V_51_q0;
output  [5:0] buffer1_1_96_4x4_p_V_51_address1;
output   buffer1_1_96_4x4_p_V_51_ce1;
output   buffer1_1_96_4x4_p_V_51_we1;
output  [7:0] buffer1_1_96_4x4_p_V_51_d1;
output  [5:0] buffer1_1_96_4x4_p_V_4_address0;
output   buffer1_1_96_4x4_p_V_4_ce0;
output   buffer1_1_96_4x4_p_V_4_we0;
output  [7:0] buffer1_1_96_4x4_p_V_4_d0;
input  [7:0] buffer1_1_96_4x4_p_V_4_q0;
output  [5:0] buffer1_1_96_4x4_p_V_4_address1;
output   buffer1_1_96_4x4_p_V_4_ce1;
output   buffer1_1_96_4x4_p_V_4_we1;
output  [7:0] buffer1_1_96_4x4_p_V_4_d1;
output  [5:0] buffer1_1_96_4x4_p_V_52_address0;
output   buffer1_1_96_4x4_p_V_52_ce0;
output   buffer1_1_96_4x4_p_V_52_we0;
output  [7:0] buffer1_1_96_4x4_p_V_52_d0;
input  [7:0] buffer1_1_96_4x4_p_V_52_q0;
output  [5:0] buffer1_1_96_4x4_p_V_52_address1;
output   buffer1_1_96_4x4_p_V_52_ce1;
output   buffer1_1_96_4x4_p_V_52_we1;
output  [7:0] buffer1_1_96_4x4_p_V_52_d1;
output  [5:0] buffer1_1_96_4x4_p_V_5_address0;
output   buffer1_1_96_4x4_p_V_5_ce0;
output   buffer1_1_96_4x4_p_V_5_we0;
output  [7:0] buffer1_1_96_4x4_p_V_5_d0;
input  [7:0] buffer1_1_96_4x4_p_V_5_q0;
output  [5:0] buffer1_1_96_4x4_p_V_5_address1;
output   buffer1_1_96_4x4_p_V_5_ce1;
output   buffer1_1_96_4x4_p_V_5_we1;
output  [7:0] buffer1_1_96_4x4_p_V_5_d1;
output  [5:0] buffer1_1_96_4x4_p_V_53_address0;
output   buffer1_1_96_4x4_p_V_53_ce0;
output   buffer1_1_96_4x4_p_V_53_we0;
output  [7:0] buffer1_1_96_4x4_p_V_53_d0;
input  [7:0] buffer1_1_96_4x4_p_V_53_q0;
output  [5:0] buffer1_1_96_4x4_p_V_53_address1;
output   buffer1_1_96_4x4_p_V_53_ce1;
output   buffer1_1_96_4x4_p_V_53_we1;
output  [7:0] buffer1_1_96_4x4_p_V_53_d1;
output  [5:0] buffer1_1_96_4x4_p_V_6_address0;
output   buffer1_1_96_4x4_p_V_6_ce0;
output   buffer1_1_96_4x4_p_V_6_we0;
output  [7:0] buffer1_1_96_4x4_p_V_6_d0;
input  [7:0] buffer1_1_96_4x4_p_V_6_q0;
output  [5:0] buffer1_1_96_4x4_p_V_6_address1;
output   buffer1_1_96_4x4_p_V_6_ce1;
output   buffer1_1_96_4x4_p_V_6_we1;
output  [7:0] buffer1_1_96_4x4_p_V_6_d1;
output  [5:0] buffer1_1_96_4x4_p_V_54_address0;
output   buffer1_1_96_4x4_p_V_54_ce0;
output   buffer1_1_96_4x4_p_V_54_we0;
output  [7:0] buffer1_1_96_4x4_p_V_54_d0;
input  [7:0] buffer1_1_96_4x4_p_V_54_q0;
output  [5:0] buffer1_1_96_4x4_p_V_54_address1;
output   buffer1_1_96_4x4_p_V_54_ce1;
output   buffer1_1_96_4x4_p_V_54_we1;
output  [7:0] buffer1_1_96_4x4_p_V_54_d1;
output  [5:0] buffer1_1_96_4x4_p_V_7_address0;
output   buffer1_1_96_4x4_p_V_7_ce0;
output   buffer1_1_96_4x4_p_V_7_we0;
output  [7:0] buffer1_1_96_4x4_p_V_7_d0;
input  [7:0] buffer1_1_96_4x4_p_V_7_q0;
output  [5:0] buffer1_1_96_4x4_p_V_7_address1;
output   buffer1_1_96_4x4_p_V_7_ce1;
output   buffer1_1_96_4x4_p_V_7_we1;
output  [7:0] buffer1_1_96_4x4_p_V_7_d1;
output  [5:0] buffer1_1_96_4x4_p_V_55_address0;
output   buffer1_1_96_4x4_p_V_55_ce0;
output   buffer1_1_96_4x4_p_V_55_we0;
output  [7:0] buffer1_1_96_4x4_p_V_55_d0;
input  [7:0] buffer1_1_96_4x4_p_V_55_q0;
output  [5:0] buffer1_1_96_4x4_p_V_55_address1;
output   buffer1_1_96_4x4_p_V_55_ce1;
output   buffer1_1_96_4x4_p_V_55_we1;
output  [7:0] buffer1_1_96_4x4_p_V_55_d1;
output  [5:0] buffer1_1_96_4x4_p_V_8_address0;
output   buffer1_1_96_4x4_p_V_8_ce0;
output   buffer1_1_96_4x4_p_V_8_we0;
output  [7:0] buffer1_1_96_4x4_p_V_8_d0;
input  [7:0] buffer1_1_96_4x4_p_V_8_q0;
output  [5:0] buffer1_1_96_4x4_p_V_8_address1;
output   buffer1_1_96_4x4_p_V_8_ce1;
output   buffer1_1_96_4x4_p_V_8_we1;
output  [7:0] buffer1_1_96_4x4_p_V_8_d1;
output  [5:0] buffer1_1_96_4x4_p_V_56_address0;
output   buffer1_1_96_4x4_p_V_56_ce0;
output   buffer1_1_96_4x4_p_V_56_we0;
output  [7:0] buffer1_1_96_4x4_p_V_56_d0;
input  [7:0] buffer1_1_96_4x4_p_V_56_q0;
output  [5:0] buffer1_1_96_4x4_p_V_56_address1;
output   buffer1_1_96_4x4_p_V_56_ce1;
output   buffer1_1_96_4x4_p_V_56_we1;
output  [7:0] buffer1_1_96_4x4_p_V_56_d1;
output  [5:0] buffer1_1_96_4x4_p_V_9_address0;
output   buffer1_1_96_4x4_p_V_9_ce0;
output   buffer1_1_96_4x4_p_V_9_we0;
output  [7:0] buffer1_1_96_4x4_p_V_9_d0;
input  [7:0] buffer1_1_96_4x4_p_V_9_q0;
output  [5:0] buffer1_1_96_4x4_p_V_9_address1;
output   buffer1_1_96_4x4_p_V_9_ce1;
output   buffer1_1_96_4x4_p_V_9_we1;
output  [7:0] buffer1_1_96_4x4_p_V_9_d1;
output  [5:0] buffer1_1_96_4x4_p_V_57_address0;
output   buffer1_1_96_4x4_p_V_57_ce0;
output   buffer1_1_96_4x4_p_V_57_we0;
output  [7:0] buffer1_1_96_4x4_p_V_57_d0;
input  [7:0] buffer1_1_96_4x4_p_V_57_q0;
output  [5:0] buffer1_1_96_4x4_p_V_57_address1;
output   buffer1_1_96_4x4_p_V_57_ce1;
output   buffer1_1_96_4x4_p_V_57_we1;
output  [7:0] buffer1_1_96_4x4_p_V_57_d1;
output  [5:0] buffer1_1_96_4x4_p_V_10_address0;
output   buffer1_1_96_4x4_p_V_10_ce0;
output   buffer1_1_96_4x4_p_V_10_we0;
output  [7:0] buffer1_1_96_4x4_p_V_10_d0;
input  [7:0] buffer1_1_96_4x4_p_V_10_q0;
output  [5:0] buffer1_1_96_4x4_p_V_10_address1;
output   buffer1_1_96_4x4_p_V_10_ce1;
output   buffer1_1_96_4x4_p_V_10_we1;
output  [7:0] buffer1_1_96_4x4_p_V_10_d1;
output  [5:0] buffer1_1_96_4x4_p_V_58_address0;
output   buffer1_1_96_4x4_p_V_58_ce0;
output   buffer1_1_96_4x4_p_V_58_we0;
output  [7:0] buffer1_1_96_4x4_p_V_58_d0;
input  [7:0] buffer1_1_96_4x4_p_V_58_q0;
output  [5:0] buffer1_1_96_4x4_p_V_58_address1;
output   buffer1_1_96_4x4_p_V_58_ce1;
output   buffer1_1_96_4x4_p_V_58_we1;
output  [7:0] buffer1_1_96_4x4_p_V_58_d1;
output  [5:0] buffer1_1_96_4x4_p_V_11_address0;
output   buffer1_1_96_4x4_p_V_11_ce0;
output   buffer1_1_96_4x4_p_V_11_we0;
output  [7:0] buffer1_1_96_4x4_p_V_11_d0;
input  [7:0] buffer1_1_96_4x4_p_V_11_q0;
output  [5:0] buffer1_1_96_4x4_p_V_11_address1;
output   buffer1_1_96_4x4_p_V_11_ce1;
output   buffer1_1_96_4x4_p_V_11_we1;
output  [7:0] buffer1_1_96_4x4_p_V_11_d1;
output  [5:0] buffer1_1_96_4x4_p_V_59_address0;
output   buffer1_1_96_4x4_p_V_59_ce0;
output   buffer1_1_96_4x4_p_V_59_we0;
output  [7:0] buffer1_1_96_4x4_p_V_59_d0;
input  [7:0] buffer1_1_96_4x4_p_V_59_q0;
output  [5:0] buffer1_1_96_4x4_p_V_59_address1;
output   buffer1_1_96_4x4_p_V_59_ce1;
output   buffer1_1_96_4x4_p_V_59_we1;
output  [7:0] buffer1_1_96_4x4_p_V_59_d1;
output  [5:0] buffer1_1_96_4x4_p_V_12_address0;
output   buffer1_1_96_4x4_p_V_12_ce0;
output   buffer1_1_96_4x4_p_V_12_we0;
output  [7:0] buffer1_1_96_4x4_p_V_12_d0;
input  [7:0] buffer1_1_96_4x4_p_V_12_q0;
output  [5:0] buffer1_1_96_4x4_p_V_12_address1;
output   buffer1_1_96_4x4_p_V_12_ce1;
output   buffer1_1_96_4x4_p_V_12_we1;
output  [7:0] buffer1_1_96_4x4_p_V_12_d1;
output  [5:0] buffer1_1_96_4x4_p_V_60_address0;
output   buffer1_1_96_4x4_p_V_60_ce0;
output   buffer1_1_96_4x4_p_V_60_we0;
output  [7:0] buffer1_1_96_4x4_p_V_60_d0;
input  [7:0] buffer1_1_96_4x4_p_V_60_q0;
output  [5:0] buffer1_1_96_4x4_p_V_60_address1;
output   buffer1_1_96_4x4_p_V_60_ce1;
output   buffer1_1_96_4x4_p_V_60_we1;
output  [7:0] buffer1_1_96_4x4_p_V_60_d1;
output  [5:0] buffer1_1_96_4x4_p_V_13_address0;
output   buffer1_1_96_4x4_p_V_13_ce0;
output   buffer1_1_96_4x4_p_V_13_we0;
output  [7:0] buffer1_1_96_4x4_p_V_13_d0;
input  [7:0] buffer1_1_96_4x4_p_V_13_q0;
output  [5:0] buffer1_1_96_4x4_p_V_13_address1;
output   buffer1_1_96_4x4_p_V_13_ce1;
output   buffer1_1_96_4x4_p_V_13_we1;
output  [7:0] buffer1_1_96_4x4_p_V_13_d1;
output  [5:0] buffer1_1_96_4x4_p_V_61_address0;
output   buffer1_1_96_4x4_p_V_61_ce0;
output   buffer1_1_96_4x4_p_V_61_we0;
output  [7:0] buffer1_1_96_4x4_p_V_61_d0;
input  [7:0] buffer1_1_96_4x4_p_V_61_q0;
output  [5:0] buffer1_1_96_4x4_p_V_61_address1;
output   buffer1_1_96_4x4_p_V_61_ce1;
output   buffer1_1_96_4x4_p_V_61_we1;
output  [7:0] buffer1_1_96_4x4_p_V_61_d1;
output  [5:0] buffer1_1_96_4x4_p_V_14_address0;
output   buffer1_1_96_4x4_p_V_14_ce0;
output   buffer1_1_96_4x4_p_V_14_we0;
output  [7:0] buffer1_1_96_4x4_p_V_14_d0;
input  [7:0] buffer1_1_96_4x4_p_V_14_q0;
output  [5:0] buffer1_1_96_4x4_p_V_14_address1;
output   buffer1_1_96_4x4_p_V_14_ce1;
output   buffer1_1_96_4x4_p_V_14_we1;
output  [7:0] buffer1_1_96_4x4_p_V_14_d1;
output  [5:0] buffer1_1_96_4x4_p_V_62_address0;
output   buffer1_1_96_4x4_p_V_62_ce0;
output   buffer1_1_96_4x4_p_V_62_we0;
output  [7:0] buffer1_1_96_4x4_p_V_62_d0;
input  [7:0] buffer1_1_96_4x4_p_V_62_q0;
output  [5:0] buffer1_1_96_4x4_p_V_62_address1;
output   buffer1_1_96_4x4_p_V_62_ce1;
output   buffer1_1_96_4x4_p_V_62_we1;
output  [7:0] buffer1_1_96_4x4_p_V_62_d1;
output  [5:0] buffer1_1_96_4x4_p_V_15_address0;
output   buffer1_1_96_4x4_p_V_15_ce0;
output   buffer1_1_96_4x4_p_V_15_we0;
output  [7:0] buffer1_1_96_4x4_p_V_15_d0;
input  [7:0] buffer1_1_96_4x4_p_V_15_q0;
output  [5:0] buffer1_1_96_4x4_p_V_15_address1;
output   buffer1_1_96_4x4_p_V_15_ce1;
output   buffer1_1_96_4x4_p_V_15_we1;
output  [7:0] buffer1_1_96_4x4_p_V_15_d1;
output  [5:0] buffer1_1_96_4x4_p_V_63_address0;
output   buffer1_1_96_4x4_p_V_63_ce0;
output   buffer1_1_96_4x4_p_V_63_we0;
output  [7:0] buffer1_1_96_4x4_p_V_63_d0;
input  [7:0] buffer1_1_96_4x4_p_V_63_q0;
output  [5:0] buffer1_1_96_4x4_p_V_63_address1;
output   buffer1_1_96_4x4_p_V_63_ce1;
output   buffer1_1_96_4x4_p_V_63_we1;
output  [7:0] buffer1_1_96_4x4_p_V_63_d1;
output  [5:0] buffer1_1_96_4x4_p_V_16_address0;
output   buffer1_1_96_4x4_p_V_16_ce0;
output   buffer1_1_96_4x4_p_V_16_we0;
output  [7:0] buffer1_1_96_4x4_p_V_16_d0;
input  [7:0] buffer1_1_96_4x4_p_V_16_q0;
output  [5:0] buffer1_1_96_4x4_p_V_16_address1;
output   buffer1_1_96_4x4_p_V_16_ce1;
output   buffer1_1_96_4x4_p_V_16_we1;
output  [7:0] buffer1_1_96_4x4_p_V_16_d1;
output  [5:0] buffer1_1_96_4x4_p_V_64_address0;
output   buffer1_1_96_4x4_p_V_64_ce0;
output   buffer1_1_96_4x4_p_V_64_we0;
output  [7:0] buffer1_1_96_4x4_p_V_64_d0;
input  [7:0] buffer1_1_96_4x4_p_V_64_q0;
output  [5:0] buffer1_1_96_4x4_p_V_64_address1;
output   buffer1_1_96_4x4_p_V_64_ce1;
output   buffer1_1_96_4x4_p_V_64_we1;
output  [7:0] buffer1_1_96_4x4_p_V_64_d1;
output  [5:0] buffer1_1_96_4x4_p_V_17_address0;
output   buffer1_1_96_4x4_p_V_17_ce0;
output   buffer1_1_96_4x4_p_V_17_we0;
output  [7:0] buffer1_1_96_4x4_p_V_17_d0;
input  [7:0] buffer1_1_96_4x4_p_V_17_q0;
output  [5:0] buffer1_1_96_4x4_p_V_17_address1;
output   buffer1_1_96_4x4_p_V_17_ce1;
output   buffer1_1_96_4x4_p_V_17_we1;
output  [7:0] buffer1_1_96_4x4_p_V_17_d1;
output  [5:0] buffer1_1_96_4x4_p_V_65_address0;
output   buffer1_1_96_4x4_p_V_65_ce0;
output   buffer1_1_96_4x4_p_V_65_we0;
output  [7:0] buffer1_1_96_4x4_p_V_65_d0;
input  [7:0] buffer1_1_96_4x4_p_V_65_q0;
output  [5:0] buffer1_1_96_4x4_p_V_65_address1;
output   buffer1_1_96_4x4_p_V_65_ce1;
output   buffer1_1_96_4x4_p_V_65_we1;
output  [7:0] buffer1_1_96_4x4_p_V_65_d1;
output  [5:0] buffer1_1_96_4x4_p_V_18_address0;
output   buffer1_1_96_4x4_p_V_18_ce0;
output   buffer1_1_96_4x4_p_V_18_we0;
output  [7:0] buffer1_1_96_4x4_p_V_18_d0;
input  [7:0] buffer1_1_96_4x4_p_V_18_q0;
output  [5:0] buffer1_1_96_4x4_p_V_18_address1;
output   buffer1_1_96_4x4_p_V_18_ce1;
output   buffer1_1_96_4x4_p_V_18_we1;
output  [7:0] buffer1_1_96_4x4_p_V_18_d1;
output  [5:0] buffer1_1_96_4x4_p_V_66_address0;
output   buffer1_1_96_4x4_p_V_66_ce0;
output   buffer1_1_96_4x4_p_V_66_we0;
output  [7:0] buffer1_1_96_4x4_p_V_66_d0;
input  [7:0] buffer1_1_96_4x4_p_V_66_q0;
output  [5:0] buffer1_1_96_4x4_p_V_66_address1;
output   buffer1_1_96_4x4_p_V_66_ce1;
output   buffer1_1_96_4x4_p_V_66_we1;
output  [7:0] buffer1_1_96_4x4_p_V_66_d1;
output  [5:0] buffer1_1_96_4x4_p_V_19_address0;
output   buffer1_1_96_4x4_p_V_19_ce0;
output   buffer1_1_96_4x4_p_V_19_we0;
output  [7:0] buffer1_1_96_4x4_p_V_19_d0;
input  [7:0] buffer1_1_96_4x4_p_V_19_q0;
output  [5:0] buffer1_1_96_4x4_p_V_19_address1;
output   buffer1_1_96_4x4_p_V_19_ce1;
output   buffer1_1_96_4x4_p_V_19_we1;
output  [7:0] buffer1_1_96_4x4_p_V_19_d1;
output  [5:0] buffer1_1_96_4x4_p_V_67_address0;
output   buffer1_1_96_4x4_p_V_67_ce0;
output   buffer1_1_96_4x4_p_V_67_we0;
output  [7:0] buffer1_1_96_4x4_p_V_67_d0;
input  [7:0] buffer1_1_96_4x4_p_V_67_q0;
output  [5:0] buffer1_1_96_4x4_p_V_67_address1;
output   buffer1_1_96_4x4_p_V_67_ce1;
output   buffer1_1_96_4x4_p_V_67_we1;
output  [7:0] buffer1_1_96_4x4_p_V_67_d1;
output  [5:0] buffer1_1_96_4x4_p_V_20_address0;
output   buffer1_1_96_4x4_p_V_20_ce0;
output   buffer1_1_96_4x4_p_V_20_we0;
output  [7:0] buffer1_1_96_4x4_p_V_20_d0;
input  [7:0] buffer1_1_96_4x4_p_V_20_q0;
output  [5:0] buffer1_1_96_4x4_p_V_20_address1;
output   buffer1_1_96_4x4_p_V_20_ce1;
output   buffer1_1_96_4x4_p_V_20_we1;
output  [7:0] buffer1_1_96_4x4_p_V_20_d1;
output  [5:0] buffer1_1_96_4x4_p_V_68_address0;
output   buffer1_1_96_4x4_p_V_68_ce0;
output   buffer1_1_96_4x4_p_V_68_we0;
output  [7:0] buffer1_1_96_4x4_p_V_68_d0;
input  [7:0] buffer1_1_96_4x4_p_V_68_q0;
output  [5:0] buffer1_1_96_4x4_p_V_68_address1;
output   buffer1_1_96_4x4_p_V_68_ce1;
output   buffer1_1_96_4x4_p_V_68_we1;
output  [7:0] buffer1_1_96_4x4_p_V_68_d1;
output  [5:0] buffer1_1_96_4x4_p_V_21_address0;
output   buffer1_1_96_4x4_p_V_21_ce0;
output   buffer1_1_96_4x4_p_V_21_we0;
output  [7:0] buffer1_1_96_4x4_p_V_21_d0;
input  [7:0] buffer1_1_96_4x4_p_V_21_q0;
output  [5:0] buffer1_1_96_4x4_p_V_21_address1;
output   buffer1_1_96_4x4_p_V_21_ce1;
output   buffer1_1_96_4x4_p_V_21_we1;
output  [7:0] buffer1_1_96_4x4_p_V_21_d1;
output  [5:0] buffer1_1_96_4x4_p_V_69_address0;
output   buffer1_1_96_4x4_p_V_69_ce0;
output   buffer1_1_96_4x4_p_V_69_we0;
output  [7:0] buffer1_1_96_4x4_p_V_69_d0;
input  [7:0] buffer1_1_96_4x4_p_V_69_q0;
output  [5:0] buffer1_1_96_4x4_p_V_69_address1;
output   buffer1_1_96_4x4_p_V_69_ce1;
output   buffer1_1_96_4x4_p_V_69_we1;
output  [7:0] buffer1_1_96_4x4_p_V_69_d1;
output  [5:0] buffer1_1_96_4x4_p_V_22_address0;
output   buffer1_1_96_4x4_p_V_22_ce0;
output   buffer1_1_96_4x4_p_V_22_we0;
output  [7:0] buffer1_1_96_4x4_p_V_22_d0;
input  [7:0] buffer1_1_96_4x4_p_V_22_q0;
output  [5:0] buffer1_1_96_4x4_p_V_22_address1;
output   buffer1_1_96_4x4_p_V_22_ce1;
output   buffer1_1_96_4x4_p_V_22_we1;
output  [7:0] buffer1_1_96_4x4_p_V_22_d1;
output  [5:0] buffer1_1_96_4x4_p_V_70_address0;
output   buffer1_1_96_4x4_p_V_70_ce0;
output   buffer1_1_96_4x4_p_V_70_we0;
output  [7:0] buffer1_1_96_4x4_p_V_70_d0;
input  [7:0] buffer1_1_96_4x4_p_V_70_q0;
output  [5:0] buffer1_1_96_4x4_p_V_70_address1;
output   buffer1_1_96_4x4_p_V_70_ce1;
output   buffer1_1_96_4x4_p_V_70_we1;
output  [7:0] buffer1_1_96_4x4_p_V_70_d1;
output  [5:0] buffer1_1_96_4x4_p_V_23_address0;
output   buffer1_1_96_4x4_p_V_23_ce0;
output   buffer1_1_96_4x4_p_V_23_we0;
output  [7:0] buffer1_1_96_4x4_p_V_23_d0;
input  [7:0] buffer1_1_96_4x4_p_V_23_q0;
output  [5:0] buffer1_1_96_4x4_p_V_23_address1;
output   buffer1_1_96_4x4_p_V_23_ce1;
output   buffer1_1_96_4x4_p_V_23_we1;
output  [7:0] buffer1_1_96_4x4_p_V_23_d1;
output  [5:0] buffer1_1_96_4x4_p_V_71_address0;
output   buffer1_1_96_4x4_p_V_71_ce0;
output   buffer1_1_96_4x4_p_V_71_we0;
output  [7:0] buffer1_1_96_4x4_p_V_71_d0;
input  [7:0] buffer1_1_96_4x4_p_V_71_q0;
output  [5:0] buffer1_1_96_4x4_p_V_71_address1;
output   buffer1_1_96_4x4_p_V_71_ce1;
output   buffer1_1_96_4x4_p_V_71_we1;
output  [7:0] buffer1_1_96_4x4_p_V_71_d1;
output  [5:0] buffer1_1_96_4x4_p_V_24_address0;
output   buffer1_1_96_4x4_p_V_24_ce0;
output   buffer1_1_96_4x4_p_V_24_we0;
output  [7:0] buffer1_1_96_4x4_p_V_24_d0;
input  [7:0] buffer1_1_96_4x4_p_V_24_q0;
output  [5:0] buffer1_1_96_4x4_p_V_24_address1;
output   buffer1_1_96_4x4_p_V_24_ce1;
output   buffer1_1_96_4x4_p_V_24_we1;
output  [7:0] buffer1_1_96_4x4_p_V_24_d1;
output  [5:0] buffer1_1_96_4x4_p_V_72_address0;
output   buffer1_1_96_4x4_p_V_72_ce0;
output   buffer1_1_96_4x4_p_V_72_we0;
output  [7:0] buffer1_1_96_4x4_p_V_72_d0;
input  [7:0] buffer1_1_96_4x4_p_V_72_q0;
output  [5:0] buffer1_1_96_4x4_p_V_72_address1;
output   buffer1_1_96_4x4_p_V_72_ce1;
output   buffer1_1_96_4x4_p_V_72_we1;
output  [7:0] buffer1_1_96_4x4_p_V_72_d1;
output  [5:0] buffer1_1_96_4x4_p_V_25_address0;
output   buffer1_1_96_4x4_p_V_25_ce0;
output   buffer1_1_96_4x4_p_V_25_we0;
output  [7:0] buffer1_1_96_4x4_p_V_25_d0;
input  [7:0] buffer1_1_96_4x4_p_V_25_q0;
output  [5:0] buffer1_1_96_4x4_p_V_25_address1;
output   buffer1_1_96_4x4_p_V_25_ce1;
output   buffer1_1_96_4x4_p_V_25_we1;
output  [7:0] buffer1_1_96_4x4_p_V_25_d1;
output  [5:0] buffer1_1_96_4x4_p_V_73_address0;
output   buffer1_1_96_4x4_p_V_73_ce0;
output   buffer1_1_96_4x4_p_V_73_we0;
output  [7:0] buffer1_1_96_4x4_p_V_73_d0;
input  [7:0] buffer1_1_96_4x4_p_V_73_q0;
output  [5:0] buffer1_1_96_4x4_p_V_73_address1;
output   buffer1_1_96_4x4_p_V_73_ce1;
output   buffer1_1_96_4x4_p_V_73_we1;
output  [7:0] buffer1_1_96_4x4_p_V_73_d1;
output  [5:0] buffer1_1_96_4x4_p_V_26_address0;
output   buffer1_1_96_4x4_p_V_26_ce0;
output   buffer1_1_96_4x4_p_V_26_we0;
output  [7:0] buffer1_1_96_4x4_p_V_26_d0;
input  [7:0] buffer1_1_96_4x4_p_V_26_q0;
output  [5:0] buffer1_1_96_4x4_p_V_26_address1;
output   buffer1_1_96_4x4_p_V_26_ce1;
output   buffer1_1_96_4x4_p_V_26_we1;
output  [7:0] buffer1_1_96_4x4_p_V_26_d1;
output  [5:0] buffer1_1_96_4x4_p_V_74_address0;
output   buffer1_1_96_4x4_p_V_74_ce0;
output   buffer1_1_96_4x4_p_V_74_we0;
output  [7:0] buffer1_1_96_4x4_p_V_74_d0;
input  [7:0] buffer1_1_96_4x4_p_V_74_q0;
output  [5:0] buffer1_1_96_4x4_p_V_74_address1;
output   buffer1_1_96_4x4_p_V_74_ce1;
output   buffer1_1_96_4x4_p_V_74_we1;
output  [7:0] buffer1_1_96_4x4_p_V_74_d1;
output  [5:0] buffer1_1_96_4x4_p_V_27_address0;
output   buffer1_1_96_4x4_p_V_27_ce0;
output   buffer1_1_96_4x4_p_V_27_we0;
output  [7:0] buffer1_1_96_4x4_p_V_27_d0;
input  [7:0] buffer1_1_96_4x4_p_V_27_q0;
output  [5:0] buffer1_1_96_4x4_p_V_27_address1;
output   buffer1_1_96_4x4_p_V_27_ce1;
output   buffer1_1_96_4x4_p_V_27_we1;
output  [7:0] buffer1_1_96_4x4_p_V_27_d1;
output  [5:0] buffer1_1_96_4x4_p_V_75_address0;
output   buffer1_1_96_4x4_p_V_75_ce0;
output   buffer1_1_96_4x4_p_V_75_we0;
output  [7:0] buffer1_1_96_4x4_p_V_75_d0;
input  [7:0] buffer1_1_96_4x4_p_V_75_q0;
output  [5:0] buffer1_1_96_4x4_p_V_75_address1;
output   buffer1_1_96_4x4_p_V_75_ce1;
output   buffer1_1_96_4x4_p_V_75_we1;
output  [7:0] buffer1_1_96_4x4_p_V_75_d1;
output  [5:0] buffer1_1_96_4x4_p_V_28_address0;
output   buffer1_1_96_4x4_p_V_28_ce0;
output   buffer1_1_96_4x4_p_V_28_we0;
output  [7:0] buffer1_1_96_4x4_p_V_28_d0;
input  [7:0] buffer1_1_96_4x4_p_V_28_q0;
output  [5:0] buffer1_1_96_4x4_p_V_28_address1;
output   buffer1_1_96_4x4_p_V_28_ce1;
output   buffer1_1_96_4x4_p_V_28_we1;
output  [7:0] buffer1_1_96_4x4_p_V_28_d1;
output  [5:0] buffer1_1_96_4x4_p_V_76_address0;
output   buffer1_1_96_4x4_p_V_76_ce0;
output   buffer1_1_96_4x4_p_V_76_we0;
output  [7:0] buffer1_1_96_4x4_p_V_76_d0;
input  [7:0] buffer1_1_96_4x4_p_V_76_q0;
output  [5:0] buffer1_1_96_4x4_p_V_76_address1;
output   buffer1_1_96_4x4_p_V_76_ce1;
output   buffer1_1_96_4x4_p_V_76_we1;
output  [7:0] buffer1_1_96_4x4_p_V_76_d1;
output  [5:0] buffer1_1_96_4x4_p_V_29_address0;
output   buffer1_1_96_4x4_p_V_29_ce0;
output   buffer1_1_96_4x4_p_V_29_we0;
output  [7:0] buffer1_1_96_4x4_p_V_29_d0;
input  [7:0] buffer1_1_96_4x4_p_V_29_q0;
output  [5:0] buffer1_1_96_4x4_p_V_29_address1;
output   buffer1_1_96_4x4_p_V_29_ce1;
output   buffer1_1_96_4x4_p_V_29_we1;
output  [7:0] buffer1_1_96_4x4_p_V_29_d1;
output  [5:0] buffer1_1_96_4x4_p_V_77_address0;
output   buffer1_1_96_4x4_p_V_77_ce0;
output   buffer1_1_96_4x4_p_V_77_we0;
output  [7:0] buffer1_1_96_4x4_p_V_77_d0;
input  [7:0] buffer1_1_96_4x4_p_V_77_q0;
output  [5:0] buffer1_1_96_4x4_p_V_77_address1;
output   buffer1_1_96_4x4_p_V_77_ce1;
output   buffer1_1_96_4x4_p_V_77_we1;
output  [7:0] buffer1_1_96_4x4_p_V_77_d1;
output  [5:0] buffer1_1_96_4x4_p_V_30_address0;
output   buffer1_1_96_4x4_p_V_30_ce0;
output   buffer1_1_96_4x4_p_V_30_we0;
output  [7:0] buffer1_1_96_4x4_p_V_30_d0;
input  [7:0] buffer1_1_96_4x4_p_V_30_q0;
output  [5:0] buffer1_1_96_4x4_p_V_30_address1;
output   buffer1_1_96_4x4_p_V_30_ce1;
output   buffer1_1_96_4x4_p_V_30_we1;
output  [7:0] buffer1_1_96_4x4_p_V_30_d1;
output  [5:0] buffer1_1_96_4x4_p_V_78_address0;
output   buffer1_1_96_4x4_p_V_78_ce0;
output   buffer1_1_96_4x4_p_V_78_we0;
output  [7:0] buffer1_1_96_4x4_p_V_78_d0;
input  [7:0] buffer1_1_96_4x4_p_V_78_q0;
output  [5:0] buffer1_1_96_4x4_p_V_78_address1;
output   buffer1_1_96_4x4_p_V_78_ce1;
output   buffer1_1_96_4x4_p_V_78_we1;
output  [7:0] buffer1_1_96_4x4_p_V_78_d1;
output  [5:0] buffer1_1_96_4x4_p_V_31_address0;
output   buffer1_1_96_4x4_p_V_31_ce0;
output   buffer1_1_96_4x4_p_V_31_we0;
output  [7:0] buffer1_1_96_4x4_p_V_31_d0;
input  [7:0] buffer1_1_96_4x4_p_V_31_q0;
output  [5:0] buffer1_1_96_4x4_p_V_31_address1;
output   buffer1_1_96_4x4_p_V_31_ce1;
output   buffer1_1_96_4x4_p_V_31_we1;
output  [7:0] buffer1_1_96_4x4_p_V_31_d1;
output  [5:0] buffer1_1_96_4x4_p_V_79_address0;
output   buffer1_1_96_4x4_p_V_79_ce0;
output   buffer1_1_96_4x4_p_V_79_we0;
output  [7:0] buffer1_1_96_4x4_p_V_79_d0;
input  [7:0] buffer1_1_96_4x4_p_V_79_q0;
output  [5:0] buffer1_1_96_4x4_p_V_79_address1;
output   buffer1_1_96_4x4_p_V_79_ce1;
output   buffer1_1_96_4x4_p_V_79_we1;
output  [7:0] buffer1_1_96_4x4_p_V_79_d1;
output  [5:0] buffer1_1_96_4x4_p_V_32_address0;
output   buffer1_1_96_4x4_p_V_32_ce0;
output   buffer1_1_96_4x4_p_V_32_we0;
output  [7:0] buffer1_1_96_4x4_p_V_32_d0;
input  [7:0] buffer1_1_96_4x4_p_V_32_q0;
output  [5:0] buffer1_1_96_4x4_p_V_32_address1;
output   buffer1_1_96_4x4_p_V_32_ce1;
output   buffer1_1_96_4x4_p_V_32_we1;
output  [7:0] buffer1_1_96_4x4_p_V_32_d1;
output  [5:0] buffer1_1_96_4x4_p_V_80_address0;
output   buffer1_1_96_4x4_p_V_80_ce0;
output   buffer1_1_96_4x4_p_V_80_we0;
output  [7:0] buffer1_1_96_4x4_p_V_80_d0;
input  [7:0] buffer1_1_96_4x4_p_V_80_q0;
output  [5:0] buffer1_1_96_4x4_p_V_80_address1;
output   buffer1_1_96_4x4_p_V_80_ce1;
output   buffer1_1_96_4x4_p_V_80_we1;
output  [7:0] buffer1_1_96_4x4_p_V_80_d1;
output  [5:0] buffer1_1_96_4x4_p_V_33_address0;
output   buffer1_1_96_4x4_p_V_33_ce0;
output   buffer1_1_96_4x4_p_V_33_we0;
output  [7:0] buffer1_1_96_4x4_p_V_33_d0;
input  [7:0] buffer1_1_96_4x4_p_V_33_q0;
output  [5:0] buffer1_1_96_4x4_p_V_33_address1;
output   buffer1_1_96_4x4_p_V_33_ce1;
output   buffer1_1_96_4x4_p_V_33_we1;
output  [7:0] buffer1_1_96_4x4_p_V_33_d1;
output  [5:0] buffer1_1_96_4x4_p_V_81_address0;
output   buffer1_1_96_4x4_p_V_81_ce0;
output   buffer1_1_96_4x4_p_V_81_we0;
output  [7:0] buffer1_1_96_4x4_p_V_81_d0;
input  [7:0] buffer1_1_96_4x4_p_V_81_q0;
output  [5:0] buffer1_1_96_4x4_p_V_81_address1;
output   buffer1_1_96_4x4_p_V_81_ce1;
output   buffer1_1_96_4x4_p_V_81_we1;
output  [7:0] buffer1_1_96_4x4_p_V_81_d1;
output  [5:0] buffer1_1_96_4x4_p_V_34_address0;
output   buffer1_1_96_4x4_p_V_34_ce0;
output   buffer1_1_96_4x4_p_V_34_we0;
output  [7:0] buffer1_1_96_4x4_p_V_34_d0;
input  [7:0] buffer1_1_96_4x4_p_V_34_q0;
output  [5:0] buffer1_1_96_4x4_p_V_34_address1;
output   buffer1_1_96_4x4_p_V_34_ce1;
output   buffer1_1_96_4x4_p_V_34_we1;
output  [7:0] buffer1_1_96_4x4_p_V_34_d1;
output  [5:0] buffer1_1_96_4x4_p_V_82_address0;
output   buffer1_1_96_4x4_p_V_82_ce0;
output   buffer1_1_96_4x4_p_V_82_we0;
output  [7:0] buffer1_1_96_4x4_p_V_82_d0;
input  [7:0] buffer1_1_96_4x4_p_V_82_q0;
output  [5:0] buffer1_1_96_4x4_p_V_82_address1;
output   buffer1_1_96_4x4_p_V_82_ce1;
output   buffer1_1_96_4x4_p_V_82_we1;
output  [7:0] buffer1_1_96_4x4_p_V_82_d1;
output  [5:0] buffer1_1_96_4x4_p_V_35_address0;
output   buffer1_1_96_4x4_p_V_35_ce0;
output   buffer1_1_96_4x4_p_V_35_we0;
output  [7:0] buffer1_1_96_4x4_p_V_35_d0;
input  [7:0] buffer1_1_96_4x4_p_V_35_q0;
output  [5:0] buffer1_1_96_4x4_p_V_35_address1;
output   buffer1_1_96_4x4_p_V_35_ce1;
output   buffer1_1_96_4x4_p_V_35_we1;
output  [7:0] buffer1_1_96_4x4_p_V_35_d1;
output  [5:0] buffer1_1_96_4x4_p_V_83_address0;
output   buffer1_1_96_4x4_p_V_83_ce0;
output   buffer1_1_96_4x4_p_V_83_we0;
output  [7:0] buffer1_1_96_4x4_p_V_83_d0;
input  [7:0] buffer1_1_96_4x4_p_V_83_q0;
output  [5:0] buffer1_1_96_4x4_p_V_83_address1;
output   buffer1_1_96_4x4_p_V_83_ce1;
output   buffer1_1_96_4x4_p_V_83_we1;
output  [7:0] buffer1_1_96_4x4_p_V_83_d1;
output  [5:0] buffer1_1_96_4x4_p_V_36_address0;
output   buffer1_1_96_4x4_p_V_36_ce0;
output   buffer1_1_96_4x4_p_V_36_we0;
output  [7:0] buffer1_1_96_4x4_p_V_36_d0;
input  [7:0] buffer1_1_96_4x4_p_V_36_q0;
output  [5:0] buffer1_1_96_4x4_p_V_36_address1;
output   buffer1_1_96_4x4_p_V_36_ce1;
output   buffer1_1_96_4x4_p_V_36_we1;
output  [7:0] buffer1_1_96_4x4_p_V_36_d1;
output  [5:0] buffer1_1_96_4x4_p_V_84_address0;
output   buffer1_1_96_4x4_p_V_84_ce0;
output   buffer1_1_96_4x4_p_V_84_we0;
output  [7:0] buffer1_1_96_4x4_p_V_84_d0;
input  [7:0] buffer1_1_96_4x4_p_V_84_q0;
output  [5:0] buffer1_1_96_4x4_p_V_84_address1;
output   buffer1_1_96_4x4_p_V_84_ce1;
output   buffer1_1_96_4x4_p_V_84_we1;
output  [7:0] buffer1_1_96_4x4_p_V_84_d1;
output  [5:0] buffer1_1_96_4x4_p_V_37_address0;
output   buffer1_1_96_4x4_p_V_37_ce0;
output   buffer1_1_96_4x4_p_V_37_we0;
output  [7:0] buffer1_1_96_4x4_p_V_37_d0;
input  [7:0] buffer1_1_96_4x4_p_V_37_q0;
output  [5:0] buffer1_1_96_4x4_p_V_37_address1;
output   buffer1_1_96_4x4_p_V_37_ce1;
output   buffer1_1_96_4x4_p_V_37_we1;
output  [7:0] buffer1_1_96_4x4_p_V_37_d1;
output  [5:0] buffer1_1_96_4x4_p_V_85_address0;
output   buffer1_1_96_4x4_p_V_85_ce0;
output   buffer1_1_96_4x4_p_V_85_we0;
output  [7:0] buffer1_1_96_4x4_p_V_85_d0;
input  [7:0] buffer1_1_96_4x4_p_V_85_q0;
output  [5:0] buffer1_1_96_4x4_p_V_85_address1;
output   buffer1_1_96_4x4_p_V_85_ce1;
output   buffer1_1_96_4x4_p_V_85_we1;
output  [7:0] buffer1_1_96_4x4_p_V_85_d1;
output  [5:0] buffer1_1_96_4x4_p_V_38_address0;
output   buffer1_1_96_4x4_p_V_38_ce0;
output   buffer1_1_96_4x4_p_V_38_we0;
output  [7:0] buffer1_1_96_4x4_p_V_38_d0;
input  [7:0] buffer1_1_96_4x4_p_V_38_q0;
output  [5:0] buffer1_1_96_4x4_p_V_38_address1;
output   buffer1_1_96_4x4_p_V_38_ce1;
output   buffer1_1_96_4x4_p_V_38_we1;
output  [7:0] buffer1_1_96_4x4_p_V_38_d1;
output  [5:0] buffer1_1_96_4x4_p_V_86_address0;
output   buffer1_1_96_4x4_p_V_86_ce0;
output   buffer1_1_96_4x4_p_V_86_we0;
output  [7:0] buffer1_1_96_4x4_p_V_86_d0;
input  [7:0] buffer1_1_96_4x4_p_V_86_q0;
output  [5:0] buffer1_1_96_4x4_p_V_86_address1;
output   buffer1_1_96_4x4_p_V_86_ce1;
output   buffer1_1_96_4x4_p_V_86_we1;
output  [7:0] buffer1_1_96_4x4_p_V_86_d1;
output  [5:0] buffer1_1_96_4x4_p_V_39_address0;
output   buffer1_1_96_4x4_p_V_39_ce0;
output   buffer1_1_96_4x4_p_V_39_we0;
output  [7:0] buffer1_1_96_4x4_p_V_39_d0;
input  [7:0] buffer1_1_96_4x4_p_V_39_q0;
output  [5:0] buffer1_1_96_4x4_p_V_39_address1;
output   buffer1_1_96_4x4_p_V_39_ce1;
output   buffer1_1_96_4x4_p_V_39_we1;
output  [7:0] buffer1_1_96_4x4_p_V_39_d1;
output  [5:0] buffer1_1_96_4x4_p_V_87_address0;
output   buffer1_1_96_4x4_p_V_87_ce0;
output   buffer1_1_96_4x4_p_V_87_we0;
output  [7:0] buffer1_1_96_4x4_p_V_87_d0;
input  [7:0] buffer1_1_96_4x4_p_V_87_q0;
output  [5:0] buffer1_1_96_4x4_p_V_87_address1;
output   buffer1_1_96_4x4_p_V_87_ce1;
output   buffer1_1_96_4x4_p_V_87_we1;
output  [7:0] buffer1_1_96_4x4_p_V_87_d1;
output  [5:0] buffer1_1_96_4x4_p_V_40_address0;
output   buffer1_1_96_4x4_p_V_40_ce0;
output   buffer1_1_96_4x4_p_V_40_we0;
output  [7:0] buffer1_1_96_4x4_p_V_40_d0;
input  [7:0] buffer1_1_96_4x4_p_V_40_q0;
output  [5:0] buffer1_1_96_4x4_p_V_40_address1;
output   buffer1_1_96_4x4_p_V_40_ce1;
output   buffer1_1_96_4x4_p_V_40_we1;
output  [7:0] buffer1_1_96_4x4_p_V_40_d1;
output  [5:0] buffer1_1_96_4x4_p_V_88_address0;
output   buffer1_1_96_4x4_p_V_88_ce0;
output   buffer1_1_96_4x4_p_V_88_we0;
output  [7:0] buffer1_1_96_4x4_p_V_88_d0;
input  [7:0] buffer1_1_96_4x4_p_V_88_q0;
output  [5:0] buffer1_1_96_4x4_p_V_88_address1;
output   buffer1_1_96_4x4_p_V_88_ce1;
output   buffer1_1_96_4x4_p_V_88_we1;
output  [7:0] buffer1_1_96_4x4_p_V_88_d1;
output  [5:0] buffer1_1_96_4x4_p_V_41_address0;
output   buffer1_1_96_4x4_p_V_41_ce0;
output   buffer1_1_96_4x4_p_V_41_we0;
output  [7:0] buffer1_1_96_4x4_p_V_41_d0;
input  [7:0] buffer1_1_96_4x4_p_V_41_q0;
output  [5:0] buffer1_1_96_4x4_p_V_41_address1;
output   buffer1_1_96_4x4_p_V_41_ce1;
output   buffer1_1_96_4x4_p_V_41_we1;
output  [7:0] buffer1_1_96_4x4_p_V_41_d1;
output  [5:0] buffer1_1_96_4x4_p_V_89_address0;
output   buffer1_1_96_4x4_p_V_89_ce0;
output   buffer1_1_96_4x4_p_V_89_we0;
output  [7:0] buffer1_1_96_4x4_p_V_89_d0;
input  [7:0] buffer1_1_96_4x4_p_V_89_q0;
output  [5:0] buffer1_1_96_4x4_p_V_89_address1;
output   buffer1_1_96_4x4_p_V_89_ce1;
output   buffer1_1_96_4x4_p_V_89_we1;
output  [7:0] buffer1_1_96_4x4_p_V_89_d1;
output  [5:0] buffer1_1_96_4x4_p_V_42_address0;
output   buffer1_1_96_4x4_p_V_42_ce0;
output   buffer1_1_96_4x4_p_V_42_we0;
output  [7:0] buffer1_1_96_4x4_p_V_42_d0;
input  [7:0] buffer1_1_96_4x4_p_V_42_q0;
output  [5:0] buffer1_1_96_4x4_p_V_42_address1;
output   buffer1_1_96_4x4_p_V_42_ce1;
output   buffer1_1_96_4x4_p_V_42_we1;
output  [7:0] buffer1_1_96_4x4_p_V_42_d1;
output  [5:0] buffer1_1_96_4x4_p_V_90_address0;
output   buffer1_1_96_4x4_p_V_90_ce0;
output   buffer1_1_96_4x4_p_V_90_we0;
output  [7:0] buffer1_1_96_4x4_p_V_90_d0;
input  [7:0] buffer1_1_96_4x4_p_V_90_q0;
output  [5:0] buffer1_1_96_4x4_p_V_90_address1;
output   buffer1_1_96_4x4_p_V_90_ce1;
output   buffer1_1_96_4x4_p_V_90_we1;
output  [7:0] buffer1_1_96_4x4_p_V_90_d1;
output  [5:0] buffer1_1_96_4x4_p_V_43_address0;
output   buffer1_1_96_4x4_p_V_43_ce0;
output   buffer1_1_96_4x4_p_V_43_we0;
output  [7:0] buffer1_1_96_4x4_p_V_43_d0;
input  [7:0] buffer1_1_96_4x4_p_V_43_q0;
output  [5:0] buffer1_1_96_4x4_p_V_43_address1;
output   buffer1_1_96_4x4_p_V_43_ce1;
output   buffer1_1_96_4x4_p_V_43_we1;
output  [7:0] buffer1_1_96_4x4_p_V_43_d1;
output  [5:0] buffer1_1_96_4x4_p_V_91_address0;
output   buffer1_1_96_4x4_p_V_91_ce0;
output   buffer1_1_96_4x4_p_V_91_we0;
output  [7:0] buffer1_1_96_4x4_p_V_91_d0;
input  [7:0] buffer1_1_96_4x4_p_V_91_q0;
output  [5:0] buffer1_1_96_4x4_p_V_91_address1;
output   buffer1_1_96_4x4_p_V_91_ce1;
output   buffer1_1_96_4x4_p_V_91_we1;
output  [7:0] buffer1_1_96_4x4_p_V_91_d1;
output  [5:0] buffer1_1_96_4x4_p_V_44_address0;
output   buffer1_1_96_4x4_p_V_44_ce0;
output   buffer1_1_96_4x4_p_V_44_we0;
output  [7:0] buffer1_1_96_4x4_p_V_44_d0;
input  [7:0] buffer1_1_96_4x4_p_V_44_q0;
output  [5:0] buffer1_1_96_4x4_p_V_44_address1;
output   buffer1_1_96_4x4_p_V_44_ce1;
output   buffer1_1_96_4x4_p_V_44_we1;
output  [7:0] buffer1_1_96_4x4_p_V_44_d1;
output  [5:0] buffer1_1_96_4x4_p_V_92_address0;
output   buffer1_1_96_4x4_p_V_92_ce0;
output   buffer1_1_96_4x4_p_V_92_we0;
output  [7:0] buffer1_1_96_4x4_p_V_92_d0;
input  [7:0] buffer1_1_96_4x4_p_V_92_q0;
output  [5:0] buffer1_1_96_4x4_p_V_92_address1;
output   buffer1_1_96_4x4_p_V_92_ce1;
output   buffer1_1_96_4x4_p_V_92_we1;
output  [7:0] buffer1_1_96_4x4_p_V_92_d1;
output  [5:0] buffer1_1_96_4x4_p_V_45_address0;
output   buffer1_1_96_4x4_p_V_45_ce0;
output   buffer1_1_96_4x4_p_V_45_we0;
output  [7:0] buffer1_1_96_4x4_p_V_45_d0;
input  [7:0] buffer1_1_96_4x4_p_V_45_q0;
output  [5:0] buffer1_1_96_4x4_p_V_45_address1;
output   buffer1_1_96_4x4_p_V_45_ce1;
output   buffer1_1_96_4x4_p_V_45_we1;
output  [7:0] buffer1_1_96_4x4_p_V_45_d1;
output  [5:0] buffer1_1_96_4x4_p_V_93_address0;
output   buffer1_1_96_4x4_p_V_93_ce0;
output   buffer1_1_96_4x4_p_V_93_we0;
output  [7:0] buffer1_1_96_4x4_p_V_93_d0;
input  [7:0] buffer1_1_96_4x4_p_V_93_q0;
output  [5:0] buffer1_1_96_4x4_p_V_93_address1;
output   buffer1_1_96_4x4_p_V_93_ce1;
output   buffer1_1_96_4x4_p_V_93_we1;
output  [7:0] buffer1_1_96_4x4_p_V_93_d1;
output  [5:0] buffer1_1_96_4x4_p_V_46_address0;
output   buffer1_1_96_4x4_p_V_46_ce0;
output   buffer1_1_96_4x4_p_V_46_we0;
output  [7:0] buffer1_1_96_4x4_p_V_46_d0;
input  [7:0] buffer1_1_96_4x4_p_V_46_q0;
output  [5:0] buffer1_1_96_4x4_p_V_46_address1;
output   buffer1_1_96_4x4_p_V_46_ce1;
output   buffer1_1_96_4x4_p_V_46_we1;
output  [7:0] buffer1_1_96_4x4_p_V_46_d1;
output  [5:0] buffer1_1_96_4x4_p_V_94_address0;
output   buffer1_1_96_4x4_p_V_94_ce0;
output   buffer1_1_96_4x4_p_V_94_we0;
output  [7:0] buffer1_1_96_4x4_p_V_94_d0;
input  [7:0] buffer1_1_96_4x4_p_V_94_q0;
output  [5:0] buffer1_1_96_4x4_p_V_94_address1;
output   buffer1_1_96_4x4_p_V_94_ce1;
output   buffer1_1_96_4x4_p_V_94_we1;
output  [7:0] buffer1_1_96_4x4_p_V_94_d1;
output  [5:0] buffer1_1_96_4x4_p_V_47_address0;
output   buffer1_1_96_4x4_p_V_47_ce0;
output   buffer1_1_96_4x4_p_V_47_we0;
output  [7:0] buffer1_1_96_4x4_p_V_47_d0;
input  [7:0] buffer1_1_96_4x4_p_V_47_q0;
output  [5:0] buffer1_1_96_4x4_p_V_47_address1;
output   buffer1_1_96_4x4_p_V_47_ce1;
output   buffer1_1_96_4x4_p_V_47_we1;
output  [7:0] buffer1_1_96_4x4_p_V_47_d1;
output  [5:0] buffer1_1_96_4x4_p_V_95_address0;
output   buffer1_1_96_4x4_p_V_95_ce0;
output   buffer1_1_96_4x4_p_V_95_we0;
output  [7:0] buffer1_1_96_4x4_p_V_95_d0;
input  [7:0] buffer1_1_96_4x4_p_V_95_q0;
output  [5:0] buffer1_1_96_4x4_p_V_95_address1;
output   buffer1_1_96_4x4_p_V_95_ce1;
output   buffer1_1_96_4x4_p_V_95_we1;
output  [7:0] buffer1_1_96_4x4_p_V_95_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] input_V_address0;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg weight_24_V_ce0;
reg weight_25_V_ce0;
reg weight_26_V_ce0;
reg weight_27_V_ce0;
reg weight_28_V_ce0;
reg weight_29_V_ce0;
reg weight_30_V_ce0;
reg weight_31_V_ce0;
reg weight_32_V_ce0;
reg weight_33_V_ce0;
reg weight_34_V_ce0;
reg weight_35_V_ce0;
reg weight_36_V_ce0;
reg weight_37_V_ce0;
reg weight_38_V_ce0;
reg weight_39_V_ce0;
reg weight_40_V_ce0;
reg weight_41_V_ce0;
reg weight_42_V_ce0;
reg weight_43_V_ce0;
reg weight_44_V_ce0;
reg weight_45_V_ce0;
reg weight_46_V_ce0;
reg weight_47_V_ce0;
reg weight_48_V_ce0;
reg weight_49_V_ce0;
reg weight_50_V_ce0;
reg weight_51_V_ce0;
reg weight_52_V_ce0;
reg weight_53_V_ce0;
reg weight_54_V_ce0;
reg weight_55_V_ce0;
reg weight_56_V_ce0;
reg weight_57_V_ce0;
reg weight_58_V_ce0;
reg weight_59_V_ce0;
reg weight_60_V_ce0;
reg weight_61_V_ce0;
reg weight_62_V_ce0;
reg weight_63_V_ce0;
reg weight_64_V_ce0;
reg weight_65_V_ce0;
reg weight_66_V_ce0;
reg weight_67_V_ce0;
reg weight_68_V_ce0;
reg weight_69_V_ce0;
reg weight_70_V_ce0;
reg weight_71_V_ce0;
reg weight_72_V_ce0;
reg weight_73_V_ce0;
reg weight_74_V_ce0;
reg weight_75_V_ce0;
reg weight_76_V_ce0;
reg weight_77_V_ce0;
reg weight_78_V_ce0;
reg weight_79_V_ce0;
reg weight_80_V_ce0;
reg weight_81_V_ce0;
reg weight_82_V_ce0;
reg weight_83_V_ce0;
reg weight_84_V_ce0;
reg weight_85_V_ce0;
reg weight_86_V_ce0;
reg weight_87_V_ce0;
reg weight_88_V_ce0;
reg weight_89_V_ce0;
reg weight_90_V_ce0;
reg weight_91_V_ce0;
reg weight_92_V_ce0;
reg weight_93_V_ce0;
reg weight_94_V_ce0;
reg weight_95_V_ce0;
reg bias_V_ce0;
reg[5:0] buffer1_1_96_4x4_p_V_96_address0;
reg buffer1_1_96_4x4_p_V_96_ce0;
reg buffer1_1_96_4x4_p_V_96_we0;
reg[7:0] buffer1_1_96_4x4_p_V_96_d0;
reg buffer1_1_96_4x4_p_V_96_ce1;
reg buffer1_1_96_4x4_p_V_96_we1;
reg[5:0] buffer1_1_96_4x4_p_V_48_address0;
reg buffer1_1_96_4x4_p_V_48_ce0;
reg buffer1_1_96_4x4_p_V_48_we0;
reg[7:0] buffer1_1_96_4x4_p_V_48_d0;
reg buffer1_1_96_4x4_p_V_48_ce1;
reg buffer1_1_96_4x4_p_V_48_we1;
reg[5:0] buffer1_1_96_4x4_p_V_1_address0;
reg buffer1_1_96_4x4_p_V_1_ce0;
reg buffer1_1_96_4x4_p_V_1_we0;
reg[7:0] buffer1_1_96_4x4_p_V_1_d0;
reg buffer1_1_96_4x4_p_V_1_ce1;
reg buffer1_1_96_4x4_p_V_1_we1;
reg[5:0] buffer1_1_96_4x4_p_V_49_address0;
reg buffer1_1_96_4x4_p_V_49_ce0;
reg buffer1_1_96_4x4_p_V_49_we0;
reg[7:0] buffer1_1_96_4x4_p_V_49_d0;
reg buffer1_1_96_4x4_p_V_49_ce1;
reg buffer1_1_96_4x4_p_V_49_we1;
reg[5:0] buffer1_1_96_4x4_p_V_2_address0;
reg buffer1_1_96_4x4_p_V_2_ce0;
reg buffer1_1_96_4x4_p_V_2_we0;
reg[7:0] buffer1_1_96_4x4_p_V_2_d0;
reg buffer1_1_96_4x4_p_V_2_ce1;
reg buffer1_1_96_4x4_p_V_2_we1;
reg[5:0] buffer1_1_96_4x4_p_V_50_address0;
reg buffer1_1_96_4x4_p_V_50_ce0;
reg buffer1_1_96_4x4_p_V_50_we0;
reg[7:0] buffer1_1_96_4x4_p_V_50_d0;
reg buffer1_1_96_4x4_p_V_50_ce1;
reg buffer1_1_96_4x4_p_V_50_we1;
reg[5:0] buffer1_1_96_4x4_p_V_3_address0;
reg buffer1_1_96_4x4_p_V_3_ce0;
reg buffer1_1_96_4x4_p_V_3_we0;
reg[7:0] buffer1_1_96_4x4_p_V_3_d0;
reg buffer1_1_96_4x4_p_V_3_ce1;
reg buffer1_1_96_4x4_p_V_3_we1;
reg[5:0] buffer1_1_96_4x4_p_V_51_address0;
reg buffer1_1_96_4x4_p_V_51_ce0;
reg buffer1_1_96_4x4_p_V_51_we0;
reg[7:0] buffer1_1_96_4x4_p_V_51_d0;
reg buffer1_1_96_4x4_p_V_51_ce1;
reg buffer1_1_96_4x4_p_V_51_we1;
reg[5:0] buffer1_1_96_4x4_p_V_4_address0;
reg buffer1_1_96_4x4_p_V_4_ce0;
reg buffer1_1_96_4x4_p_V_4_we0;
reg[7:0] buffer1_1_96_4x4_p_V_4_d0;
reg buffer1_1_96_4x4_p_V_4_ce1;
reg buffer1_1_96_4x4_p_V_4_we1;
reg[5:0] buffer1_1_96_4x4_p_V_52_address0;
reg buffer1_1_96_4x4_p_V_52_ce0;
reg buffer1_1_96_4x4_p_V_52_we0;
reg[7:0] buffer1_1_96_4x4_p_V_52_d0;
reg buffer1_1_96_4x4_p_V_52_ce1;
reg buffer1_1_96_4x4_p_V_52_we1;
reg[5:0] buffer1_1_96_4x4_p_V_5_address0;
reg buffer1_1_96_4x4_p_V_5_ce0;
reg buffer1_1_96_4x4_p_V_5_we0;
reg[7:0] buffer1_1_96_4x4_p_V_5_d0;
reg buffer1_1_96_4x4_p_V_5_ce1;
reg buffer1_1_96_4x4_p_V_5_we1;
reg[5:0] buffer1_1_96_4x4_p_V_53_address0;
reg buffer1_1_96_4x4_p_V_53_ce0;
reg buffer1_1_96_4x4_p_V_53_we0;
reg[7:0] buffer1_1_96_4x4_p_V_53_d0;
reg buffer1_1_96_4x4_p_V_53_ce1;
reg buffer1_1_96_4x4_p_V_53_we1;
reg[5:0] buffer1_1_96_4x4_p_V_6_address0;
reg buffer1_1_96_4x4_p_V_6_ce0;
reg buffer1_1_96_4x4_p_V_6_we0;
reg[7:0] buffer1_1_96_4x4_p_V_6_d0;
reg buffer1_1_96_4x4_p_V_6_ce1;
reg buffer1_1_96_4x4_p_V_6_we1;
reg[5:0] buffer1_1_96_4x4_p_V_54_address0;
reg buffer1_1_96_4x4_p_V_54_ce0;
reg buffer1_1_96_4x4_p_V_54_we0;
reg[7:0] buffer1_1_96_4x4_p_V_54_d0;
reg buffer1_1_96_4x4_p_V_54_ce1;
reg buffer1_1_96_4x4_p_V_54_we1;
reg[5:0] buffer1_1_96_4x4_p_V_7_address0;
reg buffer1_1_96_4x4_p_V_7_ce0;
reg buffer1_1_96_4x4_p_V_7_we0;
reg[7:0] buffer1_1_96_4x4_p_V_7_d0;
reg buffer1_1_96_4x4_p_V_7_ce1;
reg buffer1_1_96_4x4_p_V_7_we1;
reg[5:0] buffer1_1_96_4x4_p_V_55_address0;
reg buffer1_1_96_4x4_p_V_55_ce0;
reg buffer1_1_96_4x4_p_V_55_we0;
reg[7:0] buffer1_1_96_4x4_p_V_55_d0;
reg buffer1_1_96_4x4_p_V_55_ce1;
reg buffer1_1_96_4x4_p_V_55_we1;
reg[5:0] buffer1_1_96_4x4_p_V_8_address0;
reg buffer1_1_96_4x4_p_V_8_ce0;
reg buffer1_1_96_4x4_p_V_8_we0;
reg[7:0] buffer1_1_96_4x4_p_V_8_d0;
reg buffer1_1_96_4x4_p_V_8_ce1;
reg buffer1_1_96_4x4_p_V_8_we1;
reg[5:0] buffer1_1_96_4x4_p_V_56_address0;
reg buffer1_1_96_4x4_p_V_56_ce0;
reg buffer1_1_96_4x4_p_V_56_we0;
reg[7:0] buffer1_1_96_4x4_p_V_56_d0;
reg buffer1_1_96_4x4_p_V_56_ce1;
reg buffer1_1_96_4x4_p_V_56_we1;
reg[5:0] buffer1_1_96_4x4_p_V_9_address0;
reg buffer1_1_96_4x4_p_V_9_ce0;
reg buffer1_1_96_4x4_p_V_9_we0;
reg[7:0] buffer1_1_96_4x4_p_V_9_d0;
reg buffer1_1_96_4x4_p_V_9_ce1;
reg buffer1_1_96_4x4_p_V_9_we1;
reg[5:0] buffer1_1_96_4x4_p_V_57_address0;
reg buffer1_1_96_4x4_p_V_57_ce0;
reg buffer1_1_96_4x4_p_V_57_we0;
reg[7:0] buffer1_1_96_4x4_p_V_57_d0;
reg buffer1_1_96_4x4_p_V_57_ce1;
reg buffer1_1_96_4x4_p_V_57_we1;
reg[5:0] buffer1_1_96_4x4_p_V_10_address0;
reg buffer1_1_96_4x4_p_V_10_ce0;
reg buffer1_1_96_4x4_p_V_10_we0;
reg[7:0] buffer1_1_96_4x4_p_V_10_d0;
reg buffer1_1_96_4x4_p_V_10_ce1;
reg buffer1_1_96_4x4_p_V_10_we1;
reg[5:0] buffer1_1_96_4x4_p_V_58_address0;
reg buffer1_1_96_4x4_p_V_58_ce0;
reg buffer1_1_96_4x4_p_V_58_we0;
reg[7:0] buffer1_1_96_4x4_p_V_58_d0;
reg buffer1_1_96_4x4_p_V_58_ce1;
reg buffer1_1_96_4x4_p_V_58_we1;
reg[5:0] buffer1_1_96_4x4_p_V_11_address0;
reg buffer1_1_96_4x4_p_V_11_ce0;
reg buffer1_1_96_4x4_p_V_11_we0;
reg[7:0] buffer1_1_96_4x4_p_V_11_d0;
reg buffer1_1_96_4x4_p_V_11_ce1;
reg buffer1_1_96_4x4_p_V_11_we1;
reg[5:0] buffer1_1_96_4x4_p_V_59_address0;
reg buffer1_1_96_4x4_p_V_59_ce0;
reg buffer1_1_96_4x4_p_V_59_we0;
reg[7:0] buffer1_1_96_4x4_p_V_59_d0;
reg buffer1_1_96_4x4_p_V_59_ce1;
reg buffer1_1_96_4x4_p_V_59_we1;
reg[5:0] buffer1_1_96_4x4_p_V_12_address0;
reg buffer1_1_96_4x4_p_V_12_ce0;
reg buffer1_1_96_4x4_p_V_12_we0;
reg[7:0] buffer1_1_96_4x4_p_V_12_d0;
reg buffer1_1_96_4x4_p_V_12_ce1;
reg buffer1_1_96_4x4_p_V_12_we1;
reg[5:0] buffer1_1_96_4x4_p_V_60_address0;
reg buffer1_1_96_4x4_p_V_60_ce0;
reg buffer1_1_96_4x4_p_V_60_we0;
reg[7:0] buffer1_1_96_4x4_p_V_60_d0;
reg buffer1_1_96_4x4_p_V_60_ce1;
reg buffer1_1_96_4x4_p_V_60_we1;
reg[5:0] buffer1_1_96_4x4_p_V_13_address0;
reg buffer1_1_96_4x4_p_V_13_ce0;
reg buffer1_1_96_4x4_p_V_13_we0;
reg[7:0] buffer1_1_96_4x4_p_V_13_d0;
reg buffer1_1_96_4x4_p_V_13_ce1;
reg buffer1_1_96_4x4_p_V_13_we1;
reg[5:0] buffer1_1_96_4x4_p_V_61_address0;
reg buffer1_1_96_4x4_p_V_61_ce0;
reg buffer1_1_96_4x4_p_V_61_we0;
reg[7:0] buffer1_1_96_4x4_p_V_61_d0;
reg buffer1_1_96_4x4_p_V_61_ce1;
reg buffer1_1_96_4x4_p_V_61_we1;
reg[5:0] buffer1_1_96_4x4_p_V_14_address0;
reg buffer1_1_96_4x4_p_V_14_ce0;
reg buffer1_1_96_4x4_p_V_14_we0;
reg[7:0] buffer1_1_96_4x4_p_V_14_d0;
reg buffer1_1_96_4x4_p_V_14_ce1;
reg buffer1_1_96_4x4_p_V_14_we1;
reg[5:0] buffer1_1_96_4x4_p_V_62_address0;
reg buffer1_1_96_4x4_p_V_62_ce0;
reg buffer1_1_96_4x4_p_V_62_we0;
reg[7:0] buffer1_1_96_4x4_p_V_62_d0;
reg buffer1_1_96_4x4_p_V_62_ce1;
reg buffer1_1_96_4x4_p_V_62_we1;
reg[5:0] buffer1_1_96_4x4_p_V_15_address0;
reg buffer1_1_96_4x4_p_V_15_ce0;
reg buffer1_1_96_4x4_p_V_15_we0;
reg[7:0] buffer1_1_96_4x4_p_V_15_d0;
reg buffer1_1_96_4x4_p_V_15_ce1;
reg buffer1_1_96_4x4_p_V_15_we1;
reg[5:0] buffer1_1_96_4x4_p_V_63_address0;
reg buffer1_1_96_4x4_p_V_63_ce0;
reg buffer1_1_96_4x4_p_V_63_we0;
reg[7:0] buffer1_1_96_4x4_p_V_63_d0;
reg buffer1_1_96_4x4_p_V_63_ce1;
reg buffer1_1_96_4x4_p_V_63_we1;
reg[5:0] buffer1_1_96_4x4_p_V_16_address0;
reg buffer1_1_96_4x4_p_V_16_ce0;
reg buffer1_1_96_4x4_p_V_16_we0;
reg[7:0] buffer1_1_96_4x4_p_V_16_d0;
reg buffer1_1_96_4x4_p_V_16_ce1;
reg buffer1_1_96_4x4_p_V_16_we1;
reg[5:0] buffer1_1_96_4x4_p_V_64_address0;
reg buffer1_1_96_4x4_p_V_64_ce0;
reg buffer1_1_96_4x4_p_V_64_we0;
reg[7:0] buffer1_1_96_4x4_p_V_64_d0;
reg buffer1_1_96_4x4_p_V_64_ce1;
reg buffer1_1_96_4x4_p_V_64_we1;
reg[5:0] buffer1_1_96_4x4_p_V_17_address0;
reg buffer1_1_96_4x4_p_V_17_ce0;
reg buffer1_1_96_4x4_p_V_17_we0;
reg[7:0] buffer1_1_96_4x4_p_V_17_d0;
reg buffer1_1_96_4x4_p_V_17_ce1;
reg buffer1_1_96_4x4_p_V_17_we1;
reg[5:0] buffer1_1_96_4x4_p_V_65_address0;
reg buffer1_1_96_4x4_p_V_65_ce0;
reg buffer1_1_96_4x4_p_V_65_we0;
reg[7:0] buffer1_1_96_4x4_p_V_65_d0;
reg buffer1_1_96_4x4_p_V_65_ce1;
reg buffer1_1_96_4x4_p_V_65_we1;
reg[5:0] buffer1_1_96_4x4_p_V_18_address0;
reg buffer1_1_96_4x4_p_V_18_ce0;
reg buffer1_1_96_4x4_p_V_18_we0;
reg[7:0] buffer1_1_96_4x4_p_V_18_d0;
reg buffer1_1_96_4x4_p_V_18_ce1;
reg buffer1_1_96_4x4_p_V_18_we1;
reg[5:0] buffer1_1_96_4x4_p_V_66_address0;
reg buffer1_1_96_4x4_p_V_66_ce0;
reg buffer1_1_96_4x4_p_V_66_we0;
reg[7:0] buffer1_1_96_4x4_p_V_66_d0;
reg buffer1_1_96_4x4_p_V_66_ce1;
reg buffer1_1_96_4x4_p_V_66_we1;
reg[5:0] buffer1_1_96_4x4_p_V_19_address0;
reg buffer1_1_96_4x4_p_V_19_ce0;
reg buffer1_1_96_4x4_p_V_19_we0;
reg[7:0] buffer1_1_96_4x4_p_V_19_d0;
reg buffer1_1_96_4x4_p_V_19_ce1;
reg buffer1_1_96_4x4_p_V_19_we1;
reg[5:0] buffer1_1_96_4x4_p_V_67_address0;
reg buffer1_1_96_4x4_p_V_67_ce0;
reg buffer1_1_96_4x4_p_V_67_we0;
reg[7:0] buffer1_1_96_4x4_p_V_67_d0;
reg buffer1_1_96_4x4_p_V_67_ce1;
reg buffer1_1_96_4x4_p_V_67_we1;
reg[5:0] buffer1_1_96_4x4_p_V_20_address0;
reg buffer1_1_96_4x4_p_V_20_ce0;
reg buffer1_1_96_4x4_p_V_20_we0;
reg[7:0] buffer1_1_96_4x4_p_V_20_d0;
reg buffer1_1_96_4x4_p_V_20_ce1;
reg buffer1_1_96_4x4_p_V_20_we1;
reg[5:0] buffer1_1_96_4x4_p_V_68_address0;
reg buffer1_1_96_4x4_p_V_68_ce0;
reg buffer1_1_96_4x4_p_V_68_we0;
reg[7:0] buffer1_1_96_4x4_p_V_68_d0;
reg buffer1_1_96_4x4_p_V_68_ce1;
reg buffer1_1_96_4x4_p_V_68_we1;
reg[5:0] buffer1_1_96_4x4_p_V_21_address0;
reg buffer1_1_96_4x4_p_V_21_ce0;
reg buffer1_1_96_4x4_p_V_21_we0;
reg[7:0] buffer1_1_96_4x4_p_V_21_d0;
reg buffer1_1_96_4x4_p_V_21_ce1;
reg buffer1_1_96_4x4_p_V_21_we1;
reg[5:0] buffer1_1_96_4x4_p_V_69_address0;
reg buffer1_1_96_4x4_p_V_69_ce0;
reg buffer1_1_96_4x4_p_V_69_we0;
reg[7:0] buffer1_1_96_4x4_p_V_69_d0;
reg buffer1_1_96_4x4_p_V_69_ce1;
reg buffer1_1_96_4x4_p_V_69_we1;
reg[5:0] buffer1_1_96_4x4_p_V_22_address0;
reg buffer1_1_96_4x4_p_V_22_ce0;
reg buffer1_1_96_4x4_p_V_22_we0;
reg[7:0] buffer1_1_96_4x4_p_V_22_d0;
reg buffer1_1_96_4x4_p_V_22_ce1;
reg buffer1_1_96_4x4_p_V_22_we1;
reg[5:0] buffer1_1_96_4x4_p_V_70_address0;
reg buffer1_1_96_4x4_p_V_70_ce0;
reg buffer1_1_96_4x4_p_V_70_we0;
reg[7:0] buffer1_1_96_4x4_p_V_70_d0;
reg buffer1_1_96_4x4_p_V_70_ce1;
reg buffer1_1_96_4x4_p_V_70_we1;
reg[5:0] buffer1_1_96_4x4_p_V_23_address0;
reg buffer1_1_96_4x4_p_V_23_ce0;
reg buffer1_1_96_4x4_p_V_23_we0;
reg[7:0] buffer1_1_96_4x4_p_V_23_d0;
reg buffer1_1_96_4x4_p_V_23_ce1;
reg buffer1_1_96_4x4_p_V_23_we1;
reg[5:0] buffer1_1_96_4x4_p_V_71_address0;
reg buffer1_1_96_4x4_p_V_71_ce0;
reg buffer1_1_96_4x4_p_V_71_we0;
reg[7:0] buffer1_1_96_4x4_p_V_71_d0;
reg buffer1_1_96_4x4_p_V_71_ce1;
reg buffer1_1_96_4x4_p_V_71_we1;
reg[5:0] buffer1_1_96_4x4_p_V_24_address0;
reg buffer1_1_96_4x4_p_V_24_ce0;
reg buffer1_1_96_4x4_p_V_24_we0;
reg[7:0] buffer1_1_96_4x4_p_V_24_d0;
reg buffer1_1_96_4x4_p_V_24_ce1;
reg buffer1_1_96_4x4_p_V_24_we1;
reg[5:0] buffer1_1_96_4x4_p_V_72_address0;
reg buffer1_1_96_4x4_p_V_72_ce0;
reg buffer1_1_96_4x4_p_V_72_we0;
reg[7:0] buffer1_1_96_4x4_p_V_72_d0;
reg buffer1_1_96_4x4_p_V_72_ce1;
reg buffer1_1_96_4x4_p_V_72_we1;
reg[5:0] buffer1_1_96_4x4_p_V_25_address0;
reg buffer1_1_96_4x4_p_V_25_ce0;
reg buffer1_1_96_4x4_p_V_25_we0;
reg[7:0] buffer1_1_96_4x4_p_V_25_d0;
reg buffer1_1_96_4x4_p_V_25_ce1;
reg buffer1_1_96_4x4_p_V_25_we1;
reg[5:0] buffer1_1_96_4x4_p_V_73_address0;
reg buffer1_1_96_4x4_p_V_73_ce0;
reg buffer1_1_96_4x4_p_V_73_we0;
reg[7:0] buffer1_1_96_4x4_p_V_73_d0;
reg buffer1_1_96_4x4_p_V_73_ce1;
reg buffer1_1_96_4x4_p_V_73_we1;
reg[5:0] buffer1_1_96_4x4_p_V_26_address0;
reg buffer1_1_96_4x4_p_V_26_ce0;
reg buffer1_1_96_4x4_p_V_26_we0;
reg[7:0] buffer1_1_96_4x4_p_V_26_d0;
reg buffer1_1_96_4x4_p_V_26_ce1;
reg buffer1_1_96_4x4_p_V_26_we1;
reg[5:0] buffer1_1_96_4x4_p_V_74_address0;
reg buffer1_1_96_4x4_p_V_74_ce0;
reg buffer1_1_96_4x4_p_V_74_we0;
reg[7:0] buffer1_1_96_4x4_p_V_74_d0;
reg buffer1_1_96_4x4_p_V_74_ce1;
reg buffer1_1_96_4x4_p_V_74_we1;
reg[5:0] buffer1_1_96_4x4_p_V_27_address0;
reg buffer1_1_96_4x4_p_V_27_ce0;
reg buffer1_1_96_4x4_p_V_27_we0;
reg[7:0] buffer1_1_96_4x4_p_V_27_d0;
reg buffer1_1_96_4x4_p_V_27_ce1;
reg buffer1_1_96_4x4_p_V_27_we1;
reg[5:0] buffer1_1_96_4x4_p_V_75_address0;
reg buffer1_1_96_4x4_p_V_75_ce0;
reg buffer1_1_96_4x4_p_V_75_we0;
reg[7:0] buffer1_1_96_4x4_p_V_75_d0;
reg buffer1_1_96_4x4_p_V_75_ce1;
reg buffer1_1_96_4x4_p_V_75_we1;
reg[5:0] buffer1_1_96_4x4_p_V_28_address0;
reg buffer1_1_96_4x4_p_V_28_ce0;
reg buffer1_1_96_4x4_p_V_28_we0;
reg[7:0] buffer1_1_96_4x4_p_V_28_d0;
reg buffer1_1_96_4x4_p_V_28_ce1;
reg buffer1_1_96_4x4_p_V_28_we1;
reg[5:0] buffer1_1_96_4x4_p_V_76_address0;
reg buffer1_1_96_4x4_p_V_76_ce0;
reg buffer1_1_96_4x4_p_V_76_we0;
reg[7:0] buffer1_1_96_4x4_p_V_76_d0;
reg buffer1_1_96_4x4_p_V_76_ce1;
reg buffer1_1_96_4x4_p_V_76_we1;
reg[5:0] buffer1_1_96_4x4_p_V_29_address0;
reg buffer1_1_96_4x4_p_V_29_ce0;
reg buffer1_1_96_4x4_p_V_29_we0;
reg[7:0] buffer1_1_96_4x4_p_V_29_d0;
reg buffer1_1_96_4x4_p_V_29_ce1;
reg buffer1_1_96_4x4_p_V_29_we1;
reg[5:0] buffer1_1_96_4x4_p_V_77_address0;
reg buffer1_1_96_4x4_p_V_77_ce0;
reg buffer1_1_96_4x4_p_V_77_we0;
reg[7:0] buffer1_1_96_4x4_p_V_77_d0;
reg buffer1_1_96_4x4_p_V_77_ce1;
reg buffer1_1_96_4x4_p_V_77_we1;
reg[5:0] buffer1_1_96_4x4_p_V_30_address0;
reg buffer1_1_96_4x4_p_V_30_ce0;
reg buffer1_1_96_4x4_p_V_30_we0;
reg[7:0] buffer1_1_96_4x4_p_V_30_d0;
reg buffer1_1_96_4x4_p_V_30_ce1;
reg buffer1_1_96_4x4_p_V_30_we1;
reg[5:0] buffer1_1_96_4x4_p_V_78_address0;
reg buffer1_1_96_4x4_p_V_78_ce0;
reg buffer1_1_96_4x4_p_V_78_we0;
reg[7:0] buffer1_1_96_4x4_p_V_78_d0;
reg buffer1_1_96_4x4_p_V_78_ce1;
reg buffer1_1_96_4x4_p_V_78_we1;
reg[5:0] buffer1_1_96_4x4_p_V_31_address0;
reg buffer1_1_96_4x4_p_V_31_ce0;
reg buffer1_1_96_4x4_p_V_31_we0;
reg[7:0] buffer1_1_96_4x4_p_V_31_d0;
reg buffer1_1_96_4x4_p_V_31_ce1;
reg buffer1_1_96_4x4_p_V_31_we1;
reg[5:0] buffer1_1_96_4x4_p_V_79_address0;
reg buffer1_1_96_4x4_p_V_79_ce0;
reg buffer1_1_96_4x4_p_V_79_we0;
reg[7:0] buffer1_1_96_4x4_p_V_79_d0;
reg buffer1_1_96_4x4_p_V_79_ce1;
reg buffer1_1_96_4x4_p_V_79_we1;
reg[5:0] buffer1_1_96_4x4_p_V_32_address0;
reg buffer1_1_96_4x4_p_V_32_ce0;
reg buffer1_1_96_4x4_p_V_32_we0;
reg[7:0] buffer1_1_96_4x4_p_V_32_d0;
reg buffer1_1_96_4x4_p_V_32_ce1;
reg buffer1_1_96_4x4_p_V_32_we1;
reg[5:0] buffer1_1_96_4x4_p_V_80_address0;
reg buffer1_1_96_4x4_p_V_80_ce0;
reg buffer1_1_96_4x4_p_V_80_we0;
reg[7:0] buffer1_1_96_4x4_p_V_80_d0;
reg buffer1_1_96_4x4_p_V_80_ce1;
reg buffer1_1_96_4x4_p_V_80_we1;
reg[5:0] buffer1_1_96_4x4_p_V_33_address0;
reg buffer1_1_96_4x4_p_V_33_ce0;
reg buffer1_1_96_4x4_p_V_33_we0;
reg[7:0] buffer1_1_96_4x4_p_V_33_d0;
reg buffer1_1_96_4x4_p_V_33_ce1;
reg buffer1_1_96_4x4_p_V_33_we1;
reg[5:0] buffer1_1_96_4x4_p_V_81_address0;
reg buffer1_1_96_4x4_p_V_81_ce0;
reg buffer1_1_96_4x4_p_V_81_we0;
reg[7:0] buffer1_1_96_4x4_p_V_81_d0;
reg buffer1_1_96_4x4_p_V_81_ce1;
reg buffer1_1_96_4x4_p_V_81_we1;
reg[5:0] buffer1_1_96_4x4_p_V_34_address0;
reg buffer1_1_96_4x4_p_V_34_ce0;
reg buffer1_1_96_4x4_p_V_34_we0;
reg[7:0] buffer1_1_96_4x4_p_V_34_d0;
reg buffer1_1_96_4x4_p_V_34_ce1;
reg buffer1_1_96_4x4_p_V_34_we1;
reg[5:0] buffer1_1_96_4x4_p_V_82_address0;
reg buffer1_1_96_4x4_p_V_82_ce0;
reg buffer1_1_96_4x4_p_V_82_we0;
reg[7:0] buffer1_1_96_4x4_p_V_82_d0;
reg buffer1_1_96_4x4_p_V_82_ce1;
reg buffer1_1_96_4x4_p_V_82_we1;
reg[5:0] buffer1_1_96_4x4_p_V_35_address0;
reg buffer1_1_96_4x4_p_V_35_ce0;
reg buffer1_1_96_4x4_p_V_35_we0;
reg[7:0] buffer1_1_96_4x4_p_V_35_d0;
reg buffer1_1_96_4x4_p_V_35_ce1;
reg buffer1_1_96_4x4_p_V_35_we1;
reg[5:0] buffer1_1_96_4x4_p_V_83_address0;
reg buffer1_1_96_4x4_p_V_83_ce0;
reg buffer1_1_96_4x4_p_V_83_we0;
reg[7:0] buffer1_1_96_4x4_p_V_83_d0;
reg buffer1_1_96_4x4_p_V_83_ce1;
reg buffer1_1_96_4x4_p_V_83_we1;
reg[5:0] buffer1_1_96_4x4_p_V_36_address0;
reg buffer1_1_96_4x4_p_V_36_ce0;
reg buffer1_1_96_4x4_p_V_36_we0;
reg[7:0] buffer1_1_96_4x4_p_V_36_d0;
reg buffer1_1_96_4x4_p_V_36_ce1;
reg buffer1_1_96_4x4_p_V_36_we1;
reg[5:0] buffer1_1_96_4x4_p_V_84_address0;
reg buffer1_1_96_4x4_p_V_84_ce0;
reg buffer1_1_96_4x4_p_V_84_we0;
reg[7:0] buffer1_1_96_4x4_p_V_84_d0;
reg buffer1_1_96_4x4_p_V_84_ce1;
reg buffer1_1_96_4x4_p_V_84_we1;
reg[5:0] buffer1_1_96_4x4_p_V_37_address0;
reg buffer1_1_96_4x4_p_V_37_ce0;
reg buffer1_1_96_4x4_p_V_37_we0;
reg[7:0] buffer1_1_96_4x4_p_V_37_d0;
reg buffer1_1_96_4x4_p_V_37_ce1;
reg buffer1_1_96_4x4_p_V_37_we1;
reg[5:0] buffer1_1_96_4x4_p_V_85_address0;
reg buffer1_1_96_4x4_p_V_85_ce0;
reg buffer1_1_96_4x4_p_V_85_we0;
reg[7:0] buffer1_1_96_4x4_p_V_85_d0;
reg buffer1_1_96_4x4_p_V_85_ce1;
reg buffer1_1_96_4x4_p_V_85_we1;
reg[5:0] buffer1_1_96_4x4_p_V_38_address0;
reg buffer1_1_96_4x4_p_V_38_ce0;
reg buffer1_1_96_4x4_p_V_38_we0;
reg[7:0] buffer1_1_96_4x4_p_V_38_d0;
reg buffer1_1_96_4x4_p_V_38_ce1;
reg buffer1_1_96_4x4_p_V_38_we1;
reg[5:0] buffer1_1_96_4x4_p_V_86_address0;
reg buffer1_1_96_4x4_p_V_86_ce0;
reg buffer1_1_96_4x4_p_V_86_we0;
reg[7:0] buffer1_1_96_4x4_p_V_86_d0;
reg buffer1_1_96_4x4_p_V_86_ce1;
reg buffer1_1_96_4x4_p_V_86_we1;
reg[5:0] buffer1_1_96_4x4_p_V_39_address0;
reg buffer1_1_96_4x4_p_V_39_ce0;
reg buffer1_1_96_4x4_p_V_39_we0;
reg[7:0] buffer1_1_96_4x4_p_V_39_d0;
reg buffer1_1_96_4x4_p_V_39_ce1;
reg buffer1_1_96_4x4_p_V_39_we1;
reg[5:0] buffer1_1_96_4x4_p_V_87_address0;
reg buffer1_1_96_4x4_p_V_87_ce0;
reg buffer1_1_96_4x4_p_V_87_we0;
reg[7:0] buffer1_1_96_4x4_p_V_87_d0;
reg buffer1_1_96_4x4_p_V_87_ce1;
reg buffer1_1_96_4x4_p_V_87_we1;
reg[5:0] buffer1_1_96_4x4_p_V_40_address0;
reg buffer1_1_96_4x4_p_V_40_ce0;
reg buffer1_1_96_4x4_p_V_40_we0;
reg[7:0] buffer1_1_96_4x4_p_V_40_d0;
reg buffer1_1_96_4x4_p_V_40_ce1;
reg buffer1_1_96_4x4_p_V_40_we1;
reg[5:0] buffer1_1_96_4x4_p_V_88_address0;
reg buffer1_1_96_4x4_p_V_88_ce0;
reg buffer1_1_96_4x4_p_V_88_we0;
reg[7:0] buffer1_1_96_4x4_p_V_88_d0;
reg buffer1_1_96_4x4_p_V_88_ce1;
reg buffer1_1_96_4x4_p_V_88_we1;
reg[5:0] buffer1_1_96_4x4_p_V_41_address0;
reg buffer1_1_96_4x4_p_V_41_ce0;
reg buffer1_1_96_4x4_p_V_41_we0;
reg[7:0] buffer1_1_96_4x4_p_V_41_d0;
reg buffer1_1_96_4x4_p_V_41_ce1;
reg buffer1_1_96_4x4_p_V_41_we1;
reg[5:0] buffer1_1_96_4x4_p_V_89_address0;
reg buffer1_1_96_4x4_p_V_89_ce0;
reg buffer1_1_96_4x4_p_V_89_we0;
reg[7:0] buffer1_1_96_4x4_p_V_89_d0;
reg buffer1_1_96_4x4_p_V_89_ce1;
reg buffer1_1_96_4x4_p_V_89_we1;
reg[5:0] buffer1_1_96_4x4_p_V_42_address0;
reg buffer1_1_96_4x4_p_V_42_ce0;
reg buffer1_1_96_4x4_p_V_42_we0;
reg[7:0] buffer1_1_96_4x4_p_V_42_d0;
reg buffer1_1_96_4x4_p_V_42_ce1;
reg buffer1_1_96_4x4_p_V_42_we1;
reg[5:0] buffer1_1_96_4x4_p_V_90_address0;
reg buffer1_1_96_4x4_p_V_90_ce0;
reg buffer1_1_96_4x4_p_V_90_we0;
reg[7:0] buffer1_1_96_4x4_p_V_90_d0;
reg buffer1_1_96_4x4_p_V_90_ce1;
reg buffer1_1_96_4x4_p_V_90_we1;
reg[5:0] buffer1_1_96_4x4_p_V_43_address0;
reg buffer1_1_96_4x4_p_V_43_ce0;
reg buffer1_1_96_4x4_p_V_43_we0;
reg[7:0] buffer1_1_96_4x4_p_V_43_d0;
reg buffer1_1_96_4x4_p_V_43_ce1;
reg buffer1_1_96_4x4_p_V_43_we1;
reg[5:0] buffer1_1_96_4x4_p_V_91_address0;
reg buffer1_1_96_4x4_p_V_91_ce0;
reg buffer1_1_96_4x4_p_V_91_we0;
reg[7:0] buffer1_1_96_4x4_p_V_91_d0;
reg buffer1_1_96_4x4_p_V_91_ce1;
reg buffer1_1_96_4x4_p_V_91_we1;
reg[5:0] buffer1_1_96_4x4_p_V_44_address0;
reg buffer1_1_96_4x4_p_V_44_ce0;
reg buffer1_1_96_4x4_p_V_44_we0;
reg[7:0] buffer1_1_96_4x4_p_V_44_d0;
reg buffer1_1_96_4x4_p_V_44_ce1;
reg buffer1_1_96_4x4_p_V_44_we1;
reg[5:0] buffer1_1_96_4x4_p_V_92_address0;
reg buffer1_1_96_4x4_p_V_92_ce0;
reg buffer1_1_96_4x4_p_V_92_we0;
reg[7:0] buffer1_1_96_4x4_p_V_92_d0;
reg buffer1_1_96_4x4_p_V_92_ce1;
reg buffer1_1_96_4x4_p_V_92_we1;
reg[5:0] buffer1_1_96_4x4_p_V_45_address0;
reg buffer1_1_96_4x4_p_V_45_ce0;
reg buffer1_1_96_4x4_p_V_45_we0;
reg[7:0] buffer1_1_96_4x4_p_V_45_d0;
reg buffer1_1_96_4x4_p_V_45_ce1;
reg buffer1_1_96_4x4_p_V_45_we1;
reg[5:0] buffer1_1_96_4x4_p_V_93_address0;
reg buffer1_1_96_4x4_p_V_93_ce0;
reg buffer1_1_96_4x4_p_V_93_we0;
reg[7:0] buffer1_1_96_4x4_p_V_93_d0;
reg buffer1_1_96_4x4_p_V_93_ce1;
reg buffer1_1_96_4x4_p_V_93_we1;
reg[5:0] buffer1_1_96_4x4_p_V_46_address0;
reg buffer1_1_96_4x4_p_V_46_ce0;
reg buffer1_1_96_4x4_p_V_46_we0;
reg[7:0] buffer1_1_96_4x4_p_V_46_d0;
reg buffer1_1_96_4x4_p_V_46_ce1;
reg buffer1_1_96_4x4_p_V_46_we1;
reg[5:0] buffer1_1_96_4x4_p_V_94_address0;
reg buffer1_1_96_4x4_p_V_94_ce0;
reg buffer1_1_96_4x4_p_V_94_we0;
reg[7:0] buffer1_1_96_4x4_p_V_94_d0;
reg buffer1_1_96_4x4_p_V_94_ce1;
reg buffer1_1_96_4x4_p_V_94_we1;
reg[5:0] buffer1_1_96_4x4_p_V_47_address0;
reg buffer1_1_96_4x4_p_V_47_ce0;
reg buffer1_1_96_4x4_p_V_47_we0;
reg[7:0] buffer1_1_96_4x4_p_V_47_d0;
reg buffer1_1_96_4x4_p_V_47_ce1;
reg buffer1_1_96_4x4_p_V_47_we1;
reg[5:0] buffer1_1_96_4x4_p_V_95_address0;
reg buffer1_1_96_4x4_p_V_95_ce0;
reg buffer1_1_96_4x4_p_V_95_we0;
reg[7:0] buffer1_1_96_4x4_p_V_95_d0;
reg buffer1_1_96_4x4_p_V_95_ce1;
reg buffer1_1_96_4x4_p_V_95_we1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten7_reg_4808;
reg   [6:0] co_reg_4819;
reg   [5:0] indvar_flatten_reg_4831;
reg   [2:0] h_reg_4842;
reg   [2:0] w_reg_4854;
reg   [10:0] indvar_flatten8_reg_4936;
reg   [6:0] co8_reg_4947;
reg   [5:0] indvar_flatten9_reg_4959;
reg   [2:0] h9_reg_4970;
reg   [2:0] w10_reg_4982;
reg   [7:0] reg_5258;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond_flatten7_fu_5286_p2;
reg   [0:0] exitcond_flatten7_reg_7974;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten7_reg_7974;
wire   [10:0] indvar_flatten_next7_fu_5292_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_5298_p2;
reg   [0:0] exitcond_flatten_reg_7983;
wire   [5:0] indvar_flatten_next_fu_5310_p3;
wire   [6:0] co_cast_mid2_v_fu_5331_p3;
reg   [6:0] co_cast_mid2_v_reg_7996;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] w_mid2_fu_5371_p3;
reg   [2:0] w_mid2_reg_8001;
wire   [2:0] h_cast_mid2_fu_5379_p3;
reg   [2:0] h_cast_mid2_reg_8006;
wire   [2:0] w_18_fu_5387_p2;
reg   [2:0] w_18_reg_8018;
wire   [6:0] h1_cast9_cast1_fu_5530_p1;
reg   [6:0] h1_cast9_cast1_reg_8023;
wire    ap_CS_fsm_state6;
wire   [11:0] h1_cast9_cast_fu_5534_p1;
reg   [11:0] h1_cast9_cast_reg_8028;
wire   [6:0] tmp_222_fu_5562_p2;
reg   [6:0] tmp_222_reg_8033;
wire   [12:0] w2_cast8_cast1_fu_5574_p1;
reg   [12:0] w2_cast8_cast1_reg_8041;
wire    ap_CS_fsm_state7;
wire   [6:0] w2_cast8_cast_fu_5578_p1;
reg   [6:0] w2_cast8_cast_reg_8046;
reg   [5:0] buffer1_1_96_4x4_p_V_287_reg_8051;
reg   [5:0] buffer1_1_96_4x4_p_V_288_reg_8056;
reg   [5:0] buffer1_1_96_4x4_p_V_289_reg_8061;
reg   [5:0] buffer1_1_96_4x4_p_V_290_reg_8066;
reg   [5:0] buffer1_1_96_4x4_p_V_291_reg_8071;
reg   [5:0] buffer1_1_96_4x4_p_V_292_reg_8076;
reg   [5:0] buffer1_1_96_4x4_p_V_293_reg_8081;
reg   [5:0] buffer1_1_96_4x4_p_V_294_reg_8086;
reg   [5:0] buffer1_1_96_4x4_p_V_295_reg_8091;
reg   [5:0] buffer1_1_96_4x4_p_V_296_reg_8096;
reg   [5:0] buffer1_1_96_4x4_p_V_297_reg_8101;
reg   [5:0] buffer1_1_96_4x4_p_V_298_reg_8106;
reg   [5:0] buffer1_1_96_4x4_p_V_299_reg_8111;
reg   [5:0] buffer1_1_96_4x4_p_V_300_reg_8116;
reg   [5:0] buffer1_1_96_4x4_p_V_301_reg_8121;
reg   [5:0] buffer1_1_96_4x4_p_V_302_reg_8126;
reg   [5:0] buffer1_1_96_4x4_p_V_303_reg_8131;
reg   [5:0] buffer1_1_96_4x4_p_V_304_reg_8136;
reg   [5:0] buffer1_1_96_4x4_p_V_305_reg_8141;
reg   [5:0] buffer1_1_96_4x4_p_V_306_reg_8146;
reg   [5:0] buffer1_1_96_4x4_p_V_307_reg_8151;
reg   [5:0] buffer1_1_96_4x4_p_V_308_reg_8156;
reg   [5:0] buffer1_1_96_4x4_p_V_309_reg_8161;
reg   [5:0] buffer1_1_96_4x4_p_V_310_reg_8166;
reg   [5:0] buffer1_1_96_4x4_p_V_311_reg_8171;
reg   [5:0] buffer1_1_96_4x4_p_V_312_reg_8176;
reg   [5:0] buffer1_1_96_4x4_p_V_313_reg_8181;
reg   [5:0] buffer1_1_96_4x4_p_V_314_reg_8186;
reg   [5:0] buffer1_1_96_4x4_p_V_315_reg_8191;
reg   [5:0] buffer1_1_96_4x4_p_V_316_reg_8196;
reg   [5:0] buffer1_1_96_4x4_p_V_317_reg_8201;
reg   [5:0] buffer1_1_96_4x4_p_V_318_reg_8206;
reg   [5:0] buffer1_1_96_4x4_p_V_319_reg_8211;
reg   [5:0] buffer1_1_96_4x4_p_V_320_reg_8216;
reg   [5:0] buffer1_1_96_4x4_p_V_321_reg_8221;
reg   [5:0] buffer1_1_96_4x4_p_V_322_reg_8226;
reg   [5:0] buffer1_1_96_4x4_p_V_323_reg_8231;
reg   [5:0] buffer1_1_96_4x4_p_V_324_reg_8236;
reg   [5:0] buffer1_1_96_4x4_p_V_325_reg_8241;
reg   [5:0] buffer1_1_96_4x4_p_V_326_reg_8246;
reg   [5:0] buffer1_1_96_4x4_p_V_327_reg_8251;
reg   [5:0] buffer1_1_96_4x4_p_V_328_reg_8256;
reg   [5:0] buffer1_1_96_4x4_p_V_329_reg_8261;
reg   [5:0] buffer1_1_96_4x4_p_V_330_reg_8266;
reg   [5:0] buffer1_1_96_4x4_p_V_331_reg_8271;
reg   [5:0] buffer1_1_96_4x4_p_V_332_reg_8276;
reg   [5:0] buffer1_1_96_4x4_p_V_333_reg_8281;
reg   [5:0] buffer1_1_96_4x4_p_V_334_reg_8286;
wire   [2:0] h_4_fu_5645_p2;
wire   [0:0] exitcond20_fu_5639_p2;
reg   [11:0] input_V_addr_reg_8299;
wire    ap_CS_fsm_state8;
reg   [6:0] weight_0_V_addr_reg_8304;
reg   [6:0] weight_1_V_addr_reg_8309;
reg   [6:0] weight_2_V_addr_reg_8314;
reg   [6:0] weight_3_V_addr_reg_8319;
reg   [6:0] weight_4_V_addr_reg_8324;
reg   [6:0] weight_5_V_addr_reg_8329;
reg   [6:0] weight_6_V_addr_reg_8334;
reg   [6:0] weight_7_V_addr_reg_8339;
reg   [6:0] weight_8_V_addr_reg_8344;
reg   [6:0] weight_9_V_addr_reg_8349;
reg   [6:0] weight_10_V_addr_reg_8354;
reg   [6:0] weight_11_V_addr_reg_8359;
reg   [6:0] weight_12_V_addr_reg_8364;
reg   [6:0] weight_13_V_addr_reg_8369;
reg   [6:0] weight_14_V_addr_reg_8374;
reg   [6:0] weight_15_V_addr_reg_8379;
reg   [6:0] weight_16_V_addr_reg_8384;
reg   [6:0] weight_17_V_addr_reg_8389;
reg   [6:0] weight_18_V_addr_reg_8394;
reg   [6:0] weight_19_V_addr_reg_8399;
reg   [6:0] weight_20_V_addr_reg_8404;
reg   [6:0] weight_21_V_addr_reg_8409;
reg   [6:0] weight_22_V_addr_reg_8414;
reg   [6:0] weight_23_V_addr_reg_8419;
reg   [6:0] weight_48_V_addr_reg_8424;
reg   [6:0] weight_49_V_addr_reg_8429;
reg   [6:0] weight_50_V_addr_reg_8434;
reg   [6:0] weight_51_V_addr_reg_8439;
reg   [6:0] weight_52_V_addr_reg_8444;
reg   [6:0] weight_53_V_addr_reg_8449;
reg   [6:0] weight_54_V_addr_reg_8454;
reg   [6:0] weight_55_V_addr_reg_8459;
reg   [6:0] weight_56_V_addr_reg_8464;
reg   [6:0] weight_57_V_addr_reg_8469;
reg   [6:0] weight_58_V_addr_reg_8474;
reg   [6:0] weight_59_V_addr_reg_8479;
reg   [6:0] weight_60_V_addr_reg_8484;
reg   [6:0] weight_61_V_addr_reg_8489;
reg   [6:0] weight_62_V_addr_reg_8494;
reg   [6:0] weight_63_V_addr_reg_8499;
reg   [6:0] weight_64_V_addr_reg_8504;
reg   [6:0] weight_65_V_addr_reg_8509;
reg   [6:0] weight_66_V_addr_reg_8514;
reg   [6:0] weight_67_V_addr_reg_8519;
reg   [6:0] weight_68_V_addr_reg_8524;
reg   [6:0] weight_69_V_addr_reg_8529;
reg   [6:0] weight_70_V_addr_reg_8534;
reg   [6:0] weight_71_V_addr_reg_8539;
wire   [6:0] ci_6_fu_5798_p2;
reg   [6:0] ci_6_reg_8547;
wire   [2:0] w_19_fu_5804_p2;
wire   [0:0] exitcond22_fu_5792_p2;
wire   [6:0] h4_cast6_cast1_fu_6530_p1;
reg   [6:0] h4_cast6_cast1_reg_8557;
wire    ap_CS_fsm_state15;
wire   [11:0] h4_cast6_cast_fu_6534_p1;
reg   [11:0] h4_cast6_cast_reg_8562;
wire   [6:0] tmp_225_fu_6562_p2;
reg   [6:0] tmp_225_reg_8567;
wire   [0:0] exitcond19_fu_6568_p2;
wire   [12:0] w5_cast5_cast1_fu_6574_p1;
reg   [12:0] w5_cast5_cast1_reg_8576;
wire    ap_CS_fsm_state16;
wire   [6:0] w5_cast5_cast_fu_6578_p1;
reg   [6:0] w5_cast5_cast_reg_8581;
reg   [5:0] buffer1_1_96_4x4_p_V_383_reg_8586;
reg   [5:0] buffer1_1_96_4x4_p_V_384_reg_8591;
reg   [5:0] buffer1_1_96_4x4_p_V_385_reg_8596;
reg   [5:0] buffer1_1_96_4x4_p_V_386_reg_8601;
reg   [5:0] buffer1_1_96_4x4_p_V_387_reg_8606;
reg   [5:0] buffer1_1_96_4x4_p_V_388_reg_8611;
reg   [5:0] buffer1_1_96_4x4_p_V_389_reg_8616;
reg   [5:0] buffer1_1_96_4x4_p_V_390_reg_8621;
reg   [5:0] buffer1_1_96_4x4_p_V_391_reg_8626;
reg   [5:0] buffer1_1_96_4x4_p_V_392_reg_8631;
reg   [5:0] buffer1_1_96_4x4_p_V_393_reg_8636;
reg   [5:0] buffer1_1_96_4x4_p_V_394_reg_8641;
reg   [5:0] buffer1_1_96_4x4_p_V_395_reg_8646;
reg   [5:0] buffer1_1_96_4x4_p_V_396_reg_8651;
reg   [5:0] buffer1_1_96_4x4_p_V_397_reg_8656;
reg   [5:0] buffer1_1_96_4x4_p_V_398_reg_8661;
reg   [5:0] buffer1_1_96_4x4_p_V_399_reg_8666;
reg   [5:0] buffer1_1_96_4x4_p_V_400_reg_8671;
reg   [5:0] buffer1_1_96_4x4_p_V_401_reg_8676;
reg   [5:0] buffer1_1_96_4x4_p_V_402_reg_8681;
reg   [5:0] buffer1_1_96_4x4_p_V_403_reg_8686;
reg   [5:0] buffer1_1_96_4x4_p_V_404_reg_8691;
reg   [5:0] buffer1_1_96_4x4_p_V_405_reg_8696;
reg   [5:0] buffer1_1_96_4x4_p_V_406_reg_8701;
reg   [5:0] buffer1_1_96_4x4_p_V_407_reg_8706;
reg   [5:0] buffer1_1_96_4x4_p_V_408_reg_8711;
reg   [5:0] buffer1_1_96_4x4_p_V_409_reg_8716;
reg   [5:0] buffer1_1_96_4x4_p_V_410_reg_8721;
reg   [5:0] buffer1_1_96_4x4_p_V_411_reg_8726;
reg   [5:0] buffer1_1_96_4x4_p_V_412_reg_8731;
reg   [5:0] buffer1_1_96_4x4_p_V_413_reg_8736;
reg   [5:0] buffer1_1_96_4x4_p_V_414_reg_8741;
reg   [5:0] buffer1_1_96_4x4_p_V_415_reg_8746;
reg   [5:0] buffer1_1_96_4x4_p_V_416_reg_8751;
reg   [5:0] buffer1_1_96_4x4_p_V_417_reg_8756;
reg   [5:0] buffer1_1_96_4x4_p_V_418_reg_8761;
reg   [5:0] buffer1_1_96_4x4_p_V_419_reg_8766;
reg   [5:0] buffer1_1_96_4x4_p_V_420_reg_8771;
reg   [5:0] buffer1_1_96_4x4_p_V_421_reg_8776;
reg   [5:0] buffer1_1_96_4x4_p_V_422_reg_8781;
reg   [5:0] buffer1_1_96_4x4_p_V_423_reg_8786;
reg   [5:0] buffer1_1_96_4x4_p_V_424_reg_8791;
reg   [5:0] buffer1_1_96_4x4_p_V_425_reg_8796;
reg   [5:0] buffer1_1_96_4x4_p_V_426_reg_8801;
reg   [5:0] buffer1_1_96_4x4_p_V_427_reg_8806;
reg   [5:0] buffer1_1_96_4x4_p_V_428_reg_8811;
reg   [5:0] buffer1_1_96_4x4_p_V_429_reg_8816;
reg   [5:0] buffer1_1_96_4x4_p_V_430_reg_8821;
wire   [2:0] h_6_fu_6645_p2;
wire   [0:0] exitcond21_fu_6639_p2;
reg   [11:0] input_V_addr_4_reg_8834;
wire    ap_CS_fsm_state17;
reg   [6:0] weight_24_V_addr_reg_8839;
reg   [6:0] weight_25_V_addr_reg_8844;
reg   [6:0] weight_26_V_addr_reg_8849;
reg   [6:0] weight_27_V_addr_reg_8854;
reg   [6:0] weight_28_V_addr_reg_8859;
reg   [6:0] weight_29_V_addr_reg_8864;
reg   [6:0] weight_30_V_addr_reg_8869;
reg   [6:0] weight_31_V_addr_reg_8874;
reg   [6:0] weight_32_V_addr_reg_8879;
reg   [6:0] weight_33_V_addr_reg_8884;
reg   [6:0] weight_34_V_addr_reg_8889;
reg   [6:0] weight_35_V_addr_reg_8894;
reg   [6:0] weight_36_V_addr_reg_8899;
reg   [6:0] weight_37_V_addr_reg_8904;
reg   [6:0] weight_38_V_addr_reg_8909;
reg   [6:0] weight_39_V_addr_reg_8914;
reg   [6:0] weight_40_V_addr_reg_8919;
reg   [6:0] weight_41_V_addr_reg_8924;
reg   [6:0] weight_42_V_addr_reg_8929;
reg   [6:0] weight_43_V_addr_reg_8934;
reg   [6:0] weight_44_V_addr_reg_8939;
reg   [6:0] weight_45_V_addr_reg_8944;
reg   [6:0] weight_46_V_addr_reg_8949;
reg   [6:0] weight_47_V_addr_reg_8954;
reg   [6:0] weight_72_V_addr_reg_8959;
reg   [6:0] weight_73_V_addr_reg_8964;
reg   [6:0] weight_74_V_addr_reg_8969;
reg   [6:0] weight_75_V_addr_reg_8974;
reg   [6:0] weight_76_V_addr_reg_8979;
reg   [6:0] weight_77_V_addr_reg_8984;
reg   [6:0] weight_78_V_addr_reg_8989;
reg   [6:0] weight_79_V_addr_reg_8994;
reg   [6:0] weight_80_V_addr_reg_8999;
reg   [6:0] weight_81_V_addr_reg_9004;
reg   [6:0] weight_82_V_addr_reg_9009;
reg   [6:0] weight_83_V_addr_reg_9014;
reg   [6:0] weight_84_V_addr_reg_9019;
reg   [6:0] weight_85_V_addr_reg_9024;
reg   [6:0] weight_86_V_addr_reg_9029;
reg   [6:0] weight_87_V_addr_reg_9034;
reg   [6:0] weight_88_V_addr_reg_9039;
reg   [6:0] weight_89_V_addr_reg_9044;
reg   [6:0] weight_90_V_addr_reg_9049;
reg   [6:0] weight_91_V_addr_reg_9054;
reg   [6:0] weight_92_V_addr_reg_9059;
reg   [6:0] weight_93_V_addr_reg_9064;
reg   [6:0] weight_94_V_addr_reg_9069;
reg   [6:0] weight_95_V_addr_reg_9074;
wire   [6:0] ci_7_fu_6798_p2;
reg   [6:0] ci_7_reg_9082;
wire   [2:0] w_20_fu_6804_p2;
wire   [0:0] exitcond24_fu_6792_p2;
wire   [0:0] exitcond_flatten9_fu_7530_p2;
reg   [0:0] exitcond_flatten9_reg_9092;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state24_pp1_stage0_iter0;
wire    ap_block_state25_pp1_stage0_iter1;
wire    ap_block_state26_pp1_stage0_iter2;
wire    ap_block_state27_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_9092;
wire   [10:0] indvar_flatten_next9_fu_7536_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten4_fu_7542_p2;
reg   [0:0] exitcond_flatten4_reg_9101;
wire   [5:0] indvar_flatten_next8_fu_7554_p3;
wire   [6:0] co8_mid2_fu_7592_p3;
reg   [6:0] co8_mid2_reg_9114;
reg    ap_enable_reg_pp1_iter1;
reg   [6:0] ap_reg_pp1_iter2_co8_mid2_reg_9114;
wire   [2:0] w10_mid2_fu_7610_p3;
reg   [2:0] w10_mid2_reg_9120;
wire   [2:0] h9_cast2_mid2_fu_7618_p3;
reg   [2:0] h9_cast2_mid2_reg_9125;
wire   [2:0] w_21_fu_7626_p2;
reg   [2:0] w_21_reg_9132;
reg   [5:0] buffer1_1_96_4x4_p_V_479_reg_9137;
reg   [5:0] buffer1_1_96_4x4_p_V_480_reg_9143;
reg   [5:0] buffer1_1_96_4x4_p_V_481_reg_9149;
reg   [5:0] buffer1_1_96_4x4_p_V_482_reg_9155;
reg   [5:0] buffer1_1_96_4x4_p_V_483_reg_9161;
reg   [5:0] buffer1_1_96_4x4_p_V_484_reg_9167;
reg   [5:0] buffer1_1_96_4x4_p_V_485_reg_9173;
reg   [5:0] buffer1_1_96_4x4_p_V_486_reg_9179;
reg   [5:0] buffer1_1_96_4x4_p_V_487_reg_9185;
reg   [5:0] buffer1_1_96_4x4_p_V_488_reg_9191;
reg   [5:0] buffer1_1_96_4x4_p_V_489_reg_9197;
reg   [5:0] buffer1_1_96_4x4_p_V_490_reg_9203;
reg   [5:0] buffer1_1_96_4x4_p_V_491_reg_9209;
reg   [5:0] buffer1_1_96_4x4_p_V_492_reg_9215;
reg   [5:0] buffer1_1_96_4x4_p_V_493_reg_9221;
reg   [5:0] buffer1_1_96_4x4_p_V_494_reg_9227;
reg   [5:0] buffer1_1_96_4x4_p_V_495_reg_9233;
reg   [5:0] buffer1_1_96_4x4_p_V_496_reg_9239;
reg   [5:0] buffer1_1_96_4x4_p_V_497_reg_9245;
reg   [5:0] buffer1_1_96_4x4_p_V_498_reg_9251;
reg   [5:0] buffer1_1_96_4x4_p_V_499_reg_9257;
reg   [5:0] buffer1_1_96_4x4_p_V_500_reg_9263;
reg   [5:0] buffer1_1_96_4x4_p_V_501_reg_9269;
reg   [5:0] buffer1_1_96_4x4_p_V_502_reg_9275;
reg   [5:0] buffer1_1_96_4x4_p_V_503_reg_9281;
reg   [5:0] buffer1_1_96_4x4_p_V_504_reg_9287;
reg   [5:0] buffer1_1_96_4x4_p_V_505_reg_9293;
reg   [5:0] buffer1_1_96_4x4_p_V_506_reg_9299;
reg   [5:0] buffer1_1_96_4x4_p_V_507_reg_9305;
reg   [5:0] buffer1_1_96_4x4_p_V_508_reg_9311;
reg   [5:0] buffer1_1_96_4x4_p_V_509_reg_9317;
reg   [5:0] buffer1_1_96_4x4_p_V_510_reg_9323;
reg   [5:0] buffer1_1_96_4x4_p_V_511_reg_9329;
reg   [5:0] buffer1_1_96_4x4_p_V_512_reg_9335;
reg   [5:0] buffer1_1_96_4x4_p_V_513_reg_9341;
reg   [5:0] buffer1_1_96_4x4_p_V_514_reg_9347;
reg   [5:0] buffer1_1_96_4x4_p_V_515_reg_9353;
reg   [5:0] buffer1_1_96_4x4_p_V_516_reg_9359;
reg   [5:0] buffer1_1_96_4x4_p_V_517_reg_9365;
reg   [5:0] buffer1_1_96_4x4_p_V_518_reg_9371;
reg   [5:0] buffer1_1_96_4x4_p_V_519_reg_9377;
reg   [5:0] buffer1_1_96_4x4_p_V_520_reg_9383;
reg   [5:0] buffer1_1_96_4x4_p_V_521_reg_9389;
reg   [5:0] buffer1_1_96_4x4_p_V_522_reg_9395;
reg   [5:0] buffer1_1_96_4x4_p_V_523_reg_9401;
reg   [5:0] buffer1_1_96_4x4_p_V_524_reg_9407;
reg   [5:0] buffer1_1_96_4x4_p_V_525_reg_9413;
reg   [5:0] buffer1_1_96_4x4_p_V_526_reg_9419;
reg   [5:0] buffer1_1_96_4x4_p_V_527_reg_9425;
reg   [5:0] buffer1_1_96_4x4_p_V_528_reg_9431;
reg   [5:0] buffer1_1_96_4x4_p_V_529_reg_9437;
reg   [5:0] buffer1_1_96_4x4_p_V_530_reg_9443;
reg   [5:0] buffer1_1_96_4x4_p_V_531_reg_9449;
reg   [5:0] buffer1_1_96_4x4_p_V_532_reg_9455;
reg   [5:0] buffer1_1_96_4x4_p_V_533_reg_9461;
reg   [5:0] buffer1_1_96_4x4_p_V_534_reg_9467;
reg   [5:0] buffer1_1_96_4x4_p_V_535_reg_9473;
reg   [5:0] buffer1_1_96_4x4_p_V_536_reg_9479;
reg   [5:0] buffer1_1_96_4x4_p_V_537_reg_9485;
reg   [5:0] buffer1_1_96_4x4_p_V_538_reg_9491;
reg   [5:0] buffer1_1_96_4x4_p_V_539_reg_9497;
reg   [5:0] buffer1_1_96_4x4_p_V_540_reg_9503;
reg   [5:0] buffer1_1_96_4x4_p_V_541_reg_9509;
reg   [5:0] buffer1_1_96_4x4_p_V_542_reg_9515;
reg   [5:0] buffer1_1_96_4x4_p_V_543_reg_9521;
reg   [5:0] buffer1_1_96_4x4_p_V_544_reg_9527;
reg   [5:0] buffer1_1_96_4x4_p_V_545_reg_9533;
reg   [5:0] buffer1_1_96_4x4_p_V_546_reg_9539;
reg   [5:0] buffer1_1_96_4x4_p_V_547_reg_9545;
reg   [5:0] buffer1_1_96_4x4_p_V_548_reg_9551;
reg   [5:0] buffer1_1_96_4x4_p_V_549_reg_9557;
reg   [5:0] buffer1_1_96_4x4_p_V_550_reg_9563;
reg   [5:0] buffer1_1_96_4x4_p_V_551_reg_9569;
reg   [5:0] buffer1_1_96_4x4_p_V_552_reg_9575;
reg   [5:0] buffer1_1_96_4x4_p_V_553_reg_9581;
reg   [5:0] buffer1_1_96_4x4_p_V_554_reg_9587;
reg   [5:0] buffer1_1_96_4x4_p_V_555_reg_9593;
reg   [5:0] buffer1_1_96_4x4_p_V_556_reg_9599;
reg   [5:0] buffer1_1_96_4x4_p_V_557_reg_9605;
reg   [5:0] buffer1_1_96_4x4_p_V_558_reg_9611;
reg   [5:0] buffer1_1_96_4x4_p_V_559_reg_9617;
reg   [5:0] buffer1_1_96_4x4_p_V_560_reg_9623;
reg   [5:0] buffer1_1_96_4x4_p_V_561_reg_9629;
reg   [5:0] buffer1_1_96_4x4_p_V_562_reg_9635;
reg   [5:0] buffer1_1_96_4x4_p_V_563_reg_9641;
reg   [5:0] buffer1_1_96_4x4_p_V_564_reg_9647;
reg   [5:0] buffer1_1_96_4x4_p_V_565_reg_9653;
reg   [5:0] buffer1_1_96_4x4_p_V_566_reg_9659;
reg   [5:0] buffer1_1_96_4x4_p_V_567_reg_9665;
reg   [5:0] buffer1_1_96_4x4_p_V_568_reg_9671;
reg   [5:0] buffer1_1_96_4x4_p_V_569_reg_9677;
reg   [5:0] buffer1_1_96_4x4_p_V_570_reg_9683;
reg   [5:0] buffer1_1_96_4x4_p_V_571_reg_9689;
reg   [5:0] buffer1_1_96_4x4_p_V_572_reg_9695;
reg   [5:0] buffer1_1_96_4x4_p_V_573_reg_9701;
reg   [5:0] buffer1_1_96_4x4_p_V_574_reg_9707;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state24;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [7:0] grp_MUL_DP_fu_4994_a_V;
reg   [7:0] grp_MUL_DP_fu_4994_b_V;
wire   [15:0] grp_MUL_DP_fu_4994_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_4994_ap_return_1;
reg    grp_MUL_DP_fu_4994_ap_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg   [7:0] grp_MUL_DP_fu_5003_a_V;
reg   [7:0] grp_MUL_DP_fu_5003_b_V;
wire   [15:0] grp_MUL_DP_fu_5003_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5003_ap_return_1;
reg    grp_MUL_DP_fu_5003_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5012_a_V;
reg   [7:0] grp_MUL_DP_fu_5012_b_V;
wire   [15:0] grp_MUL_DP_fu_5012_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5012_ap_return_1;
reg    grp_MUL_DP_fu_5012_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5021_a_V;
reg   [7:0] grp_MUL_DP_fu_5021_b_V;
wire   [15:0] grp_MUL_DP_fu_5021_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5021_ap_return_1;
reg    grp_MUL_DP_fu_5021_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5030_a_V;
reg   [7:0] grp_MUL_DP_fu_5030_b_V;
wire   [15:0] grp_MUL_DP_fu_5030_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5030_ap_return_1;
reg    grp_MUL_DP_fu_5030_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5039_a_V;
reg   [7:0] grp_MUL_DP_fu_5039_b_V;
wire   [15:0] grp_MUL_DP_fu_5039_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5039_ap_return_1;
reg    grp_MUL_DP_fu_5039_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5048_a_V;
reg   [7:0] grp_MUL_DP_fu_5048_b_V;
wire   [15:0] grp_MUL_DP_fu_5048_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5048_ap_return_1;
reg    grp_MUL_DP_fu_5048_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5057_a_V;
reg   [7:0] grp_MUL_DP_fu_5057_b_V;
wire   [15:0] grp_MUL_DP_fu_5057_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5057_ap_return_1;
reg    grp_MUL_DP_fu_5057_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5066_a_V;
reg   [7:0] grp_MUL_DP_fu_5066_b_V;
wire   [15:0] grp_MUL_DP_fu_5066_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5066_ap_return_1;
reg    grp_MUL_DP_fu_5066_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5075_a_V;
reg   [7:0] grp_MUL_DP_fu_5075_b_V;
wire   [15:0] grp_MUL_DP_fu_5075_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5075_ap_return_1;
reg    grp_MUL_DP_fu_5075_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5084_a_V;
reg   [7:0] grp_MUL_DP_fu_5084_b_V;
wire   [15:0] grp_MUL_DP_fu_5084_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5084_ap_return_1;
reg    grp_MUL_DP_fu_5084_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5093_a_V;
reg   [7:0] grp_MUL_DP_fu_5093_b_V;
wire   [15:0] grp_MUL_DP_fu_5093_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5093_ap_return_1;
reg    grp_MUL_DP_fu_5093_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5102_a_V;
reg   [7:0] grp_MUL_DP_fu_5102_b_V;
wire   [15:0] grp_MUL_DP_fu_5102_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5102_ap_return_1;
reg    grp_MUL_DP_fu_5102_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5111_a_V;
reg   [7:0] grp_MUL_DP_fu_5111_b_V;
wire   [15:0] grp_MUL_DP_fu_5111_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5111_ap_return_1;
reg    grp_MUL_DP_fu_5111_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5120_a_V;
reg   [7:0] grp_MUL_DP_fu_5120_b_V;
wire   [15:0] grp_MUL_DP_fu_5120_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5120_ap_return_1;
reg    grp_MUL_DP_fu_5120_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5129_a_V;
reg   [7:0] grp_MUL_DP_fu_5129_b_V;
wire   [15:0] grp_MUL_DP_fu_5129_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5129_ap_return_1;
reg    grp_MUL_DP_fu_5129_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5138_a_V;
reg   [7:0] grp_MUL_DP_fu_5138_b_V;
wire   [15:0] grp_MUL_DP_fu_5138_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5138_ap_return_1;
reg    grp_MUL_DP_fu_5138_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5147_a_V;
reg   [7:0] grp_MUL_DP_fu_5147_b_V;
wire   [15:0] grp_MUL_DP_fu_5147_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5147_ap_return_1;
reg    grp_MUL_DP_fu_5147_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5156_a_V;
reg   [7:0] grp_MUL_DP_fu_5156_b_V;
wire   [15:0] grp_MUL_DP_fu_5156_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5156_ap_return_1;
reg    grp_MUL_DP_fu_5156_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5165_a_V;
reg   [7:0] grp_MUL_DP_fu_5165_b_V;
wire   [15:0] grp_MUL_DP_fu_5165_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5165_ap_return_1;
reg    grp_MUL_DP_fu_5165_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5174_a_V;
reg   [7:0] grp_MUL_DP_fu_5174_b_V;
wire   [15:0] grp_MUL_DP_fu_5174_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5174_ap_return_1;
reg    grp_MUL_DP_fu_5174_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5183_a_V;
reg   [7:0] grp_MUL_DP_fu_5183_b_V;
wire   [15:0] grp_MUL_DP_fu_5183_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5183_ap_return_1;
reg    grp_MUL_DP_fu_5183_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5192_a_V;
reg   [7:0] grp_MUL_DP_fu_5192_b_V;
wire   [15:0] grp_MUL_DP_fu_5192_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5192_ap_return_1;
reg    grp_MUL_DP_fu_5192_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5201_a_V;
reg   [7:0] grp_MUL_DP_fu_5201_b_V;
wire   [15:0] grp_MUL_DP_fu_5201_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5201_ap_return_1;
reg    grp_MUL_DP_fu_5201_ap_ce;
reg   [6:0] co_phi_fu_4823_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [2:0] h_phi_fu_4846_p4;
reg   [2:0] w_phi_fu_4858_p4;
reg   [2:0] h1_reg_4866;
wire    ap_CS_fsm_state5;
reg   [2:0] w2_reg_4878;
wire   [0:0] exitcond18_fu_5568_p2;
reg   [6:0] ci_reg_4890;
reg   [2:0] h4_reg_4901;
reg   [2:0] w5_reg_4913;
reg   [6:0] ci6_reg_4925;
reg   [6:0] co8_phi_fu_4951_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [2:0] h9_phi_fu_4974_p4;
reg   [2:0] w10_phi_fu_4986_p4;
wire   [31:0] co_cast_mid2_fu_5338_p1;
wire   [31:0] tmp_271_cast_fu_5430_p1;
wire  signed [31:0] tmp_278_cast_fu_5587_p1;
wire   [31:0] tmp_287_cast_fu_5749_p1;
wire   [31:0] tmp_289_cast_fu_5764_p1;
wire   [31:0] ci_cast7_fu_5651_p1;
wire  signed [31:0] tmp_279_cast_fu_6587_p1;
wire   [31:0] tmp_302_cast_fu_6749_p1;
wire   [31:0] tmp_304_cast_fu_6764_p1;
wire   [31:0] ci6_cast4_fu_6651_p1;
wire   [31:0] tmp_294_cast_fu_7669_p1;
wire   [7:0] tmp_51_21_fu_7493_p2;
wire   [0:0] tmp_271_fu_7966_p3;
wire   [7:0] tmp_51_20_fu_7463_p2;
wire   [7:0] tmp_51_19_fu_7433_p2;
wire   [7:0] tmp_51_18_fu_7403_p2;
wire   [7:0] tmp_51_17_fu_7373_p2;
wire   [7:0] tmp_51_16_fu_7343_p2;
wire   [7:0] tmp_51_15_fu_7313_p2;
wire   [7:0] tmp_51_14_fu_7283_p2;
wire   [7:0] tmp_51_13_fu_7253_p2;
wire   [7:0] tmp_51_12_fu_7223_p2;
wire   [7:0] tmp_51_11_fu_7193_p2;
wire   [7:0] tmp_51_10_fu_7163_p2;
wire   [7:0] tmp_51_s_fu_7133_p2;
wire   [7:0] tmp_51_9_fu_7103_p2;
wire   [7:0] tmp_51_8_fu_7073_p2;
wire   [7:0] tmp_51_7_fu_7043_p2;
wire   [7:0] tmp_51_6_fu_7013_p2;
wire   [7:0] tmp_51_5_fu_6983_p2;
wire   [7:0] tmp_51_4_fu_6953_p2;
wire   [7:0] tmp_51_3_fu_6923_p2;
wire   [7:0] tmp_51_2_fu_6893_p2;
wire   [7:0] tmp_51_1_fu_6863_p2;
wire   [7:0] tmp_29_fu_6833_p2;
wire   [7:0] tmp_45_22_fu_6523_p2;
wire   [7:0] tmp_45_21_fu_6493_p2;
wire   [7:0] tmp_45_20_fu_6463_p2;
wire   [7:0] tmp_45_19_fu_6433_p2;
wire   [7:0] tmp_45_18_fu_6403_p2;
wire   [7:0] tmp_45_17_fu_6373_p2;
wire   [7:0] tmp_45_16_fu_6343_p2;
wire   [7:0] tmp_45_15_fu_6313_p2;
wire   [7:0] tmp_45_14_fu_6283_p2;
wire   [7:0] tmp_45_13_fu_6253_p2;
wire   [7:0] tmp_45_12_fu_6223_p2;
wire   [7:0] tmp_45_11_fu_6193_p2;
wire   [7:0] tmp_45_10_fu_6163_p2;
wire   [7:0] tmp_45_s_fu_6133_p2;
wire   [7:0] tmp_45_9_fu_6103_p2;
wire   [7:0] tmp_45_8_fu_6073_p2;
wire   [7:0] tmp_45_7_fu_6043_p2;
wire   [7:0] tmp_45_6_fu_6013_p2;
wire   [7:0] tmp_45_5_fu_5983_p2;
wire   [7:0] tmp_45_4_fu_5953_p2;
wire   [7:0] tmp_45_3_fu_5923_p2;
wire   [7:0] tmp_45_2_fu_5893_p2;
wire   [7:0] tmp_45_1_fu_5863_p2;
wire   [7:0] tmp_25_fu_5833_p2;
wire   [7:0] tmp_49_22_fu_7512_p2;
wire   [7:0] tmp_49_21_fu_7482_p2;
wire   [7:0] tmp_49_20_fu_7452_p2;
wire   [7:0] tmp_49_19_fu_7422_p2;
wire   [7:0] tmp_49_18_fu_7392_p2;
wire   [7:0] tmp_49_17_fu_7362_p2;
wire   [7:0] tmp_49_16_fu_7332_p2;
wire   [7:0] tmp_49_15_fu_7302_p2;
wire   [7:0] tmp_49_14_fu_7272_p2;
wire   [7:0] tmp_49_13_fu_7242_p2;
wire   [7:0] tmp_49_12_fu_7212_p2;
wire   [7:0] tmp_49_11_fu_7182_p2;
wire   [7:0] tmp_49_10_fu_7152_p2;
wire   [7:0] tmp_49_s_fu_7122_p2;
wire   [7:0] tmp_49_9_fu_7092_p2;
wire   [7:0] tmp_49_8_fu_7062_p2;
wire   [7:0] tmp_49_7_fu_7032_p2;
wire   [7:0] tmp_49_6_fu_7002_p2;
wire   [7:0] tmp_49_5_fu_6972_p2;
wire   [7:0] tmp_49_4_fu_6942_p2;
wire   [7:0] tmp_49_3_fu_6912_p2;
wire   [7:0] tmp_49_2_fu_6882_p2;
wire   [7:0] tmp_49_1_fu_6852_p2;
wire   [7:0] tmp_27_fu_6822_p2;
wire   [7:0] tmp_43_22_fu_6512_p2;
wire   [7:0] tmp_43_21_fu_6482_p2;
wire   [7:0] tmp_43_20_fu_6452_p2;
wire   [7:0] tmp_43_19_fu_6422_p2;
wire   [7:0] tmp_43_18_fu_6392_p2;
wire   [7:0] tmp_43_17_fu_6362_p2;
wire   [7:0] tmp_43_16_fu_6332_p2;
wire   [7:0] tmp_43_15_fu_6302_p2;
wire   [7:0] tmp_43_14_fu_6272_p2;
wire   [7:0] tmp_43_13_fu_6242_p2;
wire   [7:0] tmp_43_12_fu_6212_p2;
wire   [7:0] tmp_43_11_fu_6182_p2;
wire   [7:0] tmp_43_10_fu_6152_p2;
wire   [7:0] tmp_43_s_fu_6122_p2;
wire   [7:0] tmp_43_9_fu_6092_p2;
wire   [7:0] tmp_43_8_fu_6062_p2;
wire   [7:0] tmp_43_7_fu_6032_p2;
wire   [7:0] tmp_43_6_fu_6002_p2;
wire   [7:0] tmp_43_5_fu_5972_p2;
wire   [7:0] tmp_43_4_fu_5942_p2;
wire   [7:0] tmp_43_3_fu_5912_p2;
wire   [7:0] tmp_43_2_fu_5882_p2;
wire   [7:0] tmp_43_1_fu_5852_p2;
wire   [7:0] tmp_23_fu_5822_p2;
wire   [7:0] tmp_51_22_fu_7523_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire   [5:0] indvar_flatten_op_fu_5304_p2;
wire   [6:0] co_13_fu_5318_p2;
wire   [0:0] exitcond_fu_5348_p2;
wire   [0:0] not_exitcond_flatten_fu_5343_p2;
wire   [2:0] h_mid_fu_5324_p3;
wire   [0:0] exitcond31_mid_fu_5354_p2;
wire   [0:0] tmp_s_fu_5366_p2;
wire   [2:0] h_17_fu_5360_p2;
wire   [5:0] tmp_266_fu_5393_p3;
wire   [3:0] tmp_267_fu_5404_p3;
wire   [6:0] p_shl_cast_fu_5400_p1;
wire   [6:0] p_shl1_cast_fu_5411_p1;
wire   [6:0] w_cast_cast_fu_5421_p1;
wire   [6:0] tmp_218_fu_5415_p2;
wire   [6:0] tmp_219_fu_5424_p2;
wire   [5:0] tmp_220_fu_5538_p3;
wire   [3:0] tmp_221_fu_5550_p3;
wire   [6:0] p_shl2_cast_fu_5546_p1;
wire   [6:0] p_shl3_cast_fu_5558_p1;
wire   [6:0] tmp_226_fu_5582_p2;
wire   [9:0] tmp_228_fu_5679_p3;
wire   [7:0] tmp_229_fu_5691_p3;
wire   [10:0] p_shl6_cast_fu_5687_p1;
wire   [10:0] p_shl7_cast_fu_5699_p1;
wire   [10:0] tmp_230_fu_5703_p2;
wire  signed [11:0] tmp_282_cast_fu_5709_p1;
wire   [11:0] tmp_231_fu_5713_p2;
wire   [9:0] tmp_268_fu_5718_p1;
wire   [12:0] p_shl4_cast_fu_5722_p3;
wire   [12:0] p_shl5_cast_fu_5730_p3;
wire   [12:0] tmp_232_fu_5738_p2;
wire   [12:0] tmp_233_fu_5744_p2;
wire   [6:0] tmp_234_fu_5754_p2;
wire   [6:0] tmp_235_fu_5759_p2;
wire   [7:0] tmp_272_fu_5818_p1;
wire   [7:0] tmp_273_fu_5829_p1;
wire   [7:0] tmp_274_fu_5848_p1;
wire   [7:0] tmp_275_fu_5859_p1;
wire   [7:0] tmp_276_fu_5878_p1;
wire   [7:0] tmp_277_fu_5889_p1;
wire   [7:0] tmp_278_fu_5908_p1;
wire   [7:0] tmp_279_fu_5919_p1;
wire   [7:0] tmp_280_fu_5938_p1;
wire   [7:0] tmp_281_fu_5949_p1;
wire   [7:0] tmp_282_fu_5968_p1;
wire   [7:0] tmp_283_fu_5979_p1;
wire   [7:0] tmp_284_fu_5998_p1;
wire   [7:0] tmp_285_fu_6009_p1;
wire   [7:0] tmp_286_fu_6028_p1;
wire   [7:0] tmp_287_fu_6039_p1;
wire   [7:0] tmp_288_fu_6058_p1;
wire   [7:0] tmp_289_fu_6069_p1;
wire   [7:0] tmp_290_fu_6088_p1;
wire   [7:0] tmp_291_fu_6099_p1;
wire   [7:0] tmp_292_fu_6118_p1;
wire   [7:0] tmp_293_fu_6129_p1;
wire   [7:0] tmp_294_fu_6148_p1;
wire   [7:0] tmp_299_fu_6159_p1;
wire   [7:0] tmp_300_fu_6178_p1;
wire   [7:0] tmp_305_fu_6189_p1;
wire   [7:0] tmp_306_fu_6208_p1;
wire   [7:0] tmp_307_fu_6219_p1;
wire   [7:0] tmp_308_fu_6238_p1;
wire   [7:0] tmp_309_fu_6249_p1;
wire   [7:0] tmp_310_fu_6268_p1;
wire   [7:0] tmp_311_fu_6279_p1;
wire   [7:0] tmp_312_fu_6298_p1;
wire   [7:0] tmp_313_fu_6309_p1;
wire   [7:0] tmp_314_fu_6328_p1;
wire   [7:0] tmp_315_fu_6339_p1;
wire   [7:0] tmp_316_fu_6358_p1;
wire   [7:0] tmp_317_fu_6369_p1;
wire   [7:0] tmp_318_fu_6388_p1;
wire   [7:0] tmp_319_fu_6399_p1;
wire   [7:0] tmp_320_fu_6418_p1;
wire   [7:0] tmp_321_fu_6429_p1;
wire   [7:0] tmp_322_fu_6448_p1;
wire   [7:0] tmp_323_fu_6459_p1;
wire   [7:0] tmp_324_fu_6478_p1;
wire   [7:0] tmp_325_fu_6489_p1;
wire   [7:0] tmp_326_fu_6508_p1;
wire   [7:0] tmp_327_fu_6519_p1;
wire   [5:0] tmp_223_fu_6538_p3;
wire   [3:0] tmp_224_fu_6550_p3;
wire   [6:0] p_shl8_cast_fu_6546_p1;
wire   [6:0] p_shl9_cast_fu_6558_p1;
wire   [6:0] tmp_227_fu_6582_p2;
wire   [9:0] tmp_239_fu_6679_p3;
wire   [7:0] tmp_240_fu_6691_p3;
wire   [10:0] p_shl12_cast_fu_6687_p1;
wire   [10:0] p_shl13_cast_fu_6699_p1;
wire   [10:0] tmp_241_fu_6703_p2;
wire  signed [11:0] tmp_297_cast_fu_6709_p1;
wire   [11:0] tmp_242_fu_6713_p2;
wire   [9:0] tmp_328_fu_6718_p1;
wire   [12:0] p_shl10_cast_fu_6722_p3;
wire   [12:0] p_shl11_cast_fu_6730_p3;
wire   [12:0] tmp_243_fu_6738_p2;
wire   [12:0] tmp_244_fu_6744_p2;
wire   [6:0] tmp_245_fu_6754_p2;
wire   [6:0] tmp_246_fu_6759_p2;
wire   [7:0] tmp_329_fu_6818_p1;
wire   [7:0] tmp_330_fu_6829_p1;
wire   [7:0] tmp_331_fu_6848_p1;
wire   [7:0] tmp_332_fu_6859_p1;
wire   [7:0] tmp_333_fu_6878_p1;
wire   [7:0] tmp_334_fu_6889_p1;
wire   [7:0] tmp_335_fu_6908_p1;
wire   [7:0] tmp_336_fu_6919_p1;
wire   [7:0] tmp_337_fu_6938_p1;
wire   [7:0] tmp_338_fu_6949_p1;
wire   [7:0] tmp_339_fu_6968_p1;
wire   [7:0] tmp_340_fu_6979_p1;
wire   [7:0] tmp_341_fu_6998_p1;
wire   [7:0] tmp_342_fu_7009_p1;
wire   [7:0] tmp_343_fu_7028_p1;
wire   [7:0] tmp_344_fu_7039_p1;
wire   [7:0] tmp_345_fu_7058_p1;
wire   [7:0] tmp_346_fu_7069_p1;
wire   [7:0] tmp_347_fu_7088_p1;
wire   [7:0] tmp_348_fu_7099_p1;
wire   [7:0] tmp_349_fu_7118_p1;
wire   [7:0] tmp_350_fu_7129_p1;
wire   [7:0] tmp_351_fu_7148_p1;
wire   [7:0] tmp_352_fu_7159_p1;
wire   [7:0] tmp_353_fu_7178_p1;
wire   [7:0] tmp_354_fu_7189_p1;
wire   [7:0] tmp_355_fu_7208_p1;
wire   [7:0] tmp_356_fu_7219_p1;
wire   [7:0] tmp_357_fu_7238_p1;
wire   [7:0] tmp_358_fu_7249_p1;
wire   [7:0] tmp_359_fu_7268_p1;
wire   [7:0] tmp_360_fu_7279_p1;
wire   [7:0] tmp_361_fu_7298_p1;
wire   [7:0] tmp_362_fu_7309_p1;
wire   [7:0] tmp_363_fu_7328_p1;
wire   [7:0] tmp_364_fu_7339_p1;
wire   [7:0] tmp_365_fu_7358_p1;
wire   [7:0] tmp_366_fu_7369_p1;
wire   [7:0] tmp_367_fu_7388_p1;
wire   [7:0] tmp_368_fu_7399_p1;
wire   [7:0] tmp_369_fu_7418_p1;
wire   [7:0] tmp_370_fu_7429_p1;
wire   [7:0] tmp_371_fu_7448_p1;
wire   [7:0] tmp_372_fu_7459_p1;
wire   [7:0] tmp_373_fu_7478_p1;
wire   [7:0] tmp_374_fu_7489_p1;
wire   [7:0] tmp_375_fu_7508_p1;
wire   [7:0] tmp_376_fu_7519_p1;
wire   [5:0] indvar_flatten21_op_fu_7548_p2;
wire   [0:0] exitcond23_fu_7580_p2;
wire   [0:0] not_exitcond_flatten_6_fu_7575_p2;
wire   [6:0] co_15_fu_7562_p2;
wire   [2:0] h9_mid_fu_7568_p3;
wire   [0:0] exitcond_mid_fu_7586_p2;
wire   [0:0] tmp_236_fu_7605_p2;
wire   [2:0] h_5_fu_7599_p2;
wire   [5:0] tmp_269_fu_7632_p3;
wire   [3:0] tmp_270_fu_7643_p3;
wire   [6:0] p_shl14_cast_fu_7639_p1;
wire   [6:0] p_shl15_cast_fu_7650_p1;
wire   [6:0] w10_cast1_cast_fu_7660_p1;
wire   [6:0] tmp_237_fu_7654_p2;
wire   [6:0] tmp_238_fu_7663_p2;
wire   [7:0] tmp_30_fu_7769_p98;
wire    ap_CS_fsm_state28;
reg   [22:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_4994(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_4994_a_V),
    .b_V(grp_MUL_DP_fu_4994_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_4994_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_4994_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_4994_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5003(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5003_a_V),
    .b_V(grp_MUL_DP_fu_5003_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5003_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5003_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5003_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5012(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5012_a_V),
    .b_V(grp_MUL_DP_fu_5012_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5012_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5012_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5012_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5021(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5021_a_V),
    .b_V(grp_MUL_DP_fu_5021_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5021_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5021_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5021_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5030(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5030_a_V),
    .b_V(grp_MUL_DP_fu_5030_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5030_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5030_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5030_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5039(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5039_a_V),
    .b_V(grp_MUL_DP_fu_5039_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5039_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5039_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5039_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5048(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5048_a_V),
    .b_V(grp_MUL_DP_fu_5048_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5048_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5048_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5048_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5057(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5057_a_V),
    .b_V(grp_MUL_DP_fu_5057_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5057_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5057_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5057_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5066(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5066_a_V),
    .b_V(grp_MUL_DP_fu_5066_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5066_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5066_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5066_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5075(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5075_a_V),
    .b_V(grp_MUL_DP_fu_5075_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5075_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5075_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5075_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5084(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5084_a_V),
    .b_V(grp_MUL_DP_fu_5084_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5084_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5084_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5084_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5093(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5093_a_V),
    .b_V(grp_MUL_DP_fu_5093_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5093_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5093_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5093_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5102_a_V),
    .b_V(grp_MUL_DP_fu_5102_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5102_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5102_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5102_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5111(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5111_a_V),
    .b_V(grp_MUL_DP_fu_5111_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5111_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5111_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5111_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5120(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5120_a_V),
    .b_V(grp_MUL_DP_fu_5120_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5120_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5120_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5120_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5129(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5129_a_V),
    .b_V(grp_MUL_DP_fu_5129_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5129_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5129_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5129_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5138_a_V),
    .b_V(grp_MUL_DP_fu_5138_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5138_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5138_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5138_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5147(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5147_a_V),
    .b_V(grp_MUL_DP_fu_5147_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5147_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5147_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5147_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5156(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5156_a_V),
    .b_V(grp_MUL_DP_fu_5156_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5156_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5156_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5156_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5165(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5165_a_V),
    .b_V(grp_MUL_DP_fu_5165_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5165_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5165_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5165_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5174(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5174_a_V),
    .b_V(grp_MUL_DP_fu_5174_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5174_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5174_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5174_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5183(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5183_a_V),
    .b_V(grp_MUL_DP_fu_5183_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5183_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5183_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5183_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5192(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5192_a_V),
    .b_V(grp_MUL_DP_fu_5192_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5192_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5192_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5192_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5201(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5201_a_V),
    .b_V(grp_MUL_DP_fu_5201_b_V),
    .w_V(reg_5258),
    .ap_return_0(grp_MUL_DP_fu_5201_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5201_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5201_ap_ce)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_x_U1011(
    .din1(buffer1_1_96_4x4_p_V_96_q0),
    .din2(buffer1_1_96_4x4_p_V_1_q0),
    .din3(buffer1_1_96_4x4_p_V_2_q0),
    .din4(buffer1_1_96_4x4_p_V_3_q0),
    .din5(buffer1_1_96_4x4_p_V_4_q0),
    .din6(buffer1_1_96_4x4_p_V_5_q0),
    .din7(buffer1_1_96_4x4_p_V_6_q0),
    .din8(buffer1_1_96_4x4_p_V_7_q0),
    .din9(buffer1_1_96_4x4_p_V_8_q0),
    .din10(buffer1_1_96_4x4_p_V_9_q0),
    .din11(buffer1_1_96_4x4_p_V_10_q0),
    .din12(buffer1_1_96_4x4_p_V_11_q0),
    .din13(buffer1_1_96_4x4_p_V_12_q0),
    .din14(buffer1_1_96_4x4_p_V_13_q0),
    .din15(buffer1_1_96_4x4_p_V_14_q0),
    .din16(buffer1_1_96_4x4_p_V_15_q0),
    .din17(buffer1_1_96_4x4_p_V_16_q0),
    .din18(buffer1_1_96_4x4_p_V_17_q0),
    .din19(buffer1_1_96_4x4_p_V_18_q0),
    .din20(buffer1_1_96_4x4_p_V_19_q0),
    .din21(buffer1_1_96_4x4_p_V_20_q0),
    .din22(buffer1_1_96_4x4_p_V_21_q0),
    .din23(buffer1_1_96_4x4_p_V_22_q0),
    .din24(buffer1_1_96_4x4_p_V_23_q0),
    .din25(buffer1_1_96_4x4_p_V_24_q0),
    .din26(buffer1_1_96_4x4_p_V_25_q0),
    .din27(buffer1_1_96_4x4_p_V_26_q0),
    .din28(buffer1_1_96_4x4_p_V_27_q0),
    .din29(buffer1_1_96_4x4_p_V_28_q0),
    .din30(buffer1_1_96_4x4_p_V_29_q0),
    .din31(buffer1_1_96_4x4_p_V_30_q0),
    .din32(buffer1_1_96_4x4_p_V_31_q0),
    .din33(buffer1_1_96_4x4_p_V_32_q0),
    .din34(buffer1_1_96_4x4_p_V_33_q0),
    .din35(buffer1_1_96_4x4_p_V_34_q0),
    .din36(buffer1_1_96_4x4_p_V_35_q0),
    .din37(buffer1_1_96_4x4_p_V_36_q0),
    .din38(buffer1_1_96_4x4_p_V_37_q0),
    .din39(buffer1_1_96_4x4_p_V_38_q0),
    .din40(buffer1_1_96_4x4_p_V_39_q0),
    .din41(buffer1_1_96_4x4_p_V_40_q0),
    .din42(buffer1_1_96_4x4_p_V_41_q0),
    .din43(buffer1_1_96_4x4_p_V_42_q0),
    .din44(buffer1_1_96_4x4_p_V_43_q0),
    .din45(buffer1_1_96_4x4_p_V_44_q0),
    .din46(buffer1_1_96_4x4_p_V_45_q0),
    .din47(buffer1_1_96_4x4_p_V_46_q0),
    .din48(buffer1_1_96_4x4_p_V_47_q0),
    .din49(buffer1_1_96_4x4_p_V_48_q0),
    .din50(buffer1_1_96_4x4_p_V_49_q0),
    .din51(buffer1_1_96_4x4_p_V_50_q0),
    .din52(buffer1_1_96_4x4_p_V_51_q0),
    .din53(buffer1_1_96_4x4_p_V_52_q0),
    .din54(buffer1_1_96_4x4_p_V_53_q0),
    .din55(buffer1_1_96_4x4_p_V_54_q0),
    .din56(buffer1_1_96_4x4_p_V_55_q0),
    .din57(buffer1_1_96_4x4_p_V_56_q0),
    .din58(buffer1_1_96_4x4_p_V_57_q0),
    .din59(buffer1_1_96_4x4_p_V_58_q0),
    .din60(buffer1_1_96_4x4_p_V_59_q0),
    .din61(buffer1_1_96_4x4_p_V_60_q0),
    .din62(buffer1_1_96_4x4_p_V_61_q0),
    .din63(buffer1_1_96_4x4_p_V_62_q0),
    .din64(buffer1_1_96_4x4_p_V_63_q0),
    .din65(buffer1_1_96_4x4_p_V_64_q0),
    .din66(buffer1_1_96_4x4_p_V_65_q0),
    .din67(buffer1_1_96_4x4_p_V_66_q0),
    .din68(buffer1_1_96_4x4_p_V_67_q0),
    .din69(buffer1_1_96_4x4_p_V_68_q0),
    .din70(buffer1_1_96_4x4_p_V_69_q0),
    .din71(buffer1_1_96_4x4_p_V_70_q0),
    .din72(buffer1_1_96_4x4_p_V_71_q0),
    .din73(buffer1_1_96_4x4_p_V_72_q0),
    .din74(buffer1_1_96_4x4_p_V_73_q0),
    .din75(buffer1_1_96_4x4_p_V_74_q0),
    .din76(buffer1_1_96_4x4_p_V_75_q0),
    .din77(buffer1_1_96_4x4_p_V_76_q0),
    .din78(buffer1_1_96_4x4_p_V_77_q0),
    .din79(buffer1_1_96_4x4_p_V_78_q0),
    .din80(buffer1_1_96_4x4_p_V_79_q0),
    .din81(buffer1_1_96_4x4_p_V_80_q0),
    .din82(buffer1_1_96_4x4_p_V_81_q0),
    .din83(buffer1_1_96_4x4_p_V_82_q0),
    .din84(buffer1_1_96_4x4_p_V_83_q0),
    .din85(buffer1_1_96_4x4_p_V_84_q0),
    .din86(buffer1_1_96_4x4_p_V_85_q0),
    .din87(buffer1_1_96_4x4_p_V_86_q0),
    .din88(buffer1_1_96_4x4_p_V_87_q0),
    .din89(buffer1_1_96_4x4_p_V_88_q0),
    .din90(buffer1_1_96_4x4_p_V_89_q0),
    .din91(buffer1_1_96_4x4_p_V_90_q0),
    .din92(buffer1_1_96_4x4_p_V_91_q0),
    .din93(buffer1_1_96_4x4_p_V_92_q0),
    .din94(buffer1_1_96_4x4_p_V_93_q0),
    .din95(buffer1_1_96_4x4_p_V_94_q0),
    .din96(buffer1_1_96_4x4_p_V_95_q0),
    .din97(ap_reg_pp1_iter2_co8_mid2_reg_9114),
    .dout(tmp_30_fu_7769_p98)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state24))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state24)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state24 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond21_fu_6639_p2))) begin
        ci6_reg_4925 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ci6_reg_4925 <= ci_7_reg_9082;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond20_fu_5639_p2))) begin
        ci_reg_4890 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ci_reg_4890 <= ci_6_reg_8547;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
        co8_reg_4947 <= 7'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co8_reg_4947 <= co8_mid2_reg_9114;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0))) begin
        co_reg_4819 <= co_cast_mid2_v_reg_7996;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_4819 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_4866 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond20_fu_5639_p2 == 1'd1))) begin
        h1_reg_4866 <= h_4_fu_5645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond18_fu_5568_p2))) begin
        h4_reg_4901 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond21_fu_6639_p2))) begin
        h4_reg_4901 <= h_6_fu_6645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
        h9_reg_4970 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h9_reg_4970 <= h9_cast2_mid2_reg_9125;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0))) begin
        h_reg_4842 <= h_cast_mid2_reg_8006;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_4842 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_5286_p2 == 1'd0))) begin
        indvar_flatten7_reg_4808 <= indvar_flatten_next7_fu_5292_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten7_reg_4808 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
        indvar_flatten8_reg_4936 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_7530_p2))) begin
        indvar_flatten8_reg_4936 <= indvar_flatten_next9_fu_7536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
        indvar_flatten9_reg_4959 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_7530_p2))) begin
        indvar_flatten9_reg_4959 <= indvar_flatten_next8_fu_7554_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten7_fu_5286_p2 == 1'd0))) begin
        indvar_flatten_reg_4831 <= indvar_flatten_next_fu_5310_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_4831 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
        w10_reg_4982 <= 3'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w10_reg_4982 <= w_21_reg_9132;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond18_fu_5568_p2))) begin
        w2_reg_4878 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond22_fu_5792_p2))) begin
        w2_reg_4878 <= w_19_fu_5804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond19_fu_6568_p2))) begin
        w5_reg_4913 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond24_fu_6792_p2))) begin
        w5_reg_4913 <= w_20_fu_6804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0))) begin
        w_reg_4854 <= w_18_reg_8018;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_4854 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 <= exitcond_flatten7_reg_7974;
        exitcond_flatten7_reg_7974 <= exitcond_flatten7_fu_5286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_9092 <= exitcond_flatten9_reg_9092;
        exitcond_flatten9_reg_9092 <= exitcond_flatten9_fu_7530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co8_mid2_reg_9114 <= co8_mid2_reg_9114;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buffer1_1_96_4x4_p_V_287_reg_8051 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_288_reg_8056 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_289_reg_8061 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_290_reg_8066 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_291_reg_8071 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_292_reg_8076 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_293_reg_8081 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_294_reg_8086 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_295_reg_8091 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_296_reg_8096 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_297_reg_8101 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_298_reg_8106 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_299_reg_8111 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_300_reg_8116 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_301_reg_8121 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_302_reg_8126 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_303_reg_8131 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_304_reg_8136 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_305_reg_8141 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_306_reg_8146 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_307_reg_8151 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_308_reg_8156 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_309_reg_8161 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_310_reg_8166 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_311_reg_8171 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_312_reg_8176 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_313_reg_8181 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_314_reg_8186 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_315_reg_8191 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_316_reg_8196 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_317_reg_8201 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_318_reg_8206 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_319_reg_8211 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_320_reg_8216 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_321_reg_8221 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_322_reg_8226 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_323_reg_8231 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_324_reg_8236 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_325_reg_8241 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_326_reg_8246 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_327_reg_8251 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_328_reg_8256 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_329_reg_8261 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_330_reg_8266 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_331_reg_8271 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_332_reg_8276 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_333_reg_8281 <= tmp_278_cast_fu_5587_p1;
        buffer1_1_96_4x4_p_V_334_reg_8286 <= tmp_278_cast_fu_5587_p1;
        w2_cast8_cast1_reg_8041[2 : 0] <= w2_cast8_cast1_fu_5574_p1[2 : 0];
        w2_cast8_cast_reg_8046[2 : 0] <= w2_cast8_cast_fu_5578_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer1_1_96_4x4_p_V_383_reg_8586 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_384_reg_8591 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_385_reg_8596 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_386_reg_8601 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_387_reg_8606 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_388_reg_8611 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_389_reg_8616 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_390_reg_8621 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_391_reg_8626 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_392_reg_8631 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_393_reg_8636 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_394_reg_8641 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_395_reg_8646 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_396_reg_8651 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_397_reg_8656 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_398_reg_8661 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_399_reg_8666 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_400_reg_8671 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_401_reg_8676 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_402_reg_8681 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_403_reg_8686 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_404_reg_8691 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_405_reg_8696 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_406_reg_8701 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_407_reg_8706 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_408_reg_8711 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_409_reg_8716 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_410_reg_8721 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_411_reg_8726 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_412_reg_8731 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_413_reg_8736 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_414_reg_8741 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_415_reg_8746 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_416_reg_8751 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_417_reg_8756 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_418_reg_8761 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_419_reg_8766 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_420_reg_8771 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_421_reg_8776 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_422_reg_8781 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_423_reg_8786 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_424_reg_8791 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_425_reg_8796 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_426_reg_8801 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_427_reg_8806 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_428_reg_8811 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_429_reg_8816 <= tmp_279_cast_fu_6587_p1;
        buffer1_1_96_4x4_p_V_430_reg_8821 <= tmp_279_cast_fu_6587_p1;
        w5_cast5_cast1_reg_8576[2 : 0] <= w5_cast5_cast1_fu_6574_p1[2 : 0];
        w5_cast5_cast_reg_8581[2 : 0] <= w5_cast5_cast_fu_6578_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092))) begin
        buffer1_1_96_4x4_p_V_479_reg_9137 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_480_reg_9143 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_481_reg_9149 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_482_reg_9155 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_483_reg_9161 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_484_reg_9167 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_485_reg_9173 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_486_reg_9179 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_487_reg_9185 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_488_reg_9191 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_489_reg_9197 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_490_reg_9203 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_491_reg_9209 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_492_reg_9215 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_493_reg_9221 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_494_reg_9227 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_495_reg_9233 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_496_reg_9239 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_497_reg_9245 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_498_reg_9251 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_499_reg_9257 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_500_reg_9263 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_501_reg_9269 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_502_reg_9275 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_503_reg_9281 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_504_reg_9287 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_505_reg_9293 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_506_reg_9299 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_507_reg_9305 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_508_reg_9311 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_509_reg_9317 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_510_reg_9323 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_511_reg_9329 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_512_reg_9335 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_513_reg_9341 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_514_reg_9347 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_515_reg_9353 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_516_reg_9359 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_517_reg_9365 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_518_reg_9371 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_519_reg_9377 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_520_reg_9383 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_521_reg_9389 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_522_reg_9395 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_523_reg_9401 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_524_reg_9407 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_525_reg_9413 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_526_reg_9419 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_527_reg_9425 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_528_reg_9431 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_529_reg_9437 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_530_reg_9443 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_531_reg_9449 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_532_reg_9455 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_533_reg_9461 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_534_reg_9467 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_535_reg_9473 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_536_reg_9479 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_537_reg_9485 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_538_reg_9491 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_539_reg_9497 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_540_reg_9503 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_541_reg_9509 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_542_reg_9515 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_543_reg_9521 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_544_reg_9527 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_545_reg_9533 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_546_reg_9539 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_547_reg_9545 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_548_reg_9551 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_549_reg_9557 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_550_reg_9563 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_551_reg_9569 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_552_reg_9575 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_553_reg_9581 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_554_reg_9587 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_555_reg_9593 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_556_reg_9599 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_557_reg_9605 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_558_reg_9611 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_559_reg_9617 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_560_reg_9623 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_561_reg_9629 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_562_reg_9635 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_563_reg_9641 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_564_reg_9647 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_565_reg_9653 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_566_reg_9659 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_567_reg_9665 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_568_reg_9671 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_569_reg_9677 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_570_reg_9683 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_571_reg_9689 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_572_reg_9695 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_573_reg_9701 <= tmp_294_cast_fu_7669_p1;
        buffer1_1_96_4x4_p_V_574_reg_9707 <= tmp_294_cast_fu_7669_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_6_reg_8547 <= ci_6_fu_5798_p2;
        input_V_addr_reg_8299 <= tmp_287_cast_fu_5749_p1;
        weight_0_V_addr_reg_8304 <= tmp_289_cast_fu_5764_p1;
        weight_10_V_addr_reg_8354 <= tmp_289_cast_fu_5764_p1;
        weight_11_V_addr_reg_8359 <= tmp_289_cast_fu_5764_p1;
        weight_12_V_addr_reg_8364 <= tmp_289_cast_fu_5764_p1;
        weight_13_V_addr_reg_8369 <= tmp_289_cast_fu_5764_p1;
        weight_14_V_addr_reg_8374 <= tmp_289_cast_fu_5764_p1;
        weight_15_V_addr_reg_8379 <= tmp_289_cast_fu_5764_p1;
        weight_16_V_addr_reg_8384 <= tmp_289_cast_fu_5764_p1;
        weight_17_V_addr_reg_8389 <= tmp_289_cast_fu_5764_p1;
        weight_18_V_addr_reg_8394 <= tmp_289_cast_fu_5764_p1;
        weight_19_V_addr_reg_8399 <= tmp_289_cast_fu_5764_p1;
        weight_1_V_addr_reg_8309 <= tmp_289_cast_fu_5764_p1;
        weight_20_V_addr_reg_8404 <= tmp_289_cast_fu_5764_p1;
        weight_21_V_addr_reg_8409 <= tmp_289_cast_fu_5764_p1;
        weight_22_V_addr_reg_8414 <= tmp_289_cast_fu_5764_p1;
        weight_23_V_addr_reg_8419 <= tmp_289_cast_fu_5764_p1;
        weight_2_V_addr_reg_8314 <= tmp_289_cast_fu_5764_p1;
        weight_3_V_addr_reg_8319 <= tmp_289_cast_fu_5764_p1;
        weight_48_V_addr_reg_8424 <= ci_cast7_fu_5651_p1;
        weight_49_V_addr_reg_8429 <= ci_cast7_fu_5651_p1;
        weight_4_V_addr_reg_8324 <= tmp_289_cast_fu_5764_p1;
        weight_50_V_addr_reg_8434 <= ci_cast7_fu_5651_p1;
        weight_51_V_addr_reg_8439 <= ci_cast7_fu_5651_p1;
        weight_52_V_addr_reg_8444 <= ci_cast7_fu_5651_p1;
        weight_53_V_addr_reg_8449 <= ci_cast7_fu_5651_p1;
        weight_54_V_addr_reg_8454 <= ci_cast7_fu_5651_p1;
        weight_55_V_addr_reg_8459 <= ci_cast7_fu_5651_p1;
        weight_56_V_addr_reg_8464 <= ci_cast7_fu_5651_p1;
        weight_57_V_addr_reg_8469 <= ci_cast7_fu_5651_p1;
        weight_58_V_addr_reg_8474 <= ci_cast7_fu_5651_p1;
        weight_59_V_addr_reg_8479 <= ci_cast7_fu_5651_p1;
        weight_5_V_addr_reg_8329 <= tmp_289_cast_fu_5764_p1;
        weight_60_V_addr_reg_8484 <= ci_cast7_fu_5651_p1;
        weight_61_V_addr_reg_8489 <= ci_cast7_fu_5651_p1;
        weight_62_V_addr_reg_8494 <= ci_cast7_fu_5651_p1;
        weight_63_V_addr_reg_8499 <= ci_cast7_fu_5651_p1;
        weight_64_V_addr_reg_8504 <= ci_cast7_fu_5651_p1;
        weight_65_V_addr_reg_8509 <= ci_cast7_fu_5651_p1;
        weight_66_V_addr_reg_8514 <= ci_cast7_fu_5651_p1;
        weight_67_V_addr_reg_8519 <= ci_cast7_fu_5651_p1;
        weight_68_V_addr_reg_8524 <= ci_cast7_fu_5651_p1;
        weight_69_V_addr_reg_8529 <= ci_cast7_fu_5651_p1;
        weight_6_V_addr_reg_8334 <= tmp_289_cast_fu_5764_p1;
        weight_70_V_addr_reg_8534 <= ci_cast7_fu_5651_p1;
        weight_71_V_addr_reg_8539 <= ci_cast7_fu_5651_p1;
        weight_7_V_addr_reg_8339 <= tmp_289_cast_fu_5764_p1;
        weight_8_V_addr_reg_8344 <= tmp_289_cast_fu_5764_p1;
        weight_9_V_addr_reg_8349 <= tmp_289_cast_fu_5764_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ci_7_reg_9082 <= ci_7_fu_6798_p2;
        input_V_addr_4_reg_8834 <= tmp_302_cast_fu_6749_p1;
        weight_24_V_addr_reg_8839 <= tmp_304_cast_fu_6764_p1;
        weight_25_V_addr_reg_8844 <= tmp_304_cast_fu_6764_p1;
        weight_26_V_addr_reg_8849 <= tmp_304_cast_fu_6764_p1;
        weight_27_V_addr_reg_8854 <= tmp_304_cast_fu_6764_p1;
        weight_28_V_addr_reg_8859 <= tmp_304_cast_fu_6764_p1;
        weight_29_V_addr_reg_8864 <= tmp_304_cast_fu_6764_p1;
        weight_30_V_addr_reg_8869 <= tmp_304_cast_fu_6764_p1;
        weight_31_V_addr_reg_8874 <= tmp_304_cast_fu_6764_p1;
        weight_32_V_addr_reg_8879 <= tmp_304_cast_fu_6764_p1;
        weight_33_V_addr_reg_8884 <= tmp_304_cast_fu_6764_p1;
        weight_34_V_addr_reg_8889 <= tmp_304_cast_fu_6764_p1;
        weight_35_V_addr_reg_8894 <= tmp_304_cast_fu_6764_p1;
        weight_36_V_addr_reg_8899 <= tmp_304_cast_fu_6764_p1;
        weight_37_V_addr_reg_8904 <= tmp_304_cast_fu_6764_p1;
        weight_38_V_addr_reg_8909 <= tmp_304_cast_fu_6764_p1;
        weight_39_V_addr_reg_8914 <= tmp_304_cast_fu_6764_p1;
        weight_40_V_addr_reg_8919 <= tmp_304_cast_fu_6764_p1;
        weight_41_V_addr_reg_8924 <= tmp_304_cast_fu_6764_p1;
        weight_42_V_addr_reg_8929 <= tmp_304_cast_fu_6764_p1;
        weight_43_V_addr_reg_8934 <= tmp_304_cast_fu_6764_p1;
        weight_44_V_addr_reg_8939 <= tmp_304_cast_fu_6764_p1;
        weight_45_V_addr_reg_8944 <= tmp_304_cast_fu_6764_p1;
        weight_46_V_addr_reg_8949 <= tmp_304_cast_fu_6764_p1;
        weight_47_V_addr_reg_8954 <= tmp_304_cast_fu_6764_p1;
        weight_72_V_addr_reg_8959 <= ci6_cast4_fu_6651_p1;
        weight_73_V_addr_reg_8964 <= ci6_cast4_fu_6651_p1;
        weight_74_V_addr_reg_8969 <= ci6_cast4_fu_6651_p1;
        weight_75_V_addr_reg_8974 <= ci6_cast4_fu_6651_p1;
        weight_76_V_addr_reg_8979 <= ci6_cast4_fu_6651_p1;
        weight_77_V_addr_reg_8984 <= ci6_cast4_fu_6651_p1;
        weight_78_V_addr_reg_8989 <= ci6_cast4_fu_6651_p1;
        weight_79_V_addr_reg_8994 <= ci6_cast4_fu_6651_p1;
        weight_80_V_addr_reg_8999 <= ci6_cast4_fu_6651_p1;
        weight_81_V_addr_reg_9004 <= ci6_cast4_fu_6651_p1;
        weight_82_V_addr_reg_9009 <= ci6_cast4_fu_6651_p1;
        weight_83_V_addr_reg_9014 <= ci6_cast4_fu_6651_p1;
        weight_84_V_addr_reg_9019 <= ci6_cast4_fu_6651_p1;
        weight_85_V_addr_reg_9024 <= ci6_cast4_fu_6651_p1;
        weight_86_V_addr_reg_9029 <= ci6_cast4_fu_6651_p1;
        weight_87_V_addr_reg_9034 <= ci6_cast4_fu_6651_p1;
        weight_88_V_addr_reg_9039 <= ci6_cast4_fu_6651_p1;
        weight_89_V_addr_reg_9044 <= ci6_cast4_fu_6651_p1;
        weight_90_V_addr_reg_9049 <= ci6_cast4_fu_6651_p1;
        weight_91_V_addr_reg_9054 <= ci6_cast4_fu_6651_p1;
        weight_92_V_addr_reg_9059 <= ci6_cast4_fu_6651_p1;
        weight_93_V_addr_reg_9064 <= ci6_cast4_fu_6651_p1;
        weight_94_V_addr_reg_9069 <= ci6_cast4_fu_6651_p1;
        weight_95_V_addr_reg_9074 <= ci6_cast4_fu_6651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten9_reg_9092))) begin
        co8_mid2_reg_9114 <= co8_mid2_fu_7592_p3;
        h9_cast2_mid2_reg_9125 <= h9_cast2_mid2_fu_7618_p3;
        w_21_reg_9132 <= w_21_fu_7626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten7_reg_7974 == 1'd0))) begin
        co_cast_mid2_v_reg_7996 <= co_cast_mid2_v_fu_5331_p3;
        h_cast_mid2_reg_8006 <= h_cast_mid2_fu_5379_p3;
        w_18_reg_8018 <= w_18_fu_5387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_7530_p2))) begin
        exitcond_flatten4_reg_9101 <= exitcond_flatten4_fu_7542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_fu_5286_p2 == 1'd0))) begin
        exitcond_flatten_reg_7983 <= exitcond_flatten_fu_5298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast9_cast1_reg_8023[2 : 0] <= h1_cast9_cast1_fu_5530_p1[2 : 0];
        h1_cast9_cast_reg_8028[2 : 0] <= h1_cast9_cast_fu_5534_p1[2 : 0];
        tmp_222_reg_8033[6 : 1] <= tmp_222_fu_5562_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h4_cast6_cast1_reg_8557[2 : 0] <= h4_cast6_cast1_fu_6530_p1[2 : 0];
        h4_cast6_cast_reg_8562[2 : 0] <= h4_cast6_cast_fu_6534_p1[2 : 0];
        tmp_225_reg_8567[6 : 1] <= tmp_225_fu_6562_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_5258 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_9092))) begin
        w10_mid2_reg_9120 <= w10_mid2_fu_7610_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten7_reg_7974 == 1'd0))) begin
        w_mid2_reg_8001 <= w_mid2_fu_5371_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten7_fu_5286_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_7530_p2)) begin
        ap_condition_pp1_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_10_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_10_address0 = buffer1_1_96_4x4_p_V_298_reg_8106;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_10_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_10_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_10_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_10_d0 = tmp_43_s_fu_6122_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_10_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd10)))) begin
        buffer1_1_96_4x4_p_V_10_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd10))) begin
        buffer1_1_96_4x4_p_V_10_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_11_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_11_address0 = buffer1_1_96_4x4_p_V_299_reg_8111;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_11_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_11_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_11_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_11_d0 = tmp_43_10_fu_6152_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_11_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd11)))) begin
        buffer1_1_96_4x4_p_V_11_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd11))) begin
        buffer1_1_96_4x4_p_V_11_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_12_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_12_address0 = buffer1_1_96_4x4_p_V_300_reg_8116;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_12_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_12_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_12_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_12_d0 = tmp_43_11_fu_6182_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_12_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd12)))) begin
        buffer1_1_96_4x4_p_V_12_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd12))) begin
        buffer1_1_96_4x4_p_V_12_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_13_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_13_address0 = buffer1_1_96_4x4_p_V_288_reg_8056;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_13_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_13_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_13_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_13_d0 = tmp_43_12_fu_6212_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_13_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd13)))) begin
        buffer1_1_96_4x4_p_V_13_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd13))) begin
        buffer1_1_96_4x4_p_V_13_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_14_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_14_address0 = buffer1_1_96_4x4_p_V_304_reg_8136;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_14_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_14_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_14_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_14_d0 = tmp_43_13_fu_6242_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_14_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd14)))) begin
        buffer1_1_96_4x4_p_V_14_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd14))) begin
        buffer1_1_96_4x4_p_V_14_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_15_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_15_address0 = buffer1_1_96_4x4_p_V_305_reg_8141;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_15_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_15_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_15_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_15_d0 = tmp_43_14_fu_6272_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_15_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd15)))) begin
        buffer1_1_96_4x4_p_V_15_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd15))) begin
        buffer1_1_96_4x4_p_V_15_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_16_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_16_address0 = buffer1_1_96_4x4_p_V_291_reg_8071;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_16_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_16_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_16_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_16_d0 = tmp_43_15_fu_6302_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_16_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd16)))) begin
        buffer1_1_96_4x4_p_V_16_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd16))) begin
        buffer1_1_96_4x4_p_V_16_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_17_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_17_address0 = buffer1_1_96_4x4_p_V_290_reg_8066;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_17_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_17_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_17_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_17_d0 = tmp_43_16_fu_6332_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_17_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd17)))) begin
        buffer1_1_96_4x4_p_V_17_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd17))) begin
        buffer1_1_96_4x4_p_V_17_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_18_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_18_address0 = buffer1_1_96_4x4_p_V_289_reg_8061;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_18_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_18_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_18_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_18_d0 = tmp_43_17_fu_6362_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_18_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd18)))) begin
        buffer1_1_96_4x4_p_V_18_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd18))) begin
        buffer1_1_96_4x4_p_V_18_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_19_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_19_address0 = buffer1_1_96_4x4_p_V_293_reg_8081;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_19_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_19_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_19_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_19_d0 = tmp_43_18_fu_6392_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_19_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd19)))) begin
        buffer1_1_96_4x4_p_V_19_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd19))) begin
        buffer1_1_96_4x4_p_V_19_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_1_address0 = buffer1_1_96_4x4_p_V_294_reg_8086;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_1_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_1_d0 = tmp_43_1_fu_5852_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd1)))) begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd1))) begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_20_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_20_address0 = buffer1_1_96_4x4_p_V_295_reg_8091;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_20_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_20_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_20_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_20_d0 = tmp_43_19_fu_6422_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_20_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd20)))) begin
        buffer1_1_96_4x4_p_V_20_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd20))) begin
        buffer1_1_96_4x4_p_V_20_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_21_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_21_address0 = buffer1_1_96_4x4_p_V_296_reg_8096;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_21_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_21_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_21_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_21_d0 = tmp_43_20_fu_6452_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_21_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd21)))) begin
        buffer1_1_96_4x4_p_V_21_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd21))) begin
        buffer1_1_96_4x4_p_V_21_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_22_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_22_address0 = buffer1_1_96_4x4_p_V_301_reg_8121;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_22_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_22_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_22_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_22_d0 = tmp_43_21_fu_6482_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_22_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd22)))) begin
        buffer1_1_96_4x4_p_V_22_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd22))) begin
        buffer1_1_96_4x4_p_V_22_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_23_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_23_address0 = buffer1_1_96_4x4_p_V_302_reg_8126;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_23_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_23_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_23_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_23_d0 = tmp_43_22_fu_6512_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_23_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd23)))) begin
        buffer1_1_96_4x4_p_V_23_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd23))) begin
        buffer1_1_96_4x4_p_V_23_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_24_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_24_address0 = buffer1_1_96_4x4_p_V_401_reg_8676;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_24_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_24_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_24_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_24_d0 = tmp_27_fu_6822_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_24_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd24)))) begin
        buffer1_1_96_4x4_p_V_24_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd24))) begin
        buffer1_1_96_4x4_p_V_24_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_25_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_25_address0 = buffer1_1_96_4x4_p_V_400_reg_8671;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_25_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_25_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_25_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_25_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_25_d0 = tmp_49_1_fu_6852_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_25_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_25_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd25)))) begin
        buffer1_1_96_4x4_p_V_25_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd25))) begin
        buffer1_1_96_4x4_p_V_25_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_26_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_26_address0 = buffer1_1_96_4x4_p_V_402_reg_8681;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_26_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_26_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_26_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_26_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_26_d0 = tmp_49_2_fu_6882_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_26_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_26_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd26)))) begin
        buffer1_1_96_4x4_p_V_26_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd26))) begin
        buffer1_1_96_4x4_p_V_26_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_27_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_27_address0 = buffer1_1_96_4x4_p_V_403_reg_8686;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_27_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_27_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_27_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_27_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_27_d0 = tmp_49_3_fu_6912_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_27_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_27_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd27)))) begin
        buffer1_1_96_4x4_p_V_27_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd27))) begin
        buffer1_1_96_4x4_p_V_27_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_28_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_28_address0 = buffer1_1_96_4x4_p_V_395_reg_8646;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_28_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_28_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_28_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_28_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_28_d0 = tmp_49_4_fu_6942_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_28_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_28_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd28)))) begin
        buffer1_1_96_4x4_p_V_28_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd28))) begin
        buffer1_1_96_4x4_p_V_28_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_29_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_29_address0 = buffer1_1_96_4x4_p_V_399_reg_8666;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_29_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_29_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_29_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_29_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_29_d0 = tmp_49_5_fu_6972_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_29_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_29_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd29)))) begin
        buffer1_1_96_4x4_p_V_29_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd29))) begin
        buffer1_1_96_4x4_p_V_29_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_2_address0 = buffer1_1_96_4x4_p_V_292_reg_8076;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_2_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_2_d0 = tmp_43_2_fu_5882_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd2)))) begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd2))) begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_30_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_30_address0 = buffer1_1_96_4x4_p_V_396_reg_8651;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_30_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_30_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_30_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_30_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_30_d0 = tmp_49_6_fu_7002_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_30_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_30_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd30)))) begin
        buffer1_1_96_4x4_p_V_30_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd30))) begin
        buffer1_1_96_4x4_p_V_30_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_31_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_31_address0 = buffer1_1_96_4x4_p_V_423_reg_8786;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_31_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_31_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_31_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_31_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_31_d0 = tmp_49_7_fu_7032_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_31_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_31_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd31)))) begin
        buffer1_1_96_4x4_p_V_31_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd31))) begin
        buffer1_1_96_4x4_p_V_31_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_32_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_32_address0 = buffer1_1_96_4x4_p_V_408_reg_8711;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_32_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_32_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_32_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_32_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_32_d0 = tmp_49_8_fu_7062_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_32_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_32_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd32)))) begin
        buffer1_1_96_4x4_p_V_32_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd32))) begin
        buffer1_1_96_4x4_p_V_32_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_32_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_33_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_33_address0 = buffer1_1_96_4x4_p_V_424_reg_8791;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_33_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_33_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_33_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_33_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_33_d0 = tmp_49_9_fu_7092_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_33_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_33_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd33)))) begin
        buffer1_1_96_4x4_p_V_33_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd33))) begin
        buffer1_1_96_4x4_p_V_33_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_33_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_34_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_34_address0 = buffer1_1_96_4x4_p_V_407_reg_8706;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_34_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_34_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_34_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_34_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_34_d0 = tmp_49_s_fu_7122_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_34_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_34_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd34)))) begin
        buffer1_1_96_4x4_p_V_34_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd34))) begin
        buffer1_1_96_4x4_p_V_34_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_34_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_35_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_35_address0 = buffer1_1_96_4x4_p_V_404_reg_8691;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_35_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_35_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_35_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_35_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_35_d0 = tmp_49_10_fu_7152_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_35_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_35_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd35)))) begin
        buffer1_1_96_4x4_p_V_35_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd35))) begin
        buffer1_1_96_4x4_p_V_35_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_35_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_36_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_36_address0 = buffer1_1_96_4x4_p_V_413_reg_8736;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_36_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_36_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_36_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_36_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_36_d0 = tmp_49_11_fu_7182_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_36_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_36_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd36)))) begin
        buffer1_1_96_4x4_p_V_36_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd36))) begin
        buffer1_1_96_4x4_p_V_36_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_36_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_37_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_37_address0 = buffer1_1_96_4x4_p_V_415_reg_8746;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_37_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_37_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_37_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_37_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_37_d0 = tmp_49_12_fu_7212_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_37_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_37_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd37)))) begin
        buffer1_1_96_4x4_p_V_37_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd37))) begin
        buffer1_1_96_4x4_p_V_37_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_37_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_38_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_38_address0 = buffer1_1_96_4x4_p_V_414_reg_8741;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_38_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_38_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_38_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_38_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_38_d0 = tmp_49_13_fu_7242_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_38_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_38_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd38)))) begin
        buffer1_1_96_4x4_p_V_38_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd38))) begin
        buffer1_1_96_4x4_p_V_38_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_38_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_39_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_39_address0 = buffer1_1_96_4x4_p_V_405_reg_8696;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_39_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_39_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_39_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_39_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_39_d0 = tmp_49_14_fu_7272_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_39_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_39_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd39)))) begin
        buffer1_1_96_4x4_p_V_39_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd39))) begin
        buffer1_1_96_4x4_p_V_39_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_39_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_3_address0 = buffer1_1_96_4x4_p_V_303_reg_8131;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_3_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_3_d0 = tmp_43_3_fu_5912_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd3)))) begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd3))) begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_40_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_40_address0 = buffer1_1_96_4x4_p_V_398_reg_8661;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_40_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_40_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_40_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_40_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_40_d0 = tmp_49_15_fu_7302_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_40_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_40_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd40)))) begin
        buffer1_1_96_4x4_p_V_40_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd40))) begin
        buffer1_1_96_4x4_p_V_40_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_40_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_41_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_41_address0 = buffer1_1_96_4x4_p_V_409_reg_8716;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_41_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_41_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_41_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_41_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_41_d0 = tmp_49_16_fu_7332_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_41_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_41_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd41)))) begin
        buffer1_1_96_4x4_p_V_41_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd41))) begin
        buffer1_1_96_4x4_p_V_41_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_41_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_42_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_42_address0 = buffer1_1_96_4x4_p_V_397_reg_8656;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_42_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_42_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_42_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_42_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_42_d0 = tmp_49_17_fu_7362_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_42_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_42_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd42)))) begin
        buffer1_1_96_4x4_p_V_42_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd42))) begin
        buffer1_1_96_4x4_p_V_42_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_42_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_43_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_43_address0 = buffer1_1_96_4x4_p_V_410_reg_8721;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_43_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_43_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_43_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_43_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_43_d0 = tmp_49_18_fu_7392_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_43_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_43_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd43)))) begin
        buffer1_1_96_4x4_p_V_43_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd43))) begin
        buffer1_1_96_4x4_p_V_43_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_43_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_44_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_44_address0 = buffer1_1_96_4x4_p_V_412_reg_8731;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_44_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_44_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_44_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_44_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_44_d0 = tmp_49_19_fu_7422_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_44_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_44_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd44)))) begin
        buffer1_1_96_4x4_p_V_44_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd44))) begin
        buffer1_1_96_4x4_p_V_44_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_44_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_45_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_45_address0 = buffer1_1_96_4x4_p_V_406_reg_8701;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_45_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_45_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_45_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_45_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_45_d0 = tmp_49_20_fu_7452_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_45_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_45_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd45)))) begin
        buffer1_1_96_4x4_p_V_45_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd45))) begin
        buffer1_1_96_4x4_p_V_45_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_45_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_46_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_46_address0 = buffer1_1_96_4x4_p_V_411_reg_8726;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_46_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_46_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_46_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_46_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_46_d0 = tmp_49_21_fu_7482_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_46_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_46_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd46)))) begin
        buffer1_1_96_4x4_p_V_46_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd46))) begin
        buffer1_1_96_4x4_p_V_46_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_46_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_47_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_47_address0 = buffer1_1_96_4x4_p_V_425_reg_8796;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_47_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_47_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_47_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_47_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_47_d0 = tmp_49_22_fu_7512_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_47_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_47_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd47)))) begin
        buffer1_1_96_4x4_p_V_47_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd47))) begin
        buffer1_1_96_4x4_p_V_47_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_47_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_48_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_48_address0 = buffer1_1_96_4x4_p_V_308_reg_8156;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_48_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_48_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_48_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_48_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_48_d0 = tmp_25_fu_5833_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_48_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_48_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd48)))) begin
        buffer1_1_96_4x4_p_V_48_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd48))) begin
        buffer1_1_96_4x4_p_V_48_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_48_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_49_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_49_address0 = buffer1_1_96_4x4_p_V_306_reg_8146;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_49_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_49_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_49_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_49_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_49_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_49_d0 = tmp_45_1_fu_5863_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_49_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_49_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd49)))) begin
        buffer1_1_96_4x4_p_V_49_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd49))) begin
        buffer1_1_96_4x4_p_V_49_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_49_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_4_address0 = buffer1_1_96_4x4_p_V_307_reg_8151;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_4_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_4_d0 = tmp_43_4_fu_5942_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd4)))) begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd4))) begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_50_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_50_address0 = buffer1_1_96_4x4_p_V_310_reg_8166;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_50_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_50_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_50_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_50_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_50_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_50_d0 = tmp_45_2_fu_5893_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_50_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_50_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd50)))) begin
        buffer1_1_96_4x4_p_V_50_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd50))) begin
        buffer1_1_96_4x4_p_V_50_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_50_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_51_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_51_address0 = buffer1_1_96_4x4_p_V_325_reg_8241;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_51_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_51_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_51_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_51_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_51_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_51_d0 = tmp_45_3_fu_5923_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_51_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_51_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd51)))) begin
        buffer1_1_96_4x4_p_V_51_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd51))) begin
        buffer1_1_96_4x4_p_V_51_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_51_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_52_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_52_address0 = buffer1_1_96_4x4_p_V_314_reg_8186;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_52_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_52_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_52_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_52_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_52_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_52_d0 = tmp_45_4_fu_5953_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_52_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_52_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd52)))) begin
        buffer1_1_96_4x4_p_V_52_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd52))) begin
        buffer1_1_96_4x4_p_V_52_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_52_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_53_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_53_address0 = buffer1_1_96_4x4_p_V_318_reg_8206;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_53_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_53_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_53_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_53_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_53_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_53_d0 = tmp_45_5_fu_5983_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_53_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_53_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd53)))) begin
        buffer1_1_96_4x4_p_V_53_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd53))) begin
        buffer1_1_96_4x4_p_V_53_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_53_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_54_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_54_address0 = buffer1_1_96_4x4_p_V_317_reg_8201;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_54_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_54_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_54_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_54_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_54_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_54_d0 = tmp_45_6_fu_6013_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_54_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_54_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd54)))) begin
        buffer1_1_96_4x4_p_V_54_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd54))) begin
        buffer1_1_96_4x4_p_V_54_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_54_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_55_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_55_address0 = buffer1_1_96_4x4_p_V_319_reg_8211;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_55_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_55_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_55_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_55_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_55_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_55_d0 = tmp_45_7_fu_6043_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_55_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_55_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd55)))) begin
        buffer1_1_96_4x4_p_V_55_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd55))) begin
        buffer1_1_96_4x4_p_V_55_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_55_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_56_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_56_address0 = buffer1_1_96_4x4_p_V_315_reg_8191;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_56_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_56_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_56_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_56_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_56_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_56_d0 = tmp_45_8_fu_6073_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_56_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_56_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd56)))) begin
        buffer1_1_96_4x4_p_V_56_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd56))) begin
        buffer1_1_96_4x4_p_V_56_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_56_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_57_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_57_address0 = buffer1_1_96_4x4_p_V_312_reg_8176;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_57_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_57_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_57_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_57_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_57_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_57_d0 = tmp_45_9_fu_6103_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_57_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_57_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd57)))) begin
        buffer1_1_96_4x4_p_V_57_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd57))) begin
        buffer1_1_96_4x4_p_V_57_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_57_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_58_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_58_address0 = buffer1_1_96_4x4_p_V_313_reg_8181;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_58_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_58_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_58_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_58_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_58_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_58_d0 = tmp_45_s_fu_6133_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_58_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_58_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd58)))) begin
        buffer1_1_96_4x4_p_V_58_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd58))) begin
        buffer1_1_96_4x4_p_V_58_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_58_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_59_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_59_address0 = buffer1_1_96_4x4_p_V_316_reg_8196;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_59_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_59_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_59_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_59_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_59_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_59_d0 = tmp_45_10_fu_6163_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_59_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_59_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd59)))) begin
        buffer1_1_96_4x4_p_V_59_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd59))) begin
        buffer1_1_96_4x4_p_V_59_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_59_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_5_address0 = buffer1_1_96_4x4_p_V_311_reg_8171;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_5_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_5_d0 = tmp_43_5_fu_5972_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd5)))) begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd5))) begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_60_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_60_address0 = buffer1_1_96_4x4_p_V_333_reg_8281;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_60_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_60_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_60_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_60_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_60_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_60_d0 = tmp_45_11_fu_6193_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_60_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_60_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd60)))) begin
        buffer1_1_96_4x4_p_V_60_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_60_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd60))) begin
        buffer1_1_96_4x4_p_V_60_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_60_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_61_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_61_address0 = buffer1_1_96_4x4_p_V_330_reg_8266;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_61_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_61_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_61_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_61_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_61_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_61_d0 = tmp_45_12_fu_6223_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_61_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_61_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd61)))) begin
        buffer1_1_96_4x4_p_V_61_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_61_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd61))) begin
        buffer1_1_96_4x4_p_V_61_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_61_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_62_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_62_address0 = buffer1_1_96_4x4_p_V_331_reg_8271;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_62_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_62_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_62_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_62_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_62_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_62_d0 = tmp_45_13_fu_6253_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_62_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_62_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd62)))) begin
        buffer1_1_96_4x4_p_V_62_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_62_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd62))) begin
        buffer1_1_96_4x4_p_V_62_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_62_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_63_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_63_address0 = buffer1_1_96_4x4_p_V_334_reg_8286;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_63_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_63_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_63_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_63_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_63_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_63_d0 = tmp_45_14_fu_6283_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_63_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_63_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd63)))) begin
        buffer1_1_96_4x4_p_V_63_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_63_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd63))) begin
        buffer1_1_96_4x4_p_V_63_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_63_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_64_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_64_address0 = buffer1_1_96_4x4_p_V_327_reg_8251;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_64_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_64_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_64_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_64_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_64_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_64_d0 = tmp_45_15_fu_6313_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_64_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_64_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd64)))) begin
        buffer1_1_96_4x4_p_V_64_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_64_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd64))) begin
        buffer1_1_96_4x4_p_V_64_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_64_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_65_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_65_address0 = buffer1_1_96_4x4_p_V_328_reg_8256;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_65_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_65_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_65_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_65_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_65_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_65_d0 = tmp_45_16_fu_6343_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_65_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_65_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd65)))) begin
        buffer1_1_96_4x4_p_V_65_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_65_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd65))) begin
        buffer1_1_96_4x4_p_V_65_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_65_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_66_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_66_address0 = buffer1_1_96_4x4_p_V_329_reg_8261;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_66_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_66_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_66_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_66_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_66_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_66_d0 = tmp_45_17_fu_6373_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_66_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_66_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd66)))) begin
        buffer1_1_96_4x4_p_V_66_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_66_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd66))) begin
        buffer1_1_96_4x4_p_V_66_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_66_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_67_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_67_address0 = buffer1_1_96_4x4_p_V_326_reg_8246;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_67_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_67_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_67_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_67_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_67_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_67_d0 = tmp_45_18_fu_6403_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_67_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_67_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd67)))) begin
        buffer1_1_96_4x4_p_V_67_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_67_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd67))) begin
        buffer1_1_96_4x4_p_V_67_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_67_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_68_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_68_address0 = buffer1_1_96_4x4_p_V_323_reg_8231;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_68_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_68_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_68_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_68_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_68_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_68_d0 = tmp_45_19_fu_6433_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_68_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_68_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd68)))) begin
        buffer1_1_96_4x4_p_V_68_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_68_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd68))) begin
        buffer1_1_96_4x4_p_V_68_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_68_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_69_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_69_address0 = buffer1_1_96_4x4_p_V_320_reg_8216;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_69_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_69_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_69_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_69_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_69_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_69_d0 = tmp_45_20_fu_6463_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_69_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_69_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd69)))) begin
        buffer1_1_96_4x4_p_V_69_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_69_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd69))) begin
        buffer1_1_96_4x4_p_V_69_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_69_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_6_address0 = buffer1_1_96_4x4_p_V_309_reg_8161;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_6_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_6_d0 = tmp_43_6_fu_6002_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd6)))) begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd6))) begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_70_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_70_address0 = buffer1_1_96_4x4_p_V_321_reg_8221;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_70_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_70_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_70_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_70_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_70_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_70_d0 = tmp_45_21_fu_6493_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_70_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_70_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd70)))) begin
        buffer1_1_96_4x4_p_V_70_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_70_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd70))) begin
        buffer1_1_96_4x4_p_V_70_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_70_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_71_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_71_address0 = buffer1_1_96_4x4_p_V_324_reg_8236;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_71_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_71_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_71_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_71_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_71_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_71_d0 = tmp_45_22_fu_6523_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_71_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_71_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd71)))) begin
        buffer1_1_96_4x4_p_V_71_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_71_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd71))) begin
        buffer1_1_96_4x4_p_V_71_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_71_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_72_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_72_address0 = buffer1_1_96_4x4_p_V_422_reg_8781;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_72_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_72_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_72_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_72_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_72_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_72_d0 = tmp_29_fu_6833_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_72_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_72_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd72)))) begin
        buffer1_1_96_4x4_p_V_72_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_72_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd72))) begin
        buffer1_1_96_4x4_p_V_72_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_72_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_73_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_73_address0 = buffer1_1_96_4x4_p_V_420_reg_8771;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_73_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_73_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_73_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_73_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_73_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_73_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_73_d0 = tmp_51_1_fu_6863_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_73_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_73_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd73)))) begin
        buffer1_1_96_4x4_p_V_73_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_73_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd73))) begin
        buffer1_1_96_4x4_p_V_73_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_73_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_74_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_74_address0 = buffer1_1_96_4x4_p_V_421_reg_8776;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_74_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_74_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_74_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_74_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_74_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_74_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_74_d0 = tmp_51_2_fu_6893_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_74_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_74_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd74)))) begin
        buffer1_1_96_4x4_p_V_74_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_74_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd74))) begin
        buffer1_1_96_4x4_p_V_74_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_74_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_75_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_75_address0 = buffer1_1_96_4x4_p_V_417_reg_8756;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_75_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_75_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_75_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_75_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_75_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_75_d0 = tmp_51_3_fu_6923_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_75_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_75_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd75)))) begin
        buffer1_1_96_4x4_p_V_75_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_75_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd75))) begin
        buffer1_1_96_4x4_p_V_75_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_75_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_76_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_76_address0 = buffer1_1_96_4x4_p_V_418_reg_8761;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_76_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_76_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_76_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_76_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_76_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_76_d0 = tmp_51_4_fu_6953_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_76_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_76_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd76)))) begin
        buffer1_1_96_4x4_p_V_76_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_76_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd76))) begin
        buffer1_1_96_4x4_p_V_76_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_76_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_77_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_77_address0 = buffer1_1_96_4x4_p_V_416_reg_8751;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_77_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_77_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_77_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_77_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_77_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_77_d0 = tmp_51_5_fu_6983_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_77_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_77_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd77)))) begin
        buffer1_1_96_4x4_p_V_77_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_77_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd77))) begin
        buffer1_1_96_4x4_p_V_77_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_77_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_78_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_78_address0 = buffer1_1_96_4x4_p_V_419_reg_8766;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_78_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_78_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_78_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_78_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_78_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_78_d0 = tmp_51_6_fu_7013_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_78_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_78_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd78)))) begin
        buffer1_1_96_4x4_p_V_78_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_78_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd78))) begin
        buffer1_1_96_4x4_p_V_78_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_78_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_79_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_79_address0 = buffer1_1_96_4x4_p_V_430_reg_8821;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_79_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_79_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_79_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_79_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_79_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_79_d0 = tmp_51_7_fu_7043_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_79_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_79_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd79)))) begin
        buffer1_1_96_4x4_p_V_79_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_79_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd79))) begin
        buffer1_1_96_4x4_p_V_79_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_79_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_7_address0 = buffer1_1_96_4x4_p_V_322_reg_8226;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_7_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_7_d0 = tmp_43_7_fu_6032_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd7)))) begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd7))) begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_80_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_80_address0 = buffer1_1_96_4x4_p_V_429_reg_8816;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_80_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_80_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_80_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_80_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_80_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_80_d0 = tmp_51_8_fu_7073_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_80_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_80_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd80)))) begin
        buffer1_1_96_4x4_p_V_80_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_80_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd80))) begin
        buffer1_1_96_4x4_p_V_80_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_80_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_81_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_81_address0 = buffer1_1_96_4x4_p_V_428_reg_8811;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_81_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_81_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_81_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_81_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_81_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_81_d0 = tmp_51_9_fu_7103_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_81_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_81_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd81)))) begin
        buffer1_1_96_4x4_p_V_81_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_81_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd81))) begin
        buffer1_1_96_4x4_p_V_81_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_81_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_82_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_82_address0 = buffer1_1_96_4x4_p_V_427_reg_8806;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_82_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_82_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_82_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_82_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_82_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_82_d0 = tmp_51_s_fu_7133_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_82_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_82_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd82)))) begin
        buffer1_1_96_4x4_p_V_82_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_82_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd82))) begin
        buffer1_1_96_4x4_p_V_82_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_82_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_83_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_83_address0 = buffer1_1_96_4x4_p_V_386_reg_8601;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_83_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_83_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_83_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_83_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_83_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_83_d0 = tmp_51_10_fu_7163_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_83_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_83_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd83)))) begin
        buffer1_1_96_4x4_p_V_83_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_83_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd83))) begin
        buffer1_1_96_4x4_p_V_83_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_83_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_84_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_84_address0 = buffer1_1_96_4x4_p_V_392_reg_8631;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_84_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_84_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_84_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_84_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_84_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_84_d0 = tmp_51_11_fu_7193_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_84_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_84_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd84)))) begin
        buffer1_1_96_4x4_p_V_84_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_84_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd84))) begin
        buffer1_1_96_4x4_p_V_84_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_84_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_85_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_85_address0 = buffer1_1_96_4x4_p_V_394_reg_8641;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_85_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_85_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_85_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_85_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_85_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_85_d0 = tmp_51_12_fu_7223_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_85_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_85_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd85)))) begin
        buffer1_1_96_4x4_p_V_85_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_85_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd85))) begin
        buffer1_1_96_4x4_p_V_85_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_85_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_86_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_86_address0 = buffer1_1_96_4x4_p_V_387_reg_8606;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_86_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_86_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_86_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_86_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_86_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_86_d0 = tmp_51_13_fu_7253_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_86_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_86_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd86)))) begin
        buffer1_1_96_4x4_p_V_86_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_86_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd86))) begin
        buffer1_1_96_4x4_p_V_86_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_86_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_87_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_87_address0 = buffer1_1_96_4x4_p_V_391_reg_8626;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_87_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_87_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_87_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_87_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_87_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_87_d0 = tmp_51_14_fu_7283_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_87_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_87_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd87)))) begin
        buffer1_1_96_4x4_p_V_87_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_87_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd87))) begin
        buffer1_1_96_4x4_p_V_87_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_87_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_88_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_88_address0 = buffer1_1_96_4x4_p_V_388_reg_8611;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_88_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_88_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_88_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_88_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_88_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_88_d0 = tmp_51_15_fu_7313_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_88_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_88_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd88)))) begin
        buffer1_1_96_4x4_p_V_88_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_88_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd88))) begin
        buffer1_1_96_4x4_p_V_88_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_88_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_89_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_89_address0 = buffer1_1_96_4x4_p_V_389_reg_8616;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_89_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_89_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_89_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_89_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_89_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_89_d0 = tmp_51_16_fu_7343_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_89_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_89_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd89)))) begin
        buffer1_1_96_4x4_p_V_89_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_89_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd89))) begin
        buffer1_1_96_4x4_p_V_89_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_89_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_8_address0 = buffer1_1_96_4x4_p_V_332_reg_8276;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_8_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_8_d0 = tmp_43_8_fu_6062_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd8)))) begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd8))) begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_90_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_90_address0 = buffer1_1_96_4x4_p_V_385_reg_8596;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_90_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_90_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_90_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_90_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_90_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_90_d0 = tmp_51_17_fu_7373_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_90_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_90_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd90)))) begin
        buffer1_1_96_4x4_p_V_90_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_90_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd90))) begin
        buffer1_1_96_4x4_p_V_90_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_90_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_91_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_91_address0 = buffer1_1_96_4x4_p_V_390_reg_8621;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_91_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_91_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_91_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_91_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_91_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_91_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_91_d0 = tmp_51_18_fu_7403_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_91_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_91_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd91)))) begin
        buffer1_1_96_4x4_p_V_91_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_91_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd91))) begin
        buffer1_1_96_4x4_p_V_91_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_91_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_92_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_92_address0 = buffer1_1_96_4x4_p_V_393_reg_8636;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_92_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_92_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_92_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_92_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_92_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_92_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_92_d0 = tmp_51_19_fu_7433_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_92_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_92_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd92)))) begin
        buffer1_1_96_4x4_p_V_92_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_92_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd92))) begin
        buffer1_1_96_4x4_p_V_92_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_92_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_93_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_93_address0 = buffer1_1_96_4x4_p_V_384_reg_8591;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_93_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_93_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_93_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_93_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_93_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_93_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_93_d0 = tmp_51_20_fu_7463_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_93_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_93_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd93)))) begin
        buffer1_1_96_4x4_p_V_93_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_93_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd93))) begin
        buffer1_1_96_4x4_p_V_93_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_93_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_94_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_94_address0 = buffer1_1_96_4x4_p_V_426_reg_8801;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_94_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_94_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_94_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_94_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_94_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_94_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_94_d0 = tmp_51_21_fu_7493_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_94_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_94_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd94)))) begin
        buffer1_1_96_4x4_p_V_94_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_94_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd94))) begin
        buffer1_1_96_4x4_p_V_94_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_94_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_95_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        buffer1_1_96_4x4_p_V_95_address0 = buffer1_1_96_4x4_p_V_383_reg_8586;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_95_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_95_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_95_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_95_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_95_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_95_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        buffer1_1_96_4x4_p_V_95_d0 = tmp_51_22_fu_7523_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_95_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_95_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast_mid2_v_reg_7996 == 7'd0) & ~(co_cast_mid2_v_reg_7996 == 7'd1) & ~(co_cast_mid2_v_reg_7996 == 7'd2) & ~(co_cast_mid2_v_reg_7996 == 7'd3) & ~(co_cast_mid2_v_reg_7996 == 7'd4) & ~(co_cast_mid2_v_reg_7996 == 7'd5) & ~(co_cast_mid2_v_reg_7996 == 7'd6) & ~(co_cast_mid2_v_reg_7996 == 7'd7) & ~(co_cast_mid2_v_reg_7996 == 7'd8) & ~(co_cast_mid2_v_reg_7996 == 7'd9) & ~(co_cast_mid2_v_reg_7996 == 7'd10) & ~(co_cast_mid2_v_reg_7996 == 7'd11) & ~(co_cast_mid2_v_reg_7996 == 7'd12) & ~(co_cast_mid2_v_reg_7996 == 7'd13) & ~(co_cast_mid2_v_reg_7996 == 7'd14) & ~(co_cast_mid2_v_reg_7996 == 7'd15) & ~(co_cast_mid2_v_reg_7996 == 7'd16) & ~(co_cast_mid2_v_reg_7996 == 7'd17) & ~(co_cast_mid2_v_reg_7996 == 7'd18) & ~(co_cast_mid2_v_reg_7996 == 7'd19) & ~(co_cast_mid2_v_reg_7996 == 7'd20) & ~(co_cast_mid2_v_reg_7996 == 7'd21) & ~(co_cast_mid2_v_reg_7996 == 7'd22) & ~(co_cast_mid2_v_reg_7996 == 7'd23) & ~(co_cast_mid2_v_reg_7996 == 7'd24) & ~(co_cast_mid2_v_reg_7996 == 7'd25) & ~(co_cast_mid2_v_reg_7996 == 7'd26) & ~(co_cast_mid2_v_reg_7996 == 7'd27) & ~(co_cast_mid2_v_reg_7996 == 7'd28) & ~(co_cast_mid2_v_reg_7996 == 7'd29) & ~(co_cast_mid2_v_reg_7996 == 7'd30) & ~(co_cast_mid2_v_reg_7996 == 7'd31) & ~(co_cast_mid2_v_reg_7996 == 7'd32) & ~(co_cast_mid2_v_reg_7996 == 7'd33) & ~(co_cast_mid2_v_reg_7996 == 7'd34) & ~(co_cast_mid2_v_reg_7996 == 7'd35) & ~(co_cast_mid2_v_reg_7996 == 7'd36) & ~(co_cast_mid2_v_reg_7996 == 7'd37) & ~(co_cast_mid2_v_reg_7996 == 7'd38) & ~(co_cast_mid2_v_reg_7996 == 7'd39) & ~(co_cast_mid2_v_reg_7996 == 7'd40) & ~(co_cast_mid2_v_reg_7996 == 7'd41) & ~(co_cast_mid2_v_reg_7996 == 7'd42) & ~(co_cast_mid2_v_reg_7996 == 7'd43) & ~(co_cast_mid2_v_reg_7996 == 7'd44) & ~(co_cast_mid2_v_reg_7996 == 7'd45) & ~(co_cast_mid2_v_reg_7996 == 7'd46) & ~(co_cast_mid2_v_reg_7996 == 7'd47) & ~(co_cast_mid2_v_reg_7996 == 7'd48) & ~(co_cast_mid2_v_reg_7996 == 7'd49) & ~(co_cast_mid2_v_reg_7996 == 7'd50) & ~(co_cast_mid2_v_reg_7996 == 7'd51) & ~(co_cast_mid2_v_reg_7996 == 7'd52) & ~(co_cast_mid2_v_reg_7996 == 7'd53) & ~(co_cast_mid2_v_reg_7996 == 7'd54) & ~(co_cast_mid2_v_reg_7996 == 7'd55) & ~(co_cast_mid2_v_reg_7996 == 7'd56) & ~(co_cast_mid2_v_reg_7996 == 7'd57) & ~(co_cast_mid2_v_reg_7996 == 7'd58) & ~(co_cast_mid2_v_reg_7996 == 7'd59) & ~(co_cast_mid2_v_reg_7996 == 7'd60) & ~(co_cast_mid2_v_reg_7996 == 7'd61) & ~(co_cast_mid2_v_reg_7996 == 7'd62) & ~(co_cast_mid2_v_reg_7996 == 7'd63) & ~(co_cast_mid2_v_reg_7996 == 7'd64) & ~(co_cast_mid2_v_reg_7996 == 7'd65) & ~(co_cast_mid2_v_reg_7996 == 7'd66) & ~(co_cast_mid2_v_reg_7996 == 7'd67) & ~(co_cast_mid2_v_reg_7996 == 7'd68) & ~(co_cast_mid2_v_reg_7996 == 7'd69) & ~(co_cast_mid2_v_reg_7996 == 7'd70) & ~(co_cast_mid2_v_reg_7996 == 7'd71) & ~(co_cast_mid2_v_reg_7996 == 7'd72) & ~(co_cast_mid2_v_reg_7996 == 7'd73) & ~(co_cast_mid2_v_reg_7996 == 7'd74) & ~(co_cast_mid2_v_reg_7996 == 7'd75) & ~(co_cast_mid2_v_reg_7996 == 7'd76) & ~(co_cast_mid2_v_reg_7996 == 7'd77) & ~(co_cast_mid2_v_reg_7996 == 7'd78) & ~(co_cast_mid2_v_reg_7996 == 7'd79) & ~(co_cast_mid2_v_reg_7996 == 7'd80) & ~(co_cast_mid2_v_reg_7996 == 7'd81) & ~(co_cast_mid2_v_reg_7996 == 7'd82) & ~(co_cast_mid2_v_reg_7996 == 7'd83) & ~(co_cast_mid2_v_reg_7996 == 7'd84) & ~(co_cast_mid2_v_reg_7996 == 7'd85) & ~(co_cast_mid2_v_reg_7996 == 7'd86) & ~(co_cast_mid2_v_reg_7996 == 7'd87) & ~(co_cast_mid2_v_reg_7996 == 7'd88) & ~(co_cast_mid2_v_reg_7996 == 7'd89) & ~(co_cast_mid2_v_reg_7996 == 7'd90) & ~(co_cast_mid2_v_reg_7996 == 7'd91) & ~(co_cast_mid2_v_reg_7996 == 7'd92) & ~(co_cast_mid2_v_reg_7996 == 7'd93) & ~(co_cast_mid2_v_reg_7996 == 7'd94)))) begin
        buffer1_1_96_4x4_p_V_95_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_95_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd0) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd1) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd2) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd3) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd4) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd5) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd6) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd7) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd8) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd9) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd10) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd11) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd12) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd13) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd14) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd15) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd16) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd17) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd18) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd19) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd20) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd21) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd22) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd23) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd24) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd25) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd26) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd27) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd28) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd29) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd30) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd31) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd32) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd33) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd34) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd35) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd36) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd37) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd38) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd39) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd40) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd41) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd42) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd43) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd44) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd45) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd46) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd47) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd48) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd49) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd50) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd51) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd52) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd53) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd54) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd55) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd56) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd57) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd58) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd59) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd60) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd61) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd62) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd63) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd64) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd65) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd66) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd67) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd68) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd69) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd70) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd71) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd72) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd73) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd74) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd75) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd76) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd77) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd78) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd79) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd80) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd81) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd82) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd83) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd84) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd85) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd86) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd87) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd88) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd89) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd90) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd91) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd92) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd93) & ~(ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd94))) begin
        buffer1_1_96_4x4_p_V_95_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_95_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_96_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_96_address0 = buffer1_1_96_4x4_p_V_297_reg_8101;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_96_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_96_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_96_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_96_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_96_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_96_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_96_d0 = tmp_23_fu_5822_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_96_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_96_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd0)))) begin
        buffer1_1_96_4x4_p_V_96_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_96_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd0))) begin
        buffer1_1_96_4x4_p_V_96_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_96_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_9_address0 = tmp_294_cast_fu_7669_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_96_4x4_p_V_9_address0 = buffer1_1_96_4x4_p_V_287_reg_8051;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_9_address0 = tmp_271_cast_fu_5430_p1;
    end else begin
        buffer1_1_96_4x4_p_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        buffer1_1_96_4x4_p_V_9_ce0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_96_4x4_p_V_9_ce1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_96_4x4_p_V_9_d0 = tmp_43_9_fu_6092_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_96_4x4_p_V_9_d0 = bias_V_q0;
    end else begin
        buffer1_1_96_4x4_p_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_7996 == 7'd9)))) begin
        buffer1_1_96_4x4_p_V_9_we0 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_271_fu_7966_p3) & (ap_reg_pp1_iter2_co8_mid2_reg_9114 == 7'd9))) begin
        buffer1_1_96_4x4_p_V_9_we1 = 1'b1;
    end else begin
        buffer1_1_96_4x4_p_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co8_phi_fu_4951_p4 = co8_mid2_reg_9114;
    end else begin
        co8_phi_fu_4951_p4 = co8_reg_4947;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_4823_p4 = co_cast_mid2_v_reg_7996;
    end else begin
        co_phi_fu_4823_p4 = co_reg_4819;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_4994_a_V = weight_24_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_4994_a_V = weight_0_V_q0;
    end else begin
        grp_MUL_DP_fu_4994_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_4994_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_4994_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_4994_b_V = weight_72_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_4994_b_V = weight_48_V_q0;
    end else begin
        grp_MUL_DP_fu_4994_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5003_a_V = weight_25_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5003_a_V = weight_1_V_q0;
    end else begin
        grp_MUL_DP_fu_5003_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5003_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5003_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5003_b_V = weight_73_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5003_b_V = weight_49_V_q0;
    end else begin
        grp_MUL_DP_fu_5003_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5012_a_V = weight_26_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5012_a_V = weight_2_V_q0;
    end else begin
        grp_MUL_DP_fu_5012_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5012_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5012_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5012_b_V = weight_74_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5012_b_V = weight_50_V_q0;
    end else begin
        grp_MUL_DP_fu_5012_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5021_a_V = weight_27_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5021_a_V = weight_3_V_q0;
    end else begin
        grp_MUL_DP_fu_5021_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5021_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5021_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5021_b_V = weight_75_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5021_b_V = weight_51_V_q0;
    end else begin
        grp_MUL_DP_fu_5021_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5030_a_V = weight_28_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5030_a_V = weight_4_V_q0;
    end else begin
        grp_MUL_DP_fu_5030_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5030_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5030_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5030_b_V = weight_76_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5030_b_V = weight_52_V_q0;
    end else begin
        grp_MUL_DP_fu_5030_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5039_a_V = weight_29_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5039_a_V = weight_5_V_q0;
    end else begin
        grp_MUL_DP_fu_5039_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5039_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5039_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5039_b_V = weight_77_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5039_b_V = weight_53_V_q0;
    end else begin
        grp_MUL_DP_fu_5039_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5048_a_V = weight_30_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5048_a_V = weight_6_V_q0;
    end else begin
        grp_MUL_DP_fu_5048_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5048_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5048_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5048_b_V = weight_78_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5048_b_V = weight_54_V_q0;
    end else begin
        grp_MUL_DP_fu_5048_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5057_a_V = weight_31_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5057_a_V = weight_7_V_q0;
    end else begin
        grp_MUL_DP_fu_5057_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5057_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5057_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5057_b_V = weight_79_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5057_b_V = weight_55_V_q0;
    end else begin
        grp_MUL_DP_fu_5057_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5066_a_V = weight_32_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5066_a_V = weight_8_V_q0;
    end else begin
        grp_MUL_DP_fu_5066_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5066_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5066_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5066_b_V = weight_80_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5066_b_V = weight_56_V_q0;
    end else begin
        grp_MUL_DP_fu_5066_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5075_a_V = weight_33_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5075_a_V = weight_9_V_q0;
    end else begin
        grp_MUL_DP_fu_5075_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5075_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5075_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5075_b_V = weight_81_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5075_b_V = weight_57_V_q0;
    end else begin
        grp_MUL_DP_fu_5075_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5084_a_V = weight_34_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5084_a_V = weight_10_V_q0;
    end else begin
        grp_MUL_DP_fu_5084_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5084_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5084_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5084_b_V = weight_82_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5084_b_V = weight_58_V_q0;
    end else begin
        grp_MUL_DP_fu_5084_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5093_a_V = weight_35_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5093_a_V = weight_11_V_q0;
    end else begin
        grp_MUL_DP_fu_5093_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5093_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5093_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5093_b_V = weight_83_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5093_b_V = weight_59_V_q0;
    end else begin
        grp_MUL_DP_fu_5093_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5102_a_V = weight_36_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5102_a_V = weight_12_V_q0;
    end else begin
        grp_MUL_DP_fu_5102_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5102_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5102_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5102_b_V = weight_84_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5102_b_V = weight_60_V_q0;
    end else begin
        grp_MUL_DP_fu_5102_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5111_a_V = weight_37_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5111_a_V = weight_13_V_q0;
    end else begin
        grp_MUL_DP_fu_5111_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5111_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5111_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5111_b_V = weight_85_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5111_b_V = weight_61_V_q0;
    end else begin
        grp_MUL_DP_fu_5111_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5120_a_V = weight_38_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5120_a_V = weight_14_V_q0;
    end else begin
        grp_MUL_DP_fu_5120_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5120_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5120_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5120_b_V = weight_86_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5120_b_V = weight_62_V_q0;
    end else begin
        grp_MUL_DP_fu_5120_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5129_a_V = weight_39_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5129_a_V = weight_15_V_q0;
    end else begin
        grp_MUL_DP_fu_5129_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5129_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5129_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5129_b_V = weight_87_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5129_b_V = weight_63_V_q0;
    end else begin
        grp_MUL_DP_fu_5129_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5138_a_V = weight_40_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5138_a_V = weight_16_V_q0;
    end else begin
        grp_MUL_DP_fu_5138_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5138_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5138_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5138_b_V = weight_88_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5138_b_V = weight_64_V_q0;
    end else begin
        grp_MUL_DP_fu_5138_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5147_a_V = weight_41_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5147_a_V = weight_17_V_q0;
    end else begin
        grp_MUL_DP_fu_5147_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5147_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5147_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5147_b_V = weight_89_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5147_b_V = weight_65_V_q0;
    end else begin
        grp_MUL_DP_fu_5147_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5156_a_V = weight_42_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5156_a_V = weight_18_V_q0;
    end else begin
        grp_MUL_DP_fu_5156_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5156_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5156_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5156_b_V = weight_90_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5156_b_V = weight_66_V_q0;
    end else begin
        grp_MUL_DP_fu_5156_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5165_a_V = weight_43_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5165_a_V = weight_19_V_q0;
    end else begin
        grp_MUL_DP_fu_5165_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5165_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5165_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5165_b_V = weight_91_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5165_b_V = weight_67_V_q0;
    end else begin
        grp_MUL_DP_fu_5165_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5174_a_V = weight_44_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5174_a_V = weight_20_V_q0;
    end else begin
        grp_MUL_DP_fu_5174_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5174_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5174_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5174_b_V = weight_92_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5174_b_V = weight_68_V_q0;
    end else begin
        grp_MUL_DP_fu_5174_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5183_a_V = weight_45_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5183_a_V = weight_21_V_q0;
    end else begin
        grp_MUL_DP_fu_5183_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5183_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5183_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5183_b_V = weight_93_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5183_b_V = weight_69_V_q0;
    end else begin
        grp_MUL_DP_fu_5183_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5192_a_V = weight_46_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5192_a_V = weight_22_V_q0;
    end else begin
        grp_MUL_DP_fu_5192_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5192_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5192_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5192_b_V = weight_94_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5192_b_V = weight_70_V_q0;
    end else begin
        grp_MUL_DP_fu_5192_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5201_a_V = weight_47_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5201_a_V = weight_23_V_q0;
    end else begin
        grp_MUL_DP_fu_5201_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_MUL_DP_fu_5201_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5201_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5201_b_V = weight_95_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5201_b_V = weight_71_V_q0;
    end else begin
        grp_MUL_DP_fu_5201_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h9_phi_fu_4974_p4 = h9_cast2_mid2_reg_9125;
    end else begin
        h9_phi_fu_4974_p4 = h9_reg_4970;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_4846_p4 = h_cast_mid2_reg_8006;
    end else begin
        h_phi_fu_4846_p4 = h_reg_4842;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_address0 = input_V_addr_4_reg_8834;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_address0 = input_V_addr_reg_8299;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state18))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_9092) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w10_phi_fu_4986_p4 = w_21_reg_9132;
    end else begin
        w10_phi_fu_4986_p4 = w10_reg_4982;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten7_reg_7974 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_4858_p4 = w_18_reg_8018;
    end else begin
        w_phi_fu_4858_p4 = w_reg_4854;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_24_V_ce0 = 1'b1;
    end else begin
        weight_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_25_V_ce0 = 1'b1;
    end else begin
        weight_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_26_V_ce0 = 1'b1;
    end else begin
        weight_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_27_V_ce0 = 1'b1;
    end else begin
        weight_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_28_V_ce0 = 1'b1;
    end else begin
        weight_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_29_V_ce0 = 1'b1;
    end else begin
        weight_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_30_V_ce0 = 1'b1;
    end else begin
        weight_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_31_V_ce0 = 1'b1;
    end else begin
        weight_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_32_V_ce0 = 1'b1;
    end else begin
        weight_32_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_33_V_ce0 = 1'b1;
    end else begin
        weight_33_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_34_V_ce0 = 1'b1;
    end else begin
        weight_34_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_35_V_ce0 = 1'b1;
    end else begin
        weight_35_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_36_V_ce0 = 1'b1;
    end else begin
        weight_36_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_37_V_ce0 = 1'b1;
    end else begin
        weight_37_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_38_V_ce0 = 1'b1;
    end else begin
        weight_38_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_39_V_ce0 = 1'b1;
    end else begin
        weight_39_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_40_V_ce0 = 1'b1;
    end else begin
        weight_40_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_41_V_ce0 = 1'b1;
    end else begin
        weight_41_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_42_V_ce0 = 1'b1;
    end else begin
        weight_42_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_43_V_ce0 = 1'b1;
    end else begin
        weight_43_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_44_V_ce0 = 1'b1;
    end else begin
        weight_44_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_45_V_ce0 = 1'b1;
    end else begin
        weight_45_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_46_V_ce0 = 1'b1;
    end else begin
        weight_46_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_47_V_ce0 = 1'b1;
    end else begin
        weight_47_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_48_V_ce0 = 1'b1;
    end else begin
        weight_48_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_49_V_ce0 = 1'b1;
    end else begin
        weight_49_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_50_V_ce0 = 1'b1;
    end else begin
        weight_50_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_51_V_ce0 = 1'b1;
    end else begin
        weight_51_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_52_V_ce0 = 1'b1;
    end else begin
        weight_52_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_53_V_ce0 = 1'b1;
    end else begin
        weight_53_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_54_V_ce0 = 1'b1;
    end else begin
        weight_54_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_55_V_ce0 = 1'b1;
    end else begin
        weight_55_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_56_V_ce0 = 1'b1;
    end else begin
        weight_56_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_57_V_ce0 = 1'b1;
    end else begin
        weight_57_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_58_V_ce0 = 1'b1;
    end else begin
        weight_58_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_59_V_ce0 = 1'b1;
    end else begin
        weight_59_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_60_V_ce0 = 1'b1;
    end else begin
        weight_60_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_61_V_ce0 = 1'b1;
    end else begin
        weight_61_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_62_V_ce0 = 1'b1;
    end else begin
        weight_62_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_63_V_ce0 = 1'b1;
    end else begin
        weight_63_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_64_V_ce0 = 1'b1;
    end else begin
        weight_64_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_65_V_ce0 = 1'b1;
    end else begin
        weight_65_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_66_V_ce0 = 1'b1;
    end else begin
        weight_66_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_67_V_ce0 = 1'b1;
    end else begin
        weight_67_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_68_V_ce0 = 1'b1;
    end else begin
        weight_68_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_69_V_ce0 = 1'b1;
    end else begin
        weight_69_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_70_V_ce0 = 1'b1;
    end else begin
        weight_70_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_71_V_ce0 = 1'b1;
    end else begin
        weight_71_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_72_V_ce0 = 1'b1;
    end else begin
        weight_72_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_73_V_ce0 = 1'b1;
    end else begin
        weight_73_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_74_V_ce0 = 1'b1;
    end else begin
        weight_74_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_75_V_ce0 = 1'b1;
    end else begin
        weight_75_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_76_V_ce0 = 1'b1;
    end else begin
        weight_76_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_77_V_ce0 = 1'b1;
    end else begin
        weight_77_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_78_V_ce0 = 1'b1;
    end else begin
        weight_78_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_79_V_ce0 = 1'b1;
    end else begin
        weight_79_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_80_V_ce0 = 1'b1;
    end else begin
        weight_80_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_81_V_ce0 = 1'b1;
    end else begin
        weight_81_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_82_V_ce0 = 1'b1;
    end else begin
        weight_82_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_83_V_ce0 = 1'b1;
    end else begin
        weight_83_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_84_V_ce0 = 1'b1;
    end else begin
        weight_84_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_85_V_ce0 = 1'b1;
    end else begin
        weight_85_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_86_V_ce0 = 1'b1;
    end else begin
        weight_86_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_87_V_ce0 = 1'b1;
    end else begin
        weight_87_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_88_V_ce0 = 1'b1;
    end else begin
        weight_88_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_89_V_ce0 = 1'b1;
    end else begin
        weight_89_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_90_V_ce0 = 1'b1;
    end else begin
        weight_90_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_91_V_ce0 = 1'b1;
    end else begin
        weight_91_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_92_V_ce0 = 1'b1;
    end else begin
        weight_92_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_93_V_ce0 = 1'b1;
    end else begin
        weight_93_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_94_V_ce0 = 1'b1;
    end else begin
        weight_94_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_95_V_ce0 = 1'b1;
    end else begin
        weight_95_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_5286_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten7_fu_5286_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond18_fu_5568_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond20_fu_5639_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond22_fu_5792_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond19_fu_6568_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond21_fu_6639_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond24_fu_6792_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_7530_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_7530_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast_mid2_fu_5338_p1;

assign buffer1_1_96_4x4_p_V_10_address1 = buffer1_1_96_4x4_p_V_504_reg_9287;

assign buffer1_1_96_4x4_p_V_10_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_11_address1 = buffer1_1_96_4x4_p_V_505_reg_9293;

assign buffer1_1_96_4x4_p_V_11_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_12_address1 = buffer1_1_96_4x4_p_V_506_reg_9299;

assign buffer1_1_96_4x4_p_V_12_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_13_address1 = buffer1_1_96_4x4_p_V_492_reg_9215;

assign buffer1_1_96_4x4_p_V_13_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_14_address1 = buffer1_1_96_4x4_p_V_512_reg_9335;

assign buffer1_1_96_4x4_p_V_14_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_15_address1 = buffer1_1_96_4x4_p_V_513_reg_9341;

assign buffer1_1_96_4x4_p_V_15_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_16_address1 = buffer1_1_96_4x4_p_V_495_reg_9233;

assign buffer1_1_96_4x4_p_V_16_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_17_address1 = buffer1_1_96_4x4_p_V_494_reg_9227;

assign buffer1_1_96_4x4_p_V_17_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_18_address1 = buffer1_1_96_4x4_p_V_493_reg_9221;

assign buffer1_1_96_4x4_p_V_18_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_19_address1 = buffer1_1_96_4x4_p_V_499_reg_9257;

assign buffer1_1_96_4x4_p_V_19_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_1_address1 = buffer1_1_96_4x4_p_V_500_reg_9263;

assign buffer1_1_96_4x4_p_V_1_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_20_address1 = buffer1_1_96_4x4_p_V_501_reg_9269;

assign buffer1_1_96_4x4_p_V_20_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_21_address1 = buffer1_1_96_4x4_p_V_502_reg_9275;

assign buffer1_1_96_4x4_p_V_21_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_22_address1 = buffer1_1_96_4x4_p_V_509_reg_9317;

assign buffer1_1_96_4x4_p_V_22_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_23_address1 = buffer1_1_96_4x4_p_V_510_reg_9323;

assign buffer1_1_96_4x4_p_V_23_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_24_address1 = buffer1_1_96_4x4_p_V_516_reg_9359;

assign buffer1_1_96_4x4_p_V_24_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_25_address1 = buffer1_1_96_4x4_p_V_515_reg_9353;

assign buffer1_1_96_4x4_p_V_25_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_26_address1 = buffer1_1_96_4x4_p_V_517_reg_9365;

assign buffer1_1_96_4x4_p_V_26_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_27_address1 = buffer1_1_96_4x4_p_V_518_reg_9371;

assign buffer1_1_96_4x4_p_V_27_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_28_address1 = buffer1_1_96_4x4_p_V_496_reg_9239;

assign buffer1_1_96_4x4_p_V_28_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_29_address1 = buffer1_1_96_4x4_p_V_514_reg_9347;

assign buffer1_1_96_4x4_p_V_29_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_2_address1 = buffer1_1_96_4x4_p_V_497_reg_9245;

assign buffer1_1_96_4x4_p_V_2_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_30_address1 = buffer1_1_96_4x4_p_V_498_reg_9251;

assign buffer1_1_96_4x4_p_V_30_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_31_address1 = buffer1_1_96_4x4_p_V_557_reg_9605;

assign buffer1_1_96_4x4_p_V_31_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_32_address1 = buffer1_1_96_4x4_p_V_525_reg_9413;

assign buffer1_1_96_4x4_p_V_32_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_33_address1 = buffer1_1_96_4x4_p_V_558_reg_9611;

assign buffer1_1_96_4x4_p_V_33_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_34_address1 = buffer1_1_96_4x4_p_V_524_reg_9407;

assign buffer1_1_96_4x4_p_V_34_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_35_address1 = buffer1_1_96_4x4_p_V_519_reg_9377;

assign buffer1_1_96_4x4_p_V_35_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_36_address1 = buffer1_1_96_4x4_p_V_531_reg_9449;

assign buffer1_1_96_4x4_p_V_36_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_37_address1 = buffer1_1_96_4x4_p_V_533_reg_9461;

assign buffer1_1_96_4x4_p_V_37_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_38_address1 = buffer1_1_96_4x4_p_V_532_reg_9455;

assign buffer1_1_96_4x4_p_V_38_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_39_address1 = buffer1_1_96_4x4_p_V_522_reg_9395;

assign buffer1_1_96_4x4_p_V_39_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_3_address1 = buffer1_1_96_4x4_p_V_511_reg_9329;

assign buffer1_1_96_4x4_p_V_3_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_40_address1 = buffer1_1_96_4x4_p_V_508_reg_9311;

assign buffer1_1_96_4x4_p_V_40_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_41_address1 = buffer1_1_96_4x4_p_V_526_reg_9419;

assign buffer1_1_96_4x4_p_V_41_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_42_address1 = buffer1_1_96_4x4_p_V_507_reg_9305;

assign buffer1_1_96_4x4_p_V_42_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_43_address1 = buffer1_1_96_4x4_p_V_527_reg_9425;

assign buffer1_1_96_4x4_p_V_43_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_44_address1 = buffer1_1_96_4x4_p_V_530_reg_9443;

assign buffer1_1_96_4x4_p_V_44_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_45_address1 = buffer1_1_96_4x4_p_V_523_reg_9401;

assign buffer1_1_96_4x4_p_V_45_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_46_address1 = buffer1_1_96_4x4_p_V_529_reg_9437;

assign buffer1_1_96_4x4_p_V_46_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_47_address1 = buffer1_1_96_4x4_p_V_559_reg_9617;

assign buffer1_1_96_4x4_p_V_47_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_48_address1 = buffer1_1_96_4x4_p_V_528_reg_9431;

assign buffer1_1_96_4x4_p_V_48_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_49_address1 = buffer1_1_96_4x4_p_V_520_reg_9383;

assign buffer1_1_96_4x4_p_V_49_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_4_address1 = buffer1_1_96_4x4_p_V_521_reg_9389;

assign buffer1_1_96_4x4_p_V_4_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_50_address1 = buffer1_1_96_4x4_p_V_535_reg_9473;

assign buffer1_1_96_4x4_p_V_50_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_51_address1 = buffer1_1_96_4x4_p_V_560_reg_9623;

assign buffer1_1_96_4x4_p_V_51_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_52_address1 = buffer1_1_96_4x4_p_V_539_reg_9497;

assign buffer1_1_96_4x4_p_V_52_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_53_address1 = buffer1_1_96_4x4_p_V_543_reg_9521;

assign buffer1_1_96_4x4_p_V_53_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_54_address1 = buffer1_1_96_4x4_p_V_542_reg_9515;

assign buffer1_1_96_4x4_p_V_54_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_55_address1 = buffer1_1_96_4x4_p_V_544_reg_9527;

assign buffer1_1_96_4x4_p_V_55_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_56_address1 = buffer1_1_96_4x4_p_V_540_reg_9503;

assign buffer1_1_96_4x4_p_V_56_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_57_address1 = buffer1_1_96_4x4_p_V_537_reg_9485;

assign buffer1_1_96_4x4_p_V_57_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_58_address1 = buffer1_1_96_4x4_p_V_538_reg_9491;

assign buffer1_1_96_4x4_p_V_58_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_59_address1 = buffer1_1_96_4x4_p_V_541_reg_9509;

assign buffer1_1_96_4x4_p_V_59_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_5_address1 = buffer1_1_96_4x4_p_V_536_reg_9479;

assign buffer1_1_96_4x4_p_V_5_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_60_address1 = buffer1_1_96_4x4_p_V_571_reg_9689;

assign buffer1_1_96_4x4_p_V_60_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_61_address1 = buffer1_1_96_4x4_p_V_565_reg_9653;

assign buffer1_1_96_4x4_p_V_61_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_62_address1 = buffer1_1_96_4x4_p_V_566_reg_9659;

assign buffer1_1_96_4x4_p_V_62_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_63_address1 = buffer1_1_96_4x4_p_V_572_reg_9695;

assign buffer1_1_96_4x4_p_V_63_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_64_address1 = buffer1_1_96_4x4_p_V_562_reg_9635;

assign buffer1_1_96_4x4_p_V_64_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_65_address1 = buffer1_1_96_4x4_p_V_563_reg_9641;

assign buffer1_1_96_4x4_p_V_65_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_66_address1 = buffer1_1_96_4x4_p_V_564_reg_9647;

assign buffer1_1_96_4x4_p_V_66_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_67_address1 = buffer1_1_96_4x4_p_V_561_reg_9629;

assign buffer1_1_96_4x4_p_V_67_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_68_address1 = buffer1_1_96_4x4_p_V_548_reg_9551;

assign buffer1_1_96_4x4_p_V_68_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_69_address1 = buffer1_1_96_4x4_p_V_545_reg_9533;

assign buffer1_1_96_4x4_p_V_69_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_6_address1 = buffer1_1_96_4x4_p_V_534_reg_9467;

assign buffer1_1_96_4x4_p_V_6_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_70_address1 = buffer1_1_96_4x4_p_V_546_reg_9539;

assign buffer1_1_96_4x4_p_V_70_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_71_address1 = buffer1_1_96_4x4_p_V_555_reg_9593;

assign buffer1_1_96_4x4_p_V_71_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_72_address1 = buffer1_1_96_4x4_p_V_556_reg_9599;

assign buffer1_1_96_4x4_p_V_72_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_73_address1 = buffer1_1_96_4x4_p_V_553_reg_9581;

assign buffer1_1_96_4x4_p_V_73_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_74_address1 = buffer1_1_96_4x4_p_V_554_reg_9587;

assign buffer1_1_96_4x4_p_V_74_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_75_address1 = buffer1_1_96_4x4_p_V_550_reg_9563;

assign buffer1_1_96_4x4_p_V_75_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_76_address1 = buffer1_1_96_4x4_p_V_551_reg_9569;

assign buffer1_1_96_4x4_p_V_76_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_77_address1 = buffer1_1_96_4x4_p_V_549_reg_9557;

assign buffer1_1_96_4x4_p_V_77_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_78_address1 = buffer1_1_96_4x4_p_V_552_reg_9575;

assign buffer1_1_96_4x4_p_V_78_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_79_address1 = buffer1_1_96_4x4_p_V_574_reg_9707;

assign buffer1_1_96_4x4_p_V_79_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_7_address1 = buffer1_1_96_4x4_p_V_547_reg_9545;

assign buffer1_1_96_4x4_p_V_7_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_80_address1 = buffer1_1_96_4x4_p_V_573_reg_9701;

assign buffer1_1_96_4x4_p_V_80_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_81_address1 = buffer1_1_96_4x4_p_V_569_reg_9677;

assign buffer1_1_96_4x4_p_V_81_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_82_address1 = buffer1_1_96_4x4_p_V_568_reg_9671;

assign buffer1_1_96_4x4_p_V_82_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_83_address1 = buffer1_1_96_4x4_p_V_482_reg_9155;

assign buffer1_1_96_4x4_p_V_83_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_84_address1 = buffer1_1_96_4x4_p_V_489_reg_9197;

assign buffer1_1_96_4x4_p_V_84_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_85_address1 = buffer1_1_96_4x4_p_V_491_reg_9209;

assign buffer1_1_96_4x4_p_V_85_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_86_address1 = buffer1_1_96_4x4_p_V_483_reg_9161;

assign buffer1_1_96_4x4_p_V_86_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_87_address1 = buffer1_1_96_4x4_p_V_488_reg_9191;

assign buffer1_1_96_4x4_p_V_87_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_88_address1 = buffer1_1_96_4x4_p_V_484_reg_9167;

assign buffer1_1_96_4x4_p_V_88_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_89_address1 = buffer1_1_96_4x4_p_V_486_reg_9179;

assign buffer1_1_96_4x4_p_V_89_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_8_address1 = buffer1_1_96_4x4_p_V_570_reg_9683;

assign buffer1_1_96_4x4_p_V_8_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_90_address1 = buffer1_1_96_4x4_p_V_481_reg_9149;

assign buffer1_1_96_4x4_p_V_90_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_91_address1 = buffer1_1_96_4x4_p_V_487_reg_9185;

assign buffer1_1_96_4x4_p_V_91_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_92_address1 = buffer1_1_96_4x4_p_V_490_reg_9203;

assign buffer1_1_96_4x4_p_V_92_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_93_address1 = buffer1_1_96_4x4_p_V_480_reg_9143;

assign buffer1_1_96_4x4_p_V_93_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_94_address1 = buffer1_1_96_4x4_p_V_567_reg_9665;

assign buffer1_1_96_4x4_p_V_94_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_95_address1 = buffer1_1_96_4x4_p_V_479_reg_9137;

assign buffer1_1_96_4x4_p_V_95_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_96_address1 = buffer1_1_96_4x4_p_V_503_reg_9281;

assign buffer1_1_96_4x4_p_V_96_d1 = 8'd0;

assign buffer1_1_96_4x4_p_V_9_address1 = buffer1_1_96_4x4_p_V_485_reg_9173;

assign buffer1_1_96_4x4_p_V_9_d1 = 8'd0;

assign ci6_cast4_fu_6651_p1 = ci6_reg_4925;

assign ci_6_fu_5798_p2 = (7'd1 + ci_reg_4890);

assign ci_7_fu_6798_p2 = (7'd1 + ci6_reg_4925);

assign ci_cast7_fu_5651_p1 = ci_reg_4890;

assign co8_mid2_fu_7592_p3 = ((exitcond_flatten4_reg_9101[0:0] === 1'b1) ? co_15_fu_7562_p2 : co8_phi_fu_4951_p4);

assign co_13_fu_5318_p2 = (co_phi_fu_4823_p4 + 7'd1);

assign co_15_fu_7562_p2 = (co8_phi_fu_4951_p4 + 7'd1);

assign co_cast_mid2_fu_5338_p1 = co_cast_mid2_v_fu_5331_p3;

assign co_cast_mid2_v_fu_5331_p3 = ((exitcond_flatten_reg_7983[0:0] === 1'b1) ? co_13_fu_5318_p2 : co_phi_fu_4823_p4);

assign exitcond18_fu_5568_p2 = ((h1_reg_4866 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond19_fu_6568_p2 = ((h4_reg_4901 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond20_fu_5639_p2 = ((w2_reg_4878 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond21_fu_6639_p2 = ((w5_reg_4913 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond22_fu_5792_p2 = ((ci_reg_4890 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond23_fu_7580_p2 = ((w10_phi_fu_4986_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond24_fu_6792_p2 = ((ci6_reg_4925 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond31_mid_fu_5354_p2 = (exitcond_fu_5348_p2 & not_exitcond_flatten_fu_5343_p2);

assign exitcond_flatten4_fu_7542_p2 = ((indvar_flatten9_reg_4959 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_5286_p2 = ((indvar_flatten7_reg_4808 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_7530_p2 = ((indvar_flatten8_reg_4936 == 11'd1536) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_5298_p2 = ((indvar_flatten_reg_4831 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_fu_5348_p2 = ((w_phi_fu_4858_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_7586_p2 = (exitcond23_fu_7580_p2 & not_exitcond_flatten_6_fu_7575_p2);

assign h1_cast9_cast1_fu_5530_p1 = h1_reg_4866;

assign h1_cast9_cast_fu_5534_p1 = h1_reg_4866;

assign h4_cast6_cast1_fu_6530_p1 = h4_reg_4901;

assign h4_cast6_cast_fu_6534_p1 = h4_reg_4901;

assign h9_cast2_mid2_fu_7618_p3 = ((exitcond_mid_fu_7586_p2[0:0] === 1'b1) ? h_5_fu_7599_p2 : h9_mid_fu_7568_p3);

assign h9_mid_fu_7568_p3 = ((exitcond_flatten4_reg_9101[0:0] === 1'b1) ? 3'd1 : h9_phi_fu_4974_p4);

assign h_17_fu_5360_p2 = (h_mid_fu_5324_p3 + 3'd1);

assign h_4_fu_5645_p2 = (h1_reg_4866 + 3'd1);

assign h_5_fu_7599_p2 = (h9_mid_fu_7568_p3 + 3'd1);

assign h_6_fu_6645_p2 = (h4_reg_4901 + 3'd1);

assign h_cast_mid2_fu_5379_p3 = ((exitcond31_mid_fu_5354_p2[0:0] === 1'b1) ? h_17_fu_5360_p2 : h_mid_fu_5324_p3);

assign h_mid_fu_5324_p3 = ((exitcond_flatten_reg_7983[0:0] === 1'b1) ? 3'd1 : h_phi_fu_4846_p4);

assign indvar_flatten21_op_fu_7548_p2 = (indvar_flatten9_reg_4959 + 6'd1);

assign indvar_flatten_next7_fu_5292_p2 = (indvar_flatten7_reg_4808 + 11'd1);

assign indvar_flatten_next8_fu_7554_p3 = ((exitcond_flatten4_fu_7542_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten21_op_fu_7548_p2);

assign indvar_flatten_next9_fu_7536_p2 = (indvar_flatten8_reg_4936 + 11'd1);

assign indvar_flatten_next_fu_5310_p3 = ((exitcond_flatten_fu_5298_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_5304_p2);

assign indvar_flatten_op_fu_5304_p2 = (indvar_flatten_reg_4831 + 6'd1);

assign not_exitcond_flatten_6_fu_7575_p2 = (exitcond_flatten4_reg_9101 ^ 1'd1);

assign not_exitcond_flatten_fu_5343_p2 = (exitcond_flatten_reg_7983 ^ 1'd1);

assign p_shl10_cast_fu_6722_p3 = {{tmp_328_fu_6718_p1}, {3'd0}};

assign p_shl11_cast_fu_6730_p3 = {{tmp_242_fu_6713_p2}, {1'd0}};

assign p_shl12_cast_fu_6687_p1 = tmp_239_fu_6679_p3;

assign p_shl13_cast_fu_6699_p1 = tmp_240_fu_6691_p3;

assign p_shl14_cast_fu_7639_p1 = tmp_269_fu_7632_p3;

assign p_shl15_cast_fu_7650_p1 = tmp_270_fu_7643_p3;

assign p_shl1_cast_fu_5411_p1 = tmp_267_fu_5404_p3;

assign p_shl2_cast_fu_5546_p1 = tmp_220_fu_5538_p3;

assign p_shl3_cast_fu_5558_p1 = tmp_221_fu_5550_p3;

assign p_shl4_cast_fu_5722_p3 = {{tmp_268_fu_5718_p1}, {3'd0}};

assign p_shl5_cast_fu_5730_p3 = {{tmp_231_fu_5713_p2}, {1'd0}};

assign p_shl6_cast_fu_5687_p1 = tmp_228_fu_5679_p3;

assign p_shl7_cast_fu_5699_p1 = tmp_229_fu_5691_p3;

assign p_shl8_cast_fu_6546_p1 = tmp_223_fu_6538_p3;

assign p_shl9_cast_fu_6558_p1 = tmp_224_fu_6550_p3;

assign p_shl_cast_fu_5400_p1 = tmp_266_fu_5393_p3;

assign tmp_218_fu_5415_p2 = (p_shl_cast_fu_5400_p1 - p_shl1_cast_fu_5411_p1);

assign tmp_219_fu_5424_p2 = (w_cast_cast_fu_5421_p1 + tmp_218_fu_5415_p2);

assign tmp_220_fu_5538_p3 = {{h1_reg_4866}, {3'd0}};

assign tmp_221_fu_5550_p3 = {{h1_reg_4866}, {1'd0}};

assign tmp_222_fu_5562_p2 = (p_shl2_cast_fu_5546_p1 - p_shl3_cast_fu_5558_p1);

assign tmp_223_fu_6538_p3 = {{h4_reg_4901}, {3'd0}};

assign tmp_224_fu_6550_p3 = {{h4_reg_4901}, {1'd0}};

assign tmp_225_fu_6562_p2 = (p_shl8_cast_fu_6546_p1 - p_shl9_cast_fu_6558_p1);

assign tmp_226_fu_5582_p2 = (tmp_222_reg_8033 + w2_cast8_cast_fu_5578_p1);

assign tmp_227_fu_6582_p2 = (tmp_225_reg_8567 + w5_cast5_cast_fu_6578_p1);

assign tmp_228_fu_5679_p3 = {{ci_reg_4890}, {3'd0}};

assign tmp_229_fu_5691_p3 = {{ci_reg_4890}, {1'd0}};

assign tmp_230_fu_5703_p2 = (p_shl6_cast_fu_5687_p1 - p_shl7_cast_fu_5699_p1);

assign tmp_231_fu_5713_p2 = ($signed(h1_cast9_cast_reg_8028) + $signed(tmp_282_cast_fu_5709_p1));

assign tmp_232_fu_5738_p2 = (p_shl4_cast_fu_5722_p3 - p_shl5_cast_fu_5730_p3);

assign tmp_233_fu_5744_p2 = (w2_cast8_cast1_reg_8041 + tmp_232_fu_5738_p2);

assign tmp_234_fu_5754_p2 = (h1_cast9_cast1_reg_8023 + ci_reg_4890);

assign tmp_235_fu_5759_p2 = (w2_cast8_cast_reg_8046 + tmp_234_fu_5754_p2);

assign tmp_236_fu_7605_p2 = (exitcond_mid_fu_7586_p2 | exitcond_flatten4_reg_9101);

assign tmp_237_fu_7654_p2 = (p_shl14_cast_fu_7639_p1 - p_shl15_cast_fu_7650_p1);

assign tmp_238_fu_7663_p2 = (w10_cast1_cast_fu_7660_p1 + tmp_237_fu_7654_p2);

assign tmp_239_fu_6679_p3 = {{ci6_reg_4925}, {3'd0}};

assign tmp_23_fu_5822_p2 = (buffer1_1_96_4x4_p_V_96_q0 + tmp_272_fu_5818_p1);

assign tmp_240_fu_6691_p3 = {{ci6_reg_4925}, {1'd0}};

assign tmp_241_fu_6703_p2 = (p_shl12_cast_fu_6687_p1 - p_shl13_cast_fu_6699_p1);

assign tmp_242_fu_6713_p2 = ($signed(h4_cast6_cast_reg_8562) + $signed(tmp_297_cast_fu_6709_p1));

assign tmp_243_fu_6738_p2 = (p_shl10_cast_fu_6722_p3 - p_shl11_cast_fu_6730_p3);

assign tmp_244_fu_6744_p2 = (w5_cast5_cast1_reg_8576 + tmp_243_fu_6738_p2);

assign tmp_245_fu_6754_p2 = (h4_cast6_cast1_reg_8557 + ci6_reg_4925);

assign tmp_246_fu_6759_p2 = (w5_cast5_cast_reg_8581 + tmp_245_fu_6754_p2);

assign tmp_25_fu_5833_p2 = (buffer1_1_96_4x4_p_V_48_q0 + tmp_273_fu_5829_p1);

assign tmp_266_fu_5393_p3 = {{h_cast_mid2_reg_8006}, {3'd0}};

assign tmp_267_fu_5404_p3 = {{h_cast_mid2_reg_8006}, {1'd0}};

assign tmp_268_fu_5718_p1 = tmp_231_fu_5713_p2[9:0];

assign tmp_269_fu_7632_p3 = {{h9_cast2_mid2_reg_9125}, {3'd0}};

assign tmp_270_fu_7643_p3 = {{h9_cast2_mid2_reg_9125}, {1'd0}};

assign tmp_271_cast_fu_5430_p1 = tmp_219_fu_5424_p2;

assign tmp_271_fu_7966_p3 = tmp_30_fu_7769_p98[32'd7];

assign tmp_272_fu_5818_p1 = grp_MUL_DP_fu_4994_ap_return_0[7:0];

assign tmp_273_fu_5829_p1 = grp_MUL_DP_fu_4994_ap_return_1[7:0];

assign tmp_274_fu_5848_p1 = grp_MUL_DP_fu_5003_ap_return_0[7:0];

assign tmp_275_fu_5859_p1 = grp_MUL_DP_fu_5003_ap_return_1[7:0];

assign tmp_276_fu_5878_p1 = grp_MUL_DP_fu_5012_ap_return_0[7:0];

assign tmp_277_fu_5889_p1 = grp_MUL_DP_fu_5012_ap_return_1[7:0];

assign tmp_278_cast_fu_5587_p1 = $signed(tmp_226_fu_5582_p2);

assign tmp_278_fu_5908_p1 = grp_MUL_DP_fu_5021_ap_return_0[7:0];

assign tmp_279_cast_fu_6587_p1 = $signed(tmp_227_fu_6582_p2);

assign tmp_279_fu_5919_p1 = grp_MUL_DP_fu_5021_ap_return_1[7:0];

assign tmp_27_fu_6822_p2 = (buffer1_1_96_4x4_p_V_24_q0 + tmp_329_fu_6818_p1);

assign tmp_280_fu_5938_p1 = grp_MUL_DP_fu_5030_ap_return_0[7:0];

assign tmp_281_fu_5949_p1 = grp_MUL_DP_fu_5030_ap_return_1[7:0];

assign tmp_282_cast_fu_5709_p1 = $signed(tmp_230_fu_5703_p2);

assign tmp_282_fu_5968_p1 = grp_MUL_DP_fu_5039_ap_return_0[7:0];

assign tmp_283_fu_5979_p1 = grp_MUL_DP_fu_5039_ap_return_1[7:0];

assign tmp_284_fu_5998_p1 = grp_MUL_DP_fu_5048_ap_return_0[7:0];

assign tmp_285_fu_6009_p1 = grp_MUL_DP_fu_5048_ap_return_1[7:0];

assign tmp_286_fu_6028_p1 = grp_MUL_DP_fu_5057_ap_return_0[7:0];

assign tmp_287_cast_fu_5749_p1 = tmp_233_fu_5744_p2;

assign tmp_287_fu_6039_p1 = grp_MUL_DP_fu_5057_ap_return_1[7:0];

assign tmp_288_fu_6058_p1 = grp_MUL_DP_fu_5066_ap_return_0[7:0];

assign tmp_289_cast_fu_5764_p1 = tmp_235_fu_5759_p2;

assign tmp_289_fu_6069_p1 = grp_MUL_DP_fu_5066_ap_return_1[7:0];

assign tmp_290_fu_6088_p1 = grp_MUL_DP_fu_5075_ap_return_0[7:0];

assign tmp_291_fu_6099_p1 = grp_MUL_DP_fu_5075_ap_return_1[7:0];

assign tmp_292_fu_6118_p1 = grp_MUL_DP_fu_5084_ap_return_0[7:0];

assign tmp_293_fu_6129_p1 = grp_MUL_DP_fu_5084_ap_return_1[7:0];

assign tmp_294_cast_fu_7669_p1 = tmp_238_fu_7663_p2;

assign tmp_294_fu_6148_p1 = grp_MUL_DP_fu_5093_ap_return_0[7:0];

assign tmp_297_cast_fu_6709_p1 = $signed(tmp_241_fu_6703_p2);

assign tmp_299_fu_6159_p1 = grp_MUL_DP_fu_5093_ap_return_1[7:0];

assign tmp_29_fu_6833_p2 = (buffer1_1_96_4x4_p_V_72_q0 + tmp_330_fu_6829_p1);

assign tmp_300_fu_6178_p1 = grp_MUL_DP_fu_5102_ap_return_0[7:0];

assign tmp_302_cast_fu_6749_p1 = tmp_244_fu_6744_p2;

assign tmp_304_cast_fu_6764_p1 = tmp_246_fu_6759_p2;

assign tmp_305_fu_6189_p1 = grp_MUL_DP_fu_5102_ap_return_1[7:0];

assign tmp_306_fu_6208_p1 = grp_MUL_DP_fu_5111_ap_return_0[7:0];

assign tmp_307_fu_6219_p1 = grp_MUL_DP_fu_5111_ap_return_1[7:0];

assign tmp_308_fu_6238_p1 = grp_MUL_DP_fu_5120_ap_return_0[7:0];

assign tmp_309_fu_6249_p1 = grp_MUL_DP_fu_5120_ap_return_1[7:0];

assign tmp_310_fu_6268_p1 = grp_MUL_DP_fu_5129_ap_return_0[7:0];

assign tmp_311_fu_6279_p1 = grp_MUL_DP_fu_5129_ap_return_1[7:0];

assign tmp_312_fu_6298_p1 = grp_MUL_DP_fu_5138_ap_return_0[7:0];

assign tmp_313_fu_6309_p1 = grp_MUL_DP_fu_5138_ap_return_1[7:0];

assign tmp_314_fu_6328_p1 = grp_MUL_DP_fu_5147_ap_return_0[7:0];

assign tmp_315_fu_6339_p1 = grp_MUL_DP_fu_5147_ap_return_1[7:0];

assign tmp_316_fu_6358_p1 = grp_MUL_DP_fu_5156_ap_return_0[7:0];

assign tmp_317_fu_6369_p1 = grp_MUL_DP_fu_5156_ap_return_1[7:0];

assign tmp_318_fu_6388_p1 = grp_MUL_DP_fu_5165_ap_return_0[7:0];

assign tmp_319_fu_6399_p1 = grp_MUL_DP_fu_5165_ap_return_1[7:0];

assign tmp_320_fu_6418_p1 = grp_MUL_DP_fu_5174_ap_return_0[7:0];

assign tmp_321_fu_6429_p1 = grp_MUL_DP_fu_5174_ap_return_1[7:0];

assign tmp_322_fu_6448_p1 = grp_MUL_DP_fu_5183_ap_return_0[7:0];

assign tmp_323_fu_6459_p1 = grp_MUL_DP_fu_5183_ap_return_1[7:0];

assign tmp_324_fu_6478_p1 = grp_MUL_DP_fu_5192_ap_return_0[7:0];

assign tmp_325_fu_6489_p1 = grp_MUL_DP_fu_5192_ap_return_1[7:0];

assign tmp_326_fu_6508_p1 = grp_MUL_DP_fu_5201_ap_return_0[7:0];

assign tmp_327_fu_6519_p1 = grp_MUL_DP_fu_5201_ap_return_1[7:0];

assign tmp_328_fu_6718_p1 = tmp_242_fu_6713_p2[9:0];

assign tmp_329_fu_6818_p1 = grp_MUL_DP_fu_4994_ap_return_0[7:0];

assign tmp_330_fu_6829_p1 = grp_MUL_DP_fu_4994_ap_return_1[7:0];

assign tmp_331_fu_6848_p1 = grp_MUL_DP_fu_5003_ap_return_0[7:0];

assign tmp_332_fu_6859_p1 = grp_MUL_DP_fu_5003_ap_return_1[7:0];

assign tmp_333_fu_6878_p1 = grp_MUL_DP_fu_5012_ap_return_0[7:0];

assign tmp_334_fu_6889_p1 = grp_MUL_DP_fu_5012_ap_return_1[7:0];

assign tmp_335_fu_6908_p1 = grp_MUL_DP_fu_5021_ap_return_0[7:0];

assign tmp_336_fu_6919_p1 = grp_MUL_DP_fu_5021_ap_return_1[7:0];

assign tmp_337_fu_6938_p1 = grp_MUL_DP_fu_5030_ap_return_0[7:0];

assign tmp_338_fu_6949_p1 = grp_MUL_DP_fu_5030_ap_return_1[7:0];

assign tmp_339_fu_6968_p1 = grp_MUL_DP_fu_5039_ap_return_0[7:0];

assign tmp_340_fu_6979_p1 = grp_MUL_DP_fu_5039_ap_return_1[7:0];

assign tmp_341_fu_6998_p1 = grp_MUL_DP_fu_5048_ap_return_0[7:0];

assign tmp_342_fu_7009_p1 = grp_MUL_DP_fu_5048_ap_return_1[7:0];

assign tmp_343_fu_7028_p1 = grp_MUL_DP_fu_5057_ap_return_0[7:0];

assign tmp_344_fu_7039_p1 = grp_MUL_DP_fu_5057_ap_return_1[7:0];

assign tmp_345_fu_7058_p1 = grp_MUL_DP_fu_5066_ap_return_0[7:0];

assign tmp_346_fu_7069_p1 = grp_MUL_DP_fu_5066_ap_return_1[7:0];

assign tmp_347_fu_7088_p1 = grp_MUL_DP_fu_5075_ap_return_0[7:0];

assign tmp_348_fu_7099_p1 = grp_MUL_DP_fu_5075_ap_return_1[7:0];

assign tmp_349_fu_7118_p1 = grp_MUL_DP_fu_5084_ap_return_0[7:0];

assign tmp_350_fu_7129_p1 = grp_MUL_DP_fu_5084_ap_return_1[7:0];

assign tmp_351_fu_7148_p1 = grp_MUL_DP_fu_5093_ap_return_0[7:0];

assign tmp_352_fu_7159_p1 = grp_MUL_DP_fu_5093_ap_return_1[7:0];

assign tmp_353_fu_7178_p1 = grp_MUL_DP_fu_5102_ap_return_0[7:0];

assign tmp_354_fu_7189_p1 = grp_MUL_DP_fu_5102_ap_return_1[7:0];

assign tmp_355_fu_7208_p1 = grp_MUL_DP_fu_5111_ap_return_0[7:0];

assign tmp_356_fu_7219_p1 = grp_MUL_DP_fu_5111_ap_return_1[7:0];

assign tmp_357_fu_7238_p1 = grp_MUL_DP_fu_5120_ap_return_0[7:0];

assign tmp_358_fu_7249_p1 = grp_MUL_DP_fu_5120_ap_return_1[7:0];

assign tmp_359_fu_7268_p1 = grp_MUL_DP_fu_5129_ap_return_0[7:0];

assign tmp_360_fu_7279_p1 = grp_MUL_DP_fu_5129_ap_return_1[7:0];

assign tmp_361_fu_7298_p1 = grp_MUL_DP_fu_5138_ap_return_0[7:0];

assign tmp_362_fu_7309_p1 = grp_MUL_DP_fu_5138_ap_return_1[7:0];

assign tmp_363_fu_7328_p1 = grp_MUL_DP_fu_5147_ap_return_0[7:0];

assign tmp_364_fu_7339_p1 = grp_MUL_DP_fu_5147_ap_return_1[7:0];

assign tmp_365_fu_7358_p1 = grp_MUL_DP_fu_5156_ap_return_0[7:0];

assign tmp_366_fu_7369_p1 = grp_MUL_DP_fu_5156_ap_return_1[7:0];

assign tmp_367_fu_7388_p1 = grp_MUL_DP_fu_5165_ap_return_0[7:0];

assign tmp_368_fu_7399_p1 = grp_MUL_DP_fu_5165_ap_return_1[7:0];

assign tmp_369_fu_7418_p1 = grp_MUL_DP_fu_5174_ap_return_0[7:0];

assign tmp_370_fu_7429_p1 = grp_MUL_DP_fu_5174_ap_return_1[7:0];

assign tmp_371_fu_7448_p1 = grp_MUL_DP_fu_5183_ap_return_0[7:0];

assign tmp_372_fu_7459_p1 = grp_MUL_DP_fu_5183_ap_return_1[7:0];

assign tmp_373_fu_7478_p1 = grp_MUL_DP_fu_5192_ap_return_0[7:0];

assign tmp_374_fu_7489_p1 = grp_MUL_DP_fu_5192_ap_return_1[7:0];

assign tmp_375_fu_7508_p1 = grp_MUL_DP_fu_5201_ap_return_0[7:0];

assign tmp_376_fu_7519_p1 = grp_MUL_DP_fu_5201_ap_return_1[7:0];

assign tmp_43_10_fu_6152_p2 = (buffer1_1_96_4x4_p_V_11_q0 + tmp_294_fu_6148_p1);

assign tmp_43_11_fu_6182_p2 = (buffer1_1_96_4x4_p_V_12_q0 + tmp_300_fu_6178_p1);

assign tmp_43_12_fu_6212_p2 = (buffer1_1_96_4x4_p_V_13_q0 + tmp_306_fu_6208_p1);

assign tmp_43_13_fu_6242_p2 = (buffer1_1_96_4x4_p_V_14_q0 + tmp_308_fu_6238_p1);

assign tmp_43_14_fu_6272_p2 = (buffer1_1_96_4x4_p_V_15_q0 + tmp_310_fu_6268_p1);

assign tmp_43_15_fu_6302_p2 = (buffer1_1_96_4x4_p_V_16_q0 + tmp_312_fu_6298_p1);

assign tmp_43_16_fu_6332_p2 = (buffer1_1_96_4x4_p_V_17_q0 + tmp_314_fu_6328_p1);

assign tmp_43_17_fu_6362_p2 = (buffer1_1_96_4x4_p_V_18_q0 + tmp_316_fu_6358_p1);

assign tmp_43_18_fu_6392_p2 = (buffer1_1_96_4x4_p_V_19_q0 + tmp_318_fu_6388_p1);

assign tmp_43_19_fu_6422_p2 = (buffer1_1_96_4x4_p_V_20_q0 + tmp_320_fu_6418_p1);

assign tmp_43_1_fu_5852_p2 = (buffer1_1_96_4x4_p_V_1_q0 + tmp_274_fu_5848_p1);

assign tmp_43_20_fu_6452_p2 = (buffer1_1_96_4x4_p_V_21_q0 + tmp_322_fu_6448_p1);

assign tmp_43_21_fu_6482_p2 = (buffer1_1_96_4x4_p_V_22_q0 + tmp_324_fu_6478_p1);

assign tmp_43_22_fu_6512_p2 = (buffer1_1_96_4x4_p_V_23_q0 + tmp_326_fu_6508_p1);

assign tmp_43_2_fu_5882_p2 = (buffer1_1_96_4x4_p_V_2_q0 + tmp_276_fu_5878_p1);

assign tmp_43_3_fu_5912_p2 = (buffer1_1_96_4x4_p_V_3_q0 + tmp_278_fu_5908_p1);

assign tmp_43_4_fu_5942_p2 = (buffer1_1_96_4x4_p_V_4_q0 + tmp_280_fu_5938_p1);

assign tmp_43_5_fu_5972_p2 = (buffer1_1_96_4x4_p_V_5_q0 + tmp_282_fu_5968_p1);

assign tmp_43_6_fu_6002_p2 = (buffer1_1_96_4x4_p_V_6_q0 + tmp_284_fu_5998_p1);

assign tmp_43_7_fu_6032_p2 = (buffer1_1_96_4x4_p_V_7_q0 + tmp_286_fu_6028_p1);

assign tmp_43_8_fu_6062_p2 = (buffer1_1_96_4x4_p_V_8_q0 + tmp_288_fu_6058_p1);

assign tmp_43_9_fu_6092_p2 = (buffer1_1_96_4x4_p_V_9_q0 + tmp_290_fu_6088_p1);

assign tmp_43_s_fu_6122_p2 = (buffer1_1_96_4x4_p_V_10_q0 + tmp_292_fu_6118_p1);

assign tmp_45_10_fu_6163_p2 = (buffer1_1_96_4x4_p_V_59_q0 + tmp_299_fu_6159_p1);

assign tmp_45_11_fu_6193_p2 = (buffer1_1_96_4x4_p_V_60_q0 + tmp_305_fu_6189_p1);

assign tmp_45_12_fu_6223_p2 = (buffer1_1_96_4x4_p_V_61_q0 + tmp_307_fu_6219_p1);

assign tmp_45_13_fu_6253_p2 = (buffer1_1_96_4x4_p_V_62_q0 + tmp_309_fu_6249_p1);

assign tmp_45_14_fu_6283_p2 = (buffer1_1_96_4x4_p_V_63_q0 + tmp_311_fu_6279_p1);

assign tmp_45_15_fu_6313_p2 = (buffer1_1_96_4x4_p_V_64_q0 + tmp_313_fu_6309_p1);

assign tmp_45_16_fu_6343_p2 = (buffer1_1_96_4x4_p_V_65_q0 + tmp_315_fu_6339_p1);

assign tmp_45_17_fu_6373_p2 = (buffer1_1_96_4x4_p_V_66_q0 + tmp_317_fu_6369_p1);

assign tmp_45_18_fu_6403_p2 = (buffer1_1_96_4x4_p_V_67_q0 + tmp_319_fu_6399_p1);

assign tmp_45_19_fu_6433_p2 = (buffer1_1_96_4x4_p_V_68_q0 + tmp_321_fu_6429_p1);

assign tmp_45_1_fu_5863_p2 = (buffer1_1_96_4x4_p_V_49_q0 + tmp_275_fu_5859_p1);

assign tmp_45_20_fu_6463_p2 = (buffer1_1_96_4x4_p_V_69_q0 + tmp_323_fu_6459_p1);

assign tmp_45_21_fu_6493_p2 = (buffer1_1_96_4x4_p_V_70_q0 + tmp_325_fu_6489_p1);

assign tmp_45_22_fu_6523_p2 = (buffer1_1_96_4x4_p_V_71_q0 + tmp_327_fu_6519_p1);

assign tmp_45_2_fu_5893_p2 = (buffer1_1_96_4x4_p_V_50_q0 + tmp_277_fu_5889_p1);

assign tmp_45_3_fu_5923_p2 = (buffer1_1_96_4x4_p_V_51_q0 + tmp_279_fu_5919_p1);

assign tmp_45_4_fu_5953_p2 = (buffer1_1_96_4x4_p_V_52_q0 + tmp_281_fu_5949_p1);

assign tmp_45_5_fu_5983_p2 = (buffer1_1_96_4x4_p_V_53_q0 + tmp_283_fu_5979_p1);

assign tmp_45_6_fu_6013_p2 = (buffer1_1_96_4x4_p_V_54_q0 + tmp_285_fu_6009_p1);

assign tmp_45_7_fu_6043_p2 = (buffer1_1_96_4x4_p_V_55_q0 + tmp_287_fu_6039_p1);

assign tmp_45_8_fu_6073_p2 = (buffer1_1_96_4x4_p_V_56_q0 + tmp_289_fu_6069_p1);

assign tmp_45_9_fu_6103_p2 = (buffer1_1_96_4x4_p_V_57_q0 + tmp_291_fu_6099_p1);

assign tmp_45_s_fu_6133_p2 = (buffer1_1_96_4x4_p_V_58_q0 + tmp_293_fu_6129_p1);

assign tmp_49_10_fu_7152_p2 = (buffer1_1_96_4x4_p_V_35_q0 + tmp_351_fu_7148_p1);

assign tmp_49_11_fu_7182_p2 = (buffer1_1_96_4x4_p_V_36_q0 + tmp_353_fu_7178_p1);

assign tmp_49_12_fu_7212_p2 = (buffer1_1_96_4x4_p_V_37_q0 + tmp_355_fu_7208_p1);

assign tmp_49_13_fu_7242_p2 = (buffer1_1_96_4x4_p_V_38_q0 + tmp_357_fu_7238_p1);

assign tmp_49_14_fu_7272_p2 = (buffer1_1_96_4x4_p_V_39_q0 + tmp_359_fu_7268_p1);

assign tmp_49_15_fu_7302_p2 = (buffer1_1_96_4x4_p_V_40_q0 + tmp_361_fu_7298_p1);

assign tmp_49_16_fu_7332_p2 = (buffer1_1_96_4x4_p_V_41_q0 + tmp_363_fu_7328_p1);

assign tmp_49_17_fu_7362_p2 = (buffer1_1_96_4x4_p_V_42_q0 + tmp_365_fu_7358_p1);

assign tmp_49_18_fu_7392_p2 = (buffer1_1_96_4x4_p_V_43_q0 + tmp_367_fu_7388_p1);

assign tmp_49_19_fu_7422_p2 = (buffer1_1_96_4x4_p_V_44_q0 + tmp_369_fu_7418_p1);

assign tmp_49_1_fu_6852_p2 = (buffer1_1_96_4x4_p_V_25_q0 + tmp_331_fu_6848_p1);

assign tmp_49_20_fu_7452_p2 = (buffer1_1_96_4x4_p_V_45_q0 + tmp_371_fu_7448_p1);

assign tmp_49_21_fu_7482_p2 = (buffer1_1_96_4x4_p_V_46_q0 + tmp_373_fu_7478_p1);

assign tmp_49_22_fu_7512_p2 = (buffer1_1_96_4x4_p_V_47_q0 + tmp_375_fu_7508_p1);

assign tmp_49_2_fu_6882_p2 = (buffer1_1_96_4x4_p_V_26_q0 + tmp_333_fu_6878_p1);

assign tmp_49_3_fu_6912_p2 = (buffer1_1_96_4x4_p_V_27_q0 + tmp_335_fu_6908_p1);

assign tmp_49_4_fu_6942_p2 = (buffer1_1_96_4x4_p_V_28_q0 + tmp_337_fu_6938_p1);

assign tmp_49_5_fu_6972_p2 = (buffer1_1_96_4x4_p_V_29_q0 + tmp_339_fu_6968_p1);

assign tmp_49_6_fu_7002_p2 = (buffer1_1_96_4x4_p_V_30_q0 + tmp_341_fu_6998_p1);

assign tmp_49_7_fu_7032_p2 = (buffer1_1_96_4x4_p_V_31_q0 + tmp_343_fu_7028_p1);

assign tmp_49_8_fu_7062_p2 = (buffer1_1_96_4x4_p_V_32_q0 + tmp_345_fu_7058_p1);

assign tmp_49_9_fu_7092_p2 = (buffer1_1_96_4x4_p_V_33_q0 + tmp_347_fu_7088_p1);

assign tmp_49_s_fu_7122_p2 = (buffer1_1_96_4x4_p_V_34_q0 + tmp_349_fu_7118_p1);

assign tmp_51_10_fu_7163_p2 = (buffer1_1_96_4x4_p_V_83_q0 + tmp_352_fu_7159_p1);

assign tmp_51_11_fu_7193_p2 = (buffer1_1_96_4x4_p_V_84_q0 + tmp_354_fu_7189_p1);

assign tmp_51_12_fu_7223_p2 = (buffer1_1_96_4x4_p_V_85_q0 + tmp_356_fu_7219_p1);

assign tmp_51_13_fu_7253_p2 = (buffer1_1_96_4x4_p_V_86_q0 + tmp_358_fu_7249_p1);

assign tmp_51_14_fu_7283_p2 = (buffer1_1_96_4x4_p_V_87_q0 + tmp_360_fu_7279_p1);

assign tmp_51_15_fu_7313_p2 = (buffer1_1_96_4x4_p_V_88_q0 + tmp_362_fu_7309_p1);

assign tmp_51_16_fu_7343_p2 = (buffer1_1_96_4x4_p_V_89_q0 + tmp_364_fu_7339_p1);

assign tmp_51_17_fu_7373_p2 = (buffer1_1_96_4x4_p_V_90_q0 + tmp_366_fu_7369_p1);

assign tmp_51_18_fu_7403_p2 = (buffer1_1_96_4x4_p_V_91_q0 + tmp_368_fu_7399_p1);

assign tmp_51_19_fu_7433_p2 = (buffer1_1_96_4x4_p_V_92_q0 + tmp_370_fu_7429_p1);

assign tmp_51_1_fu_6863_p2 = (buffer1_1_96_4x4_p_V_73_q0 + tmp_332_fu_6859_p1);

assign tmp_51_20_fu_7463_p2 = (buffer1_1_96_4x4_p_V_93_q0 + tmp_372_fu_7459_p1);

assign tmp_51_21_fu_7493_p2 = (buffer1_1_96_4x4_p_V_94_q0 + tmp_374_fu_7489_p1);

assign tmp_51_22_fu_7523_p2 = (buffer1_1_96_4x4_p_V_95_q0 + tmp_376_fu_7519_p1);

assign tmp_51_2_fu_6893_p2 = (buffer1_1_96_4x4_p_V_74_q0 + tmp_334_fu_6889_p1);

assign tmp_51_3_fu_6923_p2 = (buffer1_1_96_4x4_p_V_75_q0 + tmp_336_fu_6919_p1);

assign tmp_51_4_fu_6953_p2 = (buffer1_1_96_4x4_p_V_76_q0 + tmp_338_fu_6949_p1);

assign tmp_51_5_fu_6983_p2 = (buffer1_1_96_4x4_p_V_77_q0 + tmp_340_fu_6979_p1);

assign tmp_51_6_fu_7013_p2 = (buffer1_1_96_4x4_p_V_78_q0 + tmp_342_fu_7009_p1);

assign tmp_51_7_fu_7043_p2 = (buffer1_1_96_4x4_p_V_79_q0 + tmp_344_fu_7039_p1);

assign tmp_51_8_fu_7073_p2 = (buffer1_1_96_4x4_p_V_80_q0 + tmp_346_fu_7069_p1);

assign tmp_51_9_fu_7103_p2 = (buffer1_1_96_4x4_p_V_81_q0 + tmp_348_fu_7099_p1);

assign tmp_51_s_fu_7133_p2 = (buffer1_1_96_4x4_p_V_82_q0 + tmp_350_fu_7129_p1);

assign tmp_s_fu_5366_p2 = (exitcond31_mid_fu_5354_p2 | exitcond_flatten_reg_7983);

assign w10_cast1_cast_fu_7660_p1 = w10_mid2_reg_9120;

assign w10_mid2_fu_7610_p3 = ((tmp_236_fu_7605_p2[0:0] === 1'b1) ? 3'd1 : w10_phi_fu_4986_p4);

assign w2_cast8_cast1_fu_5574_p1 = w2_reg_4878;

assign w2_cast8_cast_fu_5578_p1 = w2_reg_4878;

assign w5_cast5_cast1_fu_6574_p1 = w5_reg_4913;

assign w5_cast5_cast_fu_6578_p1 = w5_reg_4913;

assign w_18_fu_5387_p2 = (w_mid2_fu_5371_p3 + 3'd1);

assign w_19_fu_5804_p2 = (w2_reg_4878 + 3'd1);

assign w_20_fu_6804_p2 = (w5_reg_4913 + 3'd1);

assign w_21_fu_7626_p2 = (w10_mid2_fu_7610_p3 + 3'd1);

assign w_cast_cast_fu_5421_p1 = w_mid2_reg_8001;

assign w_mid2_fu_5371_p3 = ((tmp_s_fu_5366_p2[0:0] === 1'b1) ? 3'd1 : w_phi_fu_4858_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_8304;

assign weight_10_V_address0 = weight_10_V_addr_reg_8354;

assign weight_11_V_address0 = weight_11_V_addr_reg_8359;

assign weight_12_V_address0 = weight_12_V_addr_reg_8364;

assign weight_13_V_address0 = weight_13_V_addr_reg_8369;

assign weight_14_V_address0 = weight_14_V_addr_reg_8374;

assign weight_15_V_address0 = weight_15_V_addr_reg_8379;

assign weight_16_V_address0 = weight_16_V_addr_reg_8384;

assign weight_17_V_address0 = weight_17_V_addr_reg_8389;

assign weight_18_V_address0 = weight_18_V_addr_reg_8394;

assign weight_19_V_address0 = weight_19_V_addr_reg_8399;

assign weight_1_V_address0 = weight_1_V_addr_reg_8309;

assign weight_20_V_address0 = weight_20_V_addr_reg_8404;

assign weight_21_V_address0 = weight_21_V_addr_reg_8409;

assign weight_22_V_address0 = weight_22_V_addr_reg_8414;

assign weight_23_V_address0 = weight_23_V_addr_reg_8419;

assign weight_24_V_address0 = weight_24_V_addr_reg_8839;

assign weight_25_V_address0 = weight_25_V_addr_reg_8844;

assign weight_26_V_address0 = weight_26_V_addr_reg_8849;

assign weight_27_V_address0 = weight_27_V_addr_reg_8854;

assign weight_28_V_address0 = weight_28_V_addr_reg_8859;

assign weight_29_V_address0 = weight_29_V_addr_reg_8864;

assign weight_2_V_address0 = weight_2_V_addr_reg_8314;

assign weight_30_V_address0 = weight_30_V_addr_reg_8869;

assign weight_31_V_address0 = weight_31_V_addr_reg_8874;

assign weight_32_V_address0 = weight_32_V_addr_reg_8879;

assign weight_33_V_address0 = weight_33_V_addr_reg_8884;

assign weight_34_V_address0 = weight_34_V_addr_reg_8889;

assign weight_35_V_address0 = weight_35_V_addr_reg_8894;

assign weight_36_V_address0 = weight_36_V_addr_reg_8899;

assign weight_37_V_address0 = weight_37_V_addr_reg_8904;

assign weight_38_V_address0 = weight_38_V_addr_reg_8909;

assign weight_39_V_address0 = weight_39_V_addr_reg_8914;

assign weight_3_V_address0 = weight_3_V_addr_reg_8319;

assign weight_40_V_address0 = weight_40_V_addr_reg_8919;

assign weight_41_V_address0 = weight_41_V_addr_reg_8924;

assign weight_42_V_address0 = weight_42_V_addr_reg_8929;

assign weight_43_V_address0 = weight_43_V_addr_reg_8934;

assign weight_44_V_address0 = weight_44_V_addr_reg_8939;

assign weight_45_V_address0 = weight_45_V_addr_reg_8944;

assign weight_46_V_address0 = weight_46_V_addr_reg_8949;

assign weight_47_V_address0 = weight_47_V_addr_reg_8954;

assign weight_48_V_address0 = weight_48_V_addr_reg_8424;

assign weight_49_V_address0 = weight_49_V_addr_reg_8429;

assign weight_4_V_address0 = weight_4_V_addr_reg_8324;

assign weight_50_V_address0 = weight_50_V_addr_reg_8434;

assign weight_51_V_address0 = weight_51_V_addr_reg_8439;

assign weight_52_V_address0 = weight_52_V_addr_reg_8444;

assign weight_53_V_address0 = weight_53_V_addr_reg_8449;

assign weight_54_V_address0 = weight_54_V_addr_reg_8454;

assign weight_55_V_address0 = weight_55_V_addr_reg_8459;

assign weight_56_V_address0 = weight_56_V_addr_reg_8464;

assign weight_57_V_address0 = weight_57_V_addr_reg_8469;

assign weight_58_V_address0 = weight_58_V_addr_reg_8474;

assign weight_59_V_address0 = weight_59_V_addr_reg_8479;

assign weight_5_V_address0 = weight_5_V_addr_reg_8329;

assign weight_60_V_address0 = weight_60_V_addr_reg_8484;

assign weight_61_V_address0 = weight_61_V_addr_reg_8489;

assign weight_62_V_address0 = weight_62_V_addr_reg_8494;

assign weight_63_V_address0 = weight_63_V_addr_reg_8499;

assign weight_64_V_address0 = weight_64_V_addr_reg_8504;

assign weight_65_V_address0 = weight_65_V_addr_reg_8509;

assign weight_66_V_address0 = weight_66_V_addr_reg_8514;

assign weight_67_V_address0 = weight_67_V_addr_reg_8519;

assign weight_68_V_address0 = weight_68_V_addr_reg_8524;

assign weight_69_V_address0 = weight_69_V_addr_reg_8529;

assign weight_6_V_address0 = weight_6_V_addr_reg_8334;

assign weight_70_V_address0 = weight_70_V_addr_reg_8534;

assign weight_71_V_address0 = weight_71_V_addr_reg_8539;

assign weight_72_V_address0 = weight_72_V_addr_reg_8959;

assign weight_73_V_address0 = weight_73_V_addr_reg_8964;

assign weight_74_V_address0 = weight_74_V_addr_reg_8969;

assign weight_75_V_address0 = weight_75_V_addr_reg_8974;

assign weight_76_V_address0 = weight_76_V_addr_reg_8979;

assign weight_77_V_address0 = weight_77_V_addr_reg_8984;

assign weight_78_V_address0 = weight_78_V_addr_reg_8989;

assign weight_79_V_address0 = weight_79_V_addr_reg_8994;

assign weight_7_V_address0 = weight_7_V_addr_reg_8339;

assign weight_80_V_address0 = weight_80_V_addr_reg_8999;

assign weight_81_V_address0 = weight_81_V_addr_reg_9004;

assign weight_82_V_address0 = weight_82_V_addr_reg_9009;

assign weight_83_V_address0 = weight_83_V_addr_reg_9014;

assign weight_84_V_address0 = weight_84_V_addr_reg_9019;

assign weight_85_V_address0 = weight_85_V_addr_reg_9024;

assign weight_86_V_address0 = weight_86_V_addr_reg_9029;

assign weight_87_V_address0 = weight_87_V_addr_reg_9034;

assign weight_88_V_address0 = weight_88_V_addr_reg_9039;

assign weight_89_V_address0 = weight_89_V_addr_reg_9044;

assign weight_8_V_address0 = weight_8_V_addr_reg_8344;

assign weight_90_V_address0 = weight_90_V_addr_reg_9049;

assign weight_91_V_address0 = weight_91_V_addr_reg_9054;

assign weight_92_V_address0 = weight_92_V_addr_reg_9059;

assign weight_93_V_address0 = weight_93_V_addr_reg_9064;

assign weight_94_V_address0 = weight_94_V_addr_reg_9069;

assign weight_95_V_address0 = weight_95_V_addr_reg_9074;

assign weight_9_V_address0 = weight_9_V_addr_reg_8349;

always @ (posedge ap_clk) begin
    h1_cast9_cast1_reg_8023[6:3] <= 4'b0000;
    h1_cast9_cast_reg_8028[11:3] <= 9'b000000000;
    tmp_222_reg_8033[0] <= 1'b0;
    w2_cast8_cast1_reg_8041[12:3] <= 10'b0000000000;
    w2_cast8_cast_reg_8046[6:3] <= 4'b0000;
    h4_cast6_cast1_reg_8557[6:3] <= 4'b0000;
    h4_cast6_cast_reg_8562[11:3] <= 9'b000000000;
    tmp_225_reg_8567[0] <= 1'b0;
    w5_cast5_cast1_reg_8576[12:3] <= 10'b0000000000;
    w5_cast5_cast_reg_8581[6:3] <= 4'b0000;
end

endmodule //subconv_1x1_4_p
