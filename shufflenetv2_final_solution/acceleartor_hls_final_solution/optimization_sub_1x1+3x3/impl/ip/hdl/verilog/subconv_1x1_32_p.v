// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_32_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_0_Downs_23_address0,
        ShuffleConvs_0_Downs_23_ce0,
        ShuffleConvs_0_Downs_23_we0,
        ShuffleConvs_0_Downs_23_d0,
        ShuffleConvs_0_Downs_23_q0,
        ShuffleConvs_0_Downs_23_address1,
        ShuffleConvs_0_Downs_23_ce1,
        ShuffleConvs_0_Downs_23_we1,
        ShuffleConvs_0_Downs_23_d1,
        ShuffleConvs_0_Downs_19_address0,
        ShuffleConvs_0_Downs_19_ce0,
        ShuffleConvs_0_Downs_19_we0,
        ShuffleConvs_0_Downs_19_d0,
        ShuffleConvs_0_Downs_19_q0,
        ShuffleConvs_0_Downs_19_address1,
        ShuffleConvs_0_Downs_19_ce1,
        ShuffleConvs_0_Downs_19_we1,
        ShuffleConvs_0_Downs_19_d1,
        ShuffleConvs_0_Downs_22_address0,
        ShuffleConvs_0_Downs_22_ce0,
        ShuffleConvs_0_Downs_22_we0,
        ShuffleConvs_0_Downs_22_d0,
        ShuffleConvs_0_Downs_22_q0,
        ShuffleConvs_0_Downs_22_address1,
        ShuffleConvs_0_Downs_22_ce1,
        ShuffleConvs_0_Downs_22_we1,
        ShuffleConvs_0_Downs_22_d1,
        ShuffleConvs_0_Downs_18_address0,
        ShuffleConvs_0_Downs_18_ce0,
        ShuffleConvs_0_Downs_18_we0,
        ShuffleConvs_0_Downs_18_d0,
        ShuffleConvs_0_Downs_18_q0,
        ShuffleConvs_0_Downs_18_address1,
        ShuffleConvs_0_Downs_18_ce1,
        ShuffleConvs_0_Downs_18_we1,
        ShuffleConvs_0_Downs_18_d1,
        ShuffleConvs_0_Downs_11_address0,
        ShuffleConvs_0_Downs_11_ce0,
        ShuffleConvs_0_Downs_11_we0,
        ShuffleConvs_0_Downs_11_d0,
        ShuffleConvs_0_Downs_11_q0,
        ShuffleConvs_0_Downs_11_address1,
        ShuffleConvs_0_Downs_11_ce1,
        ShuffleConvs_0_Downs_11_we1,
        ShuffleConvs_0_Downs_11_d1,
        ShuffleConvs_0_Downs_17_address0,
        ShuffleConvs_0_Downs_17_ce0,
        ShuffleConvs_0_Downs_17_we0,
        ShuffleConvs_0_Downs_17_d0,
        ShuffleConvs_0_Downs_17_q0,
        ShuffleConvs_0_Downs_17_address1,
        ShuffleConvs_0_Downs_17_ce1,
        ShuffleConvs_0_Downs_17_we1,
        ShuffleConvs_0_Downs_17_d1,
        ShuffleConvs_0_Downs_6_address0,
        ShuffleConvs_0_Downs_6_ce0,
        ShuffleConvs_0_Downs_6_we0,
        ShuffleConvs_0_Downs_6_d0,
        ShuffleConvs_0_Downs_6_q0,
        ShuffleConvs_0_Downs_6_address1,
        ShuffleConvs_0_Downs_6_ce1,
        ShuffleConvs_0_Downs_6_we1,
        ShuffleConvs_0_Downs_6_d1,
        ShuffleConvs_0_Downs_16_address0,
        ShuffleConvs_0_Downs_16_ce0,
        ShuffleConvs_0_Downs_16_we0,
        ShuffleConvs_0_Downs_16_d0,
        ShuffleConvs_0_Downs_16_q0,
        ShuffleConvs_0_Downs_16_address1,
        ShuffleConvs_0_Downs_16_ce1,
        ShuffleConvs_0_Downs_16_we1,
        ShuffleConvs_0_Downs_16_d1,
        ShuffleConvs_0_Downs_5_address0,
        ShuffleConvs_0_Downs_5_ce0,
        ShuffleConvs_0_Downs_5_we0,
        ShuffleConvs_0_Downs_5_d0,
        ShuffleConvs_0_Downs_5_q0,
        ShuffleConvs_0_Downs_5_address1,
        ShuffleConvs_0_Downs_5_ce1,
        ShuffleConvs_0_Downs_5_we1,
        ShuffleConvs_0_Downs_5_d1,
        ShuffleConvs_0_Downs_15_address0,
        ShuffleConvs_0_Downs_15_ce0,
        ShuffleConvs_0_Downs_15_we0,
        ShuffleConvs_0_Downs_15_d0,
        ShuffleConvs_0_Downs_15_q0,
        ShuffleConvs_0_Downs_15_address1,
        ShuffleConvs_0_Downs_15_ce1,
        ShuffleConvs_0_Downs_15_we1,
        ShuffleConvs_0_Downs_15_d1,
        ShuffleConvs_0_Downs_4_address0,
        ShuffleConvs_0_Downs_4_ce0,
        ShuffleConvs_0_Downs_4_we0,
        ShuffleConvs_0_Downs_4_d0,
        ShuffleConvs_0_Downs_4_q0,
        ShuffleConvs_0_Downs_4_address1,
        ShuffleConvs_0_Downs_4_ce1,
        ShuffleConvs_0_Downs_4_we1,
        ShuffleConvs_0_Downs_4_d1,
        ShuffleConvs_0_Downs_14_address0,
        ShuffleConvs_0_Downs_14_ce0,
        ShuffleConvs_0_Downs_14_we0,
        ShuffleConvs_0_Downs_14_d0,
        ShuffleConvs_0_Downs_14_q0,
        ShuffleConvs_0_Downs_14_address1,
        ShuffleConvs_0_Downs_14_ce1,
        ShuffleConvs_0_Downs_14_we1,
        ShuffleConvs_0_Downs_14_d1,
        ShuffleConvs_0_Downs_3_address0,
        ShuffleConvs_0_Downs_3_ce0,
        ShuffleConvs_0_Downs_3_we0,
        ShuffleConvs_0_Downs_3_d0,
        ShuffleConvs_0_Downs_3_q0,
        ShuffleConvs_0_Downs_3_address1,
        ShuffleConvs_0_Downs_3_ce1,
        ShuffleConvs_0_Downs_3_we1,
        ShuffleConvs_0_Downs_3_d1,
        ShuffleConvs_0_Downs_13_address0,
        ShuffleConvs_0_Downs_13_ce0,
        ShuffleConvs_0_Downs_13_we0,
        ShuffleConvs_0_Downs_13_d0,
        ShuffleConvs_0_Downs_13_q0,
        ShuffleConvs_0_Downs_13_address1,
        ShuffleConvs_0_Downs_13_ce1,
        ShuffleConvs_0_Downs_13_we1,
        ShuffleConvs_0_Downs_13_d1,
        ShuffleConvs_0_Downs_2_address0,
        ShuffleConvs_0_Downs_2_ce0,
        ShuffleConvs_0_Downs_2_we0,
        ShuffleConvs_0_Downs_2_d0,
        ShuffleConvs_0_Downs_2_q0,
        ShuffleConvs_0_Downs_2_address1,
        ShuffleConvs_0_Downs_2_ce1,
        ShuffleConvs_0_Downs_2_we1,
        ShuffleConvs_0_Downs_2_d1,
        ShuffleConvs_0_Downs_12_address0,
        ShuffleConvs_0_Downs_12_ce0,
        ShuffleConvs_0_Downs_12_we0,
        ShuffleConvs_0_Downs_12_d0,
        ShuffleConvs_0_Downs_12_q0,
        ShuffleConvs_0_Downs_12_address1,
        ShuffleConvs_0_Downs_12_ce1,
        ShuffleConvs_0_Downs_12_we1,
        ShuffleConvs_0_Downs_12_d1,
        ShuffleConvs_0_Downs_1_address0,
        ShuffleConvs_0_Downs_1_ce0,
        ShuffleConvs_0_Downs_1_we0,
        ShuffleConvs_0_Downs_1_d0,
        ShuffleConvs_0_Downs_1_q0,
        ShuffleConvs_0_Downs_1_address1,
        ShuffleConvs_0_Downs_1_ce1,
        ShuffleConvs_0_Downs_1_we1,
        ShuffleConvs_0_Downs_1_d1,
        ShuffleConvs_0_Downs_10_address0,
        ShuffleConvs_0_Downs_10_ce0,
        ShuffleConvs_0_Downs_10_we0,
        ShuffleConvs_0_Downs_10_d0,
        ShuffleConvs_0_Downs_10_q0,
        ShuffleConvs_0_Downs_10_address1,
        ShuffleConvs_0_Downs_10_ce1,
        ShuffleConvs_0_Downs_10_we1,
        ShuffleConvs_0_Downs_10_d1,
        ShuffleConvs_0_Downs_address0,
        ShuffleConvs_0_Downs_ce0,
        ShuffleConvs_0_Downs_we0,
        ShuffleConvs_0_Downs_d0,
        ShuffleConvs_0_Downs_q0,
        ShuffleConvs_0_Downs_address1,
        ShuffleConvs_0_Downs_ce1,
        ShuffleConvs_0_Downs_we1,
        ShuffleConvs_0_Downs_d1,
        ShuffleConvs_0_Downs_9_address0,
        ShuffleConvs_0_Downs_9_ce0,
        ShuffleConvs_0_Downs_9_we0,
        ShuffleConvs_0_Downs_9_d0,
        ShuffleConvs_0_Downs_9_q0,
        ShuffleConvs_0_Downs_9_address1,
        ShuffleConvs_0_Downs_9_ce1,
        ShuffleConvs_0_Downs_9_we1,
        ShuffleConvs_0_Downs_9_d1,
        ShuffleConvs_0_Downs_21_address0,
        ShuffleConvs_0_Downs_21_ce0,
        ShuffleConvs_0_Downs_21_we0,
        ShuffleConvs_0_Downs_21_d0,
        ShuffleConvs_0_Downs_21_q0,
        ShuffleConvs_0_Downs_21_address1,
        ShuffleConvs_0_Downs_21_ce1,
        ShuffleConvs_0_Downs_21_we1,
        ShuffleConvs_0_Downs_21_d1,
        ShuffleConvs_0_Downs_8_address0,
        ShuffleConvs_0_Downs_8_ce0,
        ShuffleConvs_0_Downs_8_we0,
        ShuffleConvs_0_Downs_8_d0,
        ShuffleConvs_0_Downs_8_q0,
        ShuffleConvs_0_Downs_8_address1,
        ShuffleConvs_0_Downs_8_ce1,
        ShuffleConvs_0_Downs_8_we1,
        ShuffleConvs_0_Downs_8_d1,
        ShuffleConvs_0_Downs_20_address0,
        ShuffleConvs_0_Downs_20_ce0,
        ShuffleConvs_0_Downs_20_we0,
        ShuffleConvs_0_Downs_20_d0,
        ShuffleConvs_0_Downs_20_q0,
        ShuffleConvs_0_Downs_20_address1,
        ShuffleConvs_0_Downs_20_ce1,
        ShuffleConvs_0_Downs_20_we1,
        ShuffleConvs_0_Downs_20_d1,
        ShuffleConvs_0_Downs_7_address0,
        ShuffleConvs_0_Downs_7_ce0,
        ShuffleConvs_0_Downs_7_we0,
        ShuffleConvs_0_Downs_7_d0,
        ShuffleConvs_0_Downs_7_q0,
        ShuffleConvs_0_Downs_7_address1,
        ShuffleConvs_0_Downs_7_ce1,
        ShuffleConvs_0_Downs_7_we1,
        ShuffleConvs_0_Downs_7_d1
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_pp0_stage0 = 13'd2;
parameter    ap_ST_fsm_state5 = 13'd4;
parameter    ap_ST_fsm_state6 = 13'd8;
parameter    ap_ST_fsm_state7 = 13'd16;
parameter    ap_ST_fsm_state8 = 13'd32;
parameter    ap_ST_fsm_state9 = 13'd64;
parameter    ap_ST_fsm_state10 = 13'd128;
parameter    ap_ST_fsm_state11 = 13'd256;
parameter    ap_ST_fsm_state12 = 13'd512;
parameter    ap_ST_fsm_state13 = 13'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 13'd2048;
parameter    ap_ST_fsm_state18 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [4:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [4:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [4:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [4:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [4:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [4:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [4:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [4:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [4:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [4:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [4:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [4:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [4:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [4:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [4:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [4:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [4:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [4:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [4:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [4:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [4:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [4:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [4:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [4:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [10:0] ShuffleConvs_0_Downs_23_address0;
output   ShuffleConvs_0_Downs_23_ce0;
output   ShuffleConvs_0_Downs_23_we0;
output  [7:0] ShuffleConvs_0_Downs_23_d0;
input  [7:0] ShuffleConvs_0_Downs_23_q0;
output  [10:0] ShuffleConvs_0_Downs_23_address1;
output   ShuffleConvs_0_Downs_23_ce1;
output   ShuffleConvs_0_Downs_23_we1;
output  [7:0] ShuffleConvs_0_Downs_23_d1;
output  [10:0] ShuffleConvs_0_Downs_19_address0;
output   ShuffleConvs_0_Downs_19_ce0;
output   ShuffleConvs_0_Downs_19_we0;
output  [7:0] ShuffleConvs_0_Downs_19_d0;
input  [7:0] ShuffleConvs_0_Downs_19_q0;
output  [10:0] ShuffleConvs_0_Downs_19_address1;
output   ShuffleConvs_0_Downs_19_ce1;
output   ShuffleConvs_0_Downs_19_we1;
output  [7:0] ShuffleConvs_0_Downs_19_d1;
output  [10:0] ShuffleConvs_0_Downs_22_address0;
output   ShuffleConvs_0_Downs_22_ce0;
output   ShuffleConvs_0_Downs_22_we0;
output  [7:0] ShuffleConvs_0_Downs_22_d0;
input  [7:0] ShuffleConvs_0_Downs_22_q0;
output  [10:0] ShuffleConvs_0_Downs_22_address1;
output   ShuffleConvs_0_Downs_22_ce1;
output   ShuffleConvs_0_Downs_22_we1;
output  [7:0] ShuffleConvs_0_Downs_22_d1;
output  [10:0] ShuffleConvs_0_Downs_18_address0;
output   ShuffleConvs_0_Downs_18_ce0;
output   ShuffleConvs_0_Downs_18_we0;
output  [7:0] ShuffleConvs_0_Downs_18_d0;
input  [7:0] ShuffleConvs_0_Downs_18_q0;
output  [10:0] ShuffleConvs_0_Downs_18_address1;
output   ShuffleConvs_0_Downs_18_ce1;
output   ShuffleConvs_0_Downs_18_we1;
output  [7:0] ShuffleConvs_0_Downs_18_d1;
output  [10:0] ShuffleConvs_0_Downs_11_address0;
output   ShuffleConvs_0_Downs_11_ce0;
output   ShuffleConvs_0_Downs_11_we0;
output  [7:0] ShuffleConvs_0_Downs_11_d0;
input  [7:0] ShuffleConvs_0_Downs_11_q0;
output  [10:0] ShuffleConvs_0_Downs_11_address1;
output   ShuffleConvs_0_Downs_11_ce1;
output   ShuffleConvs_0_Downs_11_we1;
output  [7:0] ShuffleConvs_0_Downs_11_d1;
output  [10:0] ShuffleConvs_0_Downs_17_address0;
output   ShuffleConvs_0_Downs_17_ce0;
output   ShuffleConvs_0_Downs_17_we0;
output  [7:0] ShuffleConvs_0_Downs_17_d0;
input  [7:0] ShuffleConvs_0_Downs_17_q0;
output  [10:0] ShuffleConvs_0_Downs_17_address1;
output   ShuffleConvs_0_Downs_17_ce1;
output   ShuffleConvs_0_Downs_17_we1;
output  [7:0] ShuffleConvs_0_Downs_17_d1;
output  [10:0] ShuffleConvs_0_Downs_6_address0;
output   ShuffleConvs_0_Downs_6_ce0;
output   ShuffleConvs_0_Downs_6_we0;
output  [7:0] ShuffleConvs_0_Downs_6_d0;
input  [7:0] ShuffleConvs_0_Downs_6_q0;
output  [10:0] ShuffleConvs_0_Downs_6_address1;
output   ShuffleConvs_0_Downs_6_ce1;
output   ShuffleConvs_0_Downs_6_we1;
output  [7:0] ShuffleConvs_0_Downs_6_d1;
output  [10:0] ShuffleConvs_0_Downs_16_address0;
output   ShuffleConvs_0_Downs_16_ce0;
output   ShuffleConvs_0_Downs_16_we0;
output  [7:0] ShuffleConvs_0_Downs_16_d0;
input  [7:0] ShuffleConvs_0_Downs_16_q0;
output  [10:0] ShuffleConvs_0_Downs_16_address1;
output   ShuffleConvs_0_Downs_16_ce1;
output   ShuffleConvs_0_Downs_16_we1;
output  [7:0] ShuffleConvs_0_Downs_16_d1;
output  [10:0] ShuffleConvs_0_Downs_5_address0;
output   ShuffleConvs_0_Downs_5_ce0;
output   ShuffleConvs_0_Downs_5_we0;
output  [7:0] ShuffleConvs_0_Downs_5_d0;
input  [7:0] ShuffleConvs_0_Downs_5_q0;
output  [10:0] ShuffleConvs_0_Downs_5_address1;
output   ShuffleConvs_0_Downs_5_ce1;
output   ShuffleConvs_0_Downs_5_we1;
output  [7:0] ShuffleConvs_0_Downs_5_d1;
output  [10:0] ShuffleConvs_0_Downs_15_address0;
output   ShuffleConvs_0_Downs_15_ce0;
output   ShuffleConvs_0_Downs_15_we0;
output  [7:0] ShuffleConvs_0_Downs_15_d0;
input  [7:0] ShuffleConvs_0_Downs_15_q0;
output  [10:0] ShuffleConvs_0_Downs_15_address1;
output   ShuffleConvs_0_Downs_15_ce1;
output   ShuffleConvs_0_Downs_15_we1;
output  [7:0] ShuffleConvs_0_Downs_15_d1;
output  [10:0] ShuffleConvs_0_Downs_4_address0;
output   ShuffleConvs_0_Downs_4_ce0;
output   ShuffleConvs_0_Downs_4_we0;
output  [7:0] ShuffleConvs_0_Downs_4_d0;
input  [7:0] ShuffleConvs_0_Downs_4_q0;
output  [10:0] ShuffleConvs_0_Downs_4_address1;
output   ShuffleConvs_0_Downs_4_ce1;
output   ShuffleConvs_0_Downs_4_we1;
output  [7:0] ShuffleConvs_0_Downs_4_d1;
output  [10:0] ShuffleConvs_0_Downs_14_address0;
output   ShuffleConvs_0_Downs_14_ce0;
output   ShuffleConvs_0_Downs_14_we0;
output  [7:0] ShuffleConvs_0_Downs_14_d0;
input  [7:0] ShuffleConvs_0_Downs_14_q0;
output  [10:0] ShuffleConvs_0_Downs_14_address1;
output   ShuffleConvs_0_Downs_14_ce1;
output   ShuffleConvs_0_Downs_14_we1;
output  [7:0] ShuffleConvs_0_Downs_14_d1;
output  [10:0] ShuffleConvs_0_Downs_3_address0;
output   ShuffleConvs_0_Downs_3_ce0;
output   ShuffleConvs_0_Downs_3_we0;
output  [7:0] ShuffleConvs_0_Downs_3_d0;
input  [7:0] ShuffleConvs_0_Downs_3_q0;
output  [10:0] ShuffleConvs_0_Downs_3_address1;
output   ShuffleConvs_0_Downs_3_ce1;
output   ShuffleConvs_0_Downs_3_we1;
output  [7:0] ShuffleConvs_0_Downs_3_d1;
output  [10:0] ShuffleConvs_0_Downs_13_address0;
output   ShuffleConvs_0_Downs_13_ce0;
output   ShuffleConvs_0_Downs_13_we0;
output  [7:0] ShuffleConvs_0_Downs_13_d0;
input  [7:0] ShuffleConvs_0_Downs_13_q0;
output  [10:0] ShuffleConvs_0_Downs_13_address1;
output   ShuffleConvs_0_Downs_13_ce1;
output   ShuffleConvs_0_Downs_13_we1;
output  [7:0] ShuffleConvs_0_Downs_13_d1;
output  [10:0] ShuffleConvs_0_Downs_2_address0;
output   ShuffleConvs_0_Downs_2_ce0;
output   ShuffleConvs_0_Downs_2_we0;
output  [7:0] ShuffleConvs_0_Downs_2_d0;
input  [7:0] ShuffleConvs_0_Downs_2_q0;
output  [10:0] ShuffleConvs_0_Downs_2_address1;
output   ShuffleConvs_0_Downs_2_ce1;
output   ShuffleConvs_0_Downs_2_we1;
output  [7:0] ShuffleConvs_0_Downs_2_d1;
output  [10:0] ShuffleConvs_0_Downs_12_address0;
output   ShuffleConvs_0_Downs_12_ce0;
output   ShuffleConvs_0_Downs_12_we0;
output  [7:0] ShuffleConvs_0_Downs_12_d0;
input  [7:0] ShuffleConvs_0_Downs_12_q0;
output  [10:0] ShuffleConvs_0_Downs_12_address1;
output   ShuffleConvs_0_Downs_12_ce1;
output   ShuffleConvs_0_Downs_12_we1;
output  [7:0] ShuffleConvs_0_Downs_12_d1;
output  [10:0] ShuffleConvs_0_Downs_1_address0;
output   ShuffleConvs_0_Downs_1_ce0;
output   ShuffleConvs_0_Downs_1_we0;
output  [7:0] ShuffleConvs_0_Downs_1_d0;
input  [7:0] ShuffleConvs_0_Downs_1_q0;
output  [10:0] ShuffleConvs_0_Downs_1_address1;
output   ShuffleConvs_0_Downs_1_ce1;
output   ShuffleConvs_0_Downs_1_we1;
output  [7:0] ShuffleConvs_0_Downs_1_d1;
output  [10:0] ShuffleConvs_0_Downs_10_address0;
output   ShuffleConvs_0_Downs_10_ce0;
output   ShuffleConvs_0_Downs_10_we0;
output  [7:0] ShuffleConvs_0_Downs_10_d0;
input  [7:0] ShuffleConvs_0_Downs_10_q0;
output  [10:0] ShuffleConvs_0_Downs_10_address1;
output   ShuffleConvs_0_Downs_10_ce1;
output   ShuffleConvs_0_Downs_10_we1;
output  [7:0] ShuffleConvs_0_Downs_10_d1;
output  [10:0] ShuffleConvs_0_Downs_address0;
output   ShuffleConvs_0_Downs_ce0;
output   ShuffleConvs_0_Downs_we0;
output  [7:0] ShuffleConvs_0_Downs_d0;
input  [7:0] ShuffleConvs_0_Downs_q0;
output  [10:0] ShuffleConvs_0_Downs_address1;
output   ShuffleConvs_0_Downs_ce1;
output   ShuffleConvs_0_Downs_we1;
output  [7:0] ShuffleConvs_0_Downs_d1;
output  [10:0] ShuffleConvs_0_Downs_9_address0;
output   ShuffleConvs_0_Downs_9_ce0;
output   ShuffleConvs_0_Downs_9_we0;
output  [7:0] ShuffleConvs_0_Downs_9_d0;
input  [7:0] ShuffleConvs_0_Downs_9_q0;
output  [10:0] ShuffleConvs_0_Downs_9_address1;
output   ShuffleConvs_0_Downs_9_ce1;
output   ShuffleConvs_0_Downs_9_we1;
output  [7:0] ShuffleConvs_0_Downs_9_d1;
output  [10:0] ShuffleConvs_0_Downs_21_address0;
output   ShuffleConvs_0_Downs_21_ce0;
output   ShuffleConvs_0_Downs_21_we0;
output  [7:0] ShuffleConvs_0_Downs_21_d0;
input  [7:0] ShuffleConvs_0_Downs_21_q0;
output  [10:0] ShuffleConvs_0_Downs_21_address1;
output   ShuffleConvs_0_Downs_21_ce1;
output   ShuffleConvs_0_Downs_21_we1;
output  [7:0] ShuffleConvs_0_Downs_21_d1;
output  [10:0] ShuffleConvs_0_Downs_8_address0;
output   ShuffleConvs_0_Downs_8_ce0;
output   ShuffleConvs_0_Downs_8_we0;
output  [7:0] ShuffleConvs_0_Downs_8_d0;
input  [7:0] ShuffleConvs_0_Downs_8_q0;
output  [10:0] ShuffleConvs_0_Downs_8_address1;
output   ShuffleConvs_0_Downs_8_ce1;
output   ShuffleConvs_0_Downs_8_we1;
output  [7:0] ShuffleConvs_0_Downs_8_d1;
output  [10:0] ShuffleConvs_0_Downs_20_address0;
output   ShuffleConvs_0_Downs_20_ce0;
output   ShuffleConvs_0_Downs_20_we0;
output  [7:0] ShuffleConvs_0_Downs_20_d0;
input  [7:0] ShuffleConvs_0_Downs_20_q0;
output  [10:0] ShuffleConvs_0_Downs_20_address1;
output   ShuffleConvs_0_Downs_20_ce1;
output   ShuffleConvs_0_Downs_20_we1;
output  [7:0] ShuffleConvs_0_Downs_20_d1;
output  [10:0] ShuffleConvs_0_Downs_7_address0;
output   ShuffleConvs_0_Downs_7_ce0;
output   ShuffleConvs_0_Downs_7_we0;
output  [7:0] ShuffleConvs_0_Downs_7_d0;
input  [7:0] ShuffleConvs_0_Downs_7_q0;
output  [10:0] ShuffleConvs_0_Downs_7_address1;
output   ShuffleConvs_0_Downs_7_ce1;
output   ShuffleConvs_0_Downs_7_we1;
output  [7:0] ShuffleConvs_0_Downs_7_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg bias_V_ce0;
reg[10:0] ShuffleConvs_0_Downs_23_address0;
reg ShuffleConvs_0_Downs_23_ce0;
reg ShuffleConvs_0_Downs_23_we0;
reg[7:0] ShuffleConvs_0_Downs_23_d0;
reg ShuffleConvs_0_Downs_23_ce1;
reg ShuffleConvs_0_Downs_23_we1;
reg[10:0] ShuffleConvs_0_Downs_19_address0;
reg ShuffleConvs_0_Downs_19_ce0;
reg ShuffleConvs_0_Downs_19_we0;
reg[7:0] ShuffleConvs_0_Downs_19_d0;
reg ShuffleConvs_0_Downs_19_ce1;
reg ShuffleConvs_0_Downs_19_we1;
reg[10:0] ShuffleConvs_0_Downs_22_address0;
reg ShuffleConvs_0_Downs_22_ce0;
reg ShuffleConvs_0_Downs_22_we0;
reg[7:0] ShuffleConvs_0_Downs_22_d0;
reg ShuffleConvs_0_Downs_22_ce1;
reg ShuffleConvs_0_Downs_22_we1;
reg[10:0] ShuffleConvs_0_Downs_18_address0;
reg ShuffleConvs_0_Downs_18_ce0;
reg ShuffleConvs_0_Downs_18_we0;
reg[7:0] ShuffleConvs_0_Downs_18_d0;
reg ShuffleConvs_0_Downs_18_ce1;
reg ShuffleConvs_0_Downs_18_we1;
reg[10:0] ShuffleConvs_0_Downs_11_address0;
reg ShuffleConvs_0_Downs_11_ce0;
reg ShuffleConvs_0_Downs_11_we0;
reg[7:0] ShuffleConvs_0_Downs_11_d0;
reg ShuffleConvs_0_Downs_11_ce1;
reg ShuffleConvs_0_Downs_11_we1;
reg[10:0] ShuffleConvs_0_Downs_17_address0;
reg ShuffleConvs_0_Downs_17_ce0;
reg ShuffleConvs_0_Downs_17_we0;
reg[7:0] ShuffleConvs_0_Downs_17_d0;
reg ShuffleConvs_0_Downs_17_ce1;
reg ShuffleConvs_0_Downs_17_we1;
reg[10:0] ShuffleConvs_0_Downs_6_address0;
reg ShuffleConvs_0_Downs_6_ce0;
reg ShuffleConvs_0_Downs_6_we0;
reg[7:0] ShuffleConvs_0_Downs_6_d0;
reg ShuffleConvs_0_Downs_6_ce1;
reg ShuffleConvs_0_Downs_6_we1;
reg[10:0] ShuffleConvs_0_Downs_16_address0;
reg ShuffleConvs_0_Downs_16_ce0;
reg ShuffleConvs_0_Downs_16_we0;
reg[7:0] ShuffleConvs_0_Downs_16_d0;
reg ShuffleConvs_0_Downs_16_ce1;
reg ShuffleConvs_0_Downs_16_we1;
reg[10:0] ShuffleConvs_0_Downs_5_address0;
reg ShuffleConvs_0_Downs_5_ce0;
reg ShuffleConvs_0_Downs_5_we0;
reg[7:0] ShuffleConvs_0_Downs_5_d0;
reg ShuffleConvs_0_Downs_5_ce1;
reg ShuffleConvs_0_Downs_5_we1;
reg[10:0] ShuffleConvs_0_Downs_15_address0;
reg ShuffleConvs_0_Downs_15_ce0;
reg ShuffleConvs_0_Downs_15_we0;
reg[7:0] ShuffleConvs_0_Downs_15_d0;
reg ShuffleConvs_0_Downs_15_ce1;
reg ShuffleConvs_0_Downs_15_we1;
reg[10:0] ShuffleConvs_0_Downs_4_address0;
reg ShuffleConvs_0_Downs_4_ce0;
reg ShuffleConvs_0_Downs_4_we0;
reg[7:0] ShuffleConvs_0_Downs_4_d0;
reg ShuffleConvs_0_Downs_4_ce1;
reg ShuffleConvs_0_Downs_4_we1;
reg[10:0] ShuffleConvs_0_Downs_14_address0;
reg ShuffleConvs_0_Downs_14_ce0;
reg ShuffleConvs_0_Downs_14_we0;
reg[7:0] ShuffleConvs_0_Downs_14_d0;
reg ShuffleConvs_0_Downs_14_ce1;
reg ShuffleConvs_0_Downs_14_we1;
reg[10:0] ShuffleConvs_0_Downs_3_address0;
reg ShuffleConvs_0_Downs_3_ce0;
reg ShuffleConvs_0_Downs_3_we0;
reg[7:0] ShuffleConvs_0_Downs_3_d0;
reg ShuffleConvs_0_Downs_3_ce1;
reg ShuffleConvs_0_Downs_3_we1;
reg[10:0] ShuffleConvs_0_Downs_13_address0;
reg ShuffleConvs_0_Downs_13_ce0;
reg ShuffleConvs_0_Downs_13_we0;
reg[7:0] ShuffleConvs_0_Downs_13_d0;
reg ShuffleConvs_0_Downs_13_ce1;
reg ShuffleConvs_0_Downs_13_we1;
reg[10:0] ShuffleConvs_0_Downs_2_address0;
reg ShuffleConvs_0_Downs_2_ce0;
reg ShuffleConvs_0_Downs_2_we0;
reg[7:0] ShuffleConvs_0_Downs_2_d0;
reg ShuffleConvs_0_Downs_2_ce1;
reg ShuffleConvs_0_Downs_2_we1;
reg[10:0] ShuffleConvs_0_Downs_12_address0;
reg ShuffleConvs_0_Downs_12_ce0;
reg ShuffleConvs_0_Downs_12_we0;
reg[7:0] ShuffleConvs_0_Downs_12_d0;
reg ShuffleConvs_0_Downs_12_ce1;
reg ShuffleConvs_0_Downs_12_we1;
reg[10:0] ShuffleConvs_0_Downs_1_address0;
reg ShuffleConvs_0_Downs_1_ce0;
reg ShuffleConvs_0_Downs_1_we0;
reg[7:0] ShuffleConvs_0_Downs_1_d0;
reg ShuffleConvs_0_Downs_1_ce1;
reg ShuffleConvs_0_Downs_1_we1;
reg[10:0] ShuffleConvs_0_Downs_10_address0;
reg ShuffleConvs_0_Downs_10_ce0;
reg ShuffleConvs_0_Downs_10_we0;
reg[7:0] ShuffleConvs_0_Downs_10_d0;
reg ShuffleConvs_0_Downs_10_ce1;
reg ShuffleConvs_0_Downs_10_we1;
reg[10:0] ShuffleConvs_0_Downs_address0;
reg ShuffleConvs_0_Downs_ce0;
reg ShuffleConvs_0_Downs_we0;
reg[7:0] ShuffleConvs_0_Downs_d0;
reg ShuffleConvs_0_Downs_ce1;
reg ShuffleConvs_0_Downs_we1;
reg[10:0] ShuffleConvs_0_Downs_9_address0;
reg ShuffleConvs_0_Downs_9_ce0;
reg ShuffleConvs_0_Downs_9_we0;
reg[7:0] ShuffleConvs_0_Downs_9_d0;
reg ShuffleConvs_0_Downs_9_ce1;
reg ShuffleConvs_0_Downs_9_we1;
reg[10:0] ShuffleConvs_0_Downs_21_address0;
reg ShuffleConvs_0_Downs_21_ce0;
reg ShuffleConvs_0_Downs_21_we0;
reg[7:0] ShuffleConvs_0_Downs_21_d0;
reg ShuffleConvs_0_Downs_21_ce1;
reg ShuffleConvs_0_Downs_21_we1;
reg[10:0] ShuffleConvs_0_Downs_8_address0;
reg ShuffleConvs_0_Downs_8_ce0;
reg ShuffleConvs_0_Downs_8_we0;
reg[7:0] ShuffleConvs_0_Downs_8_d0;
reg ShuffleConvs_0_Downs_8_ce1;
reg ShuffleConvs_0_Downs_8_we1;
reg[10:0] ShuffleConvs_0_Downs_20_address0;
reg ShuffleConvs_0_Downs_20_ce0;
reg ShuffleConvs_0_Downs_20_we0;
reg[7:0] ShuffleConvs_0_Downs_20_d0;
reg ShuffleConvs_0_Downs_20_ce1;
reg ShuffleConvs_0_Downs_20_we1;
reg[10:0] ShuffleConvs_0_Downs_7_address0;
reg ShuffleConvs_0_Downs_7_ce0;
reg ShuffleConvs_0_Downs_7_we0;
reg[7:0] ShuffleConvs_0_Downs_7_d0;
reg ShuffleConvs_0_Downs_7_ce1;
reg ShuffleConvs_0_Downs_7_we1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten1_reg_1271;
reg   [4:0] co_reg_1282;
reg   [11:0] indvar_flatten_reg_1294;
reg   [5:0] h_reg_1305;
reg   [5:0] w_reg_1317;
reg   [14:0] indvar_flatten2_reg_1364;
reg   [4:0] co4_reg_1375;
reg   [11:0] indvar_flatten3_reg_1387;
reg   [5:0] h5_reg_1398;
reg   [5:0] w6_reg_1410;
wire   [0:0] exitcond_flatten_fu_1542_p2;
reg   [0:0] exitcond_flatten_reg_2486;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_2486;
wire   [14:0] indvar_flatten_next1_fu_1548_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten5_fu_1554_p2;
reg   [0:0] exitcond_flatten5_reg_2495;
wire   [11:0] indvar_flatten_next_fu_1566_p3;
wire   [4:0] co_cast9_mid2_v_fu_1587_p3;
reg   [4:0] co_cast9_mid2_v_reg_2508;
reg    ap_enable_reg_pp0_iter1;
wire   [5:0] w_mid2_fu_1627_p3;
reg   [5:0] w_mid2_reg_2513;
wire   [5:0] h_cast8_mid2_fu_1635_p3;
reg   [5:0] h_cast8_mid2_reg_2519;
wire   [5:0] w_22_fu_1708_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [10:0] h1_cast6_cast_fu_1713_p1;
reg   [10:0] h1_cast6_cast_reg_2536;
wire    ap_CS_fsm_state6;
wire   [11:0] tmp_251_fu_1741_p2;
reg   [11:0] tmp_251_reg_2541;
wire   [0:0] exitcond25_fu_1747_p2;
wire   [15:0] w2_cast5_cast2_fu_1753_p1;
reg   [15:0] w2_cast5_cast2_reg_2550;
wire    ap_CS_fsm_state7;
reg   [10:0] ShuffleConvs_0_Downs_95_reg_2555;
reg   [10:0] ShuffleConvs_0_Downs_96_reg_2560;
reg   [10:0] ShuffleConvs_0_Downs_97_reg_2565;
reg   [10:0] ShuffleConvs_0_Downs_98_reg_2570;
reg   [10:0] ShuffleConvs_0_Downs_99_reg_2575;
reg   [10:0] ShuffleConvs_0_Downs_100_reg_2580;
reg   [10:0] ShuffleConvs_0_Downs_101_reg_2585;
reg   [10:0] ShuffleConvs_0_Downs_102_reg_2590;
reg   [10:0] ShuffleConvs_0_Downs_103_reg_2595;
reg   [10:0] ShuffleConvs_0_Downs_104_reg_2600;
reg   [10:0] ShuffleConvs_0_Downs_105_reg_2605;
reg   [10:0] ShuffleConvs_0_Downs_106_reg_2610;
reg   [10:0] ShuffleConvs_0_Downs_107_reg_2615;
reg   [10:0] ShuffleConvs_0_Downs_108_reg_2620;
reg   [10:0] ShuffleConvs_0_Downs_109_reg_2625;
reg   [10:0] ShuffleConvs_0_Downs_110_reg_2630;
reg   [10:0] ShuffleConvs_0_Downs_111_reg_2635;
reg   [10:0] ShuffleConvs_0_Downs_112_reg_2640;
reg   [10:0] ShuffleConvs_0_Downs_113_reg_2645;
reg   [10:0] ShuffleConvs_0_Downs_114_reg_2650;
reg   [10:0] ShuffleConvs_0_Downs_115_reg_2655;
reg   [10:0] ShuffleConvs_0_Downs_116_reg_2660;
reg   [10:0] ShuffleConvs_0_Downs_117_reg_2665;
reg   [10:0] ShuffleConvs_0_Downs_118_reg_2670;
wire   [5:0] h_8_fu_1800_p2;
wire   [0:0] exitcond26_fu_1794_p2;
reg   [14:0] input_V_addr_reg_2683;
wire    ap_CS_fsm_state8;
reg   [4:0] weight_0_V_addr_reg_2688;
reg   [4:0] weight_1_V_addr_reg_2693;
reg   [4:0] weight_2_V_addr_reg_2698;
reg   [4:0] weight_3_V_addr_reg_2703;
reg   [4:0] weight_4_V_addr_reg_2708;
reg   [4:0] weight_5_V_addr_reg_2713;
reg   [4:0] weight_6_V_addr_reg_2718;
reg   [4:0] weight_7_V_addr_reg_2723;
reg   [4:0] weight_8_V_addr_reg_2728;
reg   [4:0] weight_9_V_addr_reg_2733;
reg   [4:0] weight_10_V_addr_reg_2738;
reg   [4:0] weight_11_V_addr_reg_2743;
reg   [4:0] weight_12_V_addr_reg_2748;
reg   [4:0] weight_13_V_addr_reg_2753;
reg   [4:0] weight_14_V_addr_reg_2758;
reg   [4:0] weight_15_V_addr_reg_2763;
reg   [4:0] weight_16_V_addr_reg_2768;
reg   [4:0] weight_17_V_addr_reg_2773;
reg   [4:0] weight_18_V_addr_reg_2778;
reg   [4:0] weight_19_V_addr_reg_2783;
reg   [4:0] weight_20_V_addr_reg_2788;
reg   [4:0] weight_21_V_addr_reg_2793;
reg   [4:0] weight_22_V_addr_reg_2798;
reg   [4:0] weight_23_V_addr_reg_2803;
wire   [4:0] ci_8_fu_1911_p2;
reg   [4:0] ci_8_reg_2811;
wire   [5:0] w_23_fu_1917_p2;
wire   [0:0] exitcond28_fu_1905_p2;
reg   [7:0] ShuffleConvs_0_Downs_119_reg_2821;
wire    ap_CS_fsm_state12;
reg   [7:0] ShuffleConvs_0_Downs_120_reg_2826;
reg   [7:0] ShuffleConvs_0_Downs_121_reg_2831;
reg   [7:0] ShuffleConvs_0_Downs_122_reg_2836;
reg   [7:0] ShuffleConvs_0_Downs_123_reg_2841;
reg   [7:0] ShuffleConvs_0_Downs_124_reg_2846;
reg   [7:0] ShuffleConvs_0_Downs_125_reg_2851;
reg   [7:0] ShuffleConvs_0_Downs_126_reg_2856;
reg   [7:0] ShuffleConvs_0_Downs_127_reg_2861;
reg   [7:0] ShuffleConvs_0_Downs_128_reg_2866;
reg   [7:0] ShuffleConvs_0_Downs_129_reg_2871;
reg   [7:0] ShuffleConvs_0_Downs_130_reg_2876;
reg   [7:0] ShuffleConvs_0_Downs_131_reg_2881;
reg   [7:0] ShuffleConvs_0_Downs_132_reg_2886;
reg   [7:0] ShuffleConvs_0_Downs_133_reg_2891;
reg   [7:0] ShuffleConvs_0_Downs_134_reg_2896;
reg   [7:0] ShuffleConvs_0_Downs_135_reg_2901;
reg   [7:0] ShuffleConvs_0_Downs_136_reg_2906;
reg   [7:0] ShuffleConvs_0_Downs_137_reg_2911;
reg   [7:0] ShuffleConvs_0_Downs_138_reg_2916;
reg   [7:0] ShuffleConvs_0_Downs_139_reg_2921;
reg   [7:0] ShuffleConvs_0_Downs_140_reg_2926;
reg   [7:0] ShuffleConvs_0_Downs_141_reg_2931;
reg   [7:0] ShuffleConvs_0_Downs_142_reg_2936;
wire   [0:0] exitcond_flatten6_fu_2259_p2;
reg   [0:0] exitcond_flatten6_reg_2941;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state15_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_state17_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten6_reg_2941;
wire   [14:0] indvar_flatten_next1_2_fu_2265_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten7_fu_2271_p2;
reg   [0:0] exitcond_flatten7_reg_2950;
wire   [11:0] indvar_flatten_next1_1_fu_2283_p3;
wire   [4:0] co4_mid2_fu_2321_p3;
reg   [4:0] co4_mid2_reg_2963;
reg    ap_enable_reg_pp1_iter1;
reg   [4:0] ap_reg_pp1_iter2_co4_mid2_reg_2963;
wire   [5:0] w6_mid2_fu_2339_p3;
reg   [5:0] w6_mid2_reg_2969;
wire   [5:0] h5_cast2_mid2_fu_2347_p3;
reg   [5:0] h5_cast2_mid2_reg_2975;
reg   [10:0] ShuffleConvs_0_Downs_143_reg_2982;
reg   [10:0] ShuffleConvs_0_Downs_144_reg_2988;
reg   [10:0] ShuffleConvs_0_Downs_145_reg_2994;
reg   [10:0] ShuffleConvs_0_Downs_146_reg_3000;
reg   [10:0] ShuffleConvs_0_Downs_147_reg_3006;
reg   [10:0] ShuffleConvs_0_Downs_148_reg_3012;
reg   [10:0] ShuffleConvs_0_Downs_149_reg_3018;
reg   [10:0] ShuffleConvs_0_Downs_150_reg_3024;
reg   [10:0] ShuffleConvs_0_Downs_151_reg_3030;
reg   [10:0] ShuffleConvs_0_Downs_152_reg_3036;
reg   [10:0] ShuffleConvs_0_Downs_153_reg_3042;
reg   [10:0] ShuffleConvs_0_Downs_154_reg_3048;
reg   [10:0] ShuffleConvs_0_Downs_155_reg_3054;
reg   [10:0] ShuffleConvs_0_Downs_156_reg_3060;
reg   [10:0] ShuffleConvs_0_Downs_157_reg_3066;
reg   [10:0] ShuffleConvs_0_Downs_158_reg_3072;
reg   [10:0] ShuffleConvs_0_Downs_159_reg_3078;
reg   [10:0] ShuffleConvs_0_Downs_160_reg_3084;
reg   [10:0] ShuffleConvs_0_Downs_161_reg_3090;
reg   [10:0] ShuffleConvs_0_Downs_162_reg_3096;
reg   [10:0] ShuffleConvs_0_Downs_163_reg_3102;
reg   [10:0] ShuffleConvs_0_Downs_164_reg_3108;
reg   [10:0] ShuffleConvs_0_Downs_165_reg_3114;
reg   [10:0] ShuffleConvs_0_Downs_166_reg_3120;
wire   [5:0] w_24_fu_2420_p2;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] grp_MUL_DP_fu_1422_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1422_ap_return_1;
reg    grp_MUL_DP_fu_1422_ap_ce;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire   [15:0] grp_MUL_DP_fu_1432_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1432_ap_return_1;
reg    grp_MUL_DP_fu_1432_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1442_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1442_ap_return_1;
reg    grp_MUL_DP_fu_1442_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1452_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1452_ap_return_1;
reg    grp_MUL_DP_fu_1452_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1462_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1462_ap_return_1;
reg    grp_MUL_DP_fu_1462_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1472_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1472_ap_return_1;
reg    grp_MUL_DP_fu_1472_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1482_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1482_ap_return_1;
reg    grp_MUL_DP_fu_1482_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1492_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1492_ap_return_1;
reg    grp_MUL_DP_fu_1492_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1502_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1502_ap_return_1;
reg    grp_MUL_DP_fu_1502_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1512_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1512_ap_return_1;
reg    grp_MUL_DP_fu_1512_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1522_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1522_ap_return_1;
reg    grp_MUL_DP_fu_1522_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1532_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1532_ap_return_1;
reg    grp_MUL_DP_fu_1532_ap_ce;
reg   [4:0] co_phi_fu_1286_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [5:0] h_phi_fu_1309_p4;
reg   [5:0] w_phi_fu_1321_p4;
reg   [5:0] h1_reg_1329;
wire    ap_CS_fsm_state5;
reg   [5:0] w2_reg_1341;
reg   [4:0] ci_reg_1353;
reg   [4:0] co4_phi_fu_1379_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [5:0] h5_phi_fu_1402_p4;
reg   [5:0] w6_phi_fu_1414_p4;
wire   [31:0] co_cast9_mid2_fu_1594_p1;
wire   [31:0] tmp_309_cast_fu_1680_p1;
wire   [31:0] tmp_313_cast_fu_1766_p1;
wire   [31:0] tmp_326_cast_fu_1900_p1;
wire   [31:0] ci_cast4_fu_1806_p1;
wire   [31:0] tmp_318_cast_fu_2392_p1;
wire   [7:0] tmp_55_s_fu_2225_p2;
wire   [0:0] tmp_380_fu_2478_p3;
wire   [7:0] tmp_55_9_fu_2197_p2;
wire   [7:0] tmp_55_8_fu_2169_p2;
wire   [7:0] tmp_55_7_fu_2141_p2;
wire   [7:0] tmp_55_6_fu_2113_p2;
wire   [7:0] tmp_55_5_fu_2085_p2;
wire   [7:0] tmp_55_4_fu_2057_p2;
wire   [7:0] tmp_55_3_fu_2029_p2;
wire   [7:0] tmp_55_2_fu_2001_p2;
wire   [7:0] tmp_55_1_fu_1973_p2;
wire   [7:0] tmp_32_fu_1945_p2;
wire   [7:0] tmp_53_10_fu_2243_p2;
wire   [7:0] tmp_53_s_fu_2215_p2;
wire   [7:0] tmp_53_9_fu_2187_p2;
wire   [7:0] tmp_53_8_fu_2159_p2;
wire   [7:0] tmp_53_7_fu_2131_p2;
wire   [7:0] tmp_53_6_fu_2103_p2;
wire   [7:0] tmp_53_5_fu_2075_p2;
wire   [7:0] tmp_53_4_fu_2047_p2;
wire   [7:0] tmp_53_3_fu_2019_p2;
wire   [7:0] tmp_53_2_fu_1991_p2;
wire   [7:0] tmp_53_1_fu_1963_p2;
wire   [7:0] tmp_30_fu_1935_p2;
wire   [7:0] tmp_55_10_fu_2253_p2;
wire    ap_CS_fsm_state9;
wire   [11:0] indvar_flatten_op_fu_1560_p2;
wire   [4:0] co_17_fu_1574_p2;
wire   [0:0] exitcond_fu_1604_p2;
wire   [0:0] not_exitcond_flatten_fu_1599_p2;
wire   [5:0] h_mid_fu_1580_p3;
wire   [0:0] exitcond36_mid_fu_1610_p2;
wire   [0:0] tmp_s_fu_1622_p2;
wire   [5:0] h_19_fu_1616_p2;
wire   [10:0] tmp_fu_1643_p3;
wire   [6:0] tmp_377_fu_1654_p3;
wire   [11:0] p_shl_cast_fu_1650_p1;
wire   [11:0] p_shl1_cast_fu_1661_p1;
wire   [11:0] w_cast7_cast_fu_1671_p1;
wire   [11:0] tmp_247_fu_1665_p2;
wire   [11:0] tmp_248_fu_1674_p2;
wire   [10:0] tmp_249_fu_1717_p3;
wire   [6:0] tmp_250_fu_1729_p3;
wire   [11:0] p_shl3_cast_fu_1737_p1;
wire   [11:0] p_shl2_cast_fu_1725_p1;
wire   [11:0] w2_cast5_cast_fu_1757_p1;
wire   [11:0] tmp_252_fu_1761_p2;
wire   [9:0] tmp_256_fu_1834_p3;
wire   [5:0] tmp_257_fu_1846_p3;
wire   [10:0] p_shl6_cast_fu_1842_p1;
wire   [10:0] p_shl7_cast_fu_1854_p1;
wire   [10:0] tmp_258_fu_1858_p2;
wire   [10:0] tmp_259_fu_1864_p2;
wire   [11:0] tmp_381_fu_1877_p3;
wire   [15:0] p_shl4_cast_fu_1869_p3;
wire   [15:0] p_shl5_cast_fu_1885_p1;
wire   [15:0] tmp_260_fu_1889_p2;
wire   [15:0] tmp_261_fu_1895_p2;
wire   [7:0] tmp_382_fu_1931_p1;
wire   [7:0] tmp_383_fu_1941_p1;
wire   [7:0] tmp_384_fu_1959_p1;
wire   [7:0] tmp_385_fu_1969_p1;
wire   [7:0] tmp_386_fu_1987_p1;
wire   [7:0] tmp_387_fu_1997_p1;
wire   [7:0] tmp_388_fu_2015_p1;
wire   [7:0] tmp_389_fu_2025_p1;
wire   [7:0] tmp_390_fu_2043_p1;
wire   [7:0] tmp_391_fu_2053_p1;
wire   [7:0] tmp_392_fu_2071_p1;
wire   [7:0] tmp_393_fu_2081_p1;
wire   [7:0] tmp_394_fu_2099_p1;
wire   [7:0] tmp_395_fu_2109_p1;
wire   [7:0] tmp_396_fu_2127_p1;
wire   [7:0] tmp_397_fu_2137_p1;
wire   [7:0] tmp_398_fu_2155_p1;
wire   [7:0] tmp_399_fu_2165_p1;
wire   [7:0] tmp_400_fu_2183_p1;
wire   [7:0] tmp_401_fu_2193_p1;
wire   [7:0] tmp_402_fu_2211_p1;
wire   [7:0] tmp_403_fu_2221_p1;
wire   [7:0] tmp_404_fu_2239_p1;
wire   [7:0] tmp_405_fu_2249_p1;
wire   [11:0] indvar_flatten21_op_fu_2277_p2;
wire   [0:0] exitcond27_fu_2309_p2;
wire   [0:0] not_exitcond_flatten_8_fu_2304_p2;
wire   [4:0] co_18_fu_2291_p2;
wire   [5:0] h5_mid_fu_2297_p3;
wire   [0:0] exitcond_mid_fu_2315_p2;
wire   [0:0] tmp_253_fu_2334_p2;
wire   [5:0] h_7_fu_2328_p2;
wire   [10:0] tmp_378_fu_2355_p3;
wire   [6:0] tmp_379_fu_2366_p3;
wire   [11:0] p_shl8_cast_fu_2362_p1;
wire   [11:0] p_shl9_cast_fu_2373_p1;
wire   [11:0] w6_cast1_cast_fu_2383_p1;
wire   [11:0] tmp_254_fu_2377_p2;
wire   [11:0] tmp_255_fu_2386_p2;
wire   [7:0] tmp_33_fu_2425_p26;
wire    ap_CS_fsm_state18;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_1422(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_0_V_q0),
    .b_V(weight_12_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1422_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1422_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1422_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_1_V_q0),
    .b_V(weight_13_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1432_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1432_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1432_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1442(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_2_V_q0),
    .b_V(weight_14_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1442_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1442_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1442_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_3_V_q0),
    .b_V(weight_15_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1452_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1452_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1452_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_4_V_q0),
    .b_V(weight_16_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1462_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1462_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1462_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_5_V_q0),
    .b_V(weight_17_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1472_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1472_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1472_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1482(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_6_V_q0),
    .b_V(weight_18_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1482_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1482_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1482_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1492(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_7_V_q0),
    .b_V(weight_19_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1492_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1492_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1492_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1502(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_8_V_q0),
    .b_V(weight_20_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1502_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1502_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1502_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1512(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_9_V_q0),
    .b_V(weight_21_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1512_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1512_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1512_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1522(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_10_V_q0),
    .b_V(weight_22_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1522_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1522_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1522_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1532(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_11_V_q0),
    .b_V(weight_23_V_q0),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1532_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1532_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1532_ap_ce)
);

ShuffleNetV2_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_eOg_U11(
    .din1(ShuffleConvs_0_Downs_23_q0),
    .din2(ShuffleConvs_0_Downs_22_q0),
    .din3(ShuffleConvs_0_Downs_11_q0),
    .din4(ShuffleConvs_0_Downs_6_q0),
    .din5(ShuffleConvs_0_Downs_5_q0),
    .din6(ShuffleConvs_0_Downs_4_q0),
    .din7(ShuffleConvs_0_Downs_3_q0),
    .din8(ShuffleConvs_0_Downs_2_q0),
    .din9(ShuffleConvs_0_Downs_1_q0),
    .din10(ShuffleConvs_0_Downs_q0),
    .din11(ShuffleConvs_0_Downs_21_q0),
    .din12(ShuffleConvs_0_Downs_20_q0),
    .din13(ShuffleConvs_0_Downs_19_q0),
    .din14(ShuffleConvs_0_Downs_18_q0),
    .din15(ShuffleConvs_0_Downs_17_q0),
    .din16(ShuffleConvs_0_Downs_16_q0),
    .din17(ShuffleConvs_0_Downs_15_q0),
    .din18(ShuffleConvs_0_Downs_14_q0),
    .din19(ShuffleConvs_0_Downs_13_q0),
    .din20(ShuffleConvs_0_Downs_12_q0),
    .din21(ShuffleConvs_0_Downs_10_q0),
    .din22(ShuffleConvs_0_Downs_9_q0),
    .din23(ShuffleConvs_0_Downs_8_q0),
    .din24(ShuffleConvs_0_Downs_7_q0),
    .din25(ap_reg_pp1_iter2_co4_mid2_reg_2963),
    .dout(tmp_33_fu_2425_p26)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state14)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond26_fu_1794_p2))) begin
        ci_reg_1353 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ci_reg_1353 <= ci_8_reg_2811;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
        co4_reg_1375 <= 5'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_1375 <= co4_mid2_reg_2963;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0))) begin
        co_reg_1282 <= co_cast9_mid2_v_reg_2508;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_1282 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_1329 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond26_fu_1794_p2 == 1'd1))) begin
        h1_reg_1329 <= h_8_fu_1800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
        h5_reg_1398 <= 6'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_1398 <= h5_cast2_mid2_reg_2975;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0))) begin
        h_reg_1305 <= h_cast8_mid2_reg_2519;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_1305 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_1542_p2 == 1'd0))) begin
        indvar_flatten1_reg_1271 <= indvar_flatten_next1_fu_1548_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_1271 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
        indvar_flatten2_reg_1364 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_2259_p2))) begin
        indvar_flatten2_reg_1364 <= indvar_flatten_next1_2_fu_2265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
        indvar_flatten3_reg_1387 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_2259_p2))) begin
        indvar_flatten3_reg_1387 <= indvar_flatten_next1_1_fu_2283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_1542_p2 == 1'd0))) begin
        indvar_flatten_reg_1294 <= indvar_flatten_next_fu_1566_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_1294 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond25_fu_1747_p2))) begin
        w2_reg_1341 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond28_fu_1905_p2))) begin
        w2_reg_1341 <= w_23_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
        w6_reg_1410 <= 6'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_reg_1410 <= w_24_fu_2420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0))) begin
        w_reg_1317 <= w_22_fu_1708_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_1317 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_0_Downs_100_reg_2580 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_101_reg_2585 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_102_reg_2590 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_103_reg_2595 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_104_reg_2600 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_105_reg_2605 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_106_reg_2610 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_107_reg_2615 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_108_reg_2620 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_109_reg_2625 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_110_reg_2630 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_111_reg_2635 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_112_reg_2640 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_113_reg_2645 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_114_reg_2650 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_115_reg_2655 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_116_reg_2660 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_117_reg_2665 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_118_reg_2670 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_95_reg_2555 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_96_reg_2560 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_97_reg_2565 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_98_reg_2570 <= tmp_313_cast_fu_1766_p1;
        ShuffleConvs_0_Downs_99_reg_2575 <= tmp_313_cast_fu_1766_p1;
        w2_cast5_cast2_reg_2550[5 : 0] <= w2_cast5_cast2_fu_1753_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ShuffleConvs_0_Downs_119_reg_2821 <= ShuffleConvs_0_Downs_23_q0;
        ShuffleConvs_0_Downs_120_reg_2826 <= ShuffleConvs_0_Downs_19_q0;
        ShuffleConvs_0_Downs_121_reg_2831 <= ShuffleConvs_0_Downs_22_q0;
        ShuffleConvs_0_Downs_122_reg_2836 <= ShuffleConvs_0_Downs_18_q0;
        ShuffleConvs_0_Downs_123_reg_2841 <= ShuffleConvs_0_Downs_11_q0;
        ShuffleConvs_0_Downs_124_reg_2846 <= ShuffleConvs_0_Downs_17_q0;
        ShuffleConvs_0_Downs_125_reg_2851 <= ShuffleConvs_0_Downs_6_q0;
        ShuffleConvs_0_Downs_126_reg_2856 <= ShuffleConvs_0_Downs_16_q0;
        ShuffleConvs_0_Downs_127_reg_2861 <= ShuffleConvs_0_Downs_5_q0;
        ShuffleConvs_0_Downs_128_reg_2866 <= ShuffleConvs_0_Downs_15_q0;
        ShuffleConvs_0_Downs_129_reg_2871 <= ShuffleConvs_0_Downs_4_q0;
        ShuffleConvs_0_Downs_130_reg_2876 <= ShuffleConvs_0_Downs_14_q0;
        ShuffleConvs_0_Downs_131_reg_2881 <= ShuffleConvs_0_Downs_3_q0;
        ShuffleConvs_0_Downs_132_reg_2886 <= ShuffleConvs_0_Downs_13_q0;
        ShuffleConvs_0_Downs_133_reg_2891 <= ShuffleConvs_0_Downs_2_q0;
        ShuffleConvs_0_Downs_134_reg_2896 <= ShuffleConvs_0_Downs_12_q0;
        ShuffleConvs_0_Downs_135_reg_2901 <= ShuffleConvs_0_Downs_1_q0;
        ShuffleConvs_0_Downs_136_reg_2906 <= ShuffleConvs_0_Downs_10_q0;
        ShuffleConvs_0_Downs_137_reg_2911 <= ShuffleConvs_0_Downs_q0;
        ShuffleConvs_0_Downs_138_reg_2916 <= ShuffleConvs_0_Downs_9_q0;
        ShuffleConvs_0_Downs_139_reg_2921 <= ShuffleConvs_0_Downs_21_q0;
        ShuffleConvs_0_Downs_140_reg_2926 <= ShuffleConvs_0_Downs_8_q0;
        ShuffleConvs_0_Downs_141_reg_2931 <= ShuffleConvs_0_Downs_20_q0;
        ShuffleConvs_0_Downs_142_reg_2936 <= ShuffleConvs_0_Downs_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941))) begin
        ShuffleConvs_0_Downs_143_reg_2982 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_144_reg_2988 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_145_reg_2994 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_146_reg_3000 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_147_reg_3006 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_148_reg_3012 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_149_reg_3018 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_150_reg_3024 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_151_reg_3030 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_152_reg_3036 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_153_reg_3042 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_154_reg_3048 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_155_reg_3054 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_156_reg_3060 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_157_reg_3066 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_158_reg_3072 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_159_reg_3078 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_160_reg_3084 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_161_reg_3090 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_162_reg_3096 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_163_reg_3102 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_164_reg_3108 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_165_reg_3114 <= tmp_318_cast_fu_2392_p1;
        ShuffleConvs_0_Downs_166_reg_3120 <= tmp_318_cast_fu_2392_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_2486 <= exitcond_flatten_reg_2486;
        exitcond_flatten_reg_2486 <= exitcond_flatten_fu_1542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten6_reg_2941 <= exitcond_flatten6_reg_2941;
        exitcond_flatten6_reg_2941 <= exitcond_flatten6_fu_2259_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co4_mid2_reg_2963 <= co4_mid2_reg_2963;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_8_reg_2811 <= ci_8_fu_1911_p2;
        input_V_addr_reg_2683 <= tmp_326_cast_fu_1900_p1;
        weight_0_V_addr_reg_2688 <= ci_cast4_fu_1806_p1;
        weight_10_V_addr_reg_2738 <= ci_cast4_fu_1806_p1;
        weight_11_V_addr_reg_2743 <= ci_cast4_fu_1806_p1;
        weight_12_V_addr_reg_2748 <= ci_cast4_fu_1806_p1;
        weight_13_V_addr_reg_2753 <= ci_cast4_fu_1806_p1;
        weight_14_V_addr_reg_2758 <= ci_cast4_fu_1806_p1;
        weight_15_V_addr_reg_2763 <= ci_cast4_fu_1806_p1;
        weight_16_V_addr_reg_2768 <= ci_cast4_fu_1806_p1;
        weight_17_V_addr_reg_2773 <= ci_cast4_fu_1806_p1;
        weight_18_V_addr_reg_2778 <= ci_cast4_fu_1806_p1;
        weight_19_V_addr_reg_2783 <= ci_cast4_fu_1806_p1;
        weight_1_V_addr_reg_2693 <= ci_cast4_fu_1806_p1;
        weight_20_V_addr_reg_2788 <= ci_cast4_fu_1806_p1;
        weight_21_V_addr_reg_2793 <= ci_cast4_fu_1806_p1;
        weight_22_V_addr_reg_2798 <= ci_cast4_fu_1806_p1;
        weight_23_V_addr_reg_2803 <= ci_cast4_fu_1806_p1;
        weight_2_V_addr_reg_2698 <= ci_cast4_fu_1806_p1;
        weight_3_V_addr_reg_2703 <= ci_cast4_fu_1806_p1;
        weight_4_V_addr_reg_2708 <= ci_cast4_fu_1806_p1;
        weight_5_V_addr_reg_2713 <= ci_cast4_fu_1806_p1;
        weight_6_V_addr_reg_2718 <= ci_cast4_fu_1806_p1;
        weight_7_V_addr_reg_2723 <= ci_cast4_fu_1806_p1;
        weight_8_V_addr_reg_2728 <= ci_cast4_fu_1806_p1;
        weight_9_V_addr_reg_2733 <= ci_cast4_fu_1806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten6_reg_2941))) begin
        co4_mid2_reg_2963 <= co4_mid2_fu_2321_p3;
        h5_cast2_mid2_reg_2975 <= h5_cast2_mid2_fu_2347_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_2486 == 1'd0))) begin
        co_cast9_mid2_v_reg_2508 <= co_cast9_mid2_v_fu_1587_p3;
        h_cast8_mid2_reg_2519 <= h_cast8_mid2_fu_1635_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_1542_p2 == 1'd0))) begin
        exitcond_flatten5_reg_2495 <= exitcond_flatten5_fu_1554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_fu_2259_p2))) begin
        exitcond_flatten7_reg_2950 <= exitcond_flatten7_fu_2271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast6_cast_reg_2536[5 : 0] <= h1_cast6_cast_fu_1713_p1[5 : 0];
        tmp_251_reg_2541[11 : 1] <= tmp_251_fu_1741_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_2941))) begin
        w6_mid2_reg_2969 <= w6_mid2_fu_2339_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_2486 == 1'd0))) begin
        w_mid2_reg_2513 <= w_mid2_fu_1627_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_10_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_10_address0 = ShuffleConvs_0_Downs_107_reg_2615;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_10_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_10_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_10_d0 = tmp_55_8_fu_2169_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_10_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd20)))) begin
        ShuffleConvs_0_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd20))) begin
        ShuffleConvs_0_Downs_10_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_11_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_11_address0 = ShuffleConvs_0_Downs_112_reg_2640;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_11_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_11_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_11_d0 = tmp_53_2_fu_1991_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_11_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd2)))) begin
        ShuffleConvs_0_Downs_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd2))) begin
        ShuffleConvs_0_Downs_11_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_12_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_12_address0 = ShuffleConvs_0_Downs_118_reg_2670;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_12_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_12_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_12_d0 = tmp_55_7_fu_2141_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_12_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd19)))) begin
        ShuffleConvs_0_Downs_12_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd19))) begin
        ShuffleConvs_0_Downs_12_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_13_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_13_address0 = ShuffleConvs_0_Downs_111_reg_2635;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_13_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_13_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_13_d0 = tmp_55_6_fu_2113_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_13_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd18)))) begin
        ShuffleConvs_0_Downs_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd18))) begin
        ShuffleConvs_0_Downs_13_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_14_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_14_address0 = ShuffleConvs_0_Downs_109_reg_2625;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_14_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_14_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_14_d0 = tmp_55_5_fu_2085_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_14_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd17)))) begin
        ShuffleConvs_0_Downs_14_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd17))) begin
        ShuffleConvs_0_Downs_14_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_15_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_15_address0 = ShuffleConvs_0_Downs_102_reg_2590;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_15_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_15_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_15_d0 = tmp_55_4_fu_2057_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_15_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd16)))) begin
        ShuffleConvs_0_Downs_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd16))) begin
        ShuffleConvs_0_Downs_15_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_16_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_16_address0 = ShuffleConvs_0_Downs_101_reg_2585;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_16_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_16_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_16_d0 = tmp_55_3_fu_2029_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_16_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd15)))) begin
        ShuffleConvs_0_Downs_16_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd15))) begin
        ShuffleConvs_0_Downs_16_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_17_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_17_address0 = ShuffleConvs_0_Downs_106_reg_2610;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_17_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_17_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_17_d0 = tmp_55_2_fu_2001_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_17_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd14)))) begin
        ShuffleConvs_0_Downs_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd14))) begin
        ShuffleConvs_0_Downs_17_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_18_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_18_address0 = ShuffleConvs_0_Downs_108_reg_2620;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_18_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_18_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_18_d0 = tmp_55_1_fu_1973_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_18_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd13)))) begin
        ShuffleConvs_0_Downs_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd13))) begin
        ShuffleConvs_0_Downs_18_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_19_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_19_address0 = ShuffleConvs_0_Downs_105_reg_2605;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_19_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_19_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_19_d0 = tmp_32_fu_1945_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_19_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd12)))) begin
        ShuffleConvs_0_Downs_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd12))) begin
        ShuffleConvs_0_Downs_19_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_1_address0 = ShuffleConvs_0_Downs_110_reg_2630;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_1_d0 = tmp_53_8_fu_2159_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd8)))) begin
        ShuffleConvs_0_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd8))) begin
        ShuffleConvs_0_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_20_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_20_address0 = ShuffleConvs_0_Downs_104_reg_2600;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_20_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_20_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_20_d0 = tmp_53_10_fu_2243_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_20_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd11)))) begin
        ShuffleConvs_0_Downs_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd11))) begin
        ShuffleConvs_0_Downs_20_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_21_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_21_address0 = ShuffleConvs_0_Downs_103_reg_2595;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_21_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_21_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_21_d0 = tmp_53_s_fu_2215_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_21_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd10)))) begin
        ShuffleConvs_0_Downs_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd10))) begin
        ShuffleConvs_0_Downs_21_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_22_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_22_address0 = ShuffleConvs_0_Downs_116_reg_2660;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_22_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_22_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_22_d0 = tmp_53_1_fu_1963_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_22_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd1)))) begin
        ShuffleConvs_0_Downs_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd1))) begin
        ShuffleConvs_0_Downs_22_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_23_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_23_address0 = ShuffleConvs_0_Downs_117_reg_2665;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_23_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_23_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_23_d0 = tmp_30_fu_1935_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_23_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd0)))) begin
        ShuffleConvs_0_Downs_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd0))) begin
        ShuffleConvs_0_Downs_23_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_2_address0 = ShuffleConvs_0_Downs_114_reg_2650;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_2_d0 = tmp_53_7_fu_2131_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd7)))) begin
        ShuffleConvs_0_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd7))) begin
        ShuffleConvs_0_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_3_address0 = ShuffleConvs_0_Downs_115_reg_2655;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_3_d0 = tmp_53_6_fu_2103_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd6)))) begin
        ShuffleConvs_0_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd6))) begin
        ShuffleConvs_0_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_4_address0 = ShuffleConvs_0_Downs_113_reg_2645;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_4_d0 = tmp_53_5_fu_2075_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd5)))) begin
        ShuffleConvs_0_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd5))) begin
        ShuffleConvs_0_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_5_address0 = ShuffleConvs_0_Downs_97_reg_2565;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_5_d0 = tmp_53_4_fu_2047_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd4)))) begin
        ShuffleConvs_0_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd4))) begin
        ShuffleConvs_0_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_6_address0 = ShuffleConvs_0_Downs_98_reg_2570;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_6_d0 = tmp_53_3_fu_2019_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd3)))) begin
        ShuffleConvs_0_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd3))) begin
        ShuffleConvs_0_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_7_address0 = ShuffleConvs_0_Downs_100_reg_2580;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_7_d0 = tmp_55_10_fu_2253_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast9_mid2_v_reg_2508 == 5'd0) & ~(co_cast9_mid2_v_reg_2508 == 5'd1) & ~(co_cast9_mid2_v_reg_2508 == 5'd2) & ~(co_cast9_mid2_v_reg_2508 == 5'd3) & ~(co_cast9_mid2_v_reg_2508 == 5'd4) & ~(co_cast9_mid2_v_reg_2508 == 5'd5) & ~(co_cast9_mid2_v_reg_2508 == 5'd6) & ~(co_cast9_mid2_v_reg_2508 == 5'd7) & ~(co_cast9_mid2_v_reg_2508 == 5'd8) & ~(co_cast9_mid2_v_reg_2508 == 5'd9) & ~(co_cast9_mid2_v_reg_2508 == 5'd10) & ~(co_cast9_mid2_v_reg_2508 == 5'd11) & ~(co_cast9_mid2_v_reg_2508 == 5'd12) & ~(co_cast9_mid2_v_reg_2508 == 5'd13) & ~(co_cast9_mid2_v_reg_2508 == 5'd14) & ~(co_cast9_mid2_v_reg_2508 == 5'd15) & ~(co_cast9_mid2_v_reg_2508 == 5'd16) & ~(co_cast9_mid2_v_reg_2508 == 5'd17) & ~(co_cast9_mid2_v_reg_2508 == 5'd18) & ~(co_cast9_mid2_v_reg_2508 == 5'd19) & ~(co_cast9_mid2_v_reg_2508 == 5'd20) & ~(co_cast9_mid2_v_reg_2508 == 5'd21) & ~(co_cast9_mid2_v_reg_2508 == 5'd22)))) begin
        ShuffleConvs_0_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd0) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd1) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd2) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd4) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd5) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd6) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd7) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd8) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd9) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd10) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd11) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd12) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd13) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd14) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd15) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd16) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd17) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd18) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd19) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd20) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd21) & ~(ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd22))) begin
        ShuffleConvs_0_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_8_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_8_address0 = ShuffleConvs_0_Downs_99_reg_2575;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_8_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_8_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_8_d0 = tmp_55_s_fu_2225_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_8_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd22)))) begin
        ShuffleConvs_0_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd22))) begin
        ShuffleConvs_0_Downs_8_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_9_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_9_address0 = ShuffleConvs_0_Downs_95_reg_2555;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_9_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_9_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_9_d0 = tmp_55_9_fu_2197_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_9_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd21)))) begin
        ShuffleConvs_0_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd21))) begin
        ShuffleConvs_0_Downs_9_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_address0 = tmp_318_cast_fu_2392_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_address0 = ShuffleConvs_0_Downs_96_reg_2560;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_address0 = tmp_309_cast_fu_1680_p1;
    end else begin
        ShuffleConvs_0_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        ShuffleConvs_0_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_0_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_0_Downs_d0 = tmp_53_9_fu_2187_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_0_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_0_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_2508 == 5'd9)))) begin
        ShuffleConvs_0_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_380_fu_2478_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_2963 == 5'd9))) begin
        ShuffleConvs_0_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_0_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1542_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten6_fu_2259_p2)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_1379_p4 = co4_mid2_reg_2963;
    end else begin
        co4_phi_fu_1379_p4 = co4_reg_1375;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_1286_p4 = co_cast9_mid2_v_reg_2508;
    end else begin
        co_phi_fu_1286_p4 = co_reg_1282;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1422_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1422_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1432_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1432_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1442_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1442_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1452_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1452_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1462_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1462_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1472_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1472_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1482_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1482_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1492_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1492_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1502_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1502_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1512_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1512_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1522_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1522_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_MUL_DP_fu_1532_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1532_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_1402_p4 = h5_cast2_mid2_reg_2975;
    end else begin
        h5_phi_fu_1402_p4 = h5_reg_1398;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_1309_p4 = h_cast8_mid2_reg_2519;
    end else begin
        h_phi_fu_1309_p4 = h_reg_1305;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_2941) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_1414_p4 = w_24_fu_2420_p2;
    end else begin
        w6_phi_fu_1414_p4 = w6_reg_1410;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_2486 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_1321_p4 = w_22_fu_1708_p2;
    end else begin
        w_phi_fu_1321_p4 = w_reg_1317;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1542_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1542_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond25_fu_1747_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond26_fu_1794_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond28_fu_1905_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_2259_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_2259_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_0_Downs_10_address1 = ShuffleConvs_0_Downs_155_reg_3054;

assign ShuffleConvs_0_Downs_10_d1 = 8'd0;

assign ShuffleConvs_0_Downs_11_address1 = ShuffleConvs_0_Downs_160_reg_3084;

assign ShuffleConvs_0_Downs_11_d1 = 8'd0;

assign ShuffleConvs_0_Downs_12_address1 = ShuffleConvs_0_Downs_166_reg_3120;

assign ShuffleConvs_0_Downs_12_d1 = 8'd0;

assign ShuffleConvs_0_Downs_13_address1 = ShuffleConvs_0_Downs_159_reg_3078;

assign ShuffleConvs_0_Downs_13_d1 = 8'd0;

assign ShuffleConvs_0_Downs_14_address1 = ShuffleConvs_0_Downs_157_reg_3066;

assign ShuffleConvs_0_Downs_14_d1 = 8'd0;

assign ShuffleConvs_0_Downs_15_address1 = ShuffleConvs_0_Downs_150_reg_3024;

assign ShuffleConvs_0_Downs_15_d1 = 8'd0;

assign ShuffleConvs_0_Downs_16_address1 = ShuffleConvs_0_Downs_149_reg_3018;

assign ShuffleConvs_0_Downs_16_d1 = 8'd0;

assign ShuffleConvs_0_Downs_17_address1 = ShuffleConvs_0_Downs_154_reg_3048;

assign ShuffleConvs_0_Downs_17_d1 = 8'd0;

assign ShuffleConvs_0_Downs_18_address1 = ShuffleConvs_0_Downs_156_reg_3060;

assign ShuffleConvs_0_Downs_18_d1 = 8'd0;

assign ShuffleConvs_0_Downs_19_address1 = ShuffleConvs_0_Downs_153_reg_3042;

assign ShuffleConvs_0_Downs_19_d1 = 8'd0;

assign ShuffleConvs_0_Downs_1_address1 = ShuffleConvs_0_Downs_158_reg_3072;

assign ShuffleConvs_0_Downs_1_d1 = 8'd0;

assign ShuffleConvs_0_Downs_20_address1 = ShuffleConvs_0_Downs_152_reg_3036;

assign ShuffleConvs_0_Downs_20_d1 = 8'd0;

assign ShuffleConvs_0_Downs_21_address1 = ShuffleConvs_0_Downs_151_reg_3030;

assign ShuffleConvs_0_Downs_21_d1 = 8'd0;

assign ShuffleConvs_0_Downs_22_address1 = ShuffleConvs_0_Downs_164_reg_3108;

assign ShuffleConvs_0_Downs_22_d1 = 8'd0;

assign ShuffleConvs_0_Downs_23_address1 = ShuffleConvs_0_Downs_165_reg_3114;

assign ShuffleConvs_0_Downs_23_d1 = 8'd0;

assign ShuffleConvs_0_Downs_2_address1 = ShuffleConvs_0_Downs_162_reg_3096;

assign ShuffleConvs_0_Downs_2_d1 = 8'd0;

assign ShuffleConvs_0_Downs_3_address1 = ShuffleConvs_0_Downs_163_reg_3102;

assign ShuffleConvs_0_Downs_3_d1 = 8'd0;

assign ShuffleConvs_0_Downs_4_address1 = ShuffleConvs_0_Downs_161_reg_3090;

assign ShuffleConvs_0_Downs_4_d1 = 8'd0;

assign ShuffleConvs_0_Downs_5_address1 = ShuffleConvs_0_Downs_145_reg_2994;

assign ShuffleConvs_0_Downs_5_d1 = 8'd0;

assign ShuffleConvs_0_Downs_6_address1 = ShuffleConvs_0_Downs_146_reg_3000;

assign ShuffleConvs_0_Downs_6_d1 = 8'd0;

assign ShuffleConvs_0_Downs_7_address1 = ShuffleConvs_0_Downs_148_reg_3012;

assign ShuffleConvs_0_Downs_7_d1 = 8'd0;

assign ShuffleConvs_0_Downs_8_address1 = ShuffleConvs_0_Downs_147_reg_3006;

assign ShuffleConvs_0_Downs_8_d1 = 8'd0;

assign ShuffleConvs_0_Downs_9_address1 = ShuffleConvs_0_Downs_143_reg_2982;

assign ShuffleConvs_0_Downs_9_d1 = 8'd0;

assign ShuffleConvs_0_Downs_address1 = ShuffleConvs_0_Downs_144_reg_2988;

assign ShuffleConvs_0_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast9_mid2_fu_1594_p1;

assign ci_8_fu_1911_p2 = (ci_reg_1353 + 5'd1);

assign ci_cast4_fu_1806_p1 = ci_reg_1353;

assign co4_mid2_fu_2321_p3 = ((exitcond_flatten7_reg_2950[0:0] === 1'b1) ? co_18_fu_2291_p2 : co4_phi_fu_1379_p4);

assign co_17_fu_1574_p2 = (co_phi_fu_1286_p4 + 5'd1);

assign co_18_fu_2291_p2 = (co4_phi_fu_1379_p4 + 5'd1);

assign co_cast9_mid2_fu_1594_p1 = co_cast9_mid2_v_fu_1587_p3;

assign co_cast9_mid2_v_fu_1587_p3 = ((exitcond_flatten5_reg_2495[0:0] === 1'b1) ? co_17_fu_1574_p2 : co_phi_fu_1286_p4);

assign exitcond25_fu_1747_p2 = ((h1_reg_1329 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond26_fu_1794_p2 = ((w2_reg_1341 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond27_fu_2309_p2 = ((w6_phi_fu_1414_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond28_fu_1905_p2 = ((ci_reg_1353 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond36_mid_fu_1610_p2 = (exitcond_fu_1604_p2 & not_exitcond_flatten_fu_1599_p2);

assign exitcond_flatten5_fu_1554_p2 = ((indvar_flatten_reg_1294 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_2259_p2 = ((indvar_flatten2_reg_1364 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_2271_p2 = ((indvar_flatten3_reg_1387 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1542_p2 = ((indvar_flatten1_reg_1271 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_fu_1604_p2 = ((w_phi_fu_1321_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_2315_p2 = (exitcond27_fu_2309_p2 & not_exitcond_flatten_8_fu_2304_p2);

assign h1_cast6_cast_fu_1713_p1 = h1_reg_1329;

assign h5_cast2_mid2_fu_2347_p3 = ((exitcond_mid_fu_2315_p2[0:0] === 1'b1) ? h_7_fu_2328_p2 : h5_mid_fu_2297_p3);

assign h5_mid_fu_2297_p3 = ((exitcond_flatten7_reg_2950[0:0] === 1'b1) ? 6'd1 : h5_phi_fu_1402_p4);

assign h_19_fu_1616_p2 = (h_mid_fu_1580_p3 + 6'd1);

assign h_7_fu_2328_p2 = (h5_mid_fu_2297_p3 + 6'd1);

assign h_8_fu_1800_p2 = (h1_reg_1329 + 6'd1);

assign h_cast8_mid2_fu_1635_p3 = ((exitcond36_mid_fu_1610_p2[0:0] === 1'b1) ? h_19_fu_1616_p2 : h_mid_fu_1580_p3);

assign h_mid_fu_1580_p3 = ((exitcond_flatten5_reg_2495[0:0] === 1'b1) ? 6'd1 : h_phi_fu_1309_p4);

assign indvar_flatten21_op_fu_2277_p2 = (indvar_flatten3_reg_1387 + 12'd1);

assign indvar_flatten_next1_1_fu_2283_p3 = ((exitcond_flatten7_fu_2271_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten21_op_fu_2277_p2);

assign indvar_flatten_next1_2_fu_2265_p2 = (indvar_flatten2_reg_1364 + 15'd1);

assign indvar_flatten_next1_fu_1548_p2 = (indvar_flatten1_reg_1271 + 15'd1);

assign indvar_flatten_next_fu_1566_p3 = ((exitcond_flatten5_fu_1554_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten_op_fu_1560_p2);

assign indvar_flatten_op_fu_1560_p2 = (indvar_flatten_reg_1294 + 12'd1);

assign input_V_address0 = input_V_addr_reg_2683;

assign not_exitcond_flatten_8_fu_2304_p2 = (exitcond_flatten7_reg_2950 ^ 1'd1);

assign not_exitcond_flatten_fu_1599_p2 = (exitcond_flatten5_reg_2495 ^ 1'd1);

assign p_shl1_cast_fu_1661_p1 = tmp_377_fu_1654_p3;

assign p_shl2_cast_fu_1725_p1 = tmp_249_fu_1717_p3;

assign p_shl3_cast_fu_1737_p1 = tmp_250_fu_1729_p3;

assign p_shl4_cast_fu_1869_p3 = {{tmp_259_fu_1864_p2}, {5'd0}};

assign p_shl5_cast_fu_1885_p1 = tmp_381_fu_1877_p3;

assign p_shl6_cast_fu_1842_p1 = tmp_256_fu_1834_p3;

assign p_shl7_cast_fu_1854_p1 = tmp_257_fu_1846_p3;

assign p_shl8_cast_fu_2362_p1 = tmp_378_fu_2355_p3;

assign p_shl9_cast_fu_2373_p1 = tmp_379_fu_2366_p3;

assign p_shl_cast_fu_1650_p1 = tmp_fu_1643_p3;

assign tmp_247_fu_1665_p2 = (p_shl_cast_fu_1650_p1 + p_shl1_cast_fu_1661_p1);

assign tmp_248_fu_1674_p2 = (w_cast7_cast_fu_1671_p1 + tmp_247_fu_1665_p2);

assign tmp_249_fu_1717_p3 = {{h1_reg_1329}, {5'd0}};

assign tmp_250_fu_1729_p3 = {{h1_reg_1329}, {1'd0}};

assign tmp_251_fu_1741_p2 = (p_shl3_cast_fu_1737_p1 + p_shl2_cast_fu_1725_p1);

assign tmp_252_fu_1761_p2 = (tmp_251_reg_2541 + w2_cast5_cast_fu_1757_p1);

assign tmp_253_fu_2334_p2 = (exitcond_mid_fu_2315_p2 | exitcond_flatten7_reg_2950);

assign tmp_254_fu_2377_p2 = (p_shl8_cast_fu_2362_p1 + p_shl9_cast_fu_2373_p1);

assign tmp_255_fu_2386_p2 = (w6_cast1_cast_fu_2383_p1 + tmp_254_fu_2377_p2);

assign tmp_256_fu_1834_p3 = {{ci_reg_1353}, {5'd0}};

assign tmp_257_fu_1846_p3 = {{ci_reg_1353}, {1'd0}};

assign tmp_258_fu_1858_p2 = (p_shl6_cast_fu_1842_p1 + p_shl7_cast_fu_1854_p1);

assign tmp_259_fu_1864_p2 = (h1_cast6_cast_reg_2536 + tmp_258_fu_1858_p2);

assign tmp_260_fu_1889_p2 = (p_shl4_cast_fu_1869_p3 + p_shl5_cast_fu_1885_p1);

assign tmp_261_fu_1895_p2 = (w2_cast5_cast2_reg_2550 + tmp_260_fu_1889_p2);

assign tmp_309_cast_fu_1680_p1 = tmp_248_fu_1674_p2;

assign tmp_30_fu_1935_p2 = (ShuffleConvs_0_Downs_119_reg_2821 + tmp_382_fu_1931_p1);

assign tmp_313_cast_fu_1766_p1 = tmp_252_fu_1761_p2;

assign tmp_318_cast_fu_2392_p1 = tmp_255_fu_2386_p2;

assign tmp_326_cast_fu_1900_p1 = tmp_261_fu_1895_p2;

assign tmp_32_fu_1945_p2 = (ShuffleConvs_0_Downs_120_reg_2826 + tmp_383_fu_1941_p1);

assign tmp_377_fu_1654_p3 = {{h_cast8_mid2_reg_2519}, {1'd0}};

assign tmp_378_fu_2355_p3 = {{h5_cast2_mid2_reg_2975}, {5'd0}};

assign tmp_379_fu_2366_p3 = {{h5_cast2_mid2_reg_2975}, {1'd0}};

assign tmp_380_fu_2478_p3 = tmp_33_fu_2425_p26[32'd7];

assign tmp_381_fu_1877_p3 = {{tmp_259_fu_1864_p2}, {1'd0}};

assign tmp_382_fu_1931_p1 = grp_MUL_DP_fu_1422_ap_return_0[7:0];

assign tmp_383_fu_1941_p1 = grp_MUL_DP_fu_1422_ap_return_1[7:0];

assign tmp_384_fu_1959_p1 = grp_MUL_DP_fu_1432_ap_return_0[7:0];

assign tmp_385_fu_1969_p1 = grp_MUL_DP_fu_1432_ap_return_1[7:0];

assign tmp_386_fu_1987_p1 = grp_MUL_DP_fu_1442_ap_return_0[7:0];

assign tmp_387_fu_1997_p1 = grp_MUL_DP_fu_1442_ap_return_1[7:0];

assign tmp_388_fu_2015_p1 = grp_MUL_DP_fu_1452_ap_return_0[7:0];

assign tmp_389_fu_2025_p1 = grp_MUL_DP_fu_1452_ap_return_1[7:0];

assign tmp_390_fu_2043_p1 = grp_MUL_DP_fu_1462_ap_return_0[7:0];

assign tmp_391_fu_2053_p1 = grp_MUL_DP_fu_1462_ap_return_1[7:0];

assign tmp_392_fu_2071_p1 = grp_MUL_DP_fu_1472_ap_return_0[7:0];

assign tmp_393_fu_2081_p1 = grp_MUL_DP_fu_1472_ap_return_1[7:0];

assign tmp_394_fu_2099_p1 = grp_MUL_DP_fu_1482_ap_return_0[7:0];

assign tmp_395_fu_2109_p1 = grp_MUL_DP_fu_1482_ap_return_1[7:0];

assign tmp_396_fu_2127_p1 = grp_MUL_DP_fu_1492_ap_return_0[7:0];

assign tmp_397_fu_2137_p1 = grp_MUL_DP_fu_1492_ap_return_1[7:0];

assign tmp_398_fu_2155_p1 = grp_MUL_DP_fu_1502_ap_return_0[7:0];

assign tmp_399_fu_2165_p1 = grp_MUL_DP_fu_1502_ap_return_1[7:0];

assign tmp_400_fu_2183_p1 = grp_MUL_DP_fu_1512_ap_return_0[7:0];

assign tmp_401_fu_2193_p1 = grp_MUL_DP_fu_1512_ap_return_1[7:0];

assign tmp_402_fu_2211_p1 = grp_MUL_DP_fu_1522_ap_return_0[7:0];

assign tmp_403_fu_2221_p1 = grp_MUL_DP_fu_1522_ap_return_1[7:0];

assign tmp_404_fu_2239_p1 = grp_MUL_DP_fu_1532_ap_return_0[7:0];

assign tmp_405_fu_2249_p1 = grp_MUL_DP_fu_1532_ap_return_1[7:0];

assign tmp_53_10_fu_2243_p2 = (ShuffleConvs_0_Downs_141_reg_2931 + tmp_404_fu_2239_p1);

assign tmp_53_1_fu_1963_p2 = (ShuffleConvs_0_Downs_121_reg_2831 + tmp_384_fu_1959_p1);

assign tmp_53_2_fu_1991_p2 = (ShuffleConvs_0_Downs_123_reg_2841 + tmp_386_fu_1987_p1);

assign tmp_53_3_fu_2019_p2 = (ShuffleConvs_0_Downs_125_reg_2851 + tmp_388_fu_2015_p1);

assign tmp_53_4_fu_2047_p2 = (ShuffleConvs_0_Downs_127_reg_2861 + tmp_390_fu_2043_p1);

assign tmp_53_5_fu_2075_p2 = (ShuffleConvs_0_Downs_129_reg_2871 + tmp_392_fu_2071_p1);

assign tmp_53_6_fu_2103_p2 = (ShuffleConvs_0_Downs_131_reg_2881 + tmp_394_fu_2099_p1);

assign tmp_53_7_fu_2131_p2 = (ShuffleConvs_0_Downs_133_reg_2891 + tmp_396_fu_2127_p1);

assign tmp_53_8_fu_2159_p2 = (ShuffleConvs_0_Downs_135_reg_2901 + tmp_398_fu_2155_p1);

assign tmp_53_9_fu_2187_p2 = (ShuffleConvs_0_Downs_137_reg_2911 + tmp_400_fu_2183_p1);

assign tmp_53_s_fu_2215_p2 = (ShuffleConvs_0_Downs_139_reg_2921 + tmp_402_fu_2211_p1);

assign tmp_55_10_fu_2253_p2 = (ShuffleConvs_0_Downs_142_reg_2936 + tmp_405_fu_2249_p1);

assign tmp_55_1_fu_1973_p2 = (ShuffleConvs_0_Downs_122_reg_2836 + tmp_385_fu_1969_p1);

assign tmp_55_2_fu_2001_p2 = (ShuffleConvs_0_Downs_124_reg_2846 + tmp_387_fu_1997_p1);

assign tmp_55_3_fu_2029_p2 = (ShuffleConvs_0_Downs_126_reg_2856 + tmp_389_fu_2025_p1);

assign tmp_55_4_fu_2057_p2 = (ShuffleConvs_0_Downs_128_reg_2866 + tmp_391_fu_2053_p1);

assign tmp_55_5_fu_2085_p2 = (ShuffleConvs_0_Downs_130_reg_2876 + tmp_393_fu_2081_p1);

assign tmp_55_6_fu_2113_p2 = (ShuffleConvs_0_Downs_132_reg_2886 + tmp_395_fu_2109_p1);

assign tmp_55_7_fu_2141_p2 = (ShuffleConvs_0_Downs_134_reg_2896 + tmp_397_fu_2137_p1);

assign tmp_55_8_fu_2169_p2 = (ShuffleConvs_0_Downs_136_reg_2906 + tmp_399_fu_2165_p1);

assign tmp_55_9_fu_2197_p2 = (ShuffleConvs_0_Downs_138_reg_2916 + tmp_401_fu_2193_p1);

assign tmp_55_s_fu_2225_p2 = (ShuffleConvs_0_Downs_140_reg_2926 + tmp_403_fu_2221_p1);

assign tmp_fu_1643_p3 = {{h_cast8_mid2_reg_2519}, {5'd0}};

assign tmp_s_fu_1622_p2 = (exitcond36_mid_fu_1610_p2 | exitcond_flatten5_reg_2495);

assign w2_cast5_cast2_fu_1753_p1 = w2_reg_1341;

assign w2_cast5_cast_fu_1757_p1 = w2_reg_1341;

assign w6_cast1_cast_fu_2383_p1 = w6_mid2_reg_2969;

assign w6_mid2_fu_2339_p3 = ((tmp_253_fu_2334_p2[0:0] === 1'b1) ? 6'd1 : w6_phi_fu_1414_p4);

assign w_22_fu_1708_p2 = (w_mid2_reg_2513 + 6'd1);

assign w_23_fu_1917_p2 = (w2_reg_1341 + 6'd1);

assign w_24_fu_2420_p2 = (w6_mid2_reg_2969 + 6'd1);

assign w_cast7_cast_fu_1671_p1 = w_mid2_reg_2513;

assign w_mid2_fu_1627_p3 = ((tmp_s_fu_1622_p2[0:0] === 1'b1) ? 6'd1 : w_phi_fu_1321_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_2688;

assign weight_10_V_address0 = weight_10_V_addr_reg_2738;

assign weight_11_V_address0 = weight_11_V_addr_reg_2743;

assign weight_12_V_address0 = weight_12_V_addr_reg_2748;

assign weight_13_V_address0 = weight_13_V_addr_reg_2753;

assign weight_14_V_address0 = weight_14_V_addr_reg_2758;

assign weight_15_V_address0 = weight_15_V_addr_reg_2763;

assign weight_16_V_address0 = weight_16_V_addr_reg_2768;

assign weight_17_V_address0 = weight_17_V_addr_reg_2773;

assign weight_18_V_address0 = weight_18_V_addr_reg_2778;

assign weight_19_V_address0 = weight_19_V_addr_reg_2783;

assign weight_1_V_address0 = weight_1_V_addr_reg_2693;

assign weight_20_V_address0 = weight_20_V_addr_reg_2788;

assign weight_21_V_address0 = weight_21_V_addr_reg_2793;

assign weight_22_V_address0 = weight_22_V_addr_reg_2798;

assign weight_23_V_address0 = weight_23_V_addr_reg_2803;

assign weight_2_V_address0 = weight_2_V_addr_reg_2698;

assign weight_3_V_address0 = weight_3_V_addr_reg_2703;

assign weight_4_V_address0 = weight_4_V_addr_reg_2708;

assign weight_5_V_address0 = weight_5_V_addr_reg_2713;

assign weight_6_V_address0 = weight_6_V_addr_reg_2718;

assign weight_7_V_address0 = weight_7_V_addr_reg_2723;

assign weight_8_V_address0 = weight_8_V_addr_reg_2728;

assign weight_9_V_address0 = weight_9_V_addr_reg_2733;

always @ (posedge ap_clk) begin
    h1_cast6_cast_reg_2536[10:6] <= 5'b00000;
    tmp_251_reg_2541[0] <= 1'b0;
    w2_cast5_cast2_reg_2550[15:6] <= 10'b0000000000;
end

endmodule //subconv_1x1_32_p
