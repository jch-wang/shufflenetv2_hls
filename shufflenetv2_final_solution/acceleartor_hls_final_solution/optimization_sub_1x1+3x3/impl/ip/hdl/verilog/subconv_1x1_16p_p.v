// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_16p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_24_V_address0,
        weight_24_V_ce0,
        weight_24_V_q0,
        weight_25_V_address0,
        weight_25_V_ce0,
        weight_25_V_q0,
        weight_26_V_address0,
        weight_26_V_ce0,
        weight_26_V_q0,
        weight_27_V_address0,
        weight_27_V_ce0,
        weight_27_V_q0,
        weight_28_V_address0,
        weight_28_V_ce0,
        weight_28_V_q0,
        weight_29_V_address0,
        weight_29_V_ce0,
        weight_29_V_q0,
        weight_30_V_address0,
        weight_30_V_ce0,
        weight_30_V_q0,
        weight_31_V_address0,
        weight_31_V_ce0,
        weight_31_V_q0,
        weight_32_V_address0,
        weight_32_V_ce0,
        weight_32_V_q0,
        weight_33_V_address0,
        weight_33_V_ce0,
        weight_33_V_q0,
        weight_34_V_address0,
        weight_34_V_ce0,
        weight_34_V_q0,
        weight_35_V_address0,
        weight_35_V_ce0,
        weight_35_V_q0,
        weight_36_V_address0,
        weight_36_V_ce0,
        weight_36_V_q0,
        weight_37_V_address0,
        weight_37_V_ce0,
        weight_37_V_q0,
        weight_38_V_address0,
        weight_38_V_ce0,
        weight_38_V_q0,
        weight_39_V_address0,
        weight_39_V_ce0,
        weight_39_V_q0,
        weight_40_V_address0,
        weight_40_V_ce0,
        weight_40_V_q0,
        weight_41_V_address0,
        weight_41_V_ce0,
        weight_41_V_q0,
        weight_42_V_address0,
        weight_42_V_ce0,
        weight_42_V_q0,
        weight_43_V_address0,
        weight_43_V_ce0,
        weight_43_V_q0,
        weight_44_V_address0,
        weight_44_V_ce0,
        weight_44_V_q0,
        weight_45_V_address0,
        weight_45_V_ce0,
        weight_45_V_q0,
        weight_46_V_address0,
        weight_46_V_ce0,
        weight_46_V_q0,
        weight_47_V_address0,
        weight_47_V_ce0,
        weight_47_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_1_Downs_47_address0,
        ShuffleConvs_1_Downs_47_ce0,
        ShuffleConvs_1_Downs_47_we0,
        ShuffleConvs_1_Downs_47_d0,
        ShuffleConvs_1_Downs_47_q0,
        ShuffleConvs_1_Downs_47_address1,
        ShuffleConvs_1_Downs_47_ce1,
        ShuffleConvs_1_Downs_47_we1,
        ShuffleConvs_1_Downs_47_d1,
        ShuffleConvs_1_Downs_30_address0,
        ShuffleConvs_1_Downs_30_ce0,
        ShuffleConvs_1_Downs_30_we0,
        ShuffleConvs_1_Downs_30_d0,
        ShuffleConvs_1_Downs_30_q0,
        ShuffleConvs_1_Downs_30_address1,
        ShuffleConvs_1_Downs_30_ce1,
        ShuffleConvs_1_Downs_30_we1,
        ShuffleConvs_1_Downs_30_d1,
        ShuffleConvs_1_Downs_46_address0,
        ShuffleConvs_1_Downs_46_ce0,
        ShuffleConvs_1_Downs_46_we0,
        ShuffleConvs_1_Downs_46_d0,
        ShuffleConvs_1_Downs_46_q0,
        ShuffleConvs_1_Downs_46_address1,
        ShuffleConvs_1_Downs_46_ce1,
        ShuffleConvs_1_Downs_46_we1,
        ShuffleConvs_1_Downs_46_d1,
        ShuffleConvs_1_Downs_29_address0,
        ShuffleConvs_1_Downs_29_ce0,
        ShuffleConvs_1_Downs_29_we0,
        ShuffleConvs_1_Downs_29_d0,
        ShuffleConvs_1_Downs_29_q0,
        ShuffleConvs_1_Downs_29_address1,
        ShuffleConvs_1_Downs_29_ce1,
        ShuffleConvs_1_Downs_29_we1,
        ShuffleConvs_1_Downs_29_d1,
        ShuffleConvs_1_Downs_35_address0,
        ShuffleConvs_1_Downs_35_ce0,
        ShuffleConvs_1_Downs_35_we0,
        ShuffleConvs_1_Downs_35_d0,
        ShuffleConvs_1_Downs_35_q0,
        ShuffleConvs_1_Downs_35_address1,
        ShuffleConvs_1_Downs_35_ce1,
        ShuffleConvs_1_Downs_35_we1,
        ShuffleConvs_1_Downs_35_d1,
        ShuffleConvs_1_Downs_28_address0,
        ShuffleConvs_1_Downs_28_ce0,
        ShuffleConvs_1_Downs_28_we0,
        ShuffleConvs_1_Downs_28_d0,
        ShuffleConvs_1_Downs_28_q0,
        ShuffleConvs_1_Downs_28_address1,
        ShuffleConvs_1_Downs_28_ce1,
        ShuffleConvs_1_Downs_28_we1,
        ShuffleConvs_1_Downs_28_d1,
        ShuffleConvs_1_Downs_24_address0,
        ShuffleConvs_1_Downs_24_ce0,
        ShuffleConvs_1_Downs_24_we0,
        ShuffleConvs_1_Downs_24_d0,
        ShuffleConvs_1_Downs_24_q0,
        ShuffleConvs_1_Downs_24_address1,
        ShuffleConvs_1_Downs_24_ce1,
        ShuffleConvs_1_Downs_24_we1,
        ShuffleConvs_1_Downs_24_d1,
        ShuffleConvs_1_Downs_27_address0,
        ShuffleConvs_1_Downs_27_ce0,
        ShuffleConvs_1_Downs_27_we0,
        ShuffleConvs_1_Downs_27_d0,
        ShuffleConvs_1_Downs_27_q0,
        ShuffleConvs_1_Downs_27_address1,
        ShuffleConvs_1_Downs_27_ce1,
        ShuffleConvs_1_Downs_27_we1,
        ShuffleConvs_1_Downs_27_d1,
        ShuffleConvs_1_Downs_13_address0,
        ShuffleConvs_1_Downs_13_ce0,
        ShuffleConvs_1_Downs_13_we0,
        ShuffleConvs_1_Downs_13_d0,
        ShuffleConvs_1_Downs_13_q0,
        ShuffleConvs_1_Downs_13_address1,
        ShuffleConvs_1_Downs_13_ce1,
        ShuffleConvs_1_Downs_13_we1,
        ShuffleConvs_1_Downs_13_d1,
        ShuffleConvs_1_Downs_26_address0,
        ShuffleConvs_1_Downs_26_ce0,
        ShuffleConvs_1_Downs_26_we0,
        ShuffleConvs_1_Downs_26_d0,
        ShuffleConvs_1_Downs_26_q0,
        ShuffleConvs_1_Downs_26_address1,
        ShuffleConvs_1_Downs_26_ce1,
        ShuffleConvs_1_Downs_26_we1,
        ShuffleConvs_1_Downs_26_d1,
        ShuffleConvs_1_Downs_4_address0,
        ShuffleConvs_1_Downs_4_ce0,
        ShuffleConvs_1_Downs_4_we0,
        ShuffleConvs_1_Downs_4_d0,
        ShuffleConvs_1_Downs_4_q0,
        ShuffleConvs_1_Downs_4_address1,
        ShuffleConvs_1_Downs_4_ce1,
        ShuffleConvs_1_Downs_4_we1,
        ShuffleConvs_1_Downs_4_d1,
        ShuffleConvs_1_Downs_25_address0,
        ShuffleConvs_1_Downs_25_ce0,
        ShuffleConvs_1_Downs_25_we0,
        ShuffleConvs_1_Downs_25_d0,
        ShuffleConvs_1_Downs_25_q0,
        ShuffleConvs_1_Downs_25_address1,
        ShuffleConvs_1_Downs_25_ce1,
        ShuffleConvs_1_Downs_25_we1,
        ShuffleConvs_1_Downs_25_d1,
        ShuffleConvs_1_Downs_3_address0,
        ShuffleConvs_1_Downs_3_ce0,
        ShuffleConvs_1_Downs_3_we0,
        ShuffleConvs_1_Downs_3_d0,
        ShuffleConvs_1_Downs_3_q0,
        ShuffleConvs_1_Downs_3_address1,
        ShuffleConvs_1_Downs_3_ce1,
        ShuffleConvs_1_Downs_3_we1,
        ShuffleConvs_1_Downs_3_d1,
        ShuffleConvs_1_Downs_23_address0,
        ShuffleConvs_1_Downs_23_ce0,
        ShuffleConvs_1_Downs_23_we0,
        ShuffleConvs_1_Downs_23_d0,
        ShuffleConvs_1_Downs_23_q0,
        ShuffleConvs_1_Downs_23_address1,
        ShuffleConvs_1_Downs_23_ce1,
        ShuffleConvs_1_Downs_23_we1,
        ShuffleConvs_1_Downs_23_d1,
        ShuffleConvs_1_Downs_2_address0,
        ShuffleConvs_1_Downs_2_ce0,
        ShuffleConvs_1_Downs_2_we0,
        ShuffleConvs_1_Downs_2_d0,
        ShuffleConvs_1_Downs_2_q0,
        ShuffleConvs_1_Downs_2_address1,
        ShuffleConvs_1_Downs_2_ce1,
        ShuffleConvs_1_Downs_2_we1,
        ShuffleConvs_1_Downs_2_d1,
        ShuffleConvs_1_Downs_22_address0,
        ShuffleConvs_1_Downs_22_ce0,
        ShuffleConvs_1_Downs_22_we0,
        ShuffleConvs_1_Downs_22_d0,
        ShuffleConvs_1_Downs_22_q0,
        ShuffleConvs_1_Downs_22_address1,
        ShuffleConvs_1_Downs_22_ce1,
        ShuffleConvs_1_Downs_22_we1,
        ShuffleConvs_1_Downs_22_d1,
        ShuffleConvs_1_Downs_1_address0,
        ShuffleConvs_1_Downs_1_ce0,
        ShuffleConvs_1_Downs_1_we0,
        ShuffleConvs_1_Downs_1_d0,
        ShuffleConvs_1_Downs_1_q0,
        ShuffleConvs_1_Downs_1_address1,
        ShuffleConvs_1_Downs_1_ce1,
        ShuffleConvs_1_Downs_1_we1,
        ShuffleConvs_1_Downs_1_d1,
        ShuffleConvs_1_Downs_21_address0,
        ShuffleConvs_1_Downs_21_ce0,
        ShuffleConvs_1_Downs_21_we0,
        ShuffleConvs_1_Downs_21_d0,
        ShuffleConvs_1_Downs_21_q0,
        ShuffleConvs_1_Downs_21_address1,
        ShuffleConvs_1_Downs_21_ce1,
        ShuffleConvs_1_Downs_21_we1,
        ShuffleConvs_1_Downs_21_d1,
        ShuffleConvs_1_Downs_address0,
        ShuffleConvs_1_Downs_ce0,
        ShuffleConvs_1_Downs_we0,
        ShuffleConvs_1_Downs_d0,
        ShuffleConvs_1_Downs_q0,
        ShuffleConvs_1_Downs_address1,
        ShuffleConvs_1_Downs_ce1,
        ShuffleConvs_1_Downs_we1,
        ShuffleConvs_1_Downs_d1,
        ShuffleConvs_1_Downs_20_address0,
        ShuffleConvs_1_Downs_20_ce0,
        ShuffleConvs_1_Downs_20_we0,
        ShuffleConvs_1_Downs_20_d0,
        ShuffleConvs_1_Downs_20_q0,
        ShuffleConvs_1_Downs_20_address1,
        ShuffleConvs_1_Downs_20_ce1,
        ShuffleConvs_1_Downs_20_we1,
        ShuffleConvs_1_Downs_20_d1,
        ShuffleConvs_1_Downs_45_address0,
        ShuffleConvs_1_Downs_45_ce0,
        ShuffleConvs_1_Downs_45_we0,
        ShuffleConvs_1_Downs_45_d0,
        ShuffleConvs_1_Downs_45_q0,
        ShuffleConvs_1_Downs_45_address1,
        ShuffleConvs_1_Downs_45_ce1,
        ShuffleConvs_1_Downs_45_we1,
        ShuffleConvs_1_Downs_45_d1,
        ShuffleConvs_1_Downs_19_address0,
        ShuffleConvs_1_Downs_19_ce0,
        ShuffleConvs_1_Downs_19_we0,
        ShuffleConvs_1_Downs_19_d0,
        ShuffleConvs_1_Downs_19_q0,
        ShuffleConvs_1_Downs_19_address1,
        ShuffleConvs_1_Downs_19_ce1,
        ShuffleConvs_1_Downs_19_we1,
        ShuffleConvs_1_Downs_19_d1,
        ShuffleConvs_1_Downs_44_address0,
        ShuffleConvs_1_Downs_44_ce0,
        ShuffleConvs_1_Downs_44_we0,
        ShuffleConvs_1_Downs_44_d0,
        ShuffleConvs_1_Downs_44_q0,
        ShuffleConvs_1_Downs_44_address1,
        ShuffleConvs_1_Downs_44_ce1,
        ShuffleConvs_1_Downs_44_we1,
        ShuffleConvs_1_Downs_44_d1,
        ShuffleConvs_1_Downs_18_address0,
        ShuffleConvs_1_Downs_18_ce0,
        ShuffleConvs_1_Downs_18_we0,
        ShuffleConvs_1_Downs_18_d0,
        ShuffleConvs_1_Downs_18_q0,
        ShuffleConvs_1_Downs_18_address1,
        ShuffleConvs_1_Downs_18_ce1,
        ShuffleConvs_1_Downs_18_we1,
        ShuffleConvs_1_Downs_18_d1,
        ShuffleConvs_1_Downs_43_address0,
        ShuffleConvs_1_Downs_43_ce0,
        ShuffleConvs_1_Downs_43_we0,
        ShuffleConvs_1_Downs_43_d0,
        ShuffleConvs_1_Downs_43_q0,
        ShuffleConvs_1_Downs_43_address1,
        ShuffleConvs_1_Downs_43_ce1,
        ShuffleConvs_1_Downs_43_we1,
        ShuffleConvs_1_Downs_43_d1,
        ShuffleConvs_1_Downs_17_address0,
        ShuffleConvs_1_Downs_17_ce0,
        ShuffleConvs_1_Downs_17_we0,
        ShuffleConvs_1_Downs_17_d0,
        ShuffleConvs_1_Downs_17_q0,
        ShuffleConvs_1_Downs_17_address1,
        ShuffleConvs_1_Downs_17_ce1,
        ShuffleConvs_1_Downs_17_we1,
        ShuffleConvs_1_Downs_17_d1,
        ShuffleConvs_1_Downs_42_address0,
        ShuffleConvs_1_Downs_42_ce0,
        ShuffleConvs_1_Downs_42_we0,
        ShuffleConvs_1_Downs_42_d0,
        ShuffleConvs_1_Downs_42_q0,
        ShuffleConvs_1_Downs_42_address1,
        ShuffleConvs_1_Downs_42_ce1,
        ShuffleConvs_1_Downs_42_we1,
        ShuffleConvs_1_Downs_42_d1,
        ShuffleConvs_1_Downs_16_address0,
        ShuffleConvs_1_Downs_16_ce0,
        ShuffleConvs_1_Downs_16_we0,
        ShuffleConvs_1_Downs_16_d0,
        ShuffleConvs_1_Downs_16_q0,
        ShuffleConvs_1_Downs_16_address1,
        ShuffleConvs_1_Downs_16_ce1,
        ShuffleConvs_1_Downs_16_we1,
        ShuffleConvs_1_Downs_16_d1,
        ShuffleConvs_1_Downs_41_address0,
        ShuffleConvs_1_Downs_41_ce0,
        ShuffleConvs_1_Downs_41_we0,
        ShuffleConvs_1_Downs_41_d0,
        ShuffleConvs_1_Downs_41_q0,
        ShuffleConvs_1_Downs_41_address1,
        ShuffleConvs_1_Downs_41_ce1,
        ShuffleConvs_1_Downs_41_we1,
        ShuffleConvs_1_Downs_41_d1,
        ShuffleConvs_1_Downs_15_address0,
        ShuffleConvs_1_Downs_15_ce0,
        ShuffleConvs_1_Downs_15_we0,
        ShuffleConvs_1_Downs_15_d0,
        ShuffleConvs_1_Downs_15_q0,
        ShuffleConvs_1_Downs_15_address1,
        ShuffleConvs_1_Downs_15_ce1,
        ShuffleConvs_1_Downs_15_we1,
        ShuffleConvs_1_Downs_15_d1,
        ShuffleConvs_1_Downs_40_address0,
        ShuffleConvs_1_Downs_40_ce0,
        ShuffleConvs_1_Downs_40_we0,
        ShuffleConvs_1_Downs_40_d0,
        ShuffleConvs_1_Downs_40_q0,
        ShuffleConvs_1_Downs_40_address1,
        ShuffleConvs_1_Downs_40_ce1,
        ShuffleConvs_1_Downs_40_we1,
        ShuffleConvs_1_Downs_40_d1,
        ShuffleConvs_1_Downs_14_address0,
        ShuffleConvs_1_Downs_14_ce0,
        ShuffleConvs_1_Downs_14_we0,
        ShuffleConvs_1_Downs_14_d0,
        ShuffleConvs_1_Downs_14_q0,
        ShuffleConvs_1_Downs_14_address1,
        ShuffleConvs_1_Downs_14_ce1,
        ShuffleConvs_1_Downs_14_we1,
        ShuffleConvs_1_Downs_14_d1,
        ShuffleConvs_1_Downs_39_address0,
        ShuffleConvs_1_Downs_39_ce0,
        ShuffleConvs_1_Downs_39_we0,
        ShuffleConvs_1_Downs_39_d0,
        ShuffleConvs_1_Downs_39_q0,
        ShuffleConvs_1_Downs_39_address1,
        ShuffleConvs_1_Downs_39_ce1,
        ShuffleConvs_1_Downs_39_we1,
        ShuffleConvs_1_Downs_39_d1,
        ShuffleConvs_1_Downs_12_address0,
        ShuffleConvs_1_Downs_12_ce0,
        ShuffleConvs_1_Downs_12_we0,
        ShuffleConvs_1_Downs_12_d0,
        ShuffleConvs_1_Downs_12_q0,
        ShuffleConvs_1_Downs_12_address1,
        ShuffleConvs_1_Downs_12_ce1,
        ShuffleConvs_1_Downs_12_we1,
        ShuffleConvs_1_Downs_12_d1,
        ShuffleConvs_1_Downs_38_address0,
        ShuffleConvs_1_Downs_38_ce0,
        ShuffleConvs_1_Downs_38_we0,
        ShuffleConvs_1_Downs_38_d0,
        ShuffleConvs_1_Downs_38_q0,
        ShuffleConvs_1_Downs_38_address1,
        ShuffleConvs_1_Downs_38_ce1,
        ShuffleConvs_1_Downs_38_we1,
        ShuffleConvs_1_Downs_38_d1,
        ShuffleConvs_1_Downs_11_address0,
        ShuffleConvs_1_Downs_11_ce0,
        ShuffleConvs_1_Downs_11_we0,
        ShuffleConvs_1_Downs_11_d0,
        ShuffleConvs_1_Downs_11_q0,
        ShuffleConvs_1_Downs_11_address1,
        ShuffleConvs_1_Downs_11_ce1,
        ShuffleConvs_1_Downs_11_we1,
        ShuffleConvs_1_Downs_11_d1,
        ShuffleConvs_1_Downs_37_address0,
        ShuffleConvs_1_Downs_37_ce0,
        ShuffleConvs_1_Downs_37_we0,
        ShuffleConvs_1_Downs_37_d0,
        ShuffleConvs_1_Downs_37_q0,
        ShuffleConvs_1_Downs_37_address1,
        ShuffleConvs_1_Downs_37_ce1,
        ShuffleConvs_1_Downs_37_we1,
        ShuffleConvs_1_Downs_37_d1,
        ShuffleConvs_1_Downs_10_address0,
        ShuffleConvs_1_Downs_10_ce0,
        ShuffleConvs_1_Downs_10_we0,
        ShuffleConvs_1_Downs_10_d0,
        ShuffleConvs_1_Downs_10_q0,
        ShuffleConvs_1_Downs_10_address1,
        ShuffleConvs_1_Downs_10_ce1,
        ShuffleConvs_1_Downs_10_we1,
        ShuffleConvs_1_Downs_10_d1,
        ShuffleConvs_1_Downs_36_address0,
        ShuffleConvs_1_Downs_36_ce0,
        ShuffleConvs_1_Downs_36_we0,
        ShuffleConvs_1_Downs_36_d0,
        ShuffleConvs_1_Downs_36_q0,
        ShuffleConvs_1_Downs_36_address1,
        ShuffleConvs_1_Downs_36_ce1,
        ShuffleConvs_1_Downs_36_we1,
        ShuffleConvs_1_Downs_36_d1,
        ShuffleConvs_1_Downs_9_address0,
        ShuffleConvs_1_Downs_9_ce0,
        ShuffleConvs_1_Downs_9_we0,
        ShuffleConvs_1_Downs_9_d0,
        ShuffleConvs_1_Downs_9_q0,
        ShuffleConvs_1_Downs_9_address1,
        ShuffleConvs_1_Downs_9_ce1,
        ShuffleConvs_1_Downs_9_we1,
        ShuffleConvs_1_Downs_9_d1,
        ShuffleConvs_1_Downs_34_address0,
        ShuffleConvs_1_Downs_34_ce0,
        ShuffleConvs_1_Downs_34_we0,
        ShuffleConvs_1_Downs_34_d0,
        ShuffleConvs_1_Downs_34_q0,
        ShuffleConvs_1_Downs_34_address1,
        ShuffleConvs_1_Downs_34_ce1,
        ShuffleConvs_1_Downs_34_we1,
        ShuffleConvs_1_Downs_34_d1,
        ShuffleConvs_1_Downs_8_address0,
        ShuffleConvs_1_Downs_8_ce0,
        ShuffleConvs_1_Downs_8_we0,
        ShuffleConvs_1_Downs_8_d0,
        ShuffleConvs_1_Downs_8_q0,
        ShuffleConvs_1_Downs_8_address1,
        ShuffleConvs_1_Downs_8_ce1,
        ShuffleConvs_1_Downs_8_we1,
        ShuffleConvs_1_Downs_8_d1,
        ShuffleConvs_1_Downs_33_address0,
        ShuffleConvs_1_Downs_33_ce0,
        ShuffleConvs_1_Downs_33_we0,
        ShuffleConvs_1_Downs_33_d0,
        ShuffleConvs_1_Downs_33_q0,
        ShuffleConvs_1_Downs_33_address1,
        ShuffleConvs_1_Downs_33_ce1,
        ShuffleConvs_1_Downs_33_we1,
        ShuffleConvs_1_Downs_33_d1,
        ShuffleConvs_1_Downs_7_address0,
        ShuffleConvs_1_Downs_7_ce0,
        ShuffleConvs_1_Downs_7_we0,
        ShuffleConvs_1_Downs_7_d0,
        ShuffleConvs_1_Downs_7_q0,
        ShuffleConvs_1_Downs_7_address1,
        ShuffleConvs_1_Downs_7_ce1,
        ShuffleConvs_1_Downs_7_we1,
        ShuffleConvs_1_Downs_7_d1,
        ShuffleConvs_1_Downs_32_address0,
        ShuffleConvs_1_Downs_32_ce0,
        ShuffleConvs_1_Downs_32_we0,
        ShuffleConvs_1_Downs_32_d0,
        ShuffleConvs_1_Downs_32_q0,
        ShuffleConvs_1_Downs_32_address1,
        ShuffleConvs_1_Downs_32_ce1,
        ShuffleConvs_1_Downs_32_we1,
        ShuffleConvs_1_Downs_32_d1,
        ShuffleConvs_1_Downs_6_address0,
        ShuffleConvs_1_Downs_6_ce0,
        ShuffleConvs_1_Downs_6_we0,
        ShuffleConvs_1_Downs_6_d0,
        ShuffleConvs_1_Downs_6_q0,
        ShuffleConvs_1_Downs_6_address1,
        ShuffleConvs_1_Downs_6_ce1,
        ShuffleConvs_1_Downs_6_we1,
        ShuffleConvs_1_Downs_6_d1,
        ShuffleConvs_1_Downs_31_address0,
        ShuffleConvs_1_Downs_31_ce0,
        ShuffleConvs_1_Downs_31_we0,
        ShuffleConvs_1_Downs_31_d0,
        ShuffleConvs_1_Downs_31_q0,
        ShuffleConvs_1_Downs_31_address1,
        ShuffleConvs_1_Downs_31_ce1,
        ShuffleConvs_1_Downs_31_we1,
        ShuffleConvs_1_Downs_31_d1,
        ShuffleConvs_1_Downs_5_address0,
        ShuffleConvs_1_Downs_5_ce0,
        ShuffleConvs_1_Downs_5_we0,
        ShuffleConvs_1_Downs_5_d0,
        ShuffleConvs_1_Downs_5_q0,
        ShuffleConvs_1_Downs_5_address1,
        ShuffleConvs_1_Downs_5_ce1,
        ShuffleConvs_1_Downs_5_we1,
        ShuffleConvs_1_Downs_5_d1
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_pp0_stage0 = 41'd2;
parameter    ap_ST_fsm_state5 = 41'd4;
parameter    ap_ST_fsm_state6 = 41'd8;
parameter    ap_ST_fsm_state7 = 41'd16;
parameter    ap_ST_fsm_state8 = 41'd32;
parameter    ap_ST_fsm_state9 = 41'd64;
parameter    ap_ST_fsm_state10 = 41'd128;
parameter    ap_ST_fsm_state11 = 41'd256;
parameter    ap_ST_fsm_state12 = 41'd512;
parameter    ap_ST_fsm_state13 = 41'd1024;
parameter    ap_ST_fsm_state14 = 41'd2048;
parameter    ap_ST_fsm_state15 = 41'd4096;
parameter    ap_ST_fsm_state16 = 41'd8192;
parameter    ap_ST_fsm_state17 = 41'd16384;
parameter    ap_ST_fsm_state18 = 41'd32768;
parameter    ap_ST_fsm_state19 = 41'd65536;
parameter    ap_ST_fsm_state20 = 41'd131072;
parameter    ap_ST_fsm_state21 = 41'd262144;
parameter    ap_ST_fsm_state22 = 41'd524288;
parameter    ap_ST_fsm_state23 = 41'd1048576;
parameter    ap_ST_fsm_state24 = 41'd2097152;
parameter    ap_ST_fsm_state25 = 41'd4194304;
parameter    ap_ST_fsm_state26 = 41'd8388608;
parameter    ap_ST_fsm_state27 = 41'd16777216;
parameter    ap_ST_fsm_state28 = 41'd33554432;
parameter    ap_ST_fsm_state29 = 41'd67108864;
parameter    ap_ST_fsm_state30 = 41'd134217728;
parameter    ap_ST_fsm_state31 = 41'd268435456;
parameter    ap_ST_fsm_state32 = 41'd536870912;
parameter    ap_ST_fsm_state33 = 41'd1073741824;
parameter    ap_ST_fsm_state34 = 41'd2147483648;
parameter    ap_ST_fsm_state35 = 41'd4294967296;
parameter    ap_ST_fsm_state36 = 41'd8589934592;
parameter    ap_ST_fsm_state37 = 41'd17179869184;
parameter    ap_ST_fsm_state38 = 41'd34359738368;
parameter    ap_ST_fsm_state39 = 41'd68719476736;
parameter    ap_ST_fsm_state40 = 41'd137438953472;
parameter    ap_ST_fsm_state41 = 41'd274877906944;
parameter    ap_ST_fsm_pp1_stage0 = 41'd549755813888;
parameter    ap_ST_fsm_state46 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [5:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [5:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [5:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [5:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [5:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [5:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [5:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [5:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [5:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [5:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [5:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [5:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [5:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [5:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [5:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [5:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [5:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [5:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [5:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [5:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [5:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [5:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [5:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [5:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [5:0] weight_24_V_address0;
output   weight_24_V_ce0;
input  [7:0] weight_24_V_q0;
output  [5:0] weight_25_V_address0;
output   weight_25_V_ce0;
input  [7:0] weight_25_V_q0;
output  [5:0] weight_26_V_address0;
output   weight_26_V_ce0;
input  [7:0] weight_26_V_q0;
output  [5:0] weight_27_V_address0;
output   weight_27_V_ce0;
input  [7:0] weight_27_V_q0;
output  [5:0] weight_28_V_address0;
output   weight_28_V_ce0;
input  [7:0] weight_28_V_q0;
output  [5:0] weight_29_V_address0;
output   weight_29_V_ce0;
input  [7:0] weight_29_V_q0;
output  [5:0] weight_30_V_address0;
output   weight_30_V_ce0;
input  [7:0] weight_30_V_q0;
output  [5:0] weight_31_V_address0;
output   weight_31_V_ce0;
input  [7:0] weight_31_V_q0;
output  [5:0] weight_32_V_address0;
output   weight_32_V_ce0;
input  [7:0] weight_32_V_q0;
output  [5:0] weight_33_V_address0;
output   weight_33_V_ce0;
input  [7:0] weight_33_V_q0;
output  [5:0] weight_34_V_address0;
output   weight_34_V_ce0;
input  [7:0] weight_34_V_q0;
output  [5:0] weight_35_V_address0;
output   weight_35_V_ce0;
input  [7:0] weight_35_V_q0;
output  [5:0] weight_36_V_address0;
output   weight_36_V_ce0;
input  [7:0] weight_36_V_q0;
output  [5:0] weight_37_V_address0;
output   weight_37_V_ce0;
input  [7:0] weight_37_V_q0;
output  [5:0] weight_38_V_address0;
output   weight_38_V_ce0;
input  [7:0] weight_38_V_q0;
output  [5:0] weight_39_V_address0;
output   weight_39_V_ce0;
input  [7:0] weight_39_V_q0;
output  [5:0] weight_40_V_address0;
output   weight_40_V_ce0;
input  [7:0] weight_40_V_q0;
output  [5:0] weight_41_V_address0;
output   weight_41_V_ce0;
input  [7:0] weight_41_V_q0;
output  [5:0] weight_42_V_address0;
output   weight_42_V_ce0;
input  [7:0] weight_42_V_q0;
output  [5:0] weight_43_V_address0;
output   weight_43_V_ce0;
input  [7:0] weight_43_V_q0;
output  [5:0] weight_44_V_address0;
output   weight_44_V_ce0;
input  [7:0] weight_44_V_q0;
output  [5:0] weight_45_V_address0;
output   weight_45_V_ce0;
input  [7:0] weight_45_V_q0;
output  [5:0] weight_46_V_address0;
output   weight_46_V_ce0;
input  [7:0] weight_46_V_q0;
output  [5:0] weight_47_V_address0;
output   weight_47_V_ce0;
input  [7:0] weight_47_V_q0;
output  [5:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [8:0] ShuffleConvs_1_Downs_47_address0;
output   ShuffleConvs_1_Downs_47_ce0;
output   ShuffleConvs_1_Downs_47_we0;
output  [7:0] ShuffleConvs_1_Downs_47_d0;
input  [7:0] ShuffleConvs_1_Downs_47_q0;
output  [8:0] ShuffleConvs_1_Downs_47_address1;
output   ShuffleConvs_1_Downs_47_ce1;
output   ShuffleConvs_1_Downs_47_we1;
output  [7:0] ShuffleConvs_1_Downs_47_d1;
output  [8:0] ShuffleConvs_1_Downs_30_address0;
output   ShuffleConvs_1_Downs_30_ce0;
output   ShuffleConvs_1_Downs_30_we0;
output  [7:0] ShuffleConvs_1_Downs_30_d0;
input  [7:0] ShuffleConvs_1_Downs_30_q0;
output  [8:0] ShuffleConvs_1_Downs_30_address1;
output   ShuffleConvs_1_Downs_30_ce1;
output   ShuffleConvs_1_Downs_30_we1;
output  [7:0] ShuffleConvs_1_Downs_30_d1;
output  [8:0] ShuffleConvs_1_Downs_46_address0;
output   ShuffleConvs_1_Downs_46_ce0;
output   ShuffleConvs_1_Downs_46_we0;
output  [7:0] ShuffleConvs_1_Downs_46_d0;
input  [7:0] ShuffleConvs_1_Downs_46_q0;
output  [8:0] ShuffleConvs_1_Downs_46_address1;
output   ShuffleConvs_1_Downs_46_ce1;
output   ShuffleConvs_1_Downs_46_we1;
output  [7:0] ShuffleConvs_1_Downs_46_d1;
output  [8:0] ShuffleConvs_1_Downs_29_address0;
output   ShuffleConvs_1_Downs_29_ce0;
output   ShuffleConvs_1_Downs_29_we0;
output  [7:0] ShuffleConvs_1_Downs_29_d0;
input  [7:0] ShuffleConvs_1_Downs_29_q0;
output  [8:0] ShuffleConvs_1_Downs_29_address1;
output   ShuffleConvs_1_Downs_29_ce1;
output   ShuffleConvs_1_Downs_29_we1;
output  [7:0] ShuffleConvs_1_Downs_29_d1;
output  [8:0] ShuffleConvs_1_Downs_35_address0;
output   ShuffleConvs_1_Downs_35_ce0;
output   ShuffleConvs_1_Downs_35_we0;
output  [7:0] ShuffleConvs_1_Downs_35_d0;
input  [7:0] ShuffleConvs_1_Downs_35_q0;
output  [8:0] ShuffleConvs_1_Downs_35_address1;
output   ShuffleConvs_1_Downs_35_ce1;
output   ShuffleConvs_1_Downs_35_we1;
output  [7:0] ShuffleConvs_1_Downs_35_d1;
output  [8:0] ShuffleConvs_1_Downs_28_address0;
output   ShuffleConvs_1_Downs_28_ce0;
output   ShuffleConvs_1_Downs_28_we0;
output  [7:0] ShuffleConvs_1_Downs_28_d0;
input  [7:0] ShuffleConvs_1_Downs_28_q0;
output  [8:0] ShuffleConvs_1_Downs_28_address1;
output   ShuffleConvs_1_Downs_28_ce1;
output   ShuffleConvs_1_Downs_28_we1;
output  [7:0] ShuffleConvs_1_Downs_28_d1;
output  [8:0] ShuffleConvs_1_Downs_24_address0;
output   ShuffleConvs_1_Downs_24_ce0;
output   ShuffleConvs_1_Downs_24_we0;
output  [7:0] ShuffleConvs_1_Downs_24_d0;
input  [7:0] ShuffleConvs_1_Downs_24_q0;
output  [8:0] ShuffleConvs_1_Downs_24_address1;
output   ShuffleConvs_1_Downs_24_ce1;
output   ShuffleConvs_1_Downs_24_we1;
output  [7:0] ShuffleConvs_1_Downs_24_d1;
output  [8:0] ShuffleConvs_1_Downs_27_address0;
output   ShuffleConvs_1_Downs_27_ce0;
output   ShuffleConvs_1_Downs_27_we0;
output  [7:0] ShuffleConvs_1_Downs_27_d0;
input  [7:0] ShuffleConvs_1_Downs_27_q0;
output  [8:0] ShuffleConvs_1_Downs_27_address1;
output   ShuffleConvs_1_Downs_27_ce1;
output   ShuffleConvs_1_Downs_27_we1;
output  [7:0] ShuffleConvs_1_Downs_27_d1;
output  [8:0] ShuffleConvs_1_Downs_13_address0;
output   ShuffleConvs_1_Downs_13_ce0;
output   ShuffleConvs_1_Downs_13_we0;
output  [7:0] ShuffleConvs_1_Downs_13_d0;
input  [7:0] ShuffleConvs_1_Downs_13_q0;
output  [8:0] ShuffleConvs_1_Downs_13_address1;
output   ShuffleConvs_1_Downs_13_ce1;
output   ShuffleConvs_1_Downs_13_we1;
output  [7:0] ShuffleConvs_1_Downs_13_d1;
output  [8:0] ShuffleConvs_1_Downs_26_address0;
output   ShuffleConvs_1_Downs_26_ce0;
output   ShuffleConvs_1_Downs_26_we0;
output  [7:0] ShuffleConvs_1_Downs_26_d0;
input  [7:0] ShuffleConvs_1_Downs_26_q0;
output  [8:0] ShuffleConvs_1_Downs_26_address1;
output   ShuffleConvs_1_Downs_26_ce1;
output   ShuffleConvs_1_Downs_26_we1;
output  [7:0] ShuffleConvs_1_Downs_26_d1;
output  [8:0] ShuffleConvs_1_Downs_4_address0;
output   ShuffleConvs_1_Downs_4_ce0;
output   ShuffleConvs_1_Downs_4_we0;
output  [7:0] ShuffleConvs_1_Downs_4_d0;
input  [7:0] ShuffleConvs_1_Downs_4_q0;
output  [8:0] ShuffleConvs_1_Downs_4_address1;
output   ShuffleConvs_1_Downs_4_ce1;
output   ShuffleConvs_1_Downs_4_we1;
output  [7:0] ShuffleConvs_1_Downs_4_d1;
output  [8:0] ShuffleConvs_1_Downs_25_address0;
output   ShuffleConvs_1_Downs_25_ce0;
output   ShuffleConvs_1_Downs_25_we0;
output  [7:0] ShuffleConvs_1_Downs_25_d0;
input  [7:0] ShuffleConvs_1_Downs_25_q0;
output  [8:0] ShuffleConvs_1_Downs_25_address1;
output   ShuffleConvs_1_Downs_25_ce1;
output   ShuffleConvs_1_Downs_25_we1;
output  [7:0] ShuffleConvs_1_Downs_25_d1;
output  [8:0] ShuffleConvs_1_Downs_3_address0;
output   ShuffleConvs_1_Downs_3_ce0;
output   ShuffleConvs_1_Downs_3_we0;
output  [7:0] ShuffleConvs_1_Downs_3_d0;
input  [7:0] ShuffleConvs_1_Downs_3_q0;
output  [8:0] ShuffleConvs_1_Downs_3_address1;
output   ShuffleConvs_1_Downs_3_ce1;
output   ShuffleConvs_1_Downs_3_we1;
output  [7:0] ShuffleConvs_1_Downs_3_d1;
output  [8:0] ShuffleConvs_1_Downs_23_address0;
output   ShuffleConvs_1_Downs_23_ce0;
output   ShuffleConvs_1_Downs_23_we0;
output  [7:0] ShuffleConvs_1_Downs_23_d0;
input  [7:0] ShuffleConvs_1_Downs_23_q0;
output  [8:0] ShuffleConvs_1_Downs_23_address1;
output   ShuffleConvs_1_Downs_23_ce1;
output   ShuffleConvs_1_Downs_23_we1;
output  [7:0] ShuffleConvs_1_Downs_23_d1;
output  [8:0] ShuffleConvs_1_Downs_2_address0;
output   ShuffleConvs_1_Downs_2_ce0;
output   ShuffleConvs_1_Downs_2_we0;
output  [7:0] ShuffleConvs_1_Downs_2_d0;
input  [7:0] ShuffleConvs_1_Downs_2_q0;
output  [8:0] ShuffleConvs_1_Downs_2_address1;
output   ShuffleConvs_1_Downs_2_ce1;
output   ShuffleConvs_1_Downs_2_we1;
output  [7:0] ShuffleConvs_1_Downs_2_d1;
output  [8:0] ShuffleConvs_1_Downs_22_address0;
output   ShuffleConvs_1_Downs_22_ce0;
output   ShuffleConvs_1_Downs_22_we0;
output  [7:0] ShuffleConvs_1_Downs_22_d0;
input  [7:0] ShuffleConvs_1_Downs_22_q0;
output  [8:0] ShuffleConvs_1_Downs_22_address1;
output   ShuffleConvs_1_Downs_22_ce1;
output   ShuffleConvs_1_Downs_22_we1;
output  [7:0] ShuffleConvs_1_Downs_22_d1;
output  [8:0] ShuffleConvs_1_Downs_1_address0;
output   ShuffleConvs_1_Downs_1_ce0;
output   ShuffleConvs_1_Downs_1_we0;
output  [7:0] ShuffleConvs_1_Downs_1_d0;
input  [7:0] ShuffleConvs_1_Downs_1_q0;
output  [8:0] ShuffleConvs_1_Downs_1_address1;
output   ShuffleConvs_1_Downs_1_ce1;
output   ShuffleConvs_1_Downs_1_we1;
output  [7:0] ShuffleConvs_1_Downs_1_d1;
output  [8:0] ShuffleConvs_1_Downs_21_address0;
output   ShuffleConvs_1_Downs_21_ce0;
output   ShuffleConvs_1_Downs_21_we0;
output  [7:0] ShuffleConvs_1_Downs_21_d0;
input  [7:0] ShuffleConvs_1_Downs_21_q0;
output  [8:0] ShuffleConvs_1_Downs_21_address1;
output   ShuffleConvs_1_Downs_21_ce1;
output   ShuffleConvs_1_Downs_21_we1;
output  [7:0] ShuffleConvs_1_Downs_21_d1;
output  [8:0] ShuffleConvs_1_Downs_address0;
output   ShuffleConvs_1_Downs_ce0;
output   ShuffleConvs_1_Downs_we0;
output  [7:0] ShuffleConvs_1_Downs_d0;
input  [7:0] ShuffleConvs_1_Downs_q0;
output  [8:0] ShuffleConvs_1_Downs_address1;
output   ShuffleConvs_1_Downs_ce1;
output   ShuffleConvs_1_Downs_we1;
output  [7:0] ShuffleConvs_1_Downs_d1;
output  [8:0] ShuffleConvs_1_Downs_20_address0;
output   ShuffleConvs_1_Downs_20_ce0;
output   ShuffleConvs_1_Downs_20_we0;
output  [7:0] ShuffleConvs_1_Downs_20_d0;
input  [7:0] ShuffleConvs_1_Downs_20_q0;
output  [8:0] ShuffleConvs_1_Downs_20_address1;
output   ShuffleConvs_1_Downs_20_ce1;
output   ShuffleConvs_1_Downs_20_we1;
output  [7:0] ShuffleConvs_1_Downs_20_d1;
output  [8:0] ShuffleConvs_1_Downs_45_address0;
output   ShuffleConvs_1_Downs_45_ce0;
output   ShuffleConvs_1_Downs_45_we0;
output  [7:0] ShuffleConvs_1_Downs_45_d0;
input  [7:0] ShuffleConvs_1_Downs_45_q0;
output  [8:0] ShuffleConvs_1_Downs_45_address1;
output   ShuffleConvs_1_Downs_45_ce1;
output   ShuffleConvs_1_Downs_45_we1;
output  [7:0] ShuffleConvs_1_Downs_45_d1;
output  [8:0] ShuffleConvs_1_Downs_19_address0;
output   ShuffleConvs_1_Downs_19_ce0;
output   ShuffleConvs_1_Downs_19_we0;
output  [7:0] ShuffleConvs_1_Downs_19_d0;
input  [7:0] ShuffleConvs_1_Downs_19_q0;
output  [8:0] ShuffleConvs_1_Downs_19_address1;
output   ShuffleConvs_1_Downs_19_ce1;
output   ShuffleConvs_1_Downs_19_we1;
output  [7:0] ShuffleConvs_1_Downs_19_d1;
output  [8:0] ShuffleConvs_1_Downs_44_address0;
output   ShuffleConvs_1_Downs_44_ce0;
output   ShuffleConvs_1_Downs_44_we0;
output  [7:0] ShuffleConvs_1_Downs_44_d0;
input  [7:0] ShuffleConvs_1_Downs_44_q0;
output  [8:0] ShuffleConvs_1_Downs_44_address1;
output   ShuffleConvs_1_Downs_44_ce1;
output   ShuffleConvs_1_Downs_44_we1;
output  [7:0] ShuffleConvs_1_Downs_44_d1;
output  [8:0] ShuffleConvs_1_Downs_18_address0;
output   ShuffleConvs_1_Downs_18_ce0;
output   ShuffleConvs_1_Downs_18_we0;
output  [7:0] ShuffleConvs_1_Downs_18_d0;
input  [7:0] ShuffleConvs_1_Downs_18_q0;
output  [8:0] ShuffleConvs_1_Downs_18_address1;
output   ShuffleConvs_1_Downs_18_ce1;
output   ShuffleConvs_1_Downs_18_we1;
output  [7:0] ShuffleConvs_1_Downs_18_d1;
output  [8:0] ShuffleConvs_1_Downs_43_address0;
output   ShuffleConvs_1_Downs_43_ce0;
output   ShuffleConvs_1_Downs_43_we0;
output  [7:0] ShuffleConvs_1_Downs_43_d0;
input  [7:0] ShuffleConvs_1_Downs_43_q0;
output  [8:0] ShuffleConvs_1_Downs_43_address1;
output   ShuffleConvs_1_Downs_43_ce1;
output   ShuffleConvs_1_Downs_43_we1;
output  [7:0] ShuffleConvs_1_Downs_43_d1;
output  [8:0] ShuffleConvs_1_Downs_17_address0;
output   ShuffleConvs_1_Downs_17_ce0;
output   ShuffleConvs_1_Downs_17_we0;
output  [7:0] ShuffleConvs_1_Downs_17_d0;
input  [7:0] ShuffleConvs_1_Downs_17_q0;
output  [8:0] ShuffleConvs_1_Downs_17_address1;
output   ShuffleConvs_1_Downs_17_ce1;
output   ShuffleConvs_1_Downs_17_we1;
output  [7:0] ShuffleConvs_1_Downs_17_d1;
output  [8:0] ShuffleConvs_1_Downs_42_address0;
output   ShuffleConvs_1_Downs_42_ce0;
output   ShuffleConvs_1_Downs_42_we0;
output  [7:0] ShuffleConvs_1_Downs_42_d0;
input  [7:0] ShuffleConvs_1_Downs_42_q0;
output  [8:0] ShuffleConvs_1_Downs_42_address1;
output   ShuffleConvs_1_Downs_42_ce1;
output   ShuffleConvs_1_Downs_42_we1;
output  [7:0] ShuffleConvs_1_Downs_42_d1;
output  [8:0] ShuffleConvs_1_Downs_16_address0;
output   ShuffleConvs_1_Downs_16_ce0;
output   ShuffleConvs_1_Downs_16_we0;
output  [7:0] ShuffleConvs_1_Downs_16_d0;
input  [7:0] ShuffleConvs_1_Downs_16_q0;
output  [8:0] ShuffleConvs_1_Downs_16_address1;
output   ShuffleConvs_1_Downs_16_ce1;
output   ShuffleConvs_1_Downs_16_we1;
output  [7:0] ShuffleConvs_1_Downs_16_d1;
output  [8:0] ShuffleConvs_1_Downs_41_address0;
output   ShuffleConvs_1_Downs_41_ce0;
output   ShuffleConvs_1_Downs_41_we0;
output  [7:0] ShuffleConvs_1_Downs_41_d0;
input  [7:0] ShuffleConvs_1_Downs_41_q0;
output  [8:0] ShuffleConvs_1_Downs_41_address1;
output   ShuffleConvs_1_Downs_41_ce1;
output   ShuffleConvs_1_Downs_41_we1;
output  [7:0] ShuffleConvs_1_Downs_41_d1;
output  [8:0] ShuffleConvs_1_Downs_15_address0;
output   ShuffleConvs_1_Downs_15_ce0;
output   ShuffleConvs_1_Downs_15_we0;
output  [7:0] ShuffleConvs_1_Downs_15_d0;
input  [7:0] ShuffleConvs_1_Downs_15_q0;
output  [8:0] ShuffleConvs_1_Downs_15_address1;
output   ShuffleConvs_1_Downs_15_ce1;
output   ShuffleConvs_1_Downs_15_we1;
output  [7:0] ShuffleConvs_1_Downs_15_d1;
output  [8:0] ShuffleConvs_1_Downs_40_address0;
output   ShuffleConvs_1_Downs_40_ce0;
output   ShuffleConvs_1_Downs_40_we0;
output  [7:0] ShuffleConvs_1_Downs_40_d0;
input  [7:0] ShuffleConvs_1_Downs_40_q0;
output  [8:0] ShuffleConvs_1_Downs_40_address1;
output   ShuffleConvs_1_Downs_40_ce1;
output   ShuffleConvs_1_Downs_40_we1;
output  [7:0] ShuffleConvs_1_Downs_40_d1;
output  [8:0] ShuffleConvs_1_Downs_14_address0;
output   ShuffleConvs_1_Downs_14_ce0;
output   ShuffleConvs_1_Downs_14_we0;
output  [7:0] ShuffleConvs_1_Downs_14_d0;
input  [7:0] ShuffleConvs_1_Downs_14_q0;
output  [8:0] ShuffleConvs_1_Downs_14_address1;
output   ShuffleConvs_1_Downs_14_ce1;
output   ShuffleConvs_1_Downs_14_we1;
output  [7:0] ShuffleConvs_1_Downs_14_d1;
output  [8:0] ShuffleConvs_1_Downs_39_address0;
output   ShuffleConvs_1_Downs_39_ce0;
output   ShuffleConvs_1_Downs_39_we0;
output  [7:0] ShuffleConvs_1_Downs_39_d0;
input  [7:0] ShuffleConvs_1_Downs_39_q0;
output  [8:0] ShuffleConvs_1_Downs_39_address1;
output   ShuffleConvs_1_Downs_39_ce1;
output   ShuffleConvs_1_Downs_39_we1;
output  [7:0] ShuffleConvs_1_Downs_39_d1;
output  [8:0] ShuffleConvs_1_Downs_12_address0;
output   ShuffleConvs_1_Downs_12_ce0;
output   ShuffleConvs_1_Downs_12_we0;
output  [7:0] ShuffleConvs_1_Downs_12_d0;
input  [7:0] ShuffleConvs_1_Downs_12_q0;
output  [8:0] ShuffleConvs_1_Downs_12_address1;
output   ShuffleConvs_1_Downs_12_ce1;
output   ShuffleConvs_1_Downs_12_we1;
output  [7:0] ShuffleConvs_1_Downs_12_d1;
output  [8:0] ShuffleConvs_1_Downs_38_address0;
output   ShuffleConvs_1_Downs_38_ce0;
output   ShuffleConvs_1_Downs_38_we0;
output  [7:0] ShuffleConvs_1_Downs_38_d0;
input  [7:0] ShuffleConvs_1_Downs_38_q0;
output  [8:0] ShuffleConvs_1_Downs_38_address1;
output   ShuffleConvs_1_Downs_38_ce1;
output   ShuffleConvs_1_Downs_38_we1;
output  [7:0] ShuffleConvs_1_Downs_38_d1;
output  [8:0] ShuffleConvs_1_Downs_11_address0;
output   ShuffleConvs_1_Downs_11_ce0;
output   ShuffleConvs_1_Downs_11_we0;
output  [7:0] ShuffleConvs_1_Downs_11_d0;
input  [7:0] ShuffleConvs_1_Downs_11_q0;
output  [8:0] ShuffleConvs_1_Downs_11_address1;
output   ShuffleConvs_1_Downs_11_ce1;
output   ShuffleConvs_1_Downs_11_we1;
output  [7:0] ShuffleConvs_1_Downs_11_d1;
output  [8:0] ShuffleConvs_1_Downs_37_address0;
output   ShuffleConvs_1_Downs_37_ce0;
output   ShuffleConvs_1_Downs_37_we0;
output  [7:0] ShuffleConvs_1_Downs_37_d0;
input  [7:0] ShuffleConvs_1_Downs_37_q0;
output  [8:0] ShuffleConvs_1_Downs_37_address1;
output   ShuffleConvs_1_Downs_37_ce1;
output   ShuffleConvs_1_Downs_37_we1;
output  [7:0] ShuffleConvs_1_Downs_37_d1;
output  [8:0] ShuffleConvs_1_Downs_10_address0;
output   ShuffleConvs_1_Downs_10_ce0;
output   ShuffleConvs_1_Downs_10_we0;
output  [7:0] ShuffleConvs_1_Downs_10_d0;
input  [7:0] ShuffleConvs_1_Downs_10_q0;
output  [8:0] ShuffleConvs_1_Downs_10_address1;
output   ShuffleConvs_1_Downs_10_ce1;
output   ShuffleConvs_1_Downs_10_we1;
output  [7:0] ShuffleConvs_1_Downs_10_d1;
output  [8:0] ShuffleConvs_1_Downs_36_address0;
output   ShuffleConvs_1_Downs_36_ce0;
output   ShuffleConvs_1_Downs_36_we0;
output  [7:0] ShuffleConvs_1_Downs_36_d0;
input  [7:0] ShuffleConvs_1_Downs_36_q0;
output  [8:0] ShuffleConvs_1_Downs_36_address1;
output   ShuffleConvs_1_Downs_36_ce1;
output   ShuffleConvs_1_Downs_36_we1;
output  [7:0] ShuffleConvs_1_Downs_36_d1;
output  [8:0] ShuffleConvs_1_Downs_9_address0;
output   ShuffleConvs_1_Downs_9_ce0;
output   ShuffleConvs_1_Downs_9_we0;
output  [7:0] ShuffleConvs_1_Downs_9_d0;
input  [7:0] ShuffleConvs_1_Downs_9_q0;
output  [8:0] ShuffleConvs_1_Downs_9_address1;
output   ShuffleConvs_1_Downs_9_ce1;
output   ShuffleConvs_1_Downs_9_we1;
output  [7:0] ShuffleConvs_1_Downs_9_d1;
output  [8:0] ShuffleConvs_1_Downs_34_address0;
output   ShuffleConvs_1_Downs_34_ce0;
output   ShuffleConvs_1_Downs_34_we0;
output  [7:0] ShuffleConvs_1_Downs_34_d0;
input  [7:0] ShuffleConvs_1_Downs_34_q0;
output  [8:0] ShuffleConvs_1_Downs_34_address1;
output   ShuffleConvs_1_Downs_34_ce1;
output   ShuffleConvs_1_Downs_34_we1;
output  [7:0] ShuffleConvs_1_Downs_34_d1;
output  [8:0] ShuffleConvs_1_Downs_8_address0;
output   ShuffleConvs_1_Downs_8_ce0;
output   ShuffleConvs_1_Downs_8_we0;
output  [7:0] ShuffleConvs_1_Downs_8_d0;
input  [7:0] ShuffleConvs_1_Downs_8_q0;
output  [8:0] ShuffleConvs_1_Downs_8_address1;
output   ShuffleConvs_1_Downs_8_ce1;
output   ShuffleConvs_1_Downs_8_we1;
output  [7:0] ShuffleConvs_1_Downs_8_d1;
output  [8:0] ShuffleConvs_1_Downs_33_address0;
output   ShuffleConvs_1_Downs_33_ce0;
output   ShuffleConvs_1_Downs_33_we0;
output  [7:0] ShuffleConvs_1_Downs_33_d0;
input  [7:0] ShuffleConvs_1_Downs_33_q0;
output  [8:0] ShuffleConvs_1_Downs_33_address1;
output   ShuffleConvs_1_Downs_33_ce1;
output   ShuffleConvs_1_Downs_33_we1;
output  [7:0] ShuffleConvs_1_Downs_33_d1;
output  [8:0] ShuffleConvs_1_Downs_7_address0;
output   ShuffleConvs_1_Downs_7_ce0;
output   ShuffleConvs_1_Downs_7_we0;
output  [7:0] ShuffleConvs_1_Downs_7_d0;
input  [7:0] ShuffleConvs_1_Downs_7_q0;
output  [8:0] ShuffleConvs_1_Downs_7_address1;
output   ShuffleConvs_1_Downs_7_ce1;
output   ShuffleConvs_1_Downs_7_we1;
output  [7:0] ShuffleConvs_1_Downs_7_d1;
output  [8:0] ShuffleConvs_1_Downs_32_address0;
output   ShuffleConvs_1_Downs_32_ce0;
output   ShuffleConvs_1_Downs_32_we0;
output  [7:0] ShuffleConvs_1_Downs_32_d0;
input  [7:0] ShuffleConvs_1_Downs_32_q0;
output  [8:0] ShuffleConvs_1_Downs_32_address1;
output   ShuffleConvs_1_Downs_32_ce1;
output   ShuffleConvs_1_Downs_32_we1;
output  [7:0] ShuffleConvs_1_Downs_32_d1;
output  [8:0] ShuffleConvs_1_Downs_6_address0;
output   ShuffleConvs_1_Downs_6_ce0;
output   ShuffleConvs_1_Downs_6_we0;
output  [7:0] ShuffleConvs_1_Downs_6_d0;
input  [7:0] ShuffleConvs_1_Downs_6_q0;
output  [8:0] ShuffleConvs_1_Downs_6_address1;
output   ShuffleConvs_1_Downs_6_ce1;
output   ShuffleConvs_1_Downs_6_we1;
output  [7:0] ShuffleConvs_1_Downs_6_d1;
output  [8:0] ShuffleConvs_1_Downs_31_address0;
output   ShuffleConvs_1_Downs_31_ce0;
output   ShuffleConvs_1_Downs_31_we0;
output  [7:0] ShuffleConvs_1_Downs_31_d0;
input  [7:0] ShuffleConvs_1_Downs_31_q0;
output  [8:0] ShuffleConvs_1_Downs_31_address1;
output   ShuffleConvs_1_Downs_31_ce1;
output   ShuffleConvs_1_Downs_31_we1;
output  [7:0] ShuffleConvs_1_Downs_31_d1;
output  [8:0] ShuffleConvs_1_Downs_5_address0;
output   ShuffleConvs_1_Downs_5_ce0;
output   ShuffleConvs_1_Downs_5_we0;
output  [7:0] ShuffleConvs_1_Downs_5_d0;
input  [7:0] ShuffleConvs_1_Downs_5_q0;
output  [8:0] ShuffleConvs_1_Downs_5_address1;
output   ShuffleConvs_1_Downs_5_ce1;
output   ShuffleConvs_1_Downs_5_we1;
output  [7:0] ShuffleConvs_1_Downs_5_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_V_address0;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg weight_24_V_ce0;
reg weight_25_V_ce0;
reg weight_26_V_ce0;
reg weight_27_V_ce0;
reg weight_28_V_ce0;
reg weight_29_V_ce0;
reg weight_30_V_ce0;
reg weight_31_V_ce0;
reg weight_32_V_ce0;
reg weight_33_V_ce0;
reg weight_34_V_ce0;
reg weight_35_V_ce0;
reg weight_36_V_ce0;
reg weight_37_V_ce0;
reg weight_38_V_ce0;
reg weight_39_V_ce0;
reg weight_40_V_ce0;
reg weight_41_V_ce0;
reg weight_42_V_ce0;
reg weight_43_V_ce0;
reg weight_44_V_ce0;
reg weight_45_V_ce0;
reg weight_46_V_ce0;
reg weight_47_V_ce0;
reg bias_V_ce0;
reg[8:0] ShuffleConvs_1_Downs_47_address0;
reg ShuffleConvs_1_Downs_47_ce0;
reg ShuffleConvs_1_Downs_47_we0;
reg[7:0] ShuffleConvs_1_Downs_47_d0;
reg ShuffleConvs_1_Downs_47_ce1;
reg ShuffleConvs_1_Downs_47_we1;
reg[8:0] ShuffleConvs_1_Downs_30_address0;
reg ShuffleConvs_1_Downs_30_ce0;
reg ShuffleConvs_1_Downs_30_we0;
reg[7:0] ShuffleConvs_1_Downs_30_d0;
reg ShuffleConvs_1_Downs_30_ce1;
reg ShuffleConvs_1_Downs_30_we1;
reg[8:0] ShuffleConvs_1_Downs_46_address0;
reg ShuffleConvs_1_Downs_46_ce0;
reg ShuffleConvs_1_Downs_46_we0;
reg[7:0] ShuffleConvs_1_Downs_46_d0;
reg ShuffleConvs_1_Downs_46_ce1;
reg ShuffleConvs_1_Downs_46_we1;
reg[8:0] ShuffleConvs_1_Downs_29_address0;
reg ShuffleConvs_1_Downs_29_ce0;
reg ShuffleConvs_1_Downs_29_we0;
reg[7:0] ShuffleConvs_1_Downs_29_d0;
reg ShuffleConvs_1_Downs_29_ce1;
reg ShuffleConvs_1_Downs_29_we1;
reg[8:0] ShuffleConvs_1_Downs_35_address0;
reg ShuffleConvs_1_Downs_35_ce0;
reg ShuffleConvs_1_Downs_35_we0;
reg[7:0] ShuffleConvs_1_Downs_35_d0;
reg ShuffleConvs_1_Downs_35_ce1;
reg ShuffleConvs_1_Downs_35_we1;
reg[8:0] ShuffleConvs_1_Downs_28_address0;
reg ShuffleConvs_1_Downs_28_ce0;
reg ShuffleConvs_1_Downs_28_we0;
reg[7:0] ShuffleConvs_1_Downs_28_d0;
reg ShuffleConvs_1_Downs_28_ce1;
reg ShuffleConvs_1_Downs_28_we1;
reg[8:0] ShuffleConvs_1_Downs_24_address0;
reg ShuffleConvs_1_Downs_24_ce0;
reg ShuffleConvs_1_Downs_24_we0;
reg[7:0] ShuffleConvs_1_Downs_24_d0;
reg ShuffleConvs_1_Downs_24_ce1;
reg ShuffleConvs_1_Downs_24_we1;
reg[8:0] ShuffleConvs_1_Downs_27_address0;
reg ShuffleConvs_1_Downs_27_ce0;
reg ShuffleConvs_1_Downs_27_we0;
reg[7:0] ShuffleConvs_1_Downs_27_d0;
reg ShuffleConvs_1_Downs_27_ce1;
reg ShuffleConvs_1_Downs_27_we1;
reg[8:0] ShuffleConvs_1_Downs_13_address0;
reg ShuffleConvs_1_Downs_13_ce0;
reg ShuffleConvs_1_Downs_13_we0;
reg[7:0] ShuffleConvs_1_Downs_13_d0;
reg ShuffleConvs_1_Downs_13_ce1;
reg ShuffleConvs_1_Downs_13_we1;
reg[8:0] ShuffleConvs_1_Downs_26_address0;
reg ShuffleConvs_1_Downs_26_ce0;
reg ShuffleConvs_1_Downs_26_we0;
reg[7:0] ShuffleConvs_1_Downs_26_d0;
reg ShuffleConvs_1_Downs_26_ce1;
reg ShuffleConvs_1_Downs_26_we1;
reg[8:0] ShuffleConvs_1_Downs_4_address0;
reg ShuffleConvs_1_Downs_4_ce0;
reg ShuffleConvs_1_Downs_4_we0;
reg[7:0] ShuffleConvs_1_Downs_4_d0;
reg ShuffleConvs_1_Downs_4_ce1;
reg ShuffleConvs_1_Downs_4_we1;
reg[8:0] ShuffleConvs_1_Downs_25_address0;
reg ShuffleConvs_1_Downs_25_ce0;
reg ShuffleConvs_1_Downs_25_we0;
reg[7:0] ShuffleConvs_1_Downs_25_d0;
reg ShuffleConvs_1_Downs_25_ce1;
reg ShuffleConvs_1_Downs_25_we1;
reg[8:0] ShuffleConvs_1_Downs_3_address0;
reg ShuffleConvs_1_Downs_3_ce0;
reg ShuffleConvs_1_Downs_3_we0;
reg[7:0] ShuffleConvs_1_Downs_3_d0;
reg ShuffleConvs_1_Downs_3_ce1;
reg ShuffleConvs_1_Downs_3_we1;
reg[8:0] ShuffleConvs_1_Downs_23_address0;
reg ShuffleConvs_1_Downs_23_ce0;
reg ShuffleConvs_1_Downs_23_we0;
reg[7:0] ShuffleConvs_1_Downs_23_d0;
reg ShuffleConvs_1_Downs_23_ce1;
reg ShuffleConvs_1_Downs_23_we1;
reg[8:0] ShuffleConvs_1_Downs_2_address0;
reg ShuffleConvs_1_Downs_2_ce0;
reg ShuffleConvs_1_Downs_2_we0;
reg[7:0] ShuffleConvs_1_Downs_2_d0;
reg ShuffleConvs_1_Downs_2_ce1;
reg ShuffleConvs_1_Downs_2_we1;
reg[8:0] ShuffleConvs_1_Downs_22_address0;
reg ShuffleConvs_1_Downs_22_ce0;
reg ShuffleConvs_1_Downs_22_we0;
reg[7:0] ShuffleConvs_1_Downs_22_d0;
reg ShuffleConvs_1_Downs_22_ce1;
reg ShuffleConvs_1_Downs_22_we1;
reg[8:0] ShuffleConvs_1_Downs_1_address0;
reg ShuffleConvs_1_Downs_1_ce0;
reg ShuffleConvs_1_Downs_1_we0;
reg[7:0] ShuffleConvs_1_Downs_1_d0;
reg ShuffleConvs_1_Downs_1_ce1;
reg ShuffleConvs_1_Downs_1_we1;
reg[8:0] ShuffleConvs_1_Downs_21_address0;
reg ShuffleConvs_1_Downs_21_ce0;
reg ShuffleConvs_1_Downs_21_we0;
reg[7:0] ShuffleConvs_1_Downs_21_d0;
reg ShuffleConvs_1_Downs_21_ce1;
reg ShuffleConvs_1_Downs_21_we1;
reg[8:0] ShuffleConvs_1_Downs_address0;
reg ShuffleConvs_1_Downs_ce0;
reg ShuffleConvs_1_Downs_we0;
reg[7:0] ShuffleConvs_1_Downs_d0;
reg ShuffleConvs_1_Downs_ce1;
reg ShuffleConvs_1_Downs_we1;
reg[8:0] ShuffleConvs_1_Downs_20_address0;
reg ShuffleConvs_1_Downs_20_ce0;
reg ShuffleConvs_1_Downs_20_we0;
reg[7:0] ShuffleConvs_1_Downs_20_d0;
reg ShuffleConvs_1_Downs_20_ce1;
reg ShuffleConvs_1_Downs_20_we1;
reg[8:0] ShuffleConvs_1_Downs_45_address0;
reg ShuffleConvs_1_Downs_45_ce0;
reg ShuffleConvs_1_Downs_45_we0;
reg[7:0] ShuffleConvs_1_Downs_45_d0;
reg ShuffleConvs_1_Downs_45_ce1;
reg ShuffleConvs_1_Downs_45_we1;
reg[8:0] ShuffleConvs_1_Downs_19_address0;
reg ShuffleConvs_1_Downs_19_ce0;
reg ShuffleConvs_1_Downs_19_we0;
reg[7:0] ShuffleConvs_1_Downs_19_d0;
reg ShuffleConvs_1_Downs_19_ce1;
reg ShuffleConvs_1_Downs_19_we1;
reg[8:0] ShuffleConvs_1_Downs_44_address0;
reg ShuffleConvs_1_Downs_44_ce0;
reg ShuffleConvs_1_Downs_44_we0;
reg[7:0] ShuffleConvs_1_Downs_44_d0;
reg ShuffleConvs_1_Downs_44_ce1;
reg ShuffleConvs_1_Downs_44_we1;
reg[8:0] ShuffleConvs_1_Downs_18_address0;
reg ShuffleConvs_1_Downs_18_ce0;
reg ShuffleConvs_1_Downs_18_we0;
reg[7:0] ShuffleConvs_1_Downs_18_d0;
reg ShuffleConvs_1_Downs_18_ce1;
reg ShuffleConvs_1_Downs_18_we1;
reg[8:0] ShuffleConvs_1_Downs_43_address0;
reg ShuffleConvs_1_Downs_43_ce0;
reg ShuffleConvs_1_Downs_43_we0;
reg[7:0] ShuffleConvs_1_Downs_43_d0;
reg ShuffleConvs_1_Downs_43_ce1;
reg ShuffleConvs_1_Downs_43_we1;
reg[8:0] ShuffleConvs_1_Downs_17_address0;
reg ShuffleConvs_1_Downs_17_ce0;
reg ShuffleConvs_1_Downs_17_we0;
reg[7:0] ShuffleConvs_1_Downs_17_d0;
reg ShuffleConvs_1_Downs_17_ce1;
reg ShuffleConvs_1_Downs_17_we1;
reg[8:0] ShuffleConvs_1_Downs_42_address0;
reg ShuffleConvs_1_Downs_42_ce0;
reg ShuffleConvs_1_Downs_42_we0;
reg[7:0] ShuffleConvs_1_Downs_42_d0;
reg ShuffleConvs_1_Downs_42_ce1;
reg ShuffleConvs_1_Downs_42_we1;
reg[8:0] ShuffleConvs_1_Downs_16_address0;
reg ShuffleConvs_1_Downs_16_ce0;
reg ShuffleConvs_1_Downs_16_we0;
reg[7:0] ShuffleConvs_1_Downs_16_d0;
reg ShuffleConvs_1_Downs_16_ce1;
reg ShuffleConvs_1_Downs_16_we1;
reg[8:0] ShuffleConvs_1_Downs_41_address0;
reg ShuffleConvs_1_Downs_41_ce0;
reg ShuffleConvs_1_Downs_41_we0;
reg[7:0] ShuffleConvs_1_Downs_41_d0;
reg ShuffleConvs_1_Downs_41_ce1;
reg ShuffleConvs_1_Downs_41_we1;
reg[8:0] ShuffleConvs_1_Downs_15_address0;
reg ShuffleConvs_1_Downs_15_ce0;
reg ShuffleConvs_1_Downs_15_we0;
reg[7:0] ShuffleConvs_1_Downs_15_d0;
reg ShuffleConvs_1_Downs_15_ce1;
reg ShuffleConvs_1_Downs_15_we1;
reg[8:0] ShuffleConvs_1_Downs_40_address0;
reg ShuffleConvs_1_Downs_40_ce0;
reg ShuffleConvs_1_Downs_40_we0;
reg[7:0] ShuffleConvs_1_Downs_40_d0;
reg ShuffleConvs_1_Downs_40_ce1;
reg ShuffleConvs_1_Downs_40_we1;
reg[8:0] ShuffleConvs_1_Downs_14_address0;
reg ShuffleConvs_1_Downs_14_ce0;
reg ShuffleConvs_1_Downs_14_we0;
reg[7:0] ShuffleConvs_1_Downs_14_d0;
reg ShuffleConvs_1_Downs_14_ce1;
reg ShuffleConvs_1_Downs_14_we1;
reg[8:0] ShuffleConvs_1_Downs_39_address0;
reg ShuffleConvs_1_Downs_39_ce0;
reg ShuffleConvs_1_Downs_39_we0;
reg[7:0] ShuffleConvs_1_Downs_39_d0;
reg ShuffleConvs_1_Downs_39_ce1;
reg ShuffleConvs_1_Downs_39_we1;
reg[8:0] ShuffleConvs_1_Downs_12_address0;
reg ShuffleConvs_1_Downs_12_ce0;
reg ShuffleConvs_1_Downs_12_we0;
reg[7:0] ShuffleConvs_1_Downs_12_d0;
reg ShuffleConvs_1_Downs_12_ce1;
reg ShuffleConvs_1_Downs_12_we1;
reg[8:0] ShuffleConvs_1_Downs_38_address0;
reg ShuffleConvs_1_Downs_38_ce0;
reg ShuffleConvs_1_Downs_38_we0;
reg[7:0] ShuffleConvs_1_Downs_38_d0;
reg ShuffleConvs_1_Downs_38_ce1;
reg ShuffleConvs_1_Downs_38_we1;
reg[8:0] ShuffleConvs_1_Downs_11_address0;
reg ShuffleConvs_1_Downs_11_ce0;
reg ShuffleConvs_1_Downs_11_we0;
reg[7:0] ShuffleConvs_1_Downs_11_d0;
reg ShuffleConvs_1_Downs_11_ce1;
reg ShuffleConvs_1_Downs_11_we1;
reg[8:0] ShuffleConvs_1_Downs_37_address0;
reg ShuffleConvs_1_Downs_37_ce0;
reg ShuffleConvs_1_Downs_37_we0;
reg[7:0] ShuffleConvs_1_Downs_37_d0;
reg ShuffleConvs_1_Downs_37_ce1;
reg ShuffleConvs_1_Downs_37_we1;
reg[8:0] ShuffleConvs_1_Downs_10_address0;
reg ShuffleConvs_1_Downs_10_ce0;
reg ShuffleConvs_1_Downs_10_we0;
reg[7:0] ShuffleConvs_1_Downs_10_d0;
reg ShuffleConvs_1_Downs_10_ce1;
reg ShuffleConvs_1_Downs_10_we1;
reg[8:0] ShuffleConvs_1_Downs_36_address0;
reg ShuffleConvs_1_Downs_36_ce0;
reg ShuffleConvs_1_Downs_36_we0;
reg[7:0] ShuffleConvs_1_Downs_36_d0;
reg ShuffleConvs_1_Downs_36_ce1;
reg ShuffleConvs_1_Downs_36_we1;
reg[8:0] ShuffleConvs_1_Downs_9_address0;
reg ShuffleConvs_1_Downs_9_ce0;
reg ShuffleConvs_1_Downs_9_we0;
reg[7:0] ShuffleConvs_1_Downs_9_d0;
reg ShuffleConvs_1_Downs_9_ce1;
reg ShuffleConvs_1_Downs_9_we1;
reg[8:0] ShuffleConvs_1_Downs_34_address0;
reg ShuffleConvs_1_Downs_34_ce0;
reg ShuffleConvs_1_Downs_34_we0;
reg[7:0] ShuffleConvs_1_Downs_34_d0;
reg ShuffleConvs_1_Downs_34_ce1;
reg ShuffleConvs_1_Downs_34_we1;
reg[8:0] ShuffleConvs_1_Downs_8_address0;
reg ShuffleConvs_1_Downs_8_ce0;
reg ShuffleConvs_1_Downs_8_we0;
reg[7:0] ShuffleConvs_1_Downs_8_d0;
reg ShuffleConvs_1_Downs_8_ce1;
reg ShuffleConvs_1_Downs_8_we1;
reg[8:0] ShuffleConvs_1_Downs_33_address0;
reg ShuffleConvs_1_Downs_33_ce0;
reg ShuffleConvs_1_Downs_33_we0;
reg[7:0] ShuffleConvs_1_Downs_33_d0;
reg ShuffleConvs_1_Downs_33_ce1;
reg ShuffleConvs_1_Downs_33_we1;
reg[8:0] ShuffleConvs_1_Downs_7_address0;
reg ShuffleConvs_1_Downs_7_ce0;
reg ShuffleConvs_1_Downs_7_we0;
reg[7:0] ShuffleConvs_1_Downs_7_d0;
reg ShuffleConvs_1_Downs_7_ce1;
reg ShuffleConvs_1_Downs_7_we1;
reg[8:0] ShuffleConvs_1_Downs_32_address0;
reg ShuffleConvs_1_Downs_32_ce0;
reg ShuffleConvs_1_Downs_32_we0;
reg[7:0] ShuffleConvs_1_Downs_32_d0;
reg ShuffleConvs_1_Downs_32_ce1;
reg ShuffleConvs_1_Downs_32_we1;
reg[8:0] ShuffleConvs_1_Downs_6_address0;
reg ShuffleConvs_1_Downs_6_ce0;
reg ShuffleConvs_1_Downs_6_we0;
reg[7:0] ShuffleConvs_1_Downs_6_d0;
reg ShuffleConvs_1_Downs_6_ce1;
reg ShuffleConvs_1_Downs_6_we1;
reg[8:0] ShuffleConvs_1_Downs_31_address0;
reg ShuffleConvs_1_Downs_31_ce0;
reg ShuffleConvs_1_Downs_31_we0;
reg[7:0] ShuffleConvs_1_Downs_31_d0;
reg ShuffleConvs_1_Downs_31_ce1;
reg ShuffleConvs_1_Downs_31_we1;
reg[8:0] ShuffleConvs_1_Downs_5_address0;
reg ShuffleConvs_1_Downs_5_ce0;
reg ShuffleConvs_1_Downs_5_we0;
reg[7:0] ShuffleConvs_1_Downs_5_d0;
reg ShuffleConvs_1_Downs_5_ce1;
reg ShuffleConvs_1_Downs_5_we1;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten4_reg_2470;
reg   [5:0] co_reg_2481;
reg   [9:0] indvar_flatten_reg_2493;
reg   [4:0] h_reg_2504;
reg   [4:0] w_reg_2516;
reg   [13:0] indvar_flatten5_reg_2668;
reg   [5:0] co16_reg_2679;
reg   [9:0] indvar_flatten6_reg_2691;
reg   [4:0] h17_reg_2702;
reg   [4:0] w18_reg_2714;
reg   [7:0] reg_2816;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state37;
wire   [0:0] exitcond_flatten_fu_2826_p2;
reg   [0:0] exitcond_flatten_reg_4736;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_4736;
wire   [13:0] indvar_flatten_next1_fu_2832_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten8_fu_2838_p2;
reg   [0:0] exitcond_flatten8_reg_4745;
wire   [9:0] indvar_flatten_next_fu_2850_p3;
wire   [5:0] co_cast_mid2_v_fu_2871_p3;
reg   [5:0] co_cast_mid2_v_reg_4758;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] w_mid2_fu_2911_p3;
reg   [4:0] w_mid2_reg_4763;
wire   [4:0] h_cast_mid2_fu_2919_p3;
reg   [4:0] h_cast_mid2_reg_4769;
wire   [4:0] w_25_fu_3016_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [10:0] h1_cast_cast_fu_3021_p1;
reg   [10:0] h1_cast_cast_reg_4786;
wire    ap_CS_fsm_state6;
wire   [9:0] tmp_266_fu_3049_p2;
reg   [9:0] tmp_266_reg_4791;
wire   [14:0] w2_cast_cast3_fu_3061_p1;
reg   [14:0] w2_cast_cast3_reg_4799;
wire    ap_CS_fsm_state7;
reg   [8:0] ShuffleConvs_1_Downs_191_reg_4804;
reg   [8:0] ShuffleConvs_1_Downs_192_reg_4809;
reg   [8:0] ShuffleConvs_1_Downs_193_reg_4814;
reg   [8:0] ShuffleConvs_1_Downs_194_reg_4819;
reg   [8:0] ShuffleConvs_1_Downs_195_reg_4824;
reg   [8:0] ShuffleConvs_1_Downs_196_reg_4829;
reg   [8:0] ShuffleConvs_1_Downs_197_reg_4834;
reg   [8:0] ShuffleConvs_1_Downs_198_reg_4839;
reg   [8:0] ShuffleConvs_1_Downs_199_reg_4844;
reg   [8:0] ShuffleConvs_1_Downs_200_reg_4849;
reg   [8:0] ShuffleConvs_1_Downs_201_reg_4854;
reg   [8:0] ShuffleConvs_1_Downs_202_reg_4859;
wire   [4:0] h_9_fu_3096_p2;
wire   [0:0] exitcond31_fu_3090_p2;
reg   [13:0] input_V_addr_reg_4872;
wire    ap_CS_fsm_state8;
reg   [5:0] weight_0_V_addr_reg_4877;
reg   [5:0] weight_1_V_addr_reg_4882;
reg   [5:0] weight_2_V_addr_reg_4887;
reg   [5:0] weight_3_V_addr_reg_4892;
reg   [5:0] weight_4_V_addr_reg_4897;
reg   [5:0] weight_5_V_addr_reg_4902;
reg   [5:0] weight_24_V_addr_reg_4907;
reg   [5:0] weight_25_V_addr_reg_4912;
reg   [5:0] weight_26_V_addr_reg_4917;
reg   [5:0] weight_27_V_addr_reg_4922;
reg   [5:0] weight_28_V_addr_reg_4927;
reg   [5:0] weight_29_V_addr_reg_4932;
wire   [5:0] ci_9_fu_3195_p2;
reg   [5:0] ci_9_reg_4940;
wire   [4:0] w_26_fu_3201_p2;
wire   [0:0] exitcond34_fu_3189_p2;
reg   [7:0] ShuffleConvs_1_Downs_203_reg_4950;
wire    ap_CS_fsm_state13;
reg   [7:0] ShuffleConvs_1_Downs_204_reg_4955;
reg   [7:0] ShuffleConvs_1_Downs_205_reg_4960;
reg   [7:0] ShuffleConvs_1_Downs_206_reg_4965;
reg   [7:0] ShuffleConvs_1_Downs_207_reg_4970;
reg   [7:0] ShuffleConvs_1_Downs_208_reg_4975;
reg   [7:0] ShuffleConvs_1_Downs_209_reg_4980;
reg   [7:0] ShuffleConvs_1_Downs_210_reg_4985;
reg   [7:0] ShuffleConvs_1_Downs_211_reg_4990;
reg   [7:0] ShuffleConvs_1_Downs_212_reg_4995;
reg   [7:0] ShuffleConvs_1_Downs_213_reg_5000;
reg   [7:0] ShuffleConvs_1_Downs_214_reg_5005;
wire   [10:0] h4_cast_cast_fu_3375_p1;
reg   [10:0] h4_cast_cast_reg_5010;
wire    ap_CS_fsm_state15;
wire   [9:0] tmp_269_fu_3403_p2;
reg   [9:0] tmp_269_reg_5015;
wire   [14:0] w5_cast_cast3_fu_3415_p1;
reg   [14:0] w5_cast_cast3_reg_5023;
wire    ap_CS_fsm_state16;
reg   [8:0] ShuffleConvs_1_Downs_215_reg_5028;
reg   [8:0] ShuffleConvs_1_Downs_216_reg_5033;
reg   [8:0] ShuffleConvs_1_Downs_217_reg_5038;
reg   [8:0] ShuffleConvs_1_Downs_218_reg_5043;
reg   [8:0] ShuffleConvs_1_Downs_219_reg_5048;
reg   [8:0] ShuffleConvs_1_Downs_220_reg_5053;
reg   [8:0] ShuffleConvs_1_Downs_221_reg_5058;
reg   [8:0] ShuffleConvs_1_Downs_222_reg_5063;
reg   [8:0] ShuffleConvs_1_Downs_223_reg_5068;
reg   [8:0] ShuffleConvs_1_Downs_224_reg_5073;
reg   [8:0] ShuffleConvs_1_Downs_225_reg_5078;
reg   [8:0] ShuffleConvs_1_Downs_226_reg_5083;
wire   [4:0] h_1_fu_3450_p2;
wire   [0:0] exitcond33_fu_3444_p2;
reg   [13:0] input_V_addr_5_reg_5096;
wire    ap_CS_fsm_state17;
reg   [5:0] weight_6_V_addr_reg_5101;
reg   [5:0] weight_7_V_addr_reg_5106;
reg   [5:0] weight_8_V_addr_reg_5111;
reg   [5:0] weight_9_V_addr_reg_5116;
reg   [5:0] weight_10_V_addr_reg_5121;
reg   [5:0] weight_11_V_addr_reg_5126;
reg   [5:0] weight_30_V_addr_reg_5131;
reg   [5:0] weight_31_V_addr_reg_5136;
reg   [5:0] weight_32_V_addr_reg_5141;
reg   [5:0] weight_33_V_addr_reg_5146;
reg   [5:0] weight_34_V_addr_reg_5151;
reg   [5:0] weight_35_V_addr_reg_5156;
wire   [5:0] ci_10_fu_3549_p2;
reg   [5:0] ci_10_reg_5164;
wire   [4:0] w_27_fu_3555_p2;
wire   [0:0] exitcond37_fu_3543_p2;
reg   [7:0] ShuffleConvs_1_Downs_227_reg_5174;
wire    ap_CS_fsm_state22;
reg   [7:0] ShuffleConvs_1_Downs_228_reg_5179;
reg   [7:0] ShuffleConvs_1_Downs_229_reg_5184;
reg   [7:0] ShuffleConvs_1_Downs_230_reg_5189;
reg   [7:0] ShuffleConvs_1_Downs_231_reg_5194;
reg   [7:0] ShuffleConvs_1_Downs_232_reg_5199;
reg   [7:0] ShuffleConvs_1_Downs_233_reg_5204;
reg   [7:0] ShuffleConvs_1_Downs_234_reg_5209;
reg   [7:0] ShuffleConvs_1_Downs_235_reg_5214;
reg   [7:0] ShuffleConvs_1_Downs_236_reg_5219;
reg   [7:0] ShuffleConvs_1_Downs_237_reg_5224;
reg   [7:0] ShuffleConvs_1_Downs_238_reg_5229;
wire   [10:0] h8_cast9_cast_fu_3729_p1;
reg   [10:0] h8_cast9_cast_reg_5234;
wire    ap_CS_fsm_state24;
wire   [9:0] tmp_273_fu_3757_p2;
reg   [9:0] tmp_273_reg_5239;
wire   [14:0] w9_cast8_cast3_fu_3769_p1;
reg   [14:0] w9_cast8_cast3_reg_5247;
wire    ap_CS_fsm_state25;
reg   [8:0] ShuffleConvs_1_Downs_239_reg_5252;
reg   [8:0] ShuffleConvs_1_Downs_240_reg_5257;
reg   [8:0] ShuffleConvs_1_Downs_241_reg_5262;
reg   [8:0] ShuffleConvs_1_Downs_242_reg_5267;
reg   [8:0] ShuffleConvs_1_Downs_243_reg_5272;
reg   [8:0] ShuffleConvs_1_Downs_244_reg_5277;
reg   [8:0] ShuffleConvs_1_Downs_245_reg_5282;
reg   [8:0] ShuffleConvs_1_Downs_246_reg_5287;
reg   [8:0] ShuffleConvs_1_Downs_247_reg_5292;
reg   [8:0] ShuffleConvs_1_Downs_248_reg_5297;
reg   [8:0] ShuffleConvs_1_Downs_249_reg_5302;
reg   [8:0] ShuffleConvs_1_Downs_250_reg_5307;
wire   [4:0] h_2_fu_3804_p2;
wire   [0:0] exitcond36_fu_3798_p2;
reg   [13:0] input_V_addr_6_reg_5320;
wire    ap_CS_fsm_state26;
reg   [5:0] weight_12_V_addr_reg_5325;
reg   [5:0] weight_13_V_addr_reg_5330;
reg   [5:0] weight_14_V_addr_reg_5335;
reg   [5:0] weight_15_V_addr_reg_5340;
reg   [5:0] weight_16_V_addr_reg_5345;
reg   [5:0] weight_17_V_addr_reg_5350;
reg   [5:0] weight_36_V_addr_reg_5355;
reg   [5:0] weight_37_V_addr_reg_5360;
reg   [5:0] weight_38_V_addr_reg_5365;
reg   [5:0] weight_39_V_addr_reg_5370;
reg   [5:0] weight_40_V_addr_reg_5375;
reg   [5:0] weight_41_V_addr_reg_5380;
wire   [5:0] ci_11_fu_3903_p2;
reg   [5:0] ci_11_reg_5388;
wire   [4:0] w_28_fu_3909_p2;
wire   [0:0] exitcond39_fu_3897_p2;
reg   [7:0] ShuffleConvs_1_Downs_251_reg_5398;
wire    ap_CS_fsm_state31;
reg   [7:0] ShuffleConvs_1_Downs_252_reg_5403;
reg   [7:0] ShuffleConvs_1_Downs_253_reg_5408;
reg   [7:0] ShuffleConvs_1_Downs_254_reg_5413;
reg   [7:0] ShuffleConvs_1_Downs_255_reg_5418;
reg   [7:0] ShuffleConvs_1_Downs_256_reg_5423;
reg   [7:0] ShuffleConvs_1_Downs_257_reg_5428;
reg   [7:0] ShuffleConvs_1_Downs_258_reg_5433;
reg   [7:0] ShuffleConvs_1_Downs_259_reg_5438;
reg   [7:0] ShuffleConvs_1_Downs_260_reg_5443;
reg   [7:0] ShuffleConvs_1_Downs_261_reg_5448;
reg   [7:0] ShuffleConvs_1_Downs_262_reg_5453;
wire   [10:0] h12_cast6_cast_fu_4083_p1;
reg   [10:0] h12_cast6_cast_reg_5458;
wire    ap_CS_fsm_state33;
wire   [9:0] tmp_283_fu_4111_p2;
reg   [9:0] tmp_283_reg_5463;
wire   [0:0] exitcond35_fu_4117_p2;
wire   [14:0] w13_cast5_cast1_fu_4123_p1;
reg   [14:0] w13_cast5_cast1_reg_5472;
wire    ap_CS_fsm_state34;
reg   [8:0] ShuffleConvs_1_Downs_263_reg_5477;
reg   [8:0] ShuffleConvs_1_Downs_264_reg_5482;
reg   [8:0] ShuffleConvs_1_Downs_265_reg_5487;
reg   [8:0] ShuffleConvs_1_Downs_266_reg_5492;
reg   [8:0] ShuffleConvs_1_Downs_267_reg_5497;
reg   [8:0] ShuffleConvs_1_Downs_268_reg_5502;
reg   [8:0] ShuffleConvs_1_Downs_269_reg_5507;
reg   [8:0] ShuffleConvs_1_Downs_270_reg_5512;
reg   [8:0] ShuffleConvs_1_Downs_271_reg_5517;
reg   [8:0] ShuffleConvs_1_Downs_272_reg_5522;
reg   [8:0] ShuffleConvs_1_Downs_273_reg_5527;
reg   [8:0] ShuffleConvs_1_Downs_274_reg_5532;
wire   [4:0] h_4_fu_4158_p2;
wire   [0:0] exitcond38_fu_4152_p2;
reg   [13:0] input_V_addr_7_reg_5545;
wire    ap_CS_fsm_state35;
reg   [5:0] weight_18_V_addr_reg_5550;
reg   [5:0] weight_19_V_addr_reg_5555;
reg   [5:0] weight_20_V_addr_reg_5560;
reg   [5:0] weight_21_V_addr_reg_5565;
reg   [5:0] weight_22_V_addr_reg_5570;
reg   [5:0] weight_23_V_addr_reg_5575;
reg   [5:0] weight_42_V_addr_reg_5580;
reg   [5:0] weight_43_V_addr_reg_5585;
reg   [5:0] weight_44_V_addr_reg_5590;
reg   [5:0] weight_45_V_addr_reg_5595;
reg   [5:0] weight_46_V_addr_reg_5600;
reg   [5:0] weight_47_V_addr_reg_5605;
wire   [5:0] ci_13_fu_4257_p2;
reg   [5:0] ci_13_reg_5613;
wire   [4:0] w_29_fu_4263_p2;
wire   [0:0] exitcond41_fu_4251_p2;
reg   [7:0] ShuffleConvs_1_Downs_275_reg_5623;
wire    ap_CS_fsm_state40;
reg   [7:0] ShuffleConvs_1_Downs_276_reg_5628;
reg   [7:0] ShuffleConvs_1_Downs_277_reg_5633;
reg   [7:0] ShuffleConvs_1_Downs_278_reg_5638;
reg   [7:0] ShuffleConvs_1_Downs_279_reg_5643;
reg   [7:0] ShuffleConvs_1_Downs_280_reg_5648;
reg   [7:0] ShuffleConvs_1_Downs_281_reg_5653;
reg   [7:0] ShuffleConvs_1_Downs_282_reg_5658;
reg   [7:0] ShuffleConvs_1_Downs_283_reg_5663;
reg   [7:0] ShuffleConvs_1_Downs_284_reg_5668;
reg   [7:0] ShuffleConvs_1_Downs_285_reg_5673;
reg   [7:0] ShuffleConvs_1_Downs_286_reg_5678;
wire   [0:0] exitcond_flatten9_fu_4437_p2;
reg   [0:0] exitcond_flatten9_reg_5683;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state42_pp1_stage0_iter0;
wire    ap_block_state43_pp1_stage0_iter1;
wire    ap_block_state44_pp1_stage0_iter2;
wire    ap_block_state45_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_5683;
wire   [13:0] indvar_flatten_next1_4_fu_4443_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten10_fu_4449_p2;
reg   [0:0] exitcond_flatten10_reg_5692;
wire   [9:0] indvar_flatten_next1_3_fu_4461_p3;
wire   [5:0] co16_mid2_fu_4499_p3;
reg   [5:0] co16_mid2_reg_5705;
reg    ap_enable_reg_pp1_iter1;
reg   [5:0] ap_reg_pp1_iter2_co16_mid2_reg_5705;
wire   [4:0] w18_mid2_fu_4517_p3;
reg   [4:0] w18_mid2_reg_5711;
wire   [4:0] h17_cast2_mid2_fu_4525_p3;
reg   [4:0] h17_cast2_mid2_reg_5717;
reg   [8:0] ShuffleConvs_1_Downs_287_reg_5724;
reg   [8:0] ShuffleConvs_1_Downs_288_reg_5730;
reg   [8:0] ShuffleConvs_1_Downs_289_reg_5736;
reg   [8:0] ShuffleConvs_1_Downs_290_reg_5742;
reg   [8:0] ShuffleConvs_1_Downs_291_reg_5748;
reg   [8:0] ShuffleConvs_1_Downs_292_reg_5754;
reg   [8:0] ShuffleConvs_1_Downs_293_reg_5760;
reg   [8:0] ShuffleConvs_1_Downs_294_reg_5766;
reg   [8:0] ShuffleConvs_1_Downs_295_reg_5772;
reg   [8:0] ShuffleConvs_1_Downs_296_reg_5778;
reg   [8:0] ShuffleConvs_1_Downs_297_reg_5784;
reg   [8:0] ShuffleConvs_1_Downs_298_reg_5790;
reg   [8:0] ShuffleConvs_1_Downs_299_reg_5796;
reg   [8:0] ShuffleConvs_1_Downs_300_reg_5802;
reg   [8:0] ShuffleConvs_1_Downs_301_reg_5808;
reg   [8:0] ShuffleConvs_1_Downs_302_reg_5814;
reg   [8:0] ShuffleConvs_1_Downs_303_reg_5820;
reg   [8:0] ShuffleConvs_1_Downs_304_reg_5826;
reg   [8:0] ShuffleConvs_1_Downs_305_reg_5832;
reg   [8:0] ShuffleConvs_1_Downs_306_reg_5838;
reg   [8:0] ShuffleConvs_1_Downs_307_reg_5844;
reg   [8:0] ShuffleConvs_1_Downs_308_reg_5850;
reg   [8:0] ShuffleConvs_1_Downs_309_reg_5856;
reg   [8:0] ShuffleConvs_1_Downs_310_reg_5862;
reg   [8:0] ShuffleConvs_1_Downs_311_reg_5868;
reg   [8:0] ShuffleConvs_1_Downs_312_reg_5874;
reg   [8:0] ShuffleConvs_1_Downs_313_reg_5880;
reg   [8:0] ShuffleConvs_1_Downs_314_reg_5886;
reg   [8:0] ShuffleConvs_1_Downs_315_reg_5892;
reg   [8:0] ShuffleConvs_1_Downs_316_reg_5898;
reg   [8:0] ShuffleConvs_1_Downs_317_reg_5904;
reg   [8:0] ShuffleConvs_1_Downs_318_reg_5910;
reg   [8:0] ShuffleConvs_1_Downs_319_reg_5916;
reg   [8:0] ShuffleConvs_1_Downs_320_reg_5922;
reg   [8:0] ShuffleConvs_1_Downs_321_reg_5928;
reg   [8:0] ShuffleConvs_1_Downs_322_reg_5934;
reg   [8:0] ShuffleConvs_1_Downs_323_reg_5940;
reg   [8:0] ShuffleConvs_1_Downs_324_reg_5946;
reg   [8:0] ShuffleConvs_1_Downs_325_reg_5952;
reg   [8:0] ShuffleConvs_1_Downs_326_reg_5958;
reg   [8:0] ShuffleConvs_1_Downs_327_reg_5964;
reg   [8:0] ShuffleConvs_1_Downs_328_reg_5970;
reg   [8:0] ShuffleConvs_1_Downs_329_reg_5976;
reg   [8:0] ShuffleConvs_1_Downs_330_reg_5982;
reg   [8:0] ShuffleConvs_1_Downs_331_reg_5988;
reg   [8:0] ShuffleConvs_1_Downs_332_reg_5994;
reg   [8:0] ShuffleConvs_1_Downs_333_reg_6000;
reg   [8:0] ShuffleConvs_1_Downs_334_reg_6006;
wire   [4:0] w_30_fu_4622_p2;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state42;
reg    ap_enable_reg_pp1_iter3;
reg   [7:0] grp_MUL_DP_fu_2726_a_V;
reg   [7:0] grp_MUL_DP_fu_2726_b_V;
wire   [15:0] grp_MUL_DP_fu_2726_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2726_ap_return_1;
reg    grp_MUL_DP_fu_2726_ap_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
reg   [7:0] grp_MUL_DP_fu_2735_a_V;
reg   [7:0] grp_MUL_DP_fu_2735_b_V;
wire   [15:0] grp_MUL_DP_fu_2735_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2735_ap_return_1;
reg    grp_MUL_DP_fu_2735_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2744_a_V;
reg   [7:0] grp_MUL_DP_fu_2744_b_V;
wire   [15:0] grp_MUL_DP_fu_2744_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2744_ap_return_1;
reg    grp_MUL_DP_fu_2744_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2753_a_V;
reg   [7:0] grp_MUL_DP_fu_2753_b_V;
wire   [15:0] grp_MUL_DP_fu_2753_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2753_ap_return_1;
reg    grp_MUL_DP_fu_2753_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2762_a_V;
reg   [7:0] grp_MUL_DP_fu_2762_b_V;
wire   [15:0] grp_MUL_DP_fu_2762_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2762_ap_return_1;
reg    grp_MUL_DP_fu_2762_ap_ce;
reg   [7:0] grp_MUL_DP_fu_2771_a_V;
reg   [7:0] grp_MUL_DP_fu_2771_b_V;
wire   [15:0] grp_MUL_DP_fu_2771_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2771_ap_return_1;
reg    grp_MUL_DP_fu_2771_ap_ce;
reg   [5:0] co_phi_fu_2485_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [4:0] h_phi_fu_2508_p4;
reg   [4:0] w_phi_fu_2520_p4;
reg   [4:0] h1_reg_2528;
wire    ap_CS_fsm_state5;
reg   [4:0] w2_reg_2540;
wire   [0:0] exitcond29_fu_3055_p2;
reg   [5:0] ci_reg_2552;
reg   [4:0] h4_reg_2563;
reg   [4:0] w5_reg_2575;
wire   [0:0] exitcond30_fu_3409_p2;
reg   [5:0] ci6_reg_2587;
reg   [4:0] h8_reg_2598;
reg   [4:0] w9_reg_2610;
wire   [0:0] exitcond32_fu_3763_p2;
reg   [5:0] ci10_reg_2622;
reg   [4:0] h12_reg_2633;
reg   [4:0] w13_reg_2645;
reg   [5:0] ci12_reg_2657;
reg   [5:0] co16_phi_fu_2683_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [4:0] h17_phi_fu_2706_p4;
reg   [4:0] w18_phi_fu_2718_p4;
wire   [31:0] co_cast_mid2_fu_2878_p1;
wire   [31:0] tmp_331_cast_fu_2964_p1;
wire   [31:0] tmp_338_cast_fu_3074_p1;
wire   [31:0] tmp_350_cast_fu_3184_p1;
wire   [31:0] ci_cast_fu_3102_p1;
wire   [31:0] tmp_342_cast_fu_3428_p1;
wire   [31:0] tmp_362_cast_fu_3538_p1;
wire   [31:0] ci6_cast_fu_3456_p1;
wire   [31:0] tmp_354_cast_fu_3782_p1;
wire   [31:0] tmp_371_cast_fu_3892_p1;
wire   [31:0] ci10_cast7_fu_3810_p1;
wire   [31:0] tmp_363_cast_fu_4136_p1;
wire   [31:0] tmp_384_cast_fu_4246_p1;
wire   [31:0] ci12_cast4_fu_4164_p1;
wire   [31:0] tmp_376_cast_fu_4570_p1;
wire   [7:0] tmp_74_4_fu_4403_p2;
wire   [0:0] tmp_437_fu_4728_p3;
wire   [7:0] tmp_74_3_fu_4375_p2;
wire   [7:0] tmp_74_2_fu_4347_p2;
wire   [7:0] tmp_74_1_fu_4319_p2;
wire   [7:0] tmp_47_fu_4291_p2;
wire   [7:0] tmp_68_5_fu_4077_p2;
wire   [7:0] tmp_68_4_fu_4049_p2;
wire   [7:0] tmp_68_3_fu_4021_p2;
wire   [7:0] tmp_68_2_fu_3993_p2;
wire   [7:0] tmp_68_1_fu_3965_p2;
wire   [7:0] tmp_43_fu_3937_p2;
wire   [7:0] tmp_63_5_fu_3723_p2;
wire   [7:0] tmp_63_4_fu_3695_p2;
wire   [7:0] tmp_63_3_fu_3667_p2;
wire   [7:0] tmp_63_2_fu_3639_p2;
wire   [7:0] tmp_63_1_fu_3611_p2;
wire   [7:0] tmp_39_fu_3583_p2;
wire   [7:0] tmp_58_5_fu_3369_p2;
wire   [7:0] tmp_58_4_fu_3341_p2;
wire   [7:0] tmp_58_3_fu_3313_p2;
wire   [7:0] tmp_58_2_fu_3285_p2;
wire   [7:0] tmp_58_1_fu_3257_p2;
wire   [7:0] tmp_35_fu_3229_p2;
wire   [7:0] tmp_72_5_fu_4421_p2;
wire   [7:0] tmp_72_4_fu_4393_p2;
wire   [7:0] tmp_72_3_fu_4365_p2;
wire   [7:0] tmp_72_2_fu_4337_p2;
wire   [7:0] tmp_72_1_fu_4309_p2;
wire   [7:0] tmp_45_fu_4281_p2;
wire   [7:0] tmp_66_5_fu_4067_p2;
wire   [7:0] tmp_66_4_fu_4039_p2;
wire   [7:0] tmp_66_3_fu_4011_p2;
wire   [7:0] tmp_66_2_fu_3983_p2;
wire   [7:0] tmp_66_1_fu_3955_p2;
wire   [7:0] tmp_41_fu_3927_p2;
wire   [7:0] tmp_61_5_fu_3713_p2;
wire   [7:0] tmp_61_4_fu_3685_p2;
wire   [7:0] tmp_61_3_fu_3657_p2;
wire   [7:0] tmp_61_2_fu_3629_p2;
wire   [7:0] tmp_61_1_fu_3601_p2;
wire   [7:0] tmp_37_fu_3573_p2;
wire   [7:0] tmp_56_5_fu_3359_p2;
wire   [7:0] tmp_56_4_fu_3331_p2;
wire   [7:0] tmp_56_3_fu_3303_p2;
wire   [7:0] tmp_56_2_fu_3275_p2;
wire   [7:0] tmp_56_1_fu_3247_p2;
wire   [7:0] tmp_33_fu_3219_p2;
wire   [7:0] tmp_74_5_fu_4431_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state36;
wire   [9:0] indvar_flatten_op_fu_2844_p2;
wire   [5:0] co_20_fu_2858_p2;
wire   [0:0] exitcond_fu_2888_p2;
wire   [0:0] not_exitcond_flatten_fu_2883_p2;
wire   [4:0] h_mid_fu_2864_p3;
wire   [0:0] exitcond54_mid_fu_2894_p2;
wire   [0:0] tmp_s_fu_2906_p2;
wire   [4:0] h_21_fu_2900_p2;
wire   [8:0] tmp_406_fu_2927_p3;
wire   [5:0] tmp_407_fu_2938_p3;
wire   [9:0] p_shl_cast_fu_2934_p1;
wire   [9:0] p_shl1_cast_fu_2945_p1;
wire   [9:0] w_cast_cast_fu_2955_p1;
wire   [9:0] tmp_262_fu_2949_p2;
wire   [9:0] tmp_263_fu_2958_p2;
wire   [8:0] tmp_264_fu_3025_p3;
wire   [5:0] tmp_265_fu_3037_p3;
wire   [9:0] p_shl3_cast_fu_3045_p1;
wire   [9:0] p_shl2_cast_fu_3033_p1;
wire   [9:0] w2_cast_cast_fu_3065_p1;
wire   [9:0] tmp_270_fu_3069_p2;
wire   [9:0] tmp_275_fu_3118_p3;
wire   [6:0] tmp_276_fu_3130_p3;
wire   [10:0] p_shl6_cast_fu_3126_p1;
wire   [10:0] p_shl7_cast_fu_3138_p1;
wire   [10:0] tmp_277_fu_3142_p2;
wire   [10:0] tmp_278_fu_3148_p2;
wire   [11:0] tmp_408_fu_3161_p3;
wire   [14:0] p_shl4_cast_fu_3153_p3;
wire   [14:0] p_shl5_cast_fu_3169_p1;
wire   [14:0] tmp_279_fu_3173_p2;
wire   [14:0] tmp_280_fu_3179_p2;
wire   [7:0] tmp_409_fu_3215_p1;
wire   [7:0] tmp_410_fu_3225_p1;
wire   [7:0] tmp_411_fu_3243_p1;
wire   [7:0] tmp_412_fu_3253_p1;
wire   [7:0] tmp_413_fu_3271_p1;
wire   [7:0] tmp_414_fu_3281_p1;
wire   [7:0] tmp_415_fu_3299_p1;
wire   [7:0] tmp_416_fu_3309_p1;
wire   [7:0] tmp_417_fu_3327_p1;
wire   [7:0] tmp_418_fu_3337_p1;
wire   [7:0] tmp_419_fu_3355_p1;
wire   [7:0] tmp_420_fu_3365_p1;
wire   [8:0] tmp_267_fu_3379_p3;
wire   [5:0] tmp_268_fu_3391_p3;
wire   [9:0] p_shl9_cast_fu_3399_p1;
wire   [9:0] p_shl8_cast_fu_3387_p1;
wire   [9:0] w5_cast_cast_fu_3419_p1;
wire   [9:0] tmp_274_fu_3423_p2;
wire   [9:0] tmp_285_fu_3472_p3;
wire   [6:0] tmp_286_fu_3484_p3;
wire   [10:0] p_shl12_cast_fu_3480_p1;
wire   [10:0] p_shl13_cast_fu_3492_p1;
wire   [10:0] tmp_287_fu_3496_p2;
wire   [10:0] tmp_288_fu_3502_p2;
wire   [11:0] tmp_421_fu_3515_p3;
wire   [14:0] p_shl10_cast_fu_3507_p3;
wire   [14:0] p_shl11_cast_fu_3523_p1;
wire   [14:0] tmp_289_fu_3527_p2;
wire   [14:0] tmp_290_fu_3533_p2;
wire   [7:0] tmp_422_fu_3569_p1;
wire   [7:0] tmp_423_fu_3579_p1;
wire   [7:0] tmp_424_fu_3597_p1;
wire   [7:0] tmp_425_fu_3607_p1;
wire   [7:0] tmp_426_fu_3625_p1;
wire   [7:0] tmp_427_fu_3635_p1;
wire   [7:0] tmp_428_fu_3653_p1;
wire   [7:0] tmp_429_fu_3663_p1;
wire   [7:0] tmp_430_fu_3681_p1;
wire   [7:0] tmp_431_fu_3691_p1;
wire   [7:0] tmp_432_fu_3709_p1;
wire   [7:0] tmp_433_fu_3719_p1;
wire   [8:0] tmp_271_fu_3733_p3;
wire   [5:0] tmp_272_fu_3745_p3;
wire   [9:0] p_shl15_cast_fu_3753_p1;
wire   [9:0] p_shl14_cast_fu_3741_p1;
wire   [9:0] w9_cast8_cast_fu_3773_p1;
wire   [9:0] tmp_284_fu_3777_p2;
wire   [9:0] tmp_292_fu_3826_p3;
wire   [6:0] tmp_293_fu_3838_p3;
wire   [10:0] p_shl18_cast_fu_3834_p1;
wire   [10:0] p_shl19_cast_fu_3846_p1;
wire   [10:0] tmp_294_fu_3850_p2;
wire   [10:0] tmp_295_fu_3856_p2;
wire   [11:0] tmp_434_fu_3869_p3;
wire   [14:0] p_shl16_cast_fu_3861_p3;
wire   [14:0] p_shl17_cast_fu_3877_p1;
wire   [14:0] tmp_296_fu_3881_p2;
wire   [14:0] tmp_297_fu_3887_p2;
wire   [7:0] tmp_438_fu_3923_p1;
wire   [7:0] tmp_439_fu_3933_p1;
wire   [7:0] tmp_440_fu_3951_p1;
wire   [7:0] tmp_441_fu_3961_p1;
wire   [7:0] tmp_442_fu_3979_p1;
wire   [7:0] tmp_443_fu_3989_p1;
wire   [7:0] tmp_444_fu_4007_p1;
wire   [7:0] tmp_445_fu_4017_p1;
wire   [7:0] tmp_446_fu_4035_p1;
wire   [7:0] tmp_447_fu_4045_p1;
wire   [7:0] tmp_448_fu_4063_p1;
wire   [7:0] tmp_449_fu_4073_p1;
wire   [8:0] tmp_281_fu_4087_p3;
wire   [5:0] tmp_282_fu_4099_p3;
wire   [9:0] p_shl21_cast_fu_4107_p1;
wire   [9:0] p_shl20_cast_fu_4095_p1;
wire   [9:0] w13_cast5_cast_fu_4127_p1;
wire   [9:0] tmp_291_fu_4131_p2;
wire   [9:0] tmp_301_fu_4180_p3;
wire   [6:0] tmp_302_fu_4192_p3;
wire   [10:0] p_shl24_cast_fu_4188_p1;
wire   [10:0] p_shl25_cast_fu_4200_p1;
wire   [10:0] tmp_303_fu_4204_p2;
wire   [10:0] tmp_304_fu_4210_p2;
wire   [11:0] tmp_450_fu_4223_p3;
wire   [14:0] p_shl22_cast_fu_4215_p3;
wire   [14:0] p_shl23_cast_fu_4231_p1;
wire   [14:0] tmp_305_fu_4235_p2;
wire   [14:0] tmp_306_fu_4241_p2;
wire   [7:0] tmp_451_fu_4277_p1;
wire   [7:0] tmp_452_fu_4287_p1;
wire   [7:0] tmp_453_fu_4305_p1;
wire   [7:0] tmp_454_fu_4315_p1;
wire   [7:0] tmp_455_fu_4333_p1;
wire   [7:0] tmp_456_fu_4343_p1;
wire   [7:0] tmp_457_fu_4361_p1;
wire   [7:0] tmp_458_fu_4371_p1;
wire   [7:0] tmp_459_fu_4389_p1;
wire   [7:0] tmp_460_fu_4399_p1;
wire   [7:0] tmp_461_fu_4417_p1;
wire   [7:0] tmp_462_fu_4427_p1;
wire   [9:0] indvar_flatten21_op_fu_4455_p2;
wire   [0:0] exitcond40_fu_4487_p2;
wire   [0:0] not_exitcond_flatten_1_fu_4482_p2;
wire   [5:0] co_21_fu_4469_p2;
wire   [4:0] h17_mid_fu_4475_p3;
wire   [0:0] exitcond_mid_fu_4493_p2;
wire   [0:0] tmp_298_fu_4512_p2;
wire   [4:0] h_3_fu_4506_p2;
wire   [8:0] tmp_435_fu_4533_p3;
wire   [5:0] tmp_436_fu_4544_p3;
wire   [9:0] p_shl26_cast_fu_4540_p1;
wire   [9:0] p_shl27_cast_fu_4551_p1;
wire   [9:0] w18_cast1_cast_fu_4561_p1;
wire   [9:0] tmp_299_fu_4555_p2;
wire   [9:0] tmp_300_fu_4564_p2;
wire   [7:0] tmp_48_fu_4627_p50;
wire    ap_CS_fsm_state46;
reg   [40:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_2726(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2726_a_V),
    .b_V(grp_MUL_DP_fu_2726_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2726_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2726_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2726_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2735(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2735_a_V),
    .b_V(grp_MUL_DP_fu_2735_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2735_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2735_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2735_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2744(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2744_a_V),
    .b_V(grp_MUL_DP_fu_2744_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2744_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2744_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2744_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2753(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2753_a_V),
    .b_V(grp_MUL_DP_fu_2753_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2753_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2753_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2753_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2762(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2762_a_V),
    .b_V(grp_MUL_DP_fu_2762_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2762_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2762_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2762_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2771(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_2771_a_V),
    .b_V(grp_MUL_DP_fu_2771_b_V),
    .w_V(reg_2816),
    .ap_return_0(grp_MUL_DP_fu_2771_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2771_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2771_ap_ce)
);

ShuffleNetV2_mux_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_fYi_U255(
    .din1(ShuffleConvs_1_Downs_47_q0),
    .din2(ShuffleConvs_1_Downs_46_q0),
    .din3(ShuffleConvs_1_Downs_35_q0),
    .din4(ShuffleConvs_1_Downs_24_q0),
    .din5(ShuffleConvs_1_Downs_13_q0),
    .din6(ShuffleConvs_1_Downs_4_q0),
    .din7(ShuffleConvs_1_Downs_3_q0),
    .din8(ShuffleConvs_1_Downs_2_q0),
    .din9(ShuffleConvs_1_Downs_1_q0),
    .din10(ShuffleConvs_1_Downs_q0),
    .din11(ShuffleConvs_1_Downs_45_q0),
    .din12(ShuffleConvs_1_Downs_44_q0),
    .din13(ShuffleConvs_1_Downs_43_q0),
    .din14(ShuffleConvs_1_Downs_42_q0),
    .din15(ShuffleConvs_1_Downs_41_q0),
    .din16(ShuffleConvs_1_Downs_40_q0),
    .din17(ShuffleConvs_1_Downs_39_q0),
    .din18(ShuffleConvs_1_Downs_38_q0),
    .din19(ShuffleConvs_1_Downs_37_q0),
    .din20(ShuffleConvs_1_Downs_36_q0),
    .din21(ShuffleConvs_1_Downs_34_q0),
    .din22(ShuffleConvs_1_Downs_33_q0),
    .din23(ShuffleConvs_1_Downs_32_q0),
    .din24(ShuffleConvs_1_Downs_31_q0),
    .din25(ShuffleConvs_1_Downs_30_q0),
    .din26(ShuffleConvs_1_Downs_29_q0),
    .din27(ShuffleConvs_1_Downs_28_q0),
    .din28(ShuffleConvs_1_Downs_27_q0),
    .din29(ShuffleConvs_1_Downs_26_q0),
    .din30(ShuffleConvs_1_Downs_25_q0),
    .din31(ShuffleConvs_1_Downs_23_q0),
    .din32(ShuffleConvs_1_Downs_22_q0),
    .din33(ShuffleConvs_1_Downs_21_q0),
    .din34(ShuffleConvs_1_Downs_20_q0),
    .din35(ShuffleConvs_1_Downs_19_q0),
    .din36(ShuffleConvs_1_Downs_18_q0),
    .din37(ShuffleConvs_1_Downs_17_q0),
    .din38(ShuffleConvs_1_Downs_16_q0),
    .din39(ShuffleConvs_1_Downs_15_q0),
    .din40(ShuffleConvs_1_Downs_14_q0),
    .din41(ShuffleConvs_1_Downs_12_q0),
    .din42(ShuffleConvs_1_Downs_11_q0),
    .din43(ShuffleConvs_1_Downs_10_q0),
    .din44(ShuffleConvs_1_Downs_9_q0),
    .din45(ShuffleConvs_1_Downs_8_q0),
    .din46(ShuffleConvs_1_Downs_7_q0),
    .din47(ShuffleConvs_1_Downs_6_q0),
    .din48(ShuffleConvs_1_Downs_5_q0),
    .din49(ap_reg_pp1_iter2_co16_mid2_reg_5705),
    .dout(tmp_48_fu_4627_p50)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state42))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state42)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state42 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd0 == exitcond36_fu_3798_p2))) begin
        ci10_reg_2622 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        ci10_reg_2622 <= ci_11_reg_5388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (1'd0 == exitcond38_fu_4152_p2))) begin
        ci12_reg_2657 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        ci12_reg_2657 <= ci_13_reg_5613;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond33_fu_3444_p2))) begin
        ci6_reg_2587 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ci6_reg_2587 <= ci_10_reg_5164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond31_fu_3090_p2))) begin
        ci_reg_2552 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ci_reg_2552 <= ci_9_reg_4940;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
        co16_reg_2679 <= 6'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co16_reg_2679 <= co16_mid2_reg_5705;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0))) begin
        co_reg_2481 <= co_cast_mid2_v_reg_4758;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_2481 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd1 == exitcond32_fu_3763_p2))) begin
        h12_reg_2633 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond38_fu_4152_p2))) begin
        h12_reg_2633 <= h_4_fu_4158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
        h17_reg_2702 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h17_reg_2702 <= h17_cast2_mid2_reg_5717;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_2528 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond31_fu_3090_p2 == 1'd1))) begin
        h1_reg_2528 <= h_9_fu_3096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond29_fu_3055_p2))) begin
        h4_reg_2563 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond33_fu_3444_p2))) begin
        h4_reg_2563 <= h_1_fu_3450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond30_fu_3409_p2))) begin
        h8_reg_2598 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond36_fu_3798_p2))) begin
        h8_reg_2598 <= h_2_fu_3804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0))) begin
        h_reg_2504 <= h_cast_mid2_reg_4769;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_2504 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_2826_p2 == 1'd0))) begin
        indvar_flatten4_reg_2470 <= indvar_flatten_next1_fu_2832_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_2470 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
        indvar_flatten5_reg_2668 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_4437_p2))) begin
        indvar_flatten5_reg_2668 <= indvar_flatten_next1_4_fu_4443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
        indvar_flatten6_reg_2691 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_4437_p2))) begin
        indvar_flatten6_reg_2691 <= indvar_flatten_next1_3_fu_4461_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_2826_p2 == 1'd0))) begin
        indvar_flatten_reg_2493 <= indvar_flatten_next_fu_2850_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_2493 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == exitcond35_fu_4117_p2))) begin
        w13_reg_2645 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state35) & (1'd1 == exitcond41_fu_4251_p2))) begin
        w13_reg_2645 <= w_29_fu_4263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
        w18_reg_2714 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w18_reg_2714 <= w_30_fu_4622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond29_fu_3055_p2))) begin
        w2_reg_2540 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond34_fu_3189_p2))) begin
        w2_reg_2540 <= w_26_fu_3201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond30_fu_3409_p2))) begin
        w5_reg_2575 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond37_fu_3543_p2))) begin
        w5_reg_2575 <= w_27_fu_3555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd0 == exitcond32_fu_3763_p2))) begin
        w9_reg_2610 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond39_fu_3897_p2))) begin
        w9_reg_2610 <= w_28_fu_3909_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0))) begin
        w_reg_2516 <= w_25_fu_3016_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_2516 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_1_Downs_191_reg_4804 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_192_reg_4809 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_193_reg_4814 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_194_reg_4819 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_195_reg_4824 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_196_reg_4829 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_197_reg_4834 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_198_reg_4839 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_199_reg_4844 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_200_reg_4849 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_201_reg_4854 <= tmp_338_cast_fu_3074_p1;
        ShuffleConvs_1_Downs_202_reg_4859 <= tmp_338_cast_fu_3074_p1;
        w2_cast_cast3_reg_4799[4 : 0] <= w2_cast_cast3_fu_3061_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ShuffleConvs_1_Downs_203_reg_4950 <= ShuffleConvs_1_Downs_47_q0;
        ShuffleConvs_1_Downs_204_reg_4955 <= ShuffleConvs_1_Downs_30_q0;
        ShuffleConvs_1_Downs_205_reg_4960 <= ShuffleConvs_1_Downs_46_q0;
        ShuffleConvs_1_Downs_206_reg_4965 <= ShuffleConvs_1_Downs_29_q0;
        ShuffleConvs_1_Downs_207_reg_4970 <= ShuffleConvs_1_Downs_35_q0;
        ShuffleConvs_1_Downs_208_reg_4975 <= ShuffleConvs_1_Downs_28_q0;
        ShuffleConvs_1_Downs_209_reg_4980 <= ShuffleConvs_1_Downs_24_q0;
        ShuffleConvs_1_Downs_210_reg_4985 <= ShuffleConvs_1_Downs_27_q0;
        ShuffleConvs_1_Downs_211_reg_4990 <= ShuffleConvs_1_Downs_13_q0;
        ShuffleConvs_1_Downs_212_reg_4995 <= ShuffleConvs_1_Downs_26_q0;
        ShuffleConvs_1_Downs_213_reg_5000 <= ShuffleConvs_1_Downs_4_q0;
        ShuffleConvs_1_Downs_214_reg_5005 <= ShuffleConvs_1_Downs_25_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_1_Downs_215_reg_5028 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_216_reg_5033 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_217_reg_5038 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_218_reg_5043 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_219_reg_5048 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_220_reg_5053 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_221_reg_5058 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_222_reg_5063 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_223_reg_5068 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_224_reg_5073 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_225_reg_5078 <= tmp_342_cast_fu_3428_p1;
        ShuffleConvs_1_Downs_226_reg_5083 <= tmp_342_cast_fu_3428_p1;
        w5_cast_cast3_reg_5023[4 : 0] <= w5_cast_cast3_fu_3415_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ShuffleConvs_1_Downs_227_reg_5174 <= ShuffleConvs_1_Downs_3_q0;
        ShuffleConvs_1_Downs_228_reg_5179 <= ShuffleConvs_1_Downs_23_q0;
        ShuffleConvs_1_Downs_229_reg_5184 <= ShuffleConvs_1_Downs_2_q0;
        ShuffleConvs_1_Downs_230_reg_5189 <= ShuffleConvs_1_Downs_22_q0;
        ShuffleConvs_1_Downs_231_reg_5194 <= ShuffleConvs_1_Downs_1_q0;
        ShuffleConvs_1_Downs_232_reg_5199 <= ShuffleConvs_1_Downs_21_q0;
        ShuffleConvs_1_Downs_233_reg_5204 <= ShuffleConvs_1_Downs_q0;
        ShuffleConvs_1_Downs_234_reg_5209 <= ShuffleConvs_1_Downs_20_q0;
        ShuffleConvs_1_Downs_235_reg_5214 <= ShuffleConvs_1_Downs_45_q0;
        ShuffleConvs_1_Downs_236_reg_5219 <= ShuffleConvs_1_Downs_19_q0;
        ShuffleConvs_1_Downs_237_reg_5224 <= ShuffleConvs_1_Downs_44_q0;
        ShuffleConvs_1_Downs_238_reg_5229 <= ShuffleConvs_1_Downs_18_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_1_Downs_239_reg_5252 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_240_reg_5257 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_241_reg_5262 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_242_reg_5267 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_243_reg_5272 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_244_reg_5277 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_245_reg_5282 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_246_reg_5287 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_247_reg_5292 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_248_reg_5297 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_249_reg_5302 <= tmp_354_cast_fu_3782_p1;
        ShuffleConvs_1_Downs_250_reg_5307 <= tmp_354_cast_fu_3782_p1;
        w9_cast8_cast3_reg_5247[4 : 0] <= w9_cast8_cast3_fu_3769_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ShuffleConvs_1_Downs_251_reg_5398 <= ShuffleConvs_1_Downs_43_q0;
        ShuffleConvs_1_Downs_252_reg_5403 <= ShuffleConvs_1_Downs_17_q0;
        ShuffleConvs_1_Downs_253_reg_5408 <= ShuffleConvs_1_Downs_42_q0;
        ShuffleConvs_1_Downs_254_reg_5413 <= ShuffleConvs_1_Downs_16_q0;
        ShuffleConvs_1_Downs_255_reg_5418 <= ShuffleConvs_1_Downs_41_q0;
        ShuffleConvs_1_Downs_256_reg_5423 <= ShuffleConvs_1_Downs_15_q0;
        ShuffleConvs_1_Downs_257_reg_5428 <= ShuffleConvs_1_Downs_40_q0;
        ShuffleConvs_1_Downs_258_reg_5433 <= ShuffleConvs_1_Downs_14_q0;
        ShuffleConvs_1_Downs_259_reg_5438 <= ShuffleConvs_1_Downs_39_q0;
        ShuffleConvs_1_Downs_260_reg_5443 <= ShuffleConvs_1_Downs_12_q0;
        ShuffleConvs_1_Downs_261_reg_5448 <= ShuffleConvs_1_Downs_38_q0;
        ShuffleConvs_1_Downs_262_reg_5453 <= ShuffleConvs_1_Downs_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_1_Downs_263_reg_5477 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_264_reg_5482 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_265_reg_5487 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_266_reg_5492 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_267_reg_5497 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_268_reg_5502 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_269_reg_5507 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_270_reg_5512 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_271_reg_5517 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_272_reg_5522 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_273_reg_5527 <= tmp_363_cast_fu_4136_p1;
        ShuffleConvs_1_Downs_274_reg_5532 <= tmp_363_cast_fu_4136_p1;
        w13_cast5_cast1_reg_5472[4 : 0] <= w13_cast5_cast1_fu_4123_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ShuffleConvs_1_Downs_275_reg_5623 <= ShuffleConvs_1_Downs_37_q0;
        ShuffleConvs_1_Downs_276_reg_5628 <= ShuffleConvs_1_Downs_10_q0;
        ShuffleConvs_1_Downs_277_reg_5633 <= ShuffleConvs_1_Downs_36_q0;
        ShuffleConvs_1_Downs_278_reg_5638 <= ShuffleConvs_1_Downs_9_q0;
        ShuffleConvs_1_Downs_279_reg_5643 <= ShuffleConvs_1_Downs_34_q0;
        ShuffleConvs_1_Downs_280_reg_5648 <= ShuffleConvs_1_Downs_8_q0;
        ShuffleConvs_1_Downs_281_reg_5653 <= ShuffleConvs_1_Downs_33_q0;
        ShuffleConvs_1_Downs_282_reg_5658 <= ShuffleConvs_1_Downs_7_q0;
        ShuffleConvs_1_Downs_283_reg_5663 <= ShuffleConvs_1_Downs_32_q0;
        ShuffleConvs_1_Downs_284_reg_5668 <= ShuffleConvs_1_Downs_6_q0;
        ShuffleConvs_1_Downs_285_reg_5673 <= ShuffleConvs_1_Downs_31_q0;
        ShuffleConvs_1_Downs_286_reg_5678 <= ShuffleConvs_1_Downs_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683))) begin
        ShuffleConvs_1_Downs_287_reg_5724 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_288_reg_5730 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_289_reg_5736 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_290_reg_5742 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_291_reg_5748 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_292_reg_5754 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_293_reg_5760 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_294_reg_5766 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_295_reg_5772 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_296_reg_5778 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_297_reg_5784 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_298_reg_5790 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_299_reg_5796 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_300_reg_5802 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_301_reg_5808 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_302_reg_5814 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_303_reg_5820 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_304_reg_5826 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_305_reg_5832 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_306_reg_5838 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_307_reg_5844 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_308_reg_5850 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_309_reg_5856 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_310_reg_5862 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_311_reg_5868 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_312_reg_5874 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_313_reg_5880 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_314_reg_5886 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_315_reg_5892 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_316_reg_5898 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_317_reg_5904 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_318_reg_5910 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_319_reg_5916 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_320_reg_5922 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_321_reg_5928 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_322_reg_5934 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_323_reg_5940 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_324_reg_5946 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_325_reg_5952 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_326_reg_5958 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_327_reg_5964 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_328_reg_5970 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_329_reg_5976 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_330_reg_5982 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_331_reg_5988 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_332_reg_5994 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_333_reg_6000 <= tmp_376_cast_fu_4570_p1;
        ShuffleConvs_1_Downs_334_reg_6006 <= tmp_376_cast_fu_4570_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_4736 <= exitcond_flatten_reg_4736;
        exitcond_flatten_reg_4736 <= exitcond_flatten_fu_2826_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_5683 <= exitcond_flatten9_reg_5683;
        exitcond_flatten9_reg_5683 <= exitcond_flatten9_fu_4437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co16_mid2_reg_5705 <= co16_mid2_reg_5705;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ci_10_reg_5164 <= ci_10_fu_3549_p2;
        input_V_addr_5_reg_5096 <= tmp_362_cast_fu_3538_p1;
        weight_10_V_addr_reg_5121 <= ci6_cast_fu_3456_p1;
        weight_11_V_addr_reg_5126 <= ci6_cast_fu_3456_p1;
        weight_30_V_addr_reg_5131 <= ci6_cast_fu_3456_p1;
        weight_31_V_addr_reg_5136 <= ci6_cast_fu_3456_p1;
        weight_32_V_addr_reg_5141 <= ci6_cast_fu_3456_p1;
        weight_33_V_addr_reg_5146 <= ci6_cast_fu_3456_p1;
        weight_34_V_addr_reg_5151 <= ci6_cast_fu_3456_p1;
        weight_35_V_addr_reg_5156 <= ci6_cast_fu_3456_p1;
        weight_6_V_addr_reg_5101 <= ci6_cast_fu_3456_p1;
        weight_7_V_addr_reg_5106 <= ci6_cast_fu_3456_p1;
        weight_8_V_addr_reg_5111 <= ci6_cast_fu_3456_p1;
        weight_9_V_addr_reg_5116 <= ci6_cast_fu_3456_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ci_11_reg_5388 <= ci_11_fu_3903_p2;
        input_V_addr_6_reg_5320 <= tmp_371_cast_fu_3892_p1;
        weight_12_V_addr_reg_5325 <= ci10_cast7_fu_3810_p1;
        weight_13_V_addr_reg_5330 <= ci10_cast7_fu_3810_p1;
        weight_14_V_addr_reg_5335 <= ci10_cast7_fu_3810_p1;
        weight_15_V_addr_reg_5340 <= ci10_cast7_fu_3810_p1;
        weight_16_V_addr_reg_5345 <= ci10_cast7_fu_3810_p1;
        weight_17_V_addr_reg_5350 <= ci10_cast7_fu_3810_p1;
        weight_36_V_addr_reg_5355 <= ci10_cast7_fu_3810_p1;
        weight_37_V_addr_reg_5360 <= ci10_cast7_fu_3810_p1;
        weight_38_V_addr_reg_5365 <= ci10_cast7_fu_3810_p1;
        weight_39_V_addr_reg_5370 <= ci10_cast7_fu_3810_p1;
        weight_40_V_addr_reg_5375 <= ci10_cast7_fu_3810_p1;
        weight_41_V_addr_reg_5380 <= ci10_cast7_fu_3810_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ci_13_reg_5613 <= ci_13_fu_4257_p2;
        input_V_addr_7_reg_5545 <= tmp_384_cast_fu_4246_p1;
        weight_18_V_addr_reg_5550 <= ci12_cast4_fu_4164_p1;
        weight_19_V_addr_reg_5555 <= ci12_cast4_fu_4164_p1;
        weight_20_V_addr_reg_5560 <= ci12_cast4_fu_4164_p1;
        weight_21_V_addr_reg_5565 <= ci12_cast4_fu_4164_p1;
        weight_22_V_addr_reg_5570 <= ci12_cast4_fu_4164_p1;
        weight_23_V_addr_reg_5575 <= ci12_cast4_fu_4164_p1;
        weight_42_V_addr_reg_5580 <= ci12_cast4_fu_4164_p1;
        weight_43_V_addr_reg_5585 <= ci12_cast4_fu_4164_p1;
        weight_44_V_addr_reg_5590 <= ci12_cast4_fu_4164_p1;
        weight_45_V_addr_reg_5595 <= ci12_cast4_fu_4164_p1;
        weight_46_V_addr_reg_5600 <= ci12_cast4_fu_4164_p1;
        weight_47_V_addr_reg_5605 <= ci12_cast4_fu_4164_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_9_reg_4940 <= ci_9_fu_3195_p2;
        input_V_addr_reg_4872 <= tmp_350_cast_fu_3184_p1;
        weight_0_V_addr_reg_4877 <= ci_cast_fu_3102_p1;
        weight_1_V_addr_reg_4882 <= ci_cast_fu_3102_p1;
        weight_24_V_addr_reg_4907 <= ci_cast_fu_3102_p1;
        weight_25_V_addr_reg_4912 <= ci_cast_fu_3102_p1;
        weight_26_V_addr_reg_4917 <= ci_cast_fu_3102_p1;
        weight_27_V_addr_reg_4922 <= ci_cast_fu_3102_p1;
        weight_28_V_addr_reg_4927 <= ci_cast_fu_3102_p1;
        weight_29_V_addr_reg_4932 <= ci_cast_fu_3102_p1;
        weight_2_V_addr_reg_4887 <= ci_cast_fu_3102_p1;
        weight_3_V_addr_reg_4892 <= ci_cast_fu_3102_p1;
        weight_4_V_addr_reg_4897 <= ci_cast_fu_3102_p1;
        weight_5_V_addr_reg_4902 <= ci_cast_fu_3102_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten9_reg_5683))) begin
        co16_mid2_reg_5705 <= co16_mid2_fu_4499_p3;
        h17_cast2_mid2_reg_5717 <= h17_cast2_mid2_fu_4525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_4736 == 1'd0))) begin
        co_cast_mid2_v_reg_4758 <= co_cast_mid2_v_fu_2871_p3;
        h_cast_mid2_reg_4769 <= h_cast_mid2_fu_2919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_4437_p2))) begin
        exitcond_flatten10_reg_5692 <= exitcond_flatten10_fu_4449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_2826_p2 == 1'd0))) begin
        exitcond_flatten8_reg_4745 <= exitcond_flatten8_fu_2838_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        h12_cast6_cast_reg_5458[4 : 0] <= h12_cast6_cast_fu_4083_p1[4 : 0];
        tmp_283_reg_5463[9 : 1] <= tmp_283_fu_4111_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast_cast_reg_4786[4 : 0] <= h1_cast_cast_fu_3021_p1[4 : 0];
        tmp_266_reg_4791[9 : 1] <= tmp_266_fu_3049_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h4_cast_cast_reg_5010[4 : 0] <= h4_cast_cast_fu_3375_p1[4 : 0];
        tmp_269_reg_5015[9 : 1] <= tmp_269_fu_3403_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        h8_cast9_cast_reg_5234[4 : 0] <= h8_cast9_cast_fu_3729_p1[4 : 0];
        tmp_273_reg_5239[9 : 1] <= tmp_273_fu_3757_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_2816 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_5683))) begin
        w18_mid2_reg_5711 <= w18_mid2_fu_4517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_4736 == 1'd0))) begin
        w_mid2_reg_4763 <= w_mid2_fu_2911_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_10_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_10_address0 = ShuffleConvs_1_Downs_266_reg_5492;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_10_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_10_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_10_d0 = tmp_47_fu_4291_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_10_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd42)))) begin
        ShuffleConvs_1_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd42))) begin
        ShuffleConvs_1_Downs_10_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_11_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_11_address0 = ShuffleConvs_1_Downs_244_reg_5277;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_11_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_11_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_11_d0 = tmp_68_5_fu_4077_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_11_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd41)))) begin
        ShuffleConvs_1_Downs_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd41))) begin
        ShuffleConvs_1_Downs_11_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_12_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_12_address0 = ShuffleConvs_1_Downs_243_reg_5272;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_12_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_12_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_12_d0 = tmp_68_4_fu_4049_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_12_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd40)))) begin
        ShuffleConvs_1_Downs_12_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd40))) begin
        ShuffleConvs_1_Downs_12_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_13_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_13_address0 = ShuffleConvs_1_Downs_201_reg_4854;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_13_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_13_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_13_d0 = tmp_56_4_fu_3331_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_13_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd4)))) begin
        ShuffleConvs_1_Downs_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd4))) begin
        ShuffleConvs_1_Downs_13_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_14_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_14_address0 = ShuffleConvs_1_Downs_249_reg_5302;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_14_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_14_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_14_d0 = tmp_68_3_fu_4021_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_14_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd39)))) begin
        ShuffleConvs_1_Downs_14_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd39))) begin
        ShuffleConvs_1_Downs_14_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_15_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_15_address0 = ShuffleConvs_1_Downs_239_reg_5252;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_15_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_15_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_15_d0 = tmp_68_2_fu_3993_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_15_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd38)))) begin
        ShuffleConvs_1_Downs_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd38))) begin
        ShuffleConvs_1_Downs_15_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_16_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_16_address0 = ShuffleConvs_1_Downs_242_reg_5267;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_16_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_16_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_16_d0 = tmp_68_1_fu_3965_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_16_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd37)))) begin
        ShuffleConvs_1_Downs_16_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd37))) begin
        ShuffleConvs_1_Downs_16_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_17_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_17_address0 = ShuffleConvs_1_Downs_250_reg_5307;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_17_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_17_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_17_d0 = tmp_43_fu_3937_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_17_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd36)))) begin
        ShuffleConvs_1_Downs_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd36))) begin
        ShuffleConvs_1_Downs_17_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_18_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_18_address0 = ShuffleConvs_1_Downs_226_reg_5083;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_18_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_18_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_18_d0 = tmp_63_5_fu_3723_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_18_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd35)))) begin
        ShuffleConvs_1_Downs_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd35))) begin
        ShuffleConvs_1_Downs_18_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_19_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_19_address0 = ShuffleConvs_1_Downs_221_reg_5058;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_19_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_19_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_19_d0 = tmp_63_4_fu_3695_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_19_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd34)))) begin
        ShuffleConvs_1_Downs_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd34))) begin
        ShuffleConvs_1_Downs_19_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_1_address0 = ShuffleConvs_1_Downs_218_reg_5043;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_1_d0 = tmp_61_2_fu_3629_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd8)))) begin
        ShuffleConvs_1_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd8))) begin
        ShuffleConvs_1_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_20_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_20_address0 = ShuffleConvs_1_Downs_220_reg_5053;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_20_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_20_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_20_d0 = tmp_63_3_fu_3667_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_20_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd33)))) begin
        ShuffleConvs_1_Downs_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd33))) begin
        ShuffleConvs_1_Downs_20_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_21_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_21_address0 = ShuffleConvs_1_Downs_225_reg_5078;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_21_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_21_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_21_d0 = tmp_63_2_fu_3639_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_21_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd32)))) begin
        ShuffleConvs_1_Downs_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd32))) begin
        ShuffleConvs_1_Downs_21_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_22_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_22_address0 = ShuffleConvs_1_Downs_224_reg_5073;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_22_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_22_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_22_d0 = tmp_63_1_fu_3611_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_22_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd31)))) begin
        ShuffleConvs_1_Downs_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd31))) begin
        ShuffleConvs_1_Downs_22_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_23_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_23_address0 = ShuffleConvs_1_Downs_219_reg_5048;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_23_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_23_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_23_d0 = tmp_39_fu_3583_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_23_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd30)))) begin
        ShuffleConvs_1_Downs_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd30))) begin
        ShuffleConvs_1_Downs_23_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_24_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_24_address0 = ShuffleConvs_1_Downs_197_reg_4834;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_24_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_24_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_24_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_24_d0 = tmp_56_3_fu_3303_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_24_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd3)))) begin
        ShuffleConvs_1_Downs_24_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd3))) begin
        ShuffleConvs_1_Downs_24_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_25_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_25_address0 = ShuffleConvs_1_Downs_199_reg_4844;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_25_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_25_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_25_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_25_d0 = tmp_58_5_fu_3369_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_25_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_25_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd29)))) begin
        ShuffleConvs_1_Downs_25_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd29))) begin
        ShuffleConvs_1_Downs_25_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_26_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_26_address0 = ShuffleConvs_1_Downs_198_reg_4839;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_26_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_26_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_26_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_26_d0 = tmp_58_4_fu_3341_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_26_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_26_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd28)))) begin
        ShuffleConvs_1_Downs_26_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd28))) begin
        ShuffleConvs_1_Downs_26_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_27_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_27_address0 = ShuffleConvs_1_Downs_200_reg_4849;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_27_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_27_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_27_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_27_d0 = tmp_58_3_fu_3313_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_27_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_27_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd27)))) begin
        ShuffleConvs_1_Downs_27_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd27))) begin
        ShuffleConvs_1_Downs_27_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_28_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_28_address0 = ShuffleConvs_1_Downs_196_reg_4829;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_28_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_28_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_28_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_28_d0 = tmp_58_2_fu_3285_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_28_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_28_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd26)))) begin
        ShuffleConvs_1_Downs_28_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd26))) begin
        ShuffleConvs_1_Downs_28_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_29_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_29_address0 = ShuffleConvs_1_Downs_195_reg_4824;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_29_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_29_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_29_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_29_d0 = tmp_58_1_fu_3257_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_29_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_29_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd25)))) begin
        ShuffleConvs_1_Downs_29_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd25))) begin
        ShuffleConvs_1_Downs_29_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_2_address0 = ShuffleConvs_1_Downs_217_reg_5038;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_2_d0 = tmp_61_1_fu_3601_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd7)))) begin
        ShuffleConvs_1_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd7))) begin
        ShuffleConvs_1_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_30_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_30_address0 = ShuffleConvs_1_Downs_194_reg_4819;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_30_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_30_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_30_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_30_d0 = tmp_35_fu_3229_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_30_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_30_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd24)))) begin
        ShuffleConvs_1_Downs_30_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd24))) begin
        ShuffleConvs_1_Downs_30_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_31_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_31_address0 = ShuffleConvs_1_Downs_263_reg_5477;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_31_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_31_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_31_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_31_d0 = tmp_72_5_fu_4421_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_31_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_31_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd23)))) begin
        ShuffleConvs_1_Downs_31_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd23))) begin
        ShuffleConvs_1_Downs_31_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_32_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_32_address0 = ShuffleConvs_1_Downs_270_reg_5512;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_32_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_32_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_32_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_32_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_32_d0 = tmp_72_4_fu_4393_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_32_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_32_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd22)))) begin
        ShuffleConvs_1_Downs_32_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd22))) begin
        ShuffleConvs_1_Downs_32_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_32_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_33_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_33_address0 = ShuffleConvs_1_Downs_271_reg_5517;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_33_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_33_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_33_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_33_d0 = tmp_72_3_fu_4365_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_33_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_33_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd21)))) begin
        ShuffleConvs_1_Downs_33_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd21))) begin
        ShuffleConvs_1_Downs_33_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_33_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_34_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_34_address0 = ShuffleConvs_1_Downs_264_reg_5482;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_34_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_34_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_34_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_34_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_34_d0 = tmp_72_2_fu_4337_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_34_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_34_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd20)))) begin
        ShuffleConvs_1_Downs_34_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd20))) begin
        ShuffleConvs_1_Downs_34_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_34_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_35_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_35_address0 = ShuffleConvs_1_Downs_193_reg_4814;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_35_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_35_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_35_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_35_d0 = tmp_56_2_fu_3275_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_35_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_35_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd2)))) begin
        ShuffleConvs_1_Downs_35_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd2))) begin
        ShuffleConvs_1_Downs_35_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_35_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_36_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_36_address0 = ShuffleConvs_1_Downs_269_reg_5507;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_36_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_36_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_36_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_36_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_36_d0 = tmp_72_1_fu_4309_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_36_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_36_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd19)))) begin
        ShuffleConvs_1_Downs_36_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd19))) begin
        ShuffleConvs_1_Downs_36_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_36_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_37_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_37_address0 = ShuffleConvs_1_Downs_265_reg_5487;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_37_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_37_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_37_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_37_d0 = tmp_45_fu_4281_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_37_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_37_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd18)))) begin
        ShuffleConvs_1_Downs_37_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd18))) begin
        ShuffleConvs_1_Downs_37_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_37_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_38_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_38_address0 = ShuffleConvs_1_Downs_248_reg_5297;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_38_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_38_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_38_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_38_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_38_d0 = tmp_66_5_fu_4067_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_38_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_38_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd17)))) begin
        ShuffleConvs_1_Downs_38_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd17))) begin
        ShuffleConvs_1_Downs_38_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_38_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_39_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_39_address0 = ShuffleConvs_1_Downs_241_reg_5262;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_39_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_39_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_39_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_39_d0 = tmp_66_4_fu_4039_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_39_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_39_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd16)))) begin
        ShuffleConvs_1_Downs_39_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd16))) begin
        ShuffleConvs_1_Downs_39_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_39_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_3_address0 = ShuffleConvs_1_Downs_222_reg_5063;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_3_d0 = tmp_37_fu_3573_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd6)))) begin
        ShuffleConvs_1_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd6))) begin
        ShuffleConvs_1_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_40_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_40_address0 = ShuffleConvs_1_Downs_246_reg_5287;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_40_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_40_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_40_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_40_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_40_d0 = tmp_66_3_fu_4011_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_40_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_40_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd15)))) begin
        ShuffleConvs_1_Downs_40_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd15))) begin
        ShuffleConvs_1_Downs_40_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_40_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_41_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_41_address0 = ShuffleConvs_1_Downs_240_reg_5257;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_41_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_41_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_41_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_41_d0 = tmp_66_2_fu_3983_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_41_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_41_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd14)))) begin
        ShuffleConvs_1_Downs_41_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd14))) begin
        ShuffleConvs_1_Downs_41_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_41_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_42_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_42_address0 = ShuffleConvs_1_Downs_247_reg_5292;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_42_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_42_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_42_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_42_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_42_d0 = tmp_66_1_fu_3955_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_42_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_42_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd13)))) begin
        ShuffleConvs_1_Downs_42_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd13))) begin
        ShuffleConvs_1_Downs_42_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_42_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_43_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_43_address0 = ShuffleConvs_1_Downs_245_reg_5282;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_43_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_1_Downs_43_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_43_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_1_Downs_43_d0 = tmp_41_fu_3927_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_43_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_43_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd12)))) begin
        ShuffleConvs_1_Downs_43_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd12))) begin
        ShuffleConvs_1_Downs_43_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_43_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_44_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_44_address0 = ShuffleConvs_1_Downs_216_reg_5033;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_44_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_44_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_44_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_44_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_44_d0 = tmp_61_5_fu_3713_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_44_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_44_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd11)))) begin
        ShuffleConvs_1_Downs_44_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd11))) begin
        ShuffleConvs_1_Downs_44_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_44_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_45_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_45_address0 = ShuffleConvs_1_Downs_215_reg_5028;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_45_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_45_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_45_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_45_d0 = tmp_61_4_fu_3685_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_45_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_45_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd10)))) begin
        ShuffleConvs_1_Downs_45_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd10))) begin
        ShuffleConvs_1_Downs_45_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_45_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_46_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_46_address0 = ShuffleConvs_1_Downs_192_reg_4809;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_46_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_46_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_46_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_46_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_46_d0 = tmp_56_1_fu_3247_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_46_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_46_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd1)))) begin
        ShuffleConvs_1_Downs_46_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd1))) begin
        ShuffleConvs_1_Downs_46_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_46_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_47_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_47_address0 = ShuffleConvs_1_Downs_191_reg_4804;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_47_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_47_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_47_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_47_d0 = tmp_33_fu_3219_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_47_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_47_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd0)))) begin
        ShuffleConvs_1_Downs_47_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd0))) begin
        ShuffleConvs_1_Downs_47_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_47_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_4_address0 = ShuffleConvs_1_Downs_202_reg_4859;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_4_d0 = tmp_56_5_fu_3359_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd5)))) begin
        ShuffleConvs_1_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd5))) begin
        ShuffleConvs_1_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_5_address0 = ShuffleConvs_1_Downs_274_reg_5532;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_5_d0 = tmp_74_5_fu_4431_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast_mid2_v_reg_4758 == 6'd0) & ~(co_cast_mid2_v_reg_4758 == 6'd1) & ~(co_cast_mid2_v_reg_4758 == 6'd2) & ~(co_cast_mid2_v_reg_4758 == 6'd3) & ~(co_cast_mid2_v_reg_4758 == 6'd4) & ~(co_cast_mid2_v_reg_4758 == 6'd5) & ~(co_cast_mid2_v_reg_4758 == 6'd6) & ~(co_cast_mid2_v_reg_4758 == 6'd7) & ~(co_cast_mid2_v_reg_4758 == 6'd8) & ~(co_cast_mid2_v_reg_4758 == 6'd9) & ~(co_cast_mid2_v_reg_4758 == 6'd10) & ~(co_cast_mid2_v_reg_4758 == 6'd11) & ~(co_cast_mid2_v_reg_4758 == 6'd12) & ~(co_cast_mid2_v_reg_4758 == 6'd13) & ~(co_cast_mid2_v_reg_4758 == 6'd14) & ~(co_cast_mid2_v_reg_4758 == 6'd15) & ~(co_cast_mid2_v_reg_4758 == 6'd16) & ~(co_cast_mid2_v_reg_4758 == 6'd17) & ~(co_cast_mid2_v_reg_4758 == 6'd18) & ~(co_cast_mid2_v_reg_4758 == 6'd19) & ~(co_cast_mid2_v_reg_4758 == 6'd20) & ~(co_cast_mid2_v_reg_4758 == 6'd21) & ~(co_cast_mid2_v_reg_4758 == 6'd22) & ~(co_cast_mid2_v_reg_4758 == 6'd23) & ~(co_cast_mid2_v_reg_4758 == 6'd24) & ~(co_cast_mid2_v_reg_4758 == 6'd25) & ~(co_cast_mid2_v_reg_4758 == 6'd26) & ~(co_cast_mid2_v_reg_4758 == 6'd27) & ~(co_cast_mid2_v_reg_4758 == 6'd28) & ~(co_cast_mid2_v_reg_4758 == 6'd29) & ~(co_cast_mid2_v_reg_4758 == 6'd30) & ~(co_cast_mid2_v_reg_4758 == 6'd31) & ~(co_cast_mid2_v_reg_4758 == 6'd32) & ~(co_cast_mid2_v_reg_4758 == 6'd33) & ~(co_cast_mid2_v_reg_4758 == 6'd34) & ~(co_cast_mid2_v_reg_4758 == 6'd35) & ~(co_cast_mid2_v_reg_4758 == 6'd36) & ~(co_cast_mid2_v_reg_4758 == 6'd37) & ~(co_cast_mid2_v_reg_4758 == 6'd38) & ~(co_cast_mid2_v_reg_4758 == 6'd39) & ~(co_cast_mid2_v_reg_4758 == 6'd40) & ~(co_cast_mid2_v_reg_4758 == 6'd41) & ~(co_cast_mid2_v_reg_4758 == 6'd42) & ~(co_cast_mid2_v_reg_4758 == 6'd43) & ~(co_cast_mid2_v_reg_4758 == 6'd44) & ~(co_cast_mid2_v_reg_4758 == 6'd45) & ~(co_cast_mid2_v_reg_4758 == 6'd46)))) begin
        ShuffleConvs_1_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd0) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd1) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd2) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd3) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd4) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd5) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd6) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd7) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd8) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd9) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd10) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd11) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd12) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd13) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd14) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd15) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd16) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd17) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd18) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd19) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd20) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd21) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd22) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd23) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd24) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd25) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd26) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd27) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd28) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd29) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd30) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd31) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd32) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd33) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd34) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd35) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd36) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd37) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd38) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd39) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd40) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd41) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd42) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd43) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd44) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd45) & ~(ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd46))) begin
        ShuffleConvs_1_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_6_address0 = ShuffleConvs_1_Downs_272_reg_5522;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_6_d0 = tmp_74_4_fu_4403_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd46)))) begin
        ShuffleConvs_1_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd46))) begin
        ShuffleConvs_1_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_7_address0 = ShuffleConvs_1_Downs_273_reg_5527;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_7_d0 = tmp_74_3_fu_4375_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd45)))) begin
        ShuffleConvs_1_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd45))) begin
        ShuffleConvs_1_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_8_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_8_address0 = ShuffleConvs_1_Downs_267_reg_5497;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_8_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_8_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_8_d0 = tmp_74_2_fu_4347_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_8_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd44)))) begin
        ShuffleConvs_1_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd44))) begin
        ShuffleConvs_1_Downs_8_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_9_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_9_address0 = ShuffleConvs_1_Downs_268_reg_5502;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_9_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_9_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_1_Downs_9_d0 = tmp_74_1_fu_4319_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_9_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd43)))) begin
        ShuffleConvs_1_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd43))) begin
        ShuffleConvs_1_Downs_9_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_address0 = tmp_376_cast_fu_4570_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_address0 = ShuffleConvs_1_Downs_223_reg_5068;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_address0 = tmp_331_cast_fu_2964_p1;
    end else begin
        ShuffleConvs_1_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_1_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_1_Downs_d0 = tmp_61_3_fu_3657_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_4758 == 6'd9)))) begin
        ShuffleConvs_1_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_437_fu_4728_p3) & (ap_reg_pp1_iter2_co16_mid2_reg_5705 == 6'd9))) begin
        ShuffleConvs_1_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_2826_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_4437_p2)) begin
        ap_condition_pp1_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state46))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co16_phi_fu_2683_p4 = co16_mid2_reg_5705;
    end else begin
        co16_phi_fu_2683_p4 = co16_reg_2679;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_2485_p4 = co_cast_mid2_v_reg_4758;
    end else begin
        co_phi_fu_2485_p4 = co_reg_2481;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2726_a_V = weight_18_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2726_a_V = weight_12_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2726_a_V = weight_6_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2726_a_V = weight_0_V_q0;
    end else begin
        grp_MUL_DP_fu_2726_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2726_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2726_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2726_b_V = weight_42_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2726_b_V = weight_36_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2726_b_V = weight_30_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2726_b_V = weight_24_V_q0;
    end else begin
        grp_MUL_DP_fu_2726_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2735_a_V = weight_19_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2735_a_V = weight_13_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2735_a_V = weight_7_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2735_a_V = weight_1_V_q0;
    end else begin
        grp_MUL_DP_fu_2735_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2735_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2735_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2735_b_V = weight_43_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2735_b_V = weight_37_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2735_b_V = weight_31_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2735_b_V = weight_25_V_q0;
    end else begin
        grp_MUL_DP_fu_2735_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2744_a_V = weight_20_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2744_a_V = weight_14_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2744_a_V = weight_8_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2744_a_V = weight_2_V_q0;
    end else begin
        grp_MUL_DP_fu_2744_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2744_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2744_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2744_b_V = weight_44_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2744_b_V = weight_38_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2744_b_V = weight_32_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2744_b_V = weight_26_V_q0;
    end else begin
        grp_MUL_DP_fu_2744_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2753_a_V = weight_21_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2753_a_V = weight_15_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2753_a_V = weight_9_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2753_a_V = weight_3_V_q0;
    end else begin
        grp_MUL_DP_fu_2753_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2753_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2753_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2753_b_V = weight_45_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2753_b_V = weight_39_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2753_b_V = weight_33_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2753_b_V = weight_27_V_q0;
    end else begin
        grp_MUL_DP_fu_2753_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2762_a_V = weight_22_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2762_a_V = weight_16_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2762_a_V = weight_10_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2762_a_V = weight_4_V_q0;
    end else begin
        grp_MUL_DP_fu_2762_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2762_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2762_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2762_b_V = weight_46_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2762_b_V = weight_40_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2762_b_V = weight_34_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2762_b_V = weight_28_V_q0;
    end else begin
        grp_MUL_DP_fu_2762_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2771_a_V = weight_23_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2771_a_V = weight_17_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2771_a_V = weight_11_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2771_a_V = weight_5_V_q0;
    end else begin
        grp_MUL_DP_fu_2771_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_2771_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2771_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_2771_b_V = weight_47_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_2771_b_V = weight_41_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_2771_b_V = weight_35_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_2771_b_V = weight_29_V_q0;
    end else begin
        grp_MUL_DP_fu_2771_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h17_phi_fu_2706_p4 = h17_cast2_mid2_reg_5717;
    end else begin
        h17_phi_fu_2706_p4 = h17_reg_2702;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_2508_p4 = h_cast_mid2_reg_4769;
    end else begin
        h_phi_fu_2508_p4 = h_reg_2504;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        input_V_address0 = input_V_addr_7_reg_5545;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        input_V_address0 = input_V_addr_6_reg_5320;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_address0 = input_V_addr_5_reg_5096;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_address0 = input_V_addr_reg_4872;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state36))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_5683) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w18_phi_fu_2718_p4 = w_30_fu_4622_p2;
    end else begin
        w18_phi_fu_2718_p4 = w18_reg_2714;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_4736 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_2520_p4 = w_25_fu_3016_p2;
    end else begin
        w_phi_fu_2520_p4 = w_reg_2516;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_24_V_ce0 = 1'b1;
    end else begin
        weight_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_25_V_ce0 = 1'b1;
    end else begin
        weight_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_26_V_ce0 = 1'b1;
    end else begin
        weight_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_27_V_ce0 = 1'b1;
    end else begin
        weight_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_28_V_ce0 = 1'b1;
    end else begin
        weight_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_29_V_ce0 = 1'b1;
    end else begin
        weight_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_30_V_ce0 = 1'b1;
    end else begin
        weight_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_31_V_ce0 = 1'b1;
    end else begin
        weight_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_32_V_ce0 = 1'b1;
    end else begin
        weight_32_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_33_V_ce0 = 1'b1;
    end else begin
        weight_33_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_34_V_ce0 = 1'b1;
    end else begin
        weight_34_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_35_V_ce0 = 1'b1;
    end else begin
        weight_35_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_36_V_ce0 = 1'b1;
    end else begin
        weight_36_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_37_V_ce0 = 1'b1;
    end else begin
        weight_37_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_38_V_ce0 = 1'b1;
    end else begin
        weight_38_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_39_V_ce0 = 1'b1;
    end else begin
        weight_39_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_40_V_ce0 = 1'b1;
    end else begin
        weight_40_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_41_V_ce0 = 1'b1;
    end else begin
        weight_41_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_42_V_ce0 = 1'b1;
    end else begin
        weight_42_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_43_V_ce0 = 1'b1;
    end else begin
        weight_43_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_44_V_ce0 = 1'b1;
    end else begin
        weight_44_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_45_V_ce0 = 1'b1;
    end else begin
        weight_45_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_46_V_ce0 = 1'b1;
    end else begin
        weight_46_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_47_V_ce0 = 1'b1;
    end else begin
        weight_47_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_2826_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_2826_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond29_fu_3055_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond31_fu_3090_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond34_fu_3189_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond30_fu_3409_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond33_fu_3444_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond37_fu_3543_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'd1 == exitcond32_fu_3763_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond36_fu_3798_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond39_fu_3897_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond35_fu_4117_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond38_fu_4152_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'd1 == exitcond41_fu_4251_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_4437_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_4437_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_1_Downs_10_address1 = ShuffleConvs_1_Downs_299_reg_5796;

assign ShuffleConvs_1_Downs_10_d1 = 8'd0;

assign ShuffleConvs_1_Downs_11_address1 = ShuffleConvs_1_Downs_301_reg_5808;

assign ShuffleConvs_1_Downs_11_d1 = 8'd0;

assign ShuffleConvs_1_Downs_12_address1 = ShuffleConvs_1_Downs_300_reg_5802;

assign ShuffleConvs_1_Downs_12_d1 = 8'd0;

assign ShuffleConvs_1_Downs_13_address1 = ShuffleConvs_1_Downs_326_reg_5958;

assign ShuffleConvs_1_Downs_13_d1 = 8'd0;

assign ShuffleConvs_1_Downs_14_address1 = ShuffleConvs_1_Downs_325_reg_5952;

assign ShuffleConvs_1_Downs_14_d1 = 8'd0;

assign ShuffleConvs_1_Downs_15_address1 = ShuffleConvs_1_Downs_292_reg_5754;

assign ShuffleConvs_1_Downs_15_d1 = 8'd0;

assign ShuffleConvs_1_Downs_16_address1 = ShuffleConvs_1_Downs_298_reg_5790;

assign ShuffleConvs_1_Downs_16_d1 = 8'd0;

assign ShuffleConvs_1_Downs_17_address1 = ShuffleConvs_1_Downs_332_reg_5994;

assign ShuffleConvs_1_Downs_17_d1 = 8'd0;

assign ShuffleConvs_1_Downs_18_address1 = ShuffleConvs_1_Downs_334_reg_6006;

assign ShuffleConvs_1_Downs_18_d1 = 8'd0;

assign ShuffleConvs_1_Downs_19_address1 = ShuffleConvs_1_Downs_321_reg_5928;

assign ShuffleConvs_1_Downs_19_d1 = 8'd0;

assign ShuffleConvs_1_Downs_1_address1 = ShuffleConvs_1_Downs_317_reg_5904;

assign ShuffleConvs_1_Downs_1_d1 = 8'd0;

assign ShuffleConvs_1_Downs_20_address1 = ShuffleConvs_1_Downs_320_reg_5922;

assign ShuffleConvs_1_Downs_20_d1 = 8'd0;

assign ShuffleConvs_1_Downs_21_address1 = ShuffleConvs_1_Downs_333_reg_6000;

assign ShuffleConvs_1_Downs_21_d1 = 8'd0;

assign ShuffleConvs_1_Downs_22_address1 = ShuffleConvs_1_Downs_331_reg_5988;

assign ShuffleConvs_1_Downs_22_d1 = 8'd0;

assign ShuffleConvs_1_Downs_23_address1 = ShuffleConvs_1_Downs_319_reg_5916;

assign ShuffleConvs_1_Downs_23_d1 = 8'd0;

assign ShuffleConvs_1_Downs_24_address1 = ShuffleConvs_1_Downs_318_reg_5910;

assign ShuffleConvs_1_Downs_24_d1 = 8'd0;

assign ShuffleConvs_1_Downs_25_address1 = ShuffleConvs_1_Downs_323_reg_5940;

assign ShuffleConvs_1_Downs_25_d1 = 8'd0;

assign ShuffleConvs_1_Downs_26_address1 = ShuffleConvs_1_Downs_322_reg_5934;

assign ShuffleConvs_1_Downs_26_d1 = 8'd0;

assign ShuffleConvs_1_Downs_27_address1 = ShuffleConvs_1_Downs_324_reg_5946;

assign ShuffleConvs_1_Downs_27_d1 = 8'd0;

assign ShuffleConvs_1_Downs_28_address1 = ShuffleConvs_1_Downs_307_reg_5844;

assign ShuffleConvs_1_Downs_28_d1 = 8'd0;

assign ShuffleConvs_1_Downs_29_address1 = ShuffleConvs_1_Downs_306_reg_5838;

assign ShuffleConvs_1_Downs_29_d1 = 8'd0;

assign ShuffleConvs_1_Downs_2_address1 = ShuffleConvs_1_Downs_316_reg_5898;

assign ShuffleConvs_1_Downs_2_d1 = 8'd0;

assign ShuffleConvs_1_Downs_30_address1 = ShuffleConvs_1_Downs_305_reg_5832;

assign ShuffleConvs_1_Downs_30_d1 = 8'd0;

assign ShuffleConvs_1_Downs_31_address1 = ShuffleConvs_1_Downs_291_reg_5748;

assign ShuffleConvs_1_Downs_31_d1 = 8'd0;

assign ShuffleConvs_1_Downs_32_address1 = ShuffleConvs_1_Downs_309_reg_5856;

assign ShuffleConvs_1_Downs_32_d1 = 8'd0;

assign ShuffleConvs_1_Downs_33_address1 = ShuffleConvs_1_Downs_310_reg_5862;

assign ShuffleConvs_1_Downs_33_d1 = 8'd0;

assign ShuffleConvs_1_Downs_34_address1 = ShuffleConvs_1_Downs_294_reg_5766;

assign ShuffleConvs_1_Downs_34_d1 = 8'd0;

assign ShuffleConvs_1_Downs_35_address1 = ShuffleConvs_1_Downs_295_reg_5772;

assign ShuffleConvs_1_Downs_35_d1 = 8'd0;

assign ShuffleConvs_1_Downs_36_address1 = ShuffleConvs_1_Downs_304_reg_5826;

assign ShuffleConvs_1_Downs_36_d1 = 8'd0;

assign ShuffleConvs_1_Downs_37_address1 = ShuffleConvs_1_Downs_296_reg_5778;

assign ShuffleConvs_1_Downs_37_d1 = 8'd0;

assign ShuffleConvs_1_Downs_38_address1 = ShuffleConvs_1_Downs_313_reg_5880;

assign ShuffleConvs_1_Downs_38_d1 = 8'd0;

assign ShuffleConvs_1_Downs_39_address1 = ShuffleConvs_1_Downs_297_reg_5784;

assign ShuffleConvs_1_Downs_39_d1 = 8'd0;

assign ShuffleConvs_1_Downs_3_address1 = ShuffleConvs_1_Downs_327_reg_5964;

assign ShuffleConvs_1_Downs_3_d1 = 8'd0;

assign ShuffleConvs_1_Downs_40_address1 = ShuffleConvs_1_Downs_311_reg_5868;

assign ShuffleConvs_1_Downs_40_d1 = 8'd0;

assign ShuffleConvs_1_Downs_41_address1 = ShuffleConvs_1_Downs_293_reg_5760;

assign ShuffleConvs_1_Downs_41_d1 = 8'd0;

assign ShuffleConvs_1_Downs_42_address1 = ShuffleConvs_1_Downs_312_reg_5874;

assign ShuffleConvs_1_Downs_42_d1 = 8'd0;

assign ShuffleConvs_1_Downs_43_address1 = ShuffleConvs_1_Downs_308_reg_5850;

assign ShuffleConvs_1_Downs_43_d1 = 8'd0;

assign ShuffleConvs_1_Downs_44_address1 = ShuffleConvs_1_Downs_289_reg_5736;

assign ShuffleConvs_1_Downs_44_d1 = 8'd0;

assign ShuffleConvs_1_Downs_45_address1 = ShuffleConvs_1_Downs_287_reg_5724;

assign ShuffleConvs_1_Downs_45_d1 = 8'd0;

assign ShuffleConvs_1_Downs_46_address1 = ShuffleConvs_1_Downs_290_reg_5742;

assign ShuffleConvs_1_Downs_46_d1 = 8'd0;

assign ShuffleConvs_1_Downs_47_address1 = ShuffleConvs_1_Downs_288_reg_5730;

assign ShuffleConvs_1_Downs_47_d1 = 8'd0;

assign ShuffleConvs_1_Downs_4_address1 = ShuffleConvs_1_Downs_330_reg_5982;

assign ShuffleConvs_1_Downs_4_d1 = 8'd0;

assign ShuffleConvs_1_Downs_5_address1 = ShuffleConvs_1_Downs_329_reg_5976;

assign ShuffleConvs_1_Downs_5_d1 = 8'd0;

assign ShuffleConvs_1_Downs_6_address1 = ShuffleConvs_1_Downs_314_reg_5886;

assign ShuffleConvs_1_Downs_6_d1 = 8'd0;

assign ShuffleConvs_1_Downs_7_address1 = ShuffleConvs_1_Downs_315_reg_5892;

assign ShuffleConvs_1_Downs_7_d1 = 8'd0;

assign ShuffleConvs_1_Downs_8_address1 = ShuffleConvs_1_Downs_302_reg_5814;

assign ShuffleConvs_1_Downs_8_d1 = 8'd0;

assign ShuffleConvs_1_Downs_9_address1 = ShuffleConvs_1_Downs_303_reg_5820;

assign ShuffleConvs_1_Downs_9_d1 = 8'd0;

assign ShuffleConvs_1_Downs_address1 = ShuffleConvs_1_Downs_328_reg_5970;

assign ShuffleConvs_1_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast_mid2_fu_2878_p1;

assign ci10_cast7_fu_3810_p1 = ci10_reg_2622;

assign ci12_cast4_fu_4164_p1 = ci12_reg_2657;

assign ci6_cast_fu_3456_p1 = ci6_reg_2587;

assign ci_10_fu_3549_p2 = (ci6_reg_2587 + 6'd1);

assign ci_11_fu_3903_p2 = (ci10_reg_2622 + 6'd1);

assign ci_13_fu_4257_p2 = (ci12_reg_2657 + 6'd1);

assign ci_9_fu_3195_p2 = (ci_reg_2552 + 6'd1);

assign ci_cast_fu_3102_p1 = ci_reg_2552;

assign co16_mid2_fu_4499_p3 = ((exitcond_flatten10_reg_5692[0:0] === 1'b1) ? co_21_fu_4469_p2 : co16_phi_fu_2683_p4);

assign co_20_fu_2858_p2 = (co_phi_fu_2485_p4 + 6'd1);

assign co_21_fu_4469_p2 = (co16_phi_fu_2683_p4 + 6'd1);

assign co_cast_mid2_fu_2878_p1 = co_cast_mid2_v_fu_2871_p3;

assign co_cast_mid2_v_fu_2871_p3 = ((exitcond_flatten8_reg_4745[0:0] === 1'b1) ? co_20_fu_2858_p2 : co_phi_fu_2485_p4);

assign exitcond29_fu_3055_p2 = ((h1_reg_2528 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond30_fu_3409_p2 = ((h4_reg_2563 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond31_fu_3090_p2 = ((w2_reg_2540 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond32_fu_3763_p2 = ((h8_reg_2598 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond33_fu_3444_p2 = ((w5_reg_2575 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond34_fu_3189_p2 = ((ci_reg_2552 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond35_fu_4117_p2 = ((h12_reg_2633 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond36_fu_3798_p2 = ((w9_reg_2610 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond37_fu_3543_p2 = ((ci6_reg_2587 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond38_fu_4152_p2 = ((w13_reg_2645 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond39_fu_3897_p2 = ((ci10_reg_2622 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond40_fu_4487_p2 = ((w18_phi_fu_2718_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond41_fu_4251_p2 = ((ci12_reg_2657 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond54_mid_fu_2894_p2 = (exitcond_fu_2888_p2 & not_exitcond_flatten_fu_2883_p2);

assign exitcond_flatten10_fu_4449_p2 = ((indvar_flatten6_reg_2691 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_2838_p2 = ((indvar_flatten_reg_2493 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_4437_p2 = ((indvar_flatten5_reg_2668 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2826_p2 = ((indvar_flatten4_reg_2470 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_fu_2888_p2 = ((w_phi_fu_2520_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_4493_p2 = (exitcond40_fu_4487_p2 & not_exitcond_flatten_1_fu_4482_p2);

assign h12_cast6_cast_fu_4083_p1 = h12_reg_2633;

assign h17_cast2_mid2_fu_4525_p3 = ((exitcond_mid_fu_4493_p2[0:0] === 1'b1) ? h_3_fu_4506_p2 : h17_mid_fu_4475_p3);

assign h17_mid_fu_4475_p3 = ((exitcond_flatten10_reg_5692[0:0] === 1'b1) ? 5'd1 : h17_phi_fu_2706_p4);

assign h1_cast_cast_fu_3021_p1 = h1_reg_2528;

assign h4_cast_cast_fu_3375_p1 = h4_reg_2563;

assign h8_cast9_cast_fu_3729_p1 = h8_reg_2598;

assign h_1_fu_3450_p2 = (h4_reg_2563 + 5'd1);

assign h_21_fu_2900_p2 = (h_mid_fu_2864_p3 + 5'd1);

assign h_2_fu_3804_p2 = (h8_reg_2598 + 5'd1);

assign h_3_fu_4506_p2 = (h17_mid_fu_4475_p3 + 5'd1);

assign h_4_fu_4158_p2 = (h12_reg_2633 + 5'd1);

assign h_9_fu_3096_p2 = (h1_reg_2528 + 5'd1);

assign h_cast_mid2_fu_2919_p3 = ((exitcond54_mid_fu_2894_p2[0:0] === 1'b1) ? h_21_fu_2900_p2 : h_mid_fu_2864_p3);

assign h_mid_fu_2864_p3 = ((exitcond_flatten8_reg_4745[0:0] === 1'b1) ? 5'd1 : h_phi_fu_2508_p4);

assign indvar_flatten21_op_fu_4455_p2 = (indvar_flatten6_reg_2691 + 10'd1);

assign indvar_flatten_next1_3_fu_4461_p3 = ((exitcond_flatten10_fu_4449_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten21_op_fu_4455_p2);

assign indvar_flatten_next1_4_fu_4443_p2 = (indvar_flatten5_reg_2668 + 14'd1);

assign indvar_flatten_next1_fu_2832_p2 = (indvar_flatten4_reg_2470 + 14'd1);

assign indvar_flatten_next_fu_2850_p3 = ((exitcond_flatten8_fu_2838_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten_op_fu_2844_p2);

assign indvar_flatten_op_fu_2844_p2 = (indvar_flatten_reg_2493 + 10'd1);

assign not_exitcond_flatten_1_fu_4482_p2 = (exitcond_flatten10_reg_5692 ^ 1'd1);

assign not_exitcond_flatten_fu_2883_p2 = (exitcond_flatten8_reg_4745 ^ 1'd1);

assign p_shl10_cast_fu_3507_p3 = {{tmp_288_fu_3502_p2}, {4'd0}};

assign p_shl11_cast_fu_3523_p1 = tmp_421_fu_3515_p3;

assign p_shl12_cast_fu_3480_p1 = tmp_285_fu_3472_p3;

assign p_shl13_cast_fu_3492_p1 = tmp_286_fu_3484_p3;

assign p_shl14_cast_fu_3741_p1 = tmp_271_fu_3733_p3;

assign p_shl15_cast_fu_3753_p1 = tmp_272_fu_3745_p3;

assign p_shl16_cast_fu_3861_p3 = {{tmp_295_fu_3856_p2}, {4'd0}};

assign p_shl17_cast_fu_3877_p1 = tmp_434_fu_3869_p3;

assign p_shl18_cast_fu_3834_p1 = tmp_292_fu_3826_p3;

assign p_shl19_cast_fu_3846_p1 = tmp_293_fu_3838_p3;

assign p_shl1_cast_fu_2945_p1 = tmp_407_fu_2938_p3;

assign p_shl20_cast_fu_4095_p1 = tmp_281_fu_4087_p3;

assign p_shl21_cast_fu_4107_p1 = tmp_282_fu_4099_p3;

assign p_shl22_cast_fu_4215_p3 = {{tmp_304_fu_4210_p2}, {4'd0}};

assign p_shl23_cast_fu_4231_p1 = tmp_450_fu_4223_p3;

assign p_shl24_cast_fu_4188_p1 = tmp_301_fu_4180_p3;

assign p_shl25_cast_fu_4200_p1 = tmp_302_fu_4192_p3;

assign p_shl26_cast_fu_4540_p1 = tmp_435_fu_4533_p3;

assign p_shl27_cast_fu_4551_p1 = tmp_436_fu_4544_p3;

assign p_shl2_cast_fu_3033_p1 = tmp_264_fu_3025_p3;

assign p_shl3_cast_fu_3045_p1 = tmp_265_fu_3037_p3;

assign p_shl4_cast_fu_3153_p3 = {{tmp_278_fu_3148_p2}, {4'd0}};

assign p_shl5_cast_fu_3169_p1 = tmp_408_fu_3161_p3;

assign p_shl6_cast_fu_3126_p1 = tmp_275_fu_3118_p3;

assign p_shl7_cast_fu_3138_p1 = tmp_276_fu_3130_p3;

assign p_shl8_cast_fu_3387_p1 = tmp_267_fu_3379_p3;

assign p_shl9_cast_fu_3399_p1 = tmp_268_fu_3391_p3;

assign p_shl_cast_fu_2934_p1 = tmp_406_fu_2927_p3;

assign tmp_262_fu_2949_p2 = (p_shl_cast_fu_2934_p1 + p_shl1_cast_fu_2945_p1);

assign tmp_263_fu_2958_p2 = (w_cast_cast_fu_2955_p1 + tmp_262_fu_2949_p2);

assign tmp_264_fu_3025_p3 = {{h1_reg_2528}, {4'd0}};

assign tmp_265_fu_3037_p3 = {{h1_reg_2528}, {1'd0}};

assign tmp_266_fu_3049_p2 = (p_shl3_cast_fu_3045_p1 + p_shl2_cast_fu_3033_p1);

assign tmp_267_fu_3379_p3 = {{h4_reg_2563}, {4'd0}};

assign tmp_268_fu_3391_p3 = {{h4_reg_2563}, {1'd0}};

assign tmp_269_fu_3403_p2 = (p_shl9_cast_fu_3399_p1 + p_shl8_cast_fu_3387_p1);

assign tmp_270_fu_3069_p2 = (tmp_266_reg_4791 + w2_cast_cast_fu_3065_p1);

assign tmp_271_fu_3733_p3 = {{h8_reg_2598}, {4'd0}};

assign tmp_272_fu_3745_p3 = {{h8_reg_2598}, {1'd0}};

assign tmp_273_fu_3757_p2 = (p_shl15_cast_fu_3753_p1 + p_shl14_cast_fu_3741_p1);

assign tmp_274_fu_3423_p2 = (tmp_269_reg_5015 + w5_cast_cast_fu_3419_p1);

assign tmp_275_fu_3118_p3 = {{ci_reg_2552}, {4'd0}};

assign tmp_276_fu_3130_p3 = {{ci_reg_2552}, {1'd0}};

assign tmp_277_fu_3142_p2 = (p_shl6_cast_fu_3126_p1 + p_shl7_cast_fu_3138_p1);

assign tmp_278_fu_3148_p2 = (h1_cast_cast_reg_4786 + tmp_277_fu_3142_p2);

assign tmp_279_fu_3173_p2 = (p_shl4_cast_fu_3153_p3 + p_shl5_cast_fu_3169_p1);

assign tmp_280_fu_3179_p2 = (w2_cast_cast3_reg_4799 + tmp_279_fu_3173_p2);

assign tmp_281_fu_4087_p3 = {{h12_reg_2633}, {4'd0}};

assign tmp_282_fu_4099_p3 = {{h12_reg_2633}, {1'd0}};

assign tmp_283_fu_4111_p2 = (p_shl21_cast_fu_4107_p1 + p_shl20_cast_fu_4095_p1);

assign tmp_284_fu_3777_p2 = (tmp_273_reg_5239 + w9_cast8_cast_fu_3773_p1);

assign tmp_285_fu_3472_p3 = {{ci6_reg_2587}, {4'd0}};

assign tmp_286_fu_3484_p3 = {{ci6_reg_2587}, {1'd0}};

assign tmp_287_fu_3496_p2 = (p_shl12_cast_fu_3480_p1 + p_shl13_cast_fu_3492_p1);

assign tmp_288_fu_3502_p2 = (h4_cast_cast_reg_5010 + tmp_287_fu_3496_p2);

assign tmp_289_fu_3527_p2 = (p_shl10_cast_fu_3507_p3 + p_shl11_cast_fu_3523_p1);

assign tmp_290_fu_3533_p2 = (w5_cast_cast3_reg_5023 + tmp_289_fu_3527_p2);

assign tmp_291_fu_4131_p2 = (tmp_283_reg_5463 + w13_cast5_cast_fu_4127_p1);

assign tmp_292_fu_3826_p3 = {{ci10_reg_2622}, {4'd0}};

assign tmp_293_fu_3838_p3 = {{ci10_reg_2622}, {1'd0}};

assign tmp_294_fu_3850_p2 = (p_shl18_cast_fu_3834_p1 + p_shl19_cast_fu_3846_p1);

assign tmp_295_fu_3856_p2 = (h8_cast9_cast_reg_5234 + tmp_294_fu_3850_p2);

assign tmp_296_fu_3881_p2 = (p_shl16_cast_fu_3861_p3 + p_shl17_cast_fu_3877_p1);

assign tmp_297_fu_3887_p2 = (w9_cast8_cast3_reg_5247 + tmp_296_fu_3881_p2);

assign tmp_298_fu_4512_p2 = (exitcond_mid_fu_4493_p2 | exitcond_flatten10_reg_5692);

assign tmp_299_fu_4555_p2 = (p_shl26_cast_fu_4540_p1 + p_shl27_cast_fu_4551_p1);

assign tmp_300_fu_4564_p2 = (w18_cast1_cast_fu_4561_p1 + tmp_299_fu_4555_p2);

assign tmp_301_fu_4180_p3 = {{ci12_reg_2657}, {4'd0}};

assign tmp_302_fu_4192_p3 = {{ci12_reg_2657}, {1'd0}};

assign tmp_303_fu_4204_p2 = (p_shl24_cast_fu_4188_p1 + p_shl25_cast_fu_4200_p1);

assign tmp_304_fu_4210_p2 = (h12_cast6_cast_reg_5458 + tmp_303_fu_4204_p2);

assign tmp_305_fu_4235_p2 = (p_shl22_cast_fu_4215_p3 + p_shl23_cast_fu_4231_p1);

assign tmp_306_fu_4241_p2 = (w13_cast5_cast1_reg_5472 + tmp_305_fu_4235_p2);

assign tmp_331_cast_fu_2964_p1 = tmp_263_fu_2958_p2;

assign tmp_338_cast_fu_3074_p1 = tmp_270_fu_3069_p2;

assign tmp_33_fu_3219_p2 = (ShuffleConvs_1_Downs_203_reg_4950 + tmp_409_fu_3215_p1);

assign tmp_342_cast_fu_3428_p1 = tmp_274_fu_3423_p2;

assign tmp_350_cast_fu_3184_p1 = tmp_280_fu_3179_p2;

assign tmp_354_cast_fu_3782_p1 = tmp_284_fu_3777_p2;

assign tmp_35_fu_3229_p2 = (ShuffleConvs_1_Downs_204_reg_4955 + tmp_410_fu_3225_p1);

assign tmp_362_cast_fu_3538_p1 = tmp_290_fu_3533_p2;

assign tmp_363_cast_fu_4136_p1 = tmp_291_fu_4131_p2;

assign tmp_371_cast_fu_3892_p1 = tmp_297_fu_3887_p2;

assign tmp_376_cast_fu_4570_p1 = tmp_300_fu_4564_p2;

assign tmp_37_fu_3573_p2 = (ShuffleConvs_1_Downs_227_reg_5174 + tmp_422_fu_3569_p1);

assign tmp_384_cast_fu_4246_p1 = tmp_306_fu_4241_p2;

assign tmp_39_fu_3583_p2 = (ShuffleConvs_1_Downs_228_reg_5179 + tmp_423_fu_3579_p1);

assign tmp_406_fu_2927_p3 = {{h_cast_mid2_reg_4769}, {4'd0}};

assign tmp_407_fu_2938_p3 = {{h_cast_mid2_reg_4769}, {1'd0}};

assign tmp_408_fu_3161_p3 = {{tmp_278_fu_3148_p2}, {1'd0}};

assign tmp_409_fu_3215_p1 = grp_MUL_DP_fu_2726_ap_return_0[7:0];

assign tmp_410_fu_3225_p1 = grp_MUL_DP_fu_2726_ap_return_1[7:0];

assign tmp_411_fu_3243_p1 = grp_MUL_DP_fu_2735_ap_return_0[7:0];

assign tmp_412_fu_3253_p1 = grp_MUL_DP_fu_2735_ap_return_1[7:0];

assign tmp_413_fu_3271_p1 = grp_MUL_DP_fu_2744_ap_return_0[7:0];

assign tmp_414_fu_3281_p1 = grp_MUL_DP_fu_2744_ap_return_1[7:0];

assign tmp_415_fu_3299_p1 = grp_MUL_DP_fu_2753_ap_return_0[7:0];

assign tmp_416_fu_3309_p1 = grp_MUL_DP_fu_2753_ap_return_1[7:0];

assign tmp_417_fu_3327_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_418_fu_3337_p1 = grp_MUL_DP_fu_2762_ap_return_1[7:0];

assign tmp_419_fu_3355_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_41_fu_3927_p2 = (ShuffleConvs_1_Downs_251_reg_5398 + tmp_438_fu_3923_p1);

assign tmp_420_fu_3365_p1 = grp_MUL_DP_fu_2771_ap_return_1[7:0];

assign tmp_421_fu_3515_p3 = {{tmp_288_fu_3502_p2}, {1'd0}};

assign tmp_422_fu_3569_p1 = grp_MUL_DP_fu_2726_ap_return_0[7:0];

assign tmp_423_fu_3579_p1 = grp_MUL_DP_fu_2726_ap_return_1[7:0];

assign tmp_424_fu_3597_p1 = grp_MUL_DP_fu_2735_ap_return_0[7:0];

assign tmp_425_fu_3607_p1 = grp_MUL_DP_fu_2735_ap_return_1[7:0];

assign tmp_426_fu_3625_p1 = grp_MUL_DP_fu_2744_ap_return_0[7:0];

assign tmp_427_fu_3635_p1 = grp_MUL_DP_fu_2744_ap_return_1[7:0];

assign tmp_428_fu_3653_p1 = grp_MUL_DP_fu_2753_ap_return_0[7:0];

assign tmp_429_fu_3663_p1 = grp_MUL_DP_fu_2753_ap_return_1[7:0];

assign tmp_430_fu_3681_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_431_fu_3691_p1 = grp_MUL_DP_fu_2762_ap_return_1[7:0];

assign tmp_432_fu_3709_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_433_fu_3719_p1 = grp_MUL_DP_fu_2771_ap_return_1[7:0];

assign tmp_434_fu_3869_p3 = {{tmp_295_fu_3856_p2}, {1'd0}};

assign tmp_435_fu_4533_p3 = {{h17_cast2_mid2_reg_5717}, {4'd0}};

assign tmp_436_fu_4544_p3 = {{h17_cast2_mid2_reg_5717}, {1'd0}};

assign tmp_437_fu_4728_p3 = tmp_48_fu_4627_p50[32'd7];

assign tmp_438_fu_3923_p1 = grp_MUL_DP_fu_2726_ap_return_0[7:0];

assign tmp_439_fu_3933_p1 = grp_MUL_DP_fu_2726_ap_return_1[7:0];

assign tmp_43_fu_3937_p2 = (ShuffleConvs_1_Downs_252_reg_5403 + tmp_439_fu_3933_p1);

assign tmp_440_fu_3951_p1 = grp_MUL_DP_fu_2735_ap_return_0[7:0];

assign tmp_441_fu_3961_p1 = grp_MUL_DP_fu_2735_ap_return_1[7:0];

assign tmp_442_fu_3979_p1 = grp_MUL_DP_fu_2744_ap_return_0[7:0];

assign tmp_443_fu_3989_p1 = grp_MUL_DP_fu_2744_ap_return_1[7:0];

assign tmp_444_fu_4007_p1 = grp_MUL_DP_fu_2753_ap_return_0[7:0];

assign tmp_445_fu_4017_p1 = grp_MUL_DP_fu_2753_ap_return_1[7:0];

assign tmp_446_fu_4035_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_447_fu_4045_p1 = grp_MUL_DP_fu_2762_ap_return_1[7:0];

assign tmp_448_fu_4063_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_449_fu_4073_p1 = grp_MUL_DP_fu_2771_ap_return_1[7:0];

assign tmp_450_fu_4223_p3 = {{tmp_304_fu_4210_p2}, {1'd0}};

assign tmp_451_fu_4277_p1 = grp_MUL_DP_fu_2726_ap_return_0[7:0];

assign tmp_452_fu_4287_p1 = grp_MUL_DP_fu_2726_ap_return_1[7:0];

assign tmp_453_fu_4305_p1 = grp_MUL_DP_fu_2735_ap_return_0[7:0];

assign tmp_454_fu_4315_p1 = grp_MUL_DP_fu_2735_ap_return_1[7:0];

assign tmp_455_fu_4333_p1 = grp_MUL_DP_fu_2744_ap_return_0[7:0];

assign tmp_456_fu_4343_p1 = grp_MUL_DP_fu_2744_ap_return_1[7:0];

assign tmp_457_fu_4361_p1 = grp_MUL_DP_fu_2753_ap_return_0[7:0];

assign tmp_458_fu_4371_p1 = grp_MUL_DP_fu_2753_ap_return_1[7:0];

assign tmp_459_fu_4389_p1 = grp_MUL_DP_fu_2762_ap_return_0[7:0];

assign tmp_45_fu_4281_p2 = (ShuffleConvs_1_Downs_275_reg_5623 + tmp_451_fu_4277_p1);

assign tmp_460_fu_4399_p1 = grp_MUL_DP_fu_2762_ap_return_1[7:0];

assign tmp_461_fu_4417_p1 = grp_MUL_DP_fu_2771_ap_return_0[7:0];

assign tmp_462_fu_4427_p1 = grp_MUL_DP_fu_2771_ap_return_1[7:0];

assign tmp_47_fu_4291_p2 = (ShuffleConvs_1_Downs_276_reg_5628 + tmp_452_fu_4287_p1);

assign tmp_56_1_fu_3247_p2 = (ShuffleConvs_1_Downs_205_reg_4960 + tmp_411_fu_3243_p1);

assign tmp_56_2_fu_3275_p2 = (ShuffleConvs_1_Downs_207_reg_4970 + tmp_413_fu_3271_p1);

assign tmp_56_3_fu_3303_p2 = (ShuffleConvs_1_Downs_209_reg_4980 + tmp_415_fu_3299_p1);

assign tmp_56_4_fu_3331_p2 = (ShuffleConvs_1_Downs_211_reg_4990 + tmp_417_fu_3327_p1);

assign tmp_56_5_fu_3359_p2 = (ShuffleConvs_1_Downs_213_reg_5000 + tmp_419_fu_3355_p1);

assign tmp_58_1_fu_3257_p2 = (ShuffleConvs_1_Downs_206_reg_4965 + tmp_412_fu_3253_p1);

assign tmp_58_2_fu_3285_p2 = (ShuffleConvs_1_Downs_208_reg_4975 + tmp_414_fu_3281_p1);

assign tmp_58_3_fu_3313_p2 = (ShuffleConvs_1_Downs_210_reg_4985 + tmp_416_fu_3309_p1);

assign tmp_58_4_fu_3341_p2 = (ShuffleConvs_1_Downs_212_reg_4995 + tmp_418_fu_3337_p1);

assign tmp_58_5_fu_3369_p2 = (ShuffleConvs_1_Downs_214_reg_5005 + tmp_420_fu_3365_p1);

assign tmp_61_1_fu_3601_p2 = (ShuffleConvs_1_Downs_229_reg_5184 + tmp_424_fu_3597_p1);

assign tmp_61_2_fu_3629_p2 = (ShuffleConvs_1_Downs_231_reg_5194 + tmp_426_fu_3625_p1);

assign tmp_61_3_fu_3657_p2 = (ShuffleConvs_1_Downs_233_reg_5204 + tmp_428_fu_3653_p1);

assign tmp_61_4_fu_3685_p2 = (ShuffleConvs_1_Downs_235_reg_5214 + tmp_430_fu_3681_p1);

assign tmp_61_5_fu_3713_p2 = (ShuffleConvs_1_Downs_237_reg_5224 + tmp_432_fu_3709_p1);

assign tmp_63_1_fu_3611_p2 = (ShuffleConvs_1_Downs_230_reg_5189 + tmp_425_fu_3607_p1);

assign tmp_63_2_fu_3639_p2 = (ShuffleConvs_1_Downs_232_reg_5199 + tmp_427_fu_3635_p1);

assign tmp_63_3_fu_3667_p2 = (ShuffleConvs_1_Downs_234_reg_5209 + tmp_429_fu_3663_p1);

assign tmp_63_4_fu_3695_p2 = (ShuffleConvs_1_Downs_236_reg_5219 + tmp_431_fu_3691_p1);

assign tmp_63_5_fu_3723_p2 = (ShuffleConvs_1_Downs_238_reg_5229 + tmp_433_fu_3719_p1);

assign tmp_66_1_fu_3955_p2 = (ShuffleConvs_1_Downs_253_reg_5408 + tmp_440_fu_3951_p1);

assign tmp_66_2_fu_3983_p2 = (ShuffleConvs_1_Downs_255_reg_5418 + tmp_442_fu_3979_p1);

assign tmp_66_3_fu_4011_p2 = (ShuffleConvs_1_Downs_257_reg_5428 + tmp_444_fu_4007_p1);

assign tmp_66_4_fu_4039_p2 = (ShuffleConvs_1_Downs_259_reg_5438 + tmp_446_fu_4035_p1);

assign tmp_66_5_fu_4067_p2 = (ShuffleConvs_1_Downs_261_reg_5448 + tmp_448_fu_4063_p1);

assign tmp_68_1_fu_3965_p2 = (ShuffleConvs_1_Downs_254_reg_5413 + tmp_441_fu_3961_p1);

assign tmp_68_2_fu_3993_p2 = (ShuffleConvs_1_Downs_256_reg_5423 + tmp_443_fu_3989_p1);

assign tmp_68_3_fu_4021_p2 = (ShuffleConvs_1_Downs_258_reg_5433 + tmp_445_fu_4017_p1);

assign tmp_68_4_fu_4049_p2 = (ShuffleConvs_1_Downs_260_reg_5443 + tmp_447_fu_4045_p1);

assign tmp_68_5_fu_4077_p2 = (ShuffleConvs_1_Downs_262_reg_5453 + tmp_449_fu_4073_p1);

assign tmp_72_1_fu_4309_p2 = (ShuffleConvs_1_Downs_277_reg_5633 + tmp_453_fu_4305_p1);

assign tmp_72_2_fu_4337_p2 = (ShuffleConvs_1_Downs_279_reg_5643 + tmp_455_fu_4333_p1);

assign tmp_72_3_fu_4365_p2 = (ShuffleConvs_1_Downs_281_reg_5653 + tmp_457_fu_4361_p1);

assign tmp_72_4_fu_4393_p2 = (ShuffleConvs_1_Downs_283_reg_5663 + tmp_459_fu_4389_p1);

assign tmp_72_5_fu_4421_p2 = (ShuffleConvs_1_Downs_285_reg_5673 + tmp_461_fu_4417_p1);

assign tmp_74_1_fu_4319_p2 = (ShuffleConvs_1_Downs_278_reg_5638 + tmp_454_fu_4315_p1);

assign tmp_74_2_fu_4347_p2 = (ShuffleConvs_1_Downs_280_reg_5648 + tmp_456_fu_4343_p1);

assign tmp_74_3_fu_4375_p2 = (ShuffleConvs_1_Downs_282_reg_5658 + tmp_458_fu_4371_p1);

assign tmp_74_4_fu_4403_p2 = (ShuffleConvs_1_Downs_284_reg_5668 + tmp_460_fu_4399_p1);

assign tmp_74_5_fu_4431_p2 = (ShuffleConvs_1_Downs_286_reg_5678 + tmp_462_fu_4427_p1);

assign tmp_s_fu_2906_p2 = (exitcond54_mid_fu_2894_p2 | exitcond_flatten8_reg_4745);

assign w13_cast5_cast1_fu_4123_p1 = w13_reg_2645;

assign w13_cast5_cast_fu_4127_p1 = w13_reg_2645;

assign w18_cast1_cast_fu_4561_p1 = w18_mid2_reg_5711;

assign w18_mid2_fu_4517_p3 = ((tmp_298_fu_4512_p2[0:0] === 1'b1) ? 5'd1 : w18_phi_fu_2718_p4);

assign w2_cast_cast3_fu_3061_p1 = w2_reg_2540;

assign w2_cast_cast_fu_3065_p1 = w2_reg_2540;

assign w5_cast_cast3_fu_3415_p1 = w5_reg_2575;

assign w5_cast_cast_fu_3419_p1 = w5_reg_2575;

assign w9_cast8_cast3_fu_3769_p1 = w9_reg_2610;

assign w9_cast8_cast_fu_3773_p1 = w9_reg_2610;

assign w_25_fu_3016_p2 = (w_mid2_reg_4763 + 5'd1);

assign w_26_fu_3201_p2 = (w2_reg_2540 + 5'd1);

assign w_27_fu_3555_p2 = (w5_reg_2575 + 5'd1);

assign w_28_fu_3909_p2 = (w9_reg_2610 + 5'd1);

assign w_29_fu_4263_p2 = (w13_reg_2645 + 5'd1);

assign w_30_fu_4622_p2 = (w18_mid2_reg_5711 + 5'd1);

assign w_cast_cast_fu_2955_p1 = w_mid2_reg_4763;

assign w_mid2_fu_2911_p3 = ((tmp_s_fu_2906_p2[0:0] === 1'b1) ? 5'd1 : w_phi_fu_2520_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_4877;

assign weight_10_V_address0 = weight_10_V_addr_reg_5121;

assign weight_11_V_address0 = weight_11_V_addr_reg_5126;

assign weight_12_V_address0 = weight_12_V_addr_reg_5325;

assign weight_13_V_address0 = weight_13_V_addr_reg_5330;

assign weight_14_V_address0 = weight_14_V_addr_reg_5335;

assign weight_15_V_address0 = weight_15_V_addr_reg_5340;

assign weight_16_V_address0 = weight_16_V_addr_reg_5345;

assign weight_17_V_address0 = weight_17_V_addr_reg_5350;

assign weight_18_V_address0 = weight_18_V_addr_reg_5550;

assign weight_19_V_address0 = weight_19_V_addr_reg_5555;

assign weight_1_V_address0 = weight_1_V_addr_reg_4882;

assign weight_20_V_address0 = weight_20_V_addr_reg_5560;

assign weight_21_V_address0 = weight_21_V_addr_reg_5565;

assign weight_22_V_address0 = weight_22_V_addr_reg_5570;

assign weight_23_V_address0 = weight_23_V_addr_reg_5575;

assign weight_24_V_address0 = weight_24_V_addr_reg_4907;

assign weight_25_V_address0 = weight_25_V_addr_reg_4912;

assign weight_26_V_address0 = weight_26_V_addr_reg_4917;

assign weight_27_V_address0 = weight_27_V_addr_reg_4922;

assign weight_28_V_address0 = weight_28_V_addr_reg_4927;

assign weight_29_V_address0 = weight_29_V_addr_reg_4932;

assign weight_2_V_address0 = weight_2_V_addr_reg_4887;

assign weight_30_V_address0 = weight_30_V_addr_reg_5131;

assign weight_31_V_address0 = weight_31_V_addr_reg_5136;

assign weight_32_V_address0 = weight_32_V_addr_reg_5141;

assign weight_33_V_address0 = weight_33_V_addr_reg_5146;

assign weight_34_V_address0 = weight_34_V_addr_reg_5151;

assign weight_35_V_address0 = weight_35_V_addr_reg_5156;

assign weight_36_V_address0 = weight_36_V_addr_reg_5355;

assign weight_37_V_address0 = weight_37_V_addr_reg_5360;

assign weight_38_V_address0 = weight_38_V_addr_reg_5365;

assign weight_39_V_address0 = weight_39_V_addr_reg_5370;

assign weight_3_V_address0 = weight_3_V_addr_reg_4892;

assign weight_40_V_address0 = weight_40_V_addr_reg_5375;

assign weight_41_V_address0 = weight_41_V_addr_reg_5380;

assign weight_42_V_address0 = weight_42_V_addr_reg_5580;

assign weight_43_V_address0 = weight_43_V_addr_reg_5585;

assign weight_44_V_address0 = weight_44_V_addr_reg_5590;

assign weight_45_V_address0 = weight_45_V_addr_reg_5595;

assign weight_46_V_address0 = weight_46_V_addr_reg_5600;

assign weight_47_V_address0 = weight_47_V_addr_reg_5605;

assign weight_4_V_address0 = weight_4_V_addr_reg_4897;

assign weight_5_V_address0 = weight_5_V_addr_reg_4902;

assign weight_6_V_address0 = weight_6_V_addr_reg_5101;

assign weight_7_V_address0 = weight_7_V_addr_reg_5106;

assign weight_8_V_address0 = weight_8_V_addr_reg_5111;

assign weight_9_V_address0 = weight_9_V_addr_reg_5116;

always @ (posedge ap_clk) begin
    h1_cast_cast_reg_4786[10:5] <= 6'b000000;
    tmp_266_reg_4791[0] <= 1'b0;
    w2_cast_cast3_reg_4799[14:5] <= 10'b0000000000;
    h4_cast_cast_reg_5010[10:5] <= 6'b000000;
    tmp_269_reg_5015[0] <= 1'b0;
    w5_cast_cast3_reg_5023[14:5] <= 10'b0000000000;
    h8_cast9_cast_reg_5234[10:5] <= 6'b000000;
    tmp_273_reg_5239[0] <= 1'b0;
    w9_cast8_cast3_reg_5247[14:5] <= 10'b0000000000;
    h12_cast6_cast_reg_5458[10:5] <= 6'b000000;
    tmp_283_reg_5463[0] <= 1'b0;
    w13_cast5_cast1_reg_5472[14:5] <= 10'b0000000000;
end

endmodule //subconv_1x1_16p_p
