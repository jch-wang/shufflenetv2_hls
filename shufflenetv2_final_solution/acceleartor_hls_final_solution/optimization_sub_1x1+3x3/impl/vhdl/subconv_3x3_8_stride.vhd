-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subconv_3x3_8_stride is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    weight_V_ce0 : OUT STD_LOGIC;
    weight_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_95_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_95_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_95_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_94_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_94_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_94_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_83_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_83_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_83_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_72_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_72_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_72_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_61_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_61_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_61_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_50_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_50_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_50_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_39_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_39_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_39_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_28_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_28_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_28_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_17_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_17_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_6_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_93_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_93_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_93_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_92_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_92_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_92_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_91_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_91_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_91_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_90_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_90_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_90_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_89_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_89_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_89_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_88_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_88_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_88_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_87_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_87_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_87_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_86_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_86_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_86_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_85_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_85_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_85_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_84_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_84_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_84_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_82_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_82_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_82_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_81_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_81_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_81_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_80_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_80_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_80_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_79_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_79_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_79_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_78_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_78_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_78_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_77_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_77_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_77_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_76_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_76_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_76_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_75_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_75_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_75_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_74_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_74_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_74_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_73_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_73_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_73_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_71_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_71_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_71_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_70_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_70_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_70_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_69_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_69_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_69_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_68_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_68_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_68_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_67_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_67_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_67_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_66_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_66_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_66_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_65_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_65_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_65_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_64_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_64_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_64_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_63_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_63_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_63_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_62_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_62_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_62_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_60_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_60_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_60_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_59_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_59_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_59_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_58_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_58_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_58_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_57_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_57_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_57_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_56_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_56_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_56_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_55_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_55_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_55_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_54_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_54_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_54_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_53_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_53_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_53_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_52_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_52_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_52_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_51_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_51_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_51_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_49_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_49_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_49_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_48_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_48_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_48_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_47_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_47_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_47_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_46_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_46_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_46_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_45_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_45_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_45_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_44_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_44_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_44_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_43_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_43_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_43_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_42_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_42_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_42_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_41_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_41_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_41_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_40_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_40_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_40_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_38_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_38_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_38_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_37_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_37_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_37_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_36_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_36_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_36_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_35_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_35_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_35_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_34_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_34_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_34_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_33_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_33_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_33_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_32_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_32_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_32_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_31_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_31_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_31_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_30_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_30_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_30_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_29_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_29_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_29_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_27_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_27_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_27_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_26_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_26_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_26_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_25_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_25_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_25_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_24_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_24_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_24_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_23_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_23_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_23_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_22_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_22_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_22_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_21_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_21_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_21_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_20_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_20_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_20_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_19_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_19_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_19_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_18_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_18_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_16_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_15_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_14_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_13_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_12_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_11_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_10_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_9_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_9_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_8_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_7_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_5_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_4_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_3_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_2_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_1_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_2_Downs_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ShuffleConvs_2_Downs_ce0 : OUT STD_LOGIC;
    ShuffleConvs_2_Downs_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of subconv_3x3_8_stride is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_28_cast_fu_1547_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_28_cast_reg_2125 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_31_cast_fu_1581_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_cast_reg_2130 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_1_fu_1591_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal co_1_reg_2138 : STD_LOGIC_VECTOR (6 downto 0);
    signal bias_V_addr_reg_2143 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond1_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1626_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2148 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_fu_1638_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_2156 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_addr_reg_2161 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_2_fu_1666_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_reg_2169 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond3_fu_1660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_1_fu_1674_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_fu_1695_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_reg_2179 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal m_1_fu_1707_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_1_reg_2187 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_1752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_reg_2192 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_1_fu_1758_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_1_reg_2197 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal n_1_fu_1784_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_1_reg_2210 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_V_load_reg_2695 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_1_fu_1914_p98 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_2700 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2119_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal co_reg_1438 : STD_LOGIC_VECTOR (6 downto 0);
    signal h_reg_1450 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_reg_1462 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_s_reg_1474 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_reg_1486 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_09_1_reg_1497 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_reg_1509 : STD_LOGIC_VECTOR (1 downto 0);
    signal co_cast7_fu_1520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_cast_fu_1655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_cast_fu_1773_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_cast_fu_1814_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1529_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_fu_1537_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_cast7_cast_fu_1525_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_1541_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_1551_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_fu_1563_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_1559_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_1571_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_fu_1575_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal h_cast6_cast_fu_1597_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_1601_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_fu_1606_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1610_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl4_cast_fu_1618_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_cast5_cast_fu_1646_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_fu_1650_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal m_cast4_cast_fu_1680_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_fu_1684_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_1689_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp1_fu_1713_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_cast_fu_1719_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_1723_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_32_fu_1728_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_33_fu_1740_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl7_cast_fu_1748_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl6_cast_fu_1736_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_cast3_cast_fu_1764_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_1768_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_fu_1790_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_cast_fu_1796_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_1800_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_cast_cast_fu_1805_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_1809_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component ShuffleNetV2_mux_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        din17 : IN STD_LOGIC_VECTOR (7 downto 0);
        din18 : IN STD_LOGIC_VECTOR (7 downto 0);
        din19 : IN STD_LOGIC_VECTOR (7 downto 0);
        din20 : IN STD_LOGIC_VECTOR (7 downto 0);
        din21 : IN STD_LOGIC_VECTOR (7 downto 0);
        din22 : IN STD_LOGIC_VECTOR (7 downto 0);
        din23 : IN STD_LOGIC_VECTOR (7 downto 0);
        din24 : IN STD_LOGIC_VECTOR (7 downto 0);
        din25 : IN STD_LOGIC_VECTOR (7 downto 0);
        din26 : IN STD_LOGIC_VECTOR (7 downto 0);
        din27 : IN STD_LOGIC_VECTOR (7 downto 0);
        din28 : IN STD_LOGIC_VECTOR (7 downto 0);
        din29 : IN STD_LOGIC_VECTOR (7 downto 0);
        din30 : IN STD_LOGIC_VECTOR (7 downto 0);
        din31 : IN STD_LOGIC_VECTOR (7 downto 0);
        din32 : IN STD_LOGIC_VECTOR (7 downto 0);
        din33 : IN STD_LOGIC_VECTOR (7 downto 0);
        din34 : IN STD_LOGIC_VECTOR (7 downto 0);
        din35 : IN STD_LOGIC_VECTOR (7 downto 0);
        din36 : IN STD_LOGIC_VECTOR (7 downto 0);
        din37 : IN STD_LOGIC_VECTOR (7 downto 0);
        din38 : IN STD_LOGIC_VECTOR (7 downto 0);
        din39 : IN STD_LOGIC_VECTOR (7 downto 0);
        din40 : IN STD_LOGIC_VECTOR (7 downto 0);
        din41 : IN STD_LOGIC_VECTOR (7 downto 0);
        din42 : IN STD_LOGIC_VECTOR (7 downto 0);
        din43 : IN STD_LOGIC_VECTOR (7 downto 0);
        din44 : IN STD_LOGIC_VECTOR (7 downto 0);
        din45 : IN STD_LOGIC_VECTOR (7 downto 0);
        din46 : IN STD_LOGIC_VECTOR (7 downto 0);
        din47 : IN STD_LOGIC_VECTOR (7 downto 0);
        din48 : IN STD_LOGIC_VECTOR (7 downto 0);
        din49 : IN STD_LOGIC_VECTOR (7 downto 0);
        din50 : IN STD_LOGIC_VECTOR (7 downto 0);
        din51 : IN STD_LOGIC_VECTOR (7 downto 0);
        din52 : IN STD_LOGIC_VECTOR (7 downto 0);
        din53 : IN STD_LOGIC_VECTOR (7 downto 0);
        din54 : IN STD_LOGIC_VECTOR (7 downto 0);
        din55 : IN STD_LOGIC_VECTOR (7 downto 0);
        din56 : IN STD_LOGIC_VECTOR (7 downto 0);
        din57 : IN STD_LOGIC_VECTOR (7 downto 0);
        din58 : IN STD_LOGIC_VECTOR (7 downto 0);
        din59 : IN STD_LOGIC_VECTOR (7 downto 0);
        din60 : IN STD_LOGIC_VECTOR (7 downto 0);
        din61 : IN STD_LOGIC_VECTOR (7 downto 0);
        din62 : IN STD_LOGIC_VECTOR (7 downto 0);
        din63 : IN STD_LOGIC_VECTOR (7 downto 0);
        din64 : IN STD_LOGIC_VECTOR (7 downto 0);
        din65 : IN STD_LOGIC_VECTOR (7 downto 0);
        din66 : IN STD_LOGIC_VECTOR (7 downto 0);
        din67 : IN STD_LOGIC_VECTOR (7 downto 0);
        din68 : IN STD_LOGIC_VECTOR (7 downto 0);
        din69 : IN STD_LOGIC_VECTOR (7 downto 0);
        din70 : IN STD_LOGIC_VECTOR (7 downto 0);
        din71 : IN STD_LOGIC_VECTOR (7 downto 0);
        din72 : IN STD_LOGIC_VECTOR (7 downto 0);
        din73 : IN STD_LOGIC_VECTOR (7 downto 0);
        din74 : IN STD_LOGIC_VECTOR (7 downto 0);
        din75 : IN STD_LOGIC_VECTOR (7 downto 0);
        din76 : IN STD_LOGIC_VECTOR (7 downto 0);
        din77 : IN STD_LOGIC_VECTOR (7 downto 0);
        din78 : IN STD_LOGIC_VECTOR (7 downto 0);
        din79 : IN STD_LOGIC_VECTOR (7 downto 0);
        din80 : IN STD_LOGIC_VECTOR (7 downto 0);
        din81 : IN STD_LOGIC_VECTOR (7 downto 0);
        din82 : IN STD_LOGIC_VECTOR (7 downto 0);
        din83 : IN STD_LOGIC_VECTOR (7 downto 0);
        din84 : IN STD_LOGIC_VECTOR (7 downto 0);
        din85 : IN STD_LOGIC_VECTOR (7 downto 0);
        din86 : IN STD_LOGIC_VECTOR (7 downto 0);
        din87 : IN STD_LOGIC_VECTOR (7 downto 0);
        din88 : IN STD_LOGIC_VECTOR (7 downto 0);
        din89 : IN STD_LOGIC_VECTOR (7 downto 0);
        din90 : IN STD_LOGIC_VECTOR (7 downto 0);
        din91 : IN STD_LOGIC_VECTOR (7 downto 0);
        din92 : IN STD_LOGIC_VECTOR (7 downto 0);
        din93 : IN STD_LOGIC_VECTOR (7 downto 0);
        din94 : IN STD_LOGIC_VECTOR (7 downto 0);
        din95 : IN STD_LOGIC_VECTOR (7 downto 0);
        din96 : IN STD_LOGIC_VECTOR (7 downto 0);
        din97 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ShuffleNetV2_mac_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    ShuffleNetV2_mux_g8j_x_U910 : component ShuffleNetV2_mux_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din1 => ShuffleConvs_2_Downs_95_q0,
        din2 => ShuffleConvs_2_Downs_94_q0,
        din3 => ShuffleConvs_2_Downs_83_q0,
        din4 => ShuffleConvs_2_Downs_72_q0,
        din5 => ShuffleConvs_2_Downs_61_q0,
        din6 => ShuffleConvs_2_Downs_50_q0,
        din7 => ShuffleConvs_2_Downs_39_q0,
        din8 => ShuffleConvs_2_Downs_28_q0,
        din9 => ShuffleConvs_2_Downs_17_q0,
        din10 => ShuffleConvs_2_Downs_6_q0,
        din11 => ShuffleConvs_2_Downs_93_q0,
        din12 => ShuffleConvs_2_Downs_92_q0,
        din13 => ShuffleConvs_2_Downs_91_q0,
        din14 => ShuffleConvs_2_Downs_90_q0,
        din15 => ShuffleConvs_2_Downs_89_q0,
        din16 => ShuffleConvs_2_Downs_88_q0,
        din17 => ShuffleConvs_2_Downs_87_q0,
        din18 => ShuffleConvs_2_Downs_86_q0,
        din19 => ShuffleConvs_2_Downs_85_q0,
        din20 => ShuffleConvs_2_Downs_84_q0,
        din21 => ShuffleConvs_2_Downs_82_q0,
        din22 => ShuffleConvs_2_Downs_81_q0,
        din23 => ShuffleConvs_2_Downs_80_q0,
        din24 => ShuffleConvs_2_Downs_79_q0,
        din25 => ShuffleConvs_2_Downs_78_q0,
        din26 => ShuffleConvs_2_Downs_77_q0,
        din27 => ShuffleConvs_2_Downs_76_q0,
        din28 => ShuffleConvs_2_Downs_75_q0,
        din29 => ShuffleConvs_2_Downs_74_q0,
        din30 => ShuffleConvs_2_Downs_73_q0,
        din31 => ShuffleConvs_2_Downs_71_q0,
        din32 => ShuffleConvs_2_Downs_70_q0,
        din33 => ShuffleConvs_2_Downs_69_q0,
        din34 => ShuffleConvs_2_Downs_68_q0,
        din35 => ShuffleConvs_2_Downs_67_q0,
        din36 => ShuffleConvs_2_Downs_66_q0,
        din37 => ShuffleConvs_2_Downs_65_q0,
        din38 => ShuffleConvs_2_Downs_64_q0,
        din39 => ShuffleConvs_2_Downs_63_q0,
        din40 => ShuffleConvs_2_Downs_62_q0,
        din41 => ShuffleConvs_2_Downs_60_q0,
        din42 => ShuffleConvs_2_Downs_59_q0,
        din43 => ShuffleConvs_2_Downs_58_q0,
        din44 => ShuffleConvs_2_Downs_57_q0,
        din45 => ShuffleConvs_2_Downs_56_q0,
        din46 => ShuffleConvs_2_Downs_55_q0,
        din47 => ShuffleConvs_2_Downs_54_q0,
        din48 => ShuffleConvs_2_Downs_53_q0,
        din49 => ShuffleConvs_2_Downs_52_q0,
        din50 => ShuffleConvs_2_Downs_51_q0,
        din51 => ShuffleConvs_2_Downs_49_q0,
        din52 => ShuffleConvs_2_Downs_48_q0,
        din53 => ShuffleConvs_2_Downs_47_q0,
        din54 => ShuffleConvs_2_Downs_46_q0,
        din55 => ShuffleConvs_2_Downs_45_q0,
        din56 => ShuffleConvs_2_Downs_44_q0,
        din57 => ShuffleConvs_2_Downs_43_q0,
        din58 => ShuffleConvs_2_Downs_42_q0,
        din59 => ShuffleConvs_2_Downs_41_q0,
        din60 => ShuffleConvs_2_Downs_40_q0,
        din61 => ShuffleConvs_2_Downs_38_q0,
        din62 => ShuffleConvs_2_Downs_37_q0,
        din63 => ShuffleConvs_2_Downs_36_q0,
        din64 => ShuffleConvs_2_Downs_35_q0,
        din65 => ShuffleConvs_2_Downs_34_q0,
        din66 => ShuffleConvs_2_Downs_33_q0,
        din67 => ShuffleConvs_2_Downs_32_q0,
        din68 => ShuffleConvs_2_Downs_31_q0,
        din69 => ShuffleConvs_2_Downs_30_q0,
        din70 => ShuffleConvs_2_Downs_29_q0,
        din71 => ShuffleConvs_2_Downs_27_q0,
        din72 => ShuffleConvs_2_Downs_26_q0,
        din73 => ShuffleConvs_2_Downs_25_q0,
        din74 => ShuffleConvs_2_Downs_24_q0,
        din75 => ShuffleConvs_2_Downs_23_q0,
        din76 => ShuffleConvs_2_Downs_22_q0,
        din77 => ShuffleConvs_2_Downs_21_q0,
        din78 => ShuffleConvs_2_Downs_20_q0,
        din79 => ShuffleConvs_2_Downs_19_q0,
        din80 => ShuffleConvs_2_Downs_18_q0,
        din81 => ShuffleConvs_2_Downs_16_q0,
        din82 => ShuffleConvs_2_Downs_15_q0,
        din83 => ShuffleConvs_2_Downs_14_q0,
        din84 => ShuffleConvs_2_Downs_13_q0,
        din85 => ShuffleConvs_2_Downs_12_q0,
        din86 => ShuffleConvs_2_Downs_11_q0,
        din87 => ShuffleConvs_2_Downs_10_q0,
        din88 => ShuffleConvs_2_Downs_9_q0,
        din89 => ShuffleConvs_2_Downs_8_q0,
        din90 => ShuffleConvs_2_Downs_7_q0,
        din91 => ShuffleConvs_2_Downs_5_q0,
        din92 => ShuffleConvs_2_Downs_4_q0,
        din93 => ShuffleConvs_2_Downs_3_q0,
        din94 => ShuffleConvs_2_Downs_2_q0,
        din95 => ShuffleConvs_2_Downs_1_q0,
        din96 => ShuffleConvs_2_Downs_q0,
        din97 => co_reg_1438,
        dout => tmp_1_fu_1914_p98);

    ShuffleNetV2_mac_cud_x_U911 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_1_reg_2700,
        din1 => weight_V_load_reg_2695,
        din2 => p_09_1_reg_1497,
        dout => grp_fu_2119_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    co_reg_1438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond2_fu_1632_p2 = ap_const_lv1_1))) then 
                co_reg_1438 <= co_1_reg_2138;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_1438 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    h_reg_1450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_1585_p2 = ap_const_lv1_0))) then 
                h_reg_1450 <= ap_const_lv3_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_fu_1660_p2 = ap_const_lv1_1))) then 
                h_reg_1450 <= h_1_fu_1674_p2;
            end if; 
        end if;
    end process;

    m_reg_1486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = exitcond_fu_1778_p2))) then 
                m_reg_1486 <= m_1_reg_2187;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond3_fu_1660_p2))) then 
                m_reg_1486 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    n_reg_1509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond4_fu_1701_p2))) then 
                n_reg_1509 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                n_reg_1509 <= n_1_reg_2210;
            end if; 
        end if;
    end process;

    p_09_1_reg_1497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond4_fu_1701_p2))) then 
                p_09_1_reg_1497 <= p_s_reg_1474;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                p_09_1_reg_1497 <= grp_fu_2119_p3;
            end if; 
        end if;
    end process;

    p_s_reg_1474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = exitcond_fu_1778_p2))) then 
                p_s_reg_1474 <= p_09_1_reg_1497;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond3_fu_1660_p2))) then 
                p_s_reg_1474 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    w_reg_1462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond2_fu_1632_p2))) then 
                w_reg_1462 <= ap_const_lv3_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                w_reg_1462 <= w_1_reg_2197;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_1585_p2 = ap_const_lv1_0))) then
                bias_V_addr_reg_2143 <= co_cast7_fu_1520_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                co_1_reg_2138 <= co_1_fu_1591_p2;
                tmp_28_cast_reg_2125 <= tmp_28_cast_fu_1547_p1;
                    tmp_31_cast_reg_2130(11 downto 1) <= tmp_31_cast_fu_1581_p1(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                m_1_reg_2187 <= m_1_fu_1707_p2;
                tmp_31_reg_2179 <= tmp_31_fu_1695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                n_1_reg_2210 <= n_1_fu_1784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                output_V_addr_reg_2161 <= tmp_36_cast_fu_1655_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_1_reg_2700 <= tmp_1_fu_1914_p98;
                weight_V_load_reg_2695 <= weight_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp_28_reg_2148(12 downto 1) <= tmp_28_fu_1626_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond3_fu_1660_p2))) then
                    tmp_2_reg_2169(3 downto 1) <= tmp_2_fu_1666_p3(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond4_fu_1701_p2))) then
                    tmp_34_reg_2192(7 downto 1) <= tmp_34_fu_1752_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond2_fu_1632_p2))) then
                    tmp_reg_2156(3 downto 1) <= tmp_fu_1638_p3(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = exitcond4_fu_1701_p2))) then
                w_1_reg_2197 <= w_1_fu_1758_p2;
            end if;
        end if;
    end process;
    tmp_31_cast_reg_2130(0) <= '0';
    tmp_28_reg_2148(0) <= '0';
    tmp_reg_2156(0) <= '0';
    tmp_2_reg_2169(0) <= '0';
    tmp_34_reg_2192(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_1585_p2, ap_CS_fsm_state3, exitcond2_fu_1632_p2, ap_CS_fsm_state4, exitcond3_fu_1660_p2, ap_CS_fsm_state5, exitcond4_fu_1701_p2, ap_CS_fsm_state6, exitcond_fu_1778_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_1585_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond2_fu_1632_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond3_fu_1660_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond4_fu_1701_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = exitcond_fu_1778_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ShuffleConvs_2_Downs_10_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_10_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_10_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_11_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_11_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_11_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_12_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_12_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_12_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_13_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_13_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_13_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_14_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_14_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_14_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_15_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_15_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_15_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_16_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_16_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_16_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_17_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_17_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_17_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_18_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_18_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_18_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_19_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_19_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_19_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_1_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_1_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_1_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_20_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_20_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_20_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_21_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_21_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_21_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_22_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_22_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_22_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_23_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_23_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_23_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_24_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_24_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_24_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_25_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_25_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_25_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_26_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_26_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_26_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_27_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_27_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_27_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_28_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_28_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_28_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_29_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_29_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_29_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_2_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_2_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_2_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_30_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_30_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_30_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_31_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_31_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_31_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_32_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_32_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_32_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_33_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_33_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_33_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_34_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_34_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_34_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_35_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_35_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_35_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_36_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_36_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_36_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_37_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_37_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_37_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_38_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_38_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_38_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_39_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_39_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_39_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_3_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_3_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_3_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_40_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_40_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_40_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_41_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_41_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_41_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_42_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_42_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_42_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_43_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_43_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_43_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_44_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_44_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_44_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_45_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_45_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_45_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_46_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_46_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_46_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_47_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_47_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_47_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_48_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_48_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_48_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_49_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_49_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_49_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_4_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_4_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_4_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_50_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_50_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_50_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_51_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_51_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_51_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_52_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_52_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_52_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_53_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_53_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_53_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_54_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_54_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_54_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_55_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_55_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_55_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_56_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_56_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_56_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_57_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_57_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_57_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_58_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_58_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_58_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_59_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_59_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_59_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_5_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_5_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_5_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_60_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_60_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_60_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_61_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_61_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_61_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_62_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_62_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_62_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_63_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_63_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_63_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_64_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_64_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_64_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_65_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_65_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_65_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_66_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_66_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_66_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_67_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_67_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_67_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_68_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_68_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_68_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_69_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_69_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_69_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_6_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_6_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_6_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_70_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_70_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_70_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_71_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_71_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_71_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_72_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_72_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_72_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_73_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_73_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_73_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_73_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_74_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_74_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_74_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_74_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_75_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_75_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_75_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_75_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_76_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_76_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_76_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_76_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_77_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_77_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_77_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_77_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_78_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_78_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_78_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_78_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_79_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_79_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_79_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_79_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_7_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_7_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_7_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_80_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_80_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_80_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_80_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_81_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_81_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_81_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_81_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_82_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_82_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_82_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_82_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_83_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_83_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_83_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_83_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_84_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_84_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_84_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_84_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_85_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_85_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_85_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_85_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_86_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_86_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_86_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_86_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_87_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_87_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_87_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_87_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_88_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_88_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_88_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_88_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_89_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_89_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_89_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_89_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_8_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_8_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_8_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_90_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_90_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_90_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_90_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_91_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_91_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_91_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_91_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_92_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_92_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_92_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_92_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_93_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_93_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_93_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_93_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_94_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_94_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_94_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_94_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_95_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_95_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_95_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_95_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_9_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_9_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_9_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ShuffleConvs_2_Downs_address0 <= tmp_44_cast_fu_1814_p1(7 - 1 downto 0);

    ShuffleConvs_2_Downs_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ShuffleConvs_2_Downs_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_2_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_1585_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_1585_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond1_fu_1585_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_1585_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_address0 <= bias_V_addr_reg_2143;

    bias_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    co_1_fu_1591_p2 <= std_logic_vector(unsigned(co_reg_1438) + unsigned(ap_const_lv7_1));
    co_cast7_cast_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_1438),10));
    co_cast7_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_1438),32));
    exitcond1_fu_1585_p2 <= "1" when (co_reg_1438 = ap_const_lv7_60) else "0";
    exitcond2_fu_1632_p2 <= "1" when (h_reg_1450 = ap_const_lv3_5) else "0";
    exitcond3_fu_1660_p2 <= "1" when (w_reg_1462 = ap_const_lv3_5) else "0";
    exitcond4_fu_1701_p2 <= "1" when (m_reg_1486 = ap_const_lv2_3) else "0";
    exitcond_fu_1778_p2 <= "1" when (n_reg_1509 = ap_const_lv2_3) else "0";
    h_1_fu_1674_p2 <= std_logic_vector(unsigned(h_reg_1450) + unsigned(ap_const_lv3_1));
    h_cast6_cast_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_1450),12));
    m_1_fu_1707_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(m_reg_1486));
    m_cast4_cast_fu_1680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_1486),11));
    n_1_fu_1784_p2 <= std_logic_vector(unsigned(n_reg_1509) + unsigned(ap_const_lv2_1));
    n_cast3_cast_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_reg_1509),11));
    output_V_address0 <= output_V_addr_reg_2161;

    output_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_V_d0 <= std_logic_vector(unsigned(bias_V_q0) + unsigned(p_s_reg_1474));

    output_V_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl1_cast_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_1563_p3),11));
    p_shl2_cast_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1529_p3),10));
    p_shl3_cast_fu_1610_p3 <= (tmp_20_fu_1606_p1 & ap_const_lv3_0);
    p_shl4_cast_fu_1618_p3 <= (tmp_27_fu_1601_p2 & ap_const_lv1_0);
    p_shl6_cast_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_1728_p3),8));
    p_shl7_cast_fu_1748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1740_p3),8));
    p_shl_cast_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1551_p3),11));
        tmp1_cast_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_fu_1713_p2),4));

    tmp1_fu_1713_p2 <= (m_reg_1486 xor ap_const_lv2_2);
        tmp2_cast_fu_1796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_1790_p2),4));

    tmp2_fu_1790_p2 <= (n_reg_1509 xor ap_const_lv2_2);
    tmp_20_fu_1606_p1 <= tmp_27_fu_1601_p2(10 - 1 downto 0);
    tmp_21_fu_1689_p2 <= std_logic_vector(shift_left(unsigned(tmp_30_fu_1684_p2),to_integer(unsigned('0' & ap_const_lv11_2(11-1 downto 0)))));
    tmp_23_fu_1541_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_1537_p1) - unsigned(co_cast7_cast_fu_1525_p1));
    tmp_24_fu_1551_p3 <= (co_reg_1438 & ap_const_lv3_0);
    tmp_25_fu_1563_p3 <= (co_reg_1438 & ap_const_lv1_0);
    tmp_26_fu_1575_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1559_p1) - unsigned(p_shl1_cast_fu_1571_p1));
    tmp_27_fu_1601_p2 <= std_logic_vector(unsigned(h_cast6_cast_fu_1597_p1) + unsigned(tmp_31_cast_reg_2130));
        tmp_28_cast_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_1541_p2),11));

    tmp_28_fu_1626_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1610_p3) - unsigned(p_shl4_cast_fu_1618_p3));
    tmp_29_fu_1650_p2 <= std_logic_vector(unsigned(tmp_28_reg_2148) + unsigned(w_cast5_cast_fu_1646_p1));
    tmp_2_fu_1666_p3 <= (w_reg_1462 & ap_const_lv1_0);
    tmp_30_fu_1684_p2 <= std_logic_vector(unsigned(m_cast4_cast_fu_1680_p1) + unsigned(tmp_28_cast_reg_2125));
        tmp_31_cast_fu_1581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_1575_p2),12));

    tmp_31_fu_1695_p2 <= std_logic_vector(unsigned(tmp_21_fu_1689_p2) - unsigned(tmp_30_fu_1684_p2));
    tmp_32_fu_1728_p3 <= (tmp_5_fu_1723_p2 & ap_const_lv3_0);
    tmp_33_fu_1740_p3 <= (tmp_5_fu_1723_p2 & ap_const_lv1_0);
    tmp_34_fu_1752_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1748_p1) + unsigned(p_shl6_cast_fu_1736_p1));
    tmp_35_fu_1768_p2 <= std_logic_vector(unsigned(tmp_31_reg_2179) + unsigned(n_cast3_cast_fu_1764_p1));
    tmp_36_cast_fu_1655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1650_p2),32));
    tmp_36_fu_1809_p2 <= std_logic_vector(unsigned(tmp_34_reg_2192) + unsigned(tmp_8_cast_cast_fu_1805_p1));
    tmp_43_cast_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1768_p2),32));
    tmp_44_cast_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_1809_p2),32));
    tmp_5_fu_1723_p2 <= std_logic_vector(unsigned(tmp_reg_2156) + unsigned(tmp1_cast_fu_1719_p1));
    tmp_8_cast_cast_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1800_p2),8));
    tmp_8_fu_1800_p2 <= std_logic_vector(unsigned(tmp_2_reg_2169) + unsigned(tmp2_cast_fu_1796_p1));
    tmp_fu_1638_p3 <= (h_reg_1450 & ap_const_lv1_0);
    tmp_s_fu_1529_p3 <= (co_reg_1438 & ap_const_lv2_0);
    w_1_fu_1758_p2 <= std_logic_vector(unsigned(w_reg_1462) + unsigned(ap_const_lv3_1));
    w_cast5_cast_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_1462),13));
    weight_V_address0 <= tmp_43_cast_fu_1773_p1(10 - 1 downto 0);

    weight_V_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            weight_V_ce0 <= ap_const_logic_1;
        else 
            weight_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
