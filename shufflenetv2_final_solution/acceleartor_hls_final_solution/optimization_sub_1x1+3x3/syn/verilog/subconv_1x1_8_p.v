// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_24_V_address0,
        weight_24_V_ce0,
        weight_24_V_q0,
        weight_25_V_address0,
        weight_25_V_ce0,
        weight_25_V_q0,
        weight_26_V_address0,
        weight_26_V_ce0,
        weight_26_V_q0,
        weight_27_V_address0,
        weight_27_V_ce0,
        weight_27_V_q0,
        weight_28_V_address0,
        weight_28_V_ce0,
        weight_28_V_q0,
        weight_29_V_address0,
        weight_29_V_ce0,
        weight_29_V_q0,
        weight_30_V_address0,
        weight_30_V_ce0,
        weight_30_V_q0,
        weight_31_V_address0,
        weight_31_V_ce0,
        weight_31_V_q0,
        weight_32_V_address0,
        weight_32_V_ce0,
        weight_32_V_q0,
        weight_33_V_address0,
        weight_33_V_ce0,
        weight_33_V_q0,
        weight_34_V_address0,
        weight_34_V_ce0,
        weight_34_V_q0,
        weight_35_V_address0,
        weight_35_V_ce0,
        weight_35_V_q0,
        weight_36_V_address0,
        weight_36_V_ce0,
        weight_36_V_q0,
        weight_37_V_address0,
        weight_37_V_ce0,
        weight_37_V_q0,
        weight_38_V_address0,
        weight_38_V_ce0,
        weight_38_V_q0,
        weight_39_V_address0,
        weight_39_V_ce0,
        weight_39_V_q0,
        weight_40_V_address0,
        weight_40_V_ce0,
        weight_40_V_q0,
        weight_41_V_address0,
        weight_41_V_ce0,
        weight_41_V_q0,
        weight_42_V_address0,
        weight_42_V_ce0,
        weight_42_V_q0,
        weight_43_V_address0,
        weight_43_V_ce0,
        weight_43_V_q0,
        weight_44_V_address0,
        weight_44_V_ce0,
        weight_44_V_q0,
        weight_45_V_address0,
        weight_45_V_ce0,
        weight_45_V_q0,
        weight_46_V_address0,
        weight_46_V_ce0,
        weight_46_V_q0,
        weight_47_V_address0,
        weight_47_V_ce0,
        weight_47_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        buffer1_1_48_8x8_p_V_48_address0,
        buffer1_1_48_8x8_p_V_48_ce0,
        buffer1_1_48_8x8_p_V_48_we0,
        buffer1_1_48_8x8_p_V_48_d0,
        buffer1_1_48_8x8_p_V_48_q0,
        buffer1_1_48_8x8_p_V_48_address1,
        buffer1_1_48_8x8_p_V_48_ce1,
        buffer1_1_48_8x8_p_V_48_we1,
        buffer1_1_48_8x8_p_V_48_d1,
        buffer1_1_48_8x8_p_V_24_address0,
        buffer1_1_48_8x8_p_V_24_ce0,
        buffer1_1_48_8x8_p_V_24_we0,
        buffer1_1_48_8x8_p_V_24_d0,
        buffer1_1_48_8x8_p_V_24_q0,
        buffer1_1_48_8x8_p_V_24_address1,
        buffer1_1_48_8x8_p_V_24_ce1,
        buffer1_1_48_8x8_p_V_24_we1,
        buffer1_1_48_8x8_p_V_24_d1,
        buffer1_1_48_8x8_p_V_1_address0,
        buffer1_1_48_8x8_p_V_1_ce0,
        buffer1_1_48_8x8_p_V_1_we0,
        buffer1_1_48_8x8_p_V_1_d0,
        buffer1_1_48_8x8_p_V_1_q0,
        buffer1_1_48_8x8_p_V_1_address1,
        buffer1_1_48_8x8_p_V_1_ce1,
        buffer1_1_48_8x8_p_V_1_we1,
        buffer1_1_48_8x8_p_V_1_d1,
        buffer1_1_48_8x8_p_V_25_address0,
        buffer1_1_48_8x8_p_V_25_ce0,
        buffer1_1_48_8x8_p_V_25_we0,
        buffer1_1_48_8x8_p_V_25_d0,
        buffer1_1_48_8x8_p_V_25_q0,
        buffer1_1_48_8x8_p_V_25_address1,
        buffer1_1_48_8x8_p_V_25_ce1,
        buffer1_1_48_8x8_p_V_25_we1,
        buffer1_1_48_8x8_p_V_25_d1,
        buffer1_1_48_8x8_p_V_2_address0,
        buffer1_1_48_8x8_p_V_2_ce0,
        buffer1_1_48_8x8_p_V_2_we0,
        buffer1_1_48_8x8_p_V_2_d0,
        buffer1_1_48_8x8_p_V_2_q0,
        buffer1_1_48_8x8_p_V_2_address1,
        buffer1_1_48_8x8_p_V_2_ce1,
        buffer1_1_48_8x8_p_V_2_we1,
        buffer1_1_48_8x8_p_V_2_d1,
        buffer1_1_48_8x8_p_V_26_address0,
        buffer1_1_48_8x8_p_V_26_ce0,
        buffer1_1_48_8x8_p_V_26_we0,
        buffer1_1_48_8x8_p_V_26_d0,
        buffer1_1_48_8x8_p_V_26_q0,
        buffer1_1_48_8x8_p_V_26_address1,
        buffer1_1_48_8x8_p_V_26_ce1,
        buffer1_1_48_8x8_p_V_26_we1,
        buffer1_1_48_8x8_p_V_26_d1,
        buffer1_1_48_8x8_p_V_3_address0,
        buffer1_1_48_8x8_p_V_3_ce0,
        buffer1_1_48_8x8_p_V_3_we0,
        buffer1_1_48_8x8_p_V_3_d0,
        buffer1_1_48_8x8_p_V_3_q0,
        buffer1_1_48_8x8_p_V_3_address1,
        buffer1_1_48_8x8_p_V_3_ce1,
        buffer1_1_48_8x8_p_V_3_we1,
        buffer1_1_48_8x8_p_V_3_d1,
        buffer1_1_48_8x8_p_V_27_address0,
        buffer1_1_48_8x8_p_V_27_ce0,
        buffer1_1_48_8x8_p_V_27_we0,
        buffer1_1_48_8x8_p_V_27_d0,
        buffer1_1_48_8x8_p_V_27_q0,
        buffer1_1_48_8x8_p_V_27_address1,
        buffer1_1_48_8x8_p_V_27_ce1,
        buffer1_1_48_8x8_p_V_27_we1,
        buffer1_1_48_8x8_p_V_27_d1,
        buffer1_1_48_8x8_p_V_4_address0,
        buffer1_1_48_8x8_p_V_4_ce0,
        buffer1_1_48_8x8_p_V_4_we0,
        buffer1_1_48_8x8_p_V_4_d0,
        buffer1_1_48_8x8_p_V_4_q0,
        buffer1_1_48_8x8_p_V_4_address1,
        buffer1_1_48_8x8_p_V_4_ce1,
        buffer1_1_48_8x8_p_V_4_we1,
        buffer1_1_48_8x8_p_V_4_d1,
        buffer1_1_48_8x8_p_V_28_address0,
        buffer1_1_48_8x8_p_V_28_ce0,
        buffer1_1_48_8x8_p_V_28_we0,
        buffer1_1_48_8x8_p_V_28_d0,
        buffer1_1_48_8x8_p_V_28_q0,
        buffer1_1_48_8x8_p_V_28_address1,
        buffer1_1_48_8x8_p_V_28_ce1,
        buffer1_1_48_8x8_p_V_28_we1,
        buffer1_1_48_8x8_p_V_28_d1,
        buffer1_1_48_8x8_p_V_5_address0,
        buffer1_1_48_8x8_p_V_5_ce0,
        buffer1_1_48_8x8_p_V_5_we0,
        buffer1_1_48_8x8_p_V_5_d0,
        buffer1_1_48_8x8_p_V_5_q0,
        buffer1_1_48_8x8_p_V_5_address1,
        buffer1_1_48_8x8_p_V_5_ce1,
        buffer1_1_48_8x8_p_V_5_we1,
        buffer1_1_48_8x8_p_V_5_d1,
        buffer1_1_48_8x8_p_V_29_address0,
        buffer1_1_48_8x8_p_V_29_ce0,
        buffer1_1_48_8x8_p_V_29_we0,
        buffer1_1_48_8x8_p_V_29_d0,
        buffer1_1_48_8x8_p_V_29_q0,
        buffer1_1_48_8x8_p_V_29_address1,
        buffer1_1_48_8x8_p_V_29_ce1,
        buffer1_1_48_8x8_p_V_29_we1,
        buffer1_1_48_8x8_p_V_29_d1,
        buffer1_1_48_8x8_p_V_6_address0,
        buffer1_1_48_8x8_p_V_6_ce0,
        buffer1_1_48_8x8_p_V_6_we0,
        buffer1_1_48_8x8_p_V_6_d0,
        buffer1_1_48_8x8_p_V_6_q0,
        buffer1_1_48_8x8_p_V_6_address1,
        buffer1_1_48_8x8_p_V_6_ce1,
        buffer1_1_48_8x8_p_V_6_we1,
        buffer1_1_48_8x8_p_V_6_d1,
        buffer1_1_48_8x8_p_V_30_address0,
        buffer1_1_48_8x8_p_V_30_ce0,
        buffer1_1_48_8x8_p_V_30_we0,
        buffer1_1_48_8x8_p_V_30_d0,
        buffer1_1_48_8x8_p_V_30_q0,
        buffer1_1_48_8x8_p_V_30_address1,
        buffer1_1_48_8x8_p_V_30_ce1,
        buffer1_1_48_8x8_p_V_30_we1,
        buffer1_1_48_8x8_p_V_30_d1,
        buffer1_1_48_8x8_p_V_7_address0,
        buffer1_1_48_8x8_p_V_7_ce0,
        buffer1_1_48_8x8_p_V_7_we0,
        buffer1_1_48_8x8_p_V_7_d0,
        buffer1_1_48_8x8_p_V_7_q0,
        buffer1_1_48_8x8_p_V_7_address1,
        buffer1_1_48_8x8_p_V_7_ce1,
        buffer1_1_48_8x8_p_V_7_we1,
        buffer1_1_48_8x8_p_V_7_d1,
        buffer1_1_48_8x8_p_V_31_address0,
        buffer1_1_48_8x8_p_V_31_ce0,
        buffer1_1_48_8x8_p_V_31_we0,
        buffer1_1_48_8x8_p_V_31_d0,
        buffer1_1_48_8x8_p_V_31_q0,
        buffer1_1_48_8x8_p_V_31_address1,
        buffer1_1_48_8x8_p_V_31_ce1,
        buffer1_1_48_8x8_p_V_31_we1,
        buffer1_1_48_8x8_p_V_31_d1,
        buffer1_1_48_8x8_p_V_8_address0,
        buffer1_1_48_8x8_p_V_8_ce0,
        buffer1_1_48_8x8_p_V_8_we0,
        buffer1_1_48_8x8_p_V_8_d0,
        buffer1_1_48_8x8_p_V_8_q0,
        buffer1_1_48_8x8_p_V_8_address1,
        buffer1_1_48_8x8_p_V_8_ce1,
        buffer1_1_48_8x8_p_V_8_we1,
        buffer1_1_48_8x8_p_V_8_d1,
        buffer1_1_48_8x8_p_V_32_address0,
        buffer1_1_48_8x8_p_V_32_ce0,
        buffer1_1_48_8x8_p_V_32_we0,
        buffer1_1_48_8x8_p_V_32_d0,
        buffer1_1_48_8x8_p_V_32_q0,
        buffer1_1_48_8x8_p_V_32_address1,
        buffer1_1_48_8x8_p_V_32_ce1,
        buffer1_1_48_8x8_p_V_32_we1,
        buffer1_1_48_8x8_p_V_32_d1,
        buffer1_1_48_8x8_p_V_9_address0,
        buffer1_1_48_8x8_p_V_9_ce0,
        buffer1_1_48_8x8_p_V_9_we0,
        buffer1_1_48_8x8_p_V_9_d0,
        buffer1_1_48_8x8_p_V_9_q0,
        buffer1_1_48_8x8_p_V_9_address1,
        buffer1_1_48_8x8_p_V_9_ce1,
        buffer1_1_48_8x8_p_V_9_we1,
        buffer1_1_48_8x8_p_V_9_d1,
        buffer1_1_48_8x8_p_V_33_address0,
        buffer1_1_48_8x8_p_V_33_ce0,
        buffer1_1_48_8x8_p_V_33_we0,
        buffer1_1_48_8x8_p_V_33_d0,
        buffer1_1_48_8x8_p_V_33_q0,
        buffer1_1_48_8x8_p_V_33_address1,
        buffer1_1_48_8x8_p_V_33_ce1,
        buffer1_1_48_8x8_p_V_33_we1,
        buffer1_1_48_8x8_p_V_33_d1,
        buffer1_1_48_8x8_p_V_10_address0,
        buffer1_1_48_8x8_p_V_10_ce0,
        buffer1_1_48_8x8_p_V_10_we0,
        buffer1_1_48_8x8_p_V_10_d0,
        buffer1_1_48_8x8_p_V_10_q0,
        buffer1_1_48_8x8_p_V_10_address1,
        buffer1_1_48_8x8_p_V_10_ce1,
        buffer1_1_48_8x8_p_V_10_we1,
        buffer1_1_48_8x8_p_V_10_d1,
        buffer1_1_48_8x8_p_V_34_address0,
        buffer1_1_48_8x8_p_V_34_ce0,
        buffer1_1_48_8x8_p_V_34_we0,
        buffer1_1_48_8x8_p_V_34_d0,
        buffer1_1_48_8x8_p_V_34_q0,
        buffer1_1_48_8x8_p_V_34_address1,
        buffer1_1_48_8x8_p_V_34_ce1,
        buffer1_1_48_8x8_p_V_34_we1,
        buffer1_1_48_8x8_p_V_34_d1,
        buffer1_1_48_8x8_p_V_11_address0,
        buffer1_1_48_8x8_p_V_11_ce0,
        buffer1_1_48_8x8_p_V_11_we0,
        buffer1_1_48_8x8_p_V_11_d0,
        buffer1_1_48_8x8_p_V_11_q0,
        buffer1_1_48_8x8_p_V_11_address1,
        buffer1_1_48_8x8_p_V_11_ce1,
        buffer1_1_48_8x8_p_V_11_we1,
        buffer1_1_48_8x8_p_V_11_d1,
        buffer1_1_48_8x8_p_V_35_address0,
        buffer1_1_48_8x8_p_V_35_ce0,
        buffer1_1_48_8x8_p_V_35_we0,
        buffer1_1_48_8x8_p_V_35_d0,
        buffer1_1_48_8x8_p_V_35_q0,
        buffer1_1_48_8x8_p_V_35_address1,
        buffer1_1_48_8x8_p_V_35_ce1,
        buffer1_1_48_8x8_p_V_35_we1,
        buffer1_1_48_8x8_p_V_35_d1,
        buffer1_1_48_8x8_p_V_12_address0,
        buffer1_1_48_8x8_p_V_12_ce0,
        buffer1_1_48_8x8_p_V_12_we0,
        buffer1_1_48_8x8_p_V_12_d0,
        buffer1_1_48_8x8_p_V_12_q0,
        buffer1_1_48_8x8_p_V_12_address1,
        buffer1_1_48_8x8_p_V_12_ce1,
        buffer1_1_48_8x8_p_V_12_we1,
        buffer1_1_48_8x8_p_V_12_d1,
        buffer1_1_48_8x8_p_V_36_address0,
        buffer1_1_48_8x8_p_V_36_ce0,
        buffer1_1_48_8x8_p_V_36_we0,
        buffer1_1_48_8x8_p_V_36_d0,
        buffer1_1_48_8x8_p_V_36_q0,
        buffer1_1_48_8x8_p_V_36_address1,
        buffer1_1_48_8x8_p_V_36_ce1,
        buffer1_1_48_8x8_p_V_36_we1,
        buffer1_1_48_8x8_p_V_36_d1,
        buffer1_1_48_8x8_p_V_13_address0,
        buffer1_1_48_8x8_p_V_13_ce0,
        buffer1_1_48_8x8_p_V_13_we0,
        buffer1_1_48_8x8_p_V_13_d0,
        buffer1_1_48_8x8_p_V_13_q0,
        buffer1_1_48_8x8_p_V_13_address1,
        buffer1_1_48_8x8_p_V_13_ce1,
        buffer1_1_48_8x8_p_V_13_we1,
        buffer1_1_48_8x8_p_V_13_d1,
        buffer1_1_48_8x8_p_V_37_address0,
        buffer1_1_48_8x8_p_V_37_ce0,
        buffer1_1_48_8x8_p_V_37_we0,
        buffer1_1_48_8x8_p_V_37_d0,
        buffer1_1_48_8x8_p_V_37_q0,
        buffer1_1_48_8x8_p_V_37_address1,
        buffer1_1_48_8x8_p_V_37_ce1,
        buffer1_1_48_8x8_p_V_37_we1,
        buffer1_1_48_8x8_p_V_37_d1,
        buffer1_1_48_8x8_p_V_14_address0,
        buffer1_1_48_8x8_p_V_14_ce0,
        buffer1_1_48_8x8_p_V_14_we0,
        buffer1_1_48_8x8_p_V_14_d0,
        buffer1_1_48_8x8_p_V_14_q0,
        buffer1_1_48_8x8_p_V_14_address1,
        buffer1_1_48_8x8_p_V_14_ce1,
        buffer1_1_48_8x8_p_V_14_we1,
        buffer1_1_48_8x8_p_V_14_d1,
        buffer1_1_48_8x8_p_V_38_address0,
        buffer1_1_48_8x8_p_V_38_ce0,
        buffer1_1_48_8x8_p_V_38_we0,
        buffer1_1_48_8x8_p_V_38_d0,
        buffer1_1_48_8x8_p_V_38_q0,
        buffer1_1_48_8x8_p_V_38_address1,
        buffer1_1_48_8x8_p_V_38_ce1,
        buffer1_1_48_8x8_p_V_38_we1,
        buffer1_1_48_8x8_p_V_38_d1,
        buffer1_1_48_8x8_p_V_15_address0,
        buffer1_1_48_8x8_p_V_15_ce0,
        buffer1_1_48_8x8_p_V_15_we0,
        buffer1_1_48_8x8_p_V_15_d0,
        buffer1_1_48_8x8_p_V_15_q0,
        buffer1_1_48_8x8_p_V_15_address1,
        buffer1_1_48_8x8_p_V_15_ce1,
        buffer1_1_48_8x8_p_V_15_we1,
        buffer1_1_48_8x8_p_V_15_d1,
        buffer1_1_48_8x8_p_V_39_address0,
        buffer1_1_48_8x8_p_V_39_ce0,
        buffer1_1_48_8x8_p_V_39_we0,
        buffer1_1_48_8x8_p_V_39_d0,
        buffer1_1_48_8x8_p_V_39_q0,
        buffer1_1_48_8x8_p_V_39_address1,
        buffer1_1_48_8x8_p_V_39_ce1,
        buffer1_1_48_8x8_p_V_39_we1,
        buffer1_1_48_8x8_p_V_39_d1,
        buffer1_1_48_8x8_p_V_16_address0,
        buffer1_1_48_8x8_p_V_16_ce0,
        buffer1_1_48_8x8_p_V_16_we0,
        buffer1_1_48_8x8_p_V_16_d0,
        buffer1_1_48_8x8_p_V_16_q0,
        buffer1_1_48_8x8_p_V_16_address1,
        buffer1_1_48_8x8_p_V_16_ce1,
        buffer1_1_48_8x8_p_V_16_we1,
        buffer1_1_48_8x8_p_V_16_d1,
        buffer1_1_48_8x8_p_V_40_address0,
        buffer1_1_48_8x8_p_V_40_ce0,
        buffer1_1_48_8x8_p_V_40_we0,
        buffer1_1_48_8x8_p_V_40_d0,
        buffer1_1_48_8x8_p_V_40_q0,
        buffer1_1_48_8x8_p_V_40_address1,
        buffer1_1_48_8x8_p_V_40_ce1,
        buffer1_1_48_8x8_p_V_40_we1,
        buffer1_1_48_8x8_p_V_40_d1,
        buffer1_1_48_8x8_p_V_17_address0,
        buffer1_1_48_8x8_p_V_17_ce0,
        buffer1_1_48_8x8_p_V_17_we0,
        buffer1_1_48_8x8_p_V_17_d0,
        buffer1_1_48_8x8_p_V_17_q0,
        buffer1_1_48_8x8_p_V_17_address1,
        buffer1_1_48_8x8_p_V_17_ce1,
        buffer1_1_48_8x8_p_V_17_we1,
        buffer1_1_48_8x8_p_V_17_d1,
        buffer1_1_48_8x8_p_V_41_address0,
        buffer1_1_48_8x8_p_V_41_ce0,
        buffer1_1_48_8x8_p_V_41_we0,
        buffer1_1_48_8x8_p_V_41_d0,
        buffer1_1_48_8x8_p_V_41_q0,
        buffer1_1_48_8x8_p_V_41_address1,
        buffer1_1_48_8x8_p_V_41_ce1,
        buffer1_1_48_8x8_p_V_41_we1,
        buffer1_1_48_8x8_p_V_41_d1,
        buffer1_1_48_8x8_p_V_18_address0,
        buffer1_1_48_8x8_p_V_18_ce0,
        buffer1_1_48_8x8_p_V_18_we0,
        buffer1_1_48_8x8_p_V_18_d0,
        buffer1_1_48_8x8_p_V_18_q0,
        buffer1_1_48_8x8_p_V_18_address1,
        buffer1_1_48_8x8_p_V_18_ce1,
        buffer1_1_48_8x8_p_V_18_we1,
        buffer1_1_48_8x8_p_V_18_d1,
        buffer1_1_48_8x8_p_V_42_address0,
        buffer1_1_48_8x8_p_V_42_ce0,
        buffer1_1_48_8x8_p_V_42_we0,
        buffer1_1_48_8x8_p_V_42_d0,
        buffer1_1_48_8x8_p_V_42_q0,
        buffer1_1_48_8x8_p_V_42_address1,
        buffer1_1_48_8x8_p_V_42_ce1,
        buffer1_1_48_8x8_p_V_42_we1,
        buffer1_1_48_8x8_p_V_42_d1,
        buffer1_1_48_8x8_p_V_19_address0,
        buffer1_1_48_8x8_p_V_19_ce0,
        buffer1_1_48_8x8_p_V_19_we0,
        buffer1_1_48_8x8_p_V_19_d0,
        buffer1_1_48_8x8_p_V_19_q0,
        buffer1_1_48_8x8_p_V_19_address1,
        buffer1_1_48_8x8_p_V_19_ce1,
        buffer1_1_48_8x8_p_V_19_we1,
        buffer1_1_48_8x8_p_V_19_d1,
        buffer1_1_48_8x8_p_V_43_address0,
        buffer1_1_48_8x8_p_V_43_ce0,
        buffer1_1_48_8x8_p_V_43_we0,
        buffer1_1_48_8x8_p_V_43_d0,
        buffer1_1_48_8x8_p_V_43_q0,
        buffer1_1_48_8x8_p_V_43_address1,
        buffer1_1_48_8x8_p_V_43_ce1,
        buffer1_1_48_8x8_p_V_43_we1,
        buffer1_1_48_8x8_p_V_43_d1,
        buffer1_1_48_8x8_p_V_20_address0,
        buffer1_1_48_8x8_p_V_20_ce0,
        buffer1_1_48_8x8_p_V_20_we0,
        buffer1_1_48_8x8_p_V_20_d0,
        buffer1_1_48_8x8_p_V_20_q0,
        buffer1_1_48_8x8_p_V_20_address1,
        buffer1_1_48_8x8_p_V_20_ce1,
        buffer1_1_48_8x8_p_V_20_we1,
        buffer1_1_48_8x8_p_V_20_d1,
        buffer1_1_48_8x8_p_V_44_address0,
        buffer1_1_48_8x8_p_V_44_ce0,
        buffer1_1_48_8x8_p_V_44_we0,
        buffer1_1_48_8x8_p_V_44_d0,
        buffer1_1_48_8x8_p_V_44_q0,
        buffer1_1_48_8x8_p_V_44_address1,
        buffer1_1_48_8x8_p_V_44_ce1,
        buffer1_1_48_8x8_p_V_44_we1,
        buffer1_1_48_8x8_p_V_44_d1,
        buffer1_1_48_8x8_p_V_21_address0,
        buffer1_1_48_8x8_p_V_21_ce0,
        buffer1_1_48_8x8_p_V_21_we0,
        buffer1_1_48_8x8_p_V_21_d0,
        buffer1_1_48_8x8_p_V_21_q0,
        buffer1_1_48_8x8_p_V_21_address1,
        buffer1_1_48_8x8_p_V_21_ce1,
        buffer1_1_48_8x8_p_V_21_we1,
        buffer1_1_48_8x8_p_V_21_d1,
        buffer1_1_48_8x8_p_V_45_address0,
        buffer1_1_48_8x8_p_V_45_ce0,
        buffer1_1_48_8x8_p_V_45_we0,
        buffer1_1_48_8x8_p_V_45_d0,
        buffer1_1_48_8x8_p_V_45_q0,
        buffer1_1_48_8x8_p_V_45_address1,
        buffer1_1_48_8x8_p_V_45_ce1,
        buffer1_1_48_8x8_p_V_45_we1,
        buffer1_1_48_8x8_p_V_45_d1,
        buffer1_1_48_8x8_p_V_22_address0,
        buffer1_1_48_8x8_p_V_22_ce0,
        buffer1_1_48_8x8_p_V_22_we0,
        buffer1_1_48_8x8_p_V_22_d0,
        buffer1_1_48_8x8_p_V_22_q0,
        buffer1_1_48_8x8_p_V_22_address1,
        buffer1_1_48_8x8_p_V_22_ce1,
        buffer1_1_48_8x8_p_V_22_we1,
        buffer1_1_48_8x8_p_V_22_d1,
        buffer1_1_48_8x8_p_V_46_address0,
        buffer1_1_48_8x8_p_V_46_ce0,
        buffer1_1_48_8x8_p_V_46_we0,
        buffer1_1_48_8x8_p_V_46_d0,
        buffer1_1_48_8x8_p_V_46_q0,
        buffer1_1_48_8x8_p_V_46_address1,
        buffer1_1_48_8x8_p_V_46_ce1,
        buffer1_1_48_8x8_p_V_46_we1,
        buffer1_1_48_8x8_p_V_46_d1,
        buffer1_1_48_8x8_p_V_23_address0,
        buffer1_1_48_8x8_p_V_23_ce0,
        buffer1_1_48_8x8_p_V_23_we0,
        buffer1_1_48_8x8_p_V_23_d0,
        buffer1_1_48_8x8_p_V_23_q0,
        buffer1_1_48_8x8_p_V_23_address1,
        buffer1_1_48_8x8_p_V_23_ce1,
        buffer1_1_48_8x8_p_V_23_we1,
        buffer1_1_48_8x8_p_V_23_d1,
        buffer1_1_48_8x8_p_V_47_address0,
        buffer1_1_48_8x8_p_V_47_ce0,
        buffer1_1_48_8x8_p_V_47_we0,
        buffer1_1_48_8x8_p_V_47_d0,
        buffer1_1_48_8x8_p_V_47_q0,
        buffer1_1_48_8x8_p_V_47_address1,
        buffer1_1_48_8x8_p_V_47_ce1,
        buffer1_1_48_8x8_p_V_47_we1,
        buffer1_1_48_8x8_p_V_47_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state5 = 14'd4;
parameter    ap_ST_fsm_state6 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_state8 = 14'd32;
parameter    ap_ST_fsm_state9 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [5:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [5:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [5:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [5:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [5:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [5:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [5:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [5:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [5:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [5:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [5:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [5:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [5:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [5:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [5:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [5:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [5:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [5:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [5:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [5:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [5:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [5:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [5:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [5:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [5:0] weight_24_V_address0;
output   weight_24_V_ce0;
input  [7:0] weight_24_V_q0;
output  [5:0] weight_25_V_address0;
output   weight_25_V_ce0;
input  [7:0] weight_25_V_q0;
output  [5:0] weight_26_V_address0;
output   weight_26_V_ce0;
input  [7:0] weight_26_V_q0;
output  [5:0] weight_27_V_address0;
output   weight_27_V_ce0;
input  [7:0] weight_27_V_q0;
output  [5:0] weight_28_V_address0;
output   weight_28_V_ce0;
input  [7:0] weight_28_V_q0;
output  [5:0] weight_29_V_address0;
output   weight_29_V_ce0;
input  [7:0] weight_29_V_q0;
output  [5:0] weight_30_V_address0;
output   weight_30_V_ce0;
input  [7:0] weight_30_V_q0;
output  [5:0] weight_31_V_address0;
output   weight_31_V_ce0;
input  [7:0] weight_31_V_q0;
output  [5:0] weight_32_V_address0;
output   weight_32_V_ce0;
input  [7:0] weight_32_V_q0;
output  [5:0] weight_33_V_address0;
output   weight_33_V_ce0;
input  [7:0] weight_33_V_q0;
output  [5:0] weight_34_V_address0;
output   weight_34_V_ce0;
input  [7:0] weight_34_V_q0;
output  [5:0] weight_35_V_address0;
output   weight_35_V_ce0;
input  [7:0] weight_35_V_q0;
output  [5:0] weight_36_V_address0;
output   weight_36_V_ce0;
input  [7:0] weight_36_V_q0;
output  [5:0] weight_37_V_address0;
output   weight_37_V_ce0;
input  [7:0] weight_37_V_q0;
output  [5:0] weight_38_V_address0;
output   weight_38_V_ce0;
input  [7:0] weight_38_V_q0;
output  [5:0] weight_39_V_address0;
output   weight_39_V_ce0;
input  [7:0] weight_39_V_q0;
output  [5:0] weight_40_V_address0;
output   weight_40_V_ce0;
input  [7:0] weight_40_V_q0;
output  [5:0] weight_41_V_address0;
output   weight_41_V_ce0;
input  [7:0] weight_41_V_q0;
output  [5:0] weight_42_V_address0;
output   weight_42_V_ce0;
input  [7:0] weight_42_V_q0;
output  [5:0] weight_43_V_address0;
output   weight_43_V_ce0;
input  [7:0] weight_43_V_q0;
output  [5:0] weight_44_V_address0;
output   weight_44_V_ce0;
input  [7:0] weight_44_V_q0;
output  [5:0] weight_45_V_address0;
output   weight_45_V_ce0;
input  [7:0] weight_45_V_q0;
output  [5:0] weight_46_V_address0;
output   weight_46_V_ce0;
input  [7:0] weight_46_V_q0;
output  [5:0] weight_47_V_address0;
output   weight_47_V_ce0;
input  [7:0] weight_47_V_q0;
output  [5:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [6:0] buffer1_1_48_8x8_p_V_48_address0;
output   buffer1_1_48_8x8_p_V_48_ce0;
output   buffer1_1_48_8x8_p_V_48_we0;
output  [7:0] buffer1_1_48_8x8_p_V_48_d0;
input  [7:0] buffer1_1_48_8x8_p_V_48_q0;
output  [6:0] buffer1_1_48_8x8_p_V_48_address1;
output   buffer1_1_48_8x8_p_V_48_ce1;
output   buffer1_1_48_8x8_p_V_48_we1;
output  [7:0] buffer1_1_48_8x8_p_V_48_d1;
output  [6:0] buffer1_1_48_8x8_p_V_24_address0;
output   buffer1_1_48_8x8_p_V_24_ce0;
output   buffer1_1_48_8x8_p_V_24_we0;
output  [7:0] buffer1_1_48_8x8_p_V_24_d0;
input  [7:0] buffer1_1_48_8x8_p_V_24_q0;
output  [6:0] buffer1_1_48_8x8_p_V_24_address1;
output   buffer1_1_48_8x8_p_V_24_ce1;
output   buffer1_1_48_8x8_p_V_24_we1;
output  [7:0] buffer1_1_48_8x8_p_V_24_d1;
output  [6:0] buffer1_1_48_8x8_p_V_1_address0;
output   buffer1_1_48_8x8_p_V_1_ce0;
output   buffer1_1_48_8x8_p_V_1_we0;
output  [7:0] buffer1_1_48_8x8_p_V_1_d0;
input  [7:0] buffer1_1_48_8x8_p_V_1_q0;
output  [6:0] buffer1_1_48_8x8_p_V_1_address1;
output   buffer1_1_48_8x8_p_V_1_ce1;
output   buffer1_1_48_8x8_p_V_1_we1;
output  [7:0] buffer1_1_48_8x8_p_V_1_d1;
output  [6:0] buffer1_1_48_8x8_p_V_25_address0;
output   buffer1_1_48_8x8_p_V_25_ce0;
output   buffer1_1_48_8x8_p_V_25_we0;
output  [7:0] buffer1_1_48_8x8_p_V_25_d0;
input  [7:0] buffer1_1_48_8x8_p_V_25_q0;
output  [6:0] buffer1_1_48_8x8_p_V_25_address1;
output   buffer1_1_48_8x8_p_V_25_ce1;
output   buffer1_1_48_8x8_p_V_25_we1;
output  [7:0] buffer1_1_48_8x8_p_V_25_d1;
output  [6:0] buffer1_1_48_8x8_p_V_2_address0;
output   buffer1_1_48_8x8_p_V_2_ce0;
output   buffer1_1_48_8x8_p_V_2_we0;
output  [7:0] buffer1_1_48_8x8_p_V_2_d0;
input  [7:0] buffer1_1_48_8x8_p_V_2_q0;
output  [6:0] buffer1_1_48_8x8_p_V_2_address1;
output   buffer1_1_48_8x8_p_V_2_ce1;
output   buffer1_1_48_8x8_p_V_2_we1;
output  [7:0] buffer1_1_48_8x8_p_V_2_d1;
output  [6:0] buffer1_1_48_8x8_p_V_26_address0;
output   buffer1_1_48_8x8_p_V_26_ce0;
output   buffer1_1_48_8x8_p_V_26_we0;
output  [7:0] buffer1_1_48_8x8_p_V_26_d0;
input  [7:0] buffer1_1_48_8x8_p_V_26_q0;
output  [6:0] buffer1_1_48_8x8_p_V_26_address1;
output   buffer1_1_48_8x8_p_V_26_ce1;
output   buffer1_1_48_8x8_p_V_26_we1;
output  [7:0] buffer1_1_48_8x8_p_V_26_d1;
output  [6:0] buffer1_1_48_8x8_p_V_3_address0;
output   buffer1_1_48_8x8_p_V_3_ce0;
output   buffer1_1_48_8x8_p_V_3_we0;
output  [7:0] buffer1_1_48_8x8_p_V_3_d0;
input  [7:0] buffer1_1_48_8x8_p_V_3_q0;
output  [6:0] buffer1_1_48_8x8_p_V_3_address1;
output   buffer1_1_48_8x8_p_V_3_ce1;
output   buffer1_1_48_8x8_p_V_3_we1;
output  [7:0] buffer1_1_48_8x8_p_V_3_d1;
output  [6:0] buffer1_1_48_8x8_p_V_27_address0;
output   buffer1_1_48_8x8_p_V_27_ce0;
output   buffer1_1_48_8x8_p_V_27_we0;
output  [7:0] buffer1_1_48_8x8_p_V_27_d0;
input  [7:0] buffer1_1_48_8x8_p_V_27_q0;
output  [6:0] buffer1_1_48_8x8_p_V_27_address1;
output   buffer1_1_48_8x8_p_V_27_ce1;
output   buffer1_1_48_8x8_p_V_27_we1;
output  [7:0] buffer1_1_48_8x8_p_V_27_d1;
output  [6:0] buffer1_1_48_8x8_p_V_4_address0;
output   buffer1_1_48_8x8_p_V_4_ce0;
output   buffer1_1_48_8x8_p_V_4_we0;
output  [7:0] buffer1_1_48_8x8_p_V_4_d0;
input  [7:0] buffer1_1_48_8x8_p_V_4_q0;
output  [6:0] buffer1_1_48_8x8_p_V_4_address1;
output   buffer1_1_48_8x8_p_V_4_ce1;
output   buffer1_1_48_8x8_p_V_4_we1;
output  [7:0] buffer1_1_48_8x8_p_V_4_d1;
output  [6:0] buffer1_1_48_8x8_p_V_28_address0;
output   buffer1_1_48_8x8_p_V_28_ce0;
output   buffer1_1_48_8x8_p_V_28_we0;
output  [7:0] buffer1_1_48_8x8_p_V_28_d0;
input  [7:0] buffer1_1_48_8x8_p_V_28_q0;
output  [6:0] buffer1_1_48_8x8_p_V_28_address1;
output   buffer1_1_48_8x8_p_V_28_ce1;
output   buffer1_1_48_8x8_p_V_28_we1;
output  [7:0] buffer1_1_48_8x8_p_V_28_d1;
output  [6:0] buffer1_1_48_8x8_p_V_5_address0;
output   buffer1_1_48_8x8_p_V_5_ce0;
output   buffer1_1_48_8x8_p_V_5_we0;
output  [7:0] buffer1_1_48_8x8_p_V_5_d0;
input  [7:0] buffer1_1_48_8x8_p_V_5_q0;
output  [6:0] buffer1_1_48_8x8_p_V_5_address1;
output   buffer1_1_48_8x8_p_V_5_ce1;
output   buffer1_1_48_8x8_p_V_5_we1;
output  [7:0] buffer1_1_48_8x8_p_V_5_d1;
output  [6:0] buffer1_1_48_8x8_p_V_29_address0;
output   buffer1_1_48_8x8_p_V_29_ce0;
output   buffer1_1_48_8x8_p_V_29_we0;
output  [7:0] buffer1_1_48_8x8_p_V_29_d0;
input  [7:0] buffer1_1_48_8x8_p_V_29_q0;
output  [6:0] buffer1_1_48_8x8_p_V_29_address1;
output   buffer1_1_48_8x8_p_V_29_ce1;
output   buffer1_1_48_8x8_p_V_29_we1;
output  [7:0] buffer1_1_48_8x8_p_V_29_d1;
output  [6:0] buffer1_1_48_8x8_p_V_6_address0;
output   buffer1_1_48_8x8_p_V_6_ce0;
output   buffer1_1_48_8x8_p_V_6_we0;
output  [7:0] buffer1_1_48_8x8_p_V_6_d0;
input  [7:0] buffer1_1_48_8x8_p_V_6_q0;
output  [6:0] buffer1_1_48_8x8_p_V_6_address1;
output   buffer1_1_48_8x8_p_V_6_ce1;
output   buffer1_1_48_8x8_p_V_6_we1;
output  [7:0] buffer1_1_48_8x8_p_V_6_d1;
output  [6:0] buffer1_1_48_8x8_p_V_30_address0;
output   buffer1_1_48_8x8_p_V_30_ce0;
output   buffer1_1_48_8x8_p_V_30_we0;
output  [7:0] buffer1_1_48_8x8_p_V_30_d0;
input  [7:0] buffer1_1_48_8x8_p_V_30_q0;
output  [6:0] buffer1_1_48_8x8_p_V_30_address1;
output   buffer1_1_48_8x8_p_V_30_ce1;
output   buffer1_1_48_8x8_p_V_30_we1;
output  [7:0] buffer1_1_48_8x8_p_V_30_d1;
output  [6:0] buffer1_1_48_8x8_p_V_7_address0;
output   buffer1_1_48_8x8_p_V_7_ce0;
output   buffer1_1_48_8x8_p_V_7_we0;
output  [7:0] buffer1_1_48_8x8_p_V_7_d0;
input  [7:0] buffer1_1_48_8x8_p_V_7_q0;
output  [6:0] buffer1_1_48_8x8_p_V_7_address1;
output   buffer1_1_48_8x8_p_V_7_ce1;
output   buffer1_1_48_8x8_p_V_7_we1;
output  [7:0] buffer1_1_48_8x8_p_V_7_d1;
output  [6:0] buffer1_1_48_8x8_p_V_31_address0;
output   buffer1_1_48_8x8_p_V_31_ce0;
output   buffer1_1_48_8x8_p_V_31_we0;
output  [7:0] buffer1_1_48_8x8_p_V_31_d0;
input  [7:0] buffer1_1_48_8x8_p_V_31_q0;
output  [6:0] buffer1_1_48_8x8_p_V_31_address1;
output   buffer1_1_48_8x8_p_V_31_ce1;
output   buffer1_1_48_8x8_p_V_31_we1;
output  [7:0] buffer1_1_48_8x8_p_V_31_d1;
output  [6:0] buffer1_1_48_8x8_p_V_8_address0;
output   buffer1_1_48_8x8_p_V_8_ce0;
output   buffer1_1_48_8x8_p_V_8_we0;
output  [7:0] buffer1_1_48_8x8_p_V_8_d0;
input  [7:0] buffer1_1_48_8x8_p_V_8_q0;
output  [6:0] buffer1_1_48_8x8_p_V_8_address1;
output   buffer1_1_48_8x8_p_V_8_ce1;
output   buffer1_1_48_8x8_p_V_8_we1;
output  [7:0] buffer1_1_48_8x8_p_V_8_d1;
output  [6:0] buffer1_1_48_8x8_p_V_32_address0;
output   buffer1_1_48_8x8_p_V_32_ce0;
output   buffer1_1_48_8x8_p_V_32_we0;
output  [7:0] buffer1_1_48_8x8_p_V_32_d0;
input  [7:0] buffer1_1_48_8x8_p_V_32_q0;
output  [6:0] buffer1_1_48_8x8_p_V_32_address1;
output   buffer1_1_48_8x8_p_V_32_ce1;
output   buffer1_1_48_8x8_p_V_32_we1;
output  [7:0] buffer1_1_48_8x8_p_V_32_d1;
output  [6:0] buffer1_1_48_8x8_p_V_9_address0;
output   buffer1_1_48_8x8_p_V_9_ce0;
output   buffer1_1_48_8x8_p_V_9_we0;
output  [7:0] buffer1_1_48_8x8_p_V_9_d0;
input  [7:0] buffer1_1_48_8x8_p_V_9_q0;
output  [6:0] buffer1_1_48_8x8_p_V_9_address1;
output   buffer1_1_48_8x8_p_V_9_ce1;
output   buffer1_1_48_8x8_p_V_9_we1;
output  [7:0] buffer1_1_48_8x8_p_V_9_d1;
output  [6:0] buffer1_1_48_8x8_p_V_33_address0;
output   buffer1_1_48_8x8_p_V_33_ce0;
output   buffer1_1_48_8x8_p_V_33_we0;
output  [7:0] buffer1_1_48_8x8_p_V_33_d0;
input  [7:0] buffer1_1_48_8x8_p_V_33_q0;
output  [6:0] buffer1_1_48_8x8_p_V_33_address1;
output   buffer1_1_48_8x8_p_V_33_ce1;
output   buffer1_1_48_8x8_p_V_33_we1;
output  [7:0] buffer1_1_48_8x8_p_V_33_d1;
output  [6:0] buffer1_1_48_8x8_p_V_10_address0;
output   buffer1_1_48_8x8_p_V_10_ce0;
output   buffer1_1_48_8x8_p_V_10_we0;
output  [7:0] buffer1_1_48_8x8_p_V_10_d0;
input  [7:0] buffer1_1_48_8x8_p_V_10_q0;
output  [6:0] buffer1_1_48_8x8_p_V_10_address1;
output   buffer1_1_48_8x8_p_V_10_ce1;
output   buffer1_1_48_8x8_p_V_10_we1;
output  [7:0] buffer1_1_48_8x8_p_V_10_d1;
output  [6:0] buffer1_1_48_8x8_p_V_34_address0;
output   buffer1_1_48_8x8_p_V_34_ce0;
output   buffer1_1_48_8x8_p_V_34_we0;
output  [7:0] buffer1_1_48_8x8_p_V_34_d0;
input  [7:0] buffer1_1_48_8x8_p_V_34_q0;
output  [6:0] buffer1_1_48_8x8_p_V_34_address1;
output   buffer1_1_48_8x8_p_V_34_ce1;
output   buffer1_1_48_8x8_p_V_34_we1;
output  [7:0] buffer1_1_48_8x8_p_V_34_d1;
output  [6:0] buffer1_1_48_8x8_p_V_11_address0;
output   buffer1_1_48_8x8_p_V_11_ce0;
output   buffer1_1_48_8x8_p_V_11_we0;
output  [7:0] buffer1_1_48_8x8_p_V_11_d0;
input  [7:0] buffer1_1_48_8x8_p_V_11_q0;
output  [6:0] buffer1_1_48_8x8_p_V_11_address1;
output   buffer1_1_48_8x8_p_V_11_ce1;
output   buffer1_1_48_8x8_p_V_11_we1;
output  [7:0] buffer1_1_48_8x8_p_V_11_d1;
output  [6:0] buffer1_1_48_8x8_p_V_35_address0;
output   buffer1_1_48_8x8_p_V_35_ce0;
output   buffer1_1_48_8x8_p_V_35_we0;
output  [7:0] buffer1_1_48_8x8_p_V_35_d0;
input  [7:0] buffer1_1_48_8x8_p_V_35_q0;
output  [6:0] buffer1_1_48_8x8_p_V_35_address1;
output   buffer1_1_48_8x8_p_V_35_ce1;
output   buffer1_1_48_8x8_p_V_35_we1;
output  [7:0] buffer1_1_48_8x8_p_V_35_d1;
output  [6:0] buffer1_1_48_8x8_p_V_12_address0;
output   buffer1_1_48_8x8_p_V_12_ce0;
output   buffer1_1_48_8x8_p_V_12_we0;
output  [7:0] buffer1_1_48_8x8_p_V_12_d0;
input  [7:0] buffer1_1_48_8x8_p_V_12_q0;
output  [6:0] buffer1_1_48_8x8_p_V_12_address1;
output   buffer1_1_48_8x8_p_V_12_ce1;
output   buffer1_1_48_8x8_p_V_12_we1;
output  [7:0] buffer1_1_48_8x8_p_V_12_d1;
output  [6:0] buffer1_1_48_8x8_p_V_36_address0;
output   buffer1_1_48_8x8_p_V_36_ce0;
output   buffer1_1_48_8x8_p_V_36_we0;
output  [7:0] buffer1_1_48_8x8_p_V_36_d0;
input  [7:0] buffer1_1_48_8x8_p_V_36_q0;
output  [6:0] buffer1_1_48_8x8_p_V_36_address1;
output   buffer1_1_48_8x8_p_V_36_ce1;
output   buffer1_1_48_8x8_p_V_36_we1;
output  [7:0] buffer1_1_48_8x8_p_V_36_d1;
output  [6:0] buffer1_1_48_8x8_p_V_13_address0;
output   buffer1_1_48_8x8_p_V_13_ce0;
output   buffer1_1_48_8x8_p_V_13_we0;
output  [7:0] buffer1_1_48_8x8_p_V_13_d0;
input  [7:0] buffer1_1_48_8x8_p_V_13_q0;
output  [6:0] buffer1_1_48_8x8_p_V_13_address1;
output   buffer1_1_48_8x8_p_V_13_ce1;
output   buffer1_1_48_8x8_p_V_13_we1;
output  [7:0] buffer1_1_48_8x8_p_V_13_d1;
output  [6:0] buffer1_1_48_8x8_p_V_37_address0;
output   buffer1_1_48_8x8_p_V_37_ce0;
output   buffer1_1_48_8x8_p_V_37_we0;
output  [7:0] buffer1_1_48_8x8_p_V_37_d0;
input  [7:0] buffer1_1_48_8x8_p_V_37_q0;
output  [6:0] buffer1_1_48_8x8_p_V_37_address1;
output   buffer1_1_48_8x8_p_V_37_ce1;
output   buffer1_1_48_8x8_p_V_37_we1;
output  [7:0] buffer1_1_48_8x8_p_V_37_d1;
output  [6:0] buffer1_1_48_8x8_p_V_14_address0;
output   buffer1_1_48_8x8_p_V_14_ce0;
output   buffer1_1_48_8x8_p_V_14_we0;
output  [7:0] buffer1_1_48_8x8_p_V_14_d0;
input  [7:0] buffer1_1_48_8x8_p_V_14_q0;
output  [6:0] buffer1_1_48_8x8_p_V_14_address1;
output   buffer1_1_48_8x8_p_V_14_ce1;
output   buffer1_1_48_8x8_p_V_14_we1;
output  [7:0] buffer1_1_48_8x8_p_V_14_d1;
output  [6:0] buffer1_1_48_8x8_p_V_38_address0;
output   buffer1_1_48_8x8_p_V_38_ce0;
output   buffer1_1_48_8x8_p_V_38_we0;
output  [7:0] buffer1_1_48_8x8_p_V_38_d0;
input  [7:0] buffer1_1_48_8x8_p_V_38_q0;
output  [6:0] buffer1_1_48_8x8_p_V_38_address1;
output   buffer1_1_48_8x8_p_V_38_ce1;
output   buffer1_1_48_8x8_p_V_38_we1;
output  [7:0] buffer1_1_48_8x8_p_V_38_d1;
output  [6:0] buffer1_1_48_8x8_p_V_15_address0;
output   buffer1_1_48_8x8_p_V_15_ce0;
output   buffer1_1_48_8x8_p_V_15_we0;
output  [7:0] buffer1_1_48_8x8_p_V_15_d0;
input  [7:0] buffer1_1_48_8x8_p_V_15_q0;
output  [6:0] buffer1_1_48_8x8_p_V_15_address1;
output   buffer1_1_48_8x8_p_V_15_ce1;
output   buffer1_1_48_8x8_p_V_15_we1;
output  [7:0] buffer1_1_48_8x8_p_V_15_d1;
output  [6:0] buffer1_1_48_8x8_p_V_39_address0;
output   buffer1_1_48_8x8_p_V_39_ce0;
output   buffer1_1_48_8x8_p_V_39_we0;
output  [7:0] buffer1_1_48_8x8_p_V_39_d0;
input  [7:0] buffer1_1_48_8x8_p_V_39_q0;
output  [6:0] buffer1_1_48_8x8_p_V_39_address1;
output   buffer1_1_48_8x8_p_V_39_ce1;
output   buffer1_1_48_8x8_p_V_39_we1;
output  [7:0] buffer1_1_48_8x8_p_V_39_d1;
output  [6:0] buffer1_1_48_8x8_p_V_16_address0;
output   buffer1_1_48_8x8_p_V_16_ce0;
output   buffer1_1_48_8x8_p_V_16_we0;
output  [7:0] buffer1_1_48_8x8_p_V_16_d0;
input  [7:0] buffer1_1_48_8x8_p_V_16_q0;
output  [6:0] buffer1_1_48_8x8_p_V_16_address1;
output   buffer1_1_48_8x8_p_V_16_ce1;
output   buffer1_1_48_8x8_p_V_16_we1;
output  [7:0] buffer1_1_48_8x8_p_V_16_d1;
output  [6:0] buffer1_1_48_8x8_p_V_40_address0;
output   buffer1_1_48_8x8_p_V_40_ce0;
output   buffer1_1_48_8x8_p_V_40_we0;
output  [7:0] buffer1_1_48_8x8_p_V_40_d0;
input  [7:0] buffer1_1_48_8x8_p_V_40_q0;
output  [6:0] buffer1_1_48_8x8_p_V_40_address1;
output   buffer1_1_48_8x8_p_V_40_ce1;
output   buffer1_1_48_8x8_p_V_40_we1;
output  [7:0] buffer1_1_48_8x8_p_V_40_d1;
output  [6:0] buffer1_1_48_8x8_p_V_17_address0;
output   buffer1_1_48_8x8_p_V_17_ce0;
output   buffer1_1_48_8x8_p_V_17_we0;
output  [7:0] buffer1_1_48_8x8_p_V_17_d0;
input  [7:0] buffer1_1_48_8x8_p_V_17_q0;
output  [6:0] buffer1_1_48_8x8_p_V_17_address1;
output   buffer1_1_48_8x8_p_V_17_ce1;
output   buffer1_1_48_8x8_p_V_17_we1;
output  [7:0] buffer1_1_48_8x8_p_V_17_d1;
output  [6:0] buffer1_1_48_8x8_p_V_41_address0;
output   buffer1_1_48_8x8_p_V_41_ce0;
output   buffer1_1_48_8x8_p_V_41_we0;
output  [7:0] buffer1_1_48_8x8_p_V_41_d0;
input  [7:0] buffer1_1_48_8x8_p_V_41_q0;
output  [6:0] buffer1_1_48_8x8_p_V_41_address1;
output   buffer1_1_48_8x8_p_V_41_ce1;
output   buffer1_1_48_8x8_p_V_41_we1;
output  [7:0] buffer1_1_48_8x8_p_V_41_d1;
output  [6:0] buffer1_1_48_8x8_p_V_18_address0;
output   buffer1_1_48_8x8_p_V_18_ce0;
output   buffer1_1_48_8x8_p_V_18_we0;
output  [7:0] buffer1_1_48_8x8_p_V_18_d0;
input  [7:0] buffer1_1_48_8x8_p_V_18_q0;
output  [6:0] buffer1_1_48_8x8_p_V_18_address1;
output   buffer1_1_48_8x8_p_V_18_ce1;
output   buffer1_1_48_8x8_p_V_18_we1;
output  [7:0] buffer1_1_48_8x8_p_V_18_d1;
output  [6:0] buffer1_1_48_8x8_p_V_42_address0;
output   buffer1_1_48_8x8_p_V_42_ce0;
output   buffer1_1_48_8x8_p_V_42_we0;
output  [7:0] buffer1_1_48_8x8_p_V_42_d0;
input  [7:0] buffer1_1_48_8x8_p_V_42_q0;
output  [6:0] buffer1_1_48_8x8_p_V_42_address1;
output   buffer1_1_48_8x8_p_V_42_ce1;
output   buffer1_1_48_8x8_p_V_42_we1;
output  [7:0] buffer1_1_48_8x8_p_V_42_d1;
output  [6:0] buffer1_1_48_8x8_p_V_19_address0;
output   buffer1_1_48_8x8_p_V_19_ce0;
output   buffer1_1_48_8x8_p_V_19_we0;
output  [7:0] buffer1_1_48_8x8_p_V_19_d0;
input  [7:0] buffer1_1_48_8x8_p_V_19_q0;
output  [6:0] buffer1_1_48_8x8_p_V_19_address1;
output   buffer1_1_48_8x8_p_V_19_ce1;
output   buffer1_1_48_8x8_p_V_19_we1;
output  [7:0] buffer1_1_48_8x8_p_V_19_d1;
output  [6:0] buffer1_1_48_8x8_p_V_43_address0;
output   buffer1_1_48_8x8_p_V_43_ce0;
output   buffer1_1_48_8x8_p_V_43_we0;
output  [7:0] buffer1_1_48_8x8_p_V_43_d0;
input  [7:0] buffer1_1_48_8x8_p_V_43_q0;
output  [6:0] buffer1_1_48_8x8_p_V_43_address1;
output   buffer1_1_48_8x8_p_V_43_ce1;
output   buffer1_1_48_8x8_p_V_43_we1;
output  [7:0] buffer1_1_48_8x8_p_V_43_d1;
output  [6:0] buffer1_1_48_8x8_p_V_20_address0;
output   buffer1_1_48_8x8_p_V_20_ce0;
output   buffer1_1_48_8x8_p_V_20_we0;
output  [7:0] buffer1_1_48_8x8_p_V_20_d0;
input  [7:0] buffer1_1_48_8x8_p_V_20_q0;
output  [6:0] buffer1_1_48_8x8_p_V_20_address1;
output   buffer1_1_48_8x8_p_V_20_ce1;
output   buffer1_1_48_8x8_p_V_20_we1;
output  [7:0] buffer1_1_48_8x8_p_V_20_d1;
output  [6:0] buffer1_1_48_8x8_p_V_44_address0;
output   buffer1_1_48_8x8_p_V_44_ce0;
output   buffer1_1_48_8x8_p_V_44_we0;
output  [7:0] buffer1_1_48_8x8_p_V_44_d0;
input  [7:0] buffer1_1_48_8x8_p_V_44_q0;
output  [6:0] buffer1_1_48_8x8_p_V_44_address1;
output   buffer1_1_48_8x8_p_V_44_ce1;
output   buffer1_1_48_8x8_p_V_44_we1;
output  [7:0] buffer1_1_48_8x8_p_V_44_d1;
output  [6:0] buffer1_1_48_8x8_p_V_21_address0;
output   buffer1_1_48_8x8_p_V_21_ce0;
output   buffer1_1_48_8x8_p_V_21_we0;
output  [7:0] buffer1_1_48_8x8_p_V_21_d0;
input  [7:0] buffer1_1_48_8x8_p_V_21_q0;
output  [6:0] buffer1_1_48_8x8_p_V_21_address1;
output   buffer1_1_48_8x8_p_V_21_ce1;
output   buffer1_1_48_8x8_p_V_21_we1;
output  [7:0] buffer1_1_48_8x8_p_V_21_d1;
output  [6:0] buffer1_1_48_8x8_p_V_45_address0;
output   buffer1_1_48_8x8_p_V_45_ce0;
output   buffer1_1_48_8x8_p_V_45_we0;
output  [7:0] buffer1_1_48_8x8_p_V_45_d0;
input  [7:0] buffer1_1_48_8x8_p_V_45_q0;
output  [6:0] buffer1_1_48_8x8_p_V_45_address1;
output   buffer1_1_48_8x8_p_V_45_ce1;
output   buffer1_1_48_8x8_p_V_45_we1;
output  [7:0] buffer1_1_48_8x8_p_V_45_d1;
output  [6:0] buffer1_1_48_8x8_p_V_22_address0;
output   buffer1_1_48_8x8_p_V_22_ce0;
output   buffer1_1_48_8x8_p_V_22_we0;
output  [7:0] buffer1_1_48_8x8_p_V_22_d0;
input  [7:0] buffer1_1_48_8x8_p_V_22_q0;
output  [6:0] buffer1_1_48_8x8_p_V_22_address1;
output   buffer1_1_48_8x8_p_V_22_ce1;
output   buffer1_1_48_8x8_p_V_22_we1;
output  [7:0] buffer1_1_48_8x8_p_V_22_d1;
output  [6:0] buffer1_1_48_8x8_p_V_46_address0;
output   buffer1_1_48_8x8_p_V_46_ce0;
output   buffer1_1_48_8x8_p_V_46_we0;
output  [7:0] buffer1_1_48_8x8_p_V_46_d0;
input  [7:0] buffer1_1_48_8x8_p_V_46_q0;
output  [6:0] buffer1_1_48_8x8_p_V_46_address1;
output   buffer1_1_48_8x8_p_V_46_ce1;
output   buffer1_1_48_8x8_p_V_46_we1;
output  [7:0] buffer1_1_48_8x8_p_V_46_d1;
output  [6:0] buffer1_1_48_8x8_p_V_23_address0;
output   buffer1_1_48_8x8_p_V_23_ce0;
output   buffer1_1_48_8x8_p_V_23_we0;
output  [7:0] buffer1_1_48_8x8_p_V_23_d0;
input  [7:0] buffer1_1_48_8x8_p_V_23_q0;
output  [6:0] buffer1_1_48_8x8_p_V_23_address1;
output   buffer1_1_48_8x8_p_V_23_ce1;
output   buffer1_1_48_8x8_p_V_23_we1;
output  [7:0] buffer1_1_48_8x8_p_V_23_d1;
output  [6:0] buffer1_1_48_8x8_p_V_47_address0;
output   buffer1_1_48_8x8_p_V_47_ce0;
output   buffer1_1_48_8x8_p_V_47_we0;
output  [7:0] buffer1_1_48_8x8_p_V_47_d0;
input  [7:0] buffer1_1_48_8x8_p_V_47_q0;
output  [6:0] buffer1_1_48_8x8_p_V_47_address1;
output   buffer1_1_48_8x8_p_V_47_ce1;
output   buffer1_1_48_8x8_p_V_47_we1;
output  [7:0] buffer1_1_48_8x8_p_V_47_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg weight_24_V_ce0;
reg weight_25_V_ce0;
reg weight_26_V_ce0;
reg weight_27_V_ce0;
reg weight_28_V_ce0;
reg weight_29_V_ce0;
reg weight_30_V_ce0;
reg weight_31_V_ce0;
reg weight_32_V_ce0;
reg weight_33_V_ce0;
reg weight_34_V_ce0;
reg weight_35_V_ce0;
reg weight_36_V_ce0;
reg weight_37_V_ce0;
reg weight_38_V_ce0;
reg weight_39_V_ce0;
reg weight_40_V_ce0;
reg weight_41_V_ce0;
reg weight_42_V_ce0;
reg weight_43_V_ce0;
reg weight_44_V_ce0;
reg weight_45_V_ce0;
reg weight_46_V_ce0;
reg weight_47_V_ce0;
reg bias_V_ce0;
reg[6:0] buffer1_1_48_8x8_p_V_48_address0;
reg buffer1_1_48_8x8_p_V_48_ce0;
reg buffer1_1_48_8x8_p_V_48_we0;
reg[7:0] buffer1_1_48_8x8_p_V_48_d0;
reg buffer1_1_48_8x8_p_V_48_ce1;
reg buffer1_1_48_8x8_p_V_48_we1;
reg[6:0] buffer1_1_48_8x8_p_V_24_address0;
reg buffer1_1_48_8x8_p_V_24_ce0;
reg buffer1_1_48_8x8_p_V_24_we0;
reg[7:0] buffer1_1_48_8x8_p_V_24_d0;
reg buffer1_1_48_8x8_p_V_24_ce1;
reg buffer1_1_48_8x8_p_V_24_we1;
reg[6:0] buffer1_1_48_8x8_p_V_1_address0;
reg buffer1_1_48_8x8_p_V_1_ce0;
reg buffer1_1_48_8x8_p_V_1_we0;
reg[7:0] buffer1_1_48_8x8_p_V_1_d0;
reg buffer1_1_48_8x8_p_V_1_ce1;
reg buffer1_1_48_8x8_p_V_1_we1;
reg[6:0] buffer1_1_48_8x8_p_V_25_address0;
reg buffer1_1_48_8x8_p_V_25_ce0;
reg buffer1_1_48_8x8_p_V_25_we0;
reg[7:0] buffer1_1_48_8x8_p_V_25_d0;
reg buffer1_1_48_8x8_p_V_25_ce1;
reg buffer1_1_48_8x8_p_V_25_we1;
reg[6:0] buffer1_1_48_8x8_p_V_2_address0;
reg buffer1_1_48_8x8_p_V_2_ce0;
reg buffer1_1_48_8x8_p_V_2_we0;
reg[7:0] buffer1_1_48_8x8_p_V_2_d0;
reg buffer1_1_48_8x8_p_V_2_ce1;
reg buffer1_1_48_8x8_p_V_2_we1;
reg[6:0] buffer1_1_48_8x8_p_V_26_address0;
reg buffer1_1_48_8x8_p_V_26_ce0;
reg buffer1_1_48_8x8_p_V_26_we0;
reg[7:0] buffer1_1_48_8x8_p_V_26_d0;
reg buffer1_1_48_8x8_p_V_26_ce1;
reg buffer1_1_48_8x8_p_V_26_we1;
reg[6:0] buffer1_1_48_8x8_p_V_3_address0;
reg buffer1_1_48_8x8_p_V_3_ce0;
reg buffer1_1_48_8x8_p_V_3_we0;
reg[7:0] buffer1_1_48_8x8_p_V_3_d0;
reg buffer1_1_48_8x8_p_V_3_ce1;
reg buffer1_1_48_8x8_p_V_3_we1;
reg[6:0] buffer1_1_48_8x8_p_V_27_address0;
reg buffer1_1_48_8x8_p_V_27_ce0;
reg buffer1_1_48_8x8_p_V_27_we0;
reg[7:0] buffer1_1_48_8x8_p_V_27_d0;
reg buffer1_1_48_8x8_p_V_27_ce1;
reg buffer1_1_48_8x8_p_V_27_we1;
reg[6:0] buffer1_1_48_8x8_p_V_4_address0;
reg buffer1_1_48_8x8_p_V_4_ce0;
reg buffer1_1_48_8x8_p_V_4_we0;
reg[7:0] buffer1_1_48_8x8_p_V_4_d0;
reg buffer1_1_48_8x8_p_V_4_ce1;
reg buffer1_1_48_8x8_p_V_4_we1;
reg[6:0] buffer1_1_48_8x8_p_V_28_address0;
reg buffer1_1_48_8x8_p_V_28_ce0;
reg buffer1_1_48_8x8_p_V_28_we0;
reg[7:0] buffer1_1_48_8x8_p_V_28_d0;
reg buffer1_1_48_8x8_p_V_28_ce1;
reg buffer1_1_48_8x8_p_V_28_we1;
reg[6:0] buffer1_1_48_8x8_p_V_5_address0;
reg buffer1_1_48_8x8_p_V_5_ce0;
reg buffer1_1_48_8x8_p_V_5_we0;
reg[7:0] buffer1_1_48_8x8_p_V_5_d0;
reg buffer1_1_48_8x8_p_V_5_ce1;
reg buffer1_1_48_8x8_p_V_5_we1;
reg[6:0] buffer1_1_48_8x8_p_V_29_address0;
reg buffer1_1_48_8x8_p_V_29_ce0;
reg buffer1_1_48_8x8_p_V_29_we0;
reg[7:0] buffer1_1_48_8x8_p_V_29_d0;
reg buffer1_1_48_8x8_p_V_29_ce1;
reg buffer1_1_48_8x8_p_V_29_we1;
reg[6:0] buffer1_1_48_8x8_p_V_6_address0;
reg buffer1_1_48_8x8_p_V_6_ce0;
reg buffer1_1_48_8x8_p_V_6_we0;
reg[7:0] buffer1_1_48_8x8_p_V_6_d0;
reg buffer1_1_48_8x8_p_V_6_ce1;
reg buffer1_1_48_8x8_p_V_6_we1;
reg[6:0] buffer1_1_48_8x8_p_V_30_address0;
reg buffer1_1_48_8x8_p_V_30_ce0;
reg buffer1_1_48_8x8_p_V_30_we0;
reg[7:0] buffer1_1_48_8x8_p_V_30_d0;
reg buffer1_1_48_8x8_p_V_30_ce1;
reg buffer1_1_48_8x8_p_V_30_we1;
reg[6:0] buffer1_1_48_8x8_p_V_7_address0;
reg buffer1_1_48_8x8_p_V_7_ce0;
reg buffer1_1_48_8x8_p_V_7_we0;
reg[7:0] buffer1_1_48_8x8_p_V_7_d0;
reg buffer1_1_48_8x8_p_V_7_ce1;
reg buffer1_1_48_8x8_p_V_7_we1;
reg[6:0] buffer1_1_48_8x8_p_V_31_address0;
reg buffer1_1_48_8x8_p_V_31_ce0;
reg buffer1_1_48_8x8_p_V_31_we0;
reg[7:0] buffer1_1_48_8x8_p_V_31_d0;
reg buffer1_1_48_8x8_p_V_31_ce1;
reg buffer1_1_48_8x8_p_V_31_we1;
reg[6:0] buffer1_1_48_8x8_p_V_8_address0;
reg buffer1_1_48_8x8_p_V_8_ce0;
reg buffer1_1_48_8x8_p_V_8_we0;
reg[7:0] buffer1_1_48_8x8_p_V_8_d0;
reg buffer1_1_48_8x8_p_V_8_ce1;
reg buffer1_1_48_8x8_p_V_8_we1;
reg[6:0] buffer1_1_48_8x8_p_V_32_address0;
reg buffer1_1_48_8x8_p_V_32_ce0;
reg buffer1_1_48_8x8_p_V_32_we0;
reg[7:0] buffer1_1_48_8x8_p_V_32_d0;
reg buffer1_1_48_8x8_p_V_32_ce1;
reg buffer1_1_48_8x8_p_V_32_we1;
reg[6:0] buffer1_1_48_8x8_p_V_9_address0;
reg buffer1_1_48_8x8_p_V_9_ce0;
reg buffer1_1_48_8x8_p_V_9_we0;
reg[7:0] buffer1_1_48_8x8_p_V_9_d0;
reg buffer1_1_48_8x8_p_V_9_ce1;
reg buffer1_1_48_8x8_p_V_9_we1;
reg[6:0] buffer1_1_48_8x8_p_V_33_address0;
reg buffer1_1_48_8x8_p_V_33_ce0;
reg buffer1_1_48_8x8_p_V_33_we0;
reg[7:0] buffer1_1_48_8x8_p_V_33_d0;
reg buffer1_1_48_8x8_p_V_33_ce1;
reg buffer1_1_48_8x8_p_V_33_we1;
reg[6:0] buffer1_1_48_8x8_p_V_10_address0;
reg buffer1_1_48_8x8_p_V_10_ce0;
reg buffer1_1_48_8x8_p_V_10_we0;
reg[7:0] buffer1_1_48_8x8_p_V_10_d0;
reg buffer1_1_48_8x8_p_V_10_ce1;
reg buffer1_1_48_8x8_p_V_10_we1;
reg[6:0] buffer1_1_48_8x8_p_V_34_address0;
reg buffer1_1_48_8x8_p_V_34_ce0;
reg buffer1_1_48_8x8_p_V_34_we0;
reg[7:0] buffer1_1_48_8x8_p_V_34_d0;
reg buffer1_1_48_8x8_p_V_34_ce1;
reg buffer1_1_48_8x8_p_V_34_we1;
reg[6:0] buffer1_1_48_8x8_p_V_11_address0;
reg buffer1_1_48_8x8_p_V_11_ce0;
reg buffer1_1_48_8x8_p_V_11_we0;
reg[7:0] buffer1_1_48_8x8_p_V_11_d0;
reg buffer1_1_48_8x8_p_V_11_ce1;
reg buffer1_1_48_8x8_p_V_11_we1;
reg[6:0] buffer1_1_48_8x8_p_V_35_address0;
reg buffer1_1_48_8x8_p_V_35_ce0;
reg buffer1_1_48_8x8_p_V_35_we0;
reg[7:0] buffer1_1_48_8x8_p_V_35_d0;
reg buffer1_1_48_8x8_p_V_35_ce1;
reg buffer1_1_48_8x8_p_V_35_we1;
reg[6:0] buffer1_1_48_8x8_p_V_12_address0;
reg buffer1_1_48_8x8_p_V_12_ce0;
reg buffer1_1_48_8x8_p_V_12_we0;
reg[7:0] buffer1_1_48_8x8_p_V_12_d0;
reg buffer1_1_48_8x8_p_V_12_ce1;
reg buffer1_1_48_8x8_p_V_12_we1;
reg[6:0] buffer1_1_48_8x8_p_V_36_address0;
reg buffer1_1_48_8x8_p_V_36_ce0;
reg buffer1_1_48_8x8_p_V_36_we0;
reg[7:0] buffer1_1_48_8x8_p_V_36_d0;
reg buffer1_1_48_8x8_p_V_36_ce1;
reg buffer1_1_48_8x8_p_V_36_we1;
reg[6:0] buffer1_1_48_8x8_p_V_13_address0;
reg buffer1_1_48_8x8_p_V_13_ce0;
reg buffer1_1_48_8x8_p_V_13_we0;
reg[7:0] buffer1_1_48_8x8_p_V_13_d0;
reg buffer1_1_48_8x8_p_V_13_ce1;
reg buffer1_1_48_8x8_p_V_13_we1;
reg[6:0] buffer1_1_48_8x8_p_V_37_address0;
reg buffer1_1_48_8x8_p_V_37_ce0;
reg buffer1_1_48_8x8_p_V_37_we0;
reg[7:0] buffer1_1_48_8x8_p_V_37_d0;
reg buffer1_1_48_8x8_p_V_37_ce1;
reg buffer1_1_48_8x8_p_V_37_we1;
reg[6:0] buffer1_1_48_8x8_p_V_14_address0;
reg buffer1_1_48_8x8_p_V_14_ce0;
reg buffer1_1_48_8x8_p_V_14_we0;
reg[7:0] buffer1_1_48_8x8_p_V_14_d0;
reg buffer1_1_48_8x8_p_V_14_ce1;
reg buffer1_1_48_8x8_p_V_14_we1;
reg[6:0] buffer1_1_48_8x8_p_V_38_address0;
reg buffer1_1_48_8x8_p_V_38_ce0;
reg buffer1_1_48_8x8_p_V_38_we0;
reg[7:0] buffer1_1_48_8x8_p_V_38_d0;
reg buffer1_1_48_8x8_p_V_38_ce1;
reg buffer1_1_48_8x8_p_V_38_we1;
reg[6:0] buffer1_1_48_8x8_p_V_15_address0;
reg buffer1_1_48_8x8_p_V_15_ce0;
reg buffer1_1_48_8x8_p_V_15_we0;
reg[7:0] buffer1_1_48_8x8_p_V_15_d0;
reg buffer1_1_48_8x8_p_V_15_ce1;
reg buffer1_1_48_8x8_p_V_15_we1;
reg[6:0] buffer1_1_48_8x8_p_V_39_address0;
reg buffer1_1_48_8x8_p_V_39_ce0;
reg buffer1_1_48_8x8_p_V_39_we0;
reg[7:0] buffer1_1_48_8x8_p_V_39_d0;
reg buffer1_1_48_8x8_p_V_39_ce1;
reg buffer1_1_48_8x8_p_V_39_we1;
reg[6:0] buffer1_1_48_8x8_p_V_16_address0;
reg buffer1_1_48_8x8_p_V_16_ce0;
reg buffer1_1_48_8x8_p_V_16_we0;
reg[7:0] buffer1_1_48_8x8_p_V_16_d0;
reg buffer1_1_48_8x8_p_V_16_ce1;
reg buffer1_1_48_8x8_p_V_16_we1;
reg[6:0] buffer1_1_48_8x8_p_V_40_address0;
reg buffer1_1_48_8x8_p_V_40_ce0;
reg buffer1_1_48_8x8_p_V_40_we0;
reg[7:0] buffer1_1_48_8x8_p_V_40_d0;
reg buffer1_1_48_8x8_p_V_40_ce1;
reg buffer1_1_48_8x8_p_V_40_we1;
reg[6:0] buffer1_1_48_8x8_p_V_17_address0;
reg buffer1_1_48_8x8_p_V_17_ce0;
reg buffer1_1_48_8x8_p_V_17_we0;
reg[7:0] buffer1_1_48_8x8_p_V_17_d0;
reg buffer1_1_48_8x8_p_V_17_ce1;
reg buffer1_1_48_8x8_p_V_17_we1;
reg[6:0] buffer1_1_48_8x8_p_V_41_address0;
reg buffer1_1_48_8x8_p_V_41_ce0;
reg buffer1_1_48_8x8_p_V_41_we0;
reg[7:0] buffer1_1_48_8x8_p_V_41_d0;
reg buffer1_1_48_8x8_p_V_41_ce1;
reg buffer1_1_48_8x8_p_V_41_we1;
reg[6:0] buffer1_1_48_8x8_p_V_18_address0;
reg buffer1_1_48_8x8_p_V_18_ce0;
reg buffer1_1_48_8x8_p_V_18_we0;
reg[7:0] buffer1_1_48_8x8_p_V_18_d0;
reg buffer1_1_48_8x8_p_V_18_ce1;
reg buffer1_1_48_8x8_p_V_18_we1;
reg[6:0] buffer1_1_48_8x8_p_V_42_address0;
reg buffer1_1_48_8x8_p_V_42_ce0;
reg buffer1_1_48_8x8_p_V_42_we0;
reg[7:0] buffer1_1_48_8x8_p_V_42_d0;
reg buffer1_1_48_8x8_p_V_42_ce1;
reg buffer1_1_48_8x8_p_V_42_we1;
reg[6:0] buffer1_1_48_8x8_p_V_19_address0;
reg buffer1_1_48_8x8_p_V_19_ce0;
reg buffer1_1_48_8x8_p_V_19_we0;
reg[7:0] buffer1_1_48_8x8_p_V_19_d0;
reg buffer1_1_48_8x8_p_V_19_ce1;
reg buffer1_1_48_8x8_p_V_19_we1;
reg[6:0] buffer1_1_48_8x8_p_V_43_address0;
reg buffer1_1_48_8x8_p_V_43_ce0;
reg buffer1_1_48_8x8_p_V_43_we0;
reg[7:0] buffer1_1_48_8x8_p_V_43_d0;
reg buffer1_1_48_8x8_p_V_43_ce1;
reg buffer1_1_48_8x8_p_V_43_we1;
reg[6:0] buffer1_1_48_8x8_p_V_20_address0;
reg buffer1_1_48_8x8_p_V_20_ce0;
reg buffer1_1_48_8x8_p_V_20_we0;
reg[7:0] buffer1_1_48_8x8_p_V_20_d0;
reg buffer1_1_48_8x8_p_V_20_ce1;
reg buffer1_1_48_8x8_p_V_20_we1;
reg[6:0] buffer1_1_48_8x8_p_V_44_address0;
reg buffer1_1_48_8x8_p_V_44_ce0;
reg buffer1_1_48_8x8_p_V_44_we0;
reg[7:0] buffer1_1_48_8x8_p_V_44_d0;
reg buffer1_1_48_8x8_p_V_44_ce1;
reg buffer1_1_48_8x8_p_V_44_we1;
reg[6:0] buffer1_1_48_8x8_p_V_21_address0;
reg buffer1_1_48_8x8_p_V_21_ce0;
reg buffer1_1_48_8x8_p_V_21_we0;
reg[7:0] buffer1_1_48_8x8_p_V_21_d0;
reg buffer1_1_48_8x8_p_V_21_ce1;
reg buffer1_1_48_8x8_p_V_21_we1;
reg[6:0] buffer1_1_48_8x8_p_V_45_address0;
reg buffer1_1_48_8x8_p_V_45_ce0;
reg buffer1_1_48_8x8_p_V_45_we0;
reg[7:0] buffer1_1_48_8x8_p_V_45_d0;
reg buffer1_1_48_8x8_p_V_45_ce1;
reg buffer1_1_48_8x8_p_V_45_we1;
reg[6:0] buffer1_1_48_8x8_p_V_22_address0;
reg buffer1_1_48_8x8_p_V_22_ce0;
reg buffer1_1_48_8x8_p_V_22_we0;
reg[7:0] buffer1_1_48_8x8_p_V_22_d0;
reg buffer1_1_48_8x8_p_V_22_ce1;
reg buffer1_1_48_8x8_p_V_22_we1;
reg[6:0] buffer1_1_48_8x8_p_V_46_address0;
reg buffer1_1_48_8x8_p_V_46_ce0;
reg buffer1_1_48_8x8_p_V_46_we0;
reg[7:0] buffer1_1_48_8x8_p_V_46_d0;
reg buffer1_1_48_8x8_p_V_46_ce1;
reg buffer1_1_48_8x8_p_V_46_we1;
reg[6:0] buffer1_1_48_8x8_p_V_23_address0;
reg buffer1_1_48_8x8_p_V_23_ce0;
reg buffer1_1_48_8x8_p_V_23_we0;
reg[7:0] buffer1_1_48_8x8_p_V_23_d0;
reg buffer1_1_48_8x8_p_V_23_ce1;
reg buffer1_1_48_8x8_p_V_23_we1;
reg[6:0] buffer1_1_48_8x8_p_V_47_address0;
reg buffer1_1_48_8x8_p_V_47_ce0;
reg buffer1_1_48_8x8_p_V_47_we0;
reg[7:0] buffer1_1_48_8x8_p_V_47_d0;
reg buffer1_1_48_8x8_p_V_47_ce1;
reg buffer1_1_48_8x8_p_V_47_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] indvar_flatten4_reg_2447;
reg   [5:0] co_reg_2458;
reg   [7:0] indvar_flatten_reg_2470;
reg   [3:0] h_reg_2481;
reg   [3:0] w_reg_2493;
reg   [11:0] indvar_flatten5_reg_2540;
reg   [5:0] co4_reg_2551;
reg   [7:0] indvar_flatten6_reg_2563;
reg   [3:0] h5_reg_2574;
reg   [3:0] w6_reg_2586;
wire   [0:0] exitcond_flatten4_fu_2814_p2;
reg   [0:0] exitcond_flatten4_reg_4290;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten4_reg_4290;
wire   [11:0] indvar_flatten_next4_fu_2820_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_2826_p2;
reg   [0:0] exitcond_flatten_reg_4299;
wire   [7:0] indvar_flatten_next_fu_2838_p3;
wire   [5:0] co_cast9_mid2_v_fu_2859_p3;
reg   [5:0] co_cast9_mid2_v_reg_4312;
reg    ap_enable_reg_pp0_iter1;
wire   [3:0] w_mid2_fu_2899_p3;
reg   [3:0] w_mid2_reg_4317;
wire   [3:0] h_cast8_mid2_fu_2907_p3;
reg   [3:0] h_cast8_mid2_reg_4323;
wire   [3:0] w_15_fu_3004_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [9:0] h1_cast6_cast_fu_3009_p1;
reg   [9:0] h1_cast6_cast_reg_4340;
wire    ap_CS_fsm_state6;
wire   [7:0] tmp_201_fu_3037_p2;
reg   [7:0] tmp_201_reg_4345;
wire   [0:0] exitcond14_fu_3043_p2;
wire   [13:0] w2_cast5_cast1_fu_3049_p1;
reg   [13:0] w2_cast5_cast1_reg_4354;
wire    ap_CS_fsm_state7;
reg   [6:0] buffer1_1_48_8x8_p_V_143_reg_4359;
reg   [6:0] buffer1_1_48_8x8_p_V_144_reg_4364;
reg   [6:0] buffer1_1_48_8x8_p_V_145_reg_4369;
reg   [6:0] buffer1_1_48_8x8_p_V_146_reg_4374;
reg   [6:0] buffer1_1_48_8x8_p_V_147_reg_4379;
reg   [6:0] buffer1_1_48_8x8_p_V_148_reg_4384;
reg   [6:0] buffer1_1_48_8x8_p_V_149_reg_4389;
reg   [6:0] buffer1_1_48_8x8_p_V_150_reg_4394;
reg   [6:0] buffer1_1_48_8x8_p_V_151_reg_4399;
reg   [6:0] buffer1_1_48_8x8_p_V_152_reg_4404;
reg   [6:0] buffer1_1_48_8x8_p_V_153_reg_4409;
reg   [6:0] buffer1_1_48_8x8_p_V_154_reg_4414;
reg   [6:0] buffer1_1_48_8x8_p_V_155_reg_4419;
reg   [6:0] buffer1_1_48_8x8_p_V_156_reg_4424;
reg   [6:0] buffer1_1_48_8x8_p_V_157_reg_4429;
reg   [6:0] buffer1_1_48_8x8_p_V_158_reg_4434;
reg   [6:0] buffer1_1_48_8x8_p_V_159_reg_4439;
reg   [6:0] buffer1_1_48_8x8_p_V_160_reg_4444;
reg   [6:0] buffer1_1_48_8x8_p_V_161_reg_4449;
reg   [6:0] buffer1_1_48_8x8_p_V_162_reg_4454;
reg   [6:0] buffer1_1_48_8x8_p_V_163_reg_4459;
reg   [6:0] buffer1_1_48_8x8_p_V_164_reg_4464;
reg   [6:0] buffer1_1_48_8x8_p_V_165_reg_4469;
reg   [6:0] buffer1_1_48_8x8_p_V_166_reg_4474;
reg   [6:0] buffer1_1_48_8x8_p_V_167_reg_4479;
reg   [6:0] buffer1_1_48_8x8_p_V_168_reg_4484;
reg   [6:0] buffer1_1_48_8x8_p_V_169_reg_4489;
reg   [6:0] buffer1_1_48_8x8_p_V_170_reg_4494;
reg   [6:0] buffer1_1_48_8x8_p_V_171_reg_4499;
reg   [6:0] buffer1_1_48_8x8_p_V_172_reg_4504;
reg   [6:0] buffer1_1_48_8x8_p_V_173_reg_4509;
reg   [6:0] buffer1_1_48_8x8_p_V_174_reg_4514;
reg   [6:0] buffer1_1_48_8x8_p_V_175_reg_4519;
reg   [6:0] buffer1_1_48_8x8_p_V_176_reg_4524;
reg   [6:0] buffer1_1_48_8x8_p_V_177_reg_4529;
reg   [6:0] buffer1_1_48_8x8_p_V_178_reg_4534;
reg   [6:0] buffer1_1_48_8x8_p_V_179_reg_4539;
reg   [6:0] buffer1_1_48_8x8_p_V_180_reg_4544;
reg   [6:0] buffer1_1_48_8x8_p_V_181_reg_4549;
reg   [6:0] buffer1_1_48_8x8_p_V_182_reg_4554;
reg   [6:0] buffer1_1_48_8x8_p_V_183_reg_4559;
reg   [6:0] buffer1_1_48_8x8_p_V_184_reg_4564;
reg   [6:0] buffer1_1_48_8x8_p_V_185_reg_4569;
reg   [6:0] buffer1_1_48_8x8_p_V_186_reg_4574;
reg   [6:0] buffer1_1_48_8x8_p_V_187_reg_4579;
reg   [6:0] buffer1_1_48_8x8_p_V_188_reg_4584;
reg   [6:0] buffer1_1_48_8x8_p_V_189_reg_4589;
reg   [6:0] buffer1_1_48_8x8_p_V_190_reg_4594;
wire   [3:0] h_3_fu_3120_p2;
wire   [0:0] exitcond15_fu_3114_p2;
reg   [12:0] input_V_addr_reg_4607;
wire    ap_CS_fsm_state8;
reg   [5:0] weight_0_V_addr_reg_4612;
reg   [5:0] weight_1_V_addr_reg_4617;
reg   [5:0] weight_2_V_addr_reg_4622;
reg   [5:0] weight_3_V_addr_reg_4627;
reg   [5:0] weight_4_V_addr_reg_4632;
reg   [5:0] weight_5_V_addr_reg_4637;
reg   [5:0] weight_6_V_addr_reg_4642;
reg   [5:0] weight_7_V_addr_reg_4647;
reg   [5:0] weight_8_V_addr_reg_4652;
reg   [5:0] weight_9_V_addr_reg_4657;
reg   [5:0] weight_10_V_addr_reg_4662;
reg   [5:0] weight_11_V_addr_reg_4667;
reg   [5:0] weight_12_V_addr_reg_4672;
reg   [5:0] weight_13_V_addr_reg_4677;
reg   [5:0] weight_14_V_addr_reg_4682;
reg   [5:0] weight_15_V_addr_reg_4687;
reg   [5:0] weight_16_V_addr_reg_4692;
reg   [5:0] weight_17_V_addr_reg_4697;
reg   [5:0] weight_18_V_addr_reg_4702;
reg   [5:0] weight_19_V_addr_reg_4707;
reg   [5:0] weight_20_V_addr_reg_4712;
reg   [5:0] weight_21_V_addr_reg_4717;
reg   [5:0] weight_22_V_addr_reg_4722;
reg   [5:0] weight_23_V_addr_reg_4727;
reg   [5:0] weight_24_V_addr_reg_4732;
reg   [5:0] weight_25_V_addr_reg_4737;
reg   [5:0] weight_26_V_addr_reg_4742;
reg   [5:0] weight_27_V_addr_reg_4747;
reg   [5:0] weight_28_V_addr_reg_4752;
reg   [5:0] weight_29_V_addr_reg_4757;
reg   [5:0] weight_30_V_addr_reg_4762;
reg   [5:0] weight_31_V_addr_reg_4767;
reg   [5:0] weight_32_V_addr_reg_4772;
reg   [5:0] weight_33_V_addr_reg_4777;
reg   [5:0] weight_34_V_addr_reg_4782;
reg   [5:0] weight_35_V_addr_reg_4787;
reg   [5:0] weight_36_V_addr_reg_4792;
reg   [5:0] weight_37_V_addr_reg_4797;
reg   [5:0] weight_38_V_addr_reg_4802;
reg   [5:0] weight_39_V_addr_reg_4807;
reg   [5:0] weight_40_V_addr_reg_4812;
reg   [5:0] weight_41_V_addr_reg_4817;
reg   [5:0] weight_42_V_addr_reg_4822;
reg   [5:0] weight_43_V_addr_reg_4827;
reg   [5:0] weight_44_V_addr_reg_4832;
reg   [5:0] weight_45_V_addr_reg_4837;
reg   [5:0] weight_46_V_addr_reg_4842;
reg   [5:0] weight_47_V_addr_reg_4847;
wire   [5:0] ci_5_fu_3259_p2;
reg   [5:0] ci_5_reg_4855;
wire   [3:0] w_16_fu_3265_p2;
wire   [0:0] exitcond17_fu_3253_p2;
reg   [7:0] input_V_load_reg_4865;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond_flatten6_fu_3991_p2;
reg   [0:0] exitcond_flatten6_reg_4893;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten6_reg_4893;
wire   [11:0] indvar_flatten_next6_fu_3997_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten3_fu_4003_p2;
reg   [0:0] exitcond_flatten3_reg_4902;
wire   [7:0] indvar_flatten_next5_fu_4015_p3;
wire   [5:0] co4_mid2_fu_4053_p3;
reg   [5:0] co4_mid2_reg_4915;
reg    ap_enable_reg_pp1_iter1;
reg   [5:0] ap_reg_pp1_iter2_co4_mid2_reg_4915;
wire   [3:0] w6_mid2_fu_4071_p3;
reg   [3:0] w6_mid2_reg_4921;
wire   [3:0] h5_cast2_mid2_fu_4079_p3;
reg   [3:0] h5_cast2_mid2_reg_4927;
reg   [6:0] buffer1_1_48_8x8_p_V_239_reg_4934;
reg   [6:0] buffer1_1_48_8x8_p_V_240_reg_4940;
reg   [6:0] buffer1_1_48_8x8_p_V_241_reg_4946;
reg   [6:0] buffer1_1_48_8x8_p_V_242_reg_4952;
reg   [6:0] buffer1_1_48_8x8_p_V_243_reg_4958;
reg   [6:0] buffer1_1_48_8x8_p_V_244_reg_4964;
reg   [6:0] buffer1_1_48_8x8_p_V_245_reg_4970;
reg   [6:0] buffer1_1_48_8x8_p_V_246_reg_4976;
reg   [6:0] buffer1_1_48_8x8_p_V_247_reg_4982;
reg   [6:0] buffer1_1_48_8x8_p_V_248_reg_4988;
reg   [6:0] buffer1_1_48_8x8_p_V_249_reg_4994;
reg   [6:0] buffer1_1_48_8x8_p_V_250_reg_5000;
reg   [6:0] buffer1_1_48_8x8_p_V_251_reg_5006;
reg   [6:0] buffer1_1_48_8x8_p_V_252_reg_5012;
reg   [6:0] buffer1_1_48_8x8_p_V_253_reg_5018;
reg   [6:0] buffer1_1_48_8x8_p_V_254_reg_5024;
reg   [6:0] buffer1_1_48_8x8_p_V_255_reg_5030;
reg   [6:0] buffer1_1_48_8x8_p_V_256_reg_5036;
reg   [6:0] buffer1_1_48_8x8_p_V_257_reg_5042;
reg   [6:0] buffer1_1_48_8x8_p_V_258_reg_5048;
reg   [6:0] buffer1_1_48_8x8_p_V_259_reg_5054;
reg   [6:0] buffer1_1_48_8x8_p_V_260_reg_5060;
reg   [6:0] buffer1_1_48_8x8_p_V_261_reg_5066;
reg   [6:0] buffer1_1_48_8x8_p_V_262_reg_5072;
reg   [6:0] buffer1_1_48_8x8_p_V_263_reg_5078;
reg   [6:0] buffer1_1_48_8x8_p_V_264_reg_5084;
reg   [6:0] buffer1_1_48_8x8_p_V_265_reg_5090;
reg   [6:0] buffer1_1_48_8x8_p_V_266_reg_5096;
reg   [6:0] buffer1_1_48_8x8_p_V_267_reg_5102;
reg   [6:0] buffer1_1_48_8x8_p_V_268_reg_5108;
reg   [6:0] buffer1_1_48_8x8_p_V_269_reg_5114;
reg   [6:0] buffer1_1_48_8x8_p_V_270_reg_5120;
reg   [6:0] buffer1_1_48_8x8_p_V_271_reg_5126;
reg   [6:0] buffer1_1_48_8x8_p_V_272_reg_5132;
reg   [6:0] buffer1_1_48_8x8_p_V_273_reg_5138;
reg   [6:0] buffer1_1_48_8x8_p_V_274_reg_5144;
reg   [6:0] buffer1_1_48_8x8_p_V_275_reg_5150;
reg   [6:0] buffer1_1_48_8x8_p_V_276_reg_5156;
reg   [6:0] buffer1_1_48_8x8_p_V_277_reg_5162;
reg   [6:0] buffer1_1_48_8x8_p_V_278_reg_5168;
reg   [6:0] buffer1_1_48_8x8_p_V_279_reg_5174;
reg   [6:0] buffer1_1_48_8x8_p_V_280_reg_5180;
reg   [6:0] buffer1_1_48_8x8_p_V_281_reg_5186;
reg   [6:0] buffer1_1_48_8x8_p_V_282_reg_5192;
reg   [6:0] buffer1_1_48_8x8_p_V_283_reg_5198;
reg   [6:0] buffer1_1_48_8x8_p_V_284_reg_5204;
reg   [6:0] buffer1_1_48_8x8_p_V_285_reg_5210;
reg   [6:0] buffer1_1_48_8x8_p_V_286_reg_5216;
wire   [3:0] w_17_fu_4176_p2;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] grp_MUL_DP_fu_2598_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2598_ap_return_1;
reg    grp_MUL_DP_fu_2598_ap_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire   [15:0] grp_MUL_DP_fu_2607_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2607_ap_return_1;
reg    grp_MUL_DP_fu_2607_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2616_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2616_ap_return_1;
reg    grp_MUL_DP_fu_2616_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2625_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2625_ap_return_1;
reg    grp_MUL_DP_fu_2625_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2634_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2634_ap_return_1;
reg    grp_MUL_DP_fu_2634_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2643_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2643_ap_return_1;
reg    grp_MUL_DP_fu_2643_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2652_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2652_ap_return_1;
reg    grp_MUL_DP_fu_2652_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2661_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2661_ap_return_1;
reg    grp_MUL_DP_fu_2661_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2670_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2670_ap_return_1;
reg    grp_MUL_DP_fu_2670_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2679_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2679_ap_return_1;
reg    grp_MUL_DP_fu_2679_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2688_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2688_ap_return_1;
reg    grp_MUL_DP_fu_2688_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2697_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2697_ap_return_1;
reg    grp_MUL_DP_fu_2697_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2706_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2706_ap_return_1;
reg    grp_MUL_DP_fu_2706_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2715_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2715_ap_return_1;
reg    grp_MUL_DP_fu_2715_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2724_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2724_ap_return_1;
reg    grp_MUL_DP_fu_2724_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2733_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2733_ap_return_1;
reg    grp_MUL_DP_fu_2733_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2742_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2742_ap_return_1;
reg    grp_MUL_DP_fu_2742_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2751_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2751_ap_return_1;
reg    grp_MUL_DP_fu_2751_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2760_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2760_ap_return_1;
reg    grp_MUL_DP_fu_2760_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2769_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2769_ap_return_1;
reg    grp_MUL_DP_fu_2769_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2778_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2778_ap_return_1;
reg    grp_MUL_DP_fu_2778_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2787_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2787_ap_return_1;
reg    grp_MUL_DP_fu_2787_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2796_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2796_ap_return_1;
reg    grp_MUL_DP_fu_2796_ap_ce;
wire   [15:0] grp_MUL_DP_fu_2805_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_2805_ap_return_1;
reg    grp_MUL_DP_fu_2805_ap_ce;
reg   [5:0] co_phi_fu_2462_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] h_phi_fu_2485_p4;
reg   [3:0] w_phi_fu_2497_p4;
reg   [3:0] h1_reg_2505;
wire    ap_CS_fsm_state5;
reg   [3:0] w2_reg_2517;
reg   [5:0] ci_reg_2529;
reg   [5:0] co4_phi_fu_2555_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] h5_phi_fu_2578_p4;
reg   [3:0] w6_phi_fu_2590_p4;
wire   [31:0] co_cast9_mid2_fu_2866_p1;
wire   [31:0] tmp_249_cast_fu_2952_p1;
wire   [31:0] tmp_253_cast_fu_3062_p1;
wire   [31:0] tmp_266_cast_fu_3248_p1;
wire   [31:0] ci_cast4_fu_3126_p1;
wire   [31:0] tmp_258_cast_fu_4124_p1;
wire   [7:0] tmp_42_21_fu_3954_p2;
wire   [0:0] tmp_209_fu_4282_p3;
wire   [7:0] tmp_42_20_fu_3924_p2;
wire   [7:0] tmp_42_19_fu_3894_p2;
wire   [7:0] tmp_42_18_fu_3864_p2;
wire   [7:0] tmp_42_17_fu_3834_p2;
wire   [7:0] tmp_42_16_fu_3804_p2;
wire   [7:0] tmp_42_15_fu_3774_p2;
wire   [7:0] tmp_42_14_fu_3744_p2;
wire   [7:0] tmp_42_13_fu_3714_p2;
wire   [7:0] tmp_42_12_fu_3684_p2;
wire   [7:0] tmp_42_11_fu_3654_p2;
wire   [7:0] tmp_42_10_fu_3624_p2;
wire   [7:0] tmp_42_s_fu_3594_p2;
wire   [7:0] tmp_42_9_fu_3564_p2;
wire   [7:0] tmp_42_8_fu_3534_p2;
wire   [7:0] tmp_42_7_fu_3504_p2;
wire   [7:0] tmp_42_6_fu_3474_p2;
wire   [7:0] tmp_42_5_fu_3444_p2;
wire   [7:0] tmp_42_4_fu_3414_p2;
wire   [7:0] tmp_42_3_fu_3384_p2;
wire   [7:0] tmp_42_2_fu_3354_p2;
wire   [7:0] tmp_42_1_fu_3324_p2;
wire   [7:0] tmp_22_fu_3294_p2;
wire   [7:0] tmp_40_22_fu_3973_p2;
wire   [7:0] tmp_40_21_fu_3943_p2;
wire   [7:0] tmp_40_20_fu_3913_p2;
wire   [7:0] tmp_40_19_fu_3883_p2;
wire   [7:0] tmp_40_18_fu_3853_p2;
wire   [7:0] tmp_40_17_fu_3823_p2;
wire   [7:0] tmp_40_16_fu_3793_p2;
wire   [7:0] tmp_40_15_fu_3763_p2;
wire   [7:0] tmp_40_14_fu_3733_p2;
wire   [7:0] tmp_40_13_fu_3703_p2;
wire   [7:0] tmp_40_12_fu_3673_p2;
wire   [7:0] tmp_40_11_fu_3643_p2;
wire   [7:0] tmp_40_10_fu_3613_p2;
wire   [7:0] tmp_40_s_fu_3583_p2;
wire   [7:0] tmp_40_9_fu_3553_p2;
wire   [7:0] tmp_40_8_fu_3523_p2;
wire   [7:0] tmp_40_7_fu_3493_p2;
wire   [7:0] tmp_40_6_fu_3463_p2;
wire   [7:0] tmp_40_5_fu_3433_p2;
wire   [7:0] tmp_40_4_fu_3403_p2;
wire   [7:0] tmp_40_3_fu_3373_p2;
wire   [7:0] tmp_40_2_fu_3343_p2;
wire   [7:0] tmp_40_1_fu_3313_p2;
wire   [7:0] tmp_20_fu_3283_p2;
wire   [7:0] tmp_42_22_fu_3984_p2;
wire    ap_CS_fsm_state9;
wire   [7:0] indvar_flatten_op_fu_2832_p2;
wire   [5:0] co_9_fu_2846_p2;
wire   [0:0] exitcond_fu_2876_p2;
wire   [0:0] not_exitcond_flatten_fu_2871_p2;
wire   [3:0] h_mid_fu_2852_p3;
wire   [0:0] exitcond23_mid_fu_2882_p2;
wire   [0:0] tmp_s_fu_2894_p2;
wire   [3:0] h_15_fu_2888_p2;
wire   [6:0] tmp_fu_2915_p3;
wire   [4:0] tmp_203_fu_2926_p3;
wire   [7:0] p_shl_cast_fu_2922_p1;
wire   [7:0] p_shl1_cast_fu_2933_p1;
wire   [7:0] w_cast7_cast_fu_2943_p1;
wire   [7:0] tmp_197_fu_2937_p2;
wire   [7:0] tmp_198_fu_2946_p2;
wire   [6:0] tmp_199_fu_3013_p3;
wire   [4:0] tmp_200_fu_3025_p3;
wire   [7:0] p_shl3_cast_fu_3033_p1;
wire   [7:0] p_shl2_cast_fu_3021_p1;
wire   [7:0] w2_cast5_cast_fu_3053_p1;
wire   [7:0] tmp_202_fu_3057_p2;
wire   [8:0] tmp_210_fu_3178_p3;
wire   [6:0] tmp_211_fu_3190_p3;
wire   [9:0] p_shl6_cast_fu_3186_p1;
wire   [9:0] p_shl7_cast_fu_3198_p1;
wire   [9:0] tmp_212_fu_3202_p2;
wire   [9:0] tmp_213_fu_3208_p2;
wire   [12:0] tmp_214_fu_3213_p3;
wire   [10:0] tmp_215_fu_3225_p3;
wire   [13:0] p_shl4_cast_fu_3221_p1;
wire   [13:0] p_shl5_cast_fu_3233_p1;
wire   [13:0] tmp_216_fu_3237_p2;
wire   [13:0] tmp_217_fu_3243_p2;
wire   [7:0] tmp_218_fu_3279_p1;
wire   [7:0] tmp_219_fu_3290_p1;
wire   [7:0] tmp_220_fu_3309_p1;
wire   [7:0] tmp_221_fu_3320_p1;
wire   [7:0] tmp_222_fu_3339_p1;
wire   [7:0] tmp_223_fu_3350_p1;
wire   [7:0] tmp_224_fu_3369_p1;
wire   [7:0] tmp_225_fu_3380_p1;
wire   [7:0] tmp_226_fu_3399_p1;
wire   [7:0] tmp_227_fu_3410_p1;
wire   [7:0] tmp_228_fu_3429_p1;
wire   [7:0] tmp_229_fu_3440_p1;
wire   [7:0] tmp_230_fu_3459_p1;
wire   [7:0] tmp_231_fu_3470_p1;
wire   [7:0] tmp_232_fu_3489_p1;
wire   [7:0] tmp_233_fu_3500_p1;
wire   [7:0] tmp_234_fu_3519_p1;
wire   [7:0] tmp_235_fu_3530_p1;
wire   [7:0] tmp_236_fu_3549_p1;
wire   [7:0] tmp_237_fu_3560_p1;
wire   [7:0] tmp_238_fu_3579_p1;
wire   [7:0] tmp_239_fu_3590_p1;
wire   [7:0] tmp_240_fu_3609_p1;
wire   [7:0] tmp_241_fu_3620_p1;
wire   [7:0] tmp_242_fu_3639_p1;
wire   [7:0] tmp_243_fu_3650_p1;
wire   [7:0] tmp_244_fu_3669_p1;
wire   [7:0] tmp_245_fu_3680_p1;
wire   [7:0] tmp_246_fu_3699_p1;
wire   [7:0] tmp_247_fu_3710_p1;
wire   [7:0] tmp_248_fu_3729_p1;
wire   [7:0] tmp_249_fu_3740_p1;
wire   [7:0] tmp_250_fu_3759_p1;
wire   [7:0] tmp_251_fu_3770_p1;
wire   [7:0] tmp_252_fu_3789_p1;
wire   [7:0] tmp_253_fu_3800_p1;
wire   [7:0] tmp_254_fu_3819_p1;
wire   [7:0] tmp_255_fu_3830_p1;
wire   [7:0] tmp_256_fu_3849_p1;
wire   [7:0] tmp_257_fu_3860_p1;
wire   [7:0] tmp_258_fu_3879_p1;
wire   [7:0] tmp_259_fu_3890_p1;
wire   [7:0] tmp_260_fu_3909_p1;
wire   [7:0] tmp_261_fu_3920_p1;
wire   [7:0] tmp_262_fu_3939_p1;
wire   [7:0] tmp_263_fu_3950_p1;
wire   [7:0] tmp_264_fu_3969_p1;
wire   [7:0] tmp_265_fu_3980_p1;
wire   [7:0] indvar_flatten21_op_fu_4009_p2;
wire   [0:0] exitcond16_fu_4041_p2;
wire   [0:0] not_exitcond_flatten_4_fu_4036_p2;
wire   [5:0] co_11_fu_4023_p2;
wire   [3:0] h5_mid_fu_4029_p3;
wire   [0:0] exitcond_mid_fu_4047_p2;
wire   [0:0] tmp_204_fu_4066_p2;
wire   [3:0] h_2_fu_4060_p2;
wire   [6:0] tmp_205_fu_4087_p3;
wire   [4:0] tmp_206_fu_4098_p3;
wire   [7:0] p_shl8_cast_fu_4094_p1;
wire   [7:0] p_shl9_cast_fu_4105_p1;
wire   [7:0] w6_cast1_cast_fu_4115_p1;
wire   [7:0] tmp_207_fu_4109_p2;
wire   [7:0] tmp_208_fu_4118_p2;
wire   [7:0] tmp_19_fu_4181_p50;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_2598(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_0_V_q0),
    .b_V(weight_24_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2598_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2598_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2598_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2607(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_1_V_q0),
    .b_V(weight_25_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2607_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2607_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2607_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2616(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_2_V_q0),
    .b_V(weight_26_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2616_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2616_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2616_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2625(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_3_V_q0),
    .b_V(weight_27_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2625_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2625_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2625_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2634(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_4_V_q0),
    .b_V(weight_28_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2634_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2634_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2634_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2643(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_5_V_q0),
    .b_V(weight_29_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2643_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2643_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2643_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2652(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_6_V_q0),
    .b_V(weight_30_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2652_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2652_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2652_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2661(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_7_V_q0),
    .b_V(weight_31_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2661_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2661_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2661_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2670(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_8_V_q0),
    .b_V(weight_32_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2670_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2670_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2670_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2679(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_9_V_q0),
    .b_V(weight_33_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2679_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2679_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2679_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2688(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_10_V_q0),
    .b_V(weight_34_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2688_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2688_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2688_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2697(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_11_V_q0),
    .b_V(weight_35_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2697_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2697_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2697_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2706(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_12_V_q0),
    .b_V(weight_36_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2706_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2706_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2706_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2715(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_13_V_q0),
    .b_V(weight_37_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2715_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2715_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2715_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2724(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_14_V_q0),
    .b_V(weight_38_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2724_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2724_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2724_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2733(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_15_V_q0),
    .b_V(weight_39_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2733_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2733_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2733_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2742(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_16_V_q0),
    .b_V(weight_40_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2742_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2742_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2742_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2751(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_17_V_q0),
    .b_V(weight_41_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2751_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2751_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2751_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2760(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_18_V_q0),
    .b_V(weight_42_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2760_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2760_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2760_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2769(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_19_V_q0),
    .b_V(weight_43_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2769_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2769_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2769_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2778(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_20_V_q0),
    .b_V(weight_44_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2778_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2778_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2778_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2787(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_21_V_q0),
    .b_V(weight_45_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2787_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2787_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2787_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2796(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_22_V_q0),
    .b_V(weight_46_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2796_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2796_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2796_ap_ce)
);

MUL_DP grp_MUL_DP_fu_2805(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_23_V_q0),
    .b_V(weight_47_V_q0),
    .w_V(input_V_load_reg_4865),
    .ap_return_0(grp_MUL_DP_fu_2805_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_2805_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_2805_ap_ce)
);

ShuffleNetV2_mux_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_fYi_x_U407(
    .din1(buffer1_1_48_8x8_p_V_48_q0),
    .din2(buffer1_1_48_8x8_p_V_1_q0),
    .din3(buffer1_1_48_8x8_p_V_2_q0),
    .din4(buffer1_1_48_8x8_p_V_3_q0),
    .din5(buffer1_1_48_8x8_p_V_4_q0),
    .din6(buffer1_1_48_8x8_p_V_5_q0),
    .din7(buffer1_1_48_8x8_p_V_6_q0),
    .din8(buffer1_1_48_8x8_p_V_7_q0),
    .din9(buffer1_1_48_8x8_p_V_8_q0),
    .din10(buffer1_1_48_8x8_p_V_9_q0),
    .din11(buffer1_1_48_8x8_p_V_10_q0),
    .din12(buffer1_1_48_8x8_p_V_11_q0),
    .din13(buffer1_1_48_8x8_p_V_12_q0),
    .din14(buffer1_1_48_8x8_p_V_13_q0),
    .din15(buffer1_1_48_8x8_p_V_14_q0),
    .din16(buffer1_1_48_8x8_p_V_15_q0),
    .din17(buffer1_1_48_8x8_p_V_16_q0),
    .din18(buffer1_1_48_8x8_p_V_17_q0),
    .din19(buffer1_1_48_8x8_p_V_18_q0),
    .din20(buffer1_1_48_8x8_p_V_19_q0),
    .din21(buffer1_1_48_8x8_p_V_20_q0),
    .din22(buffer1_1_48_8x8_p_V_21_q0),
    .din23(buffer1_1_48_8x8_p_V_22_q0),
    .din24(buffer1_1_48_8x8_p_V_23_q0),
    .din25(buffer1_1_48_8x8_p_V_24_q0),
    .din26(buffer1_1_48_8x8_p_V_25_q0),
    .din27(buffer1_1_48_8x8_p_V_26_q0),
    .din28(buffer1_1_48_8x8_p_V_27_q0),
    .din29(buffer1_1_48_8x8_p_V_28_q0),
    .din30(buffer1_1_48_8x8_p_V_29_q0),
    .din31(buffer1_1_48_8x8_p_V_30_q0),
    .din32(buffer1_1_48_8x8_p_V_31_q0),
    .din33(buffer1_1_48_8x8_p_V_32_q0),
    .din34(buffer1_1_48_8x8_p_V_33_q0),
    .din35(buffer1_1_48_8x8_p_V_34_q0),
    .din36(buffer1_1_48_8x8_p_V_35_q0),
    .din37(buffer1_1_48_8x8_p_V_36_q0),
    .din38(buffer1_1_48_8x8_p_V_37_q0),
    .din39(buffer1_1_48_8x8_p_V_38_q0),
    .din40(buffer1_1_48_8x8_p_V_39_q0),
    .din41(buffer1_1_48_8x8_p_V_40_q0),
    .din42(buffer1_1_48_8x8_p_V_41_q0),
    .din43(buffer1_1_48_8x8_p_V_42_q0),
    .din44(buffer1_1_48_8x8_p_V_43_q0),
    .din45(buffer1_1_48_8x8_p_V_44_q0),
    .din46(buffer1_1_48_8x8_p_V_45_q0),
    .din47(buffer1_1_48_8x8_p_V_46_q0),
    .din48(buffer1_1_48_8x8_p_V_47_q0),
    .din49(ap_reg_pp1_iter2_co4_mid2_reg_4915),
    .dout(tmp_19_fu_4181_p50)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond15_fu_3114_p2))) begin
        ci_reg_2529 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ci_reg_2529 <= ci_5_reg_4855;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
        co4_reg_2551 <= 6'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_2551 <= co4_mid2_reg_4915;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0))) begin
        co_reg_2458 <= co_cast9_mid2_v_reg_4312;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_2458 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_2505 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond15_fu_3114_p2 == 1'd1))) begin
        h1_reg_2505 <= h_3_fu_3120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
        h5_reg_2574 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_2574 <= h5_cast2_mid2_reg_4927;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0))) begin
        h_reg_2481 <= h_cast8_mid2_reg_4323;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_2481 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten4_fu_2814_p2 == 1'd0))) begin
        indvar_flatten4_reg_2447 <= indvar_flatten_next4_fu_2820_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_2447 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
        indvar_flatten5_reg_2540 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3991_p2))) begin
        indvar_flatten5_reg_2540 <= indvar_flatten_next6_fu_3997_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
        indvar_flatten6_reg_2563 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten6_fu_3991_p2))) begin
        indvar_flatten6_reg_2563 <= indvar_flatten_next5_fu_4015_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten4_fu_2814_p2 == 1'd0))) begin
        indvar_flatten_reg_2470 <= indvar_flatten_next_fu_2838_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_2470 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond14_fu_3043_p2))) begin
        w2_reg_2517 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond17_fu_3253_p2))) begin
        w2_reg_2517 <= w_16_fu_3265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
        w6_reg_2586 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w6_reg_2586 <= w_17_fu_4176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0))) begin
        w_reg_2493 <= w_15_fu_3004_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_2493 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 <= exitcond_flatten4_reg_4290;
        exitcond_flatten4_reg_4290 <= exitcond_flatten4_fu_2814_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten6_reg_4893 <= exitcond_flatten6_reg_4893;
        exitcond_flatten6_reg_4893 <= exitcond_flatten6_fu_3991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co4_mid2_reg_4915 <= co4_mid2_reg_4915;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buffer1_1_48_8x8_p_V_143_reg_4359 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_144_reg_4364 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_145_reg_4369 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_146_reg_4374 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_147_reg_4379 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_148_reg_4384 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_149_reg_4389 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_150_reg_4394 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_151_reg_4399 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_152_reg_4404 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_153_reg_4409 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_154_reg_4414 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_155_reg_4419 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_156_reg_4424 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_157_reg_4429 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_158_reg_4434 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_159_reg_4439 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_160_reg_4444 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_161_reg_4449 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_162_reg_4454 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_163_reg_4459 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_164_reg_4464 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_165_reg_4469 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_166_reg_4474 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_167_reg_4479 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_168_reg_4484 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_169_reg_4489 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_170_reg_4494 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_171_reg_4499 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_172_reg_4504 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_173_reg_4509 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_174_reg_4514 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_175_reg_4519 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_176_reg_4524 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_177_reg_4529 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_178_reg_4534 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_179_reg_4539 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_180_reg_4544 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_181_reg_4549 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_182_reg_4554 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_183_reg_4559 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_184_reg_4564 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_185_reg_4569 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_186_reg_4574 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_187_reg_4579 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_188_reg_4584 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_189_reg_4589 <= tmp_253_cast_fu_3062_p1;
        buffer1_1_48_8x8_p_V_190_reg_4594 <= tmp_253_cast_fu_3062_p1;
        w2_cast5_cast1_reg_4354[3 : 0] <= w2_cast5_cast1_fu_3049_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893))) begin
        buffer1_1_48_8x8_p_V_239_reg_4934 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_240_reg_4940 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_241_reg_4946 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_242_reg_4952 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_243_reg_4958 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_244_reg_4964 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_245_reg_4970 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_246_reg_4976 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_247_reg_4982 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_248_reg_4988 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_249_reg_4994 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_250_reg_5000 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_251_reg_5006 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_252_reg_5012 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_253_reg_5018 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_254_reg_5024 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_255_reg_5030 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_256_reg_5036 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_257_reg_5042 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_258_reg_5048 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_259_reg_5054 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_260_reg_5060 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_261_reg_5066 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_262_reg_5072 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_263_reg_5078 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_264_reg_5084 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_265_reg_5090 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_266_reg_5096 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_267_reg_5102 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_268_reg_5108 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_269_reg_5114 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_270_reg_5120 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_271_reg_5126 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_272_reg_5132 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_273_reg_5138 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_274_reg_5144 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_275_reg_5150 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_276_reg_5156 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_277_reg_5162 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_278_reg_5168 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_279_reg_5174 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_280_reg_5180 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_281_reg_5186 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_282_reg_5192 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_283_reg_5198 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_284_reg_5204 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_285_reg_5210 <= tmp_258_cast_fu_4124_p1;
        buffer1_1_48_8x8_p_V_286_reg_5216 <= tmp_258_cast_fu_4124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_5_reg_4855 <= ci_5_fu_3259_p2;
        input_V_addr_reg_4607 <= tmp_266_cast_fu_3248_p1;
        weight_0_V_addr_reg_4612 <= ci_cast4_fu_3126_p1;
        weight_10_V_addr_reg_4662 <= ci_cast4_fu_3126_p1;
        weight_11_V_addr_reg_4667 <= ci_cast4_fu_3126_p1;
        weight_12_V_addr_reg_4672 <= ci_cast4_fu_3126_p1;
        weight_13_V_addr_reg_4677 <= ci_cast4_fu_3126_p1;
        weight_14_V_addr_reg_4682 <= ci_cast4_fu_3126_p1;
        weight_15_V_addr_reg_4687 <= ci_cast4_fu_3126_p1;
        weight_16_V_addr_reg_4692 <= ci_cast4_fu_3126_p1;
        weight_17_V_addr_reg_4697 <= ci_cast4_fu_3126_p1;
        weight_18_V_addr_reg_4702 <= ci_cast4_fu_3126_p1;
        weight_19_V_addr_reg_4707 <= ci_cast4_fu_3126_p1;
        weight_1_V_addr_reg_4617 <= ci_cast4_fu_3126_p1;
        weight_20_V_addr_reg_4712 <= ci_cast4_fu_3126_p1;
        weight_21_V_addr_reg_4717 <= ci_cast4_fu_3126_p1;
        weight_22_V_addr_reg_4722 <= ci_cast4_fu_3126_p1;
        weight_23_V_addr_reg_4727 <= ci_cast4_fu_3126_p1;
        weight_24_V_addr_reg_4732 <= ci_cast4_fu_3126_p1;
        weight_25_V_addr_reg_4737 <= ci_cast4_fu_3126_p1;
        weight_26_V_addr_reg_4742 <= ci_cast4_fu_3126_p1;
        weight_27_V_addr_reg_4747 <= ci_cast4_fu_3126_p1;
        weight_28_V_addr_reg_4752 <= ci_cast4_fu_3126_p1;
        weight_29_V_addr_reg_4757 <= ci_cast4_fu_3126_p1;
        weight_2_V_addr_reg_4622 <= ci_cast4_fu_3126_p1;
        weight_30_V_addr_reg_4762 <= ci_cast4_fu_3126_p1;
        weight_31_V_addr_reg_4767 <= ci_cast4_fu_3126_p1;
        weight_32_V_addr_reg_4772 <= ci_cast4_fu_3126_p1;
        weight_33_V_addr_reg_4777 <= ci_cast4_fu_3126_p1;
        weight_34_V_addr_reg_4782 <= ci_cast4_fu_3126_p1;
        weight_35_V_addr_reg_4787 <= ci_cast4_fu_3126_p1;
        weight_36_V_addr_reg_4792 <= ci_cast4_fu_3126_p1;
        weight_37_V_addr_reg_4797 <= ci_cast4_fu_3126_p1;
        weight_38_V_addr_reg_4802 <= ci_cast4_fu_3126_p1;
        weight_39_V_addr_reg_4807 <= ci_cast4_fu_3126_p1;
        weight_3_V_addr_reg_4627 <= ci_cast4_fu_3126_p1;
        weight_40_V_addr_reg_4812 <= ci_cast4_fu_3126_p1;
        weight_41_V_addr_reg_4817 <= ci_cast4_fu_3126_p1;
        weight_42_V_addr_reg_4822 <= ci_cast4_fu_3126_p1;
        weight_43_V_addr_reg_4827 <= ci_cast4_fu_3126_p1;
        weight_44_V_addr_reg_4832 <= ci_cast4_fu_3126_p1;
        weight_45_V_addr_reg_4837 <= ci_cast4_fu_3126_p1;
        weight_46_V_addr_reg_4842 <= ci_cast4_fu_3126_p1;
        weight_47_V_addr_reg_4847 <= ci_cast4_fu_3126_p1;
        weight_4_V_addr_reg_4632 <= ci_cast4_fu_3126_p1;
        weight_5_V_addr_reg_4637 <= ci_cast4_fu_3126_p1;
        weight_6_V_addr_reg_4642 <= ci_cast4_fu_3126_p1;
        weight_7_V_addr_reg_4647 <= ci_cast4_fu_3126_p1;
        weight_8_V_addr_reg_4652 <= ci_cast4_fu_3126_p1;
        weight_9_V_addr_reg_4657 <= ci_cast4_fu_3126_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten6_reg_4893))) begin
        co4_mid2_reg_4915 <= co4_mid2_fu_4053_p3;
        h5_cast2_mid2_reg_4927 <= h5_cast2_mid2_fu_4079_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten4_reg_4290 == 1'd0))) begin
        co_cast9_mid2_v_reg_4312 <= co_cast9_mid2_v_fu_2859_p3;
        h_cast8_mid2_reg_4323 <= h_cast8_mid2_fu_2907_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_fu_3991_p2))) begin
        exitcond_flatten3_reg_4902 <= exitcond_flatten3_fu_4003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten4_fu_2814_p2 == 1'd0))) begin
        exitcond_flatten_reg_4299 <= exitcond_flatten_fu_2826_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast6_cast_reg_4340[3 : 0] <= h1_cast6_cast_fu_3009_p1[3 : 0];
        tmp_201_reg_4345[7 : 1] <= tmp_201_fu_3037_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_V_load_reg_4865 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten6_reg_4893))) begin
        w6_mid2_reg_4921 <= w6_mid2_fu_4071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten4_reg_4290 == 1'd0))) begin
        w_mid2_reg_4317 <= w_mid2_fu_2899_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten4_fu_2814_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten6_fu_3991_p2)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_10_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_10_address0 = buffer1_1_48_8x8_p_V_145_reg_4369;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_10_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_10_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_10_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_10_d0 = tmp_40_s_fu_3583_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_10_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd10)))) begin
        buffer1_1_48_8x8_p_V_10_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd10))) begin
        buffer1_1_48_8x8_p_V_10_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_11_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_11_address0 = buffer1_1_48_8x8_p_V_160_reg_4444;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_11_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_11_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_11_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_11_d0 = tmp_40_10_fu_3613_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_11_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd11)))) begin
        buffer1_1_48_8x8_p_V_11_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd11))) begin
        buffer1_1_48_8x8_p_V_11_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_12_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_12_address0 = buffer1_1_48_8x8_p_V_146_reg_4374;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_12_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_12_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_12_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_12_d0 = tmp_40_11_fu_3643_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_12_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd12)))) begin
        buffer1_1_48_8x8_p_V_12_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd12))) begin
        buffer1_1_48_8x8_p_V_12_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_13_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_13_address0 = buffer1_1_48_8x8_p_V_144_reg_4364;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_13_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_13_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_13_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_13_d0 = tmp_40_12_fu_3673_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_13_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd13)))) begin
        buffer1_1_48_8x8_p_V_13_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd13))) begin
        buffer1_1_48_8x8_p_V_13_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_14_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_14_address0 = buffer1_1_48_8x8_p_V_143_reg_4359;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_14_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_14_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_14_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_14_d0 = tmp_40_13_fu_3703_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_14_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd14)))) begin
        buffer1_1_48_8x8_p_V_14_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd14))) begin
        buffer1_1_48_8x8_p_V_14_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_15_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_15_address0 = buffer1_1_48_8x8_p_V_161_reg_4449;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_15_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_15_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_15_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_15_d0 = tmp_40_14_fu_3733_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_15_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd15)))) begin
        buffer1_1_48_8x8_p_V_15_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd15))) begin
        buffer1_1_48_8x8_p_V_15_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_16_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_16_address0 = buffer1_1_48_8x8_p_V_159_reg_4439;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_16_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_16_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_16_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_16_d0 = tmp_40_15_fu_3763_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_16_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd16)))) begin
        buffer1_1_48_8x8_p_V_16_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd16))) begin
        buffer1_1_48_8x8_p_V_16_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_17_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_17_address0 = buffer1_1_48_8x8_p_V_162_reg_4454;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_17_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_17_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_17_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_17_d0 = tmp_40_16_fu_3793_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_17_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd17)))) begin
        buffer1_1_48_8x8_p_V_17_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd17))) begin
        buffer1_1_48_8x8_p_V_17_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_18_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_18_address0 = buffer1_1_48_8x8_p_V_156_reg_4424;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_18_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_18_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_18_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_18_d0 = tmp_40_17_fu_3823_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_18_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd18)))) begin
        buffer1_1_48_8x8_p_V_18_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd18))) begin
        buffer1_1_48_8x8_p_V_18_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_19_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_19_address0 = buffer1_1_48_8x8_p_V_155_reg_4419;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_19_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_19_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_19_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_19_d0 = tmp_40_18_fu_3853_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_19_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd19)))) begin
        buffer1_1_48_8x8_p_V_19_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd19))) begin
        buffer1_1_48_8x8_p_V_19_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_1_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_1_address0 = buffer1_1_48_8x8_p_V_158_reg_4434;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_1_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_1_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_1_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_1_d0 = tmp_40_1_fu_3313_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_1_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd1)))) begin
        buffer1_1_48_8x8_p_V_1_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd1))) begin
        buffer1_1_48_8x8_p_V_1_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_20_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_20_address0 = buffer1_1_48_8x8_p_V_174_reg_4514;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_20_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_20_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_20_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_20_d0 = tmp_40_19_fu_3883_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_20_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd20)))) begin
        buffer1_1_48_8x8_p_V_20_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd20))) begin
        buffer1_1_48_8x8_p_V_20_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_21_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_21_address0 = buffer1_1_48_8x8_p_V_171_reg_4499;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_21_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_21_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_21_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_21_d0 = tmp_40_20_fu_3913_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_21_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd21)))) begin
        buffer1_1_48_8x8_p_V_21_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd21))) begin
        buffer1_1_48_8x8_p_V_21_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_22_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_22_address0 = buffer1_1_48_8x8_p_V_176_reg_4524;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_22_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_22_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_22_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_22_d0 = tmp_40_21_fu_3943_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_22_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd22)))) begin
        buffer1_1_48_8x8_p_V_22_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd22))) begin
        buffer1_1_48_8x8_p_V_22_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_23_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_23_address0 = buffer1_1_48_8x8_p_V_179_reg_4539;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_23_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_23_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_23_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_23_d0 = tmp_40_22_fu_3973_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_23_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd23)))) begin
        buffer1_1_48_8x8_p_V_23_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd23))) begin
        buffer1_1_48_8x8_p_V_23_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_24_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_24_address0 = buffer1_1_48_8x8_p_V_180_reg_4544;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_24_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_24_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_24_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_24_d0 = tmp_22_fu_3294_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_24_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd24)))) begin
        buffer1_1_48_8x8_p_V_24_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd24))) begin
        buffer1_1_48_8x8_p_V_24_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_25_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_25_address0 = buffer1_1_48_8x8_p_V_177_reg_4529;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_25_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_25_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_25_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_25_d0 = tmp_42_1_fu_3324_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_25_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_25_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd25)))) begin
        buffer1_1_48_8x8_p_V_25_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd25))) begin
        buffer1_1_48_8x8_p_V_25_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_26_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_26_address0 = buffer1_1_48_8x8_p_V_178_reg_4534;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_26_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_26_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_26_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_26_d0 = tmp_42_2_fu_3354_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_26_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_26_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd26)))) begin
        buffer1_1_48_8x8_p_V_26_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd26))) begin
        buffer1_1_48_8x8_p_V_26_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_27_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_27_address0 = buffer1_1_48_8x8_p_V_164_reg_4464;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_27_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_27_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_27_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_27_d0 = tmp_42_3_fu_3384_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_27_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_27_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd27)))) begin
        buffer1_1_48_8x8_p_V_27_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd27))) begin
        buffer1_1_48_8x8_p_V_27_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_28_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_28_address0 = buffer1_1_48_8x8_p_V_170_reg_4494;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_28_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_28_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_28_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_28_d0 = tmp_42_4_fu_3414_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_28_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_28_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd28)))) begin
        buffer1_1_48_8x8_p_V_28_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd28))) begin
        buffer1_1_48_8x8_p_V_28_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_29_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_29_address0 = buffer1_1_48_8x8_p_V_150_reg_4394;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_29_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_29_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_29_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_29_d0 = tmp_42_5_fu_3444_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_29_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_29_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd29)))) begin
        buffer1_1_48_8x8_p_V_29_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd29))) begin
        buffer1_1_48_8x8_p_V_29_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_2_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_2_address0 = buffer1_1_48_8x8_p_V_173_reg_4509;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_2_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_2_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_2_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_2_d0 = tmp_40_2_fu_3343_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_2_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd2)))) begin
        buffer1_1_48_8x8_p_V_2_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd2))) begin
        buffer1_1_48_8x8_p_V_2_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_30_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_30_address0 = buffer1_1_48_8x8_p_V_181_reg_4549;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_30_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_30_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_30_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_30_d0 = tmp_42_6_fu_3474_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_30_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_30_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd30)))) begin
        buffer1_1_48_8x8_p_V_30_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd30))) begin
        buffer1_1_48_8x8_p_V_30_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_31_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_31_address0 = buffer1_1_48_8x8_p_V_166_reg_4474;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_31_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_31_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_31_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_31_d0 = tmp_42_7_fu_3504_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_31_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_31_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd31)))) begin
        buffer1_1_48_8x8_p_V_31_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd31))) begin
        buffer1_1_48_8x8_p_V_31_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_32_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_32_address0 = buffer1_1_48_8x8_p_V_169_reg_4489;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_32_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_32_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_32_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_32_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_32_d0 = tmp_42_8_fu_3534_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_32_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_32_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd32)))) begin
        buffer1_1_48_8x8_p_V_32_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd32))) begin
        buffer1_1_48_8x8_p_V_32_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_32_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_33_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_33_address0 = buffer1_1_48_8x8_p_V_184_reg_4564;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_33_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_33_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_33_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_33_d0 = tmp_42_9_fu_3564_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_33_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_33_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd33)))) begin
        buffer1_1_48_8x8_p_V_33_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd33))) begin
        buffer1_1_48_8x8_p_V_33_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_33_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_34_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_34_address0 = buffer1_1_48_8x8_p_V_149_reg_4389;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_34_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_34_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_34_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_34_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_34_d0 = tmp_42_s_fu_3594_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_34_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_34_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd34)))) begin
        buffer1_1_48_8x8_p_V_34_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd34))) begin
        buffer1_1_48_8x8_p_V_34_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_34_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_35_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_35_address0 = buffer1_1_48_8x8_p_V_168_reg_4484;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_35_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_35_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_35_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_35_d0 = tmp_42_10_fu_3624_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_35_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_35_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd35)))) begin
        buffer1_1_48_8x8_p_V_35_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd35))) begin
        buffer1_1_48_8x8_p_V_35_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_35_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_36_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_36_address0 = buffer1_1_48_8x8_p_V_151_reg_4399;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_36_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_36_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_36_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_36_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_36_d0 = tmp_42_11_fu_3654_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_36_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_36_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd36)))) begin
        buffer1_1_48_8x8_p_V_36_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd36))) begin
        buffer1_1_48_8x8_p_V_36_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_36_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_37_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_37_address0 = buffer1_1_48_8x8_p_V_167_reg_4479;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_37_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_37_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_37_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_37_d0 = tmp_42_12_fu_3684_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_37_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_37_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd37)))) begin
        buffer1_1_48_8x8_p_V_37_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd37))) begin
        buffer1_1_48_8x8_p_V_37_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_37_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_38_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_38_address0 = buffer1_1_48_8x8_p_V_153_reg_4409;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_38_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_38_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_38_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_38_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_38_d0 = tmp_42_13_fu_3714_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_38_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_38_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd38)))) begin
        buffer1_1_48_8x8_p_V_38_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd38))) begin
        buffer1_1_48_8x8_p_V_38_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_38_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_39_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_39_address0 = buffer1_1_48_8x8_p_V_148_reg_4384;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_39_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_39_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_39_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_39_d0 = tmp_42_14_fu_3744_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_39_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_39_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd39)))) begin
        buffer1_1_48_8x8_p_V_39_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd39))) begin
        buffer1_1_48_8x8_p_V_39_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_39_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_3_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_3_address0 = buffer1_1_48_8x8_p_V_182_reg_4554;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_3_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_3_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_3_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_3_d0 = tmp_40_3_fu_3373_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_3_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd3)))) begin
        buffer1_1_48_8x8_p_V_3_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd3))) begin
        buffer1_1_48_8x8_p_V_3_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_40_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_40_address0 = buffer1_1_48_8x8_p_V_154_reg_4414;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_40_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_40_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_40_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_40_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_40_d0 = tmp_42_15_fu_3774_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_40_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_40_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd40)))) begin
        buffer1_1_48_8x8_p_V_40_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd40))) begin
        buffer1_1_48_8x8_p_V_40_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_40_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_41_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_41_address0 = buffer1_1_48_8x8_p_V_175_reg_4519;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_41_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_41_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_41_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_41_d0 = tmp_42_16_fu_3804_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_41_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_41_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd41)))) begin
        buffer1_1_48_8x8_p_V_41_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd41))) begin
        buffer1_1_48_8x8_p_V_41_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_41_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_42_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_42_address0 = buffer1_1_48_8x8_p_V_172_reg_4504;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_42_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_42_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_42_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_42_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_42_d0 = tmp_42_17_fu_3834_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_42_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_42_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd42)))) begin
        buffer1_1_48_8x8_p_V_42_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd42))) begin
        buffer1_1_48_8x8_p_V_42_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_42_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_43_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_43_address0 = buffer1_1_48_8x8_p_V_152_reg_4404;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_43_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_43_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_43_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_43_d0 = tmp_42_18_fu_3864_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_43_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_43_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd43)))) begin
        buffer1_1_48_8x8_p_V_43_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd43))) begin
        buffer1_1_48_8x8_p_V_43_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_43_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_44_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_44_address0 = buffer1_1_48_8x8_p_V_165_reg_4469;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_44_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_44_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_44_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_44_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_44_d0 = tmp_42_19_fu_3894_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_44_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_44_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd44)))) begin
        buffer1_1_48_8x8_p_V_44_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd44))) begin
        buffer1_1_48_8x8_p_V_44_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_44_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_45_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_45_address0 = buffer1_1_48_8x8_p_V_147_reg_4379;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_45_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_45_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_45_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_45_d0 = tmp_42_20_fu_3924_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_45_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_45_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd45)))) begin
        buffer1_1_48_8x8_p_V_45_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd45))) begin
        buffer1_1_48_8x8_p_V_45_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_45_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_46_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_46_address0 = buffer1_1_48_8x8_p_V_183_reg_4559;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_46_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_46_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_46_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_46_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_46_d0 = tmp_42_21_fu_3954_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_46_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_46_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd46)))) begin
        buffer1_1_48_8x8_p_V_46_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd46))) begin
        buffer1_1_48_8x8_p_V_46_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_46_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_47_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_47_address0 = buffer1_1_48_8x8_p_V_187_reg_4579;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_47_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_47_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_47_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_47_d0 = tmp_42_22_fu_3984_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_47_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_47_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast9_mid2_v_reg_4312 == 6'd0) & ~(co_cast9_mid2_v_reg_4312 == 6'd1) & ~(co_cast9_mid2_v_reg_4312 == 6'd2) & ~(co_cast9_mid2_v_reg_4312 == 6'd3) & ~(co_cast9_mid2_v_reg_4312 == 6'd4) & ~(co_cast9_mid2_v_reg_4312 == 6'd5) & ~(co_cast9_mid2_v_reg_4312 == 6'd6) & ~(co_cast9_mid2_v_reg_4312 == 6'd7) & ~(co_cast9_mid2_v_reg_4312 == 6'd8) & ~(co_cast9_mid2_v_reg_4312 == 6'd9) & ~(co_cast9_mid2_v_reg_4312 == 6'd10) & ~(co_cast9_mid2_v_reg_4312 == 6'd11) & ~(co_cast9_mid2_v_reg_4312 == 6'd12) & ~(co_cast9_mid2_v_reg_4312 == 6'd13) & ~(co_cast9_mid2_v_reg_4312 == 6'd14) & ~(co_cast9_mid2_v_reg_4312 == 6'd15) & ~(co_cast9_mid2_v_reg_4312 == 6'd16) & ~(co_cast9_mid2_v_reg_4312 == 6'd17) & ~(co_cast9_mid2_v_reg_4312 == 6'd18) & ~(co_cast9_mid2_v_reg_4312 == 6'd19) & ~(co_cast9_mid2_v_reg_4312 == 6'd20) & ~(co_cast9_mid2_v_reg_4312 == 6'd21) & ~(co_cast9_mid2_v_reg_4312 == 6'd22) & ~(co_cast9_mid2_v_reg_4312 == 6'd23) & ~(co_cast9_mid2_v_reg_4312 == 6'd24) & ~(co_cast9_mid2_v_reg_4312 == 6'd25) & ~(co_cast9_mid2_v_reg_4312 == 6'd26) & ~(co_cast9_mid2_v_reg_4312 == 6'd27) & ~(co_cast9_mid2_v_reg_4312 == 6'd28) & ~(co_cast9_mid2_v_reg_4312 == 6'd29) & ~(co_cast9_mid2_v_reg_4312 == 6'd30) & ~(co_cast9_mid2_v_reg_4312 == 6'd31) & ~(co_cast9_mid2_v_reg_4312 == 6'd32) & ~(co_cast9_mid2_v_reg_4312 == 6'd33) & ~(co_cast9_mid2_v_reg_4312 == 6'd34) & ~(co_cast9_mid2_v_reg_4312 == 6'd35) & ~(co_cast9_mid2_v_reg_4312 == 6'd36) & ~(co_cast9_mid2_v_reg_4312 == 6'd37) & ~(co_cast9_mid2_v_reg_4312 == 6'd38) & ~(co_cast9_mid2_v_reg_4312 == 6'd39) & ~(co_cast9_mid2_v_reg_4312 == 6'd40) & ~(co_cast9_mid2_v_reg_4312 == 6'd41) & ~(co_cast9_mid2_v_reg_4312 == 6'd42) & ~(co_cast9_mid2_v_reg_4312 == 6'd43) & ~(co_cast9_mid2_v_reg_4312 == 6'd44) & ~(co_cast9_mid2_v_reg_4312 == 6'd45) & ~(co_cast9_mid2_v_reg_4312 == 6'd46)))) begin
        buffer1_1_48_8x8_p_V_47_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd0) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd1) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd2) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd3) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd4) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd5) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd6) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd7) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd8) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd9) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd10) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd11) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd12) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd13) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd14) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd15) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd16) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd17) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd18) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd19) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd20) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd21) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd22) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd23) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd24) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd25) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd26) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd27) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd28) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd29) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd30) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd31) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd32) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd33) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd34) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd35) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd36) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd37) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd38) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd39) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd40) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd41) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd42) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd43) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd44) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd45) & ~(ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd46))) begin
        buffer1_1_48_8x8_p_V_47_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_47_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_48_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_48_address0 = buffer1_1_48_8x8_p_V_163_reg_4459;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_48_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_48_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_48_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_48_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_48_d0 = tmp_20_fu_3283_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_48_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_48_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd0)))) begin
        buffer1_1_48_8x8_p_V_48_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd0))) begin
        buffer1_1_48_8x8_p_V_48_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_48_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_4_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_4_address0 = buffer1_1_48_8x8_p_V_157_reg_4429;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_4_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_4_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_4_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_4_d0 = tmp_40_4_fu_3403_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_4_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd4)))) begin
        buffer1_1_48_8x8_p_V_4_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd4))) begin
        buffer1_1_48_8x8_p_V_4_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_5_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_5_address0 = buffer1_1_48_8x8_p_V_188_reg_4584;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_5_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_5_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_5_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_5_d0 = tmp_40_5_fu_3433_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_5_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd5)))) begin
        buffer1_1_48_8x8_p_V_5_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd5))) begin
        buffer1_1_48_8x8_p_V_5_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_6_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_6_address0 = buffer1_1_48_8x8_p_V_189_reg_4589;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_6_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_6_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_6_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_6_d0 = tmp_40_6_fu_3463_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_6_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd6)))) begin
        buffer1_1_48_8x8_p_V_6_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd6))) begin
        buffer1_1_48_8x8_p_V_6_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_7_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_7_address0 = buffer1_1_48_8x8_p_V_190_reg_4594;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_7_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_7_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_7_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_7_d0 = tmp_40_7_fu_3493_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_7_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd7)))) begin
        buffer1_1_48_8x8_p_V_7_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd7))) begin
        buffer1_1_48_8x8_p_V_7_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_8_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_8_address0 = buffer1_1_48_8x8_p_V_185_reg_4569;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_8_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_8_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_8_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_8_d0 = tmp_40_8_fu_3523_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_8_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd8)))) begin
        buffer1_1_48_8x8_p_V_8_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd8))) begin
        buffer1_1_48_8x8_p_V_8_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_9_address0 = tmp_258_cast_fu_4124_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_9_address0 = buffer1_1_48_8x8_p_V_186_reg_4574;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_9_address0 = tmp_249_cast_fu_2952_p1;
    end else begin
        buffer1_1_48_8x8_p_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer1_1_48_8x8_p_V_9_ce0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        buffer1_1_48_8x8_p_V_9_ce1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer1_1_48_8x8_p_V_9_d0 = tmp_40_9_fu_3553_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        buffer1_1_48_8x8_p_V_9_d0 = bias_V_q0;
    end else begin
        buffer1_1_48_8x8_p_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast9_mid2_v_reg_4312 == 6'd9)))) begin
        buffer1_1_48_8x8_p_V_9_we0 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_209_fu_4282_p3) & (ap_reg_pp1_iter2_co4_mid2_reg_4915 == 6'd9))) begin
        buffer1_1_48_8x8_p_V_9_we1 = 1'b1;
    end else begin
        buffer1_1_48_8x8_p_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_2555_p4 = co4_mid2_reg_4915;
    end else begin
        co4_phi_fu_2555_p4 = co4_reg_2551;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_2462_p4 = co_cast9_mid2_v_reg_4312;
    end else begin
        co_phi_fu_2462_p4 = co_reg_2458;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2598_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2598_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2607_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2607_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2616_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2616_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2625_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2625_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2634_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2634_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2643_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2643_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2652_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2652_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2661_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2661_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2670_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2670_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2679_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2679_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2688_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2688_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2697_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2697_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2706_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2706_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2715_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2715_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2724_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2724_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2733_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2733_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2742_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2742_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2751_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2751_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2760_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2760_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2769_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2769_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2778_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2778_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2787_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2787_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2796_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2796_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_MUL_DP_fu_2805_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_2805_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_2578_p4 = h5_cast2_mid2_reg_4927;
    end else begin
        h5_phi_fu_2578_p4 = h5_reg_2574;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_2485_p4 = h_cast8_mid2_reg_4323;
    end else begin
        h_phi_fu_2485_p4 = h_reg_2481;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten6_reg_4893) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_2590_p4 = w_17_fu_4176_p2;
    end else begin
        w6_phi_fu_2590_p4 = w6_reg_2586;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten4_reg_4290 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_2497_p4 = w_15_fu_3004_p2;
    end else begin
        w_phi_fu_2497_p4 = w_reg_2493;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_24_V_ce0 = 1'b1;
    end else begin
        weight_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_25_V_ce0 = 1'b1;
    end else begin
        weight_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_26_V_ce0 = 1'b1;
    end else begin
        weight_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_27_V_ce0 = 1'b1;
    end else begin
        weight_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_28_V_ce0 = 1'b1;
    end else begin
        weight_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_29_V_ce0 = 1'b1;
    end else begin
        weight_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_30_V_ce0 = 1'b1;
    end else begin
        weight_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_31_V_ce0 = 1'b1;
    end else begin
        weight_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_32_V_ce0 = 1'b1;
    end else begin
        weight_32_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_33_V_ce0 = 1'b1;
    end else begin
        weight_33_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_34_V_ce0 = 1'b1;
    end else begin
        weight_34_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_35_V_ce0 = 1'b1;
    end else begin
        weight_35_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_36_V_ce0 = 1'b1;
    end else begin
        weight_36_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_37_V_ce0 = 1'b1;
    end else begin
        weight_37_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_38_V_ce0 = 1'b1;
    end else begin
        weight_38_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_39_V_ce0 = 1'b1;
    end else begin
        weight_39_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_40_V_ce0 = 1'b1;
    end else begin
        weight_40_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_41_V_ce0 = 1'b1;
    end else begin
        weight_41_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_42_V_ce0 = 1'b1;
    end else begin
        weight_42_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_43_V_ce0 = 1'b1;
    end else begin
        weight_43_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_44_V_ce0 = 1'b1;
    end else begin
        weight_44_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_45_V_ce0 = 1'b1;
    end else begin
        weight_45_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_46_V_ce0 = 1'b1;
    end else begin
        weight_46_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_47_V_ce0 = 1'b1;
    end else begin
        weight_47_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten4_fu_2814_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten4_fu_2814_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond14_fu_3043_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond15_fu_3114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond17_fu_3253_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3991_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten6_fu_3991_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast9_mid2_fu_2866_p1;

assign buffer1_1_48_8x8_p_V_10_address1 = buffer1_1_48_8x8_p_V_241_reg_4946;

assign buffer1_1_48_8x8_p_V_10_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_11_address1 = buffer1_1_48_8x8_p_V_256_reg_5036;

assign buffer1_1_48_8x8_p_V_11_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_12_address1 = buffer1_1_48_8x8_p_V_242_reg_4952;

assign buffer1_1_48_8x8_p_V_12_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_13_address1 = buffer1_1_48_8x8_p_V_240_reg_4940;

assign buffer1_1_48_8x8_p_V_13_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_14_address1 = buffer1_1_48_8x8_p_V_239_reg_4934;

assign buffer1_1_48_8x8_p_V_14_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_15_address1 = buffer1_1_48_8x8_p_V_257_reg_5042;

assign buffer1_1_48_8x8_p_V_15_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_16_address1 = buffer1_1_48_8x8_p_V_255_reg_5030;

assign buffer1_1_48_8x8_p_V_16_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_17_address1 = buffer1_1_48_8x8_p_V_258_reg_5048;

assign buffer1_1_48_8x8_p_V_17_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_18_address1 = buffer1_1_48_8x8_p_V_252_reg_5012;

assign buffer1_1_48_8x8_p_V_18_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_19_address1 = buffer1_1_48_8x8_p_V_251_reg_5006;

assign buffer1_1_48_8x8_p_V_19_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_1_address1 = buffer1_1_48_8x8_p_V_254_reg_5024;

assign buffer1_1_48_8x8_p_V_1_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_20_address1 = buffer1_1_48_8x8_p_V_270_reg_5120;

assign buffer1_1_48_8x8_p_V_20_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_21_address1 = buffer1_1_48_8x8_p_V_267_reg_5102;

assign buffer1_1_48_8x8_p_V_21_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_22_address1 = buffer1_1_48_8x8_p_V_272_reg_5132;

assign buffer1_1_48_8x8_p_V_22_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_23_address1 = buffer1_1_48_8x8_p_V_275_reg_5150;

assign buffer1_1_48_8x8_p_V_23_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_24_address1 = buffer1_1_48_8x8_p_V_276_reg_5156;

assign buffer1_1_48_8x8_p_V_24_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_25_address1 = buffer1_1_48_8x8_p_V_273_reg_5138;

assign buffer1_1_48_8x8_p_V_25_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_26_address1 = buffer1_1_48_8x8_p_V_274_reg_5144;

assign buffer1_1_48_8x8_p_V_26_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_27_address1 = buffer1_1_48_8x8_p_V_260_reg_5060;

assign buffer1_1_48_8x8_p_V_27_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_28_address1 = buffer1_1_48_8x8_p_V_266_reg_5096;

assign buffer1_1_48_8x8_p_V_28_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_29_address1 = buffer1_1_48_8x8_p_V_246_reg_4976;

assign buffer1_1_48_8x8_p_V_29_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_2_address1 = buffer1_1_48_8x8_p_V_269_reg_5114;

assign buffer1_1_48_8x8_p_V_2_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_30_address1 = buffer1_1_48_8x8_p_V_277_reg_5162;

assign buffer1_1_48_8x8_p_V_30_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_31_address1 = buffer1_1_48_8x8_p_V_262_reg_5072;

assign buffer1_1_48_8x8_p_V_31_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_32_address1 = buffer1_1_48_8x8_p_V_265_reg_5090;

assign buffer1_1_48_8x8_p_V_32_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_33_address1 = buffer1_1_48_8x8_p_V_280_reg_5180;

assign buffer1_1_48_8x8_p_V_33_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_34_address1 = buffer1_1_48_8x8_p_V_245_reg_4970;

assign buffer1_1_48_8x8_p_V_34_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_35_address1 = buffer1_1_48_8x8_p_V_264_reg_5084;

assign buffer1_1_48_8x8_p_V_35_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_36_address1 = buffer1_1_48_8x8_p_V_247_reg_4982;

assign buffer1_1_48_8x8_p_V_36_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_37_address1 = buffer1_1_48_8x8_p_V_263_reg_5078;

assign buffer1_1_48_8x8_p_V_37_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_38_address1 = buffer1_1_48_8x8_p_V_249_reg_4994;

assign buffer1_1_48_8x8_p_V_38_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_39_address1 = buffer1_1_48_8x8_p_V_244_reg_4964;

assign buffer1_1_48_8x8_p_V_39_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_3_address1 = buffer1_1_48_8x8_p_V_278_reg_5168;

assign buffer1_1_48_8x8_p_V_3_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_40_address1 = buffer1_1_48_8x8_p_V_250_reg_5000;

assign buffer1_1_48_8x8_p_V_40_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_41_address1 = buffer1_1_48_8x8_p_V_271_reg_5126;

assign buffer1_1_48_8x8_p_V_41_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_42_address1 = buffer1_1_48_8x8_p_V_268_reg_5108;

assign buffer1_1_48_8x8_p_V_42_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_43_address1 = buffer1_1_48_8x8_p_V_248_reg_4988;

assign buffer1_1_48_8x8_p_V_43_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_44_address1 = buffer1_1_48_8x8_p_V_261_reg_5066;

assign buffer1_1_48_8x8_p_V_44_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_45_address1 = buffer1_1_48_8x8_p_V_243_reg_4958;

assign buffer1_1_48_8x8_p_V_45_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_46_address1 = buffer1_1_48_8x8_p_V_279_reg_5174;

assign buffer1_1_48_8x8_p_V_46_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_47_address1 = buffer1_1_48_8x8_p_V_283_reg_5198;

assign buffer1_1_48_8x8_p_V_47_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_48_address1 = buffer1_1_48_8x8_p_V_259_reg_5054;

assign buffer1_1_48_8x8_p_V_48_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_4_address1 = buffer1_1_48_8x8_p_V_253_reg_5018;

assign buffer1_1_48_8x8_p_V_4_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_5_address1 = buffer1_1_48_8x8_p_V_284_reg_5204;

assign buffer1_1_48_8x8_p_V_5_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_6_address1 = buffer1_1_48_8x8_p_V_285_reg_5210;

assign buffer1_1_48_8x8_p_V_6_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_7_address1 = buffer1_1_48_8x8_p_V_286_reg_5216;

assign buffer1_1_48_8x8_p_V_7_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_8_address1 = buffer1_1_48_8x8_p_V_281_reg_5186;

assign buffer1_1_48_8x8_p_V_8_d1 = 8'd0;

assign buffer1_1_48_8x8_p_V_9_address1 = buffer1_1_48_8x8_p_V_282_reg_5192;

assign buffer1_1_48_8x8_p_V_9_d1 = 8'd0;

assign ci_5_fu_3259_p2 = (ci_reg_2529 + 6'd1);

assign ci_cast4_fu_3126_p1 = ci_reg_2529;

assign co4_mid2_fu_4053_p3 = ((exitcond_flatten3_reg_4902[0:0] === 1'b1) ? co_11_fu_4023_p2 : co4_phi_fu_2555_p4);

assign co_11_fu_4023_p2 = (co4_phi_fu_2555_p4 + 6'd1);

assign co_9_fu_2846_p2 = (co_phi_fu_2462_p4 + 6'd1);

assign co_cast9_mid2_fu_2866_p1 = co_cast9_mid2_v_fu_2859_p3;

assign co_cast9_mid2_v_fu_2859_p3 = ((exitcond_flatten_reg_4299[0:0] === 1'b1) ? co_9_fu_2846_p2 : co_phi_fu_2462_p4);

assign exitcond14_fu_3043_p2 = ((h1_reg_2505 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond15_fu_3114_p2 = ((w2_reg_2517 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond16_fu_4041_p2 = ((w6_phi_fu_2590_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond17_fu_3253_p2 = ((ci_reg_2529 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond23_mid_fu_2882_p2 = (exitcond_fu_2876_p2 & not_exitcond_flatten_fu_2871_p2);

assign exitcond_flatten3_fu_4003_p2 = ((indvar_flatten6_reg_2563 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_2814_p2 = ((indvar_flatten4_reg_2447 == 12'd3072) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_3991_p2 = ((indvar_flatten5_reg_2540 == 12'd3072) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2826_p2 = ((indvar_flatten_reg_2470 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_2876_p2 = ((w_phi_fu_2497_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_4047_p2 = (exitcond16_fu_4041_p2 & not_exitcond_flatten_4_fu_4036_p2);

assign h1_cast6_cast_fu_3009_p1 = h1_reg_2505;

assign h5_cast2_mid2_fu_4079_p3 = ((exitcond_mid_fu_4047_p2[0:0] === 1'b1) ? h_2_fu_4060_p2 : h5_mid_fu_4029_p3);

assign h5_mid_fu_4029_p3 = ((exitcond_flatten3_reg_4902[0:0] === 1'b1) ? 4'd1 : h5_phi_fu_2578_p4);

assign h_15_fu_2888_p2 = (h_mid_fu_2852_p3 + 4'd1);

assign h_2_fu_4060_p2 = (h5_mid_fu_4029_p3 + 4'd1);

assign h_3_fu_3120_p2 = (h1_reg_2505 + 4'd1);

assign h_cast8_mid2_fu_2907_p3 = ((exitcond23_mid_fu_2882_p2[0:0] === 1'b1) ? h_15_fu_2888_p2 : h_mid_fu_2852_p3);

assign h_mid_fu_2852_p3 = ((exitcond_flatten_reg_4299[0:0] === 1'b1) ? 4'd1 : h_phi_fu_2485_p4);

assign indvar_flatten21_op_fu_4009_p2 = (indvar_flatten6_reg_2563 + 8'd1);

assign indvar_flatten_next4_fu_2820_p2 = (indvar_flatten4_reg_2447 + 12'd1);

assign indvar_flatten_next5_fu_4015_p3 = ((exitcond_flatten3_fu_4003_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten21_op_fu_4009_p2);

assign indvar_flatten_next6_fu_3997_p2 = (indvar_flatten5_reg_2540 + 12'd1);

assign indvar_flatten_next_fu_2838_p3 = ((exitcond_flatten_fu_2826_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_2832_p2);

assign indvar_flatten_op_fu_2832_p2 = (indvar_flatten_reg_2470 + 8'd1);

assign input_V_address0 = input_V_addr_reg_4607;

assign not_exitcond_flatten_4_fu_4036_p2 = (exitcond_flatten3_reg_4902 ^ 1'd1);

assign not_exitcond_flatten_fu_2871_p2 = (exitcond_flatten_reg_4299 ^ 1'd1);

assign p_shl1_cast_fu_2933_p1 = tmp_203_fu_2926_p3;

assign p_shl2_cast_fu_3021_p1 = tmp_199_fu_3013_p3;

assign p_shl3_cast_fu_3033_p1 = tmp_200_fu_3025_p3;

assign p_shl4_cast_fu_3221_p1 = tmp_214_fu_3213_p3;

assign p_shl5_cast_fu_3233_p1 = tmp_215_fu_3225_p3;

assign p_shl6_cast_fu_3186_p1 = tmp_210_fu_3178_p3;

assign p_shl7_cast_fu_3198_p1 = tmp_211_fu_3190_p3;

assign p_shl8_cast_fu_4094_p1 = tmp_205_fu_4087_p3;

assign p_shl9_cast_fu_4105_p1 = tmp_206_fu_4098_p3;

assign p_shl_cast_fu_2922_p1 = tmp_fu_2915_p3;

assign tmp_197_fu_2937_p2 = (p_shl_cast_fu_2922_p1 + p_shl1_cast_fu_2933_p1);

assign tmp_198_fu_2946_p2 = (w_cast7_cast_fu_2943_p1 + tmp_197_fu_2937_p2);

assign tmp_199_fu_3013_p3 = {{h1_reg_2505}, {3'd0}};

assign tmp_200_fu_3025_p3 = {{h1_reg_2505}, {1'd0}};

assign tmp_201_fu_3037_p2 = (p_shl3_cast_fu_3033_p1 + p_shl2_cast_fu_3021_p1);

assign tmp_202_fu_3057_p2 = (tmp_201_reg_4345 + w2_cast5_cast_fu_3053_p1);

assign tmp_203_fu_2926_p3 = {{h_cast8_mid2_reg_4323}, {1'd0}};

assign tmp_204_fu_4066_p2 = (exitcond_mid_fu_4047_p2 | exitcond_flatten3_reg_4902);

assign tmp_205_fu_4087_p3 = {{h5_cast2_mid2_reg_4927}, {3'd0}};

assign tmp_206_fu_4098_p3 = {{h5_cast2_mid2_reg_4927}, {1'd0}};

assign tmp_207_fu_4109_p2 = (p_shl8_cast_fu_4094_p1 + p_shl9_cast_fu_4105_p1);

assign tmp_208_fu_4118_p2 = (w6_cast1_cast_fu_4115_p1 + tmp_207_fu_4109_p2);

assign tmp_209_fu_4282_p3 = tmp_19_fu_4181_p50[32'd7];

assign tmp_20_fu_3283_p2 = (buffer1_1_48_8x8_p_V_48_q0 + tmp_218_fu_3279_p1);

assign tmp_210_fu_3178_p3 = {{ci_reg_2529}, {3'd0}};

assign tmp_211_fu_3190_p3 = {{ci_reg_2529}, {1'd0}};

assign tmp_212_fu_3202_p2 = (p_shl6_cast_fu_3186_p1 + p_shl7_cast_fu_3198_p1);

assign tmp_213_fu_3208_p2 = (h1_cast6_cast_reg_4340 + tmp_212_fu_3202_p2);

assign tmp_214_fu_3213_p3 = {{tmp_213_fu_3208_p2}, {3'd0}};

assign tmp_215_fu_3225_p3 = {{tmp_213_fu_3208_p2}, {1'd0}};

assign tmp_216_fu_3237_p2 = (p_shl4_cast_fu_3221_p1 + p_shl5_cast_fu_3233_p1);

assign tmp_217_fu_3243_p2 = (w2_cast5_cast1_reg_4354 + tmp_216_fu_3237_p2);

assign tmp_218_fu_3279_p1 = grp_MUL_DP_fu_2598_ap_return_0[7:0];

assign tmp_219_fu_3290_p1 = grp_MUL_DP_fu_2598_ap_return_1[7:0];

assign tmp_220_fu_3309_p1 = grp_MUL_DP_fu_2607_ap_return_0[7:0];

assign tmp_221_fu_3320_p1 = grp_MUL_DP_fu_2607_ap_return_1[7:0];

assign tmp_222_fu_3339_p1 = grp_MUL_DP_fu_2616_ap_return_0[7:0];

assign tmp_223_fu_3350_p1 = grp_MUL_DP_fu_2616_ap_return_1[7:0];

assign tmp_224_fu_3369_p1 = grp_MUL_DP_fu_2625_ap_return_0[7:0];

assign tmp_225_fu_3380_p1 = grp_MUL_DP_fu_2625_ap_return_1[7:0];

assign tmp_226_fu_3399_p1 = grp_MUL_DP_fu_2634_ap_return_0[7:0];

assign tmp_227_fu_3410_p1 = grp_MUL_DP_fu_2634_ap_return_1[7:0];

assign tmp_228_fu_3429_p1 = grp_MUL_DP_fu_2643_ap_return_0[7:0];

assign tmp_229_fu_3440_p1 = grp_MUL_DP_fu_2643_ap_return_1[7:0];

assign tmp_22_fu_3294_p2 = (buffer1_1_48_8x8_p_V_24_q0 + tmp_219_fu_3290_p1);

assign tmp_230_fu_3459_p1 = grp_MUL_DP_fu_2652_ap_return_0[7:0];

assign tmp_231_fu_3470_p1 = grp_MUL_DP_fu_2652_ap_return_1[7:0];

assign tmp_232_fu_3489_p1 = grp_MUL_DP_fu_2661_ap_return_0[7:0];

assign tmp_233_fu_3500_p1 = grp_MUL_DP_fu_2661_ap_return_1[7:0];

assign tmp_234_fu_3519_p1 = grp_MUL_DP_fu_2670_ap_return_0[7:0];

assign tmp_235_fu_3530_p1 = grp_MUL_DP_fu_2670_ap_return_1[7:0];

assign tmp_236_fu_3549_p1 = grp_MUL_DP_fu_2679_ap_return_0[7:0];

assign tmp_237_fu_3560_p1 = grp_MUL_DP_fu_2679_ap_return_1[7:0];

assign tmp_238_fu_3579_p1 = grp_MUL_DP_fu_2688_ap_return_0[7:0];

assign tmp_239_fu_3590_p1 = grp_MUL_DP_fu_2688_ap_return_1[7:0];

assign tmp_240_fu_3609_p1 = grp_MUL_DP_fu_2697_ap_return_0[7:0];

assign tmp_241_fu_3620_p1 = grp_MUL_DP_fu_2697_ap_return_1[7:0];

assign tmp_242_fu_3639_p1 = grp_MUL_DP_fu_2706_ap_return_0[7:0];

assign tmp_243_fu_3650_p1 = grp_MUL_DP_fu_2706_ap_return_1[7:0];

assign tmp_244_fu_3669_p1 = grp_MUL_DP_fu_2715_ap_return_0[7:0];

assign tmp_245_fu_3680_p1 = grp_MUL_DP_fu_2715_ap_return_1[7:0];

assign tmp_246_fu_3699_p1 = grp_MUL_DP_fu_2724_ap_return_0[7:0];

assign tmp_247_fu_3710_p1 = grp_MUL_DP_fu_2724_ap_return_1[7:0];

assign tmp_248_fu_3729_p1 = grp_MUL_DP_fu_2733_ap_return_0[7:0];

assign tmp_249_cast_fu_2952_p1 = tmp_198_fu_2946_p2;

assign tmp_249_fu_3740_p1 = grp_MUL_DP_fu_2733_ap_return_1[7:0];

assign tmp_250_fu_3759_p1 = grp_MUL_DP_fu_2742_ap_return_0[7:0];

assign tmp_251_fu_3770_p1 = grp_MUL_DP_fu_2742_ap_return_1[7:0];

assign tmp_252_fu_3789_p1 = grp_MUL_DP_fu_2751_ap_return_0[7:0];

assign tmp_253_cast_fu_3062_p1 = tmp_202_fu_3057_p2;

assign tmp_253_fu_3800_p1 = grp_MUL_DP_fu_2751_ap_return_1[7:0];

assign tmp_254_fu_3819_p1 = grp_MUL_DP_fu_2760_ap_return_0[7:0];

assign tmp_255_fu_3830_p1 = grp_MUL_DP_fu_2760_ap_return_1[7:0];

assign tmp_256_fu_3849_p1 = grp_MUL_DP_fu_2769_ap_return_0[7:0];

assign tmp_257_fu_3860_p1 = grp_MUL_DP_fu_2769_ap_return_1[7:0];

assign tmp_258_cast_fu_4124_p1 = tmp_208_fu_4118_p2;

assign tmp_258_fu_3879_p1 = grp_MUL_DP_fu_2778_ap_return_0[7:0];

assign tmp_259_fu_3890_p1 = grp_MUL_DP_fu_2778_ap_return_1[7:0];

assign tmp_260_fu_3909_p1 = grp_MUL_DP_fu_2787_ap_return_0[7:0];

assign tmp_261_fu_3920_p1 = grp_MUL_DP_fu_2787_ap_return_1[7:0];

assign tmp_262_fu_3939_p1 = grp_MUL_DP_fu_2796_ap_return_0[7:0];

assign tmp_263_fu_3950_p1 = grp_MUL_DP_fu_2796_ap_return_1[7:0];

assign tmp_264_fu_3969_p1 = grp_MUL_DP_fu_2805_ap_return_0[7:0];

assign tmp_265_fu_3980_p1 = grp_MUL_DP_fu_2805_ap_return_1[7:0];

assign tmp_266_cast_fu_3248_p1 = tmp_217_fu_3243_p2;

assign tmp_40_10_fu_3613_p2 = (buffer1_1_48_8x8_p_V_11_q0 + tmp_240_fu_3609_p1);

assign tmp_40_11_fu_3643_p2 = (buffer1_1_48_8x8_p_V_12_q0 + tmp_242_fu_3639_p1);

assign tmp_40_12_fu_3673_p2 = (buffer1_1_48_8x8_p_V_13_q0 + tmp_244_fu_3669_p1);

assign tmp_40_13_fu_3703_p2 = (buffer1_1_48_8x8_p_V_14_q0 + tmp_246_fu_3699_p1);

assign tmp_40_14_fu_3733_p2 = (buffer1_1_48_8x8_p_V_15_q0 + tmp_248_fu_3729_p1);

assign tmp_40_15_fu_3763_p2 = (buffer1_1_48_8x8_p_V_16_q0 + tmp_250_fu_3759_p1);

assign tmp_40_16_fu_3793_p2 = (buffer1_1_48_8x8_p_V_17_q0 + tmp_252_fu_3789_p1);

assign tmp_40_17_fu_3823_p2 = (buffer1_1_48_8x8_p_V_18_q0 + tmp_254_fu_3819_p1);

assign tmp_40_18_fu_3853_p2 = (buffer1_1_48_8x8_p_V_19_q0 + tmp_256_fu_3849_p1);

assign tmp_40_19_fu_3883_p2 = (buffer1_1_48_8x8_p_V_20_q0 + tmp_258_fu_3879_p1);

assign tmp_40_1_fu_3313_p2 = (buffer1_1_48_8x8_p_V_1_q0 + tmp_220_fu_3309_p1);

assign tmp_40_20_fu_3913_p2 = (buffer1_1_48_8x8_p_V_21_q0 + tmp_260_fu_3909_p1);

assign tmp_40_21_fu_3943_p2 = (buffer1_1_48_8x8_p_V_22_q0 + tmp_262_fu_3939_p1);

assign tmp_40_22_fu_3973_p2 = (buffer1_1_48_8x8_p_V_23_q0 + tmp_264_fu_3969_p1);

assign tmp_40_2_fu_3343_p2 = (buffer1_1_48_8x8_p_V_2_q0 + tmp_222_fu_3339_p1);

assign tmp_40_3_fu_3373_p2 = (buffer1_1_48_8x8_p_V_3_q0 + tmp_224_fu_3369_p1);

assign tmp_40_4_fu_3403_p2 = (buffer1_1_48_8x8_p_V_4_q0 + tmp_226_fu_3399_p1);

assign tmp_40_5_fu_3433_p2 = (buffer1_1_48_8x8_p_V_5_q0 + tmp_228_fu_3429_p1);

assign tmp_40_6_fu_3463_p2 = (buffer1_1_48_8x8_p_V_6_q0 + tmp_230_fu_3459_p1);

assign tmp_40_7_fu_3493_p2 = (buffer1_1_48_8x8_p_V_7_q0 + tmp_232_fu_3489_p1);

assign tmp_40_8_fu_3523_p2 = (buffer1_1_48_8x8_p_V_8_q0 + tmp_234_fu_3519_p1);

assign tmp_40_9_fu_3553_p2 = (buffer1_1_48_8x8_p_V_9_q0 + tmp_236_fu_3549_p1);

assign tmp_40_s_fu_3583_p2 = (buffer1_1_48_8x8_p_V_10_q0 + tmp_238_fu_3579_p1);

assign tmp_42_10_fu_3624_p2 = (buffer1_1_48_8x8_p_V_35_q0 + tmp_241_fu_3620_p1);

assign tmp_42_11_fu_3654_p2 = (buffer1_1_48_8x8_p_V_36_q0 + tmp_243_fu_3650_p1);

assign tmp_42_12_fu_3684_p2 = (buffer1_1_48_8x8_p_V_37_q0 + tmp_245_fu_3680_p1);

assign tmp_42_13_fu_3714_p2 = (buffer1_1_48_8x8_p_V_38_q0 + tmp_247_fu_3710_p1);

assign tmp_42_14_fu_3744_p2 = (buffer1_1_48_8x8_p_V_39_q0 + tmp_249_fu_3740_p1);

assign tmp_42_15_fu_3774_p2 = (buffer1_1_48_8x8_p_V_40_q0 + tmp_251_fu_3770_p1);

assign tmp_42_16_fu_3804_p2 = (buffer1_1_48_8x8_p_V_41_q0 + tmp_253_fu_3800_p1);

assign tmp_42_17_fu_3834_p2 = (buffer1_1_48_8x8_p_V_42_q0 + tmp_255_fu_3830_p1);

assign tmp_42_18_fu_3864_p2 = (buffer1_1_48_8x8_p_V_43_q0 + tmp_257_fu_3860_p1);

assign tmp_42_19_fu_3894_p2 = (buffer1_1_48_8x8_p_V_44_q0 + tmp_259_fu_3890_p1);

assign tmp_42_1_fu_3324_p2 = (buffer1_1_48_8x8_p_V_25_q0 + tmp_221_fu_3320_p1);

assign tmp_42_20_fu_3924_p2 = (buffer1_1_48_8x8_p_V_45_q0 + tmp_261_fu_3920_p1);

assign tmp_42_21_fu_3954_p2 = (buffer1_1_48_8x8_p_V_46_q0 + tmp_263_fu_3950_p1);

assign tmp_42_22_fu_3984_p2 = (buffer1_1_48_8x8_p_V_47_q0 + tmp_265_fu_3980_p1);

assign tmp_42_2_fu_3354_p2 = (buffer1_1_48_8x8_p_V_26_q0 + tmp_223_fu_3350_p1);

assign tmp_42_3_fu_3384_p2 = (buffer1_1_48_8x8_p_V_27_q0 + tmp_225_fu_3380_p1);

assign tmp_42_4_fu_3414_p2 = (buffer1_1_48_8x8_p_V_28_q0 + tmp_227_fu_3410_p1);

assign tmp_42_5_fu_3444_p2 = (buffer1_1_48_8x8_p_V_29_q0 + tmp_229_fu_3440_p1);

assign tmp_42_6_fu_3474_p2 = (buffer1_1_48_8x8_p_V_30_q0 + tmp_231_fu_3470_p1);

assign tmp_42_7_fu_3504_p2 = (buffer1_1_48_8x8_p_V_31_q0 + tmp_233_fu_3500_p1);

assign tmp_42_8_fu_3534_p2 = (buffer1_1_48_8x8_p_V_32_q0 + tmp_235_fu_3530_p1);

assign tmp_42_9_fu_3564_p2 = (buffer1_1_48_8x8_p_V_33_q0 + tmp_237_fu_3560_p1);

assign tmp_42_s_fu_3594_p2 = (buffer1_1_48_8x8_p_V_34_q0 + tmp_239_fu_3590_p1);

assign tmp_fu_2915_p3 = {{h_cast8_mid2_reg_4323}, {3'd0}};

assign tmp_s_fu_2894_p2 = (exitcond23_mid_fu_2882_p2 | exitcond_flatten_reg_4299);

assign w2_cast5_cast1_fu_3049_p1 = w2_reg_2517;

assign w2_cast5_cast_fu_3053_p1 = w2_reg_2517;

assign w6_cast1_cast_fu_4115_p1 = w6_mid2_reg_4921;

assign w6_mid2_fu_4071_p3 = ((tmp_204_fu_4066_p2[0:0] === 1'b1) ? 4'd1 : w6_phi_fu_2590_p4);

assign w_15_fu_3004_p2 = (w_mid2_reg_4317 + 4'd1);

assign w_16_fu_3265_p2 = (w2_reg_2517 + 4'd1);

assign w_17_fu_4176_p2 = (w6_mid2_reg_4921 + 4'd1);

assign w_cast7_cast_fu_2943_p1 = w_mid2_reg_4317;

assign w_mid2_fu_2899_p3 = ((tmp_s_fu_2894_p2[0:0] === 1'b1) ? 4'd1 : w_phi_fu_2497_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_4612;

assign weight_10_V_address0 = weight_10_V_addr_reg_4662;

assign weight_11_V_address0 = weight_11_V_addr_reg_4667;

assign weight_12_V_address0 = weight_12_V_addr_reg_4672;

assign weight_13_V_address0 = weight_13_V_addr_reg_4677;

assign weight_14_V_address0 = weight_14_V_addr_reg_4682;

assign weight_15_V_address0 = weight_15_V_addr_reg_4687;

assign weight_16_V_address0 = weight_16_V_addr_reg_4692;

assign weight_17_V_address0 = weight_17_V_addr_reg_4697;

assign weight_18_V_address0 = weight_18_V_addr_reg_4702;

assign weight_19_V_address0 = weight_19_V_addr_reg_4707;

assign weight_1_V_address0 = weight_1_V_addr_reg_4617;

assign weight_20_V_address0 = weight_20_V_addr_reg_4712;

assign weight_21_V_address0 = weight_21_V_addr_reg_4717;

assign weight_22_V_address0 = weight_22_V_addr_reg_4722;

assign weight_23_V_address0 = weight_23_V_addr_reg_4727;

assign weight_24_V_address0 = weight_24_V_addr_reg_4732;

assign weight_25_V_address0 = weight_25_V_addr_reg_4737;

assign weight_26_V_address0 = weight_26_V_addr_reg_4742;

assign weight_27_V_address0 = weight_27_V_addr_reg_4747;

assign weight_28_V_address0 = weight_28_V_addr_reg_4752;

assign weight_29_V_address0 = weight_29_V_addr_reg_4757;

assign weight_2_V_address0 = weight_2_V_addr_reg_4622;

assign weight_30_V_address0 = weight_30_V_addr_reg_4762;

assign weight_31_V_address0 = weight_31_V_addr_reg_4767;

assign weight_32_V_address0 = weight_32_V_addr_reg_4772;

assign weight_33_V_address0 = weight_33_V_addr_reg_4777;

assign weight_34_V_address0 = weight_34_V_addr_reg_4782;

assign weight_35_V_address0 = weight_35_V_addr_reg_4787;

assign weight_36_V_address0 = weight_36_V_addr_reg_4792;

assign weight_37_V_address0 = weight_37_V_addr_reg_4797;

assign weight_38_V_address0 = weight_38_V_addr_reg_4802;

assign weight_39_V_address0 = weight_39_V_addr_reg_4807;

assign weight_3_V_address0 = weight_3_V_addr_reg_4627;

assign weight_40_V_address0 = weight_40_V_addr_reg_4812;

assign weight_41_V_address0 = weight_41_V_addr_reg_4817;

assign weight_42_V_address0 = weight_42_V_addr_reg_4822;

assign weight_43_V_address0 = weight_43_V_addr_reg_4827;

assign weight_44_V_address0 = weight_44_V_addr_reg_4832;

assign weight_45_V_address0 = weight_45_V_addr_reg_4837;

assign weight_46_V_address0 = weight_46_V_addr_reg_4842;

assign weight_47_V_address0 = weight_47_V_addr_reg_4847;

assign weight_4_V_address0 = weight_4_V_addr_reg_4632;

assign weight_5_V_address0 = weight_5_V_addr_reg_4637;

assign weight_6_V_address0 = weight_6_V_addr_reg_4642;

assign weight_7_V_address0 = weight_7_V_addr_reg_4647;

assign weight_8_V_address0 = weight_8_V_addr_reg_4652;

assign weight_9_V_address0 = weight_9_V_addr_reg_4657;

always @ (posedge ap_clk) begin
    h1_cast6_cast_reg_4340[9:4] <= 6'b000000;
    tmp_201_reg_4345[0] <= 1'b0;
    w2_cast5_cast1_reg_4354[13:4] <= 10'b0000000000;
end

endmodule //subconv_1x1_8_p
