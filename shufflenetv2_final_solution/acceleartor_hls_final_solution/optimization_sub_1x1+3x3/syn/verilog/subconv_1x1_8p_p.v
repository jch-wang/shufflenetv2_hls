// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_8p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_8_V_address0,
        weight_8_V_ce0,
        weight_8_V_q0,
        weight_9_V_address0,
        weight_9_V_ce0,
        weight_9_V_q0,
        weight_10_V_address0,
        weight_10_V_ce0,
        weight_10_V_q0,
        weight_11_V_address0,
        weight_11_V_ce0,
        weight_11_V_q0,
        weight_12_V_address0,
        weight_12_V_ce0,
        weight_12_V_q0,
        weight_13_V_address0,
        weight_13_V_ce0,
        weight_13_V_q0,
        weight_14_V_address0,
        weight_14_V_ce0,
        weight_14_V_q0,
        weight_15_V_address0,
        weight_15_V_ce0,
        weight_15_V_q0,
        weight_16_V_address0,
        weight_16_V_ce0,
        weight_16_V_q0,
        weight_17_V_address0,
        weight_17_V_ce0,
        weight_17_V_q0,
        weight_18_V_address0,
        weight_18_V_ce0,
        weight_18_V_q0,
        weight_19_V_address0,
        weight_19_V_ce0,
        weight_19_V_q0,
        weight_20_V_address0,
        weight_20_V_ce0,
        weight_20_V_q0,
        weight_21_V_address0,
        weight_21_V_ce0,
        weight_21_V_q0,
        weight_22_V_address0,
        weight_22_V_ce0,
        weight_22_V_q0,
        weight_23_V_address0,
        weight_23_V_ce0,
        weight_23_V_q0,
        weight_24_V_address0,
        weight_24_V_ce0,
        weight_24_V_q0,
        weight_25_V_address0,
        weight_25_V_ce0,
        weight_25_V_q0,
        weight_26_V_address0,
        weight_26_V_ce0,
        weight_26_V_q0,
        weight_27_V_address0,
        weight_27_V_ce0,
        weight_27_V_q0,
        weight_28_V_address0,
        weight_28_V_ce0,
        weight_28_V_q0,
        weight_29_V_address0,
        weight_29_V_ce0,
        weight_29_V_q0,
        weight_30_V_address0,
        weight_30_V_ce0,
        weight_30_V_q0,
        weight_31_V_address0,
        weight_31_V_ce0,
        weight_31_V_q0,
        weight_32_V_address0,
        weight_32_V_ce0,
        weight_32_V_q0,
        weight_33_V_address0,
        weight_33_V_ce0,
        weight_33_V_q0,
        weight_34_V_address0,
        weight_34_V_ce0,
        weight_34_V_q0,
        weight_35_V_address0,
        weight_35_V_ce0,
        weight_35_V_q0,
        weight_36_V_address0,
        weight_36_V_ce0,
        weight_36_V_q0,
        weight_37_V_address0,
        weight_37_V_ce0,
        weight_37_V_q0,
        weight_38_V_address0,
        weight_38_V_ce0,
        weight_38_V_q0,
        weight_39_V_address0,
        weight_39_V_ce0,
        weight_39_V_q0,
        weight_40_V_address0,
        weight_40_V_ce0,
        weight_40_V_q0,
        weight_41_V_address0,
        weight_41_V_ce0,
        weight_41_V_q0,
        weight_42_V_address0,
        weight_42_V_ce0,
        weight_42_V_q0,
        weight_43_V_address0,
        weight_43_V_ce0,
        weight_43_V_q0,
        weight_44_V_address0,
        weight_44_V_ce0,
        weight_44_V_q0,
        weight_45_V_address0,
        weight_45_V_ce0,
        weight_45_V_q0,
        weight_46_V_address0,
        weight_46_V_ce0,
        weight_46_V_q0,
        weight_47_V_address0,
        weight_47_V_ce0,
        weight_47_V_q0,
        weight_48_V_address0,
        weight_48_V_ce0,
        weight_48_V_q0,
        weight_49_V_address0,
        weight_49_V_ce0,
        weight_49_V_q0,
        weight_50_V_address0,
        weight_50_V_ce0,
        weight_50_V_q0,
        weight_51_V_address0,
        weight_51_V_ce0,
        weight_51_V_q0,
        weight_52_V_address0,
        weight_52_V_ce0,
        weight_52_V_q0,
        weight_53_V_address0,
        weight_53_V_ce0,
        weight_53_V_q0,
        weight_54_V_address0,
        weight_54_V_ce0,
        weight_54_V_q0,
        weight_55_V_address0,
        weight_55_V_ce0,
        weight_55_V_q0,
        weight_56_V_address0,
        weight_56_V_ce0,
        weight_56_V_q0,
        weight_57_V_address0,
        weight_57_V_ce0,
        weight_57_V_q0,
        weight_58_V_address0,
        weight_58_V_ce0,
        weight_58_V_q0,
        weight_59_V_address0,
        weight_59_V_ce0,
        weight_59_V_q0,
        weight_60_V_address0,
        weight_60_V_ce0,
        weight_60_V_q0,
        weight_61_V_address0,
        weight_61_V_ce0,
        weight_61_V_q0,
        weight_62_V_address0,
        weight_62_V_ce0,
        weight_62_V_q0,
        weight_63_V_address0,
        weight_63_V_ce0,
        weight_63_V_q0,
        weight_64_V_address0,
        weight_64_V_ce0,
        weight_64_V_q0,
        weight_65_V_address0,
        weight_65_V_ce0,
        weight_65_V_q0,
        weight_66_V_address0,
        weight_66_V_ce0,
        weight_66_V_q0,
        weight_67_V_address0,
        weight_67_V_ce0,
        weight_67_V_q0,
        weight_68_V_address0,
        weight_68_V_ce0,
        weight_68_V_q0,
        weight_69_V_address0,
        weight_69_V_ce0,
        weight_69_V_q0,
        weight_70_V_address0,
        weight_70_V_ce0,
        weight_70_V_q0,
        weight_71_V_address0,
        weight_71_V_ce0,
        weight_71_V_q0,
        weight_72_V_address0,
        weight_72_V_ce0,
        weight_72_V_q0,
        weight_73_V_address0,
        weight_73_V_ce0,
        weight_73_V_q0,
        weight_74_V_address0,
        weight_74_V_ce0,
        weight_74_V_q0,
        weight_75_V_address0,
        weight_75_V_ce0,
        weight_75_V_q0,
        weight_76_V_address0,
        weight_76_V_ce0,
        weight_76_V_q0,
        weight_77_V_address0,
        weight_77_V_ce0,
        weight_77_V_q0,
        weight_78_V_address0,
        weight_78_V_ce0,
        weight_78_V_q0,
        weight_79_V_address0,
        weight_79_V_ce0,
        weight_79_V_q0,
        weight_80_V_address0,
        weight_80_V_ce0,
        weight_80_V_q0,
        weight_81_V_address0,
        weight_81_V_ce0,
        weight_81_V_q0,
        weight_82_V_address0,
        weight_82_V_ce0,
        weight_82_V_q0,
        weight_83_V_address0,
        weight_83_V_ce0,
        weight_83_V_q0,
        weight_84_V_address0,
        weight_84_V_ce0,
        weight_84_V_q0,
        weight_85_V_address0,
        weight_85_V_ce0,
        weight_85_V_q0,
        weight_86_V_address0,
        weight_86_V_ce0,
        weight_86_V_q0,
        weight_87_V_address0,
        weight_87_V_ce0,
        weight_87_V_q0,
        weight_88_V_address0,
        weight_88_V_ce0,
        weight_88_V_q0,
        weight_89_V_address0,
        weight_89_V_ce0,
        weight_89_V_q0,
        weight_90_V_address0,
        weight_90_V_ce0,
        weight_90_V_q0,
        weight_91_V_address0,
        weight_91_V_ce0,
        weight_91_V_q0,
        weight_92_V_address0,
        weight_92_V_ce0,
        weight_92_V_q0,
        weight_93_V_address0,
        weight_93_V_ce0,
        weight_93_V_q0,
        weight_94_V_address0,
        weight_94_V_ce0,
        weight_94_V_q0,
        weight_95_V_address0,
        weight_95_V_ce0,
        weight_95_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_2_Downs_95_address0,
        ShuffleConvs_2_Downs_95_ce0,
        ShuffleConvs_2_Downs_95_we0,
        ShuffleConvs_2_Downs_95_d0,
        ShuffleConvs_2_Downs_95_q0,
        ShuffleConvs_2_Downs_95_address1,
        ShuffleConvs_2_Downs_95_ce1,
        ShuffleConvs_2_Downs_95_we1,
        ShuffleConvs_2_Downs_95_d1,
        ShuffleConvs_2_Downs_52_address0,
        ShuffleConvs_2_Downs_52_ce0,
        ShuffleConvs_2_Downs_52_we0,
        ShuffleConvs_2_Downs_52_d0,
        ShuffleConvs_2_Downs_52_q0,
        ShuffleConvs_2_Downs_52_address1,
        ShuffleConvs_2_Downs_52_ce1,
        ShuffleConvs_2_Downs_52_we1,
        ShuffleConvs_2_Downs_52_d1,
        ShuffleConvs_2_Downs_94_address0,
        ShuffleConvs_2_Downs_94_ce0,
        ShuffleConvs_2_Downs_94_we0,
        ShuffleConvs_2_Downs_94_d0,
        ShuffleConvs_2_Downs_94_q0,
        ShuffleConvs_2_Downs_94_address1,
        ShuffleConvs_2_Downs_94_ce1,
        ShuffleConvs_2_Downs_94_we1,
        ShuffleConvs_2_Downs_94_d1,
        ShuffleConvs_2_Downs_51_address0,
        ShuffleConvs_2_Downs_51_ce0,
        ShuffleConvs_2_Downs_51_we0,
        ShuffleConvs_2_Downs_51_d0,
        ShuffleConvs_2_Downs_51_q0,
        ShuffleConvs_2_Downs_51_address1,
        ShuffleConvs_2_Downs_51_ce1,
        ShuffleConvs_2_Downs_51_we1,
        ShuffleConvs_2_Downs_51_d1,
        ShuffleConvs_2_Downs_83_address0,
        ShuffleConvs_2_Downs_83_ce0,
        ShuffleConvs_2_Downs_83_we0,
        ShuffleConvs_2_Downs_83_d0,
        ShuffleConvs_2_Downs_83_q0,
        ShuffleConvs_2_Downs_83_address1,
        ShuffleConvs_2_Downs_83_ce1,
        ShuffleConvs_2_Downs_83_we1,
        ShuffleConvs_2_Downs_83_d1,
        ShuffleConvs_2_Downs_49_address0,
        ShuffleConvs_2_Downs_49_ce0,
        ShuffleConvs_2_Downs_49_we0,
        ShuffleConvs_2_Downs_49_d0,
        ShuffleConvs_2_Downs_49_q0,
        ShuffleConvs_2_Downs_49_address1,
        ShuffleConvs_2_Downs_49_ce1,
        ShuffleConvs_2_Downs_49_we1,
        ShuffleConvs_2_Downs_49_d1,
        ShuffleConvs_2_Downs_72_address0,
        ShuffleConvs_2_Downs_72_ce0,
        ShuffleConvs_2_Downs_72_we0,
        ShuffleConvs_2_Downs_72_d0,
        ShuffleConvs_2_Downs_72_q0,
        ShuffleConvs_2_Downs_72_address1,
        ShuffleConvs_2_Downs_72_ce1,
        ShuffleConvs_2_Downs_72_we1,
        ShuffleConvs_2_Downs_72_d1,
        ShuffleConvs_2_Downs_48_address0,
        ShuffleConvs_2_Downs_48_ce0,
        ShuffleConvs_2_Downs_48_we0,
        ShuffleConvs_2_Downs_48_d0,
        ShuffleConvs_2_Downs_48_q0,
        ShuffleConvs_2_Downs_48_address1,
        ShuffleConvs_2_Downs_48_ce1,
        ShuffleConvs_2_Downs_48_we1,
        ShuffleConvs_2_Downs_48_d1,
        ShuffleConvs_2_Downs_61_address0,
        ShuffleConvs_2_Downs_61_ce0,
        ShuffleConvs_2_Downs_61_we0,
        ShuffleConvs_2_Downs_61_d0,
        ShuffleConvs_2_Downs_61_q0,
        ShuffleConvs_2_Downs_61_address1,
        ShuffleConvs_2_Downs_61_ce1,
        ShuffleConvs_2_Downs_61_we1,
        ShuffleConvs_2_Downs_61_d1,
        ShuffleConvs_2_Downs_47_address0,
        ShuffleConvs_2_Downs_47_ce0,
        ShuffleConvs_2_Downs_47_we0,
        ShuffleConvs_2_Downs_47_d0,
        ShuffleConvs_2_Downs_47_q0,
        ShuffleConvs_2_Downs_47_address1,
        ShuffleConvs_2_Downs_47_ce1,
        ShuffleConvs_2_Downs_47_we1,
        ShuffleConvs_2_Downs_47_d1,
        ShuffleConvs_2_Downs_50_address0,
        ShuffleConvs_2_Downs_50_ce0,
        ShuffleConvs_2_Downs_50_we0,
        ShuffleConvs_2_Downs_50_d0,
        ShuffleConvs_2_Downs_50_q0,
        ShuffleConvs_2_Downs_50_address1,
        ShuffleConvs_2_Downs_50_ce1,
        ShuffleConvs_2_Downs_50_we1,
        ShuffleConvs_2_Downs_50_d1,
        ShuffleConvs_2_Downs_46_address0,
        ShuffleConvs_2_Downs_46_ce0,
        ShuffleConvs_2_Downs_46_we0,
        ShuffleConvs_2_Downs_46_d0,
        ShuffleConvs_2_Downs_46_q0,
        ShuffleConvs_2_Downs_46_address1,
        ShuffleConvs_2_Downs_46_ce1,
        ShuffleConvs_2_Downs_46_we1,
        ShuffleConvs_2_Downs_46_d1,
        ShuffleConvs_2_Downs_39_address0,
        ShuffleConvs_2_Downs_39_ce0,
        ShuffleConvs_2_Downs_39_we0,
        ShuffleConvs_2_Downs_39_d0,
        ShuffleConvs_2_Downs_39_q0,
        ShuffleConvs_2_Downs_39_address1,
        ShuffleConvs_2_Downs_39_ce1,
        ShuffleConvs_2_Downs_39_we1,
        ShuffleConvs_2_Downs_39_d1,
        ShuffleConvs_2_Downs_45_address0,
        ShuffleConvs_2_Downs_45_ce0,
        ShuffleConvs_2_Downs_45_we0,
        ShuffleConvs_2_Downs_45_d0,
        ShuffleConvs_2_Downs_45_q0,
        ShuffleConvs_2_Downs_45_address1,
        ShuffleConvs_2_Downs_45_ce1,
        ShuffleConvs_2_Downs_45_we1,
        ShuffleConvs_2_Downs_45_d1,
        ShuffleConvs_2_Downs_28_address0,
        ShuffleConvs_2_Downs_28_ce0,
        ShuffleConvs_2_Downs_28_we0,
        ShuffleConvs_2_Downs_28_d0,
        ShuffleConvs_2_Downs_28_q0,
        ShuffleConvs_2_Downs_28_address1,
        ShuffleConvs_2_Downs_28_ce1,
        ShuffleConvs_2_Downs_28_we1,
        ShuffleConvs_2_Downs_28_d1,
        ShuffleConvs_2_Downs_44_address0,
        ShuffleConvs_2_Downs_44_ce0,
        ShuffleConvs_2_Downs_44_we0,
        ShuffleConvs_2_Downs_44_d0,
        ShuffleConvs_2_Downs_44_q0,
        ShuffleConvs_2_Downs_44_address1,
        ShuffleConvs_2_Downs_44_ce1,
        ShuffleConvs_2_Downs_44_we1,
        ShuffleConvs_2_Downs_44_d1,
        ShuffleConvs_2_Downs_17_address0,
        ShuffleConvs_2_Downs_17_ce0,
        ShuffleConvs_2_Downs_17_we0,
        ShuffleConvs_2_Downs_17_d0,
        ShuffleConvs_2_Downs_17_q0,
        ShuffleConvs_2_Downs_17_address1,
        ShuffleConvs_2_Downs_17_ce1,
        ShuffleConvs_2_Downs_17_we1,
        ShuffleConvs_2_Downs_17_d1,
        ShuffleConvs_2_Downs_43_address0,
        ShuffleConvs_2_Downs_43_ce0,
        ShuffleConvs_2_Downs_43_we0,
        ShuffleConvs_2_Downs_43_d0,
        ShuffleConvs_2_Downs_43_q0,
        ShuffleConvs_2_Downs_43_address1,
        ShuffleConvs_2_Downs_43_ce1,
        ShuffleConvs_2_Downs_43_we1,
        ShuffleConvs_2_Downs_43_d1,
        ShuffleConvs_2_Downs_6_address0,
        ShuffleConvs_2_Downs_6_ce0,
        ShuffleConvs_2_Downs_6_we0,
        ShuffleConvs_2_Downs_6_d0,
        ShuffleConvs_2_Downs_6_q0,
        ShuffleConvs_2_Downs_6_address1,
        ShuffleConvs_2_Downs_6_ce1,
        ShuffleConvs_2_Downs_6_we1,
        ShuffleConvs_2_Downs_6_d1,
        ShuffleConvs_2_Downs_42_address0,
        ShuffleConvs_2_Downs_42_ce0,
        ShuffleConvs_2_Downs_42_we0,
        ShuffleConvs_2_Downs_42_d0,
        ShuffleConvs_2_Downs_42_q0,
        ShuffleConvs_2_Downs_42_address1,
        ShuffleConvs_2_Downs_42_ce1,
        ShuffleConvs_2_Downs_42_we1,
        ShuffleConvs_2_Downs_42_d1,
        ShuffleConvs_2_Downs_93_address0,
        ShuffleConvs_2_Downs_93_ce0,
        ShuffleConvs_2_Downs_93_we0,
        ShuffleConvs_2_Downs_93_d0,
        ShuffleConvs_2_Downs_93_q0,
        ShuffleConvs_2_Downs_93_address1,
        ShuffleConvs_2_Downs_93_ce1,
        ShuffleConvs_2_Downs_93_we1,
        ShuffleConvs_2_Downs_93_d1,
        ShuffleConvs_2_Downs_41_address0,
        ShuffleConvs_2_Downs_41_ce0,
        ShuffleConvs_2_Downs_41_we0,
        ShuffleConvs_2_Downs_41_d0,
        ShuffleConvs_2_Downs_41_q0,
        ShuffleConvs_2_Downs_41_address1,
        ShuffleConvs_2_Downs_41_ce1,
        ShuffleConvs_2_Downs_41_we1,
        ShuffleConvs_2_Downs_41_d1,
        ShuffleConvs_2_Downs_92_address0,
        ShuffleConvs_2_Downs_92_ce0,
        ShuffleConvs_2_Downs_92_we0,
        ShuffleConvs_2_Downs_92_d0,
        ShuffleConvs_2_Downs_92_q0,
        ShuffleConvs_2_Downs_92_address1,
        ShuffleConvs_2_Downs_92_ce1,
        ShuffleConvs_2_Downs_92_we1,
        ShuffleConvs_2_Downs_92_d1,
        ShuffleConvs_2_Downs_40_address0,
        ShuffleConvs_2_Downs_40_ce0,
        ShuffleConvs_2_Downs_40_we0,
        ShuffleConvs_2_Downs_40_d0,
        ShuffleConvs_2_Downs_40_q0,
        ShuffleConvs_2_Downs_40_address1,
        ShuffleConvs_2_Downs_40_ce1,
        ShuffleConvs_2_Downs_40_we1,
        ShuffleConvs_2_Downs_40_d1,
        ShuffleConvs_2_Downs_91_address0,
        ShuffleConvs_2_Downs_91_ce0,
        ShuffleConvs_2_Downs_91_we0,
        ShuffleConvs_2_Downs_91_d0,
        ShuffleConvs_2_Downs_91_q0,
        ShuffleConvs_2_Downs_91_address1,
        ShuffleConvs_2_Downs_91_ce1,
        ShuffleConvs_2_Downs_91_we1,
        ShuffleConvs_2_Downs_91_d1,
        ShuffleConvs_2_Downs_38_address0,
        ShuffleConvs_2_Downs_38_ce0,
        ShuffleConvs_2_Downs_38_we0,
        ShuffleConvs_2_Downs_38_d0,
        ShuffleConvs_2_Downs_38_q0,
        ShuffleConvs_2_Downs_38_address1,
        ShuffleConvs_2_Downs_38_ce1,
        ShuffleConvs_2_Downs_38_we1,
        ShuffleConvs_2_Downs_38_d1,
        ShuffleConvs_2_Downs_90_address0,
        ShuffleConvs_2_Downs_90_ce0,
        ShuffleConvs_2_Downs_90_we0,
        ShuffleConvs_2_Downs_90_d0,
        ShuffleConvs_2_Downs_90_q0,
        ShuffleConvs_2_Downs_90_address1,
        ShuffleConvs_2_Downs_90_ce1,
        ShuffleConvs_2_Downs_90_we1,
        ShuffleConvs_2_Downs_90_d1,
        ShuffleConvs_2_Downs_37_address0,
        ShuffleConvs_2_Downs_37_ce0,
        ShuffleConvs_2_Downs_37_we0,
        ShuffleConvs_2_Downs_37_d0,
        ShuffleConvs_2_Downs_37_q0,
        ShuffleConvs_2_Downs_37_address1,
        ShuffleConvs_2_Downs_37_ce1,
        ShuffleConvs_2_Downs_37_we1,
        ShuffleConvs_2_Downs_37_d1,
        ShuffleConvs_2_Downs_89_address0,
        ShuffleConvs_2_Downs_89_ce0,
        ShuffleConvs_2_Downs_89_we0,
        ShuffleConvs_2_Downs_89_d0,
        ShuffleConvs_2_Downs_89_q0,
        ShuffleConvs_2_Downs_89_address1,
        ShuffleConvs_2_Downs_89_ce1,
        ShuffleConvs_2_Downs_89_we1,
        ShuffleConvs_2_Downs_89_d1,
        ShuffleConvs_2_Downs_36_address0,
        ShuffleConvs_2_Downs_36_ce0,
        ShuffleConvs_2_Downs_36_we0,
        ShuffleConvs_2_Downs_36_d0,
        ShuffleConvs_2_Downs_36_q0,
        ShuffleConvs_2_Downs_36_address1,
        ShuffleConvs_2_Downs_36_ce1,
        ShuffleConvs_2_Downs_36_we1,
        ShuffleConvs_2_Downs_36_d1,
        ShuffleConvs_2_Downs_88_address0,
        ShuffleConvs_2_Downs_88_ce0,
        ShuffleConvs_2_Downs_88_we0,
        ShuffleConvs_2_Downs_88_d0,
        ShuffleConvs_2_Downs_88_q0,
        ShuffleConvs_2_Downs_88_address1,
        ShuffleConvs_2_Downs_88_ce1,
        ShuffleConvs_2_Downs_88_we1,
        ShuffleConvs_2_Downs_88_d1,
        ShuffleConvs_2_Downs_35_address0,
        ShuffleConvs_2_Downs_35_ce0,
        ShuffleConvs_2_Downs_35_we0,
        ShuffleConvs_2_Downs_35_d0,
        ShuffleConvs_2_Downs_35_q0,
        ShuffleConvs_2_Downs_35_address1,
        ShuffleConvs_2_Downs_35_ce1,
        ShuffleConvs_2_Downs_35_we1,
        ShuffleConvs_2_Downs_35_d1,
        ShuffleConvs_2_Downs_87_address0,
        ShuffleConvs_2_Downs_87_ce0,
        ShuffleConvs_2_Downs_87_we0,
        ShuffleConvs_2_Downs_87_d0,
        ShuffleConvs_2_Downs_87_q0,
        ShuffleConvs_2_Downs_87_address1,
        ShuffleConvs_2_Downs_87_ce1,
        ShuffleConvs_2_Downs_87_we1,
        ShuffleConvs_2_Downs_87_d1,
        ShuffleConvs_2_Downs_34_address0,
        ShuffleConvs_2_Downs_34_ce0,
        ShuffleConvs_2_Downs_34_we0,
        ShuffleConvs_2_Downs_34_d0,
        ShuffleConvs_2_Downs_34_q0,
        ShuffleConvs_2_Downs_34_address1,
        ShuffleConvs_2_Downs_34_ce1,
        ShuffleConvs_2_Downs_34_we1,
        ShuffleConvs_2_Downs_34_d1,
        ShuffleConvs_2_Downs_86_address0,
        ShuffleConvs_2_Downs_86_ce0,
        ShuffleConvs_2_Downs_86_we0,
        ShuffleConvs_2_Downs_86_d0,
        ShuffleConvs_2_Downs_86_q0,
        ShuffleConvs_2_Downs_86_address1,
        ShuffleConvs_2_Downs_86_ce1,
        ShuffleConvs_2_Downs_86_we1,
        ShuffleConvs_2_Downs_86_d1,
        ShuffleConvs_2_Downs_33_address0,
        ShuffleConvs_2_Downs_33_ce0,
        ShuffleConvs_2_Downs_33_we0,
        ShuffleConvs_2_Downs_33_d0,
        ShuffleConvs_2_Downs_33_q0,
        ShuffleConvs_2_Downs_33_address1,
        ShuffleConvs_2_Downs_33_ce1,
        ShuffleConvs_2_Downs_33_we1,
        ShuffleConvs_2_Downs_33_d1,
        ShuffleConvs_2_Downs_85_address0,
        ShuffleConvs_2_Downs_85_ce0,
        ShuffleConvs_2_Downs_85_we0,
        ShuffleConvs_2_Downs_85_d0,
        ShuffleConvs_2_Downs_85_q0,
        ShuffleConvs_2_Downs_85_address1,
        ShuffleConvs_2_Downs_85_ce1,
        ShuffleConvs_2_Downs_85_we1,
        ShuffleConvs_2_Downs_85_d1,
        ShuffleConvs_2_Downs_32_address0,
        ShuffleConvs_2_Downs_32_ce0,
        ShuffleConvs_2_Downs_32_we0,
        ShuffleConvs_2_Downs_32_d0,
        ShuffleConvs_2_Downs_32_q0,
        ShuffleConvs_2_Downs_32_address1,
        ShuffleConvs_2_Downs_32_ce1,
        ShuffleConvs_2_Downs_32_we1,
        ShuffleConvs_2_Downs_32_d1,
        ShuffleConvs_2_Downs_84_address0,
        ShuffleConvs_2_Downs_84_ce0,
        ShuffleConvs_2_Downs_84_we0,
        ShuffleConvs_2_Downs_84_d0,
        ShuffleConvs_2_Downs_84_q0,
        ShuffleConvs_2_Downs_84_address1,
        ShuffleConvs_2_Downs_84_ce1,
        ShuffleConvs_2_Downs_84_we1,
        ShuffleConvs_2_Downs_84_d1,
        ShuffleConvs_2_Downs_31_address0,
        ShuffleConvs_2_Downs_31_ce0,
        ShuffleConvs_2_Downs_31_we0,
        ShuffleConvs_2_Downs_31_d0,
        ShuffleConvs_2_Downs_31_q0,
        ShuffleConvs_2_Downs_31_address1,
        ShuffleConvs_2_Downs_31_ce1,
        ShuffleConvs_2_Downs_31_we1,
        ShuffleConvs_2_Downs_31_d1,
        ShuffleConvs_2_Downs_82_address0,
        ShuffleConvs_2_Downs_82_ce0,
        ShuffleConvs_2_Downs_82_we0,
        ShuffleConvs_2_Downs_82_d0,
        ShuffleConvs_2_Downs_82_q0,
        ShuffleConvs_2_Downs_82_address1,
        ShuffleConvs_2_Downs_82_ce1,
        ShuffleConvs_2_Downs_82_we1,
        ShuffleConvs_2_Downs_82_d1,
        ShuffleConvs_2_Downs_30_address0,
        ShuffleConvs_2_Downs_30_ce0,
        ShuffleConvs_2_Downs_30_we0,
        ShuffleConvs_2_Downs_30_d0,
        ShuffleConvs_2_Downs_30_q0,
        ShuffleConvs_2_Downs_30_address1,
        ShuffleConvs_2_Downs_30_ce1,
        ShuffleConvs_2_Downs_30_we1,
        ShuffleConvs_2_Downs_30_d1,
        ShuffleConvs_2_Downs_81_address0,
        ShuffleConvs_2_Downs_81_ce0,
        ShuffleConvs_2_Downs_81_we0,
        ShuffleConvs_2_Downs_81_d0,
        ShuffleConvs_2_Downs_81_q0,
        ShuffleConvs_2_Downs_81_address1,
        ShuffleConvs_2_Downs_81_ce1,
        ShuffleConvs_2_Downs_81_we1,
        ShuffleConvs_2_Downs_81_d1,
        ShuffleConvs_2_Downs_29_address0,
        ShuffleConvs_2_Downs_29_ce0,
        ShuffleConvs_2_Downs_29_we0,
        ShuffleConvs_2_Downs_29_d0,
        ShuffleConvs_2_Downs_29_q0,
        ShuffleConvs_2_Downs_29_address1,
        ShuffleConvs_2_Downs_29_ce1,
        ShuffleConvs_2_Downs_29_we1,
        ShuffleConvs_2_Downs_29_d1,
        ShuffleConvs_2_Downs_80_address0,
        ShuffleConvs_2_Downs_80_ce0,
        ShuffleConvs_2_Downs_80_we0,
        ShuffleConvs_2_Downs_80_d0,
        ShuffleConvs_2_Downs_80_q0,
        ShuffleConvs_2_Downs_80_address1,
        ShuffleConvs_2_Downs_80_ce1,
        ShuffleConvs_2_Downs_80_we1,
        ShuffleConvs_2_Downs_80_d1,
        ShuffleConvs_2_Downs_27_address0,
        ShuffleConvs_2_Downs_27_ce0,
        ShuffleConvs_2_Downs_27_we0,
        ShuffleConvs_2_Downs_27_d0,
        ShuffleConvs_2_Downs_27_q0,
        ShuffleConvs_2_Downs_27_address1,
        ShuffleConvs_2_Downs_27_ce1,
        ShuffleConvs_2_Downs_27_we1,
        ShuffleConvs_2_Downs_27_d1,
        ShuffleConvs_2_Downs_79_address0,
        ShuffleConvs_2_Downs_79_ce0,
        ShuffleConvs_2_Downs_79_we0,
        ShuffleConvs_2_Downs_79_d0,
        ShuffleConvs_2_Downs_79_q0,
        ShuffleConvs_2_Downs_79_address1,
        ShuffleConvs_2_Downs_79_ce1,
        ShuffleConvs_2_Downs_79_we1,
        ShuffleConvs_2_Downs_79_d1,
        ShuffleConvs_2_Downs_26_address0,
        ShuffleConvs_2_Downs_26_ce0,
        ShuffleConvs_2_Downs_26_we0,
        ShuffleConvs_2_Downs_26_d0,
        ShuffleConvs_2_Downs_26_q0,
        ShuffleConvs_2_Downs_26_address1,
        ShuffleConvs_2_Downs_26_ce1,
        ShuffleConvs_2_Downs_26_we1,
        ShuffleConvs_2_Downs_26_d1,
        ShuffleConvs_2_Downs_78_address0,
        ShuffleConvs_2_Downs_78_ce0,
        ShuffleConvs_2_Downs_78_we0,
        ShuffleConvs_2_Downs_78_d0,
        ShuffleConvs_2_Downs_78_q0,
        ShuffleConvs_2_Downs_78_address1,
        ShuffleConvs_2_Downs_78_ce1,
        ShuffleConvs_2_Downs_78_we1,
        ShuffleConvs_2_Downs_78_d1,
        ShuffleConvs_2_Downs_25_address0,
        ShuffleConvs_2_Downs_25_ce0,
        ShuffleConvs_2_Downs_25_we0,
        ShuffleConvs_2_Downs_25_d0,
        ShuffleConvs_2_Downs_25_q0,
        ShuffleConvs_2_Downs_25_address1,
        ShuffleConvs_2_Downs_25_ce1,
        ShuffleConvs_2_Downs_25_we1,
        ShuffleConvs_2_Downs_25_d1,
        ShuffleConvs_2_Downs_77_address0,
        ShuffleConvs_2_Downs_77_ce0,
        ShuffleConvs_2_Downs_77_we0,
        ShuffleConvs_2_Downs_77_d0,
        ShuffleConvs_2_Downs_77_q0,
        ShuffleConvs_2_Downs_77_address1,
        ShuffleConvs_2_Downs_77_ce1,
        ShuffleConvs_2_Downs_77_we1,
        ShuffleConvs_2_Downs_77_d1,
        ShuffleConvs_2_Downs_24_address0,
        ShuffleConvs_2_Downs_24_ce0,
        ShuffleConvs_2_Downs_24_we0,
        ShuffleConvs_2_Downs_24_d0,
        ShuffleConvs_2_Downs_24_q0,
        ShuffleConvs_2_Downs_24_address1,
        ShuffleConvs_2_Downs_24_ce1,
        ShuffleConvs_2_Downs_24_we1,
        ShuffleConvs_2_Downs_24_d1,
        ShuffleConvs_2_Downs_76_address0,
        ShuffleConvs_2_Downs_76_ce0,
        ShuffleConvs_2_Downs_76_we0,
        ShuffleConvs_2_Downs_76_d0,
        ShuffleConvs_2_Downs_76_q0,
        ShuffleConvs_2_Downs_76_address1,
        ShuffleConvs_2_Downs_76_ce1,
        ShuffleConvs_2_Downs_76_we1,
        ShuffleConvs_2_Downs_76_d1,
        ShuffleConvs_2_Downs_23_address0,
        ShuffleConvs_2_Downs_23_ce0,
        ShuffleConvs_2_Downs_23_we0,
        ShuffleConvs_2_Downs_23_d0,
        ShuffleConvs_2_Downs_23_q0,
        ShuffleConvs_2_Downs_23_address1,
        ShuffleConvs_2_Downs_23_ce1,
        ShuffleConvs_2_Downs_23_we1,
        ShuffleConvs_2_Downs_23_d1,
        ShuffleConvs_2_Downs_75_address0,
        ShuffleConvs_2_Downs_75_ce0,
        ShuffleConvs_2_Downs_75_we0,
        ShuffleConvs_2_Downs_75_d0,
        ShuffleConvs_2_Downs_75_q0,
        ShuffleConvs_2_Downs_75_address1,
        ShuffleConvs_2_Downs_75_ce1,
        ShuffleConvs_2_Downs_75_we1,
        ShuffleConvs_2_Downs_75_d1,
        ShuffleConvs_2_Downs_22_address0,
        ShuffleConvs_2_Downs_22_ce0,
        ShuffleConvs_2_Downs_22_we0,
        ShuffleConvs_2_Downs_22_d0,
        ShuffleConvs_2_Downs_22_q0,
        ShuffleConvs_2_Downs_22_address1,
        ShuffleConvs_2_Downs_22_ce1,
        ShuffleConvs_2_Downs_22_we1,
        ShuffleConvs_2_Downs_22_d1,
        ShuffleConvs_2_Downs_74_address0,
        ShuffleConvs_2_Downs_74_ce0,
        ShuffleConvs_2_Downs_74_we0,
        ShuffleConvs_2_Downs_74_d0,
        ShuffleConvs_2_Downs_74_q0,
        ShuffleConvs_2_Downs_74_address1,
        ShuffleConvs_2_Downs_74_ce1,
        ShuffleConvs_2_Downs_74_we1,
        ShuffleConvs_2_Downs_74_d1,
        ShuffleConvs_2_Downs_21_address0,
        ShuffleConvs_2_Downs_21_ce0,
        ShuffleConvs_2_Downs_21_we0,
        ShuffleConvs_2_Downs_21_d0,
        ShuffleConvs_2_Downs_21_q0,
        ShuffleConvs_2_Downs_21_address1,
        ShuffleConvs_2_Downs_21_ce1,
        ShuffleConvs_2_Downs_21_we1,
        ShuffleConvs_2_Downs_21_d1,
        ShuffleConvs_2_Downs_73_address0,
        ShuffleConvs_2_Downs_73_ce0,
        ShuffleConvs_2_Downs_73_we0,
        ShuffleConvs_2_Downs_73_d0,
        ShuffleConvs_2_Downs_73_q0,
        ShuffleConvs_2_Downs_73_address1,
        ShuffleConvs_2_Downs_73_ce1,
        ShuffleConvs_2_Downs_73_we1,
        ShuffleConvs_2_Downs_73_d1,
        ShuffleConvs_2_Downs_20_address0,
        ShuffleConvs_2_Downs_20_ce0,
        ShuffleConvs_2_Downs_20_we0,
        ShuffleConvs_2_Downs_20_d0,
        ShuffleConvs_2_Downs_20_q0,
        ShuffleConvs_2_Downs_20_address1,
        ShuffleConvs_2_Downs_20_ce1,
        ShuffleConvs_2_Downs_20_we1,
        ShuffleConvs_2_Downs_20_d1,
        ShuffleConvs_2_Downs_71_address0,
        ShuffleConvs_2_Downs_71_ce0,
        ShuffleConvs_2_Downs_71_we0,
        ShuffleConvs_2_Downs_71_d0,
        ShuffleConvs_2_Downs_71_q0,
        ShuffleConvs_2_Downs_71_address1,
        ShuffleConvs_2_Downs_71_ce1,
        ShuffleConvs_2_Downs_71_we1,
        ShuffleConvs_2_Downs_71_d1,
        ShuffleConvs_2_Downs_19_address0,
        ShuffleConvs_2_Downs_19_ce0,
        ShuffleConvs_2_Downs_19_we0,
        ShuffleConvs_2_Downs_19_d0,
        ShuffleConvs_2_Downs_19_q0,
        ShuffleConvs_2_Downs_19_address1,
        ShuffleConvs_2_Downs_19_ce1,
        ShuffleConvs_2_Downs_19_we1,
        ShuffleConvs_2_Downs_19_d1,
        ShuffleConvs_2_Downs_70_address0,
        ShuffleConvs_2_Downs_70_ce0,
        ShuffleConvs_2_Downs_70_we0,
        ShuffleConvs_2_Downs_70_d0,
        ShuffleConvs_2_Downs_70_q0,
        ShuffleConvs_2_Downs_70_address1,
        ShuffleConvs_2_Downs_70_ce1,
        ShuffleConvs_2_Downs_70_we1,
        ShuffleConvs_2_Downs_70_d1,
        ShuffleConvs_2_Downs_18_address0,
        ShuffleConvs_2_Downs_18_ce0,
        ShuffleConvs_2_Downs_18_we0,
        ShuffleConvs_2_Downs_18_d0,
        ShuffleConvs_2_Downs_18_q0,
        ShuffleConvs_2_Downs_18_address1,
        ShuffleConvs_2_Downs_18_ce1,
        ShuffleConvs_2_Downs_18_we1,
        ShuffleConvs_2_Downs_18_d1,
        ShuffleConvs_2_Downs_69_address0,
        ShuffleConvs_2_Downs_69_ce0,
        ShuffleConvs_2_Downs_69_we0,
        ShuffleConvs_2_Downs_69_d0,
        ShuffleConvs_2_Downs_69_q0,
        ShuffleConvs_2_Downs_69_address1,
        ShuffleConvs_2_Downs_69_ce1,
        ShuffleConvs_2_Downs_69_we1,
        ShuffleConvs_2_Downs_69_d1,
        ShuffleConvs_2_Downs_16_address0,
        ShuffleConvs_2_Downs_16_ce0,
        ShuffleConvs_2_Downs_16_we0,
        ShuffleConvs_2_Downs_16_d0,
        ShuffleConvs_2_Downs_16_q0,
        ShuffleConvs_2_Downs_16_address1,
        ShuffleConvs_2_Downs_16_ce1,
        ShuffleConvs_2_Downs_16_we1,
        ShuffleConvs_2_Downs_16_d1,
        ShuffleConvs_2_Downs_68_address0,
        ShuffleConvs_2_Downs_68_ce0,
        ShuffleConvs_2_Downs_68_we0,
        ShuffleConvs_2_Downs_68_d0,
        ShuffleConvs_2_Downs_68_q0,
        ShuffleConvs_2_Downs_68_address1,
        ShuffleConvs_2_Downs_68_ce1,
        ShuffleConvs_2_Downs_68_we1,
        ShuffleConvs_2_Downs_68_d1,
        ShuffleConvs_2_Downs_15_address0,
        ShuffleConvs_2_Downs_15_ce0,
        ShuffleConvs_2_Downs_15_we0,
        ShuffleConvs_2_Downs_15_d0,
        ShuffleConvs_2_Downs_15_q0,
        ShuffleConvs_2_Downs_15_address1,
        ShuffleConvs_2_Downs_15_ce1,
        ShuffleConvs_2_Downs_15_we1,
        ShuffleConvs_2_Downs_15_d1,
        ShuffleConvs_2_Downs_67_address0,
        ShuffleConvs_2_Downs_67_ce0,
        ShuffleConvs_2_Downs_67_we0,
        ShuffleConvs_2_Downs_67_d0,
        ShuffleConvs_2_Downs_67_q0,
        ShuffleConvs_2_Downs_67_address1,
        ShuffleConvs_2_Downs_67_ce1,
        ShuffleConvs_2_Downs_67_we1,
        ShuffleConvs_2_Downs_67_d1,
        ShuffleConvs_2_Downs_14_address0,
        ShuffleConvs_2_Downs_14_ce0,
        ShuffleConvs_2_Downs_14_we0,
        ShuffleConvs_2_Downs_14_d0,
        ShuffleConvs_2_Downs_14_q0,
        ShuffleConvs_2_Downs_14_address1,
        ShuffleConvs_2_Downs_14_ce1,
        ShuffleConvs_2_Downs_14_we1,
        ShuffleConvs_2_Downs_14_d1,
        ShuffleConvs_2_Downs_66_address0,
        ShuffleConvs_2_Downs_66_ce0,
        ShuffleConvs_2_Downs_66_we0,
        ShuffleConvs_2_Downs_66_d0,
        ShuffleConvs_2_Downs_66_q0,
        ShuffleConvs_2_Downs_66_address1,
        ShuffleConvs_2_Downs_66_ce1,
        ShuffleConvs_2_Downs_66_we1,
        ShuffleConvs_2_Downs_66_d1,
        ShuffleConvs_2_Downs_13_address0,
        ShuffleConvs_2_Downs_13_ce0,
        ShuffleConvs_2_Downs_13_we0,
        ShuffleConvs_2_Downs_13_d0,
        ShuffleConvs_2_Downs_13_q0,
        ShuffleConvs_2_Downs_13_address1,
        ShuffleConvs_2_Downs_13_ce1,
        ShuffleConvs_2_Downs_13_we1,
        ShuffleConvs_2_Downs_13_d1,
        ShuffleConvs_2_Downs_65_address0,
        ShuffleConvs_2_Downs_65_ce0,
        ShuffleConvs_2_Downs_65_we0,
        ShuffleConvs_2_Downs_65_d0,
        ShuffleConvs_2_Downs_65_q0,
        ShuffleConvs_2_Downs_65_address1,
        ShuffleConvs_2_Downs_65_ce1,
        ShuffleConvs_2_Downs_65_we1,
        ShuffleConvs_2_Downs_65_d1,
        ShuffleConvs_2_Downs_12_address0,
        ShuffleConvs_2_Downs_12_ce0,
        ShuffleConvs_2_Downs_12_we0,
        ShuffleConvs_2_Downs_12_d0,
        ShuffleConvs_2_Downs_12_q0,
        ShuffleConvs_2_Downs_12_address1,
        ShuffleConvs_2_Downs_12_ce1,
        ShuffleConvs_2_Downs_12_we1,
        ShuffleConvs_2_Downs_12_d1,
        ShuffleConvs_2_Downs_64_address0,
        ShuffleConvs_2_Downs_64_ce0,
        ShuffleConvs_2_Downs_64_we0,
        ShuffleConvs_2_Downs_64_d0,
        ShuffleConvs_2_Downs_64_q0,
        ShuffleConvs_2_Downs_64_address1,
        ShuffleConvs_2_Downs_64_ce1,
        ShuffleConvs_2_Downs_64_we1,
        ShuffleConvs_2_Downs_64_d1,
        ShuffleConvs_2_Downs_11_address0,
        ShuffleConvs_2_Downs_11_ce0,
        ShuffleConvs_2_Downs_11_we0,
        ShuffleConvs_2_Downs_11_d0,
        ShuffleConvs_2_Downs_11_q0,
        ShuffleConvs_2_Downs_11_address1,
        ShuffleConvs_2_Downs_11_ce1,
        ShuffleConvs_2_Downs_11_we1,
        ShuffleConvs_2_Downs_11_d1,
        ShuffleConvs_2_Downs_63_address0,
        ShuffleConvs_2_Downs_63_ce0,
        ShuffleConvs_2_Downs_63_we0,
        ShuffleConvs_2_Downs_63_d0,
        ShuffleConvs_2_Downs_63_q0,
        ShuffleConvs_2_Downs_63_address1,
        ShuffleConvs_2_Downs_63_ce1,
        ShuffleConvs_2_Downs_63_we1,
        ShuffleConvs_2_Downs_63_d1,
        ShuffleConvs_2_Downs_10_address0,
        ShuffleConvs_2_Downs_10_ce0,
        ShuffleConvs_2_Downs_10_we0,
        ShuffleConvs_2_Downs_10_d0,
        ShuffleConvs_2_Downs_10_q0,
        ShuffleConvs_2_Downs_10_address1,
        ShuffleConvs_2_Downs_10_ce1,
        ShuffleConvs_2_Downs_10_we1,
        ShuffleConvs_2_Downs_10_d1,
        ShuffleConvs_2_Downs_62_address0,
        ShuffleConvs_2_Downs_62_ce0,
        ShuffleConvs_2_Downs_62_we0,
        ShuffleConvs_2_Downs_62_d0,
        ShuffleConvs_2_Downs_62_q0,
        ShuffleConvs_2_Downs_62_address1,
        ShuffleConvs_2_Downs_62_ce1,
        ShuffleConvs_2_Downs_62_we1,
        ShuffleConvs_2_Downs_62_d1,
        ShuffleConvs_2_Downs_9_address0,
        ShuffleConvs_2_Downs_9_ce0,
        ShuffleConvs_2_Downs_9_we0,
        ShuffleConvs_2_Downs_9_d0,
        ShuffleConvs_2_Downs_9_q0,
        ShuffleConvs_2_Downs_9_address1,
        ShuffleConvs_2_Downs_9_ce1,
        ShuffleConvs_2_Downs_9_we1,
        ShuffleConvs_2_Downs_9_d1,
        ShuffleConvs_2_Downs_60_address0,
        ShuffleConvs_2_Downs_60_ce0,
        ShuffleConvs_2_Downs_60_we0,
        ShuffleConvs_2_Downs_60_d0,
        ShuffleConvs_2_Downs_60_q0,
        ShuffleConvs_2_Downs_60_address1,
        ShuffleConvs_2_Downs_60_ce1,
        ShuffleConvs_2_Downs_60_we1,
        ShuffleConvs_2_Downs_60_d1,
        ShuffleConvs_2_Downs_8_address0,
        ShuffleConvs_2_Downs_8_ce0,
        ShuffleConvs_2_Downs_8_we0,
        ShuffleConvs_2_Downs_8_d0,
        ShuffleConvs_2_Downs_8_q0,
        ShuffleConvs_2_Downs_8_address1,
        ShuffleConvs_2_Downs_8_ce1,
        ShuffleConvs_2_Downs_8_we1,
        ShuffleConvs_2_Downs_8_d1,
        ShuffleConvs_2_Downs_59_address0,
        ShuffleConvs_2_Downs_59_ce0,
        ShuffleConvs_2_Downs_59_we0,
        ShuffleConvs_2_Downs_59_d0,
        ShuffleConvs_2_Downs_59_q0,
        ShuffleConvs_2_Downs_59_address1,
        ShuffleConvs_2_Downs_59_ce1,
        ShuffleConvs_2_Downs_59_we1,
        ShuffleConvs_2_Downs_59_d1,
        ShuffleConvs_2_Downs_7_address0,
        ShuffleConvs_2_Downs_7_ce0,
        ShuffleConvs_2_Downs_7_we0,
        ShuffleConvs_2_Downs_7_d0,
        ShuffleConvs_2_Downs_7_q0,
        ShuffleConvs_2_Downs_7_address1,
        ShuffleConvs_2_Downs_7_ce1,
        ShuffleConvs_2_Downs_7_we1,
        ShuffleConvs_2_Downs_7_d1,
        ShuffleConvs_2_Downs_58_address0,
        ShuffleConvs_2_Downs_58_ce0,
        ShuffleConvs_2_Downs_58_we0,
        ShuffleConvs_2_Downs_58_d0,
        ShuffleConvs_2_Downs_58_q0,
        ShuffleConvs_2_Downs_58_address1,
        ShuffleConvs_2_Downs_58_ce1,
        ShuffleConvs_2_Downs_58_we1,
        ShuffleConvs_2_Downs_58_d1,
        ShuffleConvs_2_Downs_5_address0,
        ShuffleConvs_2_Downs_5_ce0,
        ShuffleConvs_2_Downs_5_we0,
        ShuffleConvs_2_Downs_5_d0,
        ShuffleConvs_2_Downs_5_q0,
        ShuffleConvs_2_Downs_5_address1,
        ShuffleConvs_2_Downs_5_ce1,
        ShuffleConvs_2_Downs_5_we1,
        ShuffleConvs_2_Downs_5_d1,
        ShuffleConvs_2_Downs_57_address0,
        ShuffleConvs_2_Downs_57_ce0,
        ShuffleConvs_2_Downs_57_we0,
        ShuffleConvs_2_Downs_57_d0,
        ShuffleConvs_2_Downs_57_q0,
        ShuffleConvs_2_Downs_57_address1,
        ShuffleConvs_2_Downs_57_ce1,
        ShuffleConvs_2_Downs_57_we1,
        ShuffleConvs_2_Downs_57_d1,
        ShuffleConvs_2_Downs_4_address0,
        ShuffleConvs_2_Downs_4_ce0,
        ShuffleConvs_2_Downs_4_we0,
        ShuffleConvs_2_Downs_4_d0,
        ShuffleConvs_2_Downs_4_q0,
        ShuffleConvs_2_Downs_4_address1,
        ShuffleConvs_2_Downs_4_ce1,
        ShuffleConvs_2_Downs_4_we1,
        ShuffleConvs_2_Downs_4_d1,
        ShuffleConvs_2_Downs_56_address0,
        ShuffleConvs_2_Downs_56_ce0,
        ShuffleConvs_2_Downs_56_we0,
        ShuffleConvs_2_Downs_56_d0,
        ShuffleConvs_2_Downs_56_q0,
        ShuffleConvs_2_Downs_56_address1,
        ShuffleConvs_2_Downs_56_ce1,
        ShuffleConvs_2_Downs_56_we1,
        ShuffleConvs_2_Downs_56_d1,
        ShuffleConvs_2_Downs_3_address0,
        ShuffleConvs_2_Downs_3_ce0,
        ShuffleConvs_2_Downs_3_we0,
        ShuffleConvs_2_Downs_3_d0,
        ShuffleConvs_2_Downs_3_q0,
        ShuffleConvs_2_Downs_3_address1,
        ShuffleConvs_2_Downs_3_ce1,
        ShuffleConvs_2_Downs_3_we1,
        ShuffleConvs_2_Downs_3_d1,
        ShuffleConvs_2_Downs_55_address0,
        ShuffleConvs_2_Downs_55_ce0,
        ShuffleConvs_2_Downs_55_we0,
        ShuffleConvs_2_Downs_55_d0,
        ShuffleConvs_2_Downs_55_q0,
        ShuffleConvs_2_Downs_55_address1,
        ShuffleConvs_2_Downs_55_ce1,
        ShuffleConvs_2_Downs_55_we1,
        ShuffleConvs_2_Downs_55_d1,
        ShuffleConvs_2_Downs_2_address0,
        ShuffleConvs_2_Downs_2_ce0,
        ShuffleConvs_2_Downs_2_we0,
        ShuffleConvs_2_Downs_2_d0,
        ShuffleConvs_2_Downs_2_q0,
        ShuffleConvs_2_Downs_2_address1,
        ShuffleConvs_2_Downs_2_ce1,
        ShuffleConvs_2_Downs_2_we1,
        ShuffleConvs_2_Downs_2_d1,
        ShuffleConvs_2_Downs_54_address0,
        ShuffleConvs_2_Downs_54_ce0,
        ShuffleConvs_2_Downs_54_we0,
        ShuffleConvs_2_Downs_54_d0,
        ShuffleConvs_2_Downs_54_q0,
        ShuffleConvs_2_Downs_54_address1,
        ShuffleConvs_2_Downs_54_ce1,
        ShuffleConvs_2_Downs_54_we1,
        ShuffleConvs_2_Downs_54_d1,
        ShuffleConvs_2_Downs_1_address0,
        ShuffleConvs_2_Downs_1_ce0,
        ShuffleConvs_2_Downs_1_we0,
        ShuffleConvs_2_Downs_1_d0,
        ShuffleConvs_2_Downs_1_q0,
        ShuffleConvs_2_Downs_1_address1,
        ShuffleConvs_2_Downs_1_ce1,
        ShuffleConvs_2_Downs_1_we1,
        ShuffleConvs_2_Downs_1_d1,
        ShuffleConvs_2_Downs_53_address0,
        ShuffleConvs_2_Downs_53_ce0,
        ShuffleConvs_2_Downs_53_we0,
        ShuffleConvs_2_Downs_53_d0,
        ShuffleConvs_2_Downs_53_q0,
        ShuffleConvs_2_Downs_53_address1,
        ShuffleConvs_2_Downs_53_ce1,
        ShuffleConvs_2_Downs_53_we1,
        ShuffleConvs_2_Downs_53_d1,
        ShuffleConvs_2_Downs_address0,
        ShuffleConvs_2_Downs_ce0,
        ShuffleConvs_2_Downs_we0,
        ShuffleConvs_2_Downs_d0,
        ShuffleConvs_2_Downs_q0,
        ShuffleConvs_2_Downs_address1,
        ShuffleConvs_2_Downs_ce1,
        ShuffleConvs_2_Downs_we1,
        ShuffleConvs_2_Downs_d1
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_pp0_stage0 = 41'd2;
parameter    ap_ST_fsm_state5 = 41'd4;
parameter    ap_ST_fsm_state6 = 41'd8;
parameter    ap_ST_fsm_state7 = 41'd16;
parameter    ap_ST_fsm_state8 = 41'd32;
parameter    ap_ST_fsm_state9 = 41'd64;
parameter    ap_ST_fsm_state10 = 41'd128;
parameter    ap_ST_fsm_state11 = 41'd256;
parameter    ap_ST_fsm_state12 = 41'd512;
parameter    ap_ST_fsm_state13 = 41'd1024;
parameter    ap_ST_fsm_state14 = 41'd2048;
parameter    ap_ST_fsm_state15 = 41'd4096;
parameter    ap_ST_fsm_state16 = 41'd8192;
parameter    ap_ST_fsm_state17 = 41'd16384;
parameter    ap_ST_fsm_state18 = 41'd32768;
parameter    ap_ST_fsm_state19 = 41'd65536;
parameter    ap_ST_fsm_state20 = 41'd131072;
parameter    ap_ST_fsm_state21 = 41'd262144;
parameter    ap_ST_fsm_state22 = 41'd524288;
parameter    ap_ST_fsm_state23 = 41'd1048576;
parameter    ap_ST_fsm_state24 = 41'd2097152;
parameter    ap_ST_fsm_state25 = 41'd4194304;
parameter    ap_ST_fsm_state26 = 41'd8388608;
parameter    ap_ST_fsm_state27 = 41'd16777216;
parameter    ap_ST_fsm_state28 = 41'd33554432;
parameter    ap_ST_fsm_state29 = 41'd67108864;
parameter    ap_ST_fsm_state30 = 41'd134217728;
parameter    ap_ST_fsm_state31 = 41'd268435456;
parameter    ap_ST_fsm_state32 = 41'd536870912;
parameter    ap_ST_fsm_state33 = 41'd1073741824;
parameter    ap_ST_fsm_state34 = 41'd2147483648;
parameter    ap_ST_fsm_state35 = 41'd4294967296;
parameter    ap_ST_fsm_state36 = 41'd8589934592;
parameter    ap_ST_fsm_state37 = 41'd17179869184;
parameter    ap_ST_fsm_state38 = 41'd34359738368;
parameter    ap_ST_fsm_state39 = 41'd68719476736;
parameter    ap_ST_fsm_state40 = 41'd137438953472;
parameter    ap_ST_fsm_state41 = 41'd274877906944;
parameter    ap_ST_fsm_pp1_stage0 = 41'd549755813888;
parameter    ap_ST_fsm_state46 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] weight_8_V_address0;
output   weight_8_V_ce0;
input  [7:0] weight_8_V_q0;
output  [6:0] weight_9_V_address0;
output   weight_9_V_ce0;
input  [7:0] weight_9_V_q0;
output  [6:0] weight_10_V_address0;
output   weight_10_V_ce0;
input  [7:0] weight_10_V_q0;
output  [6:0] weight_11_V_address0;
output   weight_11_V_ce0;
input  [7:0] weight_11_V_q0;
output  [6:0] weight_12_V_address0;
output   weight_12_V_ce0;
input  [7:0] weight_12_V_q0;
output  [6:0] weight_13_V_address0;
output   weight_13_V_ce0;
input  [7:0] weight_13_V_q0;
output  [6:0] weight_14_V_address0;
output   weight_14_V_ce0;
input  [7:0] weight_14_V_q0;
output  [6:0] weight_15_V_address0;
output   weight_15_V_ce0;
input  [7:0] weight_15_V_q0;
output  [6:0] weight_16_V_address0;
output   weight_16_V_ce0;
input  [7:0] weight_16_V_q0;
output  [6:0] weight_17_V_address0;
output   weight_17_V_ce0;
input  [7:0] weight_17_V_q0;
output  [6:0] weight_18_V_address0;
output   weight_18_V_ce0;
input  [7:0] weight_18_V_q0;
output  [6:0] weight_19_V_address0;
output   weight_19_V_ce0;
input  [7:0] weight_19_V_q0;
output  [6:0] weight_20_V_address0;
output   weight_20_V_ce0;
input  [7:0] weight_20_V_q0;
output  [6:0] weight_21_V_address0;
output   weight_21_V_ce0;
input  [7:0] weight_21_V_q0;
output  [6:0] weight_22_V_address0;
output   weight_22_V_ce0;
input  [7:0] weight_22_V_q0;
output  [6:0] weight_23_V_address0;
output   weight_23_V_ce0;
input  [7:0] weight_23_V_q0;
output  [6:0] weight_24_V_address0;
output   weight_24_V_ce0;
input  [7:0] weight_24_V_q0;
output  [6:0] weight_25_V_address0;
output   weight_25_V_ce0;
input  [7:0] weight_25_V_q0;
output  [6:0] weight_26_V_address0;
output   weight_26_V_ce0;
input  [7:0] weight_26_V_q0;
output  [6:0] weight_27_V_address0;
output   weight_27_V_ce0;
input  [7:0] weight_27_V_q0;
output  [6:0] weight_28_V_address0;
output   weight_28_V_ce0;
input  [7:0] weight_28_V_q0;
output  [6:0] weight_29_V_address0;
output   weight_29_V_ce0;
input  [7:0] weight_29_V_q0;
output  [6:0] weight_30_V_address0;
output   weight_30_V_ce0;
input  [7:0] weight_30_V_q0;
output  [6:0] weight_31_V_address0;
output   weight_31_V_ce0;
input  [7:0] weight_31_V_q0;
output  [6:0] weight_32_V_address0;
output   weight_32_V_ce0;
input  [7:0] weight_32_V_q0;
output  [6:0] weight_33_V_address0;
output   weight_33_V_ce0;
input  [7:0] weight_33_V_q0;
output  [6:0] weight_34_V_address0;
output   weight_34_V_ce0;
input  [7:0] weight_34_V_q0;
output  [6:0] weight_35_V_address0;
output   weight_35_V_ce0;
input  [7:0] weight_35_V_q0;
output  [6:0] weight_36_V_address0;
output   weight_36_V_ce0;
input  [7:0] weight_36_V_q0;
output  [6:0] weight_37_V_address0;
output   weight_37_V_ce0;
input  [7:0] weight_37_V_q0;
output  [6:0] weight_38_V_address0;
output   weight_38_V_ce0;
input  [7:0] weight_38_V_q0;
output  [6:0] weight_39_V_address0;
output   weight_39_V_ce0;
input  [7:0] weight_39_V_q0;
output  [6:0] weight_40_V_address0;
output   weight_40_V_ce0;
input  [7:0] weight_40_V_q0;
output  [6:0] weight_41_V_address0;
output   weight_41_V_ce0;
input  [7:0] weight_41_V_q0;
output  [6:0] weight_42_V_address0;
output   weight_42_V_ce0;
input  [7:0] weight_42_V_q0;
output  [6:0] weight_43_V_address0;
output   weight_43_V_ce0;
input  [7:0] weight_43_V_q0;
output  [6:0] weight_44_V_address0;
output   weight_44_V_ce0;
input  [7:0] weight_44_V_q0;
output  [6:0] weight_45_V_address0;
output   weight_45_V_ce0;
input  [7:0] weight_45_V_q0;
output  [6:0] weight_46_V_address0;
output   weight_46_V_ce0;
input  [7:0] weight_46_V_q0;
output  [6:0] weight_47_V_address0;
output   weight_47_V_ce0;
input  [7:0] weight_47_V_q0;
output  [6:0] weight_48_V_address0;
output   weight_48_V_ce0;
input  [7:0] weight_48_V_q0;
output  [6:0] weight_49_V_address0;
output   weight_49_V_ce0;
input  [7:0] weight_49_V_q0;
output  [6:0] weight_50_V_address0;
output   weight_50_V_ce0;
input  [7:0] weight_50_V_q0;
output  [6:0] weight_51_V_address0;
output   weight_51_V_ce0;
input  [7:0] weight_51_V_q0;
output  [6:0] weight_52_V_address0;
output   weight_52_V_ce0;
input  [7:0] weight_52_V_q0;
output  [6:0] weight_53_V_address0;
output   weight_53_V_ce0;
input  [7:0] weight_53_V_q0;
output  [6:0] weight_54_V_address0;
output   weight_54_V_ce0;
input  [7:0] weight_54_V_q0;
output  [6:0] weight_55_V_address0;
output   weight_55_V_ce0;
input  [7:0] weight_55_V_q0;
output  [6:0] weight_56_V_address0;
output   weight_56_V_ce0;
input  [7:0] weight_56_V_q0;
output  [6:0] weight_57_V_address0;
output   weight_57_V_ce0;
input  [7:0] weight_57_V_q0;
output  [6:0] weight_58_V_address0;
output   weight_58_V_ce0;
input  [7:0] weight_58_V_q0;
output  [6:0] weight_59_V_address0;
output   weight_59_V_ce0;
input  [7:0] weight_59_V_q0;
output  [6:0] weight_60_V_address0;
output   weight_60_V_ce0;
input  [7:0] weight_60_V_q0;
output  [6:0] weight_61_V_address0;
output   weight_61_V_ce0;
input  [7:0] weight_61_V_q0;
output  [6:0] weight_62_V_address0;
output   weight_62_V_ce0;
input  [7:0] weight_62_V_q0;
output  [6:0] weight_63_V_address0;
output   weight_63_V_ce0;
input  [7:0] weight_63_V_q0;
output  [6:0] weight_64_V_address0;
output   weight_64_V_ce0;
input  [7:0] weight_64_V_q0;
output  [6:0] weight_65_V_address0;
output   weight_65_V_ce0;
input  [7:0] weight_65_V_q0;
output  [6:0] weight_66_V_address0;
output   weight_66_V_ce0;
input  [7:0] weight_66_V_q0;
output  [6:0] weight_67_V_address0;
output   weight_67_V_ce0;
input  [7:0] weight_67_V_q0;
output  [6:0] weight_68_V_address0;
output   weight_68_V_ce0;
input  [7:0] weight_68_V_q0;
output  [6:0] weight_69_V_address0;
output   weight_69_V_ce0;
input  [7:0] weight_69_V_q0;
output  [6:0] weight_70_V_address0;
output   weight_70_V_ce0;
input  [7:0] weight_70_V_q0;
output  [6:0] weight_71_V_address0;
output   weight_71_V_ce0;
input  [7:0] weight_71_V_q0;
output  [6:0] weight_72_V_address0;
output   weight_72_V_ce0;
input  [7:0] weight_72_V_q0;
output  [6:0] weight_73_V_address0;
output   weight_73_V_ce0;
input  [7:0] weight_73_V_q0;
output  [6:0] weight_74_V_address0;
output   weight_74_V_ce0;
input  [7:0] weight_74_V_q0;
output  [6:0] weight_75_V_address0;
output   weight_75_V_ce0;
input  [7:0] weight_75_V_q0;
output  [6:0] weight_76_V_address0;
output   weight_76_V_ce0;
input  [7:0] weight_76_V_q0;
output  [6:0] weight_77_V_address0;
output   weight_77_V_ce0;
input  [7:0] weight_77_V_q0;
output  [6:0] weight_78_V_address0;
output   weight_78_V_ce0;
input  [7:0] weight_78_V_q0;
output  [6:0] weight_79_V_address0;
output   weight_79_V_ce0;
input  [7:0] weight_79_V_q0;
output  [6:0] weight_80_V_address0;
output   weight_80_V_ce0;
input  [7:0] weight_80_V_q0;
output  [6:0] weight_81_V_address0;
output   weight_81_V_ce0;
input  [7:0] weight_81_V_q0;
output  [6:0] weight_82_V_address0;
output   weight_82_V_ce0;
input  [7:0] weight_82_V_q0;
output  [6:0] weight_83_V_address0;
output   weight_83_V_ce0;
input  [7:0] weight_83_V_q0;
output  [6:0] weight_84_V_address0;
output   weight_84_V_ce0;
input  [7:0] weight_84_V_q0;
output  [6:0] weight_85_V_address0;
output   weight_85_V_ce0;
input  [7:0] weight_85_V_q0;
output  [6:0] weight_86_V_address0;
output   weight_86_V_ce0;
input  [7:0] weight_86_V_q0;
output  [6:0] weight_87_V_address0;
output   weight_87_V_ce0;
input  [7:0] weight_87_V_q0;
output  [6:0] weight_88_V_address0;
output   weight_88_V_ce0;
input  [7:0] weight_88_V_q0;
output  [6:0] weight_89_V_address0;
output   weight_89_V_ce0;
input  [7:0] weight_89_V_q0;
output  [6:0] weight_90_V_address0;
output   weight_90_V_ce0;
input  [7:0] weight_90_V_q0;
output  [6:0] weight_91_V_address0;
output   weight_91_V_ce0;
input  [7:0] weight_91_V_q0;
output  [6:0] weight_92_V_address0;
output   weight_92_V_ce0;
input  [7:0] weight_92_V_q0;
output  [6:0] weight_93_V_address0;
output   weight_93_V_ce0;
input  [7:0] weight_93_V_q0;
output  [6:0] weight_94_V_address0;
output   weight_94_V_ce0;
input  [7:0] weight_94_V_q0;
output  [6:0] weight_95_V_address0;
output   weight_95_V_ce0;
input  [7:0] weight_95_V_q0;
output  [6:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [6:0] ShuffleConvs_2_Downs_95_address0;
output   ShuffleConvs_2_Downs_95_ce0;
output   ShuffleConvs_2_Downs_95_we0;
output  [7:0] ShuffleConvs_2_Downs_95_d0;
input  [7:0] ShuffleConvs_2_Downs_95_q0;
output  [6:0] ShuffleConvs_2_Downs_95_address1;
output   ShuffleConvs_2_Downs_95_ce1;
output   ShuffleConvs_2_Downs_95_we1;
output  [7:0] ShuffleConvs_2_Downs_95_d1;
output  [6:0] ShuffleConvs_2_Downs_52_address0;
output   ShuffleConvs_2_Downs_52_ce0;
output   ShuffleConvs_2_Downs_52_we0;
output  [7:0] ShuffleConvs_2_Downs_52_d0;
input  [7:0] ShuffleConvs_2_Downs_52_q0;
output  [6:0] ShuffleConvs_2_Downs_52_address1;
output   ShuffleConvs_2_Downs_52_ce1;
output   ShuffleConvs_2_Downs_52_we1;
output  [7:0] ShuffleConvs_2_Downs_52_d1;
output  [6:0] ShuffleConvs_2_Downs_94_address0;
output   ShuffleConvs_2_Downs_94_ce0;
output   ShuffleConvs_2_Downs_94_we0;
output  [7:0] ShuffleConvs_2_Downs_94_d0;
input  [7:0] ShuffleConvs_2_Downs_94_q0;
output  [6:0] ShuffleConvs_2_Downs_94_address1;
output   ShuffleConvs_2_Downs_94_ce1;
output   ShuffleConvs_2_Downs_94_we1;
output  [7:0] ShuffleConvs_2_Downs_94_d1;
output  [6:0] ShuffleConvs_2_Downs_51_address0;
output   ShuffleConvs_2_Downs_51_ce0;
output   ShuffleConvs_2_Downs_51_we0;
output  [7:0] ShuffleConvs_2_Downs_51_d0;
input  [7:0] ShuffleConvs_2_Downs_51_q0;
output  [6:0] ShuffleConvs_2_Downs_51_address1;
output   ShuffleConvs_2_Downs_51_ce1;
output   ShuffleConvs_2_Downs_51_we1;
output  [7:0] ShuffleConvs_2_Downs_51_d1;
output  [6:0] ShuffleConvs_2_Downs_83_address0;
output   ShuffleConvs_2_Downs_83_ce0;
output   ShuffleConvs_2_Downs_83_we0;
output  [7:0] ShuffleConvs_2_Downs_83_d0;
input  [7:0] ShuffleConvs_2_Downs_83_q0;
output  [6:0] ShuffleConvs_2_Downs_83_address1;
output   ShuffleConvs_2_Downs_83_ce1;
output   ShuffleConvs_2_Downs_83_we1;
output  [7:0] ShuffleConvs_2_Downs_83_d1;
output  [6:0] ShuffleConvs_2_Downs_49_address0;
output   ShuffleConvs_2_Downs_49_ce0;
output   ShuffleConvs_2_Downs_49_we0;
output  [7:0] ShuffleConvs_2_Downs_49_d0;
input  [7:0] ShuffleConvs_2_Downs_49_q0;
output  [6:0] ShuffleConvs_2_Downs_49_address1;
output   ShuffleConvs_2_Downs_49_ce1;
output   ShuffleConvs_2_Downs_49_we1;
output  [7:0] ShuffleConvs_2_Downs_49_d1;
output  [6:0] ShuffleConvs_2_Downs_72_address0;
output   ShuffleConvs_2_Downs_72_ce0;
output   ShuffleConvs_2_Downs_72_we0;
output  [7:0] ShuffleConvs_2_Downs_72_d0;
input  [7:0] ShuffleConvs_2_Downs_72_q0;
output  [6:0] ShuffleConvs_2_Downs_72_address1;
output   ShuffleConvs_2_Downs_72_ce1;
output   ShuffleConvs_2_Downs_72_we1;
output  [7:0] ShuffleConvs_2_Downs_72_d1;
output  [6:0] ShuffleConvs_2_Downs_48_address0;
output   ShuffleConvs_2_Downs_48_ce0;
output   ShuffleConvs_2_Downs_48_we0;
output  [7:0] ShuffleConvs_2_Downs_48_d0;
input  [7:0] ShuffleConvs_2_Downs_48_q0;
output  [6:0] ShuffleConvs_2_Downs_48_address1;
output   ShuffleConvs_2_Downs_48_ce1;
output   ShuffleConvs_2_Downs_48_we1;
output  [7:0] ShuffleConvs_2_Downs_48_d1;
output  [6:0] ShuffleConvs_2_Downs_61_address0;
output   ShuffleConvs_2_Downs_61_ce0;
output   ShuffleConvs_2_Downs_61_we0;
output  [7:0] ShuffleConvs_2_Downs_61_d0;
input  [7:0] ShuffleConvs_2_Downs_61_q0;
output  [6:0] ShuffleConvs_2_Downs_61_address1;
output   ShuffleConvs_2_Downs_61_ce1;
output   ShuffleConvs_2_Downs_61_we1;
output  [7:0] ShuffleConvs_2_Downs_61_d1;
output  [6:0] ShuffleConvs_2_Downs_47_address0;
output   ShuffleConvs_2_Downs_47_ce0;
output   ShuffleConvs_2_Downs_47_we0;
output  [7:0] ShuffleConvs_2_Downs_47_d0;
input  [7:0] ShuffleConvs_2_Downs_47_q0;
output  [6:0] ShuffleConvs_2_Downs_47_address1;
output   ShuffleConvs_2_Downs_47_ce1;
output   ShuffleConvs_2_Downs_47_we1;
output  [7:0] ShuffleConvs_2_Downs_47_d1;
output  [6:0] ShuffleConvs_2_Downs_50_address0;
output   ShuffleConvs_2_Downs_50_ce0;
output   ShuffleConvs_2_Downs_50_we0;
output  [7:0] ShuffleConvs_2_Downs_50_d0;
input  [7:0] ShuffleConvs_2_Downs_50_q0;
output  [6:0] ShuffleConvs_2_Downs_50_address1;
output   ShuffleConvs_2_Downs_50_ce1;
output   ShuffleConvs_2_Downs_50_we1;
output  [7:0] ShuffleConvs_2_Downs_50_d1;
output  [6:0] ShuffleConvs_2_Downs_46_address0;
output   ShuffleConvs_2_Downs_46_ce0;
output   ShuffleConvs_2_Downs_46_we0;
output  [7:0] ShuffleConvs_2_Downs_46_d0;
input  [7:0] ShuffleConvs_2_Downs_46_q0;
output  [6:0] ShuffleConvs_2_Downs_46_address1;
output   ShuffleConvs_2_Downs_46_ce1;
output   ShuffleConvs_2_Downs_46_we1;
output  [7:0] ShuffleConvs_2_Downs_46_d1;
output  [6:0] ShuffleConvs_2_Downs_39_address0;
output   ShuffleConvs_2_Downs_39_ce0;
output   ShuffleConvs_2_Downs_39_we0;
output  [7:0] ShuffleConvs_2_Downs_39_d0;
input  [7:0] ShuffleConvs_2_Downs_39_q0;
output  [6:0] ShuffleConvs_2_Downs_39_address1;
output   ShuffleConvs_2_Downs_39_ce1;
output   ShuffleConvs_2_Downs_39_we1;
output  [7:0] ShuffleConvs_2_Downs_39_d1;
output  [6:0] ShuffleConvs_2_Downs_45_address0;
output   ShuffleConvs_2_Downs_45_ce0;
output   ShuffleConvs_2_Downs_45_we0;
output  [7:0] ShuffleConvs_2_Downs_45_d0;
input  [7:0] ShuffleConvs_2_Downs_45_q0;
output  [6:0] ShuffleConvs_2_Downs_45_address1;
output   ShuffleConvs_2_Downs_45_ce1;
output   ShuffleConvs_2_Downs_45_we1;
output  [7:0] ShuffleConvs_2_Downs_45_d1;
output  [6:0] ShuffleConvs_2_Downs_28_address0;
output   ShuffleConvs_2_Downs_28_ce0;
output   ShuffleConvs_2_Downs_28_we0;
output  [7:0] ShuffleConvs_2_Downs_28_d0;
input  [7:0] ShuffleConvs_2_Downs_28_q0;
output  [6:0] ShuffleConvs_2_Downs_28_address1;
output   ShuffleConvs_2_Downs_28_ce1;
output   ShuffleConvs_2_Downs_28_we1;
output  [7:0] ShuffleConvs_2_Downs_28_d1;
output  [6:0] ShuffleConvs_2_Downs_44_address0;
output   ShuffleConvs_2_Downs_44_ce0;
output   ShuffleConvs_2_Downs_44_we0;
output  [7:0] ShuffleConvs_2_Downs_44_d0;
input  [7:0] ShuffleConvs_2_Downs_44_q0;
output  [6:0] ShuffleConvs_2_Downs_44_address1;
output   ShuffleConvs_2_Downs_44_ce1;
output   ShuffleConvs_2_Downs_44_we1;
output  [7:0] ShuffleConvs_2_Downs_44_d1;
output  [6:0] ShuffleConvs_2_Downs_17_address0;
output   ShuffleConvs_2_Downs_17_ce0;
output   ShuffleConvs_2_Downs_17_we0;
output  [7:0] ShuffleConvs_2_Downs_17_d0;
input  [7:0] ShuffleConvs_2_Downs_17_q0;
output  [6:0] ShuffleConvs_2_Downs_17_address1;
output   ShuffleConvs_2_Downs_17_ce1;
output   ShuffleConvs_2_Downs_17_we1;
output  [7:0] ShuffleConvs_2_Downs_17_d1;
output  [6:0] ShuffleConvs_2_Downs_43_address0;
output   ShuffleConvs_2_Downs_43_ce0;
output   ShuffleConvs_2_Downs_43_we0;
output  [7:0] ShuffleConvs_2_Downs_43_d0;
input  [7:0] ShuffleConvs_2_Downs_43_q0;
output  [6:0] ShuffleConvs_2_Downs_43_address1;
output   ShuffleConvs_2_Downs_43_ce1;
output   ShuffleConvs_2_Downs_43_we1;
output  [7:0] ShuffleConvs_2_Downs_43_d1;
output  [6:0] ShuffleConvs_2_Downs_6_address0;
output   ShuffleConvs_2_Downs_6_ce0;
output   ShuffleConvs_2_Downs_6_we0;
output  [7:0] ShuffleConvs_2_Downs_6_d0;
input  [7:0] ShuffleConvs_2_Downs_6_q0;
output  [6:0] ShuffleConvs_2_Downs_6_address1;
output   ShuffleConvs_2_Downs_6_ce1;
output   ShuffleConvs_2_Downs_6_we1;
output  [7:0] ShuffleConvs_2_Downs_6_d1;
output  [6:0] ShuffleConvs_2_Downs_42_address0;
output   ShuffleConvs_2_Downs_42_ce0;
output   ShuffleConvs_2_Downs_42_we0;
output  [7:0] ShuffleConvs_2_Downs_42_d0;
input  [7:0] ShuffleConvs_2_Downs_42_q0;
output  [6:0] ShuffleConvs_2_Downs_42_address1;
output   ShuffleConvs_2_Downs_42_ce1;
output   ShuffleConvs_2_Downs_42_we1;
output  [7:0] ShuffleConvs_2_Downs_42_d1;
output  [6:0] ShuffleConvs_2_Downs_93_address0;
output   ShuffleConvs_2_Downs_93_ce0;
output   ShuffleConvs_2_Downs_93_we0;
output  [7:0] ShuffleConvs_2_Downs_93_d0;
input  [7:0] ShuffleConvs_2_Downs_93_q0;
output  [6:0] ShuffleConvs_2_Downs_93_address1;
output   ShuffleConvs_2_Downs_93_ce1;
output   ShuffleConvs_2_Downs_93_we1;
output  [7:0] ShuffleConvs_2_Downs_93_d1;
output  [6:0] ShuffleConvs_2_Downs_41_address0;
output   ShuffleConvs_2_Downs_41_ce0;
output   ShuffleConvs_2_Downs_41_we0;
output  [7:0] ShuffleConvs_2_Downs_41_d0;
input  [7:0] ShuffleConvs_2_Downs_41_q0;
output  [6:0] ShuffleConvs_2_Downs_41_address1;
output   ShuffleConvs_2_Downs_41_ce1;
output   ShuffleConvs_2_Downs_41_we1;
output  [7:0] ShuffleConvs_2_Downs_41_d1;
output  [6:0] ShuffleConvs_2_Downs_92_address0;
output   ShuffleConvs_2_Downs_92_ce0;
output   ShuffleConvs_2_Downs_92_we0;
output  [7:0] ShuffleConvs_2_Downs_92_d0;
input  [7:0] ShuffleConvs_2_Downs_92_q0;
output  [6:0] ShuffleConvs_2_Downs_92_address1;
output   ShuffleConvs_2_Downs_92_ce1;
output   ShuffleConvs_2_Downs_92_we1;
output  [7:0] ShuffleConvs_2_Downs_92_d1;
output  [6:0] ShuffleConvs_2_Downs_40_address0;
output   ShuffleConvs_2_Downs_40_ce0;
output   ShuffleConvs_2_Downs_40_we0;
output  [7:0] ShuffleConvs_2_Downs_40_d0;
input  [7:0] ShuffleConvs_2_Downs_40_q0;
output  [6:0] ShuffleConvs_2_Downs_40_address1;
output   ShuffleConvs_2_Downs_40_ce1;
output   ShuffleConvs_2_Downs_40_we1;
output  [7:0] ShuffleConvs_2_Downs_40_d1;
output  [6:0] ShuffleConvs_2_Downs_91_address0;
output   ShuffleConvs_2_Downs_91_ce0;
output   ShuffleConvs_2_Downs_91_we0;
output  [7:0] ShuffleConvs_2_Downs_91_d0;
input  [7:0] ShuffleConvs_2_Downs_91_q0;
output  [6:0] ShuffleConvs_2_Downs_91_address1;
output   ShuffleConvs_2_Downs_91_ce1;
output   ShuffleConvs_2_Downs_91_we1;
output  [7:0] ShuffleConvs_2_Downs_91_d1;
output  [6:0] ShuffleConvs_2_Downs_38_address0;
output   ShuffleConvs_2_Downs_38_ce0;
output   ShuffleConvs_2_Downs_38_we0;
output  [7:0] ShuffleConvs_2_Downs_38_d0;
input  [7:0] ShuffleConvs_2_Downs_38_q0;
output  [6:0] ShuffleConvs_2_Downs_38_address1;
output   ShuffleConvs_2_Downs_38_ce1;
output   ShuffleConvs_2_Downs_38_we1;
output  [7:0] ShuffleConvs_2_Downs_38_d1;
output  [6:0] ShuffleConvs_2_Downs_90_address0;
output   ShuffleConvs_2_Downs_90_ce0;
output   ShuffleConvs_2_Downs_90_we0;
output  [7:0] ShuffleConvs_2_Downs_90_d0;
input  [7:0] ShuffleConvs_2_Downs_90_q0;
output  [6:0] ShuffleConvs_2_Downs_90_address1;
output   ShuffleConvs_2_Downs_90_ce1;
output   ShuffleConvs_2_Downs_90_we1;
output  [7:0] ShuffleConvs_2_Downs_90_d1;
output  [6:0] ShuffleConvs_2_Downs_37_address0;
output   ShuffleConvs_2_Downs_37_ce0;
output   ShuffleConvs_2_Downs_37_we0;
output  [7:0] ShuffleConvs_2_Downs_37_d0;
input  [7:0] ShuffleConvs_2_Downs_37_q0;
output  [6:0] ShuffleConvs_2_Downs_37_address1;
output   ShuffleConvs_2_Downs_37_ce1;
output   ShuffleConvs_2_Downs_37_we1;
output  [7:0] ShuffleConvs_2_Downs_37_d1;
output  [6:0] ShuffleConvs_2_Downs_89_address0;
output   ShuffleConvs_2_Downs_89_ce0;
output   ShuffleConvs_2_Downs_89_we0;
output  [7:0] ShuffleConvs_2_Downs_89_d0;
input  [7:0] ShuffleConvs_2_Downs_89_q0;
output  [6:0] ShuffleConvs_2_Downs_89_address1;
output   ShuffleConvs_2_Downs_89_ce1;
output   ShuffleConvs_2_Downs_89_we1;
output  [7:0] ShuffleConvs_2_Downs_89_d1;
output  [6:0] ShuffleConvs_2_Downs_36_address0;
output   ShuffleConvs_2_Downs_36_ce0;
output   ShuffleConvs_2_Downs_36_we0;
output  [7:0] ShuffleConvs_2_Downs_36_d0;
input  [7:0] ShuffleConvs_2_Downs_36_q0;
output  [6:0] ShuffleConvs_2_Downs_36_address1;
output   ShuffleConvs_2_Downs_36_ce1;
output   ShuffleConvs_2_Downs_36_we1;
output  [7:0] ShuffleConvs_2_Downs_36_d1;
output  [6:0] ShuffleConvs_2_Downs_88_address0;
output   ShuffleConvs_2_Downs_88_ce0;
output   ShuffleConvs_2_Downs_88_we0;
output  [7:0] ShuffleConvs_2_Downs_88_d0;
input  [7:0] ShuffleConvs_2_Downs_88_q0;
output  [6:0] ShuffleConvs_2_Downs_88_address1;
output   ShuffleConvs_2_Downs_88_ce1;
output   ShuffleConvs_2_Downs_88_we1;
output  [7:0] ShuffleConvs_2_Downs_88_d1;
output  [6:0] ShuffleConvs_2_Downs_35_address0;
output   ShuffleConvs_2_Downs_35_ce0;
output   ShuffleConvs_2_Downs_35_we0;
output  [7:0] ShuffleConvs_2_Downs_35_d0;
input  [7:0] ShuffleConvs_2_Downs_35_q0;
output  [6:0] ShuffleConvs_2_Downs_35_address1;
output   ShuffleConvs_2_Downs_35_ce1;
output   ShuffleConvs_2_Downs_35_we1;
output  [7:0] ShuffleConvs_2_Downs_35_d1;
output  [6:0] ShuffleConvs_2_Downs_87_address0;
output   ShuffleConvs_2_Downs_87_ce0;
output   ShuffleConvs_2_Downs_87_we0;
output  [7:0] ShuffleConvs_2_Downs_87_d0;
input  [7:0] ShuffleConvs_2_Downs_87_q0;
output  [6:0] ShuffleConvs_2_Downs_87_address1;
output   ShuffleConvs_2_Downs_87_ce1;
output   ShuffleConvs_2_Downs_87_we1;
output  [7:0] ShuffleConvs_2_Downs_87_d1;
output  [6:0] ShuffleConvs_2_Downs_34_address0;
output   ShuffleConvs_2_Downs_34_ce0;
output   ShuffleConvs_2_Downs_34_we0;
output  [7:0] ShuffleConvs_2_Downs_34_d0;
input  [7:0] ShuffleConvs_2_Downs_34_q0;
output  [6:0] ShuffleConvs_2_Downs_34_address1;
output   ShuffleConvs_2_Downs_34_ce1;
output   ShuffleConvs_2_Downs_34_we1;
output  [7:0] ShuffleConvs_2_Downs_34_d1;
output  [6:0] ShuffleConvs_2_Downs_86_address0;
output   ShuffleConvs_2_Downs_86_ce0;
output   ShuffleConvs_2_Downs_86_we0;
output  [7:0] ShuffleConvs_2_Downs_86_d0;
input  [7:0] ShuffleConvs_2_Downs_86_q0;
output  [6:0] ShuffleConvs_2_Downs_86_address1;
output   ShuffleConvs_2_Downs_86_ce1;
output   ShuffleConvs_2_Downs_86_we1;
output  [7:0] ShuffleConvs_2_Downs_86_d1;
output  [6:0] ShuffleConvs_2_Downs_33_address0;
output   ShuffleConvs_2_Downs_33_ce0;
output   ShuffleConvs_2_Downs_33_we0;
output  [7:0] ShuffleConvs_2_Downs_33_d0;
input  [7:0] ShuffleConvs_2_Downs_33_q0;
output  [6:0] ShuffleConvs_2_Downs_33_address1;
output   ShuffleConvs_2_Downs_33_ce1;
output   ShuffleConvs_2_Downs_33_we1;
output  [7:0] ShuffleConvs_2_Downs_33_d1;
output  [6:0] ShuffleConvs_2_Downs_85_address0;
output   ShuffleConvs_2_Downs_85_ce0;
output   ShuffleConvs_2_Downs_85_we0;
output  [7:0] ShuffleConvs_2_Downs_85_d0;
input  [7:0] ShuffleConvs_2_Downs_85_q0;
output  [6:0] ShuffleConvs_2_Downs_85_address1;
output   ShuffleConvs_2_Downs_85_ce1;
output   ShuffleConvs_2_Downs_85_we1;
output  [7:0] ShuffleConvs_2_Downs_85_d1;
output  [6:0] ShuffleConvs_2_Downs_32_address0;
output   ShuffleConvs_2_Downs_32_ce0;
output   ShuffleConvs_2_Downs_32_we0;
output  [7:0] ShuffleConvs_2_Downs_32_d0;
input  [7:0] ShuffleConvs_2_Downs_32_q0;
output  [6:0] ShuffleConvs_2_Downs_32_address1;
output   ShuffleConvs_2_Downs_32_ce1;
output   ShuffleConvs_2_Downs_32_we1;
output  [7:0] ShuffleConvs_2_Downs_32_d1;
output  [6:0] ShuffleConvs_2_Downs_84_address0;
output   ShuffleConvs_2_Downs_84_ce0;
output   ShuffleConvs_2_Downs_84_we0;
output  [7:0] ShuffleConvs_2_Downs_84_d0;
input  [7:0] ShuffleConvs_2_Downs_84_q0;
output  [6:0] ShuffleConvs_2_Downs_84_address1;
output   ShuffleConvs_2_Downs_84_ce1;
output   ShuffleConvs_2_Downs_84_we1;
output  [7:0] ShuffleConvs_2_Downs_84_d1;
output  [6:0] ShuffleConvs_2_Downs_31_address0;
output   ShuffleConvs_2_Downs_31_ce0;
output   ShuffleConvs_2_Downs_31_we0;
output  [7:0] ShuffleConvs_2_Downs_31_d0;
input  [7:0] ShuffleConvs_2_Downs_31_q0;
output  [6:0] ShuffleConvs_2_Downs_31_address1;
output   ShuffleConvs_2_Downs_31_ce1;
output   ShuffleConvs_2_Downs_31_we1;
output  [7:0] ShuffleConvs_2_Downs_31_d1;
output  [6:0] ShuffleConvs_2_Downs_82_address0;
output   ShuffleConvs_2_Downs_82_ce0;
output   ShuffleConvs_2_Downs_82_we0;
output  [7:0] ShuffleConvs_2_Downs_82_d0;
input  [7:0] ShuffleConvs_2_Downs_82_q0;
output  [6:0] ShuffleConvs_2_Downs_82_address1;
output   ShuffleConvs_2_Downs_82_ce1;
output   ShuffleConvs_2_Downs_82_we1;
output  [7:0] ShuffleConvs_2_Downs_82_d1;
output  [6:0] ShuffleConvs_2_Downs_30_address0;
output   ShuffleConvs_2_Downs_30_ce0;
output   ShuffleConvs_2_Downs_30_we0;
output  [7:0] ShuffleConvs_2_Downs_30_d0;
input  [7:0] ShuffleConvs_2_Downs_30_q0;
output  [6:0] ShuffleConvs_2_Downs_30_address1;
output   ShuffleConvs_2_Downs_30_ce1;
output   ShuffleConvs_2_Downs_30_we1;
output  [7:0] ShuffleConvs_2_Downs_30_d1;
output  [6:0] ShuffleConvs_2_Downs_81_address0;
output   ShuffleConvs_2_Downs_81_ce0;
output   ShuffleConvs_2_Downs_81_we0;
output  [7:0] ShuffleConvs_2_Downs_81_d0;
input  [7:0] ShuffleConvs_2_Downs_81_q0;
output  [6:0] ShuffleConvs_2_Downs_81_address1;
output   ShuffleConvs_2_Downs_81_ce1;
output   ShuffleConvs_2_Downs_81_we1;
output  [7:0] ShuffleConvs_2_Downs_81_d1;
output  [6:0] ShuffleConvs_2_Downs_29_address0;
output   ShuffleConvs_2_Downs_29_ce0;
output   ShuffleConvs_2_Downs_29_we0;
output  [7:0] ShuffleConvs_2_Downs_29_d0;
input  [7:0] ShuffleConvs_2_Downs_29_q0;
output  [6:0] ShuffleConvs_2_Downs_29_address1;
output   ShuffleConvs_2_Downs_29_ce1;
output   ShuffleConvs_2_Downs_29_we1;
output  [7:0] ShuffleConvs_2_Downs_29_d1;
output  [6:0] ShuffleConvs_2_Downs_80_address0;
output   ShuffleConvs_2_Downs_80_ce0;
output   ShuffleConvs_2_Downs_80_we0;
output  [7:0] ShuffleConvs_2_Downs_80_d0;
input  [7:0] ShuffleConvs_2_Downs_80_q0;
output  [6:0] ShuffleConvs_2_Downs_80_address1;
output   ShuffleConvs_2_Downs_80_ce1;
output   ShuffleConvs_2_Downs_80_we1;
output  [7:0] ShuffleConvs_2_Downs_80_d1;
output  [6:0] ShuffleConvs_2_Downs_27_address0;
output   ShuffleConvs_2_Downs_27_ce0;
output   ShuffleConvs_2_Downs_27_we0;
output  [7:0] ShuffleConvs_2_Downs_27_d0;
input  [7:0] ShuffleConvs_2_Downs_27_q0;
output  [6:0] ShuffleConvs_2_Downs_27_address1;
output   ShuffleConvs_2_Downs_27_ce1;
output   ShuffleConvs_2_Downs_27_we1;
output  [7:0] ShuffleConvs_2_Downs_27_d1;
output  [6:0] ShuffleConvs_2_Downs_79_address0;
output   ShuffleConvs_2_Downs_79_ce0;
output   ShuffleConvs_2_Downs_79_we0;
output  [7:0] ShuffleConvs_2_Downs_79_d0;
input  [7:0] ShuffleConvs_2_Downs_79_q0;
output  [6:0] ShuffleConvs_2_Downs_79_address1;
output   ShuffleConvs_2_Downs_79_ce1;
output   ShuffleConvs_2_Downs_79_we1;
output  [7:0] ShuffleConvs_2_Downs_79_d1;
output  [6:0] ShuffleConvs_2_Downs_26_address0;
output   ShuffleConvs_2_Downs_26_ce0;
output   ShuffleConvs_2_Downs_26_we0;
output  [7:0] ShuffleConvs_2_Downs_26_d0;
input  [7:0] ShuffleConvs_2_Downs_26_q0;
output  [6:0] ShuffleConvs_2_Downs_26_address1;
output   ShuffleConvs_2_Downs_26_ce1;
output   ShuffleConvs_2_Downs_26_we1;
output  [7:0] ShuffleConvs_2_Downs_26_d1;
output  [6:0] ShuffleConvs_2_Downs_78_address0;
output   ShuffleConvs_2_Downs_78_ce0;
output   ShuffleConvs_2_Downs_78_we0;
output  [7:0] ShuffleConvs_2_Downs_78_d0;
input  [7:0] ShuffleConvs_2_Downs_78_q0;
output  [6:0] ShuffleConvs_2_Downs_78_address1;
output   ShuffleConvs_2_Downs_78_ce1;
output   ShuffleConvs_2_Downs_78_we1;
output  [7:0] ShuffleConvs_2_Downs_78_d1;
output  [6:0] ShuffleConvs_2_Downs_25_address0;
output   ShuffleConvs_2_Downs_25_ce0;
output   ShuffleConvs_2_Downs_25_we0;
output  [7:0] ShuffleConvs_2_Downs_25_d0;
input  [7:0] ShuffleConvs_2_Downs_25_q0;
output  [6:0] ShuffleConvs_2_Downs_25_address1;
output   ShuffleConvs_2_Downs_25_ce1;
output   ShuffleConvs_2_Downs_25_we1;
output  [7:0] ShuffleConvs_2_Downs_25_d1;
output  [6:0] ShuffleConvs_2_Downs_77_address0;
output   ShuffleConvs_2_Downs_77_ce0;
output   ShuffleConvs_2_Downs_77_we0;
output  [7:0] ShuffleConvs_2_Downs_77_d0;
input  [7:0] ShuffleConvs_2_Downs_77_q0;
output  [6:0] ShuffleConvs_2_Downs_77_address1;
output   ShuffleConvs_2_Downs_77_ce1;
output   ShuffleConvs_2_Downs_77_we1;
output  [7:0] ShuffleConvs_2_Downs_77_d1;
output  [6:0] ShuffleConvs_2_Downs_24_address0;
output   ShuffleConvs_2_Downs_24_ce0;
output   ShuffleConvs_2_Downs_24_we0;
output  [7:0] ShuffleConvs_2_Downs_24_d0;
input  [7:0] ShuffleConvs_2_Downs_24_q0;
output  [6:0] ShuffleConvs_2_Downs_24_address1;
output   ShuffleConvs_2_Downs_24_ce1;
output   ShuffleConvs_2_Downs_24_we1;
output  [7:0] ShuffleConvs_2_Downs_24_d1;
output  [6:0] ShuffleConvs_2_Downs_76_address0;
output   ShuffleConvs_2_Downs_76_ce0;
output   ShuffleConvs_2_Downs_76_we0;
output  [7:0] ShuffleConvs_2_Downs_76_d0;
input  [7:0] ShuffleConvs_2_Downs_76_q0;
output  [6:0] ShuffleConvs_2_Downs_76_address1;
output   ShuffleConvs_2_Downs_76_ce1;
output   ShuffleConvs_2_Downs_76_we1;
output  [7:0] ShuffleConvs_2_Downs_76_d1;
output  [6:0] ShuffleConvs_2_Downs_23_address0;
output   ShuffleConvs_2_Downs_23_ce0;
output   ShuffleConvs_2_Downs_23_we0;
output  [7:0] ShuffleConvs_2_Downs_23_d0;
input  [7:0] ShuffleConvs_2_Downs_23_q0;
output  [6:0] ShuffleConvs_2_Downs_23_address1;
output   ShuffleConvs_2_Downs_23_ce1;
output   ShuffleConvs_2_Downs_23_we1;
output  [7:0] ShuffleConvs_2_Downs_23_d1;
output  [6:0] ShuffleConvs_2_Downs_75_address0;
output   ShuffleConvs_2_Downs_75_ce0;
output   ShuffleConvs_2_Downs_75_we0;
output  [7:0] ShuffleConvs_2_Downs_75_d0;
input  [7:0] ShuffleConvs_2_Downs_75_q0;
output  [6:0] ShuffleConvs_2_Downs_75_address1;
output   ShuffleConvs_2_Downs_75_ce1;
output   ShuffleConvs_2_Downs_75_we1;
output  [7:0] ShuffleConvs_2_Downs_75_d1;
output  [6:0] ShuffleConvs_2_Downs_22_address0;
output   ShuffleConvs_2_Downs_22_ce0;
output   ShuffleConvs_2_Downs_22_we0;
output  [7:0] ShuffleConvs_2_Downs_22_d0;
input  [7:0] ShuffleConvs_2_Downs_22_q0;
output  [6:0] ShuffleConvs_2_Downs_22_address1;
output   ShuffleConvs_2_Downs_22_ce1;
output   ShuffleConvs_2_Downs_22_we1;
output  [7:0] ShuffleConvs_2_Downs_22_d1;
output  [6:0] ShuffleConvs_2_Downs_74_address0;
output   ShuffleConvs_2_Downs_74_ce0;
output   ShuffleConvs_2_Downs_74_we0;
output  [7:0] ShuffleConvs_2_Downs_74_d0;
input  [7:0] ShuffleConvs_2_Downs_74_q0;
output  [6:0] ShuffleConvs_2_Downs_74_address1;
output   ShuffleConvs_2_Downs_74_ce1;
output   ShuffleConvs_2_Downs_74_we1;
output  [7:0] ShuffleConvs_2_Downs_74_d1;
output  [6:0] ShuffleConvs_2_Downs_21_address0;
output   ShuffleConvs_2_Downs_21_ce0;
output   ShuffleConvs_2_Downs_21_we0;
output  [7:0] ShuffleConvs_2_Downs_21_d0;
input  [7:0] ShuffleConvs_2_Downs_21_q0;
output  [6:0] ShuffleConvs_2_Downs_21_address1;
output   ShuffleConvs_2_Downs_21_ce1;
output   ShuffleConvs_2_Downs_21_we1;
output  [7:0] ShuffleConvs_2_Downs_21_d1;
output  [6:0] ShuffleConvs_2_Downs_73_address0;
output   ShuffleConvs_2_Downs_73_ce0;
output   ShuffleConvs_2_Downs_73_we0;
output  [7:0] ShuffleConvs_2_Downs_73_d0;
input  [7:0] ShuffleConvs_2_Downs_73_q0;
output  [6:0] ShuffleConvs_2_Downs_73_address1;
output   ShuffleConvs_2_Downs_73_ce1;
output   ShuffleConvs_2_Downs_73_we1;
output  [7:0] ShuffleConvs_2_Downs_73_d1;
output  [6:0] ShuffleConvs_2_Downs_20_address0;
output   ShuffleConvs_2_Downs_20_ce0;
output   ShuffleConvs_2_Downs_20_we0;
output  [7:0] ShuffleConvs_2_Downs_20_d0;
input  [7:0] ShuffleConvs_2_Downs_20_q0;
output  [6:0] ShuffleConvs_2_Downs_20_address1;
output   ShuffleConvs_2_Downs_20_ce1;
output   ShuffleConvs_2_Downs_20_we1;
output  [7:0] ShuffleConvs_2_Downs_20_d1;
output  [6:0] ShuffleConvs_2_Downs_71_address0;
output   ShuffleConvs_2_Downs_71_ce0;
output   ShuffleConvs_2_Downs_71_we0;
output  [7:0] ShuffleConvs_2_Downs_71_d0;
input  [7:0] ShuffleConvs_2_Downs_71_q0;
output  [6:0] ShuffleConvs_2_Downs_71_address1;
output   ShuffleConvs_2_Downs_71_ce1;
output   ShuffleConvs_2_Downs_71_we1;
output  [7:0] ShuffleConvs_2_Downs_71_d1;
output  [6:0] ShuffleConvs_2_Downs_19_address0;
output   ShuffleConvs_2_Downs_19_ce0;
output   ShuffleConvs_2_Downs_19_we0;
output  [7:0] ShuffleConvs_2_Downs_19_d0;
input  [7:0] ShuffleConvs_2_Downs_19_q0;
output  [6:0] ShuffleConvs_2_Downs_19_address1;
output   ShuffleConvs_2_Downs_19_ce1;
output   ShuffleConvs_2_Downs_19_we1;
output  [7:0] ShuffleConvs_2_Downs_19_d1;
output  [6:0] ShuffleConvs_2_Downs_70_address0;
output   ShuffleConvs_2_Downs_70_ce0;
output   ShuffleConvs_2_Downs_70_we0;
output  [7:0] ShuffleConvs_2_Downs_70_d0;
input  [7:0] ShuffleConvs_2_Downs_70_q0;
output  [6:0] ShuffleConvs_2_Downs_70_address1;
output   ShuffleConvs_2_Downs_70_ce1;
output   ShuffleConvs_2_Downs_70_we1;
output  [7:0] ShuffleConvs_2_Downs_70_d1;
output  [6:0] ShuffleConvs_2_Downs_18_address0;
output   ShuffleConvs_2_Downs_18_ce0;
output   ShuffleConvs_2_Downs_18_we0;
output  [7:0] ShuffleConvs_2_Downs_18_d0;
input  [7:0] ShuffleConvs_2_Downs_18_q0;
output  [6:0] ShuffleConvs_2_Downs_18_address1;
output   ShuffleConvs_2_Downs_18_ce1;
output   ShuffleConvs_2_Downs_18_we1;
output  [7:0] ShuffleConvs_2_Downs_18_d1;
output  [6:0] ShuffleConvs_2_Downs_69_address0;
output   ShuffleConvs_2_Downs_69_ce0;
output   ShuffleConvs_2_Downs_69_we0;
output  [7:0] ShuffleConvs_2_Downs_69_d0;
input  [7:0] ShuffleConvs_2_Downs_69_q0;
output  [6:0] ShuffleConvs_2_Downs_69_address1;
output   ShuffleConvs_2_Downs_69_ce1;
output   ShuffleConvs_2_Downs_69_we1;
output  [7:0] ShuffleConvs_2_Downs_69_d1;
output  [6:0] ShuffleConvs_2_Downs_16_address0;
output   ShuffleConvs_2_Downs_16_ce0;
output   ShuffleConvs_2_Downs_16_we0;
output  [7:0] ShuffleConvs_2_Downs_16_d0;
input  [7:0] ShuffleConvs_2_Downs_16_q0;
output  [6:0] ShuffleConvs_2_Downs_16_address1;
output   ShuffleConvs_2_Downs_16_ce1;
output   ShuffleConvs_2_Downs_16_we1;
output  [7:0] ShuffleConvs_2_Downs_16_d1;
output  [6:0] ShuffleConvs_2_Downs_68_address0;
output   ShuffleConvs_2_Downs_68_ce0;
output   ShuffleConvs_2_Downs_68_we0;
output  [7:0] ShuffleConvs_2_Downs_68_d0;
input  [7:0] ShuffleConvs_2_Downs_68_q0;
output  [6:0] ShuffleConvs_2_Downs_68_address1;
output   ShuffleConvs_2_Downs_68_ce1;
output   ShuffleConvs_2_Downs_68_we1;
output  [7:0] ShuffleConvs_2_Downs_68_d1;
output  [6:0] ShuffleConvs_2_Downs_15_address0;
output   ShuffleConvs_2_Downs_15_ce0;
output   ShuffleConvs_2_Downs_15_we0;
output  [7:0] ShuffleConvs_2_Downs_15_d0;
input  [7:0] ShuffleConvs_2_Downs_15_q0;
output  [6:0] ShuffleConvs_2_Downs_15_address1;
output   ShuffleConvs_2_Downs_15_ce1;
output   ShuffleConvs_2_Downs_15_we1;
output  [7:0] ShuffleConvs_2_Downs_15_d1;
output  [6:0] ShuffleConvs_2_Downs_67_address0;
output   ShuffleConvs_2_Downs_67_ce0;
output   ShuffleConvs_2_Downs_67_we0;
output  [7:0] ShuffleConvs_2_Downs_67_d0;
input  [7:0] ShuffleConvs_2_Downs_67_q0;
output  [6:0] ShuffleConvs_2_Downs_67_address1;
output   ShuffleConvs_2_Downs_67_ce1;
output   ShuffleConvs_2_Downs_67_we1;
output  [7:0] ShuffleConvs_2_Downs_67_d1;
output  [6:0] ShuffleConvs_2_Downs_14_address0;
output   ShuffleConvs_2_Downs_14_ce0;
output   ShuffleConvs_2_Downs_14_we0;
output  [7:0] ShuffleConvs_2_Downs_14_d0;
input  [7:0] ShuffleConvs_2_Downs_14_q0;
output  [6:0] ShuffleConvs_2_Downs_14_address1;
output   ShuffleConvs_2_Downs_14_ce1;
output   ShuffleConvs_2_Downs_14_we1;
output  [7:0] ShuffleConvs_2_Downs_14_d1;
output  [6:0] ShuffleConvs_2_Downs_66_address0;
output   ShuffleConvs_2_Downs_66_ce0;
output   ShuffleConvs_2_Downs_66_we0;
output  [7:0] ShuffleConvs_2_Downs_66_d0;
input  [7:0] ShuffleConvs_2_Downs_66_q0;
output  [6:0] ShuffleConvs_2_Downs_66_address1;
output   ShuffleConvs_2_Downs_66_ce1;
output   ShuffleConvs_2_Downs_66_we1;
output  [7:0] ShuffleConvs_2_Downs_66_d1;
output  [6:0] ShuffleConvs_2_Downs_13_address0;
output   ShuffleConvs_2_Downs_13_ce0;
output   ShuffleConvs_2_Downs_13_we0;
output  [7:0] ShuffleConvs_2_Downs_13_d0;
input  [7:0] ShuffleConvs_2_Downs_13_q0;
output  [6:0] ShuffleConvs_2_Downs_13_address1;
output   ShuffleConvs_2_Downs_13_ce1;
output   ShuffleConvs_2_Downs_13_we1;
output  [7:0] ShuffleConvs_2_Downs_13_d1;
output  [6:0] ShuffleConvs_2_Downs_65_address0;
output   ShuffleConvs_2_Downs_65_ce0;
output   ShuffleConvs_2_Downs_65_we0;
output  [7:0] ShuffleConvs_2_Downs_65_d0;
input  [7:0] ShuffleConvs_2_Downs_65_q0;
output  [6:0] ShuffleConvs_2_Downs_65_address1;
output   ShuffleConvs_2_Downs_65_ce1;
output   ShuffleConvs_2_Downs_65_we1;
output  [7:0] ShuffleConvs_2_Downs_65_d1;
output  [6:0] ShuffleConvs_2_Downs_12_address0;
output   ShuffleConvs_2_Downs_12_ce0;
output   ShuffleConvs_2_Downs_12_we0;
output  [7:0] ShuffleConvs_2_Downs_12_d0;
input  [7:0] ShuffleConvs_2_Downs_12_q0;
output  [6:0] ShuffleConvs_2_Downs_12_address1;
output   ShuffleConvs_2_Downs_12_ce1;
output   ShuffleConvs_2_Downs_12_we1;
output  [7:0] ShuffleConvs_2_Downs_12_d1;
output  [6:0] ShuffleConvs_2_Downs_64_address0;
output   ShuffleConvs_2_Downs_64_ce0;
output   ShuffleConvs_2_Downs_64_we0;
output  [7:0] ShuffleConvs_2_Downs_64_d0;
input  [7:0] ShuffleConvs_2_Downs_64_q0;
output  [6:0] ShuffleConvs_2_Downs_64_address1;
output   ShuffleConvs_2_Downs_64_ce1;
output   ShuffleConvs_2_Downs_64_we1;
output  [7:0] ShuffleConvs_2_Downs_64_d1;
output  [6:0] ShuffleConvs_2_Downs_11_address0;
output   ShuffleConvs_2_Downs_11_ce0;
output   ShuffleConvs_2_Downs_11_we0;
output  [7:0] ShuffleConvs_2_Downs_11_d0;
input  [7:0] ShuffleConvs_2_Downs_11_q0;
output  [6:0] ShuffleConvs_2_Downs_11_address1;
output   ShuffleConvs_2_Downs_11_ce1;
output   ShuffleConvs_2_Downs_11_we1;
output  [7:0] ShuffleConvs_2_Downs_11_d1;
output  [6:0] ShuffleConvs_2_Downs_63_address0;
output   ShuffleConvs_2_Downs_63_ce0;
output   ShuffleConvs_2_Downs_63_we0;
output  [7:0] ShuffleConvs_2_Downs_63_d0;
input  [7:0] ShuffleConvs_2_Downs_63_q0;
output  [6:0] ShuffleConvs_2_Downs_63_address1;
output   ShuffleConvs_2_Downs_63_ce1;
output   ShuffleConvs_2_Downs_63_we1;
output  [7:0] ShuffleConvs_2_Downs_63_d1;
output  [6:0] ShuffleConvs_2_Downs_10_address0;
output   ShuffleConvs_2_Downs_10_ce0;
output   ShuffleConvs_2_Downs_10_we0;
output  [7:0] ShuffleConvs_2_Downs_10_d0;
input  [7:0] ShuffleConvs_2_Downs_10_q0;
output  [6:0] ShuffleConvs_2_Downs_10_address1;
output   ShuffleConvs_2_Downs_10_ce1;
output   ShuffleConvs_2_Downs_10_we1;
output  [7:0] ShuffleConvs_2_Downs_10_d1;
output  [6:0] ShuffleConvs_2_Downs_62_address0;
output   ShuffleConvs_2_Downs_62_ce0;
output   ShuffleConvs_2_Downs_62_we0;
output  [7:0] ShuffleConvs_2_Downs_62_d0;
input  [7:0] ShuffleConvs_2_Downs_62_q0;
output  [6:0] ShuffleConvs_2_Downs_62_address1;
output   ShuffleConvs_2_Downs_62_ce1;
output   ShuffleConvs_2_Downs_62_we1;
output  [7:0] ShuffleConvs_2_Downs_62_d1;
output  [6:0] ShuffleConvs_2_Downs_9_address0;
output   ShuffleConvs_2_Downs_9_ce0;
output   ShuffleConvs_2_Downs_9_we0;
output  [7:0] ShuffleConvs_2_Downs_9_d0;
input  [7:0] ShuffleConvs_2_Downs_9_q0;
output  [6:0] ShuffleConvs_2_Downs_9_address1;
output   ShuffleConvs_2_Downs_9_ce1;
output   ShuffleConvs_2_Downs_9_we1;
output  [7:0] ShuffleConvs_2_Downs_9_d1;
output  [6:0] ShuffleConvs_2_Downs_60_address0;
output   ShuffleConvs_2_Downs_60_ce0;
output   ShuffleConvs_2_Downs_60_we0;
output  [7:0] ShuffleConvs_2_Downs_60_d0;
input  [7:0] ShuffleConvs_2_Downs_60_q0;
output  [6:0] ShuffleConvs_2_Downs_60_address1;
output   ShuffleConvs_2_Downs_60_ce1;
output   ShuffleConvs_2_Downs_60_we1;
output  [7:0] ShuffleConvs_2_Downs_60_d1;
output  [6:0] ShuffleConvs_2_Downs_8_address0;
output   ShuffleConvs_2_Downs_8_ce0;
output   ShuffleConvs_2_Downs_8_we0;
output  [7:0] ShuffleConvs_2_Downs_8_d0;
input  [7:0] ShuffleConvs_2_Downs_8_q0;
output  [6:0] ShuffleConvs_2_Downs_8_address1;
output   ShuffleConvs_2_Downs_8_ce1;
output   ShuffleConvs_2_Downs_8_we1;
output  [7:0] ShuffleConvs_2_Downs_8_d1;
output  [6:0] ShuffleConvs_2_Downs_59_address0;
output   ShuffleConvs_2_Downs_59_ce0;
output   ShuffleConvs_2_Downs_59_we0;
output  [7:0] ShuffleConvs_2_Downs_59_d0;
input  [7:0] ShuffleConvs_2_Downs_59_q0;
output  [6:0] ShuffleConvs_2_Downs_59_address1;
output   ShuffleConvs_2_Downs_59_ce1;
output   ShuffleConvs_2_Downs_59_we1;
output  [7:0] ShuffleConvs_2_Downs_59_d1;
output  [6:0] ShuffleConvs_2_Downs_7_address0;
output   ShuffleConvs_2_Downs_7_ce0;
output   ShuffleConvs_2_Downs_7_we0;
output  [7:0] ShuffleConvs_2_Downs_7_d0;
input  [7:0] ShuffleConvs_2_Downs_7_q0;
output  [6:0] ShuffleConvs_2_Downs_7_address1;
output   ShuffleConvs_2_Downs_7_ce1;
output   ShuffleConvs_2_Downs_7_we1;
output  [7:0] ShuffleConvs_2_Downs_7_d1;
output  [6:0] ShuffleConvs_2_Downs_58_address0;
output   ShuffleConvs_2_Downs_58_ce0;
output   ShuffleConvs_2_Downs_58_we0;
output  [7:0] ShuffleConvs_2_Downs_58_d0;
input  [7:0] ShuffleConvs_2_Downs_58_q0;
output  [6:0] ShuffleConvs_2_Downs_58_address1;
output   ShuffleConvs_2_Downs_58_ce1;
output   ShuffleConvs_2_Downs_58_we1;
output  [7:0] ShuffleConvs_2_Downs_58_d1;
output  [6:0] ShuffleConvs_2_Downs_5_address0;
output   ShuffleConvs_2_Downs_5_ce0;
output   ShuffleConvs_2_Downs_5_we0;
output  [7:0] ShuffleConvs_2_Downs_5_d0;
input  [7:0] ShuffleConvs_2_Downs_5_q0;
output  [6:0] ShuffleConvs_2_Downs_5_address1;
output   ShuffleConvs_2_Downs_5_ce1;
output   ShuffleConvs_2_Downs_5_we1;
output  [7:0] ShuffleConvs_2_Downs_5_d1;
output  [6:0] ShuffleConvs_2_Downs_57_address0;
output   ShuffleConvs_2_Downs_57_ce0;
output   ShuffleConvs_2_Downs_57_we0;
output  [7:0] ShuffleConvs_2_Downs_57_d0;
input  [7:0] ShuffleConvs_2_Downs_57_q0;
output  [6:0] ShuffleConvs_2_Downs_57_address1;
output   ShuffleConvs_2_Downs_57_ce1;
output   ShuffleConvs_2_Downs_57_we1;
output  [7:0] ShuffleConvs_2_Downs_57_d1;
output  [6:0] ShuffleConvs_2_Downs_4_address0;
output   ShuffleConvs_2_Downs_4_ce0;
output   ShuffleConvs_2_Downs_4_we0;
output  [7:0] ShuffleConvs_2_Downs_4_d0;
input  [7:0] ShuffleConvs_2_Downs_4_q0;
output  [6:0] ShuffleConvs_2_Downs_4_address1;
output   ShuffleConvs_2_Downs_4_ce1;
output   ShuffleConvs_2_Downs_4_we1;
output  [7:0] ShuffleConvs_2_Downs_4_d1;
output  [6:0] ShuffleConvs_2_Downs_56_address0;
output   ShuffleConvs_2_Downs_56_ce0;
output   ShuffleConvs_2_Downs_56_we0;
output  [7:0] ShuffleConvs_2_Downs_56_d0;
input  [7:0] ShuffleConvs_2_Downs_56_q0;
output  [6:0] ShuffleConvs_2_Downs_56_address1;
output   ShuffleConvs_2_Downs_56_ce1;
output   ShuffleConvs_2_Downs_56_we1;
output  [7:0] ShuffleConvs_2_Downs_56_d1;
output  [6:0] ShuffleConvs_2_Downs_3_address0;
output   ShuffleConvs_2_Downs_3_ce0;
output   ShuffleConvs_2_Downs_3_we0;
output  [7:0] ShuffleConvs_2_Downs_3_d0;
input  [7:0] ShuffleConvs_2_Downs_3_q0;
output  [6:0] ShuffleConvs_2_Downs_3_address1;
output   ShuffleConvs_2_Downs_3_ce1;
output   ShuffleConvs_2_Downs_3_we1;
output  [7:0] ShuffleConvs_2_Downs_3_d1;
output  [6:0] ShuffleConvs_2_Downs_55_address0;
output   ShuffleConvs_2_Downs_55_ce0;
output   ShuffleConvs_2_Downs_55_we0;
output  [7:0] ShuffleConvs_2_Downs_55_d0;
input  [7:0] ShuffleConvs_2_Downs_55_q0;
output  [6:0] ShuffleConvs_2_Downs_55_address1;
output   ShuffleConvs_2_Downs_55_ce1;
output   ShuffleConvs_2_Downs_55_we1;
output  [7:0] ShuffleConvs_2_Downs_55_d1;
output  [6:0] ShuffleConvs_2_Downs_2_address0;
output   ShuffleConvs_2_Downs_2_ce0;
output   ShuffleConvs_2_Downs_2_we0;
output  [7:0] ShuffleConvs_2_Downs_2_d0;
input  [7:0] ShuffleConvs_2_Downs_2_q0;
output  [6:0] ShuffleConvs_2_Downs_2_address1;
output   ShuffleConvs_2_Downs_2_ce1;
output   ShuffleConvs_2_Downs_2_we1;
output  [7:0] ShuffleConvs_2_Downs_2_d1;
output  [6:0] ShuffleConvs_2_Downs_54_address0;
output   ShuffleConvs_2_Downs_54_ce0;
output   ShuffleConvs_2_Downs_54_we0;
output  [7:0] ShuffleConvs_2_Downs_54_d0;
input  [7:0] ShuffleConvs_2_Downs_54_q0;
output  [6:0] ShuffleConvs_2_Downs_54_address1;
output   ShuffleConvs_2_Downs_54_ce1;
output   ShuffleConvs_2_Downs_54_we1;
output  [7:0] ShuffleConvs_2_Downs_54_d1;
output  [6:0] ShuffleConvs_2_Downs_1_address0;
output   ShuffleConvs_2_Downs_1_ce0;
output   ShuffleConvs_2_Downs_1_we0;
output  [7:0] ShuffleConvs_2_Downs_1_d0;
input  [7:0] ShuffleConvs_2_Downs_1_q0;
output  [6:0] ShuffleConvs_2_Downs_1_address1;
output   ShuffleConvs_2_Downs_1_ce1;
output   ShuffleConvs_2_Downs_1_we1;
output  [7:0] ShuffleConvs_2_Downs_1_d1;
output  [6:0] ShuffleConvs_2_Downs_53_address0;
output   ShuffleConvs_2_Downs_53_ce0;
output   ShuffleConvs_2_Downs_53_we0;
output  [7:0] ShuffleConvs_2_Downs_53_d0;
input  [7:0] ShuffleConvs_2_Downs_53_q0;
output  [6:0] ShuffleConvs_2_Downs_53_address1;
output   ShuffleConvs_2_Downs_53_ce1;
output   ShuffleConvs_2_Downs_53_we1;
output  [7:0] ShuffleConvs_2_Downs_53_d1;
output  [6:0] ShuffleConvs_2_Downs_address0;
output   ShuffleConvs_2_Downs_ce0;
output   ShuffleConvs_2_Downs_we0;
output  [7:0] ShuffleConvs_2_Downs_d0;
input  [7:0] ShuffleConvs_2_Downs_q0;
output  [6:0] ShuffleConvs_2_Downs_address1;
output   ShuffleConvs_2_Downs_ce1;
output   ShuffleConvs_2_Downs_we1;
output  [7:0] ShuffleConvs_2_Downs_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_V_address0;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg weight_8_V_ce0;
reg weight_9_V_ce0;
reg weight_10_V_ce0;
reg weight_11_V_ce0;
reg weight_12_V_ce0;
reg weight_13_V_ce0;
reg weight_14_V_ce0;
reg weight_15_V_ce0;
reg weight_16_V_ce0;
reg weight_17_V_ce0;
reg weight_18_V_ce0;
reg weight_19_V_ce0;
reg weight_20_V_ce0;
reg weight_21_V_ce0;
reg weight_22_V_ce0;
reg weight_23_V_ce0;
reg weight_24_V_ce0;
reg weight_25_V_ce0;
reg weight_26_V_ce0;
reg weight_27_V_ce0;
reg weight_28_V_ce0;
reg weight_29_V_ce0;
reg weight_30_V_ce0;
reg weight_31_V_ce0;
reg weight_32_V_ce0;
reg weight_33_V_ce0;
reg weight_34_V_ce0;
reg weight_35_V_ce0;
reg weight_36_V_ce0;
reg weight_37_V_ce0;
reg weight_38_V_ce0;
reg weight_39_V_ce0;
reg weight_40_V_ce0;
reg weight_41_V_ce0;
reg weight_42_V_ce0;
reg weight_43_V_ce0;
reg weight_44_V_ce0;
reg weight_45_V_ce0;
reg weight_46_V_ce0;
reg weight_47_V_ce0;
reg weight_48_V_ce0;
reg weight_49_V_ce0;
reg weight_50_V_ce0;
reg weight_51_V_ce0;
reg weight_52_V_ce0;
reg weight_53_V_ce0;
reg weight_54_V_ce0;
reg weight_55_V_ce0;
reg weight_56_V_ce0;
reg weight_57_V_ce0;
reg weight_58_V_ce0;
reg weight_59_V_ce0;
reg weight_60_V_ce0;
reg weight_61_V_ce0;
reg weight_62_V_ce0;
reg weight_63_V_ce0;
reg weight_64_V_ce0;
reg weight_65_V_ce0;
reg weight_66_V_ce0;
reg weight_67_V_ce0;
reg weight_68_V_ce0;
reg weight_69_V_ce0;
reg weight_70_V_ce0;
reg weight_71_V_ce0;
reg weight_72_V_ce0;
reg weight_73_V_ce0;
reg weight_74_V_ce0;
reg weight_75_V_ce0;
reg weight_76_V_ce0;
reg weight_77_V_ce0;
reg weight_78_V_ce0;
reg weight_79_V_ce0;
reg weight_80_V_ce0;
reg weight_81_V_ce0;
reg weight_82_V_ce0;
reg weight_83_V_ce0;
reg weight_84_V_ce0;
reg weight_85_V_ce0;
reg weight_86_V_ce0;
reg weight_87_V_ce0;
reg weight_88_V_ce0;
reg weight_89_V_ce0;
reg weight_90_V_ce0;
reg weight_91_V_ce0;
reg weight_92_V_ce0;
reg weight_93_V_ce0;
reg weight_94_V_ce0;
reg weight_95_V_ce0;
reg bias_V_ce0;
reg[6:0] ShuffleConvs_2_Downs_95_address0;
reg ShuffleConvs_2_Downs_95_ce0;
reg ShuffleConvs_2_Downs_95_we0;
reg[7:0] ShuffleConvs_2_Downs_95_d0;
reg ShuffleConvs_2_Downs_95_ce1;
reg ShuffleConvs_2_Downs_95_we1;
reg[6:0] ShuffleConvs_2_Downs_52_address0;
reg ShuffleConvs_2_Downs_52_ce0;
reg ShuffleConvs_2_Downs_52_we0;
reg[7:0] ShuffleConvs_2_Downs_52_d0;
reg ShuffleConvs_2_Downs_52_ce1;
reg ShuffleConvs_2_Downs_52_we1;
reg[6:0] ShuffleConvs_2_Downs_94_address0;
reg ShuffleConvs_2_Downs_94_ce0;
reg ShuffleConvs_2_Downs_94_we0;
reg[7:0] ShuffleConvs_2_Downs_94_d0;
reg ShuffleConvs_2_Downs_94_ce1;
reg ShuffleConvs_2_Downs_94_we1;
reg[6:0] ShuffleConvs_2_Downs_51_address0;
reg ShuffleConvs_2_Downs_51_ce0;
reg ShuffleConvs_2_Downs_51_we0;
reg[7:0] ShuffleConvs_2_Downs_51_d0;
reg ShuffleConvs_2_Downs_51_ce1;
reg ShuffleConvs_2_Downs_51_we1;
reg[6:0] ShuffleConvs_2_Downs_83_address0;
reg ShuffleConvs_2_Downs_83_ce0;
reg ShuffleConvs_2_Downs_83_we0;
reg[7:0] ShuffleConvs_2_Downs_83_d0;
reg ShuffleConvs_2_Downs_83_ce1;
reg ShuffleConvs_2_Downs_83_we1;
reg[6:0] ShuffleConvs_2_Downs_49_address0;
reg ShuffleConvs_2_Downs_49_ce0;
reg ShuffleConvs_2_Downs_49_we0;
reg[7:0] ShuffleConvs_2_Downs_49_d0;
reg ShuffleConvs_2_Downs_49_ce1;
reg ShuffleConvs_2_Downs_49_we1;
reg[6:0] ShuffleConvs_2_Downs_72_address0;
reg ShuffleConvs_2_Downs_72_ce0;
reg ShuffleConvs_2_Downs_72_we0;
reg[7:0] ShuffleConvs_2_Downs_72_d0;
reg ShuffleConvs_2_Downs_72_ce1;
reg ShuffleConvs_2_Downs_72_we1;
reg[6:0] ShuffleConvs_2_Downs_48_address0;
reg ShuffleConvs_2_Downs_48_ce0;
reg ShuffleConvs_2_Downs_48_we0;
reg[7:0] ShuffleConvs_2_Downs_48_d0;
reg ShuffleConvs_2_Downs_48_ce1;
reg ShuffleConvs_2_Downs_48_we1;
reg[6:0] ShuffleConvs_2_Downs_61_address0;
reg ShuffleConvs_2_Downs_61_ce0;
reg ShuffleConvs_2_Downs_61_we0;
reg[7:0] ShuffleConvs_2_Downs_61_d0;
reg ShuffleConvs_2_Downs_61_ce1;
reg ShuffleConvs_2_Downs_61_we1;
reg[6:0] ShuffleConvs_2_Downs_47_address0;
reg ShuffleConvs_2_Downs_47_ce0;
reg ShuffleConvs_2_Downs_47_we0;
reg[7:0] ShuffleConvs_2_Downs_47_d0;
reg ShuffleConvs_2_Downs_47_ce1;
reg ShuffleConvs_2_Downs_47_we1;
reg[6:0] ShuffleConvs_2_Downs_50_address0;
reg ShuffleConvs_2_Downs_50_ce0;
reg ShuffleConvs_2_Downs_50_we0;
reg[7:0] ShuffleConvs_2_Downs_50_d0;
reg ShuffleConvs_2_Downs_50_ce1;
reg ShuffleConvs_2_Downs_50_we1;
reg[6:0] ShuffleConvs_2_Downs_46_address0;
reg ShuffleConvs_2_Downs_46_ce0;
reg ShuffleConvs_2_Downs_46_we0;
reg[7:0] ShuffleConvs_2_Downs_46_d0;
reg ShuffleConvs_2_Downs_46_ce1;
reg ShuffleConvs_2_Downs_46_we1;
reg[6:0] ShuffleConvs_2_Downs_39_address0;
reg ShuffleConvs_2_Downs_39_ce0;
reg ShuffleConvs_2_Downs_39_we0;
reg[7:0] ShuffleConvs_2_Downs_39_d0;
reg ShuffleConvs_2_Downs_39_ce1;
reg ShuffleConvs_2_Downs_39_we1;
reg[6:0] ShuffleConvs_2_Downs_45_address0;
reg ShuffleConvs_2_Downs_45_ce0;
reg ShuffleConvs_2_Downs_45_we0;
reg[7:0] ShuffleConvs_2_Downs_45_d0;
reg ShuffleConvs_2_Downs_45_ce1;
reg ShuffleConvs_2_Downs_45_we1;
reg[6:0] ShuffleConvs_2_Downs_28_address0;
reg ShuffleConvs_2_Downs_28_ce0;
reg ShuffleConvs_2_Downs_28_we0;
reg[7:0] ShuffleConvs_2_Downs_28_d0;
reg ShuffleConvs_2_Downs_28_ce1;
reg ShuffleConvs_2_Downs_28_we1;
reg[6:0] ShuffleConvs_2_Downs_44_address0;
reg ShuffleConvs_2_Downs_44_ce0;
reg ShuffleConvs_2_Downs_44_we0;
reg[7:0] ShuffleConvs_2_Downs_44_d0;
reg ShuffleConvs_2_Downs_44_ce1;
reg ShuffleConvs_2_Downs_44_we1;
reg[6:0] ShuffleConvs_2_Downs_17_address0;
reg ShuffleConvs_2_Downs_17_ce0;
reg ShuffleConvs_2_Downs_17_we0;
reg[7:0] ShuffleConvs_2_Downs_17_d0;
reg ShuffleConvs_2_Downs_17_ce1;
reg ShuffleConvs_2_Downs_17_we1;
reg[6:0] ShuffleConvs_2_Downs_43_address0;
reg ShuffleConvs_2_Downs_43_ce0;
reg ShuffleConvs_2_Downs_43_we0;
reg[7:0] ShuffleConvs_2_Downs_43_d0;
reg ShuffleConvs_2_Downs_43_ce1;
reg ShuffleConvs_2_Downs_43_we1;
reg[6:0] ShuffleConvs_2_Downs_6_address0;
reg ShuffleConvs_2_Downs_6_ce0;
reg ShuffleConvs_2_Downs_6_we0;
reg[7:0] ShuffleConvs_2_Downs_6_d0;
reg ShuffleConvs_2_Downs_6_ce1;
reg ShuffleConvs_2_Downs_6_we1;
reg[6:0] ShuffleConvs_2_Downs_42_address0;
reg ShuffleConvs_2_Downs_42_ce0;
reg ShuffleConvs_2_Downs_42_we0;
reg[7:0] ShuffleConvs_2_Downs_42_d0;
reg ShuffleConvs_2_Downs_42_ce1;
reg ShuffleConvs_2_Downs_42_we1;
reg[6:0] ShuffleConvs_2_Downs_93_address0;
reg ShuffleConvs_2_Downs_93_ce0;
reg ShuffleConvs_2_Downs_93_we0;
reg[7:0] ShuffleConvs_2_Downs_93_d0;
reg ShuffleConvs_2_Downs_93_ce1;
reg ShuffleConvs_2_Downs_93_we1;
reg[6:0] ShuffleConvs_2_Downs_41_address0;
reg ShuffleConvs_2_Downs_41_ce0;
reg ShuffleConvs_2_Downs_41_we0;
reg[7:0] ShuffleConvs_2_Downs_41_d0;
reg ShuffleConvs_2_Downs_41_ce1;
reg ShuffleConvs_2_Downs_41_we1;
reg[6:0] ShuffleConvs_2_Downs_92_address0;
reg ShuffleConvs_2_Downs_92_ce0;
reg ShuffleConvs_2_Downs_92_we0;
reg[7:0] ShuffleConvs_2_Downs_92_d0;
reg ShuffleConvs_2_Downs_92_ce1;
reg ShuffleConvs_2_Downs_92_we1;
reg[6:0] ShuffleConvs_2_Downs_40_address0;
reg ShuffleConvs_2_Downs_40_ce0;
reg ShuffleConvs_2_Downs_40_we0;
reg[7:0] ShuffleConvs_2_Downs_40_d0;
reg ShuffleConvs_2_Downs_40_ce1;
reg ShuffleConvs_2_Downs_40_we1;
reg[6:0] ShuffleConvs_2_Downs_91_address0;
reg ShuffleConvs_2_Downs_91_ce0;
reg ShuffleConvs_2_Downs_91_we0;
reg[7:0] ShuffleConvs_2_Downs_91_d0;
reg ShuffleConvs_2_Downs_91_ce1;
reg ShuffleConvs_2_Downs_91_we1;
reg[6:0] ShuffleConvs_2_Downs_38_address0;
reg ShuffleConvs_2_Downs_38_ce0;
reg ShuffleConvs_2_Downs_38_we0;
reg[7:0] ShuffleConvs_2_Downs_38_d0;
reg ShuffleConvs_2_Downs_38_ce1;
reg ShuffleConvs_2_Downs_38_we1;
reg[6:0] ShuffleConvs_2_Downs_90_address0;
reg ShuffleConvs_2_Downs_90_ce0;
reg ShuffleConvs_2_Downs_90_we0;
reg[7:0] ShuffleConvs_2_Downs_90_d0;
reg ShuffleConvs_2_Downs_90_ce1;
reg ShuffleConvs_2_Downs_90_we1;
reg[6:0] ShuffleConvs_2_Downs_37_address0;
reg ShuffleConvs_2_Downs_37_ce0;
reg ShuffleConvs_2_Downs_37_we0;
reg[7:0] ShuffleConvs_2_Downs_37_d0;
reg ShuffleConvs_2_Downs_37_ce1;
reg ShuffleConvs_2_Downs_37_we1;
reg[6:0] ShuffleConvs_2_Downs_89_address0;
reg ShuffleConvs_2_Downs_89_ce0;
reg ShuffleConvs_2_Downs_89_we0;
reg[7:0] ShuffleConvs_2_Downs_89_d0;
reg ShuffleConvs_2_Downs_89_ce1;
reg ShuffleConvs_2_Downs_89_we1;
reg[6:0] ShuffleConvs_2_Downs_36_address0;
reg ShuffleConvs_2_Downs_36_ce0;
reg ShuffleConvs_2_Downs_36_we0;
reg[7:0] ShuffleConvs_2_Downs_36_d0;
reg ShuffleConvs_2_Downs_36_ce1;
reg ShuffleConvs_2_Downs_36_we1;
reg[6:0] ShuffleConvs_2_Downs_88_address0;
reg ShuffleConvs_2_Downs_88_ce0;
reg ShuffleConvs_2_Downs_88_we0;
reg[7:0] ShuffleConvs_2_Downs_88_d0;
reg ShuffleConvs_2_Downs_88_ce1;
reg ShuffleConvs_2_Downs_88_we1;
reg[6:0] ShuffleConvs_2_Downs_35_address0;
reg ShuffleConvs_2_Downs_35_ce0;
reg ShuffleConvs_2_Downs_35_we0;
reg[7:0] ShuffleConvs_2_Downs_35_d0;
reg ShuffleConvs_2_Downs_35_ce1;
reg ShuffleConvs_2_Downs_35_we1;
reg[6:0] ShuffleConvs_2_Downs_87_address0;
reg ShuffleConvs_2_Downs_87_ce0;
reg ShuffleConvs_2_Downs_87_we0;
reg[7:0] ShuffleConvs_2_Downs_87_d0;
reg ShuffleConvs_2_Downs_87_ce1;
reg ShuffleConvs_2_Downs_87_we1;
reg[6:0] ShuffleConvs_2_Downs_34_address0;
reg ShuffleConvs_2_Downs_34_ce0;
reg ShuffleConvs_2_Downs_34_we0;
reg[7:0] ShuffleConvs_2_Downs_34_d0;
reg ShuffleConvs_2_Downs_34_ce1;
reg ShuffleConvs_2_Downs_34_we1;
reg[6:0] ShuffleConvs_2_Downs_86_address0;
reg ShuffleConvs_2_Downs_86_ce0;
reg ShuffleConvs_2_Downs_86_we0;
reg[7:0] ShuffleConvs_2_Downs_86_d0;
reg ShuffleConvs_2_Downs_86_ce1;
reg ShuffleConvs_2_Downs_86_we1;
reg[6:0] ShuffleConvs_2_Downs_33_address0;
reg ShuffleConvs_2_Downs_33_ce0;
reg ShuffleConvs_2_Downs_33_we0;
reg[7:0] ShuffleConvs_2_Downs_33_d0;
reg ShuffleConvs_2_Downs_33_ce1;
reg ShuffleConvs_2_Downs_33_we1;
reg[6:0] ShuffleConvs_2_Downs_85_address0;
reg ShuffleConvs_2_Downs_85_ce0;
reg ShuffleConvs_2_Downs_85_we0;
reg[7:0] ShuffleConvs_2_Downs_85_d0;
reg ShuffleConvs_2_Downs_85_ce1;
reg ShuffleConvs_2_Downs_85_we1;
reg[6:0] ShuffleConvs_2_Downs_32_address0;
reg ShuffleConvs_2_Downs_32_ce0;
reg ShuffleConvs_2_Downs_32_we0;
reg[7:0] ShuffleConvs_2_Downs_32_d0;
reg ShuffleConvs_2_Downs_32_ce1;
reg ShuffleConvs_2_Downs_32_we1;
reg[6:0] ShuffleConvs_2_Downs_84_address0;
reg ShuffleConvs_2_Downs_84_ce0;
reg ShuffleConvs_2_Downs_84_we0;
reg[7:0] ShuffleConvs_2_Downs_84_d0;
reg ShuffleConvs_2_Downs_84_ce1;
reg ShuffleConvs_2_Downs_84_we1;
reg[6:0] ShuffleConvs_2_Downs_31_address0;
reg ShuffleConvs_2_Downs_31_ce0;
reg ShuffleConvs_2_Downs_31_we0;
reg[7:0] ShuffleConvs_2_Downs_31_d0;
reg ShuffleConvs_2_Downs_31_ce1;
reg ShuffleConvs_2_Downs_31_we1;
reg[6:0] ShuffleConvs_2_Downs_82_address0;
reg ShuffleConvs_2_Downs_82_ce0;
reg ShuffleConvs_2_Downs_82_we0;
reg[7:0] ShuffleConvs_2_Downs_82_d0;
reg ShuffleConvs_2_Downs_82_ce1;
reg ShuffleConvs_2_Downs_82_we1;
reg[6:0] ShuffleConvs_2_Downs_30_address0;
reg ShuffleConvs_2_Downs_30_ce0;
reg ShuffleConvs_2_Downs_30_we0;
reg[7:0] ShuffleConvs_2_Downs_30_d0;
reg ShuffleConvs_2_Downs_30_ce1;
reg ShuffleConvs_2_Downs_30_we1;
reg[6:0] ShuffleConvs_2_Downs_81_address0;
reg ShuffleConvs_2_Downs_81_ce0;
reg ShuffleConvs_2_Downs_81_we0;
reg[7:0] ShuffleConvs_2_Downs_81_d0;
reg ShuffleConvs_2_Downs_81_ce1;
reg ShuffleConvs_2_Downs_81_we1;
reg[6:0] ShuffleConvs_2_Downs_29_address0;
reg ShuffleConvs_2_Downs_29_ce0;
reg ShuffleConvs_2_Downs_29_we0;
reg[7:0] ShuffleConvs_2_Downs_29_d0;
reg ShuffleConvs_2_Downs_29_ce1;
reg ShuffleConvs_2_Downs_29_we1;
reg[6:0] ShuffleConvs_2_Downs_80_address0;
reg ShuffleConvs_2_Downs_80_ce0;
reg ShuffleConvs_2_Downs_80_we0;
reg[7:0] ShuffleConvs_2_Downs_80_d0;
reg ShuffleConvs_2_Downs_80_ce1;
reg ShuffleConvs_2_Downs_80_we1;
reg[6:0] ShuffleConvs_2_Downs_27_address0;
reg ShuffleConvs_2_Downs_27_ce0;
reg ShuffleConvs_2_Downs_27_we0;
reg[7:0] ShuffleConvs_2_Downs_27_d0;
reg ShuffleConvs_2_Downs_27_ce1;
reg ShuffleConvs_2_Downs_27_we1;
reg[6:0] ShuffleConvs_2_Downs_79_address0;
reg ShuffleConvs_2_Downs_79_ce0;
reg ShuffleConvs_2_Downs_79_we0;
reg[7:0] ShuffleConvs_2_Downs_79_d0;
reg ShuffleConvs_2_Downs_79_ce1;
reg ShuffleConvs_2_Downs_79_we1;
reg[6:0] ShuffleConvs_2_Downs_26_address0;
reg ShuffleConvs_2_Downs_26_ce0;
reg ShuffleConvs_2_Downs_26_we0;
reg[7:0] ShuffleConvs_2_Downs_26_d0;
reg ShuffleConvs_2_Downs_26_ce1;
reg ShuffleConvs_2_Downs_26_we1;
reg[6:0] ShuffleConvs_2_Downs_78_address0;
reg ShuffleConvs_2_Downs_78_ce0;
reg ShuffleConvs_2_Downs_78_we0;
reg[7:0] ShuffleConvs_2_Downs_78_d0;
reg ShuffleConvs_2_Downs_78_ce1;
reg ShuffleConvs_2_Downs_78_we1;
reg[6:0] ShuffleConvs_2_Downs_25_address0;
reg ShuffleConvs_2_Downs_25_ce0;
reg ShuffleConvs_2_Downs_25_we0;
reg[7:0] ShuffleConvs_2_Downs_25_d0;
reg ShuffleConvs_2_Downs_25_ce1;
reg ShuffleConvs_2_Downs_25_we1;
reg[6:0] ShuffleConvs_2_Downs_77_address0;
reg ShuffleConvs_2_Downs_77_ce0;
reg ShuffleConvs_2_Downs_77_we0;
reg[7:0] ShuffleConvs_2_Downs_77_d0;
reg ShuffleConvs_2_Downs_77_ce1;
reg ShuffleConvs_2_Downs_77_we1;
reg[6:0] ShuffleConvs_2_Downs_24_address0;
reg ShuffleConvs_2_Downs_24_ce0;
reg ShuffleConvs_2_Downs_24_we0;
reg[7:0] ShuffleConvs_2_Downs_24_d0;
reg ShuffleConvs_2_Downs_24_ce1;
reg ShuffleConvs_2_Downs_24_we1;
reg[6:0] ShuffleConvs_2_Downs_76_address0;
reg ShuffleConvs_2_Downs_76_ce0;
reg ShuffleConvs_2_Downs_76_we0;
reg[7:0] ShuffleConvs_2_Downs_76_d0;
reg ShuffleConvs_2_Downs_76_ce1;
reg ShuffleConvs_2_Downs_76_we1;
reg[6:0] ShuffleConvs_2_Downs_23_address0;
reg ShuffleConvs_2_Downs_23_ce0;
reg ShuffleConvs_2_Downs_23_we0;
reg[7:0] ShuffleConvs_2_Downs_23_d0;
reg ShuffleConvs_2_Downs_23_ce1;
reg ShuffleConvs_2_Downs_23_we1;
reg[6:0] ShuffleConvs_2_Downs_75_address0;
reg ShuffleConvs_2_Downs_75_ce0;
reg ShuffleConvs_2_Downs_75_we0;
reg[7:0] ShuffleConvs_2_Downs_75_d0;
reg ShuffleConvs_2_Downs_75_ce1;
reg ShuffleConvs_2_Downs_75_we1;
reg[6:0] ShuffleConvs_2_Downs_22_address0;
reg ShuffleConvs_2_Downs_22_ce0;
reg ShuffleConvs_2_Downs_22_we0;
reg[7:0] ShuffleConvs_2_Downs_22_d0;
reg ShuffleConvs_2_Downs_22_ce1;
reg ShuffleConvs_2_Downs_22_we1;
reg[6:0] ShuffleConvs_2_Downs_74_address0;
reg ShuffleConvs_2_Downs_74_ce0;
reg ShuffleConvs_2_Downs_74_we0;
reg[7:0] ShuffleConvs_2_Downs_74_d0;
reg ShuffleConvs_2_Downs_74_ce1;
reg ShuffleConvs_2_Downs_74_we1;
reg[6:0] ShuffleConvs_2_Downs_21_address0;
reg ShuffleConvs_2_Downs_21_ce0;
reg ShuffleConvs_2_Downs_21_we0;
reg[7:0] ShuffleConvs_2_Downs_21_d0;
reg ShuffleConvs_2_Downs_21_ce1;
reg ShuffleConvs_2_Downs_21_we1;
reg[6:0] ShuffleConvs_2_Downs_73_address0;
reg ShuffleConvs_2_Downs_73_ce0;
reg ShuffleConvs_2_Downs_73_we0;
reg[7:0] ShuffleConvs_2_Downs_73_d0;
reg ShuffleConvs_2_Downs_73_ce1;
reg ShuffleConvs_2_Downs_73_we1;
reg[6:0] ShuffleConvs_2_Downs_20_address0;
reg ShuffleConvs_2_Downs_20_ce0;
reg ShuffleConvs_2_Downs_20_we0;
reg[7:0] ShuffleConvs_2_Downs_20_d0;
reg ShuffleConvs_2_Downs_20_ce1;
reg ShuffleConvs_2_Downs_20_we1;
reg[6:0] ShuffleConvs_2_Downs_71_address0;
reg ShuffleConvs_2_Downs_71_ce0;
reg ShuffleConvs_2_Downs_71_we0;
reg[7:0] ShuffleConvs_2_Downs_71_d0;
reg ShuffleConvs_2_Downs_71_ce1;
reg ShuffleConvs_2_Downs_71_we1;
reg[6:0] ShuffleConvs_2_Downs_19_address0;
reg ShuffleConvs_2_Downs_19_ce0;
reg ShuffleConvs_2_Downs_19_we0;
reg[7:0] ShuffleConvs_2_Downs_19_d0;
reg ShuffleConvs_2_Downs_19_ce1;
reg ShuffleConvs_2_Downs_19_we1;
reg[6:0] ShuffleConvs_2_Downs_70_address0;
reg ShuffleConvs_2_Downs_70_ce0;
reg ShuffleConvs_2_Downs_70_we0;
reg[7:0] ShuffleConvs_2_Downs_70_d0;
reg ShuffleConvs_2_Downs_70_ce1;
reg ShuffleConvs_2_Downs_70_we1;
reg[6:0] ShuffleConvs_2_Downs_18_address0;
reg ShuffleConvs_2_Downs_18_ce0;
reg ShuffleConvs_2_Downs_18_we0;
reg[7:0] ShuffleConvs_2_Downs_18_d0;
reg ShuffleConvs_2_Downs_18_ce1;
reg ShuffleConvs_2_Downs_18_we1;
reg[6:0] ShuffleConvs_2_Downs_69_address0;
reg ShuffleConvs_2_Downs_69_ce0;
reg ShuffleConvs_2_Downs_69_we0;
reg[7:0] ShuffleConvs_2_Downs_69_d0;
reg ShuffleConvs_2_Downs_69_ce1;
reg ShuffleConvs_2_Downs_69_we1;
reg[6:0] ShuffleConvs_2_Downs_16_address0;
reg ShuffleConvs_2_Downs_16_ce0;
reg ShuffleConvs_2_Downs_16_we0;
reg[7:0] ShuffleConvs_2_Downs_16_d0;
reg ShuffleConvs_2_Downs_16_ce1;
reg ShuffleConvs_2_Downs_16_we1;
reg[6:0] ShuffleConvs_2_Downs_68_address0;
reg ShuffleConvs_2_Downs_68_ce0;
reg ShuffleConvs_2_Downs_68_we0;
reg[7:0] ShuffleConvs_2_Downs_68_d0;
reg ShuffleConvs_2_Downs_68_ce1;
reg ShuffleConvs_2_Downs_68_we1;
reg[6:0] ShuffleConvs_2_Downs_15_address0;
reg ShuffleConvs_2_Downs_15_ce0;
reg ShuffleConvs_2_Downs_15_we0;
reg[7:0] ShuffleConvs_2_Downs_15_d0;
reg ShuffleConvs_2_Downs_15_ce1;
reg ShuffleConvs_2_Downs_15_we1;
reg[6:0] ShuffleConvs_2_Downs_67_address0;
reg ShuffleConvs_2_Downs_67_ce0;
reg ShuffleConvs_2_Downs_67_we0;
reg[7:0] ShuffleConvs_2_Downs_67_d0;
reg ShuffleConvs_2_Downs_67_ce1;
reg ShuffleConvs_2_Downs_67_we1;
reg[6:0] ShuffleConvs_2_Downs_14_address0;
reg ShuffleConvs_2_Downs_14_ce0;
reg ShuffleConvs_2_Downs_14_we0;
reg[7:0] ShuffleConvs_2_Downs_14_d0;
reg ShuffleConvs_2_Downs_14_ce1;
reg ShuffleConvs_2_Downs_14_we1;
reg[6:0] ShuffleConvs_2_Downs_66_address0;
reg ShuffleConvs_2_Downs_66_ce0;
reg ShuffleConvs_2_Downs_66_we0;
reg[7:0] ShuffleConvs_2_Downs_66_d0;
reg ShuffleConvs_2_Downs_66_ce1;
reg ShuffleConvs_2_Downs_66_we1;
reg[6:0] ShuffleConvs_2_Downs_13_address0;
reg ShuffleConvs_2_Downs_13_ce0;
reg ShuffleConvs_2_Downs_13_we0;
reg[7:0] ShuffleConvs_2_Downs_13_d0;
reg ShuffleConvs_2_Downs_13_ce1;
reg ShuffleConvs_2_Downs_13_we1;
reg[6:0] ShuffleConvs_2_Downs_65_address0;
reg ShuffleConvs_2_Downs_65_ce0;
reg ShuffleConvs_2_Downs_65_we0;
reg[7:0] ShuffleConvs_2_Downs_65_d0;
reg ShuffleConvs_2_Downs_65_ce1;
reg ShuffleConvs_2_Downs_65_we1;
reg[6:0] ShuffleConvs_2_Downs_12_address0;
reg ShuffleConvs_2_Downs_12_ce0;
reg ShuffleConvs_2_Downs_12_we0;
reg[7:0] ShuffleConvs_2_Downs_12_d0;
reg ShuffleConvs_2_Downs_12_ce1;
reg ShuffleConvs_2_Downs_12_we1;
reg[6:0] ShuffleConvs_2_Downs_64_address0;
reg ShuffleConvs_2_Downs_64_ce0;
reg ShuffleConvs_2_Downs_64_we0;
reg[7:0] ShuffleConvs_2_Downs_64_d0;
reg ShuffleConvs_2_Downs_64_ce1;
reg ShuffleConvs_2_Downs_64_we1;
reg[6:0] ShuffleConvs_2_Downs_11_address0;
reg ShuffleConvs_2_Downs_11_ce0;
reg ShuffleConvs_2_Downs_11_we0;
reg[7:0] ShuffleConvs_2_Downs_11_d0;
reg ShuffleConvs_2_Downs_11_ce1;
reg ShuffleConvs_2_Downs_11_we1;
reg[6:0] ShuffleConvs_2_Downs_63_address0;
reg ShuffleConvs_2_Downs_63_ce0;
reg ShuffleConvs_2_Downs_63_we0;
reg[7:0] ShuffleConvs_2_Downs_63_d0;
reg ShuffleConvs_2_Downs_63_ce1;
reg ShuffleConvs_2_Downs_63_we1;
reg[6:0] ShuffleConvs_2_Downs_10_address0;
reg ShuffleConvs_2_Downs_10_ce0;
reg ShuffleConvs_2_Downs_10_we0;
reg[7:0] ShuffleConvs_2_Downs_10_d0;
reg ShuffleConvs_2_Downs_10_ce1;
reg ShuffleConvs_2_Downs_10_we1;
reg[6:0] ShuffleConvs_2_Downs_62_address0;
reg ShuffleConvs_2_Downs_62_ce0;
reg ShuffleConvs_2_Downs_62_we0;
reg[7:0] ShuffleConvs_2_Downs_62_d0;
reg ShuffleConvs_2_Downs_62_ce1;
reg ShuffleConvs_2_Downs_62_we1;
reg[6:0] ShuffleConvs_2_Downs_9_address0;
reg ShuffleConvs_2_Downs_9_ce0;
reg ShuffleConvs_2_Downs_9_we0;
reg[7:0] ShuffleConvs_2_Downs_9_d0;
reg ShuffleConvs_2_Downs_9_ce1;
reg ShuffleConvs_2_Downs_9_we1;
reg[6:0] ShuffleConvs_2_Downs_60_address0;
reg ShuffleConvs_2_Downs_60_ce0;
reg ShuffleConvs_2_Downs_60_we0;
reg[7:0] ShuffleConvs_2_Downs_60_d0;
reg ShuffleConvs_2_Downs_60_ce1;
reg ShuffleConvs_2_Downs_60_we1;
reg[6:0] ShuffleConvs_2_Downs_8_address0;
reg ShuffleConvs_2_Downs_8_ce0;
reg ShuffleConvs_2_Downs_8_we0;
reg[7:0] ShuffleConvs_2_Downs_8_d0;
reg ShuffleConvs_2_Downs_8_ce1;
reg ShuffleConvs_2_Downs_8_we1;
reg[6:0] ShuffleConvs_2_Downs_59_address0;
reg ShuffleConvs_2_Downs_59_ce0;
reg ShuffleConvs_2_Downs_59_we0;
reg[7:0] ShuffleConvs_2_Downs_59_d0;
reg ShuffleConvs_2_Downs_59_ce1;
reg ShuffleConvs_2_Downs_59_we1;
reg[6:0] ShuffleConvs_2_Downs_7_address0;
reg ShuffleConvs_2_Downs_7_ce0;
reg ShuffleConvs_2_Downs_7_we0;
reg[7:0] ShuffleConvs_2_Downs_7_d0;
reg ShuffleConvs_2_Downs_7_ce1;
reg ShuffleConvs_2_Downs_7_we1;
reg[6:0] ShuffleConvs_2_Downs_58_address0;
reg ShuffleConvs_2_Downs_58_ce0;
reg ShuffleConvs_2_Downs_58_we0;
reg[7:0] ShuffleConvs_2_Downs_58_d0;
reg ShuffleConvs_2_Downs_58_ce1;
reg ShuffleConvs_2_Downs_58_we1;
reg[6:0] ShuffleConvs_2_Downs_5_address0;
reg ShuffleConvs_2_Downs_5_ce0;
reg ShuffleConvs_2_Downs_5_we0;
reg[7:0] ShuffleConvs_2_Downs_5_d0;
reg ShuffleConvs_2_Downs_5_ce1;
reg ShuffleConvs_2_Downs_5_we1;
reg[6:0] ShuffleConvs_2_Downs_57_address0;
reg ShuffleConvs_2_Downs_57_ce0;
reg ShuffleConvs_2_Downs_57_we0;
reg[7:0] ShuffleConvs_2_Downs_57_d0;
reg ShuffleConvs_2_Downs_57_ce1;
reg ShuffleConvs_2_Downs_57_we1;
reg[6:0] ShuffleConvs_2_Downs_4_address0;
reg ShuffleConvs_2_Downs_4_ce0;
reg ShuffleConvs_2_Downs_4_we0;
reg[7:0] ShuffleConvs_2_Downs_4_d0;
reg ShuffleConvs_2_Downs_4_ce1;
reg ShuffleConvs_2_Downs_4_we1;
reg[6:0] ShuffleConvs_2_Downs_56_address0;
reg ShuffleConvs_2_Downs_56_ce0;
reg ShuffleConvs_2_Downs_56_we0;
reg[7:0] ShuffleConvs_2_Downs_56_d0;
reg ShuffleConvs_2_Downs_56_ce1;
reg ShuffleConvs_2_Downs_56_we1;
reg[6:0] ShuffleConvs_2_Downs_3_address0;
reg ShuffleConvs_2_Downs_3_ce0;
reg ShuffleConvs_2_Downs_3_we0;
reg[7:0] ShuffleConvs_2_Downs_3_d0;
reg ShuffleConvs_2_Downs_3_ce1;
reg ShuffleConvs_2_Downs_3_we1;
reg[6:0] ShuffleConvs_2_Downs_55_address0;
reg ShuffleConvs_2_Downs_55_ce0;
reg ShuffleConvs_2_Downs_55_we0;
reg[7:0] ShuffleConvs_2_Downs_55_d0;
reg ShuffleConvs_2_Downs_55_ce1;
reg ShuffleConvs_2_Downs_55_we1;
reg[6:0] ShuffleConvs_2_Downs_2_address0;
reg ShuffleConvs_2_Downs_2_ce0;
reg ShuffleConvs_2_Downs_2_we0;
reg[7:0] ShuffleConvs_2_Downs_2_d0;
reg ShuffleConvs_2_Downs_2_ce1;
reg ShuffleConvs_2_Downs_2_we1;
reg[6:0] ShuffleConvs_2_Downs_54_address0;
reg ShuffleConvs_2_Downs_54_ce0;
reg ShuffleConvs_2_Downs_54_we0;
reg[7:0] ShuffleConvs_2_Downs_54_d0;
reg ShuffleConvs_2_Downs_54_ce1;
reg ShuffleConvs_2_Downs_54_we1;
reg[6:0] ShuffleConvs_2_Downs_1_address0;
reg ShuffleConvs_2_Downs_1_ce0;
reg ShuffleConvs_2_Downs_1_we0;
reg[7:0] ShuffleConvs_2_Downs_1_d0;
reg ShuffleConvs_2_Downs_1_ce1;
reg ShuffleConvs_2_Downs_1_we1;
reg[6:0] ShuffleConvs_2_Downs_53_address0;
reg ShuffleConvs_2_Downs_53_ce0;
reg ShuffleConvs_2_Downs_53_we0;
reg[7:0] ShuffleConvs_2_Downs_53_d0;
reg ShuffleConvs_2_Downs_53_ce1;
reg ShuffleConvs_2_Downs_53_we1;
reg[6:0] ShuffleConvs_2_Downs_address0;
reg ShuffleConvs_2_Downs_ce0;
reg ShuffleConvs_2_Downs_we0;
reg[7:0] ShuffleConvs_2_Downs_d0;
reg ShuffleConvs_2_Downs_ce1;
reg ShuffleConvs_2_Downs_we1;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten1_reg_4820;
reg   [6:0] co_reg_4831;
reg   [7:0] indvar_flatten_reg_4843;
reg   [3:0] h_reg_4854;
reg   [3:0] w_reg_4866;
reg   [12:0] indvar_flatten2_reg_5018;
reg   [6:0] co9_reg_5029;
reg   [7:0] indvar_flatten3_reg_5041;
reg   [3:0] h11_reg_5052;
reg   [3:0] w11_reg_5064;
reg   [7:0] reg_5256;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state37;
wire   [0:0] exitcond_flatten1_fu_5272_p2;
reg   [0:0] exitcond_flatten1_reg_8342;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten1_reg_8342;
wire   [12:0] indvar_flatten_next1_fu_5278_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_5284_p2;
reg   [0:0] exitcond_flatten_reg_8351;
wire   [7:0] indvar_flatten_next_fu_5296_p3;
wire   [6:0] co_cast_mid2_v_fu_5317_p3;
reg   [6:0] co_cast_mid2_v_reg_8364;
reg    ap_enable_reg_pp0_iter1;
wire   [3:0] w_mid2_fu_5357_p3;
reg   [3:0] w_mid2_reg_8369;
wire   [3:0] h_cast_mid2_fu_5365_p3;
reg   [3:0] h_cast_mid2_reg_8375;
wire   [3:0] w_7_fu_5510_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [6:0] h1_cast_cast1_fu_5515_p1;
reg   [6:0] h1_cast_cast1_reg_8392;
wire    ap_CS_fsm_state6;
wire   [10:0] h1_cast_cast_fu_5519_p1;
reg   [10:0] h1_cast_cast_reg_8397;
wire   [7:0] tmp_148_fu_5547_p2;
reg   [7:0] tmp_148_reg_8402;
wire   [6:0] w2_cast_cast1_fu_5559_p1;
reg   [6:0] w2_cast_cast1_reg_8410;
wire    ap_CS_fsm_state7;
wire   [14:0] w2_cast_cast2_fu_5563_p1;
reg   [14:0] w2_cast_cast2_reg_8415;
reg   [6:0] ShuffleConvs_2_Downs_383_reg_8420;
reg   [6:0] ShuffleConvs_2_Downs_384_reg_8425;
reg   [6:0] ShuffleConvs_2_Downs_385_reg_8430;
reg   [6:0] ShuffleConvs_2_Downs_386_reg_8435;
reg   [6:0] ShuffleConvs_2_Downs_387_reg_8440;
reg   [6:0] ShuffleConvs_2_Downs_388_reg_8445;
reg   [6:0] ShuffleConvs_2_Downs_389_reg_8450;
reg   [6:0] ShuffleConvs_2_Downs_390_reg_8455;
reg   [6:0] ShuffleConvs_2_Downs_391_reg_8460;
reg   [6:0] ShuffleConvs_2_Downs_392_reg_8465;
reg   [6:0] ShuffleConvs_2_Downs_393_reg_8470;
reg   [6:0] ShuffleConvs_2_Downs_394_reg_8475;
reg   [6:0] ShuffleConvs_2_Downs_395_reg_8480;
reg   [6:0] ShuffleConvs_2_Downs_396_reg_8485;
reg   [6:0] ShuffleConvs_2_Downs_397_reg_8490;
reg   [6:0] ShuffleConvs_2_Downs_398_reg_8495;
reg   [6:0] ShuffleConvs_2_Downs_399_reg_8500;
reg   [6:0] ShuffleConvs_2_Downs_400_reg_8505;
reg   [6:0] ShuffleConvs_2_Downs_401_reg_8510;
reg   [6:0] ShuffleConvs_2_Downs_402_reg_8515;
reg   [6:0] ShuffleConvs_2_Downs_403_reg_8520;
reg   [6:0] ShuffleConvs_2_Downs_404_reg_8525;
reg   [6:0] ShuffleConvs_2_Downs_405_reg_8530;
reg   [6:0] ShuffleConvs_2_Downs_406_reg_8535;
wire   [3:0] h_7_fu_5610_p2;
wire   [0:0] exitcond4_fu_5604_p2;
reg   [13:0] input_V_addr_reg_8548;
wire    ap_CS_fsm_state8;
reg   [6:0] weight_0_V_addr_reg_8553;
reg   [6:0] weight_1_V_addr_reg_8558;
reg   [6:0] weight_2_V_addr_reg_8563;
reg   [6:0] weight_3_V_addr_reg_8568;
reg   [6:0] weight_4_V_addr_reg_8573;
reg   [6:0] weight_5_V_addr_reg_8578;
reg   [6:0] weight_6_V_addr_reg_8583;
reg   [6:0] weight_7_V_addr_reg_8588;
reg   [6:0] weight_8_V_addr_reg_8593;
reg   [6:0] weight_9_V_addr_reg_8598;
reg   [6:0] weight_10_V_addr_reg_8603;
reg   [6:0] weight_11_V_addr_reg_8608;
reg   [6:0] weight_48_V_addr_reg_8613;
reg   [6:0] weight_49_V_addr_reg_8618;
reg   [6:0] weight_50_V_addr_reg_8623;
reg   [6:0] weight_51_V_addr_reg_8628;
reg   [6:0] weight_52_V_addr_reg_8633;
reg   [6:0] weight_53_V_addr_reg_8638;
reg   [6:0] weight_54_V_addr_reg_8643;
reg   [6:0] weight_55_V_addr_reg_8648;
reg   [6:0] weight_56_V_addr_reg_8653;
reg   [6:0] weight_57_V_addr_reg_8658;
reg   [6:0] weight_58_V_addr_reg_8663;
reg   [6:0] weight_59_V_addr_reg_8668;
wire   [6:0] ci_1_fu_5739_p2;
reg   [6:0] ci_1_reg_8676;
wire   [3:0] w_8_fu_5745_p2;
wire   [0:0] exitcond8_fu_5733_p2;
wire   [6:0] h4_cast_cast1_fu_6111_p1;
reg   [6:0] h4_cast_cast1_reg_8686;
wire    ap_CS_fsm_state15;
wire   [10:0] h4_cast_cast_fu_6115_p1;
reg   [10:0] h4_cast_cast_reg_8691;
wire   [7:0] tmp_151_fu_6143_p2;
reg   [7:0] tmp_151_reg_8696;
wire   [6:0] w5_cast_cast1_fu_6155_p1;
reg   [6:0] w5_cast_cast1_reg_8704;
wire    ap_CS_fsm_state16;
wire   [14:0] w5_cast_cast2_fu_6159_p1;
reg   [14:0] w5_cast_cast2_reg_8709;
reg   [6:0] ShuffleConvs_2_Downs_431_reg_8714;
reg   [6:0] ShuffleConvs_2_Downs_432_reg_8719;
reg   [6:0] ShuffleConvs_2_Downs_433_reg_8724;
reg   [6:0] ShuffleConvs_2_Downs_434_reg_8729;
reg   [6:0] ShuffleConvs_2_Downs_435_reg_8734;
reg   [6:0] ShuffleConvs_2_Downs_436_reg_8739;
reg   [6:0] ShuffleConvs_2_Downs_437_reg_8744;
reg   [6:0] ShuffleConvs_2_Downs_438_reg_8749;
reg   [6:0] ShuffleConvs_2_Downs_439_reg_8754;
reg   [6:0] ShuffleConvs_2_Downs_440_reg_8759;
reg   [6:0] ShuffleConvs_2_Downs_441_reg_8764;
reg   [6:0] ShuffleConvs_2_Downs_442_reg_8769;
reg   [6:0] ShuffleConvs_2_Downs_443_reg_8774;
reg   [6:0] ShuffleConvs_2_Downs_444_reg_8779;
reg   [6:0] ShuffleConvs_2_Downs_445_reg_8784;
reg   [6:0] ShuffleConvs_2_Downs_446_reg_8789;
reg   [6:0] ShuffleConvs_2_Downs_447_reg_8794;
reg   [6:0] ShuffleConvs_2_Downs_448_reg_8799;
reg   [6:0] ShuffleConvs_2_Downs_449_reg_8804;
reg   [6:0] ShuffleConvs_2_Downs_450_reg_8809;
reg   [6:0] ShuffleConvs_2_Downs_451_reg_8814;
reg   [6:0] ShuffleConvs_2_Downs_452_reg_8819;
reg   [6:0] ShuffleConvs_2_Downs_453_reg_8824;
reg   [6:0] ShuffleConvs_2_Downs_454_reg_8829;
wire   [3:0] h_9_fu_6206_p2;
wire   [0:0] exitcond7_fu_6200_p2;
reg   [13:0] input_V_addr_1_reg_8842;
wire    ap_CS_fsm_state17;
reg   [6:0] weight_12_V_addr_reg_8847;
reg   [6:0] weight_13_V_addr_reg_8852;
reg   [6:0] weight_14_V_addr_reg_8857;
reg   [6:0] weight_15_V_addr_reg_8862;
reg   [6:0] weight_16_V_addr_reg_8867;
reg   [6:0] weight_17_V_addr_reg_8872;
reg   [6:0] weight_18_V_addr_reg_8877;
reg   [6:0] weight_19_V_addr_reg_8882;
reg   [6:0] weight_20_V_addr_reg_8887;
reg   [6:0] weight_21_V_addr_reg_8892;
reg   [6:0] weight_22_V_addr_reg_8897;
reg   [6:0] weight_23_V_addr_reg_8902;
reg   [6:0] weight_60_V_addr_reg_8907;
reg   [6:0] weight_61_V_addr_reg_8912;
reg   [6:0] weight_62_V_addr_reg_8917;
reg   [6:0] weight_63_V_addr_reg_8922;
reg   [6:0] weight_64_V_addr_reg_8927;
reg   [6:0] weight_65_V_addr_reg_8932;
reg   [6:0] weight_66_V_addr_reg_8937;
reg   [6:0] weight_67_V_addr_reg_8942;
reg   [6:0] weight_68_V_addr_reg_8947;
reg   [6:0] weight_69_V_addr_reg_8952;
reg   [6:0] weight_70_V_addr_reg_8957;
reg   [6:0] weight_71_V_addr_reg_8962;
wire   [6:0] ci_2_fu_6335_p2;
reg   [6:0] ci_2_reg_8970;
wire   [3:0] w_9_fu_6341_p2;
wire   [0:0] exitcond5_fu_6329_p2;
wire   [6:0] h8_cast9_cast1_fu_6707_p1;
reg   [6:0] h8_cast9_cast1_reg_8980;
wire    ap_CS_fsm_state24;
wire   [10:0] h8_cast9_cast_fu_6711_p1;
reg   [10:0] h8_cast9_cast_reg_8985;
wire   [7:0] tmp_155_fu_6739_p2;
reg   [7:0] tmp_155_reg_8990;
wire   [6:0] w9_cast8_cast1_fu_6751_p1;
reg   [6:0] w9_cast8_cast1_reg_8998;
wire    ap_CS_fsm_state25;
wire   [14:0] w9_cast8_cast2_fu_6755_p1;
reg   [14:0] w9_cast8_cast2_reg_9003;
reg   [6:0] ShuffleConvs_2_Downs_479_reg_9008;
reg   [6:0] ShuffleConvs_2_Downs_480_reg_9013;
reg   [6:0] ShuffleConvs_2_Downs_481_reg_9018;
reg   [6:0] ShuffleConvs_2_Downs_482_reg_9023;
reg   [6:0] ShuffleConvs_2_Downs_483_reg_9028;
reg   [6:0] ShuffleConvs_2_Downs_484_reg_9033;
reg   [6:0] ShuffleConvs_2_Downs_485_reg_9038;
reg   [6:0] ShuffleConvs_2_Downs_486_reg_9043;
reg   [6:0] ShuffleConvs_2_Downs_487_reg_9048;
reg   [6:0] ShuffleConvs_2_Downs_488_reg_9053;
reg   [6:0] ShuffleConvs_2_Downs_489_reg_9058;
reg   [6:0] ShuffleConvs_2_Downs_490_reg_9063;
reg   [6:0] ShuffleConvs_2_Downs_491_reg_9068;
reg   [6:0] ShuffleConvs_2_Downs_492_reg_9073;
reg   [6:0] ShuffleConvs_2_Downs_493_reg_9078;
reg   [6:0] ShuffleConvs_2_Downs_494_reg_9083;
reg   [6:0] ShuffleConvs_2_Downs_495_reg_9088;
reg   [6:0] ShuffleConvs_2_Downs_496_reg_9093;
reg   [6:0] ShuffleConvs_2_Downs_497_reg_9098;
reg   [6:0] ShuffleConvs_2_Downs_498_reg_9103;
reg   [6:0] ShuffleConvs_2_Downs_499_reg_9108;
reg   [6:0] ShuffleConvs_2_Downs_500_reg_9113;
reg   [6:0] ShuffleConvs_2_Downs_501_reg_9118;
reg   [6:0] ShuffleConvs_2_Downs_502_reg_9123;
wire   [3:0] h_10_fu_6802_p2;
wire   [0:0] exitcond9_fu_6796_p2;
reg   [13:0] input_V_addr_2_reg_9136;
wire    ap_CS_fsm_state26;
reg   [6:0] weight_24_V_addr_reg_9141;
reg   [6:0] weight_25_V_addr_reg_9146;
reg   [6:0] weight_26_V_addr_reg_9151;
reg   [6:0] weight_27_V_addr_reg_9156;
reg   [6:0] weight_28_V_addr_reg_9161;
reg   [6:0] weight_29_V_addr_reg_9166;
reg   [6:0] weight_30_V_addr_reg_9171;
reg   [6:0] weight_31_V_addr_reg_9176;
reg   [6:0] weight_32_V_addr_reg_9181;
reg   [6:0] weight_33_V_addr_reg_9186;
reg   [6:0] weight_34_V_addr_reg_9191;
reg   [6:0] weight_35_V_addr_reg_9196;
reg   [6:0] weight_72_V_addr_reg_9201;
reg   [6:0] weight_73_V_addr_reg_9206;
reg   [6:0] weight_74_V_addr_reg_9211;
reg   [6:0] weight_75_V_addr_reg_9216;
reg   [6:0] weight_76_V_addr_reg_9221;
reg   [6:0] weight_77_V_addr_reg_9226;
reg   [6:0] weight_78_V_addr_reg_9231;
reg   [6:0] weight_79_V_addr_reg_9236;
reg   [6:0] weight_80_V_addr_reg_9241;
reg   [6:0] weight_81_V_addr_reg_9246;
reg   [6:0] weight_82_V_addr_reg_9251;
reg   [6:0] weight_83_V_addr_reg_9256;
wire   [6:0] ci_3_fu_6931_p2;
reg   [6:0] ci_3_reg_9264;
wire   [3:0] w_12_fu_6937_p2;
wire   [0:0] exitcond11_fu_6925_p2;
wire   [6:0] h9_cast6_cast1_fu_7303_p1;
reg   [6:0] h9_cast6_cast1_reg_9274;
wire    ap_CS_fsm_state33;
wire   [10:0] h9_cast6_cast_fu_7307_p1;
reg   [10:0] h9_cast6_cast_reg_9279;
wire   [7:0] tmp_167_fu_7335_p2;
reg   [7:0] tmp_167_reg_9284;
wire   [0:0] exitcond2_fu_7341_p2;
wire   [6:0] w10_cast5_cast1_fu_7347_p1;
reg   [6:0] w10_cast5_cast1_reg_9293;
wire    ap_CS_fsm_state34;
wire   [14:0] w10_cast5_cast2_fu_7351_p1;
reg   [14:0] w10_cast5_cast2_reg_9298;
reg   [6:0] ShuffleConvs_2_Downs_527_reg_9303;
reg   [6:0] ShuffleConvs_2_Downs_528_reg_9308;
reg   [6:0] ShuffleConvs_2_Downs_529_reg_9313;
reg   [6:0] ShuffleConvs_2_Downs_530_reg_9318;
reg   [6:0] ShuffleConvs_2_Downs_531_reg_9323;
reg   [6:0] ShuffleConvs_2_Downs_532_reg_9328;
reg   [6:0] ShuffleConvs_2_Downs_533_reg_9333;
reg   [6:0] ShuffleConvs_2_Downs_534_reg_9338;
reg   [6:0] ShuffleConvs_2_Downs_535_reg_9343;
reg   [6:0] ShuffleConvs_2_Downs_536_reg_9348;
reg   [6:0] ShuffleConvs_2_Downs_537_reg_9353;
reg   [6:0] ShuffleConvs_2_Downs_538_reg_9358;
reg   [6:0] ShuffleConvs_2_Downs_539_reg_9363;
reg   [6:0] ShuffleConvs_2_Downs_540_reg_9368;
reg   [6:0] ShuffleConvs_2_Downs_541_reg_9373;
reg   [6:0] ShuffleConvs_2_Downs_542_reg_9378;
reg   [6:0] ShuffleConvs_2_Downs_543_reg_9383;
reg   [6:0] ShuffleConvs_2_Downs_544_reg_9388;
reg   [6:0] ShuffleConvs_2_Downs_545_reg_9393;
reg   [6:0] ShuffleConvs_2_Downs_546_reg_9398;
reg   [6:0] ShuffleConvs_2_Downs_547_reg_9403;
reg   [6:0] ShuffleConvs_2_Downs_548_reg_9408;
reg   [6:0] ShuffleConvs_2_Downs_549_reg_9413;
reg   [6:0] ShuffleConvs_2_Downs_550_reg_9418;
wire   [3:0] h_1_fu_7398_p2;
wire   [0:0] exitcond10_fu_7392_p2;
reg   [13:0] input_V_addr_3_reg_9431;
wire    ap_CS_fsm_state35;
reg   [6:0] weight_36_V_addr_reg_9436;
reg   [6:0] weight_37_V_addr_reg_9441;
reg   [6:0] weight_38_V_addr_reg_9446;
reg   [6:0] weight_39_V_addr_reg_9451;
reg   [6:0] weight_40_V_addr_reg_9456;
reg   [6:0] weight_41_V_addr_reg_9461;
reg   [6:0] weight_42_V_addr_reg_9466;
reg   [6:0] weight_43_V_addr_reg_9471;
reg   [6:0] weight_44_V_addr_reg_9476;
reg   [6:0] weight_45_V_addr_reg_9481;
reg   [6:0] weight_46_V_addr_reg_9486;
reg   [6:0] weight_47_V_addr_reg_9491;
reg   [6:0] weight_84_V_addr_reg_9496;
reg   [6:0] weight_85_V_addr_reg_9501;
reg   [6:0] weight_86_V_addr_reg_9506;
reg   [6:0] weight_87_V_addr_reg_9511;
reg   [6:0] weight_88_V_addr_reg_9516;
reg   [6:0] weight_89_V_addr_reg_9521;
reg   [6:0] weight_90_V_addr_reg_9526;
reg   [6:0] weight_91_V_addr_reg_9531;
reg   [6:0] weight_92_V_addr_reg_9536;
reg   [6:0] weight_93_V_addr_reg_9541;
reg   [6:0] weight_94_V_addr_reg_9546;
reg   [6:0] weight_95_V_addr_reg_9551;
wire   [6:0] ci_4_fu_7527_p2;
reg   [6:0] ci_4_reg_9559;
wire   [3:0] w_13_fu_7533_p2;
wire   [0:0] exitcond13_fu_7521_p2;
wire   [0:0] exitcond_flatten3_fu_7899_p2;
reg   [0:0] exitcond_flatten3_reg_9569;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state42_pp1_stage0_iter0;
wire    ap_block_state43_pp1_stage0_iter1;
wire    ap_block_state44_pp1_stage0_iter2;
wire    ap_block_state45_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten3_reg_9569;
wire   [12:0] indvar_flatten_next3_fu_7905_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten2_fu_7911_p2;
reg   [0:0] exitcond_flatten2_reg_9578;
wire   [7:0] indvar_flatten_next2_fu_7923_p3;
wire   [6:0] co9_mid2_fu_7961_p3;
reg   [6:0] co9_mid2_reg_9591;
reg    ap_enable_reg_pp1_iter1;
reg   [6:0] ap_reg_pp1_iter2_co9_mid2_reg_9591;
wire   [3:0] w12_mid2_fu_7979_p3;
reg   [3:0] w12_mid2_reg_9597;
wire   [3:0] h11_cast2_mid2_fu_7987_p3;
reg   [3:0] h11_cast2_mid2_reg_9603;
reg   [6:0] ShuffleConvs_2_Downs_575_reg_9610;
reg   [6:0] ShuffleConvs_2_Downs_576_reg_9616;
reg   [6:0] ShuffleConvs_2_Downs_577_reg_9622;
reg   [6:0] ShuffleConvs_2_Downs_578_reg_9628;
reg   [6:0] ShuffleConvs_2_Downs_579_reg_9634;
reg   [6:0] ShuffleConvs_2_Downs_580_reg_9640;
reg   [6:0] ShuffleConvs_2_Downs_581_reg_9646;
reg   [6:0] ShuffleConvs_2_Downs_582_reg_9652;
reg   [6:0] ShuffleConvs_2_Downs_583_reg_9658;
reg   [6:0] ShuffleConvs_2_Downs_584_reg_9664;
reg   [6:0] ShuffleConvs_2_Downs_585_reg_9670;
reg   [6:0] ShuffleConvs_2_Downs_586_reg_9676;
reg   [6:0] ShuffleConvs_2_Downs_587_reg_9682;
reg   [6:0] ShuffleConvs_2_Downs_588_reg_9688;
reg   [6:0] ShuffleConvs_2_Downs_589_reg_9694;
reg   [6:0] ShuffleConvs_2_Downs_590_reg_9700;
reg   [6:0] ShuffleConvs_2_Downs_591_reg_9706;
reg   [6:0] ShuffleConvs_2_Downs_592_reg_9712;
reg   [6:0] ShuffleConvs_2_Downs_593_reg_9718;
reg   [6:0] ShuffleConvs_2_Downs_594_reg_9724;
reg   [6:0] ShuffleConvs_2_Downs_595_reg_9730;
reg   [6:0] ShuffleConvs_2_Downs_596_reg_9736;
reg   [6:0] ShuffleConvs_2_Downs_597_reg_9742;
reg   [6:0] ShuffleConvs_2_Downs_598_reg_9748;
reg   [6:0] ShuffleConvs_2_Downs_599_reg_9754;
reg   [6:0] ShuffleConvs_2_Downs_600_reg_9760;
reg   [6:0] ShuffleConvs_2_Downs_601_reg_9766;
reg   [6:0] ShuffleConvs_2_Downs_602_reg_9772;
reg   [6:0] ShuffleConvs_2_Downs_603_reg_9778;
reg   [6:0] ShuffleConvs_2_Downs_604_reg_9784;
reg   [6:0] ShuffleConvs_2_Downs_605_reg_9790;
reg   [6:0] ShuffleConvs_2_Downs_606_reg_9796;
reg   [6:0] ShuffleConvs_2_Downs_607_reg_9802;
reg   [6:0] ShuffleConvs_2_Downs_608_reg_9808;
reg   [6:0] ShuffleConvs_2_Downs_609_reg_9814;
reg   [6:0] ShuffleConvs_2_Downs_610_reg_9820;
reg   [6:0] ShuffleConvs_2_Downs_611_reg_9826;
reg   [6:0] ShuffleConvs_2_Downs_612_reg_9832;
reg   [6:0] ShuffleConvs_2_Downs_613_reg_9838;
reg   [6:0] ShuffleConvs_2_Downs_614_reg_9844;
reg   [6:0] ShuffleConvs_2_Downs_615_reg_9850;
reg   [6:0] ShuffleConvs_2_Downs_616_reg_9856;
reg   [6:0] ShuffleConvs_2_Downs_617_reg_9862;
reg   [6:0] ShuffleConvs_2_Downs_618_reg_9868;
reg   [6:0] ShuffleConvs_2_Downs_619_reg_9874;
reg   [6:0] ShuffleConvs_2_Downs_620_reg_9880;
reg   [6:0] ShuffleConvs_2_Downs_621_reg_9886;
reg   [6:0] ShuffleConvs_2_Downs_622_reg_9892;
reg   [6:0] ShuffleConvs_2_Downs_623_reg_9898;
reg   [6:0] ShuffleConvs_2_Downs_624_reg_9904;
reg   [6:0] ShuffleConvs_2_Downs_625_reg_9910;
reg   [6:0] ShuffleConvs_2_Downs_626_reg_9916;
reg   [6:0] ShuffleConvs_2_Downs_627_reg_9922;
reg   [6:0] ShuffleConvs_2_Downs_628_reg_9928;
reg   [6:0] ShuffleConvs_2_Downs_629_reg_9934;
reg   [6:0] ShuffleConvs_2_Downs_630_reg_9940;
reg   [6:0] ShuffleConvs_2_Downs_631_reg_9946;
reg   [6:0] ShuffleConvs_2_Downs_632_reg_9952;
reg   [6:0] ShuffleConvs_2_Downs_633_reg_9958;
reg   [6:0] ShuffleConvs_2_Downs_634_reg_9964;
reg   [6:0] ShuffleConvs_2_Downs_635_reg_9970;
reg   [6:0] ShuffleConvs_2_Downs_636_reg_9976;
reg   [6:0] ShuffleConvs_2_Downs_637_reg_9982;
reg   [6:0] ShuffleConvs_2_Downs_638_reg_9988;
reg   [6:0] ShuffleConvs_2_Downs_639_reg_9994;
reg   [6:0] ShuffleConvs_2_Downs_640_reg_10000;
reg   [6:0] ShuffleConvs_2_Downs_641_reg_10006;
reg   [6:0] ShuffleConvs_2_Downs_642_reg_10012;
reg   [6:0] ShuffleConvs_2_Downs_643_reg_10018;
reg   [6:0] ShuffleConvs_2_Downs_644_reg_10024;
reg   [6:0] ShuffleConvs_2_Downs_645_reg_10030;
reg   [6:0] ShuffleConvs_2_Downs_646_reg_10036;
reg   [6:0] ShuffleConvs_2_Downs_647_reg_10042;
reg   [6:0] ShuffleConvs_2_Downs_648_reg_10048;
reg   [6:0] ShuffleConvs_2_Downs_649_reg_10054;
reg   [6:0] ShuffleConvs_2_Downs_650_reg_10060;
reg   [6:0] ShuffleConvs_2_Downs_651_reg_10066;
reg   [6:0] ShuffleConvs_2_Downs_652_reg_10072;
reg   [6:0] ShuffleConvs_2_Downs_653_reg_10078;
reg   [6:0] ShuffleConvs_2_Downs_654_reg_10084;
reg   [6:0] ShuffleConvs_2_Downs_655_reg_10090;
reg   [6:0] ShuffleConvs_2_Downs_656_reg_10096;
reg   [6:0] ShuffleConvs_2_Downs_657_reg_10102;
reg   [6:0] ShuffleConvs_2_Downs_658_reg_10108;
reg   [6:0] ShuffleConvs_2_Downs_659_reg_10114;
reg   [6:0] ShuffleConvs_2_Downs_660_reg_10120;
reg   [6:0] ShuffleConvs_2_Downs_661_reg_10126;
reg   [6:0] ShuffleConvs_2_Downs_662_reg_10132;
reg   [6:0] ShuffleConvs_2_Downs_663_reg_10138;
reg   [6:0] ShuffleConvs_2_Downs_664_reg_10144;
reg   [6:0] ShuffleConvs_2_Downs_665_reg_10150;
reg   [6:0] ShuffleConvs_2_Downs_666_reg_10156;
reg   [6:0] ShuffleConvs_2_Downs_667_reg_10162;
reg   [6:0] ShuffleConvs_2_Downs_668_reg_10168;
reg   [6:0] ShuffleConvs_2_Downs_669_reg_10174;
reg   [6:0] ShuffleConvs_2_Downs_670_reg_10180;
wire   [3:0] w_14_fu_8132_p2;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state42;
reg    ap_enable_reg_pp1_iter3;
reg   [7:0] grp_MUL_DP_fu_5076_a_V;
reg   [7:0] grp_MUL_DP_fu_5076_b_V;
wire   [15:0] grp_MUL_DP_fu_5076_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5076_ap_return_1;
reg    grp_MUL_DP_fu_5076_ap_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg   [7:0] grp_MUL_DP_fu_5085_a_V;
reg   [7:0] grp_MUL_DP_fu_5085_b_V;
wire   [15:0] grp_MUL_DP_fu_5085_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5085_ap_return_1;
reg    grp_MUL_DP_fu_5085_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5094_a_V;
reg   [7:0] grp_MUL_DP_fu_5094_b_V;
wire   [15:0] grp_MUL_DP_fu_5094_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5094_ap_return_1;
reg    grp_MUL_DP_fu_5094_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5103_a_V;
reg   [7:0] grp_MUL_DP_fu_5103_b_V;
wire   [15:0] grp_MUL_DP_fu_5103_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5103_ap_return_1;
reg    grp_MUL_DP_fu_5103_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5112_a_V;
reg   [7:0] grp_MUL_DP_fu_5112_b_V;
wire   [15:0] grp_MUL_DP_fu_5112_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5112_ap_return_1;
reg    grp_MUL_DP_fu_5112_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5121_a_V;
reg   [7:0] grp_MUL_DP_fu_5121_b_V;
wire   [15:0] grp_MUL_DP_fu_5121_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5121_ap_return_1;
reg    grp_MUL_DP_fu_5121_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5130_a_V;
reg   [7:0] grp_MUL_DP_fu_5130_b_V;
wire   [15:0] grp_MUL_DP_fu_5130_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5130_ap_return_1;
reg    grp_MUL_DP_fu_5130_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5139_a_V;
reg   [7:0] grp_MUL_DP_fu_5139_b_V;
wire   [15:0] grp_MUL_DP_fu_5139_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5139_ap_return_1;
reg    grp_MUL_DP_fu_5139_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5148_a_V;
reg   [7:0] grp_MUL_DP_fu_5148_b_V;
wire   [15:0] grp_MUL_DP_fu_5148_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5148_ap_return_1;
reg    grp_MUL_DP_fu_5148_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5157_a_V;
reg   [7:0] grp_MUL_DP_fu_5157_b_V;
wire   [15:0] grp_MUL_DP_fu_5157_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5157_ap_return_1;
reg    grp_MUL_DP_fu_5157_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5166_a_V;
reg   [7:0] grp_MUL_DP_fu_5166_b_V;
wire   [15:0] grp_MUL_DP_fu_5166_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5166_ap_return_1;
reg    grp_MUL_DP_fu_5166_ap_ce;
reg   [7:0] grp_MUL_DP_fu_5175_a_V;
reg   [7:0] grp_MUL_DP_fu_5175_b_V;
wire   [15:0] grp_MUL_DP_fu_5175_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_5175_ap_return_1;
reg    grp_MUL_DP_fu_5175_ap_ce;
reg   [6:0] co_phi_fu_4835_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] h_phi_fu_4858_p4;
reg   [3:0] w_phi_fu_4870_p4;
reg   [3:0] h1_reg_4878;
wire    ap_CS_fsm_state5;
reg   [3:0] w2_reg_4890;
wire   [0:0] exitcond1_fu_5553_p2;
reg   [6:0] ci_reg_4902;
reg   [3:0] h4_reg_4913;
reg   [3:0] w5_reg_4925;
wire   [0:0] exitcond3_fu_6149_p2;
reg   [6:0] ci6_reg_4937;
reg   [3:0] h8_reg_4948;
reg   [3:0] w9_reg_4960;
wire   [0:0] exitcond6_fu_6745_p2;
reg   [6:0] ci2_reg_4972;
reg   [3:0] h9_reg_4983;
reg   [3:0] w10_reg_4995;
reg   [6:0] ci3_reg_5007;
reg   [6:0] co9_phi_fu_5033_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] h11_phi_fu_5056_p4;
reg   [3:0] w11_phi_fu_5068_p4;
wire   [31:0] co_cast_mid2_fu_5324_p1;
wire   [31:0] tmp_183_cast_fu_5410_p1;
wire   [31:0] tmp_190_cast_fu_5576_p1;
wire   [31:0] tmp_202_cast_fu_5702_p1;
wire   [31:0] tmp_204_cast_fu_5717_p1;
wire   [31:0] ci_cast_fu_5616_p1;
wire   [31:0] tmp_194_cast_fu_6172_p1;
wire   [31:0] tmp_216_cast_fu_6298_p1;
wire   [31:0] tmp_218_cast_fu_6313_p1;
wire   [31:0] ci6_cast_fu_6212_p1;
wire   [31:0] tmp_208_cast_fu_6768_p1;
wire   [31:0] tmp_227_cast_fu_6894_p1;
wire   [31:0] tmp_229_cast_fu_6909_p1;
wire   [31:0] ci2_cast7_fu_6808_p1;
wire   [31:0] tmp_219_cast_fu_7364_p1;
wire   [31:0] tmp_242_cast_fu_7490_p1;
wire   [31:0] tmp_244_cast_fu_7505_p1;
wire   [31:0] ci3_cast4_fu_7404_p1;
wire   [31:0] tmp_234_cast_fu_8032_p1;
wire   [7:0] tmp_38_s_fu_7862_p2;
wire   [0:0] tmp_99_fu_8334_p3;
wire   [7:0] tmp_38_9_fu_7832_p2;
wire   [7:0] tmp_38_8_fu_7802_p2;
wire   [7:0] tmp_38_7_fu_7772_p2;
wire   [7:0] tmp_38_6_fu_7742_p2;
wire   [7:0] tmp_38_5_fu_7712_p2;
wire   [7:0] tmp_38_4_fu_7682_p2;
wire   [7:0] tmp_38_3_fu_7652_p2;
wire   [7:0] tmp_38_2_fu_7622_p2;
wire   [7:0] tmp_38_1_fu_7592_p2;
wire   [7:0] tmp_18_fu_7562_p2;
wire   [7:0] tmp_32_10_fu_7296_p2;
wire   [7:0] tmp_32_s_fu_7266_p2;
wire   [7:0] tmp_32_9_fu_7236_p2;
wire   [7:0] tmp_32_8_fu_7206_p2;
wire   [7:0] tmp_32_7_fu_7176_p2;
wire   [7:0] tmp_32_6_fu_7146_p2;
wire   [7:0] tmp_32_5_fu_7116_p2;
wire   [7:0] tmp_32_4_fu_7086_p2;
wire   [7:0] tmp_32_3_fu_7056_p2;
wire   [7:0] tmp_32_2_fu_7026_p2;
wire   [7:0] tmp_32_1_fu_6996_p2;
wire   [7:0] tmp_14_fu_6966_p2;
wire   [7:0] tmp_27_10_fu_6700_p2;
wire   [7:0] tmp_27_s_fu_6670_p2;
wire   [7:0] tmp_27_9_fu_6640_p2;
wire   [7:0] tmp_27_8_fu_6610_p2;
wire   [7:0] tmp_27_7_fu_6580_p2;
wire   [7:0] tmp_27_6_fu_6550_p2;
wire   [7:0] tmp_27_5_fu_6520_p2;
wire   [7:0] tmp_27_4_fu_6490_p2;
wire   [7:0] tmp_27_3_fu_6460_p2;
wire   [7:0] tmp_27_2_fu_6430_p2;
wire   [7:0] tmp_27_1_fu_6400_p2;
wire   [7:0] tmp_9_fu_6370_p2;
wire   [7:0] tmp_22_10_fu_6104_p2;
wire   [7:0] tmp_22_s_fu_6074_p2;
wire   [7:0] tmp_22_9_fu_6044_p2;
wire   [7:0] tmp_22_8_fu_6014_p2;
wire   [7:0] tmp_22_7_fu_5984_p2;
wire   [7:0] tmp_22_6_fu_5954_p2;
wire   [7:0] tmp_22_5_fu_5924_p2;
wire   [7:0] tmp_22_4_fu_5894_p2;
wire   [7:0] tmp_22_3_fu_5864_p2;
wire   [7:0] tmp_22_2_fu_5834_p2;
wire   [7:0] tmp_22_1_fu_5804_p2;
wire   [7:0] tmp_5_fu_5774_p2;
wire   [7:0] tmp_36_10_fu_7881_p2;
wire   [7:0] tmp_36_s_fu_7851_p2;
wire   [7:0] tmp_36_9_fu_7821_p2;
wire   [7:0] tmp_36_8_fu_7791_p2;
wire   [7:0] tmp_36_7_fu_7761_p2;
wire   [7:0] tmp_36_6_fu_7731_p2;
wire   [7:0] tmp_36_5_fu_7701_p2;
wire   [7:0] tmp_36_4_fu_7671_p2;
wire   [7:0] tmp_36_3_fu_7641_p2;
wire   [7:0] tmp_36_2_fu_7611_p2;
wire   [7:0] tmp_36_1_fu_7581_p2;
wire   [7:0] tmp_16_fu_7551_p2;
wire   [7:0] tmp_30_10_fu_7285_p2;
wire   [7:0] tmp_30_s_fu_7255_p2;
wire   [7:0] tmp_30_9_fu_7225_p2;
wire   [7:0] tmp_30_8_fu_7195_p2;
wire   [7:0] tmp_30_7_fu_7165_p2;
wire   [7:0] tmp_30_6_fu_7135_p2;
wire   [7:0] tmp_30_5_fu_7105_p2;
wire   [7:0] tmp_30_4_fu_7075_p2;
wire   [7:0] tmp_30_3_fu_7045_p2;
wire   [7:0] tmp_30_2_fu_7015_p2;
wire   [7:0] tmp_30_1_fu_6985_p2;
wire   [7:0] tmp_11_fu_6955_p2;
wire   [7:0] tmp_25_10_fu_6689_p2;
wire   [7:0] tmp_25_s_fu_6659_p2;
wire   [7:0] tmp_25_9_fu_6629_p2;
wire   [7:0] tmp_25_8_fu_6599_p2;
wire   [7:0] tmp_25_7_fu_6569_p2;
wire   [7:0] tmp_25_6_fu_6539_p2;
wire   [7:0] tmp_25_5_fu_6509_p2;
wire   [7:0] tmp_25_4_fu_6479_p2;
wire   [7:0] tmp_25_3_fu_6449_p2;
wire   [7:0] tmp_25_2_fu_6419_p2;
wire   [7:0] tmp_25_1_fu_6389_p2;
wire   [7:0] tmp_7_fu_6359_p2;
wire   [7:0] tmp_20_10_fu_6093_p2;
wire   [7:0] tmp_20_s_fu_6063_p2;
wire   [7:0] tmp_20_9_fu_6033_p2;
wire   [7:0] tmp_20_8_fu_6003_p2;
wire   [7:0] tmp_20_7_fu_5973_p2;
wire   [7:0] tmp_20_6_fu_5943_p2;
wire   [7:0] tmp_20_5_fu_5913_p2;
wire   [7:0] tmp_20_4_fu_5883_p2;
wire   [7:0] tmp_20_3_fu_5853_p2;
wire   [7:0] tmp_20_2_fu_5823_p2;
wire   [7:0] tmp_20_1_fu_5793_p2;
wire   [7:0] tmp_3_fu_5763_p2;
wire   [7:0] tmp_38_10_fu_7892_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state36;
wire   [7:0] indvar_flatten_op_fu_5290_p2;
wire   [6:0] co_7_fu_5304_p2;
wire   [0:0] exitcond_fu_5334_p2;
wire   [0:0] not_exitcond_flatten_fu_5329_p2;
wire   [3:0] h_mid_fu_5310_p3;
wire   [0:0] exitcond5_mid_fu_5340_p2;
wire   [0:0] tmp_s_fu_5352_p2;
wire   [3:0] h_8_fu_5346_p2;
wire   [6:0] tmp_41_fu_5373_p3;
wire   [4:0] tmp_42_fu_5384_p3;
wire   [7:0] p_shl_cast_fu_5380_p1;
wire   [7:0] p_shl1_cast_fu_5391_p1;
wire   [7:0] w_cast_cast_fu_5401_p1;
wire   [7:0] tmp_144_fu_5395_p2;
wire   [7:0] tmp_145_fu_5404_p2;
wire   [6:0] tmp_146_fu_5523_p3;
wire   [4:0] tmp_147_fu_5535_p3;
wire   [7:0] p_shl3_cast_fu_5543_p1;
wire   [7:0] p_shl2_cast_fu_5531_p1;
wire   [7:0] w2_cast_cast_fu_5567_p1;
wire   [7:0] tmp_152_fu_5571_p2;
wire   [9:0] tmp_157_fu_5632_p3;
wire   [7:0] tmp_158_fu_5644_p3;
wire   [10:0] p_shl6_cast_fu_5640_p1;
wire   [10:0] p_shl7_cast_fu_5652_p1;
wire   [10:0] tmp_159_fu_5656_p2;
wire   [10:0] tmp_160_fu_5662_p2;
wire   [13:0] tmp_43_fu_5667_p3;
wire   [11:0] tmp_44_fu_5679_p3;
wire   [14:0] p_shl4_cast_fu_5675_p1;
wire   [14:0] p_shl5_cast_fu_5687_p1;
wire   [14:0] tmp_161_fu_5691_p2;
wire   [14:0] tmp_162_fu_5697_p2;
wire   [6:0] tmp_163_fu_5707_p2;
wire   [6:0] tmp_164_fu_5712_p2;
wire   [7:0] tmp_45_fu_5759_p1;
wire   [7:0] tmp_46_fu_5770_p1;
wire   [7:0] tmp_47_fu_5789_p1;
wire   [7:0] tmp_48_fu_5800_p1;
wire   [7:0] tmp_49_fu_5819_p1;
wire   [7:0] tmp_50_fu_5830_p1;
wire   [7:0] tmp_51_fu_5849_p1;
wire   [7:0] tmp_52_fu_5860_p1;
wire   [7:0] tmp_53_fu_5879_p1;
wire   [7:0] tmp_54_fu_5890_p1;
wire   [7:0] tmp_55_fu_5909_p1;
wire   [7:0] tmp_56_fu_5920_p1;
wire   [7:0] tmp_57_fu_5939_p1;
wire   [7:0] tmp_58_fu_5950_p1;
wire   [7:0] tmp_59_fu_5969_p1;
wire   [7:0] tmp_60_fu_5980_p1;
wire   [7:0] tmp_61_fu_5999_p1;
wire   [7:0] tmp_62_fu_6010_p1;
wire   [7:0] tmp_63_fu_6029_p1;
wire   [7:0] tmp_64_fu_6040_p1;
wire   [7:0] tmp_65_fu_6059_p1;
wire   [7:0] tmp_66_fu_6070_p1;
wire   [7:0] tmp_67_fu_6089_p1;
wire   [7:0] tmp_68_fu_6100_p1;
wire   [6:0] tmp_149_fu_6119_p3;
wire   [4:0] tmp_150_fu_6131_p3;
wire   [7:0] p_shl9_cast_fu_6139_p1;
wire   [7:0] p_shl8_cast_fu_6127_p1;
wire   [7:0] w5_cast_cast_fu_6163_p1;
wire   [7:0] tmp_156_fu_6167_p2;
wire   [9:0] tmp_169_fu_6228_p3;
wire   [7:0] tmp_170_fu_6240_p3;
wire   [10:0] p_shl12_cast_fu_6236_p1;
wire   [10:0] p_shl13_cast_fu_6248_p1;
wire   [10:0] tmp_171_fu_6252_p2;
wire   [10:0] tmp_172_fu_6258_p2;
wire   [13:0] tmp_69_fu_6263_p3;
wire   [11:0] tmp_70_fu_6275_p3;
wire   [14:0] p_shl10_cast_fu_6271_p1;
wire   [14:0] p_shl11_cast_fu_6283_p1;
wire   [14:0] tmp_173_fu_6287_p2;
wire   [14:0] tmp_174_fu_6293_p2;
wire   [6:0] tmp_175_fu_6303_p2;
wire   [6:0] tmp_176_fu_6308_p2;
wire   [7:0] tmp_71_fu_6355_p1;
wire   [7:0] tmp_72_fu_6366_p1;
wire   [7:0] tmp_73_fu_6385_p1;
wire   [7:0] tmp_74_fu_6396_p1;
wire   [7:0] tmp_75_fu_6415_p1;
wire   [7:0] tmp_76_fu_6426_p1;
wire   [7:0] tmp_77_fu_6445_p1;
wire   [7:0] tmp_78_fu_6456_p1;
wire   [7:0] tmp_79_fu_6475_p1;
wire   [7:0] tmp_80_fu_6486_p1;
wire   [7:0] tmp_81_fu_6505_p1;
wire   [7:0] tmp_82_fu_6516_p1;
wire   [7:0] tmp_83_fu_6535_p1;
wire   [7:0] tmp_84_fu_6546_p1;
wire   [7:0] tmp_85_fu_6565_p1;
wire   [7:0] tmp_86_fu_6576_p1;
wire   [7:0] tmp_87_fu_6595_p1;
wire   [7:0] tmp_88_fu_6606_p1;
wire   [7:0] tmp_89_fu_6625_p1;
wire   [7:0] tmp_90_fu_6636_p1;
wire   [7:0] tmp_91_fu_6655_p1;
wire   [7:0] tmp_92_fu_6666_p1;
wire   [7:0] tmp_93_fu_6685_p1;
wire   [7:0] tmp_94_fu_6696_p1;
wire   [6:0] tmp_153_fu_6715_p3;
wire   [4:0] tmp_154_fu_6727_p3;
wire   [7:0] p_shl15_cast_fu_6735_p1;
wire   [7:0] p_shl14_cast_fu_6723_p1;
wire   [7:0] w9_cast8_cast_fu_6759_p1;
wire   [7:0] tmp_168_fu_6763_p2;
wire   [9:0] tmp_178_fu_6824_p3;
wire   [7:0] tmp_179_fu_6836_p3;
wire   [10:0] p_shl18_cast_fu_6832_p1;
wire   [10:0] p_shl19_cast_fu_6844_p1;
wire   [10:0] tmp_180_fu_6848_p2;
wire   [10:0] tmp_181_fu_6854_p2;
wire   [13:0] tmp_95_fu_6859_p3;
wire   [11:0] tmp_96_fu_6871_p3;
wire   [14:0] p_shl16_cast_fu_6867_p1;
wire   [14:0] p_shl17_cast_fu_6879_p1;
wire   [14:0] tmp_182_fu_6883_p2;
wire   [14:0] tmp_183_fu_6889_p2;
wire   [6:0] tmp_184_fu_6899_p2;
wire   [6:0] tmp_185_fu_6904_p2;
wire   [7:0] tmp_100_fu_6951_p1;
wire   [7:0] tmp_101_fu_6962_p1;
wire   [7:0] tmp_102_fu_6981_p1;
wire   [7:0] tmp_103_fu_6992_p1;
wire   [7:0] tmp_104_fu_7011_p1;
wire   [7:0] tmp_105_fu_7022_p1;
wire   [7:0] tmp_106_fu_7041_p1;
wire   [7:0] tmp_107_fu_7052_p1;
wire   [7:0] tmp_108_fu_7071_p1;
wire   [7:0] tmp_109_fu_7082_p1;
wire   [7:0] tmp_110_fu_7101_p1;
wire   [7:0] tmp_111_fu_7112_p1;
wire   [7:0] tmp_112_fu_7131_p1;
wire   [7:0] tmp_113_fu_7142_p1;
wire   [7:0] tmp_114_fu_7161_p1;
wire   [7:0] tmp_115_fu_7172_p1;
wire   [7:0] tmp_116_fu_7191_p1;
wire   [7:0] tmp_117_fu_7202_p1;
wire   [7:0] tmp_118_fu_7221_p1;
wire   [7:0] tmp_119_fu_7232_p1;
wire   [7:0] tmp_120_fu_7251_p1;
wire   [7:0] tmp_121_fu_7262_p1;
wire   [7:0] tmp_122_fu_7281_p1;
wire   [7:0] tmp_123_fu_7292_p1;
wire   [6:0] tmp_165_fu_7311_p3;
wire   [4:0] tmp_166_fu_7323_p3;
wire   [7:0] p_shl21_cast_fu_7331_p1;
wire   [7:0] p_shl20_cast_fu_7319_p1;
wire   [7:0] w10_cast5_cast_fu_7355_p1;
wire   [7:0] tmp_177_fu_7359_p2;
wire   [9:0] tmp_189_fu_7420_p3;
wire   [7:0] tmp_190_fu_7432_p3;
wire   [10:0] p_shl24_cast_fu_7428_p1;
wire   [10:0] p_shl25_cast_fu_7440_p1;
wire   [10:0] tmp_191_fu_7444_p2;
wire   [10:0] tmp_192_fu_7450_p2;
wire   [13:0] tmp_124_fu_7455_p3;
wire   [11:0] tmp_125_fu_7467_p3;
wire   [14:0] p_shl22_cast_fu_7463_p1;
wire   [14:0] p_shl23_cast_fu_7475_p1;
wire   [14:0] tmp_193_fu_7479_p2;
wire   [14:0] tmp_194_fu_7485_p2;
wire   [6:0] tmp_195_fu_7495_p2;
wire   [6:0] tmp_196_fu_7500_p2;
wire   [7:0] tmp_126_fu_7547_p1;
wire   [7:0] tmp_127_fu_7558_p1;
wire   [7:0] tmp_128_fu_7577_p1;
wire   [7:0] tmp_129_fu_7588_p1;
wire   [7:0] tmp_130_fu_7607_p1;
wire   [7:0] tmp_131_fu_7618_p1;
wire   [7:0] tmp_132_fu_7637_p1;
wire   [7:0] tmp_133_fu_7648_p1;
wire   [7:0] tmp_134_fu_7667_p1;
wire   [7:0] tmp_135_fu_7678_p1;
wire   [7:0] tmp_136_fu_7697_p1;
wire   [7:0] tmp_137_fu_7708_p1;
wire   [7:0] tmp_138_fu_7727_p1;
wire   [7:0] tmp_139_fu_7738_p1;
wire   [7:0] tmp_140_fu_7757_p1;
wire   [7:0] tmp_141_fu_7768_p1;
wire   [7:0] tmp_142_fu_7787_p1;
wire   [7:0] tmp_143_fu_7798_p1;
wire   [7:0] tmp_197_fu_7817_p1;
wire   [7:0] tmp_198_fu_7828_p1;
wire   [7:0] tmp_199_fu_7847_p1;
wire   [7:0] tmp_200_fu_7858_p1;
wire   [7:0] tmp_201_fu_7877_p1;
wire   [7:0] tmp_202_fu_7888_p1;
wire   [7:0] indvar_flatten21_op_fu_7917_p2;
wire   [0:0] exitcond12_fu_7949_p2;
wire   [0:0] not_exitcond_flatten_2_fu_7944_p2;
wire   [6:0] co_8_fu_7931_p2;
wire   [3:0] h11_mid_fu_7937_p3;
wire   [0:0] exitcond_mid_fu_7955_p2;
wire   [0:0] tmp_186_fu_7974_p2;
wire   [3:0] h_13_fu_7968_p2;
wire   [6:0] tmp_97_fu_7995_p3;
wire   [4:0] tmp_98_fu_8006_p3;
wire   [7:0] p_shl26_cast_fu_8002_p1;
wire   [7:0] p_shl27_cast_fu_8013_p1;
wire   [7:0] w12_cast1_cast_fu_8023_p1;
wire   [7:0] tmp_187_fu_8017_p2;
wire   [7:0] tmp_188_fu_8026_p2;
wire   [7:0] tmp_2_fu_8137_p98;
wire    ap_CS_fsm_state46;
reg   [40:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

MUL_DP grp_MUL_DP_fu_5076(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5076_a_V),
    .b_V(grp_MUL_DP_fu_5076_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5076_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5076_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5076_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5085(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5085_a_V),
    .b_V(grp_MUL_DP_fu_5085_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5085_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5085_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5085_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5094(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5094_a_V),
    .b_V(grp_MUL_DP_fu_5094_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5094_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5094_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5094_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5103(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5103_a_V),
    .b_V(grp_MUL_DP_fu_5103_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5103_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5103_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5103_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5112_a_V),
    .b_V(grp_MUL_DP_fu_5112_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5112_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5112_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5112_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5121(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5121_a_V),
    .b_V(grp_MUL_DP_fu_5121_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5121_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5121_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5121_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5130(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5130_a_V),
    .b_V(grp_MUL_DP_fu_5130_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5130_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5130_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5130_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5139(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5139_a_V),
    .b_V(grp_MUL_DP_fu_5139_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5139_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5139_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5139_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5148_a_V),
    .b_V(grp_MUL_DP_fu_5148_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5148_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5148_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5148_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5157(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5157_a_V),
    .b_V(grp_MUL_DP_fu_5157_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5157_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5157_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5157_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5166_a_V),
    .b_V(grp_MUL_DP_fu_5166_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5166_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5166_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5166_ap_ce)
);

MUL_DP grp_MUL_DP_fu_5175(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(grp_MUL_DP_fu_5175_a_V),
    .b_V(grp_MUL_DP_fu_5175_b_V),
    .w_V(reg_5256),
    .ap_return_0(grp_MUL_DP_fu_5175_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_5175_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_5175_ap_ce)
);

ShuffleNetV2_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_g8j_U715(
    .din1(ShuffleConvs_2_Downs_95_q0),
    .din2(ShuffleConvs_2_Downs_94_q0),
    .din3(ShuffleConvs_2_Downs_83_q0),
    .din4(ShuffleConvs_2_Downs_72_q0),
    .din5(ShuffleConvs_2_Downs_61_q0),
    .din6(ShuffleConvs_2_Downs_50_q0),
    .din7(ShuffleConvs_2_Downs_39_q0),
    .din8(ShuffleConvs_2_Downs_28_q0),
    .din9(ShuffleConvs_2_Downs_17_q0),
    .din10(ShuffleConvs_2_Downs_6_q0),
    .din11(ShuffleConvs_2_Downs_93_q0),
    .din12(ShuffleConvs_2_Downs_92_q0),
    .din13(ShuffleConvs_2_Downs_91_q0),
    .din14(ShuffleConvs_2_Downs_90_q0),
    .din15(ShuffleConvs_2_Downs_89_q0),
    .din16(ShuffleConvs_2_Downs_88_q0),
    .din17(ShuffleConvs_2_Downs_87_q0),
    .din18(ShuffleConvs_2_Downs_86_q0),
    .din19(ShuffleConvs_2_Downs_85_q0),
    .din20(ShuffleConvs_2_Downs_84_q0),
    .din21(ShuffleConvs_2_Downs_82_q0),
    .din22(ShuffleConvs_2_Downs_81_q0),
    .din23(ShuffleConvs_2_Downs_80_q0),
    .din24(ShuffleConvs_2_Downs_79_q0),
    .din25(ShuffleConvs_2_Downs_78_q0),
    .din26(ShuffleConvs_2_Downs_77_q0),
    .din27(ShuffleConvs_2_Downs_76_q0),
    .din28(ShuffleConvs_2_Downs_75_q0),
    .din29(ShuffleConvs_2_Downs_74_q0),
    .din30(ShuffleConvs_2_Downs_73_q0),
    .din31(ShuffleConvs_2_Downs_71_q0),
    .din32(ShuffleConvs_2_Downs_70_q0),
    .din33(ShuffleConvs_2_Downs_69_q0),
    .din34(ShuffleConvs_2_Downs_68_q0),
    .din35(ShuffleConvs_2_Downs_67_q0),
    .din36(ShuffleConvs_2_Downs_66_q0),
    .din37(ShuffleConvs_2_Downs_65_q0),
    .din38(ShuffleConvs_2_Downs_64_q0),
    .din39(ShuffleConvs_2_Downs_63_q0),
    .din40(ShuffleConvs_2_Downs_62_q0),
    .din41(ShuffleConvs_2_Downs_60_q0),
    .din42(ShuffleConvs_2_Downs_59_q0),
    .din43(ShuffleConvs_2_Downs_58_q0),
    .din44(ShuffleConvs_2_Downs_57_q0),
    .din45(ShuffleConvs_2_Downs_56_q0),
    .din46(ShuffleConvs_2_Downs_55_q0),
    .din47(ShuffleConvs_2_Downs_54_q0),
    .din48(ShuffleConvs_2_Downs_53_q0),
    .din49(ShuffleConvs_2_Downs_52_q0),
    .din50(ShuffleConvs_2_Downs_51_q0),
    .din51(ShuffleConvs_2_Downs_49_q0),
    .din52(ShuffleConvs_2_Downs_48_q0),
    .din53(ShuffleConvs_2_Downs_47_q0),
    .din54(ShuffleConvs_2_Downs_46_q0),
    .din55(ShuffleConvs_2_Downs_45_q0),
    .din56(ShuffleConvs_2_Downs_44_q0),
    .din57(ShuffleConvs_2_Downs_43_q0),
    .din58(ShuffleConvs_2_Downs_42_q0),
    .din59(ShuffleConvs_2_Downs_41_q0),
    .din60(ShuffleConvs_2_Downs_40_q0),
    .din61(ShuffleConvs_2_Downs_38_q0),
    .din62(ShuffleConvs_2_Downs_37_q0),
    .din63(ShuffleConvs_2_Downs_36_q0),
    .din64(ShuffleConvs_2_Downs_35_q0),
    .din65(ShuffleConvs_2_Downs_34_q0),
    .din66(ShuffleConvs_2_Downs_33_q0),
    .din67(ShuffleConvs_2_Downs_32_q0),
    .din68(ShuffleConvs_2_Downs_31_q0),
    .din69(ShuffleConvs_2_Downs_30_q0),
    .din70(ShuffleConvs_2_Downs_29_q0),
    .din71(ShuffleConvs_2_Downs_27_q0),
    .din72(ShuffleConvs_2_Downs_26_q0),
    .din73(ShuffleConvs_2_Downs_25_q0),
    .din74(ShuffleConvs_2_Downs_24_q0),
    .din75(ShuffleConvs_2_Downs_23_q0),
    .din76(ShuffleConvs_2_Downs_22_q0),
    .din77(ShuffleConvs_2_Downs_21_q0),
    .din78(ShuffleConvs_2_Downs_20_q0),
    .din79(ShuffleConvs_2_Downs_19_q0),
    .din80(ShuffleConvs_2_Downs_18_q0),
    .din81(ShuffleConvs_2_Downs_16_q0),
    .din82(ShuffleConvs_2_Downs_15_q0),
    .din83(ShuffleConvs_2_Downs_14_q0),
    .din84(ShuffleConvs_2_Downs_13_q0),
    .din85(ShuffleConvs_2_Downs_12_q0),
    .din86(ShuffleConvs_2_Downs_11_q0),
    .din87(ShuffleConvs_2_Downs_10_q0),
    .din88(ShuffleConvs_2_Downs_9_q0),
    .din89(ShuffleConvs_2_Downs_8_q0),
    .din90(ShuffleConvs_2_Downs_7_q0),
    .din91(ShuffleConvs_2_Downs_5_q0),
    .din92(ShuffleConvs_2_Downs_4_q0),
    .din93(ShuffleConvs_2_Downs_3_q0),
    .din94(ShuffleConvs_2_Downs_2_q0),
    .din95(ShuffleConvs_2_Downs_1_q0),
    .din96(ShuffleConvs_2_Downs_q0),
    .din97(ap_reg_pp1_iter2_co9_mid2_reg_9591),
    .dout(tmp_2_fu_8137_p98)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state42))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state42)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state42 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd0 == exitcond9_fu_6796_p2))) begin
        ci2_reg_4972 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        ci2_reg_4972 <= ci_3_reg_9264;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (1'd0 == exitcond10_fu_7392_p2))) begin
        ci3_reg_5007 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        ci3_reg_5007 <= ci_4_reg_9559;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond7_fu_6200_p2))) begin
        ci6_reg_4937 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ci6_reg_4937 <= ci_2_reg_8970;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond4_fu_5604_p2))) begin
        ci_reg_4902 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ci_reg_4902 <= ci_1_reg_8676;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
        co9_reg_5029 <= 7'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co9_reg_5029 <= co9_mid2_reg_9591;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0))) begin
        co_reg_4831 <= co_cast_mid2_v_reg_8364;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_4831 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
        h11_reg_5052 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h11_reg_5052 <= h11_cast2_mid2_reg_9603;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_4878 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond4_fu_5604_p2 == 1'd1))) begin
        h1_reg_4878 <= h_7_fu_5610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond1_fu_5553_p2))) begin
        h4_reg_4913 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond7_fu_6200_p2))) begin
        h4_reg_4913 <= h_9_fu_6206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond3_fu_6149_p2))) begin
        h8_reg_4948 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond9_fu_6796_p2))) begin
        h8_reg_4948 <= h_10_fu_6802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd1 == exitcond6_fu_6745_p2))) begin
        h9_reg_4983 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond10_fu_7392_p2))) begin
        h9_reg_4983 <= h_1_fu_7398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0))) begin
        h_reg_4854 <= h_cast_mid2_reg_8375;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_4854 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_5272_p2 == 1'd0))) begin
        indvar_flatten1_reg_4820 <= indvar_flatten_next1_fu_5278_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_4820 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
        indvar_flatten2_reg_5018 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_7899_p2))) begin
        indvar_flatten2_reg_5018 <= indvar_flatten_next3_fu_7905_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
        indvar_flatten3_reg_5041 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten3_fu_7899_p2))) begin
        indvar_flatten3_reg_5041 <= indvar_flatten_next2_fu_7923_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten1_fu_5272_p2 == 1'd0))) begin
        indvar_flatten_reg_4843 <= indvar_flatten_next_fu_5296_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_4843 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == exitcond2_fu_7341_p2))) begin
        w10_reg_4995 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state35) & (1'd1 == exitcond13_fu_7521_p2))) begin
        w10_reg_4995 <= w_13_fu_7533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
        w11_reg_5064 <= 4'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        w11_reg_5064 <= w_14_fu_8132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond1_fu_5553_p2))) begin
        w2_reg_4890 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond8_fu_5733_p2))) begin
        w2_reg_4890 <= w_8_fu_5745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond3_fu_6149_p2))) begin
        w5_reg_4925 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond5_fu_6329_p2))) begin
        w5_reg_4925 <= w_9_fu_6341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd0 == exitcond6_fu_6745_p2))) begin
        w9_reg_4960 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond11_fu_6925_p2))) begin
        w9_reg_4960 <= w_12_fu_6937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0))) begin
        w_reg_4866 <= w_7_fu_5510_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_4866 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ShuffleConvs_2_Downs_383_reg_8420 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_384_reg_8425 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_385_reg_8430 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_386_reg_8435 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_387_reg_8440 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_388_reg_8445 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_389_reg_8450 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_390_reg_8455 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_391_reg_8460 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_392_reg_8465 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_393_reg_8470 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_394_reg_8475 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_395_reg_8480 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_396_reg_8485 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_397_reg_8490 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_398_reg_8495 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_399_reg_8500 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_400_reg_8505 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_401_reg_8510 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_402_reg_8515 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_403_reg_8520 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_404_reg_8525 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_405_reg_8530 <= tmp_190_cast_fu_5576_p1;
        ShuffleConvs_2_Downs_406_reg_8535 <= tmp_190_cast_fu_5576_p1;
        w2_cast_cast1_reg_8410[3 : 0] <= w2_cast_cast1_fu_5559_p1[3 : 0];
        w2_cast_cast2_reg_8415[3 : 0] <= w2_cast_cast2_fu_5563_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ShuffleConvs_2_Downs_431_reg_8714 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_432_reg_8719 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_433_reg_8724 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_434_reg_8729 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_435_reg_8734 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_436_reg_8739 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_437_reg_8744 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_438_reg_8749 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_439_reg_8754 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_440_reg_8759 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_441_reg_8764 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_442_reg_8769 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_443_reg_8774 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_444_reg_8779 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_445_reg_8784 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_446_reg_8789 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_447_reg_8794 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_448_reg_8799 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_449_reg_8804 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_450_reg_8809 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_451_reg_8814 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_452_reg_8819 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_453_reg_8824 <= tmp_194_cast_fu_6172_p1;
        ShuffleConvs_2_Downs_454_reg_8829 <= tmp_194_cast_fu_6172_p1;
        w5_cast_cast1_reg_8704[3 : 0] <= w5_cast_cast1_fu_6155_p1[3 : 0];
        w5_cast_cast2_reg_8709[3 : 0] <= w5_cast_cast2_fu_6159_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ShuffleConvs_2_Downs_479_reg_9008 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_480_reg_9013 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_481_reg_9018 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_482_reg_9023 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_483_reg_9028 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_484_reg_9033 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_485_reg_9038 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_486_reg_9043 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_487_reg_9048 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_488_reg_9053 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_489_reg_9058 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_490_reg_9063 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_491_reg_9068 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_492_reg_9073 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_493_reg_9078 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_494_reg_9083 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_495_reg_9088 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_496_reg_9093 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_497_reg_9098 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_498_reg_9103 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_499_reg_9108 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_500_reg_9113 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_501_reg_9118 <= tmp_208_cast_fu_6768_p1;
        ShuffleConvs_2_Downs_502_reg_9123 <= tmp_208_cast_fu_6768_p1;
        w9_cast8_cast1_reg_8998[3 : 0] <= w9_cast8_cast1_fu_6751_p1[3 : 0];
        w9_cast8_cast2_reg_9003[3 : 0] <= w9_cast8_cast2_fu_6755_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ShuffleConvs_2_Downs_527_reg_9303 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_528_reg_9308 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_529_reg_9313 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_530_reg_9318 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_531_reg_9323 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_532_reg_9328 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_533_reg_9333 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_534_reg_9338 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_535_reg_9343 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_536_reg_9348 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_537_reg_9353 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_538_reg_9358 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_539_reg_9363 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_540_reg_9368 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_541_reg_9373 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_542_reg_9378 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_543_reg_9383 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_544_reg_9388 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_545_reg_9393 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_546_reg_9398 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_547_reg_9403 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_548_reg_9408 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_549_reg_9413 <= tmp_219_cast_fu_7364_p1;
        ShuffleConvs_2_Downs_550_reg_9418 <= tmp_219_cast_fu_7364_p1;
        w10_cast5_cast1_reg_9293[3 : 0] <= w10_cast5_cast1_fu_7347_p1[3 : 0];
        w10_cast5_cast2_reg_9298[3 : 0] <= w10_cast5_cast2_fu_7351_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569))) begin
        ShuffleConvs_2_Downs_575_reg_9610 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_576_reg_9616 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_577_reg_9622 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_578_reg_9628 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_579_reg_9634 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_580_reg_9640 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_581_reg_9646 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_582_reg_9652 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_583_reg_9658 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_584_reg_9664 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_585_reg_9670 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_586_reg_9676 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_587_reg_9682 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_588_reg_9688 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_589_reg_9694 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_590_reg_9700 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_591_reg_9706 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_592_reg_9712 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_593_reg_9718 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_594_reg_9724 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_595_reg_9730 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_596_reg_9736 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_597_reg_9742 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_598_reg_9748 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_599_reg_9754 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_600_reg_9760 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_601_reg_9766 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_602_reg_9772 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_603_reg_9778 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_604_reg_9784 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_605_reg_9790 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_606_reg_9796 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_607_reg_9802 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_608_reg_9808 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_609_reg_9814 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_610_reg_9820 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_611_reg_9826 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_612_reg_9832 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_613_reg_9838 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_614_reg_9844 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_615_reg_9850 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_616_reg_9856 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_617_reg_9862 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_618_reg_9868 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_619_reg_9874 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_620_reg_9880 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_621_reg_9886 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_622_reg_9892 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_623_reg_9898 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_624_reg_9904 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_625_reg_9910 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_626_reg_9916 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_627_reg_9922 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_628_reg_9928 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_629_reg_9934 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_630_reg_9940 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_631_reg_9946 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_632_reg_9952 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_633_reg_9958 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_634_reg_9964 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_635_reg_9970 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_636_reg_9976 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_637_reg_9982 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_638_reg_9988 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_639_reg_9994 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_640_reg_10000 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_641_reg_10006 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_642_reg_10012 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_643_reg_10018 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_644_reg_10024 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_645_reg_10030 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_646_reg_10036 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_647_reg_10042 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_648_reg_10048 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_649_reg_10054 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_650_reg_10060 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_651_reg_10066 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_652_reg_10072 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_653_reg_10078 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_654_reg_10084 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_655_reg_10090 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_656_reg_10096 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_657_reg_10102 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_658_reg_10108 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_659_reg_10114 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_660_reg_10120 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_661_reg_10126 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_662_reg_10132 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_663_reg_10138 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_664_reg_10144 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_665_reg_10150 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_666_reg_10156 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_667_reg_10162 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_668_reg_10168 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_669_reg_10174 <= tmp_234_cast_fu_8032_p1;
        ShuffleConvs_2_Downs_670_reg_10180 <= tmp_234_cast_fu_8032_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 <= exitcond_flatten1_reg_8342;
        exitcond_flatten1_reg_8342 <= exitcond_flatten1_fu_5272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten3_reg_9569 <= exitcond_flatten3_reg_9569;
        exitcond_flatten3_reg_9569 <= exitcond_flatten3_fu_7899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_co9_mid2_reg_9591 <= co9_mid2_reg_9591;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_1_reg_8676 <= ci_1_fu_5739_p2;
        input_V_addr_reg_8548 <= tmp_202_cast_fu_5702_p1;
        weight_0_V_addr_reg_8553 <= tmp_204_cast_fu_5717_p1;
        weight_10_V_addr_reg_8603 <= tmp_204_cast_fu_5717_p1;
        weight_11_V_addr_reg_8608 <= tmp_204_cast_fu_5717_p1;
        weight_1_V_addr_reg_8558 <= tmp_204_cast_fu_5717_p1;
        weight_2_V_addr_reg_8563 <= tmp_204_cast_fu_5717_p1;
        weight_3_V_addr_reg_8568 <= tmp_204_cast_fu_5717_p1;
        weight_48_V_addr_reg_8613 <= ci_cast_fu_5616_p1;
        weight_49_V_addr_reg_8618 <= ci_cast_fu_5616_p1;
        weight_4_V_addr_reg_8573 <= tmp_204_cast_fu_5717_p1;
        weight_50_V_addr_reg_8623 <= ci_cast_fu_5616_p1;
        weight_51_V_addr_reg_8628 <= ci_cast_fu_5616_p1;
        weight_52_V_addr_reg_8633 <= ci_cast_fu_5616_p1;
        weight_53_V_addr_reg_8638 <= ci_cast_fu_5616_p1;
        weight_54_V_addr_reg_8643 <= ci_cast_fu_5616_p1;
        weight_55_V_addr_reg_8648 <= ci_cast_fu_5616_p1;
        weight_56_V_addr_reg_8653 <= ci_cast_fu_5616_p1;
        weight_57_V_addr_reg_8658 <= ci_cast_fu_5616_p1;
        weight_58_V_addr_reg_8663 <= ci_cast_fu_5616_p1;
        weight_59_V_addr_reg_8668 <= ci_cast_fu_5616_p1;
        weight_5_V_addr_reg_8578 <= tmp_204_cast_fu_5717_p1;
        weight_6_V_addr_reg_8583 <= tmp_204_cast_fu_5717_p1;
        weight_7_V_addr_reg_8588 <= tmp_204_cast_fu_5717_p1;
        weight_8_V_addr_reg_8593 <= tmp_204_cast_fu_5717_p1;
        weight_9_V_addr_reg_8598 <= tmp_204_cast_fu_5717_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ci_2_reg_8970 <= ci_2_fu_6335_p2;
        input_V_addr_1_reg_8842 <= tmp_216_cast_fu_6298_p1;
        weight_12_V_addr_reg_8847 <= tmp_218_cast_fu_6313_p1;
        weight_13_V_addr_reg_8852 <= tmp_218_cast_fu_6313_p1;
        weight_14_V_addr_reg_8857 <= tmp_218_cast_fu_6313_p1;
        weight_15_V_addr_reg_8862 <= tmp_218_cast_fu_6313_p1;
        weight_16_V_addr_reg_8867 <= tmp_218_cast_fu_6313_p1;
        weight_17_V_addr_reg_8872 <= tmp_218_cast_fu_6313_p1;
        weight_18_V_addr_reg_8877 <= tmp_218_cast_fu_6313_p1;
        weight_19_V_addr_reg_8882 <= tmp_218_cast_fu_6313_p1;
        weight_20_V_addr_reg_8887 <= tmp_218_cast_fu_6313_p1;
        weight_21_V_addr_reg_8892 <= tmp_218_cast_fu_6313_p1;
        weight_22_V_addr_reg_8897 <= tmp_218_cast_fu_6313_p1;
        weight_23_V_addr_reg_8902 <= tmp_218_cast_fu_6313_p1;
        weight_60_V_addr_reg_8907 <= ci6_cast_fu_6212_p1;
        weight_61_V_addr_reg_8912 <= ci6_cast_fu_6212_p1;
        weight_62_V_addr_reg_8917 <= ci6_cast_fu_6212_p1;
        weight_63_V_addr_reg_8922 <= ci6_cast_fu_6212_p1;
        weight_64_V_addr_reg_8927 <= ci6_cast_fu_6212_p1;
        weight_65_V_addr_reg_8932 <= ci6_cast_fu_6212_p1;
        weight_66_V_addr_reg_8937 <= ci6_cast_fu_6212_p1;
        weight_67_V_addr_reg_8942 <= ci6_cast_fu_6212_p1;
        weight_68_V_addr_reg_8947 <= ci6_cast_fu_6212_p1;
        weight_69_V_addr_reg_8952 <= ci6_cast_fu_6212_p1;
        weight_70_V_addr_reg_8957 <= ci6_cast_fu_6212_p1;
        weight_71_V_addr_reg_8962 <= ci6_cast_fu_6212_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ci_3_reg_9264 <= ci_3_fu_6931_p2;
        input_V_addr_2_reg_9136 <= tmp_227_cast_fu_6894_p1;
        weight_24_V_addr_reg_9141 <= tmp_229_cast_fu_6909_p1;
        weight_25_V_addr_reg_9146 <= tmp_229_cast_fu_6909_p1;
        weight_26_V_addr_reg_9151 <= tmp_229_cast_fu_6909_p1;
        weight_27_V_addr_reg_9156 <= tmp_229_cast_fu_6909_p1;
        weight_28_V_addr_reg_9161 <= tmp_229_cast_fu_6909_p1;
        weight_29_V_addr_reg_9166 <= tmp_229_cast_fu_6909_p1;
        weight_30_V_addr_reg_9171 <= tmp_229_cast_fu_6909_p1;
        weight_31_V_addr_reg_9176 <= tmp_229_cast_fu_6909_p1;
        weight_32_V_addr_reg_9181 <= tmp_229_cast_fu_6909_p1;
        weight_33_V_addr_reg_9186 <= tmp_229_cast_fu_6909_p1;
        weight_34_V_addr_reg_9191 <= tmp_229_cast_fu_6909_p1;
        weight_35_V_addr_reg_9196 <= tmp_229_cast_fu_6909_p1;
        weight_72_V_addr_reg_9201 <= ci2_cast7_fu_6808_p1;
        weight_73_V_addr_reg_9206 <= ci2_cast7_fu_6808_p1;
        weight_74_V_addr_reg_9211 <= ci2_cast7_fu_6808_p1;
        weight_75_V_addr_reg_9216 <= ci2_cast7_fu_6808_p1;
        weight_76_V_addr_reg_9221 <= ci2_cast7_fu_6808_p1;
        weight_77_V_addr_reg_9226 <= ci2_cast7_fu_6808_p1;
        weight_78_V_addr_reg_9231 <= ci2_cast7_fu_6808_p1;
        weight_79_V_addr_reg_9236 <= ci2_cast7_fu_6808_p1;
        weight_80_V_addr_reg_9241 <= ci2_cast7_fu_6808_p1;
        weight_81_V_addr_reg_9246 <= ci2_cast7_fu_6808_p1;
        weight_82_V_addr_reg_9251 <= ci2_cast7_fu_6808_p1;
        weight_83_V_addr_reg_9256 <= ci2_cast7_fu_6808_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ci_4_reg_9559 <= ci_4_fu_7527_p2;
        input_V_addr_3_reg_9431 <= tmp_242_cast_fu_7490_p1;
        weight_36_V_addr_reg_9436 <= tmp_244_cast_fu_7505_p1;
        weight_37_V_addr_reg_9441 <= tmp_244_cast_fu_7505_p1;
        weight_38_V_addr_reg_9446 <= tmp_244_cast_fu_7505_p1;
        weight_39_V_addr_reg_9451 <= tmp_244_cast_fu_7505_p1;
        weight_40_V_addr_reg_9456 <= tmp_244_cast_fu_7505_p1;
        weight_41_V_addr_reg_9461 <= tmp_244_cast_fu_7505_p1;
        weight_42_V_addr_reg_9466 <= tmp_244_cast_fu_7505_p1;
        weight_43_V_addr_reg_9471 <= tmp_244_cast_fu_7505_p1;
        weight_44_V_addr_reg_9476 <= tmp_244_cast_fu_7505_p1;
        weight_45_V_addr_reg_9481 <= tmp_244_cast_fu_7505_p1;
        weight_46_V_addr_reg_9486 <= tmp_244_cast_fu_7505_p1;
        weight_47_V_addr_reg_9491 <= tmp_244_cast_fu_7505_p1;
        weight_84_V_addr_reg_9496 <= ci3_cast4_fu_7404_p1;
        weight_85_V_addr_reg_9501 <= ci3_cast4_fu_7404_p1;
        weight_86_V_addr_reg_9506 <= ci3_cast4_fu_7404_p1;
        weight_87_V_addr_reg_9511 <= ci3_cast4_fu_7404_p1;
        weight_88_V_addr_reg_9516 <= ci3_cast4_fu_7404_p1;
        weight_89_V_addr_reg_9521 <= ci3_cast4_fu_7404_p1;
        weight_90_V_addr_reg_9526 <= ci3_cast4_fu_7404_p1;
        weight_91_V_addr_reg_9531 <= ci3_cast4_fu_7404_p1;
        weight_92_V_addr_reg_9536 <= ci3_cast4_fu_7404_p1;
        weight_93_V_addr_reg_9541 <= ci3_cast4_fu_7404_p1;
        weight_94_V_addr_reg_9546 <= ci3_cast4_fu_7404_p1;
        weight_95_V_addr_reg_9551 <= ci3_cast4_fu_7404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten3_reg_9569))) begin
        co9_mid2_reg_9591 <= co9_mid2_fu_7961_p3;
        h11_cast2_mid2_reg_9603 <= h11_cast2_mid2_fu_7987_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten1_reg_8342 == 1'd0))) begin
        co_cast_mid2_v_reg_8364 <= co_cast_mid2_v_fu_5317_p3;
        h_cast_mid2_reg_8375 <= h_cast_mid2_fu_5365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_fu_7899_p2))) begin
        exitcond_flatten2_reg_9578 <= exitcond_flatten2_fu_7911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_fu_5272_p2 == 1'd0))) begin
        exitcond_flatten_reg_8351 <= exitcond_flatten_fu_5284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h1_cast_cast1_reg_8392[3 : 0] <= h1_cast_cast1_fu_5515_p1[3 : 0];
        h1_cast_cast_reg_8397[3 : 0] <= h1_cast_cast_fu_5519_p1[3 : 0];
        tmp_148_reg_8402[7 : 1] <= tmp_148_fu_5547_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h4_cast_cast1_reg_8686[3 : 0] <= h4_cast_cast1_fu_6111_p1[3 : 0];
        h4_cast_cast_reg_8691[3 : 0] <= h4_cast_cast_fu_6115_p1[3 : 0];
        tmp_151_reg_8696[7 : 1] <= tmp_151_fu_6143_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        h8_cast9_cast1_reg_8980[3 : 0] <= h8_cast9_cast1_fu_6707_p1[3 : 0];
        h8_cast9_cast_reg_8985[3 : 0] <= h8_cast9_cast_fu_6711_p1[3 : 0];
        tmp_155_reg_8990[7 : 1] <= tmp_155_fu_6739_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        h9_cast6_cast1_reg_9274[3 : 0] <= h9_cast6_cast1_fu_7303_p1[3 : 0];
        h9_cast6_cast_reg_9279[3 : 0] <= h9_cast6_cast_fu_7307_p1[3 : 0];
        tmp_167_reg_9284[7 : 1] <= tmp_167_fu_7335_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_5256 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten3_reg_9569))) begin
        w12_mid2_reg_9597 <= w12_mid2_fu_7979_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten1_reg_8342 == 1'd0))) begin
        w_mid2_reg_8369 <= w_mid2_fu_5357_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_10_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_10_address0 = ShuffleConvs_2_Downs_538_reg_9358;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_10_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_10_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_10_d0 = tmp_38_2_fu_7622_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_10_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd86)))) begin
        ShuffleConvs_2_Downs_10_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd86))) begin
        ShuffleConvs_2_Downs_10_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_11_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_11_address0 = ShuffleConvs_2_Downs_532_reg_9328;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_11_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_11_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_11_d0 = tmp_38_1_fu_7592_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_11_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd85)))) begin
        ShuffleConvs_2_Downs_11_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd85))) begin
        ShuffleConvs_2_Downs_11_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_12_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_12_address0 = ShuffleConvs_2_Downs_533_reg_9333;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_12_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_12_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_12_d0 = tmp_18_fu_7562_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_12_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd84)))) begin
        ShuffleConvs_2_Downs_12_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd84))) begin
        ShuffleConvs_2_Downs_12_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_13_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_13_address0 = ShuffleConvs_2_Downs_496_reg_9093;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_13_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_13_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_13_d0 = tmp_32_10_fu_7296_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_13_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_13_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd83)))) begin
        ShuffleConvs_2_Downs_13_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd83))) begin
        ShuffleConvs_2_Downs_13_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_14_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_14_address0 = ShuffleConvs_2_Downs_500_reg_9113;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_14_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_14_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_14_d0 = tmp_32_s_fu_7266_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_14_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_14_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd82)))) begin
        ShuffleConvs_2_Downs_14_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd82))) begin
        ShuffleConvs_2_Downs_14_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_15_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_15_address0 = ShuffleConvs_2_Downs_490_reg_9063;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_15_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_15_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_15_d0 = tmp_32_9_fu_7236_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_15_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd81)))) begin
        ShuffleConvs_2_Downs_15_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd81))) begin
        ShuffleConvs_2_Downs_15_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_16_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_16_address0 = ShuffleConvs_2_Downs_495_reg_9088;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_16_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_16_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_16_d0 = tmp_32_8_fu_7206_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_16_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_16_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd80)))) begin
        ShuffleConvs_2_Downs_16_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd80))) begin
        ShuffleConvs_2_Downs_16_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_17_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_17_address0 = ShuffleConvs_2_Downs_399_reg_8500;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_17_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_17_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_17_d0 = tmp_20_8_fu_6003_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_17_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_17_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd8)))) begin
        ShuffleConvs_2_Downs_17_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd8))) begin
        ShuffleConvs_2_Downs_17_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_18_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_18_address0 = ShuffleConvs_2_Downs_494_reg_9083;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_18_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_18_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_18_d0 = tmp_32_7_fu_7176_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_18_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_18_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd79)))) begin
        ShuffleConvs_2_Downs_18_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd79))) begin
        ShuffleConvs_2_Downs_18_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_19_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_19_address0 = ShuffleConvs_2_Downs_486_reg_9043;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_19_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_19_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_19_d0 = tmp_32_6_fu_7146_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_19_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_19_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd78)))) begin
        ShuffleConvs_2_Downs_19_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd78))) begin
        ShuffleConvs_2_Downs_19_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_1_address0 = ShuffleConvs_2_Downs_545_reg_9393;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_1_d0 = tmp_38_s_fu_7862_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd94)))) begin
        ShuffleConvs_2_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd94))) begin
        ShuffleConvs_2_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_20_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_20_address0 = ShuffleConvs_2_Downs_489_reg_9058;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_20_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_20_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_20_d0 = tmp_32_5_fu_7116_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_20_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_20_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd77)))) begin
        ShuffleConvs_2_Downs_20_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd77))) begin
        ShuffleConvs_2_Downs_20_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_21_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_21_address0 = ShuffleConvs_2_Downs_493_reg_9078;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_21_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_21_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_21_d0 = tmp_32_4_fu_7086_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_21_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_21_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd76)))) begin
        ShuffleConvs_2_Downs_21_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd76))) begin
        ShuffleConvs_2_Downs_21_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_22_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_22_address0 = ShuffleConvs_2_Downs_492_reg_9073;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_22_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_22_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_22_d0 = tmp_32_3_fu_7056_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_22_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd75)))) begin
        ShuffleConvs_2_Downs_22_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd75))) begin
        ShuffleConvs_2_Downs_22_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_23_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_23_address0 = ShuffleConvs_2_Downs_488_reg_9053;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_23_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_23_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_23_d0 = tmp_32_2_fu_7026_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_23_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd74)))) begin
        ShuffleConvs_2_Downs_23_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd74))) begin
        ShuffleConvs_2_Downs_23_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_24_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_24_address0 = ShuffleConvs_2_Downs_487_reg_9048;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_24_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_24_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_24_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_24_d0 = tmp_32_1_fu_6996_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_24_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_24_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd73)))) begin
        ShuffleConvs_2_Downs_24_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd73))) begin
        ShuffleConvs_2_Downs_24_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_25_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_25_address0 = ShuffleConvs_2_Downs_491_reg_9068;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_25_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_25_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_25_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_25_d0 = tmp_14_fu_6966_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_25_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_25_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd72)))) begin
        ShuffleConvs_2_Downs_25_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd72))) begin
        ShuffleConvs_2_Downs_25_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_26_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_26_address0 = ShuffleConvs_2_Downs_452_reg_8819;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_26_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_26_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_26_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_26_d0 = tmp_27_10_fu_6700_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_26_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_26_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd71)))) begin
        ShuffleConvs_2_Downs_26_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd71))) begin
        ShuffleConvs_2_Downs_26_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_27_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_27_address0 = ShuffleConvs_2_Downs_454_reg_8829;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_27_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_27_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_27_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_27_d0 = tmp_27_s_fu_6670_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_27_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_27_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd70)))) begin
        ShuffleConvs_2_Downs_27_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd70))) begin
        ShuffleConvs_2_Downs_27_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_28_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_28_address0 = ShuffleConvs_2_Downs_398_reg_8495;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_28_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_28_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_28_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_28_d0 = tmp_20_7_fu_5973_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_28_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_28_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd7)))) begin
        ShuffleConvs_2_Downs_28_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd7))) begin
        ShuffleConvs_2_Downs_28_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_29_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_29_address0 = ShuffleConvs_2_Downs_453_reg_8824;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_29_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_29_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_29_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_29_d0 = tmp_27_9_fu_6640_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_29_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_29_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd69)))) begin
        ShuffleConvs_2_Downs_29_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd69))) begin
        ShuffleConvs_2_Downs_29_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_2_address0 = ShuffleConvs_2_Downs_534_reg_9338;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_2_d0 = tmp_38_9_fu_7832_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd93)))) begin
        ShuffleConvs_2_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd93))) begin
        ShuffleConvs_2_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_30_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_30_address0 = ShuffleConvs_2_Downs_451_reg_8814;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_30_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_30_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_30_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_30_d0 = tmp_27_8_fu_6610_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_30_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_30_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd68)))) begin
        ShuffleConvs_2_Downs_30_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd68))) begin
        ShuffleConvs_2_Downs_30_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_31_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_31_address0 = ShuffleConvs_2_Downs_449_reg_8804;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_31_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_31_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_31_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_31_d0 = tmp_27_7_fu_6580_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_31_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_31_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd67)))) begin
        ShuffleConvs_2_Downs_31_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd67))) begin
        ShuffleConvs_2_Downs_31_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_32_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_32_address0 = ShuffleConvs_2_Downs_450_reg_8809;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_32_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_32_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_32_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_32_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_32_d0 = tmp_27_6_fu_6550_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_32_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_32_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd66)))) begin
        ShuffleConvs_2_Downs_32_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd66))) begin
        ShuffleConvs_2_Downs_32_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_32_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_33_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_33_address0 = ShuffleConvs_2_Downs_448_reg_8799;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_33_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_33_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_33_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_33_d0 = tmp_27_5_fu_6520_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_33_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_33_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd65)))) begin
        ShuffleConvs_2_Downs_33_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd65))) begin
        ShuffleConvs_2_Downs_33_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_33_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_34_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_34_address0 = ShuffleConvs_2_Downs_447_reg_8794;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_34_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_34_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_34_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_34_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_34_d0 = tmp_27_4_fu_6490_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_34_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_34_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd64)))) begin
        ShuffleConvs_2_Downs_34_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd64))) begin
        ShuffleConvs_2_Downs_34_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_34_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_35_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_35_address0 = ShuffleConvs_2_Downs_446_reg_8789;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_35_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_35_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_35_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_35_d0 = tmp_27_3_fu_6460_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_35_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_35_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd63)))) begin
        ShuffleConvs_2_Downs_35_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd63))) begin
        ShuffleConvs_2_Downs_35_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_35_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_36_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_36_address0 = ShuffleConvs_2_Downs_432_reg_8719;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_36_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_36_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_36_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_36_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_36_d0 = tmp_27_2_fu_6430_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_36_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_36_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd62)))) begin
        ShuffleConvs_2_Downs_36_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd62))) begin
        ShuffleConvs_2_Downs_36_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_36_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_37_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_37_address0 = ShuffleConvs_2_Downs_433_reg_8724;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_37_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_37_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_37_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_37_d0 = tmp_27_1_fu_6400_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_37_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_37_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd61)))) begin
        ShuffleConvs_2_Downs_37_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd61))) begin
        ShuffleConvs_2_Downs_37_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_37_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_38_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_38_address0 = ShuffleConvs_2_Downs_431_reg_8714;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_38_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_38_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_38_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_38_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_38_d0 = tmp_9_fu_6370_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_38_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_38_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd60)))) begin
        ShuffleConvs_2_Downs_38_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd60))) begin
        ShuffleConvs_2_Downs_38_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_38_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_39_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_39_address0 = ShuffleConvs_2_Downs_389_reg_8450;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_39_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_39_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_39_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_39_d0 = tmp_20_6_fu_5943_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_39_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_39_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd6)))) begin
        ShuffleConvs_2_Downs_39_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd6))) begin
        ShuffleConvs_2_Downs_39_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_39_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_3_address0 = ShuffleConvs_2_Downs_543_reg_9383;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_3_d0 = tmp_38_8_fu_7802_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd92)))) begin
        ShuffleConvs_2_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd92))) begin
        ShuffleConvs_2_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_40_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_40_address0 = ShuffleConvs_2_Downs_405_reg_8530;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_40_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_40_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_40_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_40_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_40_d0 = tmp_22_10_fu_6104_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_40_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_40_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd59)))) begin
        ShuffleConvs_2_Downs_40_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd59))) begin
        ShuffleConvs_2_Downs_40_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_40_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_41_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_41_address0 = ShuffleConvs_2_Downs_406_reg_8535;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_41_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_41_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_41_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_41_d0 = tmp_22_s_fu_6074_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_41_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_41_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd58)))) begin
        ShuffleConvs_2_Downs_41_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd58))) begin
        ShuffleConvs_2_Downs_41_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_41_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_42_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_42_address0 = ShuffleConvs_2_Downs_388_reg_8445;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_42_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_42_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_42_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_42_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_42_d0 = tmp_22_9_fu_6044_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_42_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_42_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd57)))) begin
        ShuffleConvs_2_Downs_42_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd57))) begin
        ShuffleConvs_2_Downs_42_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_42_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_43_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_43_address0 = ShuffleConvs_2_Downs_391_reg_8460;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_43_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_43_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_43_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_43_d0 = tmp_22_8_fu_6014_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_43_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_43_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd56)))) begin
        ShuffleConvs_2_Downs_43_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd56))) begin
        ShuffleConvs_2_Downs_43_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_43_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_44_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_44_address0 = ShuffleConvs_2_Downs_392_reg_8465;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_44_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_44_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_44_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_44_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_44_d0 = tmp_22_7_fu_5984_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_44_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_44_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd55)))) begin
        ShuffleConvs_2_Downs_44_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd55))) begin
        ShuffleConvs_2_Downs_44_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_44_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_45_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_45_address0 = ShuffleConvs_2_Downs_390_reg_8455;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_45_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_45_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_45_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_45_d0 = tmp_22_6_fu_5954_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_45_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_45_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd54)))) begin
        ShuffleConvs_2_Downs_45_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd54))) begin
        ShuffleConvs_2_Downs_45_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_45_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_46_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_46_address0 = ShuffleConvs_2_Downs_387_reg_8440;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_46_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_46_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_46_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_46_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_46_d0 = tmp_22_5_fu_5924_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_46_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_46_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd53)))) begin
        ShuffleConvs_2_Downs_46_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd53))) begin
        ShuffleConvs_2_Downs_46_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_46_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_47_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_47_address0 = ShuffleConvs_2_Downs_395_reg_8480;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_47_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_47_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_47_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_47_d0 = tmp_22_4_fu_5894_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_47_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_47_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd52)))) begin
        ShuffleConvs_2_Downs_47_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd52))) begin
        ShuffleConvs_2_Downs_47_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_47_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_48_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_48_address0 = ShuffleConvs_2_Downs_404_reg_8525;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_48_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_48_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_48_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_48_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_48_d0 = tmp_22_3_fu_5864_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_48_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_48_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd51)))) begin
        ShuffleConvs_2_Downs_48_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd51))) begin
        ShuffleConvs_2_Downs_48_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_48_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_49_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_49_address0 = ShuffleConvs_2_Downs_402_reg_8515;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_49_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_49_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_49_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_49_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_49_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_49_d0 = tmp_22_2_fu_5834_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_49_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_49_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd50)))) begin
        ShuffleConvs_2_Downs_49_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd50))) begin
        ShuffleConvs_2_Downs_49_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_49_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_4_address0 = ShuffleConvs_2_Downs_537_reg_9353;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_4_d0 = tmp_38_7_fu_7772_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd91)))) begin
        ShuffleConvs_2_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd91))) begin
        ShuffleConvs_2_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_50_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_50_address0 = ShuffleConvs_2_Downs_394_reg_8475;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_50_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_50_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_50_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_50_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_50_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_50_d0 = tmp_20_5_fu_5913_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_50_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_50_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd5)))) begin
        ShuffleConvs_2_Downs_50_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd5))) begin
        ShuffleConvs_2_Downs_50_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_50_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_51_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_51_address0 = ShuffleConvs_2_Downs_403_reg_8520;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_51_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_51_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_51_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_51_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_51_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_51_d0 = tmp_22_1_fu_5804_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_51_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_51_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd49)))) begin
        ShuffleConvs_2_Downs_51_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd49))) begin
        ShuffleConvs_2_Downs_51_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_51_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_52_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_52_address0 = ShuffleConvs_2_Downs_396_reg_8485;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_52_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_52_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_52_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_52_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_52_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_52_d0 = tmp_5_fu_5774_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_52_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_52_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd48)))) begin
        ShuffleConvs_2_Downs_52_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd48))) begin
        ShuffleConvs_2_Downs_52_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_52_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_53_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_53_address0 = ShuffleConvs_2_Downs_549_reg_9413;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_53_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_53_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_53_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_53_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_53_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_53_d0 = tmp_36_10_fu_7881_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_53_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_53_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd47)))) begin
        ShuffleConvs_2_Downs_53_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd47))) begin
        ShuffleConvs_2_Downs_53_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_53_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_54_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_54_address0 = ShuffleConvs_2_Downs_527_reg_9303;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_54_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_54_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_54_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_54_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_54_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_54_d0 = tmp_36_s_fu_7851_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_54_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_54_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd46)))) begin
        ShuffleConvs_2_Downs_54_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd46))) begin
        ShuffleConvs_2_Downs_54_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_54_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_55_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_55_address0 = ShuffleConvs_2_Downs_550_reg_9418;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_55_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_55_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_55_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_55_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_55_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_55_d0 = tmp_36_9_fu_7821_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_55_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_55_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd45)))) begin
        ShuffleConvs_2_Downs_55_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd45))) begin
        ShuffleConvs_2_Downs_55_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_55_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_56_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_56_address0 = ShuffleConvs_2_Downs_548_reg_9408;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_56_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_56_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_56_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_56_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_56_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_56_d0 = tmp_36_8_fu_7791_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_56_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_56_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd44)))) begin
        ShuffleConvs_2_Downs_56_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd44))) begin
        ShuffleConvs_2_Downs_56_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_56_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_57_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_57_address0 = ShuffleConvs_2_Downs_531_reg_9323;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_57_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_57_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_57_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_57_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_57_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_57_d0 = tmp_36_7_fu_7761_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_57_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_57_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd43)))) begin
        ShuffleConvs_2_Downs_57_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd43))) begin
        ShuffleConvs_2_Downs_57_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_57_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_58_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_58_address0 = ShuffleConvs_2_Downs_547_reg_9403;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_58_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_58_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_58_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_58_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_58_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_58_d0 = tmp_36_6_fu_7731_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_58_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_58_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd42)))) begin
        ShuffleConvs_2_Downs_58_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd42))) begin
        ShuffleConvs_2_Downs_58_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_58_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_59_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_59_address0 = ShuffleConvs_2_Downs_541_reg_9373;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_59_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_59_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_59_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_59_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_59_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_59_d0 = tmp_36_5_fu_7701_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_59_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_59_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd41)))) begin
        ShuffleConvs_2_Downs_59_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd41))) begin
        ShuffleConvs_2_Downs_59_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_59_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_5_address0 = ShuffleConvs_2_Downs_540_reg_9368;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_5_d0 = tmp_38_6_fu_7742_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd90)))) begin
        ShuffleConvs_2_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd90))) begin
        ShuffleConvs_2_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_60_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_60_address0 = ShuffleConvs_2_Downs_528_reg_9308;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_60_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_60_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_60_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_60_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_60_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_60_d0 = tmp_36_4_fu_7671_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_60_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_60_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd40)))) begin
        ShuffleConvs_2_Downs_60_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_60_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd40))) begin
        ShuffleConvs_2_Downs_60_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_60_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_61_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_61_address0 = ShuffleConvs_2_Downs_393_reg_8470;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_61_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_61_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_61_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_61_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_61_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_61_d0 = tmp_20_4_fu_5883_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_61_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_61_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd4)))) begin
        ShuffleConvs_2_Downs_61_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_61_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd4))) begin
        ShuffleConvs_2_Downs_61_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_61_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_62_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_62_address0 = ShuffleConvs_2_Downs_542_reg_9378;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_62_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_62_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_62_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_62_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_62_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_62_d0 = tmp_36_3_fu_7641_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_62_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_62_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd39)))) begin
        ShuffleConvs_2_Downs_62_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_62_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd39))) begin
        ShuffleConvs_2_Downs_62_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_62_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_63_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_63_address0 = ShuffleConvs_2_Downs_546_reg_9398;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_63_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_63_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_63_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_63_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_63_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_63_d0 = tmp_36_2_fu_7611_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_63_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_63_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd38)))) begin
        ShuffleConvs_2_Downs_63_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_63_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd38))) begin
        ShuffleConvs_2_Downs_63_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_63_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_64_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_64_address0 = ShuffleConvs_2_Downs_529_reg_9313;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_64_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_64_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_64_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_64_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_64_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_64_d0 = tmp_36_1_fu_7581_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_64_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_64_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd37)))) begin
        ShuffleConvs_2_Downs_64_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_64_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd37))) begin
        ShuffleConvs_2_Downs_64_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_64_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_65_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_65_address0 = ShuffleConvs_2_Downs_530_reg_9318;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_65_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_65_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_65_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_65_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_65_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_65_d0 = tmp_16_fu_7551_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_65_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_65_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd36)))) begin
        ShuffleConvs_2_Downs_65_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_65_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd36))) begin
        ShuffleConvs_2_Downs_65_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_65_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_66_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_66_address0 = ShuffleConvs_2_Downs_502_reg_9123;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_66_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_66_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_66_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_66_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_66_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_66_d0 = tmp_30_10_fu_7285_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_66_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_66_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd35)))) begin
        ShuffleConvs_2_Downs_66_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_66_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd35))) begin
        ShuffleConvs_2_Downs_66_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_66_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_67_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_67_address0 = ShuffleConvs_2_Downs_484_reg_9033;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_67_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_67_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_67_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_67_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_67_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_67_d0 = tmp_30_s_fu_7255_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_67_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_67_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd34)))) begin
        ShuffleConvs_2_Downs_67_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_67_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd34))) begin
        ShuffleConvs_2_Downs_67_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_67_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_68_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_68_address0 = ShuffleConvs_2_Downs_501_reg_9118;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_68_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_68_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_68_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_68_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_68_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_68_d0 = tmp_30_9_fu_7225_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_68_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_68_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd33)))) begin
        ShuffleConvs_2_Downs_68_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_68_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd33))) begin
        ShuffleConvs_2_Downs_68_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_68_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_69_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_69_address0 = ShuffleConvs_2_Downs_499_reg_9108;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_69_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_69_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_69_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_69_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_69_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_69_d0 = tmp_30_8_fu_7195_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_69_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_69_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd32)))) begin
        ShuffleConvs_2_Downs_69_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_69_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd32))) begin
        ShuffleConvs_2_Downs_69_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_69_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_6_address0 = ShuffleConvs_2_Downs_401_reg_8510;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_6_d0 = tmp_20_9_fu_6033_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd9)))) begin
        ShuffleConvs_2_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd9))) begin
        ShuffleConvs_2_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_70_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_70_address0 = ShuffleConvs_2_Downs_481_reg_9018;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_70_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_70_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_70_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_70_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_70_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_70_d0 = tmp_30_7_fu_7165_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_70_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_70_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd31)))) begin
        ShuffleConvs_2_Downs_70_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_70_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd31))) begin
        ShuffleConvs_2_Downs_70_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_70_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_71_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_71_address0 = ShuffleConvs_2_Downs_498_reg_9103;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_71_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_71_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_71_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_71_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_71_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_71_d0 = tmp_30_6_fu_7135_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_71_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_71_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd30)))) begin
        ShuffleConvs_2_Downs_71_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_71_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd30))) begin
        ShuffleConvs_2_Downs_71_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_71_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_72_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_72_address0 = ShuffleConvs_2_Downs_400_reg_8505;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_72_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_72_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_72_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_72_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_72_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_72_d0 = tmp_20_3_fu_5853_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_72_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_72_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd3)))) begin
        ShuffleConvs_2_Downs_72_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_72_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd3))) begin
        ShuffleConvs_2_Downs_72_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_72_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_73_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_73_address0 = ShuffleConvs_2_Downs_497_reg_9098;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_73_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_73_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_73_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_73_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_73_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_73_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_73_d0 = tmp_30_5_fu_7105_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_73_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_73_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd29)))) begin
        ShuffleConvs_2_Downs_73_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_73_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd29))) begin
        ShuffleConvs_2_Downs_73_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_73_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_74_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_74_address0 = ShuffleConvs_2_Downs_483_reg_9028;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_74_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_74_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_74_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_74_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_74_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_74_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_74_d0 = tmp_30_4_fu_7075_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_74_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_74_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd28)))) begin
        ShuffleConvs_2_Downs_74_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_74_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd28))) begin
        ShuffleConvs_2_Downs_74_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_74_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_75_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_75_address0 = ShuffleConvs_2_Downs_479_reg_9008;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_75_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_75_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_75_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_75_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_75_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_75_d0 = tmp_30_3_fu_7045_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_75_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_75_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd27)))) begin
        ShuffleConvs_2_Downs_75_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_75_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd27))) begin
        ShuffleConvs_2_Downs_75_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_75_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_76_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_76_address0 = ShuffleConvs_2_Downs_480_reg_9013;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_76_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_76_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_76_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_76_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_76_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_76_d0 = tmp_30_2_fu_7015_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_76_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_76_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd26)))) begin
        ShuffleConvs_2_Downs_76_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_76_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd26))) begin
        ShuffleConvs_2_Downs_76_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_76_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_77_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_77_address0 = ShuffleConvs_2_Downs_482_reg_9023;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_77_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_77_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_77_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_77_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_77_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_77_d0 = tmp_30_1_fu_6985_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_77_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_77_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd25)))) begin
        ShuffleConvs_2_Downs_77_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_77_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd25))) begin
        ShuffleConvs_2_Downs_77_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_77_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_78_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_78_address0 = ShuffleConvs_2_Downs_485_reg_9038;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_78_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_78_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32))) begin
        ShuffleConvs_2_Downs_78_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_78_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_78_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ShuffleConvs_2_Downs_78_d0 = tmp_11_fu_6955_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_78_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_78_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd24)))) begin
        ShuffleConvs_2_Downs_78_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_78_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd24))) begin
        ShuffleConvs_2_Downs_78_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_78_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_79_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_79_address0 = ShuffleConvs_2_Downs_436_reg_8739;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_79_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_79_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_79_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_79_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_79_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_79_d0 = tmp_25_10_fu_6689_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_79_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_79_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd23)))) begin
        ShuffleConvs_2_Downs_79_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_79_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd23))) begin
        ShuffleConvs_2_Downs_79_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_79_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_7_address0 = ShuffleConvs_2_Downs_536_reg_9348;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_7_d0 = tmp_38_5_fu_7712_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd89)))) begin
        ShuffleConvs_2_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd89))) begin
        ShuffleConvs_2_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_80_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_80_address0 = ShuffleConvs_2_Downs_437_reg_8744;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_80_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_80_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_80_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_80_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_80_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_80_d0 = tmp_25_s_fu_6659_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_80_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_80_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd22)))) begin
        ShuffleConvs_2_Downs_80_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_80_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd22))) begin
        ShuffleConvs_2_Downs_80_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_80_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_81_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_81_address0 = ShuffleConvs_2_Downs_434_reg_8729;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_81_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_81_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_81_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_81_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_81_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_81_d0 = tmp_25_9_fu_6629_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_81_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_81_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd21)))) begin
        ShuffleConvs_2_Downs_81_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_81_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd21))) begin
        ShuffleConvs_2_Downs_81_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_81_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_82_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_82_address0 = ShuffleConvs_2_Downs_445_reg_8784;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_82_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_82_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_82_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_82_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_82_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_82_d0 = tmp_25_8_fu_6599_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_82_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_82_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd20)))) begin
        ShuffleConvs_2_Downs_82_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_82_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd20))) begin
        ShuffleConvs_2_Downs_82_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_82_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_83_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_83_address0 = ShuffleConvs_2_Downs_397_reg_8490;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_83_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_83_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_83_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_83_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_83_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_83_d0 = tmp_20_2_fu_5823_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_83_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_83_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd2)))) begin
        ShuffleConvs_2_Downs_83_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_83_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd2))) begin
        ShuffleConvs_2_Downs_83_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_83_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_84_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_84_address0 = ShuffleConvs_2_Downs_435_reg_8734;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_84_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_84_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_84_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_84_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_84_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_84_d0 = tmp_25_7_fu_6569_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_84_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_84_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd19)))) begin
        ShuffleConvs_2_Downs_84_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_84_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd19))) begin
        ShuffleConvs_2_Downs_84_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_84_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_85_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_85_address0 = ShuffleConvs_2_Downs_438_reg_8749;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_85_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_85_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_85_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_85_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_85_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_85_d0 = tmp_25_6_fu_6539_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_85_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_85_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd18)))) begin
        ShuffleConvs_2_Downs_85_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_85_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd18))) begin
        ShuffleConvs_2_Downs_85_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_85_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_86_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_86_address0 = ShuffleConvs_2_Downs_439_reg_8754;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_86_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_86_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_86_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_86_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_86_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_86_d0 = tmp_25_5_fu_6509_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_86_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_86_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd17)))) begin
        ShuffleConvs_2_Downs_86_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_86_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd17))) begin
        ShuffleConvs_2_Downs_86_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_86_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_87_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_87_address0 = ShuffleConvs_2_Downs_440_reg_8759;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_87_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_87_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_87_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_87_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_87_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_87_d0 = tmp_25_4_fu_6479_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_87_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_87_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd16)))) begin
        ShuffleConvs_2_Downs_87_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_87_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd16))) begin
        ShuffleConvs_2_Downs_87_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_87_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_88_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_88_address0 = ShuffleConvs_2_Downs_441_reg_8764;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_88_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_88_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_88_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_88_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_88_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_88_d0 = tmp_25_3_fu_6449_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_88_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_88_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd15)))) begin
        ShuffleConvs_2_Downs_88_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_88_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd15))) begin
        ShuffleConvs_2_Downs_88_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_88_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_89_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_89_address0 = ShuffleConvs_2_Downs_442_reg_8769;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_89_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_89_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_89_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_89_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_89_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_89_d0 = tmp_25_2_fu_6419_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_89_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_89_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd14)))) begin
        ShuffleConvs_2_Downs_89_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_89_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd14))) begin
        ShuffleConvs_2_Downs_89_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_89_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_8_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_8_address0 = ShuffleConvs_2_Downs_544_reg_9388;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_8_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_8_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_8_d0 = tmp_38_4_fu_7682_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_8_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd88)))) begin
        ShuffleConvs_2_Downs_8_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd88))) begin
        ShuffleConvs_2_Downs_8_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_90_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_90_address0 = ShuffleConvs_2_Downs_443_reg_8774;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_90_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_90_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_90_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_90_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_90_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_90_d0 = tmp_25_1_fu_6389_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_90_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_90_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd13)))) begin
        ShuffleConvs_2_Downs_90_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_90_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd13))) begin
        ShuffleConvs_2_Downs_90_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_90_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_91_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_91_address0 = ShuffleConvs_2_Downs_444_reg_8779;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_91_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_91_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        ShuffleConvs_2_Downs_91_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_91_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_91_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_91_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ShuffleConvs_2_Downs_91_d0 = tmp_7_fu_6359_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_91_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_91_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd12)))) begin
        ShuffleConvs_2_Downs_91_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_91_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd12))) begin
        ShuffleConvs_2_Downs_91_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_91_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_92_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_92_address0 = ShuffleConvs_2_Downs_385_reg_8430;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_92_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_92_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_92_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_92_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_92_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_92_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_92_d0 = tmp_20_10_fu_6093_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_92_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_92_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd11)))) begin
        ShuffleConvs_2_Downs_92_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_92_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd11))) begin
        ShuffleConvs_2_Downs_92_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_92_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_93_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_93_address0 = ShuffleConvs_2_Downs_384_reg_8425;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_93_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_93_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_93_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_93_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_93_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_93_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_93_d0 = tmp_20_s_fu_6063_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_93_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_93_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd10)))) begin
        ShuffleConvs_2_Downs_93_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_93_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd10))) begin
        ShuffleConvs_2_Downs_93_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_93_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_94_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_94_address0 = ShuffleConvs_2_Downs_383_reg_8420;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_94_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_94_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_94_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_94_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_94_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_94_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_94_d0 = tmp_20_1_fu_5793_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_94_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_94_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd1)))) begin
        ShuffleConvs_2_Downs_94_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_94_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd1))) begin
        ShuffleConvs_2_Downs_94_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_94_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_95_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_95_address0 = ShuffleConvs_2_Downs_386_reg_8435;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_95_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_95_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        ShuffleConvs_2_Downs_95_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_95_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_95_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_95_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_2_Downs_95_d0 = tmp_3_fu_5763_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_95_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_95_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd0)))) begin
        ShuffleConvs_2_Downs_95_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_95_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd0))) begin
        ShuffleConvs_2_Downs_95_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_95_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_9_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_9_address0 = ShuffleConvs_2_Downs_539_reg_9363;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_9_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_9_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_9_d0 = tmp_38_3_fu_7652_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_9_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (co_cast_mid2_v_reg_8364 == 7'd87)))) begin
        ShuffleConvs_2_Downs_9_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & (ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd87))) begin
        ShuffleConvs_2_Downs_9_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_address0 = tmp_234_cast_fu_8032_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_address0 = ShuffleConvs_2_Downs_535_reg_9343;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_address0 = tmp_183_cast_fu_5410_p1;
    end else begin
        ShuffleConvs_2_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        ShuffleConvs_2_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_2_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ShuffleConvs_2_Downs_d0 = tmp_38_10_fu_7892_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_2_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_2_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(co_cast_mid2_v_reg_8364 == 7'd0) & ~(co_cast_mid2_v_reg_8364 == 7'd1) & ~(co_cast_mid2_v_reg_8364 == 7'd2) & ~(co_cast_mid2_v_reg_8364 == 7'd3) & ~(co_cast_mid2_v_reg_8364 == 7'd4) & ~(co_cast_mid2_v_reg_8364 == 7'd5) & ~(co_cast_mid2_v_reg_8364 == 7'd6) & ~(co_cast_mid2_v_reg_8364 == 7'd7) & ~(co_cast_mid2_v_reg_8364 == 7'd8) & ~(co_cast_mid2_v_reg_8364 == 7'd9) & ~(co_cast_mid2_v_reg_8364 == 7'd10) & ~(co_cast_mid2_v_reg_8364 == 7'd11) & ~(co_cast_mid2_v_reg_8364 == 7'd12) & ~(co_cast_mid2_v_reg_8364 == 7'd13) & ~(co_cast_mid2_v_reg_8364 == 7'd14) & ~(co_cast_mid2_v_reg_8364 == 7'd15) & ~(co_cast_mid2_v_reg_8364 == 7'd16) & ~(co_cast_mid2_v_reg_8364 == 7'd17) & ~(co_cast_mid2_v_reg_8364 == 7'd18) & ~(co_cast_mid2_v_reg_8364 == 7'd19) & ~(co_cast_mid2_v_reg_8364 == 7'd20) & ~(co_cast_mid2_v_reg_8364 == 7'd21) & ~(co_cast_mid2_v_reg_8364 == 7'd22) & ~(co_cast_mid2_v_reg_8364 == 7'd23) & ~(co_cast_mid2_v_reg_8364 == 7'd24) & ~(co_cast_mid2_v_reg_8364 == 7'd25) & ~(co_cast_mid2_v_reg_8364 == 7'd26) & ~(co_cast_mid2_v_reg_8364 == 7'd27) & ~(co_cast_mid2_v_reg_8364 == 7'd28) & ~(co_cast_mid2_v_reg_8364 == 7'd29) & ~(co_cast_mid2_v_reg_8364 == 7'd30) & ~(co_cast_mid2_v_reg_8364 == 7'd31) & ~(co_cast_mid2_v_reg_8364 == 7'd32) & ~(co_cast_mid2_v_reg_8364 == 7'd33) & ~(co_cast_mid2_v_reg_8364 == 7'd34) & ~(co_cast_mid2_v_reg_8364 == 7'd35) & ~(co_cast_mid2_v_reg_8364 == 7'd36) & ~(co_cast_mid2_v_reg_8364 == 7'd37) & ~(co_cast_mid2_v_reg_8364 == 7'd38) & ~(co_cast_mid2_v_reg_8364 == 7'd39) & ~(co_cast_mid2_v_reg_8364 == 7'd40) & ~(co_cast_mid2_v_reg_8364 == 7'd41) & ~(co_cast_mid2_v_reg_8364 == 7'd42) & ~(co_cast_mid2_v_reg_8364 == 7'd43) & ~(co_cast_mid2_v_reg_8364 == 7'd44) & ~(co_cast_mid2_v_reg_8364 == 7'd45) & ~(co_cast_mid2_v_reg_8364 == 7'd46) & ~(co_cast_mid2_v_reg_8364 == 7'd47) & ~(co_cast_mid2_v_reg_8364 == 7'd48) & ~(co_cast_mid2_v_reg_8364 == 7'd49) & ~(co_cast_mid2_v_reg_8364 == 7'd50) & ~(co_cast_mid2_v_reg_8364 == 7'd51) & ~(co_cast_mid2_v_reg_8364 == 7'd52) & ~(co_cast_mid2_v_reg_8364 == 7'd53) & ~(co_cast_mid2_v_reg_8364 == 7'd54) & ~(co_cast_mid2_v_reg_8364 == 7'd55) & ~(co_cast_mid2_v_reg_8364 == 7'd56) & ~(co_cast_mid2_v_reg_8364 == 7'd57) & ~(co_cast_mid2_v_reg_8364 == 7'd58) & ~(co_cast_mid2_v_reg_8364 == 7'd59) & ~(co_cast_mid2_v_reg_8364 == 7'd60) & ~(co_cast_mid2_v_reg_8364 == 7'd61) & ~(co_cast_mid2_v_reg_8364 == 7'd62) & ~(co_cast_mid2_v_reg_8364 == 7'd63) & ~(co_cast_mid2_v_reg_8364 == 7'd64) & ~(co_cast_mid2_v_reg_8364 == 7'd65) & ~(co_cast_mid2_v_reg_8364 == 7'd66) & ~(co_cast_mid2_v_reg_8364 == 7'd67) & ~(co_cast_mid2_v_reg_8364 == 7'd68) & ~(co_cast_mid2_v_reg_8364 == 7'd69) & ~(co_cast_mid2_v_reg_8364 == 7'd70) & ~(co_cast_mid2_v_reg_8364 == 7'd71) & ~(co_cast_mid2_v_reg_8364 == 7'd72) & ~(co_cast_mid2_v_reg_8364 == 7'd73) & ~(co_cast_mid2_v_reg_8364 == 7'd74) & ~(co_cast_mid2_v_reg_8364 == 7'd75) & ~(co_cast_mid2_v_reg_8364 == 7'd76) & ~(co_cast_mid2_v_reg_8364 == 7'd77) & ~(co_cast_mid2_v_reg_8364 == 7'd78) & ~(co_cast_mid2_v_reg_8364 == 7'd79) & ~(co_cast_mid2_v_reg_8364 == 7'd80) & ~(co_cast_mid2_v_reg_8364 == 7'd81) & ~(co_cast_mid2_v_reg_8364 == 7'd82) & ~(co_cast_mid2_v_reg_8364 == 7'd83) & ~(co_cast_mid2_v_reg_8364 == 7'd84) & ~(co_cast_mid2_v_reg_8364 == 7'd85) & ~(co_cast_mid2_v_reg_8364 == 7'd86) & ~(co_cast_mid2_v_reg_8364 == 7'd87) & ~(co_cast_mid2_v_reg_8364 == 7'd88) & ~(co_cast_mid2_v_reg_8364 == 7'd89) & ~(co_cast_mid2_v_reg_8364 == 7'd90) & ~(co_cast_mid2_v_reg_8364 == 7'd91) & ~(co_cast_mid2_v_reg_8364 == 7'd92) & ~(co_cast_mid2_v_reg_8364 == 7'd93) & ~(co_cast_mid2_v_reg_8364 == 7'd94)))) begin
        ShuffleConvs_2_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_99_fu_8334_p3) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd0) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd1) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd2) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd3) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd4) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd5) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd6) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd7) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd8) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd9) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd10) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd11) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd12) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd13) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd14) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd15) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd16) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd17) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd18) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd19) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd20) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd21) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd22) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd23) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd24) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd25) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd26) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd27) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd28) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd29) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd30) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd31) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd32) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd33) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd34) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd35) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd36) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd37) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd38) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd39) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd40) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd41) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd42) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd43) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd44) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd45) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd46) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd47) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd48) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd49) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd50) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd51) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd52) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd53) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd54) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd55) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd56) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd57) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd58) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd59) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd60) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd61) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd62) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd63) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd64) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd65) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd66) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd67) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd68) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd69) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd70) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd71) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd72) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd73) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd74) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd75) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd76) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd77) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd78) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd79) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd80) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd81) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd82) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd83) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd84) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd85) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd86) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd87) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd88) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd89) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd90) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd91) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd92) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd93) & ~(ap_reg_pp1_iter2_co9_mid2_reg_9591 == 7'd94))) begin
        ShuffleConvs_2_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_2_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_5272_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten3_fu_7899_p2)) begin
        ap_condition_pp1_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state46))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co9_phi_fu_5033_p4 = co9_mid2_reg_9591;
    end else begin
        co9_phi_fu_5033_p4 = co9_reg_5029;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_4835_p4 = co_cast_mid2_v_reg_8364;
    end else begin
        co_phi_fu_4835_p4 = co_reg_4831;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5076_a_V = weight_36_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5076_a_V = weight_24_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5076_a_V = weight_12_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5076_a_V = weight_0_V_q0;
    end else begin
        grp_MUL_DP_fu_5076_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5076_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5076_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5076_b_V = weight_84_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5076_b_V = weight_72_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5076_b_V = weight_60_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5076_b_V = weight_48_V_q0;
    end else begin
        grp_MUL_DP_fu_5076_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5085_a_V = weight_37_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5085_a_V = weight_25_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5085_a_V = weight_13_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5085_a_V = weight_1_V_q0;
    end else begin
        grp_MUL_DP_fu_5085_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5085_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5085_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5085_b_V = weight_85_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5085_b_V = weight_73_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5085_b_V = weight_61_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5085_b_V = weight_49_V_q0;
    end else begin
        grp_MUL_DP_fu_5085_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5094_a_V = weight_38_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5094_a_V = weight_26_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5094_a_V = weight_14_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5094_a_V = weight_2_V_q0;
    end else begin
        grp_MUL_DP_fu_5094_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5094_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5094_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5094_b_V = weight_86_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5094_b_V = weight_74_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5094_b_V = weight_62_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5094_b_V = weight_50_V_q0;
    end else begin
        grp_MUL_DP_fu_5094_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5103_a_V = weight_39_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5103_a_V = weight_27_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5103_a_V = weight_15_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5103_a_V = weight_3_V_q0;
    end else begin
        grp_MUL_DP_fu_5103_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5103_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5103_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5103_b_V = weight_87_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5103_b_V = weight_75_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5103_b_V = weight_63_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5103_b_V = weight_51_V_q0;
    end else begin
        grp_MUL_DP_fu_5103_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5112_a_V = weight_40_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5112_a_V = weight_28_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5112_a_V = weight_16_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5112_a_V = weight_4_V_q0;
    end else begin
        grp_MUL_DP_fu_5112_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5112_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5112_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5112_b_V = weight_88_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5112_b_V = weight_76_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5112_b_V = weight_64_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5112_b_V = weight_52_V_q0;
    end else begin
        grp_MUL_DP_fu_5112_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5121_a_V = weight_41_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5121_a_V = weight_29_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5121_a_V = weight_17_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5121_a_V = weight_5_V_q0;
    end else begin
        grp_MUL_DP_fu_5121_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5121_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5121_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5121_b_V = weight_89_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5121_b_V = weight_77_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5121_b_V = weight_65_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5121_b_V = weight_53_V_q0;
    end else begin
        grp_MUL_DP_fu_5121_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5130_a_V = weight_42_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5130_a_V = weight_30_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5130_a_V = weight_18_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5130_a_V = weight_6_V_q0;
    end else begin
        grp_MUL_DP_fu_5130_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5130_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5130_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5130_b_V = weight_90_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5130_b_V = weight_78_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5130_b_V = weight_66_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5130_b_V = weight_54_V_q0;
    end else begin
        grp_MUL_DP_fu_5130_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5139_a_V = weight_43_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5139_a_V = weight_31_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5139_a_V = weight_19_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5139_a_V = weight_7_V_q0;
    end else begin
        grp_MUL_DP_fu_5139_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5139_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5139_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5139_b_V = weight_91_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5139_b_V = weight_79_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5139_b_V = weight_67_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5139_b_V = weight_55_V_q0;
    end else begin
        grp_MUL_DP_fu_5139_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5148_a_V = weight_44_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5148_a_V = weight_32_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5148_a_V = weight_20_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5148_a_V = weight_8_V_q0;
    end else begin
        grp_MUL_DP_fu_5148_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5148_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5148_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5148_b_V = weight_92_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5148_b_V = weight_80_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5148_b_V = weight_68_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5148_b_V = weight_56_V_q0;
    end else begin
        grp_MUL_DP_fu_5148_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5157_a_V = weight_45_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5157_a_V = weight_33_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5157_a_V = weight_21_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5157_a_V = weight_9_V_q0;
    end else begin
        grp_MUL_DP_fu_5157_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5157_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5157_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5157_b_V = weight_93_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5157_b_V = weight_81_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5157_b_V = weight_69_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5157_b_V = weight_57_V_q0;
    end else begin
        grp_MUL_DP_fu_5157_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5166_a_V = weight_46_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5166_a_V = weight_34_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5166_a_V = weight_22_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5166_a_V = weight_10_V_q0;
    end else begin
        grp_MUL_DP_fu_5166_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5166_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5166_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5166_b_V = weight_94_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5166_b_V = weight_82_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5166_b_V = weight_70_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5166_b_V = weight_58_V_q0;
    end else begin
        grp_MUL_DP_fu_5166_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5175_a_V = weight_47_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5175_a_V = weight_35_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5175_a_V = weight_23_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5175_a_V = weight_11_V_q0;
    end else begin
        grp_MUL_DP_fu_5175_a_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_MUL_DP_fu_5175_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_5175_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_MUL_DP_fu_5175_b_V = weight_95_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_MUL_DP_fu_5175_b_V = weight_83_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_MUL_DP_fu_5175_b_V = weight_71_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_MUL_DP_fu_5175_b_V = weight_59_V_q0;
    end else begin
        grp_MUL_DP_fu_5175_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h11_phi_fu_5056_p4 = h11_cast2_mid2_reg_9603;
    end else begin
        h11_phi_fu_5056_p4 = h11_reg_5052;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_4858_p4 = h_cast_mid2_reg_8375;
    end else begin
        h_phi_fu_4858_p4 = h_reg_4854;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        input_V_address0 = input_V_addr_3_reg_9431;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        input_V_address0 = input_V_addr_2_reg_9136;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_V_address0 = input_V_addr_1_reg_8842;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_address0 = input_V_addr_reg_8548;
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state36))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten3_reg_9569) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w11_phi_fu_5068_p4 = w_14_fu_8132_p2;
    end else begin
        w11_phi_fu_5068_p4 = w11_reg_5064;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten1_reg_8342 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_4870_p4 = w_7_fu_5510_p2;
    end else begin
        w_phi_fu_4870_p4 = w_reg_4866;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_10_V_ce0 = 1'b1;
    end else begin
        weight_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_11_V_ce0 = 1'b1;
    end else begin
        weight_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_12_V_ce0 = 1'b1;
    end else begin
        weight_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_13_V_ce0 = 1'b1;
    end else begin
        weight_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_14_V_ce0 = 1'b1;
    end else begin
        weight_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_15_V_ce0 = 1'b1;
    end else begin
        weight_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_16_V_ce0 = 1'b1;
    end else begin
        weight_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_17_V_ce0 = 1'b1;
    end else begin
        weight_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_18_V_ce0 = 1'b1;
    end else begin
        weight_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_19_V_ce0 = 1'b1;
    end else begin
        weight_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_20_V_ce0 = 1'b1;
    end else begin
        weight_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_21_V_ce0 = 1'b1;
    end else begin
        weight_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_22_V_ce0 = 1'b1;
    end else begin
        weight_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_23_V_ce0 = 1'b1;
    end else begin
        weight_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_24_V_ce0 = 1'b1;
    end else begin
        weight_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_25_V_ce0 = 1'b1;
    end else begin
        weight_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_26_V_ce0 = 1'b1;
    end else begin
        weight_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_27_V_ce0 = 1'b1;
    end else begin
        weight_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_28_V_ce0 = 1'b1;
    end else begin
        weight_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_29_V_ce0 = 1'b1;
    end else begin
        weight_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_30_V_ce0 = 1'b1;
    end else begin
        weight_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_31_V_ce0 = 1'b1;
    end else begin
        weight_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_32_V_ce0 = 1'b1;
    end else begin
        weight_32_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_33_V_ce0 = 1'b1;
    end else begin
        weight_33_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_34_V_ce0 = 1'b1;
    end else begin
        weight_34_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_35_V_ce0 = 1'b1;
    end else begin
        weight_35_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_36_V_ce0 = 1'b1;
    end else begin
        weight_36_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_37_V_ce0 = 1'b1;
    end else begin
        weight_37_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_38_V_ce0 = 1'b1;
    end else begin
        weight_38_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_39_V_ce0 = 1'b1;
    end else begin
        weight_39_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_40_V_ce0 = 1'b1;
    end else begin
        weight_40_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_41_V_ce0 = 1'b1;
    end else begin
        weight_41_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_42_V_ce0 = 1'b1;
    end else begin
        weight_42_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_43_V_ce0 = 1'b1;
    end else begin
        weight_43_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_44_V_ce0 = 1'b1;
    end else begin
        weight_44_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_45_V_ce0 = 1'b1;
    end else begin
        weight_45_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_46_V_ce0 = 1'b1;
    end else begin
        weight_46_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_47_V_ce0 = 1'b1;
    end else begin
        weight_47_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_48_V_ce0 = 1'b1;
    end else begin
        weight_48_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_49_V_ce0 = 1'b1;
    end else begin
        weight_49_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_50_V_ce0 = 1'b1;
    end else begin
        weight_50_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_51_V_ce0 = 1'b1;
    end else begin
        weight_51_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_52_V_ce0 = 1'b1;
    end else begin
        weight_52_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_53_V_ce0 = 1'b1;
    end else begin
        weight_53_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_54_V_ce0 = 1'b1;
    end else begin
        weight_54_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_55_V_ce0 = 1'b1;
    end else begin
        weight_55_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_56_V_ce0 = 1'b1;
    end else begin
        weight_56_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_57_V_ce0 = 1'b1;
    end else begin
        weight_57_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_58_V_ce0 = 1'b1;
    end else begin
        weight_58_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_59_V_ce0 = 1'b1;
    end else begin
        weight_59_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_60_V_ce0 = 1'b1;
    end else begin
        weight_60_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_61_V_ce0 = 1'b1;
    end else begin
        weight_61_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_62_V_ce0 = 1'b1;
    end else begin
        weight_62_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_63_V_ce0 = 1'b1;
    end else begin
        weight_63_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_64_V_ce0 = 1'b1;
    end else begin
        weight_64_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_65_V_ce0 = 1'b1;
    end else begin
        weight_65_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_66_V_ce0 = 1'b1;
    end else begin
        weight_66_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_67_V_ce0 = 1'b1;
    end else begin
        weight_67_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_68_V_ce0 = 1'b1;
    end else begin
        weight_68_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_69_V_ce0 = 1'b1;
    end else begin
        weight_69_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_70_V_ce0 = 1'b1;
    end else begin
        weight_70_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_71_V_ce0 = 1'b1;
    end else begin
        weight_71_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_72_V_ce0 = 1'b1;
    end else begin
        weight_72_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_73_V_ce0 = 1'b1;
    end else begin
        weight_73_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_74_V_ce0 = 1'b1;
    end else begin
        weight_74_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_75_V_ce0 = 1'b1;
    end else begin
        weight_75_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_76_V_ce0 = 1'b1;
    end else begin
        weight_76_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_77_V_ce0 = 1'b1;
    end else begin
        weight_77_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_78_V_ce0 = 1'b1;
    end else begin
        weight_78_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_79_V_ce0 = 1'b1;
    end else begin
        weight_79_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_80_V_ce0 = 1'b1;
    end else begin
        weight_80_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_81_V_ce0 = 1'b1;
    end else begin
        weight_81_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_82_V_ce0 = 1'b1;
    end else begin
        weight_82_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        weight_83_V_ce0 = 1'b1;
    end else begin
        weight_83_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_84_V_ce0 = 1'b1;
    end else begin
        weight_84_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_85_V_ce0 = 1'b1;
    end else begin
        weight_85_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_86_V_ce0 = 1'b1;
    end else begin
        weight_86_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_87_V_ce0 = 1'b1;
    end else begin
        weight_87_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_88_V_ce0 = 1'b1;
    end else begin
        weight_88_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_89_V_ce0 = 1'b1;
    end else begin
        weight_89_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_8_V_ce0 = 1'b1;
    end else begin
        weight_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_90_V_ce0 = 1'b1;
    end else begin
        weight_90_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_91_V_ce0 = 1'b1;
    end else begin
        weight_91_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_92_V_ce0 = 1'b1;
    end else begin
        weight_92_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_93_V_ce0 = 1'b1;
    end else begin
        weight_93_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_94_V_ce0 = 1'b1;
    end else begin
        weight_94_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        weight_95_V_ce0 = 1'b1;
    end else begin
        weight_95_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_9_V_ce0 = 1'b1;
    end else begin
        weight_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_5272_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_5272_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond1_fu_5553_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond4_fu_5604_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond8_fu_5733_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'd1 == exitcond3_fu_6149_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == exitcond7_fu_6200_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'd1 == exitcond5_fu_6329_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'd1 == exitcond6_fu_6745_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond9_fu_6796_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond11_fu_6925_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == exitcond2_fu_7341_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'd1 == exitcond10_fu_7392_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'd1 == exitcond13_fu_7521_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_7899_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten3_fu_7899_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ShuffleConvs_2_Downs_10_address1 = ShuffleConvs_2_Downs_645_reg_10030;

assign ShuffleConvs_2_Downs_10_d1 = 8'd0;

assign ShuffleConvs_2_Downs_11_address1 = ShuffleConvs_2_Downs_620_reg_9880;

assign ShuffleConvs_2_Downs_11_d1 = 8'd0;

assign ShuffleConvs_2_Downs_12_address1 = ShuffleConvs_2_Downs_631_reg_9946;

assign ShuffleConvs_2_Downs_12_d1 = 8'd0;

assign ShuffleConvs_2_Downs_13_address1 = ShuffleConvs_2_Downs_644_reg_10024;

assign ShuffleConvs_2_Downs_13_d1 = 8'd0;

assign ShuffleConvs_2_Downs_14_address1 = ShuffleConvs_2_Downs_653_reg_10078;

assign ShuffleConvs_2_Downs_14_d1 = 8'd0;

assign ShuffleConvs_2_Downs_15_address1 = ShuffleConvs_2_Downs_632_reg_9952;

assign ShuffleConvs_2_Downs_15_d1 = 8'd0;

assign ShuffleConvs_2_Downs_16_address1 = ShuffleConvs_2_Downs_641_reg_10006;

assign ShuffleConvs_2_Downs_16_d1 = 8'd0;

assign ShuffleConvs_2_Downs_17_address1 = ShuffleConvs_2_Downs_630_reg_9940;

assign ShuffleConvs_2_Downs_17_d1 = 8'd0;

assign ShuffleConvs_2_Downs_18_address1 = ShuffleConvs_2_Downs_639_reg_9994;

assign ShuffleConvs_2_Downs_18_d1 = 8'd0;

assign ShuffleConvs_2_Downs_19_address1 = ShuffleConvs_2_Downs_617_reg_9862;

assign ShuffleConvs_2_Downs_19_d1 = 8'd0;

assign ShuffleConvs_2_Downs_1_address1 = ShuffleConvs_2_Downs_659_reg_10114;

assign ShuffleConvs_2_Downs_1_d1 = 8'd0;

assign ShuffleConvs_2_Downs_20_address1 = ShuffleConvs_2_Downs_629_reg_9934;

assign ShuffleConvs_2_Downs_20_d1 = 8'd0;

assign ShuffleConvs_2_Downs_21_address1 = ShuffleConvs_2_Downs_638_reg_9988;

assign ShuffleConvs_2_Downs_21_d1 = 8'd0;

assign ShuffleConvs_2_Downs_22_address1 = ShuffleConvs_2_Downs_637_reg_9982;

assign ShuffleConvs_2_Downs_22_d1 = 8'd0;

assign ShuffleConvs_2_Downs_23_address1 = ShuffleConvs_2_Downs_627_reg_9922;

assign ShuffleConvs_2_Downs_23_d1 = 8'd0;

assign ShuffleConvs_2_Downs_24_address1 = ShuffleConvs_2_Downs_619_reg_9874;

assign ShuffleConvs_2_Downs_24_d1 = 8'd0;

assign ShuffleConvs_2_Downs_25_address1 = ShuffleConvs_2_Downs_635_reg_9970;

assign ShuffleConvs_2_Downs_25_d1 = 8'd0;

assign ShuffleConvs_2_Downs_26_address1 = ShuffleConvs_2_Downs_628_reg_9928;

assign ShuffleConvs_2_Downs_26_d1 = 8'd0;

assign ShuffleConvs_2_Downs_27_address1 = ShuffleConvs_2_Downs_634_reg_9964;

assign ShuffleConvs_2_Downs_27_d1 = 8'd0;

assign ShuffleConvs_2_Downs_28_address1 = ShuffleConvs_2_Downs_618_reg_9868;

assign ShuffleConvs_2_Downs_28_d1 = 8'd0;

assign ShuffleConvs_2_Downs_29_address1 = ShuffleConvs_2_Downs_633_reg_9958;

assign ShuffleConvs_2_Downs_29_d1 = 8'd0;

assign ShuffleConvs_2_Downs_2_address1 = ShuffleConvs_2_Downs_636_reg_9976;

assign ShuffleConvs_2_Downs_2_d1 = 8'd0;

assign ShuffleConvs_2_Downs_30_address1 = ShuffleConvs_2_Downs_626_reg_9916;

assign ShuffleConvs_2_Downs_30_d1 = 8'd0;

assign ShuffleConvs_2_Downs_31_address1 = ShuffleConvs_2_Downs_624_reg_9904;

assign ShuffleConvs_2_Downs_31_d1 = 8'd0;

assign ShuffleConvs_2_Downs_32_address1 = ShuffleConvs_2_Downs_625_reg_9910;

assign ShuffleConvs_2_Downs_32_d1 = 8'd0;

assign ShuffleConvs_2_Downs_33_address1 = ShuffleConvs_2_Downs_623_reg_9898;

assign ShuffleConvs_2_Downs_33_d1 = 8'd0;

assign ShuffleConvs_2_Downs_34_address1 = ShuffleConvs_2_Downs_622_reg_9892;

assign ShuffleConvs_2_Downs_34_d1 = 8'd0;

assign ShuffleConvs_2_Downs_35_address1 = ShuffleConvs_2_Downs_621_reg_9886;

assign ShuffleConvs_2_Downs_35_d1 = 8'd0;

assign ShuffleConvs_2_Downs_36_address1 = ShuffleConvs_2_Downs_583_reg_9658;

assign ShuffleConvs_2_Downs_36_d1 = 8'd0;

assign ShuffleConvs_2_Downs_37_address1 = ShuffleConvs_2_Downs_585_reg_9670;

assign ShuffleConvs_2_Downs_37_d1 = 8'd0;

assign ShuffleConvs_2_Downs_38_address1 = ShuffleConvs_2_Downs_580_reg_9640;

assign ShuffleConvs_2_Downs_38_d1 = 8'd0;

assign ShuffleConvs_2_Downs_39_address1 = ShuffleConvs_2_Downs_586_reg_9676;

assign ShuffleConvs_2_Downs_39_d1 = 8'd0;

assign ShuffleConvs_2_Downs_3_address1 = ShuffleConvs_2_Downs_656_reg_10096;

assign ShuffleConvs_2_Downs_3_d1 = 8'd0;

assign ShuffleConvs_2_Downs_40_address1 = ShuffleConvs_2_Downs_668_reg_10168;

assign ShuffleConvs_2_Downs_40_d1 = 8'd0;

assign ShuffleConvs_2_Downs_41_address1 = ShuffleConvs_2_Downs_670_reg_10180;

assign ShuffleConvs_2_Downs_41_d1 = 8'd0;

assign ShuffleConvs_2_Downs_42_address1 = ShuffleConvs_2_Downs_582_reg_9652;

assign ShuffleConvs_2_Downs_42_d1 = 8'd0;

assign ShuffleConvs_2_Downs_43_address1 = ShuffleConvs_2_Downs_592_reg_9712;

assign ShuffleConvs_2_Downs_43_d1 = 8'd0;

assign ShuffleConvs_2_Downs_44_address1 = ShuffleConvs_2_Downs_593_reg_9718;

assign ShuffleConvs_2_Downs_44_d1 = 8'd0;

assign ShuffleConvs_2_Downs_45_address1 = ShuffleConvs_2_Downs_591_reg_9706;

assign ShuffleConvs_2_Downs_45_d1 = 8'd0;

assign ShuffleConvs_2_Downs_46_address1 = ShuffleConvs_2_Downs_579_reg_9634;

assign ShuffleConvs_2_Downs_46_d1 = 8'd0;

assign ShuffleConvs_2_Downs_47_address1 = ShuffleConvs_2_Downs_602_reg_9772;

assign ShuffleConvs_2_Downs_47_d1 = 8'd0;

assign ShuffleConvs_2_Downs_48_address1 = ShuffleConvs_2_Downs_667_reg_10162;

assign ShuffleConvs_2_Downs_48_d1 = 8'd0;

assign ShuffleConvs_2_Downs_49_address1 = ShuffleConvs_2_Downs_657_reg_10102;

assign ShuffleConvs_2_Downs_49_d1 = 8'd0;

assign ShuffleConvs_2_Downs_4_address1 = ShuffleConvs_2_Downs_643_reg_10018;

assign ShuffleConvs_2_Downs_4_d1 = 8'd0;

assign ShuffleConvs_2_Downs_50_address1 = ShuffleConvs_2_Downs_598_reg_9748;

assign ShuffleConvs_2_Downs_50_d1 = 8'd0;

assign ShuffleConvs_2_Downs_51_address1 = ShuffleConvs_2_Downs_660_reg_10120;

assign ShuffleConvs_2_Downs_51_d1 = 8'd0;

assign ShuffleConvs_2_Downs_52_address1 = ShuffleConvs_2_Downs_605_reg_9790;

assign ShuffleConvs_2_Downs_52_d1 = 8'd0;

assign ShuffleConvs_2_Downs_53_address1 = ShuffleConvs_2_Downs_666_reg_10156;

assign ShuffleConvs_2_Downs_53_d1 = 8'd0;

assign ShuffleConvs_2_Downs_54_address1 = ShuffleConvs_2_Downs_581_reg_9646;

assign ShuffleConvs_2_Downs_54_d1 = 8'd0;

assign ShuffleConvs_2_Downs_55_address1 = ShuffleConvs_2_Downs_669_reg_10174;

assign ShuffleConvs_2_Downs_55_d1 = 8'd0;

assign ShuffleConvs_2_Downs_56_address1 = ShuffleConvs_2_Downs_665_reg_10150;

assign ShuffleConvs_2_Downs_56_d1 = 8'd0;

assign ShuffleConvs_2_Downs_57_address1 = ShuffleConvs_2_Downs_601_reg_9766;

assign ShuffleConvs_2_Downs_57_d1 = 8'd0;

assign ShuffleConvs_2_Downs_58_address1 = ShuffleConvs_2_Downs_664_reg_10144;

assign ShuffleConvs_2_Downs_58_d1 = 8'd0;

assign ShuffleConvs_2_Downs_59_address1 = ShuffleConvs_2_Downs_654_reg_10084;

assign ShuffleConvs_2_Downs_59_d1 = 8'd0;

assign ShuffleConvs_2_Downs_5_address1 = ShuffleConvs_2_Downs_647_reg_10042;

assign ShuffleConvs_2_Downs_5_d1 = 8'd0;

assign ShuffleConvs_2_Downs_60_address1 = ShuffleConvs_2_Downs_584_reg_9664;

assign ShuffleConvs_2_Downs_60_d1 = 8'd0;

assign ShuffleConvs_2_Downs_61_address1 = ShuffleConvs_2_Downs_594_reg_9724;

assign ShuffleConvs_2_Downs_61_d1 = 8'd0;

assign ShuffleConvs_2_Downs_62_address1 = ShuffleConvs_2_Downs_655_reg_10090;

assign ShuffleConvs_2_Downs_62_d1 = 8'd0;

assign ShuffleConvs_2_Downs_63_address1 = ShuffleConvs_2_Downs_663_reg_10138;

assign ShuffleConvs_2_Downs_63_d1 = 8'd0;

assign ShuffleConvs_2_Downs_64_address1 = ShuffleConvs_2_Downs_599_reg_9754;

assign ShuffleConvs_2_Downs_64_d1 = 8'd0;

assign ShuffleConvs_2_Downs_65_address1 = ShuffleConvs_2_Downs_600_reg_9760;

assign ShuffleConvs_2_Downs_65_d1 = 8'd0;

assign ShuffleConvs_2_Downs_66_address1 = ShuffleConvs_2_Downs_662_reg_10132;

assign ShuffleConvs_2_Downs_66_d1 = 8'd0;

assign ShuffleConvs_2_Downs_67_address1 = ShuffleConvs_2_Downs_603_reg_9778;

assign ShuffleConvs_2_Downs_67_d1 = 8'd0;

assign ShuffleConvs_2_Downs_68_address1 = ShuffleConvs_2_Downs_661_reg_10126;

assign ShuffleConvs_2_Downs_68_d1 = 8'd0;

assign ShuffleConvs_2_Downs_69_address1 = ShuffleConvs_2_Downs_652_reg_10072;

assign ShuffleConvs_2_Downs_69_d1 = 8'd0;

assign ShuffleConvs_2_Downs_6_address1 = ShuffleConvs_2_Downs_650_reg_10060;

assign ShuffleConvs_2_Downs_6_d1 = 8'd0;

assign ShuffleConvs_2_Downs_70_address1 = ShuffleConvs_2_Downs_595_reg_9730;

assign ShuffleConvs_2_Downs_70_d1 = 8'd0;

assign ShuffleConvs_2_Downs_71_address1 = ShuffleConvs_2_Downs_651_reg_10066;

assign ShuffleConvs_2_Downs_71_d1 = 8'd0;

assign ShuffleConvs_2_Downs_72_address1 = ShuffleConvs_2_Downs_649_reg_10054;

assign ShuffleConvs_2_Downs_72_d1 = 8'd0;

assign ShuffleConvs_2_Downs_73_address1 = ShuffleConvs_2_Downs_648_reg_10048;

assign ShuffleConvs_2_Downs_73_d1 = 8'd0;

assign ShuffleConvs_2_Downs_74_address1 = ShuffleConvs_2_Downs_597_reg_9742;

assign ShuffleConvs_2_Downs_74_d1 = 8'd0;

assign ShuffleConvs_2_Downs_75_address1 = ShuffleConvs_2_Downs_589_reg_9694;

assign ShuffleConvs_2_Downs_75_d1 = 8'd0;

assign ShuffleConvs_2_Downs_76_address1 = ShuffleConvs_2_Downs_590_reg_9700;

assign ShuffleConvs_2_Downs_76_d1 = 8'd0;

assign ShuffleConvs_2_Downs_77_address1 = ShuffleConvs_2_Downs_596_reg_9736;

assign ShuffleConvs_2_Downs_77_d1 = 8'd0;

assign ShuffleConvs_2_Downs_78_address1 = ShuffleConvs_2_Downs_607_reg_9802;

assign ShuffleConvs_2_Downs_78_d1 = 8'd0;

assign ShuffleConvs_2_Downs_79_address1 = ShuffleConvs_2_Downs_604_reg_9784;

assign ShuffleConvs_2_Downs_79_d1 = 8'd0;

assign ShuffleConvs_2_Downs_7_address1 = ShuffleConvs_2_Downs_642_reg_10012;

assign ShuffleConvs_2_Downs_7_d1 = 8'd0;

assign ShuffleConvs_2_Downs_80_address1 = ShuffleConvs_2_Downs_606_reg_9796;

assign ShuffleConvs_2_Downs_80_d1 = 8'd0;

assign ShuffleConvs_2_Downs_81_address1 = ShuffleConvs_2_Downs_587_reg_9682;

assign ShuffleConvs_2_Downs_81_d1 = 8'd0;

assign ShuffleConvs_2_Downs_82_address1 = ShuffleConvs_2_Downs_616_reg_9856;

assign ShuffleConvs_2_Downs_82_d1 = 8'd0;

assign ShuffleConvs_2_Downs_83_address1 = ShuffleConvs_2_Downs_608_reg_9808;

assign ShuffleConvs_2_Downs_83_d1 = 8'd0;

assign ShuffleConvs_2_Downs_84_address1 = ShuffleConvs_2_Downs_588_reg_9688;

assign ShuffleConvs_2_Downs_84_d1 = 8'd0;

assign ShuffleConvs_2_Downs_85_address1 = ShuffleConvs_2_Downs_609_reg_9814;

assign ShuffleConvs_2_Downs_85_d1 = 8'd0;

assign ShuffleConvs_2_Downs_86_address1 = ShuffleConvs_2_Downs_610_reg_9820;

assign ShuffleConvs_2_Downs_86_d1 = 8'd0;

assign ShuffleConvs_2_Downs_87_address1 = ShuffleConvs_2_Downs_611_reg_9826;

assign ShuffleConvs_2_Downs_87_d1 = 8'd0;

assign ShuffleConvs_2_Downs_88_address1 = ShuffleConvs_2_Downs_612_reg_9832;

assign ShuffleConvs_2_Downs_88_d1 = 8'd0;

assign ShuffleConvs_2_Downs_89_address1 = ShuffleConvs_2_Downs_613_reg_9838;

assign ShuffleConvs_2_Downs_89_d1 = 8'd0;

assign ShuffleConvs_2_Downs_8_address1 = ShuffleConvs_2_Downs_658_reg_10108;

assign ShuffleConvs_2_Downs_8_d1 = 8'd0;

assign ShuffleConvs_2_Downs_90_address1 = ShuffleConvs_2_Downs_614_reg_9844;

assign ShuffleConvs_2_Downs_90_d1 = 8'd0;

assign ShuffleConvs_2_Downs_91_address1 = ShuffleConvs_2_Downs_615_reg_9850;

assign ShuffleConvs_2_Downs_91_d1 = 8'd0;

assign ShuffleConvs_2_Downs_92_address1 = ShuffleConvs_2_Downs_577_reg_9622;

assign ShuffleConvs_2_Downs_92_d1 = 8'd0;

assign ShuffleConvs_2_Downs_93_address1 = ShuffleConvs_2_Downs_576_reg_9616;

assign ShuffleConvs_2_Downs_93_d1 = 8'd0;

assign ShuffleConvs_2_Downs_94_address1 = ShuffleConvs_2_Downs_575_reg_9610;

assign ShuffleConvs_2_Downs_94_d1 = 8'd0;

assign ShuffleConvs_2_Downs_95_address1 = ShuffleConvs_2_Downs_578_reg_9628;

assign ShuffleConvs_2_Downs_95_d1 = 8'd0;

assign ShuffleConvs_2_Downs_9_address1 = ShuffleConvs_2_Downs_646_reg_10036;

assign ShuffleConvs_2_Downs_9_d1 = 8'd0;

assign ShuffleConvs_2_Downs_address1 = ShuffleConvs_2_Downs_640_reg_10000;

assign ShuffleConvs_2_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bias_V_address0 = co_cast_mid2_fu_5324_p1;

assign ci2_cast7_fu_6808_p1 = ci2_reg_4972;

assign ci3_cast4_fu_7404_p1 = ci3_reg_5007;

assign ci6_cast_fu_6212_p1 = ci6_reg_4937;

assign ci_1_fu_5739_p2 = (ci_reg_4902 + 7'd1);

assign ci_2_fu_6335_p2 = (ci6_reg_4937 + 7'd1);

assign ci_3_fu_6931_p2 = (ci2_reg_4972 + 7'd1);

assign ci_4_fu_7527_p2 = (ci3_reg_5007 + 7'd1);

assign ci_cast_fu_5616_p1 = ci_reg_4902;

assign co9_mid2_fu_7961_p3 = ((exitcond_flatten2_reg_9578[0:0] === 1'b1) ? co_8_fu_7931_p2 : co9_phi_fu_5033_p4);

assign co_7_fu_5304_p2 = (co_phi_fu_4835_p4 + 7'd1);

assign co_8_fu_7931_p2 = (co9_phi_fu_5033_p4 + 7'd1);

assign co_cast_mid2_fu_5324_p1 = co_cast_mid2_v_fu_5317_p3;

assign co_cast_mid2_v_fu_5317_p3 = ((exitcond_flatten_reg_8351[0:0] === 1'b1) ? co_7_fu_5304_p2 : co_phi_fu_4835_p4);

assign exitcond10_fu_7392_p2 = ((w10_reg_4995 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond11_fu_6925_p2 = ((ci2_reg_4972 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond12_fu_7949_p2 = ((w11_phi_fu_5068_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond13_fu_7521_p2 = ((ci3_reg_5007 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond1_fu_5553_p2 = ((h1_reg_4878 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond2_fu_7341_p2 = ((h9_reg_4983 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond3_fu_6149_p2 = ((h4_reg_4913 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond4_fu_5604_p2 = ((w2_reg_4890 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond5_fu_6329_p2 = ((ci6_reg_4937 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond5_mid_fu_5340_p2 = (exitcond_fu_5334_p2 & not_exitcond_flatten_fu_5329_p2);

assign exitcond6_fu_6745_p2 = ((h8_reg_4948 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond7_fu_6200_p2 = ((w5_reg_4925 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond8_fu_5733_p2 = ((ci_reg_4902 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond9_fu_6796_p2 = ((w9_reg_4960 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_5272_p2 = ((indvar_flatten1_reg_4820 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_7911_p2 = ((indvar_flatten3_reg_5041 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_7899_p2 = ((indvar_flatten2_reg_5018 == 13'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_5284_p2 = ((indvar_flatten_reg_4843 == 8'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_5334_p2 = ((w_phi_fu_4870_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_7955_p2 = (exitcond12_fu_7949_p2 & not_exitcond_flatten_2_fu_7944_p2);

assign h11_cast2_mid2_fu_7987_p3 = ((exitcond_mid_fu_7955_p2[0:0] === 1'b1) ? h_13_fu_7968_p2 : h11_mid_fu_7937_p3);

assign h11_mid_fu_7937_p3 = ((exitcond_flatten2_reg_9578[0:0] === 1'b1) ? 4'd1 : h11_phi_fu_5056_p4);

assign h1_cast_cast1_fu_5515_p1 = h1_reg_4878;

assign h1_cast_cast_fu_5519_p1 = h1_reg_4878;

assign h4_cast_cast1_fu_6111_p1 = h4_reg_4913;

assign h4_cast_cast_fu_6115_p1 = h4_reg_4913;

assign h8_cast9_cast1_fu_6707_p1 = h8_reg_4948;

assign h8_cast9_cast_fu_6711_p1 = h8_reg_4948;

assign h9_cast6_cast1_fu_7303_p1 = h9_reg_4983;

assign h9_cast6_cast_fu_7307_p1 = h9_reg_4983;

assign h_10_fu_6802_p2 = (h8_reg_4948 + 4'd1);

assign h_13_fu_7968_p2 = (h11_mid_fu_7937_p3 + 4'd1);

assign h_1_fu_7398_p2 = (h9_reg_4983 + 4'd1);

assign h_7_fu_5610_p2 = (h1_reg_4878 + 4'd1);

assign h_8_fu_5346_p2 = (h_mid_fu_5310_p3 + 4'd1);

assign h_9_fu_6206_p2 = (h4_reg_4913 + 4'd1);

assign h_cast_mid2_fu_5365_p3 = ((exitcond5_mid_fu_5340_p2[0:0] === 1'b1) ? h_8_fu_5346_p2 : h_mid_fu_5310_p3);

assign h_mid_fu_5310_p3 = ((exitcond_flatten_reg_8351[0:0] === 1'b1) ? 4'd1 : h_phi_fu_4858_p4);

assign indvar_flatten21_op_fu_7917_p2 = (indvar_flatten3_reg_5041 + 8'd1);

assign indvar_flatten_next1_fu_5278_p2 = (indvar_flatten1_reg_4820 + 13'd1);

assign indvar_flatten_next2_fu_7923_p3 = ((exitcond_flatten2_fu_7911_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten21_op_fu_7917_p2);

assign indvar_flatten_next3_fu_7905_p2 = (indvar_flatten2_reg_5018 + 13'd1);

assign indvar_flatten_next_fu_5296_p3 = ((exitcond_flatten_fu_5284_p2[0:0] === 1'b1) ? 8'd1 : indvar_flatten_op_fu_5290_p2);

assign indvar_flatten_op_fu_5290_p2 = (indvar_flatten_reg_4843 + 8'd1);

assign not_exitcond_flatten_2_fu_7944_p2 = (exitcond_flatten2_reg_9578 ^ 1'd1);

assign not_exitcond_flatten_fu_5329_p2 = (exitcond_flatten_reg_8351 ^ 1'd1);

assign p_shl10_cast_fu_6271_p1 = tmp_69_fu_6263_p3;

assign p_shl11_cast_fu_6283_p1 = tmp_70_fu_6275_p3;

assign p_shl12_cast_fu_6236_p1 = tmp_169_fu_6228_p3;

assign p_shl13_cast_fu_6248_p1 = tmp_170_fu_6240_p3;

assign p_shl14_cast_fu_6723_p1 = tmp_153_fu_6715_p3;

assign p_shl15_cast_fu_6735_p1 = tmp_154_fu_6727_p3;

assign p_shl16_cast_fu_6867_p1 = tmp_95_fu_6859_p3;

assign p_shl17_cast_fu_6879_p1 = tmp_96_fu_6871_p3;

assign p_shl18_cast_fu_6832_p1 = tmp_178_fu_6824_p3;

assign p_shl19_cast_fu_6844_p1 = tmp_179_fu_6836_p3;

assign p_shl1_cast_fu_5391_p1 = tmp_42_fu_5384_p3;

assign p_shl20_cast_fu_7319_p1 = tmp_165_fu_7311_p3;

assign p_shl21_cast_fu_7331_p1 = tmp_166_fu_7323_p3;

assign p_shl22_cast_fu_7463_p1 = tmp_124_fu_7455_p3;

assign p_shl23_cast_fu_7475_p1 = tmp_125_fu_7467_p3;

assign p_shl24_cast_fu_7428_p1 = tmp_189_fu_7420_p3;

assign p_shl25_cast_fu_7440_p1 = tmp_190_fu_7432_p3;

assign p_shl26_cast_fu_8002_p1 = tmp_97_fu_7995_p3;

assign p_shl27_cast_fu_8013_p1 = tmp_98_fu_8006_p3;

assign p_shl2_cast_fu_5531_p1 = tmp_146_fu_5523_p3;

assign p_shl3_cast_fu_5543_p1 = tmp_147_fu_5535_p3;

assign p_shl4_cast_fu_5675_p1 = tmp_43_fu_5667_p3;

assign p_shl5_cast_fu_5687_p1 = tmp_44_fu_5679_p3;

assign p_shl6_cast_fu_5640_p1 = tmp_157_fu_5632_p3;

assign p_shl7_cast_fu_5652_p1 = tmp_158_fu_5644_p3;

assign p_shl8_cast_fu_6127_p1 = tmp_149_fu_6119_p3;

assign p_shl9_cast_fu_6139_p1 = tmp_150_fu_6131_p3;

assign p_shl_cast_fu_5380_p1 = tmp_41_fu_5373_p3;

assign tmp_100_fu_6951_p1 = grp_MUL_DP_fu_5076_ap_return_0[7:0];

assign tmp_101_fu_6962_p1 = grp_MUL_DP_fu_5076_ap_return_1[7:0];

assign tmp_102_fu_6981_p1 = grp_MUL_DP_fu_5085_ap_return_0[7:0];

assign tmp_103_fu_6992_p1 = grp_MUL_DP_fu_5085_ap_return_1[7:0];

assign tmp_104_fu_7011_p1 = grp_MUL_DP_fu_5094_ap_return_0[7:0];

assign tmp_105_fu_7022_p1 = grp_MUL_DP_fu_5094_ap_return_1[7:0];

assign tmp_106_fu_7041_p1 = grp_MUL_DP_fu_5103_ap_return_0[7:0];

assign tmp_107_fu_7052_p1 = grp_MUL_DP_fu_5103_ap_return_1[7:0];

assign tmp_108_fu_7071_p1 = grp_MUL_DP_fu_5112_ap_return_0[7:0];

assign tmp_109_fu_7082_p1 = grp_MUL_DP_fu_5112_ap_return_1[7:0];

assign tmp_110_fu_7101_p1 = grp_MUL_DP_fu_5121_ap_return_0[7:0];

assign tmp_111_fu_7112_p1 = grp_MUL_DP_fu_5121_ap_return_1[7:0];

assign tmp_112_fu_7131_p1 = grp_MUL_DP_fu_5130_ap_return_0[7:0];

assign tmp_113_fu_7142_p1 = grp_MUL_DP_fu_5130_ap_return_1[7:0];

assign tmp_114_fu_7161_p1 = grp_MUL_DP_fu_5139_ap_return_0[7:0];

assign tmp_115_fu_7172_p1 = grp_MUL_DP_fu_5139_ap_return_1[7:0];

assign tmp_116_fu_7191_p1 = grp_MUL_DP_fu_5148_ap_return_0[7:0];

assign tmp_117_fu_7202_p1 = grp_MUL_DP_fu_5148_ap_return_1[7:0];

assign tmp_118_fu_7221_p1 = grp_MUL_DP_fu_5157_ap_return_0[7:0];

assign tmp_119_fu_7232_p1 = grp_MUL_DP_fu_5157_ap_return_1[7:0];

assign tmp_11_fu_6955_p2 = (ShuffleConvs_2_Downs_78_q0 + tmp_100_fu_6951_p1);

assign tmp_120_fu_7251_p1 = grp_MUL_DP_fu_5166_ap_return_0[7:0];

assign tmp_121_fu_7262_p1 = grp_MUL_DP_fu_5166_ap_return_1[7:0];

assign tmp_122_fu_7281_p1 = grp_MUL_DP_fu_5175_ap_return_0[7:0];

assign tmp_123_fu_7292_p1 = grp_MUL_DP_fu_5175_ap_return_1[7:0];

assign tmp_124_fu_7455_p3 = {{tmp_192_fu_7450_p2}, {3'd0}};

assign tmp_125_fu_7467_p3 = {{tmp_192_fu_7450_p2}, {1'd0}};

assign tmp_126_fu_7547_p1 = grp_MUL_DP_fu_5076_ap_return_0[7:0];

assign tmp_127_fu_7558_p1 = grp_MUL_DP_fu_5076_ap_return_1[7:0];

assign tmp_128_fu_7577_p1 = grp_MUL_DP_fu_5085_ap_return_0[7:0];

assign tmp_129_fu_7588_p1 = grp_MUL_DP_fu_5085_ap_return_1[7:0];

assign tmp_130_fu_7607_p1 = grp_MUL_DP_fu_5094_ap_return_0[7:0];

assign tmp_131_fu_7618_p1 = grp_MUL_DP_fu_5094_ap_return_1[7:0];

assign tmp_132_fu_7637_p1 = grp_MUL_DP_fu_5103_ap_return_0[7:0];

assign tmp_133_fu_7648_p1 = grp_MUL_DP_fu_5103_ap_return_1[7:0];

assign tmp_134_fu_7667_p1 = grp_MUL_DP_fu_5112_ap_return_0[7:0];

assign tmp_135_fu_7678_p1 = grp_MUL_DP_fu_5112_ap_return_1[7:0];

assign tmp_136_fu_7697_p1 = grp_MUL_DP_fu_5121_ap_return_0[7:0];

assign tmp_137_fu_7708_p1 = grp_MUL_DP_fu_5121_ap_return_1[7:0];

assign tmp_138_fu_7727_p1 = grp_MUL_DP_fu_5130_ap_return_0[7:0];

assign tmp_139_fu_7738_p1 = grp_MUL_DP_fu_5130_ap_return_1[7:0];

assign tmp_140_fu_7757_p1 = grp_MUL_DP_fu_5139_ap_return_0[7:0];

assign tmp_141_fu_7768_p1 = grp_MUL_DP_fu_5139_ap_return_1[7:0];

assign tmp_142_fu_7787_p1 = grp_MUL_DP_fu_5148_ap_return_0[7:0];

assign tmp_143_fu_7798_p1 = grp_MUL_DP_fu_5148_ap_return_1[7:0];

assign tmp_144_fu_5395_p2 = (p_shl_cast_fu_5380_p1 + p_shl1_cast_fu_5391_p1);

assign tmp_145_fu_5404_p2 = (w_cast_cast_fu_5401_p1 + tmp_144_fu_5395_p2);

assign tmp_146_fu_5523_p3 = {{h1_reg_4878}, {3'd0}};

assign tmp_147_fu_5535_p3 = {{h1_reg_4878}, {1'd0}};

assign tmp_148_fu_5547_p2 = (p_shl3_cast_fu_5543_p1 + p_shl2_cast_fu_5531_p1);

assign tmp_149_fu_6119_p3 = {{h4_reg_4913}, {3'd0}};

assign tmp_14_fu_6966_p2 = (ShuffleConvs_2_Downs_25_q0 + tmp_101_fu_6962_p1);

assign tmp_150_fu_6131_p3 = {{h4_reg_4913}, {1'd0}};

assign tmp_151_fu_6143_p2 = (p_shl9_cast_fu_6139_p1 + p_shl8_cast_fu_6127_p1);

assign tmp_152_fu_5571_p2 = (tmp_148_reg_8402 + w2_cast_cast_fu_5567_p1);

assign tmp_153_fu_6715_p3 = {{h8_reg_4948}, {3'd0}};

assign tmp_154_fu_6727_p3 = {{h8_reg_4948}, {1'd0}};

assign tmp_155_fu_6739_p2 = (p_shl15_cast_fu_6735_p1 + p_shl14_cast_fu_6723_p1);

assign tmp_156_fu_6167_p2 = (tmp_151_reg_8696 + w5_cast_cast_fu_6163_p1);

assign tmp_157_fu_5632_p3 = {{ci_reg_4902}, {3'd0}};

assign tmp_158_fu_5644_p3 = {{ci_reg_4902}, {1'd0}};

assign tmp_159_fu_5656_p2 = (p_shl6_cast_fu_5640_p1 + p_shl7_cast_fu_5652_p1);

assign tmp_160_fu_5662_p2 = (h1_cast_cast_reg_8397 + tmp_159_fu_5656_p2);

assign tmp_161_fu_5691_p2 = (p_shl4_cast_fu_5675_p1 + p_shl5_cast_fu_5687_p1);

assign tmp_162_fu_5697_p2 = (w2_cast_cast2_reg_8415 + tmp_161_fu_5691_p2);

assign tmp_163_fu_5707_p2 = (h1_cast_cast1_reg_8392 + ci_reg_4902);

assign tmp_164_fu_5712_p2 = (w2_cast_cast1_reg_8410 + tmp_163_fu_5707_p2);

assign tmp_165_fu_7311_p3 = {{h9_reg_4983}, {3'd0}};

assign tmp_166_fu_7323_p3 = {{h9_reg_4983}, {1'd0}};

assign tmp_167_fu_7335_p2 = (p_shl21_cast_fu_7331_p1 + p_shl20_cast_fu_7319_p1);

assign tmp_168_fu_6763_p2 = (tmp_155_reg_8990 + w9_cast8_cast_fu_6759_p1);

assign tmp_169_fu_6228_p3 = {{ci6_reg_4937}, {3'd0}};

assign tmp_16_fu_7551_p2 = (ShuffleConvs_2_Downs_65_q0 + tmp_126_fu_7547_p1);

assign tmp_170_fu_6240_p3 = {{ci6_reg_4937}, {1'd0}};

assign tmp_171_fu_6252_p2 = (p_shl12_cast_fu_6236_p1 + p_shl13_cast_fu_6248_p1);

assign tmp_172_fu_6258_p2 = (h4_cast_cast_reg_8691 + tmp_171_fu_6252_p2);

assign tmp_173_fu_6287_p2 = (p_shl10_cast_fu_6271_p1 + p_shl11_cast_fu_6283_p1);

assign tmp_174_fu_6293_p2 = (w5_cast_cast2_reg_8709 + tmp_173_fu_6287_p2);

assign tmp_175_fu_6303_p2 = (h4_cast_cast1_reg_8686 + ci6_reg_4937);

assign tmp_176_fu_6308_p2 = (w5_cast_cast1_reg_8704 + tmp_175_fu_6303_p2);

assign tmp_177_fu_7359_p2 = (tmp_167_reg_9284 + w10_cast5_cast_fu_7355_p1);

assign tmp_178_fu_6824_p3 = {{ci2_reg_4972}, {3'd0}};

assign tmp_179_fu_6836_p3 = {{ci2_reg_4972}, {1'd0}};

assign tmp_180_fu_6848_p2 = (p_shl18_cast_fu_6832_p1 + p_shl19_cast_fu_6844_p1);

assign tmp_181_fu_6854_p2 = (h8_cast9_cast_reg_8985 + tmp_180_fu_6848_p2);

assign tmp_182_fu_6883_p2 = (p_shl16_cast_fu_6867_p1 + p_shl17_cast_fu_6879_p1);

assign tmp_183_cast_fu_5410_p1 = tmp_145_fu_5404_p2;

assign tmp_183_fu_6889_p2 = (w9_cast8_cast2_reg_9003 + tmp_182_fu_6883_p2);

assign tmp_184_fu_6899_p2 = (h8_cast9_cast1_reg_8980 + ci2_reg_4972);

assign tmp_185_fu_6904_p2 = (w9_cast8_cast1_reg_8998 + tmp_184_fu_6899_p2);

assign tmp_186_fu_7974_p2 = (exitcond_mid_fu_7955_p2 | exitcond_flatten2_reg_9578);

assign tmp_187_fu_8017_p2 = (p_shl26_cast_fu_8002_p1 + p_shl27_cast_fu_8013_p1);

assign tmp_188_fu_8026_p2 = (w12_cast1_cast_fu_8023_p1 + tmp_187_fu_8017_p2);

assign tmp_189_fu_7420_p3 = {{ci3_reg_5007}, {3'd0}};

assign tmp_18_fu_7562_p2 = (ShuffleConvs_2_Downs_12_q0 + tmp_127_fu_7558_p1);

assign tmp_190_cast_fu_5576_p1 = tmp_152_fu_5571_p2;

assign tmp_190_fu_7432_p3 = {{ci3_reg_5007}, {1'd0}};

assign tmp_191_fu_7444_p2 = (p_shl24_cast_fu_7428_p1 + p_shl25_cast_fu_7440_p1);

assign tmp_192_fu_7450_p2 = (h9_cast6_cast_reg_9279 + tmp_191_fu_7444_p2);

assign tmp_193_fu_7479_p2 = (p_shl22_cast_fu_7463_p1 + p_shl23_cast_fu_7475_p1);

assign tmp_194_cast_fu_6172_p1 = tmp_156_fu_6167_p2;

assign tmp_194_fu_7485_p2 = (w10_cast5_cast2_reg_9298 + tmp_193_fu_7479_p2);

assign tmp_195_fu_7495_p2 = (h9_cast6_cast1_reg_9274 + ci3_reg_5007);

assign tmp_196_fu_7500_p2 = (w10_cast5_cast1_reg_9293 + tmp_195_fu_7495_p2);

assign tmp_197_fu_7817_p1 = grp_MUL_DP_fu_5157_ap_return_0[7:0];

assign tmp_198_fu_7828_p1 = grp_MUL_DP_fu_5157_ap_return_1[7:0];

assign tmp_199_fu_7847_p1 = grp_MUL_DP_fu_5166_ap_return_0[7:0];

assign tmp_200_fu_7858_p1 = grp_MUL_DP_fu_5166_ap_return_1[7:0];

assign tmp_201_fu_7877_p1 = grp_MUL_DP_fu_5175_ap_return_0[7:0];

assign tmp_202_cast_fu_5702_p1 = tmp_162_fu_5697_p2;

assign tmp_202_fu_7888_p1 = grp_MUL_DP_fu_5175_ap_return_1[7:0];

assign tmp_204_cast_fu_5717_p1 = tmp_164_fu_5712_p2;

assign tmp_208_cast_fu_6768_p1 = tmp_168_fu_6763_p2;

assign tmp_20_10_fu_6093_p2 = (ShuffleConvs_2_Downs_92_q0 + tmp_67_fu_6089_p1);

assign tmp_20_1_fu_5793_p2 = (ShuffleConvs_2_Downs_94_q0 + tmp_47_fu_5789_p1);

assign tmp_20_2_fu_5823_p2 = (ShuffleConvs_2_Downs_83_q0 + tmp_49_fu_5819_p1);

assign tmp_20_3_fu_5853_p2 = (ShuffleConvs_2_Downs_72_q0 + tmp_51_fu_5849_p1);

assign tmp_20_4_fu_5883_p2 = (ShuffleConvs_2_Downs_61_q0 + tmp_53_fu_5879_p1);

assign tmp_20_5_fu_5913_p2 = (ShuffleConvs_2_Downs_50_q0 + tmp_55_fu_5909_p1);

assign tmp_20_6_fu_5943_p2 = (ShuffleConvs_2_Downs_39_q0 + tmp_57_fu_5939_p1);

assign tmp_20_7_fu_5973_p2 = (ShuffleConvs_2_Downs_28_q0 + tmp_59_fu_5969_p1);

assign tmp_20_8_fu_6003_p2 = (ShuffleConvs_2_Downs_17_q0 + tmp_61_fu_5999_p1);

assign tmp_20_9_fu_6033_p2 = (ShuffleConvs_2_Downs_6_q0 + tmp_63_fu_6029_p1);

assign tmp_20_s_fu_6063_p2 = (ShuffleConvs_2_Downs_93_q0 + tmp_65_fu_6059_p1);

assign tmp_216_cast_fu_6298_p1 = tmp_174_fu_6293_p2;

assign tmp_218_cast_fu_6313_p1 = tmp_176_fu_6308_p2;

assign tmp_219_cast_fu_7364_p1 = tmp_177_fu_7359_p2;

assign tmp_227_cast_fu_6894_p1 = tmp_183_fu_6889_p2;

assign tmp_229_cast_fu_6909_p1 = tmp_185_fu_6904_p2;

assign tmp_22_10_fu_6104_p2 = (ShuffleConvs_2_Downs_40_q0 + tmp_68_fu_6100_p1);

assign tmp_22_1_fu_5804_p2 = (ShuffleConvs_2_Downs_51_q0 + tmp_48_fu_5800_p1);

assign tmp_22_2_fu_5834_p2 = (ShuffleConvs_2_Downs_49_q0 + tmp_50_fu_5830_p1);

assign tmp_22_3_fu_5864_p2 = (ShuffleConvs_2_Downs_48_q0 + tmp_52_fu_5860_p1);

assign tmp_22_4_fu_5894_p2 = (ShuffleConvs_2_Downs_47_q0 + tmp_54_fu_5890_p1);

assign tmp_22_5_fu_5924_p2 = (ShuffleConvs_2_Downs_46_q0 + tmp_56_fu_5920_p1);

assign tmp_22_6_fu_5954_p2 = (ShuffleConvs_2_Downs_45_q0 + tmp_58_fu_5950_p1);

assign tmp_22_7_fu_5984_p2 = (ShuffleConvs_2_Downs_44_q0 + tmp_60_fu_5980_p1);

assign tmp_22_8_fu_6014_p2 = (ShuffleConvs_2_Downs_43_q0 + tmp_62_fu_6010_p1);

assign tmp_22_9_fu_6044_p2 = (ShuffleConvs_2_Downs_42_q0 + tmp_64_fu_6040_p1);

assign tmp_22_s_fu_6074_p2 = (ShuffleConvs_2_Downs_41_q0 + tmp_66_fu_6070_p1);

assign tmp_234_cast_fu_8032_p1 = tmp_188_fu_8026_p2;

assign tmp_242_cast_fu_7490_p1 = tmp_194_fu_7485_p2;

assign tmp_244_cast_fu_7505_p1 = tmp_196_fu_7500_p2;

assign tmp_25_10_fu_6689_p2 = (ShuffleConvs_2_Downs_79_q0 + tmp_93_fu_6685_p1);

assign tmp_25_1_fu_6389_p2 = (ShuffleConvs_2_Downs_90_q0 + tmp_73_fu_6385_p1);

assign tmp_25_2_fu_6419_p2 = (ShuffleConvs_2_Downs_89_q0 + tmp_75_fu_6415_p1);

assign tmp_25_3_fu_6449_p2 = (ShuffleConvs_2_Downs_88_q0 + tmp_77_fu_6445_p1);

assign tmp_25_4_fu_6479_p2 = (ShuffleConvs_2_Downs_87_q0 + tmp_79_fu_6475_p1);

assign tmp_25_5_fu_6509_p2 = (ShuffleConvs_2_Downs_86_q0 + tmp_81_fu_6505_p1);

assign tmp_25_6_fu_6539_p2 = (ShuffleConvs_2_Downs_85_q0 + tmp_83_fu_6535_p1);

assign tmp_25_7_fu_6569_p2 = (ShuffleConvs_2_Downs_84_q0 + tmp_85_fu_6565_p1);

assign tmp_25_8_fu_6599_p2 = (ShuffleConvs_2_Downs_82_q0 + tmp_87_fu_6595_p1);

assign tmp_25_9_fu_6629_p2 = (ShuffleConvs_2_Downs_81_q0 + tmp_89_fu_6625_p1);

assign tmp_25_s_fu_6659_p2 = (ShuffleConvs_2_Downs_80_q0 + tmp_91_fu_6655_p1);

assign tmp_27_10_fu_6700_p2 = (ShuffleConvs_2_Downs_26_q0 + tmp_94_fu_6696_p1);

assign tmp_27_1_fu_6400_p2 = (ShuffleConvs_2_Downs_37_q0 + tmp_74_fu_6396_p1);

assign tmp_27_2_fu_6430_p2 = (ShuffleConvs_2_Downs_36_q0 + tmp_76_fu_6426_p1);

assign tmp_27_3_fu_6460_p2 = (ShuffleConvs_2_Downs_35_q0 + tmp_78_fu_6456_p1);

assign tmp_27_4_fu_6490_p2 = (ShuffleConvs_2_Downs_34_q0 + tmp_80_fu_6486_p1);

assign tmp_27_5_fu_6520_p2 = (ShuffleConvs_2_Downs_33_q0 + tmp_82_fu_6516_p1);

assign tmp_27_6_fu_6550_p2 = (ShuffleConvs_2_Downs_32_q0 + tmp_84_fu_6546_p1);

assign tmp_27_7_fu_6580_p2 = (ShuffleConvs_2_Downs_31_q0 + tmp_86_fu_6576_p1);

assign tmp_27_8_fu_6610_p2 = (ShuffleConvs_2_Downs_30_q0 + tmp_88_fu_6606_p1);

assign tmp_27_9_fu_6640_p2 = (ShuffleConvs_2_Downs_29_q0 + tmp_90_fu_6636_p1);

assign tmp_27_s_fu_6670_p2 = (ShuffleConvs_2_Downs_27_q0 + tmp_92_fu_6666_p1);

assign tmp_30_10_fu_7285_p2 = (ShuffleConvs_2_Downs_66_q0 + tmp_122_fu_7281_p1);

assign tmp_30_1_fu_6985_p2 = (ShuffleConvs_2_Downs_77_q0 + tmp_102_fu_6981_p1);

assign tmp_30_2_fu_7015_p2 = (ShuffleConvs_2_Downs_76_q0 + tmp_104_fu_7011_p1);

assign tmp_30_3_fu_7045_p2 = (ShuffleConvs_2_Downs_75_q0 + tmp_106_fu_7041_p1);

assign tmp_30_4_fu_7075_p2 = (ShuffleConvs_2_Downs_74_q0 + tmp_108_fu_7071_p1);

assign tmp_30_5_fu_7105_p2 = (ShuffleConvs_2_Downs_73_q0 + tmp_110_fu_7101_p1);

assign tmp_30_6_fu_7135_p2 = (ShuffleConvs_2_Downs_71_q0 + tmp_112_fu_7131_p1);

assign tmp_30_7_fu_7165_p2 = (ShuffleConvs_2_Downs_70_q0 + tmp_114_fu_7161_p1);

assign tmp_30_8_fu_7195_p2 = (ShuffleConvs_2_Downs_69_q0 + tmp_116_fu_7191_p1);

assign tmp_30_9_fu_7225_p2 = (ShuffleConvs_2_Downs_68_q0 + tmp_118_fu_7221_p1);

assign tmp_30_s_fu_7255_p2 = (ShuffleConvs_2_Downs_67_q0 + tmp_120_fu_7251_p1);

assign tmp_32_10_fu_7296_p2 = (ShuffleConvs_2_Downs_13_q0 + tmp_123_fu_7292_p1);

assign tmp_32_1_fu_6996_p2 = (ShuffleConvs_2_Downs_24_q0 + tmp_103_fu_6992_p1);

assign tmp_32_2_fu_7026_p2 = (ShuffleConvs_2_Downs_23_q0 + tmp_105_fu_7022_p1);

assign tmp_32_3_fu_7056_p2 = (ShuffleConvs_2_Downs_22_q0 + tmp_107_fu_7052_p1);

assign tmp_32_4_fu_7086_p2 = (ShuffleConvs_2_Downs_21_q0 + tmp_109_fu_7082_p1);

assign tmp_32_5_fu_7116_p2 = (ShuffleConvs_2_Downs_20_q0 + tmp_111_fu_7112_p1);

assign tmp_32_6_fu_7146_p2 = (ShuffleConvs_2_Downs_19_q0 + tmp_113_fu_7142_p1);

assign tmp_32_7_fu_7176_p2 = (ShuffleConvs_2_Downs_18_q0 + tmp_115_fu_7172_p1);

assign tmp_32_8_fu_7206_p2 = (ShuffleConvs_2_Downs_16_q0 + tmp_117_fu_7202_p1);

assign tmp_32_9_fu_7236_p2 = (ShuffleConvs_2_Downs_15_q0 + tmp_119_fu_7232_p1);

assign tmp_32_s_fu_7266_p2 = (ShuffleConvs_2_Downs_14_q0 + tmp_121_fu_7262_p1);

assign tmp_36_10_fu_7881_p2 = (ShuffleConvs_2_Downs_53_q0 + tmp_201_fu_7877_p1);

assign tmp_36_1_fu_7581_p2 = (ShuffleConvs_2_Downs_64_q0 + tmp_128_fu_7577_p1);

assign tmp_36_2_fu_7611_p2 = (ShuffleConvs_2_Downs_63_q0 + tmp_130_fu_7607_p1);

assign tmp_36_3_fu_7641_p2 = (ShuffleConvs_2_Downs_62_q0 + tmp_132_fu_7637_p1);

assign tmp_36_4_fu_7671_p2 = (ShuffleConvs_2_Downs_60_q0 + tmp_134_fu_7667_p1);

assign tmp_36_5_fu_7701_p2 = (ShuffleConvs_2_Downs_59_q0 + tmp_136_fu_7697_p1);

assign tmp_36_6_fu_7731_p2 = (ShuffleConvs_2_Downs_58_q0 + tmp_138_fu_7727_p1);

assign tmp_36_7_fu_7761_p2 = (ShuffleConvs_2_Downs_57_q0 + tmp_140_fu_7757_p1);

assign tmp_36_8_fu_7791_p2 = (ShuffleConvs_2_Downs_56_q0 + tmp_142_fu_7787_p1);

assign tmp_36_9_fu_7821_p2 = (ShuffleConvs_2_Downs_55_q0 + tmp_197_fu_7817_p1);

assign tmp_36_s_fu_7851_p2 = (ShuffleConvs_2_Downs_54_q0 + tmp_199_fu_7847_p1);

assign tmp_38_10_fu_7892_p2 = (ShuffleConvs_2_Downs_q0 + tmp_202_fu_7888_p1);

assign tmp_38_1_fu_7592_p2 = (ShuffleConvs_2_Downs_11_q0 + tmp_129_fu_7588_p1);

assign tmp_38_2_fu_7622_p2 = (ShuffleConvs_2_Downs_10_q0 + tmp_131_fu_7618_p1);

assign tmp_38_3_fu_7652_p2 = (ShuffleConvs_2_Downs_9_q0 + tmp_133_fu_7648_p1);

assign tmp_38_4_fu_7682_p2 = (ShuffleConvs_2_Downs_8_q0 + tmp_135_fu_7678_p1);

assign tmp_38_5_fu_7712_p2 = (ShuffleConvs_2_Downs_7_q0 + tmp_137_fu_7708_p1);

assign tmp_38_6_fu_7742_p2 = (ShuffleConvs_2_Downs_5_q0 + tmp_139_fu_7738_p1);

assign tmp_38_7_fu_7772_p2 = (ShuffleConvs_2_Downs_4_q0 + tmp_141_fu_7768_p1);

assign tmp_38_8_fu_7802_p2 = (ShuffleConvs_2_Downs_3_q0 + tmp_143_fu_7798_p1);

assign tmp_38_9_fu_7832_p2 = (ShuffleConvs_2_Downs_2_q0 + tmp_198_fu_7828_p1);

assign tmp_38_s_fu_7862_p2 = (ShuffleConvs_2_Downs_1_q0 + tmp_200_fu_7858_p1);

assign tmp_3_fu_5763_p2 = (ShuffleConvs_2_Downs_95_q0 + tmp_45_fu_5759_p1);

assign tmp_41_fu_5373_p3 = {{h_cast_mid2_reg_8375}, {3'd0}};

assign tmp_42_fu_5384_p3 = {{h_cast_mid2_reg_8375}, {1'd0}};

assign tmp_43_fu_5667_p3 = {{tmp_160_fu_5662_p2}, {3'd0}};

assign tmp_44_fu_5679_p3 = {{tmp_160_fu_5662_p2}, {1'd0}};

assign tmp_45_fu_5759_p1 = grp_MUL_DP_fu_5076_ap_return_0[7:0];

assign tmp_46_fu_5770_p1 = grp_MUL_DP_fu_5076_ap_return_1[7:0];

assign tmp_47_fu_5789_p1 = grp_MUL_DP_fu_5085_ap_return_0[7:0];

assign tmp_48_fu_5800_p1 = grp_MUL_DP_fu_5085_ap_return_1[7:0];

assign tmp_49_fu_5819_p1 = grp_MUL_DP_fu_5094_ap_return_0[7:0];

assign tmp_50_fu_5830_p1 = grp_MUL_DP_fu_5094_ap_return_1[7:0];

assign tmp_51_fu_5849_p1 = grp_MUL_DP_fu_5103_ap_return_0[7:0];

assign tmp_52_fu_5860_p1 = grp_MUL_DP_fu_5103_ap_return_1[7:0];

assign tmp_53_fu_5879_p1 = grp_MUL_DP_fu_5112_ap_return_0[7:0];

assign tmp_54_fu_5890_p1 = grp_MUL_DP_fu_5112_ap_return_1[7:0];

assign tmp_55_fu_5909_p1 = grp_MUL_DP_fu_5121_ap_return_0[7:0];

assign tmp_56_fu_5920_p1 = grp_MUL_DP_fu_5121_ap_return_1[7:0];

assign tmp_57_fu_5939_p1 = grp_MUL_DP_fu_5130_ap_return_0[7:0];

assign tmp_58_fu_5950_p1 = grp_MUL_DP_fu_5130_ap_return_1[7:0];

assign tmp_59_fu_5969_p1 = grp_MUL_DP_fu_5139_ap_return_0[7:0];

assign tmp_5_fu_5774_p2 = (ShuffleConvs_2_Downs_52_q0 + tmp_46_fu_5770_p1);

assign tmp_60_fu_5980_p1 = grp_MUL_DP_fu_5139_ap_return_1[7:0];

assign tmp_61_fu_5999_p1 = grp_MUL_DP_fu_5148_ap_return_0[7:0];

assign tmp_62_fu_6010_p1 = grp_MUL_DP_fu_5148_ap_return_1[7:0];

assign tmp_63_fu_6029_p1 = grp_MUL_DP_fu_5157_ap_return_0[7:0];

assign tmp_64_fu_6040_p1 = grp_MUL_DP_fu_5157_ap_return_1[7:0];

assign tmp_65_fu_6059_p1 = grp_MUL_DP_fu_5166_ap_return_0[7:0];

assign tmp_66_fu_6070_p1 = grp_MUL_DP_fu_5166_ap_return_1[7:0];

assign tmp_67_fu_6089_p1 = grp_MUL_DP_fu_5175_ap_return_0[7:0];

assign tmp_68_fu_6100_p1 = grp_MUL_DP_fu_5175_ap_return_1[7:0];

assign tmp_69_fu_6263_p3 = {{tmp_172_fu_6258_p2}, {3'd0}};

assign tmp_70_fu_6275_p3 = {{tmp_172_fu_6258_p2}, {1'd0}};

assign tmp_71_fu_6355_p1 = grp_MUL_DP_fu_5076_ap_return_0[7:0];

assign tmp_72_fu_6366_p1 = grp_MUL_DP_fu_5076_ap_return_1[7:0];

assign tmp_73_fu_6385_p1 = grp_MUL_DP_fu_5085_ap_return_0[7:0];

assign tmp_74_fu_6396_p1 = grp_MUL_DP_fu_5085_ap_return_1[7:0];

assign tmp_75_fu_6415_p1 = grp_MUL_DP_fu_5094_ap_return_0[7:0];

assign tmp_76_fu_6426_p1 = grp_MUL_DP_fu_5094_ap_return_1[7:0];

assign tmp_77_fu_6445_p1 = grp_MUL_DP_fu_5103_ap_return_0[7:0];

assign tmp_78_fu_6456_p1 = grp_MUL_DP_fu_5103_ap_return_1[7:0];

assign tmp_79_fu_6475_p1 = grp_MUL_DP_fu_5112_ap_return_0[7:0];

assign tmp_7_fu_6359_p2 = (ShuffleConvs_2_Downs_91_q0 + tmp_71_fu_6355_p1);

assign tmp_80_fu_6486_p1 = grp_MUL_DP_fu_5112_ap_return_1[7:0];

assign tmp_81_fu_6505_p1 = grp_MUL_DP_fu_5121_ap_return_0[7:0];

assign tmp_82_fu_6516_p1 = grp_MUL_DP_fu_5121_ap_return_1[7:0];

assign tmp_83_fu_6535_p1 = grp_MUL_DP_fu_5130_ap_return_0[7:0];

assign tmp_84_fu_6546_p1 = grp_MUL_DP_fu_5130_ap_return_1[7:0];

assign tmp_85_fu_6565_p1 = grp_MUL_DP_fu_5139_ap_return_0[7:0];

assign tmp_86_fu_6576_p1 = grp_MUL_DP_fu_5139_ap_return_1[7:0];

assign tmp_87_fu_6595_p1 = grp_MUL_DP_fu_5148_ap_return_0[7:0];

assign tmp_88_fu_6606_p1 = grp_MUL_DP_fu_5148_ap_return_1[7:0];

assign tmp_89_fu_6625_p1 = grp_MUL_DP_fu_5157_ap_return_0[7:0];

assign tmp_90_fu_6636_p1 = grp_MUL_DP_fu_5157_ap_return_1[7:0];

assign tmp_91_fu_6655_p1 = grp_MUL_DP_fu_5166_ap_return_0[7:0];

assign tmp_92_fu_6666_p1 = grp_MUL_DP_fu_5166_ap_return_1[7:0];

assign tmp_93_fu_6685_p1 = grp_MUL_DP_fu_5175_ap_return_0[7:0];

assign tmp_94_fu_6696_p1 = grp_MUL_DP_fu_5175_ap_return_1[7:0];

assign tmp_95_fu_6859_p3 = {{tmp_181_fu_6854_p2}, {3'd0}};

assign tmp_96_fu_6871_p3 = {{tmp_181_fu_6854_p2}, {1'd0}};

assign tmp_97_fu_7995_p3 = {{h11_cast2_mid2_reg_9603}, {3'd0}};

assign tmp_98_fu_8006_p3 = {{h11_cast2_mid2_reg_9603}, {1'd0}};

assign tmp_99_fu_8334_p3 = tmp_2_fu_8137_p98[32'd7];

assign tmp_9_fu_6370_p2 = (ShuffleConvs_2_Downs_38_q0 + tmp_72_fu_6366_p1);

assign tmp_s_fu_5352_p2 = (exitcond5_mid_fu_5340_p2 | exitcond_flatten_reg_8351);

assign w10_cast5_cast1_fu_7347_p1 = w10_reg_4995;

assign w10_cast5_cast2_fu_7351_p1 = w10_reg_4995;

assign w10_cast5_cast_fu_7355_p1 = w10_reg_4995;

assign w12_cast1_cast_fu_8023_p1 = w12_mid2_reg_9597;

assign w12_mid2_fu_7979_p3 = ((tmp_186_fu_7974_p2[0:0] === 1'b1) ? 4'd1 : w11_phi_fu_5068_p4);

assign w2_cast_cast1_fu_5559_p1 = w2_reg_4890;

assign w2_cast_cast2_fu_5563_p1 = w2_reg_4890;

assign w2_cast_cast_fu_5567_p1 = w2_reg_4890;

assign w5_cast_cast1_fu_6155_p1 = w5_reg_4925;

assign w5_cast_cast2_fu_6159_p1 = w5_reg_4925;

assign w5_cast_cast_fu_6163_p1 = w5_reg_4925;

assign w9_cast8_cast1_fu_6751_p1 = w9_reg_4960;

assign w9_cast8_cast2_fu_6755_p1 = w9_reg_4960;

assign w9_cast8_cast_fu_6759_p1 = w9_reg_4960;

assign w_12_fu_6937_p2 = (w9_reg_4960 + 4'd1);

assign w_13_fu_7533_p2 = (w10_reg_4995 + 4'd1);

assign w_14_fu_8132_p2 = (w12_mid2_reg_9597 + 4'd1);

assign w_7_fu_5510_p2 = (w_mid2_reg_8369 + 4'd1);

assign w_8_fu_5745_p2 = (w2_reg_4890 + 4'd1);

assign w_9_fu_6341_p2 = (w5_reg_4925 + 4'd1);

assign w_cast_cast_fu_5401_p1 = w_mid2_reg_8369;

assign w_mid2_fu_5357_p3 = ((tmp_s_fu_5352_p2[0:0] === 1'b1) ? 4'd1 : w_phi_fu_4870_p4);

assign weight_0_V_address0 = weight_0_V_addr_reg_8553;

assign weight_10_V_address0 = weight_10_V_addr_reg_8603;

assign weight_11_V_address0 = weight_11_V_addr_reg_8608;

assign weight_12_V_address0 = weight_12_V_addr_reg_8847;

assign weight_13_V_address0 = weight_13_V_addr_reg_8852;

assign weight_14_V_address0 = weight_14_V_addr_reg_8857;

assign weight_15_V_address0 = weight_15_V_addr_reg_8862;

assign weight_16_V_address0 = weight_16_V_addr_reg_8867;

assign weight_17_V_address0 = weight_17_V_addr_reg_8872;

assign weight_18_V_address0 = weight_18_V_addr_reg_8877;

assign weight_19_V_address0 = weight_19_V_addr_reg_8882;

assign weight_1_V_address0 = weight_1_V_addr_reg_8558;

assign weight_20_V_address0 = weight_20_V_addr_reg_8887;

assign weight_21_V_address0 = weight_21_V_addr_reg_8892;

assign weight_22_V_address0 = weight_22_V_addr_reg_8897;

assign weight_23_V_address0 = weight_23_V_addr_reg_8902;

assign weight_24_V_address0 = weight_24_V_addr_reg_9141;

assign weight_25_V_address0 = weight_25_V_addr_reg_9146;

assign weight_26_V_address0 = weight_26_V_addr_reg_9151;

assign weight_27_V_address0 = weight_27_V_addr_reg_9156;

assign weight_28_V_address0 = weight_28_V_addr_reg_9161;

assign weight_29_V_address0 = weight_29_V_addr_reg_9166;

assign weight_2_V_address0 = weight_2_V_addr_reg_8563;

assign weight_30_V_address0 = weight_30_V_addr_reg_9171;

assign weight_31_V_address0 = weight_31_V_addr_reg_9176;

assign weight_32_V_address0 = weight_32_V_addr_reg_9181;

assign weight_33_V_address0 = weight_33_V_addr_reg_9186;

assign weight_34_V_address0 = weight_34_V_addr_reg_9191;

assign weight_35_V_address0 = weight_35_V_addr_reg_9196;

assign weight_36_V_address0 = weight_36_V_addr_reg_9436;

assign weight_37_V_address0 = weight_37_V_addr_reg_9441;

assign weight_38_V_address0 = weight_38_V_addr_reg_9446;

assign weight_39_V_address0 = weight_39_V_addr_reg_9451;

assign weight_3_V_address0 = weight_3_V_addr_reg_8568;

assign weight_40_V_address0 = weight_40_V_addr_reg_9456;

assign weight_41_V_address0 = weight_41_V_addr_reg_9461;

assign weight_42_V_address0 = weight_42_V_addr_reg_9466;

assign weight_43_V_address0 = weight_43_V_addr_reg_9471;

assign weight_44_V_address0 = weight_44_V_addr_reg_9476;

assign weight_45_V_address0 = weight_45_V_addr_reg_9481;

assign weight_46_V_address0 = weight_46_V_addr_reg_9486;

assign weight_47_V_address0 = weight_47_V_addr_reg_9491;

assign weight_48_V_address0 = weight_48_V_addr_reg_8613;

assign weight_49_V_address0 = weight_49_V_addr_reg_8618;

assign weight_4_V_address0 = weight_4_V_addr_reg_8573;

assign weight_50_V_address0 = weight_50_V_addr_reg_8623;

assign weight_51_V_address0 = weight_51_V_addr_reg_8628;

assign weight_52_V_address0 = weight_52_V_addr_reg_8633;

assign weight_53_V_address0 = weight_53_V_addr_reg_8638;

assign weight_54_V_address0 = weight_54_V_addr_reg_8643;

assign weight_55_V_address0 = weight_55_V_addr_reg_8648;

assign weight_56_V_address0 = weight_56_V_addr_reg_8653;

assign weight_57_V_address0 = weight_57_V_addr_reg_8658;

assign weight_58_V_address0 = weight_58_V_addr_reg_8663;

assign weight_59_V_address0 = weight_59_V_addr_reg_8668;

assign weight_5_V_address0 = weight_5_V_addr_reg_8578;

assign weight_60_V_address0 = weight_60_V_addr_reg_8907;

assign weight_61_V_address0 = weight_61_V_addr_reg_8912;

assign weight_62_V_address0 = weight_62_V_addr_reg_8917;

assign weight_63_V_address0 = weight_63_V_addr_reg_8922;

assign weight_64_V_address0 = weight_64_V_addr_reg_8927;

assign weight_65_V_address0 = weight_65_V_addr_reg_8932;

assign weight_66_V_address0 = weight_66_V_addr_reg_8937;

assign weight_67_V_address0 = weight_67_V_addr_reg_8942;

assign weight_68_V_address0 = weight_68_V_addr_reg_8947;

assign weight_69_V_address0 = weight_69_V_addr_reg_8952;

assign weight_6_V_address0 = weight_6_V_addr_reg_8583;

assign weight_70_V_address0 = weight_70_V_addr_reg_8957;

assign weight_71_V_address0 = weight_71_V_addr_reg_8962;

assign weight_72_V_address0 = weight_72_V_addr_reg_9201;

assign weight_73_V_address0 = weight_73_V_addr_reg_9206;

assign weight_74_V_address0 = weight_74_V_addr_reg_9211;

assign weight_75_V_address0 = weight_75_V_addr_reg_9216;

assign weight_76_V_address0 = weight_76_V_addr_reg_9221;

assign weight_77_V_address0 = weight_77_V_addr_reg_9226;

assign weight_78_V_address0 = weight_78_V_addr_reg_9231;

assign weight_79_V_address0 = weight_79_V_addr_reg_9236;

assign weight_7_V_address0 = weight_7_V_addr_reg_8588;

assign weight_80_V_address0 = weight_80_V_addr_reg_9241;

assign weight_81_V_address0 = weight_81_V_addr_reg_9246;

assign weight_82_V_address0 = weight_82_V_addr_reg_9251;

assign weight_83_V_address0 = weight_83_V_addr_reg_9256;

assign weight_84_V_address0 = weight_84_V_addr_reg_9496;

assign weight_85_V_address0 = weight_85_V_addr_reg_9501;

assign weight_86_V_address0 = weight_86_V_addr_reg_9506;

assign weight_87_V_address0 = weight_87_V_addr_reg_9511;

assign weight_88_V_address0 = weight_88_V_addr_reg_9516;

assign weight_89_V_address0 = weight_89_V_addr_reg_9521;

assign weight_8_V_address0 = weight_8_V_addr_reg_8593;

assign weight_90_V_address0 = weight_90_V_addr_reg_9526;

assign weight_91_V_address0 = weight_91_V_addr_reg_9531;

assign weight_92_V_address0 = weight_92_V_addr_reg_9536;

assign weight_93_V_address0 = weight_93_V_addr_reg_9541;

assign weight_94_V_address0 = weight_94_V_addr_reg_9546;

assign weight_95_V_address0 = weight_95_V_addr_reg_9551;

assign weight_9_V_address0 = weight_9_V_addr_reg_8598;

always @ (posedge ap_clk) begin
    h1_cast_cast1_reg_8392[6:4] <= 3'b000;
    h1_cast_cast_reg_8397[10:4] <= 7'b0000000;
    tmp_148_reg_8402[0] <= 1'b0;
    w2_cast_cast1_reg_8410[6:4] <= 3'b000;
    w2_cast_cast2_reg_8415[14:4] <= 11'b00000000000;
    h4_cast_cast1_reg_8686[6:4] <= 3'b000;
    h4_cast_cast_reg_8691[10:4] <= 7'b0000000;
    tmp_151_reg_8696[0] <= 1'b0;
    w5_cast_cast1_reg_8704[6:4] <= 3'b000;
    w5_cast_cast2_reg_8709[14:4] <= 11'b00000000000;
    h8_cast9_cast1_reg_8980[6:4] <= 3'b000;
    h8_cast9_cast_reg_8985[10:4] <= 7'b0000000;
    tmp_155_reg_8990[0] <= 1'b0;
    w9_cast8_cast1_reg_8998[6:4] <= 3'b000;
    w9_cast8_cast2_reg_9003[14:4] <= 11'b00000000000;
    h9_cast6_cast1_reg_9274[6:4] <= 3'b000;
    h9_cast6_cast_reg_9279[10:4] <= 7'b0000000;
    tmp_167_reg_9284[0] <= 1'b0;
    w10_cast5_cast1_reg_9293[6:4] <= 3'b000;
    w10_cast5_cast2_reg_9298[14:4] <= 11'b00000000000;
end

endmodule //subconv_1x1_8p_p
