// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _subconv_3x3_32_strid_HH_
#define _subconv_3x3_32_strid_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_mac_cud.h"

namespace ap_rtl {

struct subconv_3x3_32_strid : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > weight_V_address0;
    sc_out< sc_logic > weight_V_ce0;
    sc_in< sc_lv<8> > weight_V_q0;
    sc_out< sc_lv<5> > bias_V_address0;
    sc_out< sc_logic > bias_V_ce0;
    sc_in< sc_lv<8> > bias_V_q0;
    sc_out< sc_lv<13> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<8> > output_V_d0;
    sc_out< sc_lv<15> > conv1_output_p_V_address0;
    sc_out< sc_logic > conv1_output_p_V_ce0;
    sc_in< sc_lv<8> > conv1_output_p_V_q0;


    // Module declarations
    subconv_3x3_32_strid(sc_module_name name);
    SC_HAS_PROCESS(subconv_3x3_32_strid);

    ~subconv_3x3_32_strid();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_mac_cud<1,1,8,8,8,8>* ShuffleNetV2_mac_cud_x_U168;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_100_cast_fu_212_p1;
    sc_signal< sc_lv<9> > tmp_100_cast_reg_520;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_86_fu_244_p2;
    sc_signal< sc_lv<10> > tmp_86_reg_525;
    sc_signal< sc_lv<11> > tmp_88_fu_262_p2;
    sc_signal< sc_lv<11> > tmp_88_reg_530;
    sc_signal< sc_lv<5> > co_4_fu_274_p2;
    sc_signal< sc_lv<5> > co_4_reg_538;
    sc_signal< sc_lv<5> > bias_V_addr_reg_543;
    sc_signal< sc_lv<1> > exitcond4_fu_268_p2;
    sc_signal< sc_lv<14> > tmp_90_fu_309_p2;
    sc_signal< sc_lv<14> > tmp_90_reg_548;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > tmp_fu_321_p3;
    sc_signal< sc_lv<6> > tmp_reg_556;
    sc_signal< sc_lv<1> > exitcond5_fu_315_p2;
    sc_signal< sc_lv<13> > output_V_addr_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > tmp_s_fu_349_p3;
    sc_signal< sc_lv<6> > tmp_s_reg_569;
    sc_signal< sc_lv<1> > exitcond6_fu_343_p2;
    sc_signal< sc_lv<5> > h_4_fu_357_p2;
    sc_signal< sc_lv<9> > tmp_93_fu_378_p2;
    sc_signal< sc_lv<9> > tmp_93_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > m_4_fu_390_p2;
    sc_signal< sc_lv<2> > m_4_reg_587;
    sc_signal< sc_lv<16> > tmp_95_fu_440_p2;
    sc_signal< sc_lv<16> > tmp_95_reg_592;
    sc_signal< sc_lv<1> > exitcond7_fu_384_p2;
    sc_signal< sc_lv<5> > w_4_fu_446_p2;
    sc_signal< sc_lv<5> > w_4_reg_597;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > n_4_fu_472_p2;
    sc_signal< sc_lv<2> > n_4_reg_610;
    sc_signal< sc_lv<1> > exitcond_fu_466_p2;
    sc_signal< sc_lv<8> > weight_V_load_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > conv1_output_p_V_loa_reg_625;
    sc_signal< sc_lv<8> > grp_fu_514_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > co_reg_104;
    sc_signal< sc_lv<5> > h_reg_115;
    sc_signal< sc_lv<5> > w_reg_127;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > p_s_reg_139;
    sc_signal< sc_lv<2> > m_reg_151;
    sc_signal< sc_lv<8> > p_09_1_reg_162;
    sc_signal< sc_lv<2> > n_reg_174;
    sc_signal< sc_lv<32> > co_cast7_fu_185_p1;
    sc_signal< sc_lv<32> > tmp_111_cast_fu_338_p1;
    sc_signal< sc_lv<32> > tmp_119_cast_fu_461_p1;
    sc_signal< sc_lv<32> > tmp_120_cast_fu_502_p1;
    sc_signal< sc_lv<7> > tmp_82_fu_194_p3;
    sc_signal< sc_lv<8> > p_shl4_cast_fu_202_p1;
    sc_signal< sc_lv<8> > co_cast7_cast_fu_190_p1;
    sc_signal< sc_lv<8> > tmp_83_fu_206_p2;
    sc_signal< sc_lv<9> > tmp_84_fu_216_p3;
    sc_signal< sc_lv<6> > tmp_85_fu_228_p3;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_240_p1;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_224_p1;
    sc_signal< sc_lv<10> > tmp_87_fu_250_p3;
    sc_signal< sc_lv<11> > p_shl3_cast1_fu_236_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_258_p1;
    sc_signal< sc_lv<10> > h_cast6_cast_fu_280_p1;
    sc_signal< sc_lv<10> > tmp_89_fu_284_p2;
    sc_signal< sc_lv<11> > tmp_29_fu_297_p3;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_289_p3;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_305_p1;
    sc_signal< sc_lv<14> > w_cast5_cast_fu_329_p1;
    sc_signal< sc_lv<14> > tmp_91_fu_333_p2;
    sc_signal< sc_lv<9> > m_cast4_cast_fu_363_p1;
    sc_signal< sc_lv<9> > tmp_92_fu_367_p2;
    sc_signal< sc_lv<9> > tmp_30_fu_372_p2;
    sc_signal< sc_lv<2> > tmp1_fu_396_p2;
    sc_signal< sc_lv<6> > tmp1_cast_fu_402_p1;
    sc_signal< sc_lv<6> > tmp_8_fu_406_p2;
    sc_signal< sc_lv<11> > tmp_8_cast_cast_fu_411_p1;
    sc_signal< sc_lv<11> > tmp_94_fu_415_p2;
    sc_signal< sc_lv<12> > tmp_31_fu_428_p3;
    sc_signal< sc_lv<16> > p_shl8_cast_fu_420_p3;
    sc_signal< sc_lv<16> > p_shl9_cast_fu_436_p1;
    sc_signal< sc_lv<9> > n_cast3_cast_fu_452_p1;
    sc_signal< sc_lv<9> > tmp_96_fu_456_p2;
    sc_signal< sc_lv<2> > tmp2_fu_478_p2;
    sc_signal< sc_lv<6> > tmp2_cast_fu_484_p1;
    sc_signal< sc_lv<6> > tmp_3_fu_488_p2;
    sc_signal< sc_lv<16> > tmp_3_cast_cast_fu_493_p1;
    sc_signal< sc_lv<16> > tmp_97_fu_497_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_V_address0();
    void thread_bias_V_ce0();
    void thread_co_4_fu_274_p2();
    void thread_co_cast7_cast_fu_190_p1();
    void thread_co_cast7_fu_185_p1();
    void thread_conv1_output_p_V_address0();
    void thread_conv1_output_p_V_ce0();
    void thread_exitcond4_fu_268_p2();
    void thread_exitcond5_fu_315_p2();
    void thread_exitcond6_fu_343_p2();
    void thread_exitcond7_fu_384_p2();
    void thread_exitcond_fu_466_p2();
    void thread_h_4_fu_357_p2();
    void thread_h_cast6_cast_fu_280_p1();
    void thread_m_4_fu_390_p2();
    void thread_m_cast4_cast_fu_363_p1();
    void thread_n_4_fu_472_p2();
    void thread_n_cast3_cast_fu_452_p1();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl2_cast_fu_224_p1();
    void thread_p_shl3_cast1_fu_236_p1();
    void thread_p_shl3_cast_fu_240_p1();
    void thread_p_shl4_cast_fu_202_p1();
    void thread_p_shl5_cast_fu_289_p3();
    void thread_p_shl6_cast_fu_305_p1();
    void thread_p_shl8_cast_fu_420_p3();
    void thread_p_shl9_cast_fu_436_p1();
    void thread_p_shl_cast_fu_258_p1();
    void thread_tmp1_cast_fu_402_p1();
    void thread_tmp1_fu_396_p2();
    void thread_tmp2_cast_fu_484_p1();
    void thread_tmp2_fu_478_p2();
    void thread_tmp_100_cast_fu_212_p1();
    void thread_tmp_111_cast_fu_338_p1();
    void thread_tmp_119_cast_fu_461_p1();
    void thread_tmp_120_cast_fu_502_p1();
    void thread_tmp_29_fu_297_p3();
    void thread_tmp_30_fu_372_p2();
    void thread_tmp_31_fu_428_p3();
    void thread_tmp_3_cast_cast_fu_493_p1();
    void thread_tmp_3_fu_488_p2();
    void thread_tmp_82_fu_194_p3();
    void thread_tmp_83_fu_206_p2();
    void thread_tmp_84_fu_216_p3();
    void thread_tmp_85_fu_228_p3();
    void thread_tmp_86_fu_244_p2();
    void thread_tmp_87_fu_250_p3();
    void thread_tmp_88_fu_262_p2();
    void thread_tmp_89_fu_284_p2();
    void thread_tmp_8_cast_cast_fu_411_p1();
    void thread_tmp_8_fu_406_p2();
    void thread_tmp_90_fu_309_p2();
    void thread_tmp_91_fu_333_p2();
    void thread_tmp_92_fu_367_p2();
    void thread_tmp_93_fu_378_p2();
    void thread_tmp_94_fu_415_p2();
    void thread_tmp_95_fu_440_p2();
    void thread_tmp_96_fu_456_p2();
    void thread_tmp_97_fu_497_p2();
    void thread_tmp_fu_321_p3();
    void thread_tmp_s_fu_349_p3();
    void thread_w_4_fu_446_p2();
    void thread_w_cast5_cast_fu_329_p1();
    void thread_weight_V_address0();
    void thread_weight_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
