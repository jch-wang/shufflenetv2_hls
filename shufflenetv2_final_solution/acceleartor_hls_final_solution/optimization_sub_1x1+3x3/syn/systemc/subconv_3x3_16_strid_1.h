// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _subconv_3x3_16_strid_1_HH_
#define _subconv_3x3_16_strid_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ShuffleNetV2_mac_cud.h"

namespace ap_rtl {

struct subconv_3x3_16_strid_1 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > weight_V_address0;
    sc_out< sc_logic > weight_V_ce0;
    sc_in< sc_lv<8> > weight_V_q0;
    sc_out< sc_lv<6> > bias_V_address0;
    sc_out< sc_logic > bias_V_ce0;
    sc_in< sc_lv<8> > bias_V_q0;
    sc_out< sc_lv<13> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<8> > output_V_d0;
    sc_out< sc_lv<14> > shuffleunit0_2_outpu_address0;
    sc_out< sc_logic > shuffleunit0_2_outpu_ce0;
    sc_in< sc_lv<8> > shuffleunit0_2_outpu_q0;


    // Module declarations
    subconv_3x3_16_strid_1(sc_module_name name);
    SC_HAS_PROCESS(subconv_3x3_16_strid_1);

    ~subconv_3x3_16_strid_1();

    sc_trace_file* mVcdFile;

    ShuffleNetV2_mac_cud<1,1,8,8,8,8>* ShuffleNetV2_mac_cud_x_U556;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > tmp_122_cast_fu_218_p1;
    sc_signal< sc_lv<10> > tmp_122_cast_reg_530;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_102_fu_250_p2;
    sc_signal< sc_lv<10> > tmp_102_reg_535;
    sc_signal< sc_lv<11> > tmp_104_fu_268_p2;
    sc_signal< sc_lv<11> > tmp_104_reg_540;
    sc_signal< sc_lv<6> > co_5_fu_280_p2;
    sc_signal< sc_lv<6> > co_5_reg_548;
    sc_signal< sc_lv<6> > bias_V_addr_reg_553;
    sc_signal< sc_lv<1> > exitcond8_fu_274_p2;
    sc_signal< sc_lv<14> > tmp_106_fu_319_p2;
    sc_signal< sc_lv<14> > tmp_106_reg_558;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tmp_fu_331_p3;
    sc_signal< sc_lv<5> > tmp_reg_566;
    sc_signal< sc_lv<1> > exitcond9_fu_325_p2;
    sc_signal< sc_lv<13> > output_V_addr_reg_571;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > tmp_s_fu_359_p3;
    sc_signal< sc_lv<5> > tmp_s_reg_579;
    sc_signal< sc_lv<1> > exitcond3_fu_353_p2;
    sc_signal< sc_lv<4> > h_5_fu_367_p2;
    sc_signal< sc_lv<10> > tmp_109_fu_388_p2;
    sc_signal< sc_lv<10> > tmp_109_reg_589;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > m_5_fu_400_p2;
    sc_signal< sc_lv<2> > m_5_reg_597;
    sc_signal< sc_lv<15> > tmp_111_fu_450_p2;
    sc_signal< sc_lv<15> > tmp_111_reg_602;
    sc_signal< sc_lv<1> > exitcond4_fu_394_p2;
    sc_signal< sc_lv<4> > w_5_fu_456_p2;
    sc_signal< sc_lv<4> > w_5_reg_607;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > n_5_fu_482_p2;
    sc_signal< sc_lv<2> > n_5_reg_620;
    sc_signal< sc_lv<1> > exitcond_fu_476_p2;
    sc_signal< sc_lv<8> > weight_V_load_reg_630;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > shuffleunit0_2_outpu_1_reg_635;
    sc_signal< sc_lv<8> > grp_fu_524_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > co_reg_110;
    sc_signal< sc_lv<4> > h_reg_121;
    sc_signal< sc_lv<4> > w_reg_133;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > p_s_reg_145;
    sc_signal< sc_lv<2> > m_reg_157;
    sc_signal< sc_lv<8> > p_09_1_reg_168;
    sc_signal< sc_lv<2> > n_reg_180;
    sc_signal< sc_lv<32> > co_cast7_fu_191_p1;
    sc_signal< sc_lv<32> > tmp_133_cast_fu_348_p1;
    sc_signal< sc_lv<32> > tmp_141_cast_fu_471_p1;
    sc_signal< sc_lv<32> > tmp_142_cast_fu_512_p1;
    sc_signal< sc_lv<8> > tmp_98_fu_200_p3;
    sc_signal< sc_lv<9> > p_shl4_cast_fu_208_p1;
    sc_signal< sc_lv<9> > co_cast7_cast_fu_196_p1;
    sc_signal< sc_lv<9> > tmp_99_fu_212_p2;
    sc_signal< sc_lv<9> > tmp_100_fu_222_p3;
    sc_signal< sc_lv<7> > tmp_101_fu_234_p3;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_246_p1;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_230_p1;
    sc_signal< sc_lv<10> > tmp_103_fu_256_p3;
    sc_signal< sc_lv<11> > p_shl3_cast2_fu_242_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_264_p1;
    sc_signal< sc_lv<10> > h_cast6_cast_fu_286_p1;
    sc_signal< sc_lv<10> > tmp_105_fu_290_p2;
    sc_signal< sc_lv<13> > tmp_32_fu_295_p3;
    sc_signal< sc_lv<11> > tmp_33_fu_307_p3;
    sc_signal< sc_lv<14> > p_shl5_cast_fu_303_p1;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_315_p1;
    sc_signal< sc_lv<14> > w_cast5_cast_fu_339_p1;
    sc_signal< sc_lv<14> > tmp_107_fu_343_p2;
    sc_signal< sc_lv<10> > m_cast4_cast_fu_373_p1;
    sc_signal< sc_lv<10> > tmp_108_fu_377_p2;
    sc_signal< sc_lv<10> > tmp_34_fu_382_p2;
    sc_signal< sc_lv<2> > tmp1_fu_406_p2;
    sc_signal< sc_lv<5> > tmp1_cast_fu_412_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_416_p2;
    sc_signal< sc_lv<11> > tmp_7_cast_cast_fu_421_p1;
    sc_signal< sc_lv<11> > tmp_110_fu_425_p2;
    sc_signal< sc_lv<12> > tmp_35_fu_438_p3;
    sc_signal< sc_lv<15> > p_shl8_cast_fu_430_p3;
    sc_signal< sc_lv<15> > p_shl9_cast_fu_446_p1;
    sc_signal< sc_lv<10> > n_cast3_cast_fu_462_p1;
    sc_signal< sc_lv<10> > tmp_112_fu_466_p2;
    sc_signal< sc_lv<2> > tmp2_fu_488_p2;
    sc_signal< sc_lv<5> > tmp2_cast_fu_494_p1;
    sc_signal< sc_lv<5> > tmp_8_fu_498_p2;
    sc_signal< sc_lv<15> > tmp_8_cast_cast_fu_503_p1;
    sc_signal< sc_lv<15> > tmp_113_fu_507_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_V_address0();
    void thread_bias_V_ce0();
    void thread_co_5_fu_280_p2();
    void thread_co_cast7_cast_fu_196_p1();
    void thread_co_cast7_fu_191_p1();
    void thread_exitcond3_fu_353_p2();
    void thread_exitcond4_fu_394_p2();
    void thread_exitcond8_fu_274_p2();
    void thread_exitcond9_fu_325_p2();
    void thread_exitcond_fu_476_p2();
    void thread_h_5_fu_367_p2();
    void thread_h_cast6_cast_fu_286_p1();
    void thread_m_5_fu_400_p2();
    void thread_m_cast4_cast_fu_373_p1();
    void thread_n_5_fu_482_p2();
    void thread_n_cast3_cast_fu_462_p1();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl2_cast_fu_230_p1();
    void thread_p_shl3_cast2_fu_242_p1();
    void thread_p_shl3_cast_fu_246_p1();
    void thread_p_shl4_cast_fu_208_p1();
    void thread_p_shl5_cast_fu_303_p1();
    void thread_p_shl6_cast_fu_315_p1();
    void thread_p_shl8_cast_fu_430_p3();
    void thread_p_shl9_cast_fu_446_p1();
    void thread_p_shl_cast_fu_264_p1();
    void thread_shuffleunit0_2_outpu_address0();
    void thread_shuffleunit0_2_outpu_ce0();
    void thread_tmp1_cast_fu_412_p1();
    void thread_tmp1_fu_406_p2();
    void thread_tmp2_cast_fu_494_p1();
    void thread_tmp2_fu_488_p2();
    void thread_tmp_100_fu_222_p3();
    void thread_tmp_101_fu_234_p3();
    void thread_tmp_102_fu_250_p2();
    void thread_tmp_103_fu_256_p3();
    void thread_tmp_104_fu_268_p2();
    void thread_tmp_105_fu_290_p2();
    void thread_tmp_106_fu_319_p2();
    void thread_tmp_107_fu_343_p2();
    void thread_tmp_108_fu_377_p2();
    void thread_tmp_109_fu_388_p2();
    void thread_tmp_110_fu_425_p2();
    void thread_tmp_111_fu_450_p2();
    void thread_tmp_112_fu_466_p2();
    void thread_tmp_113_fu_507_p2();
    void thread_tmp_122_cast_fu_218_p1();
    void thread_tmp_133_cast_fu_348_p1();
    void thread_tmp_141_cast_fu_471_p1();
    void thread_tmp_142_cast_fu_512_p1();
    void thread_tmp_32_fu_295_p3();
    void thread_tmp_33_fu_307_p3();
    void thread_tmp_34_fu_382_p2();
    void thread_tmp_35_fu_438_p3();
    void thread_tmp_7_cast_cast_fu_421_p1();
    void thread_tmp_7_fu_416_p2();
    void thread_tmp_8_cast_cast_fu_503_p1();
    void thread_tmp_8_fu_498_p2();
    void thread_tmp_98_fu_200_p3();
    void thread_tmp_99_fu_212_p2();
    void thread_tmp_fu_331_p3();
    void thread_tmp_s_fu_359_p3();
    void thread_w_5_fu_456_p2();
    void thread_w_cast5_cast_fu_339_p1();
    void thread_weight_V_address0();
    void thread_weight_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
