-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_last is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_AWVALID : OUT STD_LOGIC;
    m_axi_weight_V_AWREADY : IN STD_LOGIC;
    m_axi_weight_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WVALID : OUT STD_LOGIC;
    m_axi_weight_V_WREADY : IN STD_LOGIC;
    m_axi_weight_V_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WLAST : OUT STD_LOGIC;
    m_axi_weight_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARVALID : OUT STD_LOGIC;
    m_axi_weight_V_ARREADY : IN STD_LOGIC;
    m_axi_weight_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RVALID : IN STD_LOGIC;
    m_axi_weight_V_RREADY : OUT STD_LOGIC;
    m_axi_weight_V_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_RLAST : IN STD_LOGIC;
    m_axi_weight_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BVALID : IN STD_LOGIC;
    m_axi_weight_V_BREADY : OUT STD_LOGIC;
    m_axi_weight_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv_last_weight_V9 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_0_ce0 : OUT STD_LOGIC;
    conv_last_output_V_0_we0 : OUT STD_LOGIC;
    conv_last_output_V_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_1_ce0 : OUT STD_LOGIC;
    conv_last_output_V_1_we0 : OUT STD_LOGIC;
    conv_last_output_V_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_2_ce0 : OUT STD_LOGIC;
    conv_last_output_V_2_we0 : OUT STD_LOGIC;
    conv_last_output_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_3_ce0 : OUT STD_LOGIC;
    conv_last_output_V_3_we0 : OUT STD_LOGIC;
    conv_last_output_V_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_4_ce0 : OUT STD_LOGIC;
    conv_last_output_V_4_we0 : OUT STD_LOGIC;
    conv_last_output_V_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_5_ce0 : OUT STD_LOGIC;
    conv_last_output_V_5_we0 : OUT STD_LOGIC;
    conv_last_output_V_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_6_ce0 : OUT STD_LOGIC;
    conv_last_output_V_6_we0 : OUT STD_LOGIC;
    conv_last_output_V_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_7_ce0 : OUT STD_LOGIC;
    conv_last_output_V_7_we0 : OUT STD_LOGIC;
    conv_last_output_V_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of conv_last is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight_V_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_V_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_621 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_reg_632 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_reg_643 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten10_reg_654 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_1_reg_665 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten6_reg_677 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_688 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_700 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten11_reg_756 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_2_reg_767 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten12_reg_778 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_reg_789 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_800 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter2_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_817_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter1_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_j_mid2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_cast_mid2_v_fu_843_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_cast_mid2_v_reg_1602 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_851_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_tmp_reg_1609 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_3_fu_865_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_V_addr_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_V_addr_read_reg_1630 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten14_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten14_reg_1642 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state14_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp1_iter1_exitcond_flatten14_reg_1642 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_978_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten15_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten15_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next7_fu_996_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_cast9_mid2_v_fu_1017_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_cast9_mid2_v_reg_1664 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_521_fu_1029_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_521_reg_1669 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex1_cast_mid2_s_reg_1673 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_mid2_fu_1071_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_mid2_reg_1678 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_cast8_mid2_fu_1079_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_cast8_mid2_reg_1683 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_fu_1087_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_reg_1694 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_cast6_cast1_fu_1142_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_cast6_cast1_reg_1699 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal h_cast6_cast_fu_1146_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal h_cast6_cast_reg_1704 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond44_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_33_fu_1156_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_33_reg_1713 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_cast5_cast1_fu_1162_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_cast5_cast1_reg_1718 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal w_cast5_cast_fu_1166_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_cast5_cast_reg_1723 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_43_fu_1176_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_43_reg_1731 : STD_LOGIC_VECTOR (2 downto 0);
    signal ci_cast4_cast_fu_1182_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ci_cast4_cast_reg_1736 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal input_V_addr_reg_1741 : STD_LOGIC_VECTOR (11 downto 0);
    signal ci_16_fu_1227_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ci_16_reg_1749 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_7_1_reg_1757 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal exitcond48_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_last_output_V_4_1_reg_1762 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_3_1_reg_1767 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_6_1_reg_1772 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_5_1_reg_1777 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_0_1_reg_1812 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_1_1_reg_1827 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_2_1_reg_1832 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_48_7_fu_1334_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_48_7_reg_1837 : STD_LOGIC_VECTOR (9 downto 0);
    signal weight_temp_0_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_0_0_0_4_reg_1842 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal input_V_load_reg_1847 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_0_2_reg_1859 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_3_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_1_2_reg_1869 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_2_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_2_0_0_3_reg_1874 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_2_2_reg_1879 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_3_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_3_0_0_3_reg_1884 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_3_2_reg_1889 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_4_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_4_0_0_3_reg_1894 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_4_2_reg_1899 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_5_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_5_0_0_3_reg_1904 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_5_2_reg_1909 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_6_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_6_0_0_3_reg_1914 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_6_2_reg_1919 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_7_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_7_0_0_3_reg_1924 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_last_output_V_7_2_reg_1929 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten16_fu_1340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten16_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state24_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_flag00011001 : BOOLEAN;
    signal indvar_flatten_next2_fu_1346_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_next2_reg_1938 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal j_2_mid_fu_1364_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_mid_reg_1943 : STD_LOGIC_VECTOR (2 downto 0);
    signal arrayNo8_mid2_v_fu_1372_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal arrayNo8_mid2_v_reg_1949 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_522_fu_1380_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_522_reg_1954 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp2_iter1_tmp_522_reg_1954 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex9_cast_mid2_s_reg_1959 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_mid_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_1964 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_mid2_fu_1418_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_mid2_reg_1969 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next1_7_fu_1432_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next1_7_reg_1975 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_cast2_mid2_fu_1445_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_cast2_mid2_reg_1980 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state25_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state27_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_flag00011001 : BOOLEAN;
    signal k_3_fu_1451_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_3_reg_1986 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_last_output_V_7_3_reg_1991 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_4_3_reg_1996 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_3_3_reg_2001 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_6_3_reg_2006 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_5_3_reg_2011 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_0_3_reg_2016 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_1_3_reg_2021 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_2_3_reg_2026 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state24 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage1_flag00011011 : BOOLEAN;
    signal weight_temp_0_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_0_0_0_ce0 : STD_LOGIC;
    signal weight_temp_0_0_0_we0 : STD_LOGIC;
    signal weight_temp_0_0_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_1_0_0_ce0 : STD_LOGIC;
    signal weight_temp_1_0_0_we0 : STD_LOGIC;
    signal weight_temp_2_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_2_0_0_ce0 : STD_LOGIC;
    signal weight_temp_2_0_0_we0 : STD_LOGIC;
    signal weight_temp_3_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_3_0_0_ce0 : STD_LOGIC;
    signal weight_temp_3_0_0_we0 : STD_LOGIC;
    signal weight_temp_4_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_4_0_0_ce0 : STD_LOGIC;
    signal weight_temp_4_0_0_we0 : STD_LOGIC;
    signal weight_temp_5_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_5_0_0_ce0 : STD_LOGIC;
    signal weight_temp_5_0_0_we0 : STD_LOGIC;
    signal weight_temp_6_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_6_0_0_ce0 : STD_LOGIC;
    signal weight_temp_6_0_0_we0 : STD_LOGIC;
    signal weight_temp_7_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_7_0_0_ce0 : STD_LOGIC;
    signal weight_temp_7_0_0_we0 : STD_LOGIC;
    signal i_phi_fu_636_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_phi_fu_669_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal j_1_phi_fu_692_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_phi_fu_704_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_reg_712 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond45_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal w_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond47_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ci_reg_734 : STD_LOGIC_VECTOR (7 downto 0);
    signal co_reg_745 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal indvar_flatten11_phi_fu_760_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp2_stage0_flag00000000 : BOOLEAN;
    signal i_2_phi_fu_771_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten12_phi_fu_782_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_phi_fu_793_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_phi_fu_804_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_555_cast_fu_960_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_cast9_mid2_fu_1024_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_562_cast_fu_1130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_575_cast_fu_1216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_581_cast_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_585_cast_fu_1322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_569_cast_fu_1493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00001001 : BOOLEAN;
    signal grp_fu_1570_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_523_fu_1526_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp2_stage1_flag00000000 : BOOLEAN;
    signal grp_fu_1564_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1558_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1552_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1546_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1540_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1534_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1576_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_823_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_422_fu_871_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_423_fu_882_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl2_cast_fu_878_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl3_cast_fu_889_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_424_fu_893_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal j_cast_cast_fu_903_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_550_cast_fu_899_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_428_fu_906_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_554_cast_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_426_fu_934_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_425_fu_927_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_fu_941_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_cast_cast1_fu_951_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_427_fu_945_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_429_fu_954_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_flatten6_op_fu_990_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_4_fu_1004_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond43_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_3_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_mid_fu_1010_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond60_mid_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_431_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_1060_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_430_fu_1093_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_557_cast_fu_1100_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_1_cast8_mid2_cast_fu_1104_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_432_fu_1107_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_561_cast_fu_1113_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_cast7_cast_fu_1121_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_433_fu_1124_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_438_fu_1186_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_571_cast_fu_1194_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_439_fu_1198_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_574_cast_fu_1203_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_440_fu_1211_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex2_fu_1239_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_441_fu_1249_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_577_cast_fu_1257_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_442_fu_1261_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_580_cast_fu_1266_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_443_fu_1274_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_445_fu_1299_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_444_fu_1291_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl5_cast_fu_1307_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_446_fu_1311_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_447_fu_1317_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond_flatten17_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_1352_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond46_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_435_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten28_op_fu_1426_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_fu_1440_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_434_fu_1456_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_564_cast_fu_1463_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_2_cast2_mid2_cast_fu_1467_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_436_fu_1470_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_568_cast_fu_1476_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_1_cast1_cast_fu_1484_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_437_fu_1487_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_54_fu_1505_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component ShuffleNetV2_mux_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ShuffleNetV2_mac_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv_last_weight_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    weight_temp_0_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_0_0_0_address0,
        ce0 => weight_temp_0_0_0_ce0,
        we0 => weight_temp_0_0_0_we0,
        d0 => weight_temp_0_0_0_d0,
        q0 => weight_temp_0_0_0_q0);

    weight_temp_1_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_1_0_0_address0,
        ce0 => weight_temp_1_0_0_ce0,
        we0 => weight_temp_1_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_1_0_0_q0);

    weight_temp_2_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_2_0_0_address0,
        ce0 => weight_temp_2_0_0_ce0,
        we0 => weight_temp_2_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_2_0_0_q0);

    weight_temp_3_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_3_0_0_address0,
        ce0 => weight_temp_3_0_0_ce0,
        we0 => weight_temp_3_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_3_0_0_q0);

    weight_temp_4_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_4_0_0_address0,
        ce0 => weight_temp_4_0_0_ce0,
        we0 => weight_temp_4_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_4_0_0_q0);

    weight_temp_5_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_5_0_0_address0,
        ce0 => weight_temp_5_0_0_ce0,
        we0 => weight_temp_5_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_5_0_0_q0);

    weight_temp_6_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_6_0_0_address0,
        ce0 => weight_temp_6_0_0_ce0,
        we0 => weight_temp_6_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_6_0_0_q0);

    weight_temp_7_0_0_U : component conv_last_weight_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_7_0_0_address0,
        ce0 => weight_temp_7_0_0_ce0,
        we0 => weight_temp_7_0_0_we0,
        d0 => weight_V_addr_read_reg_1630,
        q0 => weight_temp_7_0_0_q0);

    ShuffleNetV2_mux_pcA_U1607 : component ShuffleNetV2_mux_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => conv_last_output_V_0_q0,
        din2 => conv_last_output_V_1_q0,
        din3 => conv_last_output_V_2_q0,
        din4 => conv_last_output_V_3_q0,
        din5 => conv_last_output_V_4_q0,
        din6 => conv_last_output_V_5_q0,
        din7 => conv_last_output_V_6_q0,
        din8 => conv_last_output_V_7_q0,
        din9 => ap_reg_pp2_iter1_tmp_522_reg_1954,
        dout => tmp_54_fu_1505_p10);

    ShuffleNetV2_mac_cud_x_U1608 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_0_0_0_4_reg_1842,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_0_2_reg_1859,
        dout => grp_fu_1534_p3);

    ShuffleNetV2_mac_cud_x_U1609 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_1_0_0_3_reg_1864,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_1_2_reg_1869,
        dout => grp_fu_1540_p3);

    ShuffleNetV2_mac_cud_x_U1610 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_2_0_0_3_reg_1874,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_2_2_reg_1879,
        dout => grp_fu_1546_p3);

    ShuffleNetV2_mac_cud_x_U1611 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_3_0_0_3_reg_1884,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_3_2_reg_1889,
        dout => grp_fu_1552_p3);

    ShuffleNetV2_mac_cud_x_U1612 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_4_0_0_3_reg_1894,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_4_2_reg_1899,
        dout => grp_fu_1558_p3);

    ShuffleNetV2_mac_cud_x_U1613 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_5_0_0_3_reg_1904,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_5_2_reg_1909,
        dout => grp_fu_1564_p3);

    ShuffleNetV2_mac_cud_x_U1614 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_6_0_0_3_reg_1914,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_6_2_reg_1919,
        dout => grp_fu_1570_p3);

    ShuffleNetV2_mac_cud_x_U1615 : component ShuffleNetV2_mac_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => weight_temp_7_0_0_3_reg_1924,
        din1 => input_V_load_reg_1847,
        din2 => conv_last_output_V_7_2_reg_1929,
        dout => grp_fu_1576_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state24))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state24) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state24 xor ap_const_logic_1);
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1587))) then
                    if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = m_axi_weight_V_ARREADY) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond45_fu_1170_p2))) then 
                ci_reg_734 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond48_fu_1233_p2 = ap_const_lv1_1))) then 
                ci_reg_734 <= ci_16_reg_1749;
            end if; 
        end if;
    end process;

    co_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond47_fu_1221_p2))) then 
                co_reg_745 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                co_reg_745 <= co_48_7_reg_1837;
            end if; 
        end if;
    end process;

    h_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                h_reg_712 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond45_fu_1170_p2))) then 
                h_reg_712 <= h_33_reg_1713;
            end if; 
        end if;
    end process;

    i_1_reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_1_reg_665 <= ap_const_lv10_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642))) then 
                i_1_reg_665 <= i_1_cast9_mid2_v_reg_1664;
            end if; 
        end if;
    end process;

    i_2_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                i_2_reg_767 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i_2_reg_767 <= arrayNo8_mid2_v_reg_1949;
            end if; 
        end if;
    end process;

    i_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_reg_1587) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_632 <= i_cast_mid2_v_reg_1602;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_632 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten10_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                indvar_flatten10_reg_654 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten14_fu_972_p2))) then 
                indvar_flatten10_reg_654 <= indvar_flatten_next1_fu_978_p2;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                indvar_flatten11_reg_756 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                indvar_flatten11_reg_756 <= indvar_flatten_next2_reg_1938;
            end if; 
        end if;
    end process;

    indvar_flatten12_reg_778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                indvar_flatten12_reg_778 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                indvar_flatten12_reg_778 <= indvar_flatten_next1_7_reg_1975;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                indvar_flatten6_reg_677 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten14_fu_972_p2))) then 
                indvar_flatten6_reg_677 <= indvar_flatten_next7_fu_996_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_811_p2))) then 
                indvar_flatten_reg_621 <= indvar_flatten_next_fu_817_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_621 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    j_1_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                j_1_reg_688 <= ap_const_lv3_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642))) then 
                j_1_reg_688 <= j_1_cast8_mid2_reg_1683;
            end if; 
        end if;
    end process;

    j_2_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                j_2_reg_789 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                j_2_reg_789 <= j_2_cast2_mid2_reg_1980;
            end if; 
        end if;
    end process;

    j_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_811_p2))) then 
                j_reg_643 <= j_3_fu_865_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_643 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    k_1_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then 
                k_1_reg_800 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                k_1_reg_800 <= k_3_reg_1986;
            end if; 
        end if;
    end process;

    k_reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                k_reg_700 <= ap_const_lv3_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642))) then 
                k_reg_700 <= k_2_reg_1694;
            end if; 
        end if;
    end process;

    w_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond44_fu_1150_p2))) then 
                w_reg_723 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond47_fu_1221_p2))) then 
                w_reg_723 <= w_43_reg_1731;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten_reg_1587 <= exitcond_flatten_reg_1587;
                ap_reg_pp0_iter1_j_mid2_reg_1596 <= j_mid2_reg_1596;
                ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_1613 <= newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter1_tmp_reg_1609 <= tmp_reg_1609;
                exitcond_flatten_reg_1587 <= exitcond_flatten_fu_811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter2_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter1_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter2_j_mid2_reg_1596 <= ap_reg_pp0_iter1_j_mid2_reg_1596;
                ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter2_tmp_reg_1609 <= ap_reg_pp0_iter1_tmp_reg_1609;
                ap_reg_pp0_iter3_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter2_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter3_j_mid2_reg_1596 <= ap_reg_pp0_iter2_j_mid2_reg_1596;
                ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter3_tmp_reg_1609 <= ap_reg_pp0_iter2_tmp_reg_1609;
                ap_reg_pp0_iter4_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter3_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter4_j_mid2_reg_1596 <= ap_reg_pp0_iter3_j_mid2_reg_1596;
                ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter4_tmp_reg_1609 <= ap_reg_pp0_iter3_tmp_reg_1609;
                ap_reg_pp0_iter5_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter4_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter5_j_mid2_reg_1596 <= ap_reg_pp0_iter4_j_mid2_reg_1596;
                ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter5_tmp_reg_1609 <= ap_reg_pp0_iter4_tmp_reg_1609;
                ap_reg_pp0_iter6_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter5_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter6_j_mid2_reg_1596 <= ap_reg_pp0_iter5_j_mid2_reg_1596;
                ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter6_tmp_reg_1609 <= ap_reg_pp0_iter5_tmp_reg_1609;
                ap_reg_pp0_iter7_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter6_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter7_j_mid2_reg_1596 <= ap_reg_pp0_iter6_j_mid2_reg_1596;
                ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter7_tmp_reg_1609 <= ap_reg_pp0_iter6_tmp_reg_1609;
                ap_reg_pp0_iter8_exitcond_flatten_reg_1587 <= ap_reg_pp0_iter7_exitcond_flatten_reg_1587;
                ap_reg_pp0_iter8_j_mid2_reg_1596 <= ap_reg_pp0_iter7_j_mid2_reg_1596;
                ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter8_tmp_reg_1609 <= ap_reg_pp0_iter7_tmp_reg_1609;
                ap_reg_pp0_iter9_j_mid2_reg_1596 <= ap_reg_pp0_iter8_j_mid2_reg_1596;
                ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_1613 <= ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_1613;
                ap_reg_pp0_iter9_tmp_reg_1609 <= ap_reg_pp0_iter8_tmp_reg_1609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp1_iter1_exitcond_flatten14_reg_1642 <= exitcond_flatten14_reg_1642;
                exitcond_flatten14_reg_1642 <= exitcond_flatten14_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp2_iter1_tmp_522_reg_1954 <= tmp_522_reg_1954;
                exitcond_flatten16_reg_1934 <= exitcond_flatten16_fu_1340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten16_fu_1340_p2))) then
                arrayNo8_mid2_v_reg_1949 <= arrayNo8_mid2_v_fu_1372_p3;
                indvar_flatten_next1_7_reg_1975 <= indvar_flatten_next1_7_fu_1432_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                ci_16_reg_1749 <= ci_16_fu_1227_p2;
                    ci_cast4_cast_reg_1736(7 downto 0) <= ci_cast4_cast_fu_1182_p1(7 downto 0);
                input_V_addr_reg_1741 <= tmp_575_cast_fu_1216_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_0 = exitcond48_fu_1233_p2))) then
                co_48_7_reg_1837 <= co_48_7_fu_1334_p2;
                conv_last_output_V_0_1_reg_1812 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_1_1_reg_1827 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_2_1_reg_1832 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_3_1_reg_1767 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_4_1_reg_1762 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_5_1_reg_1777 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_6_1_reg_1772 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
                conv_last_output_V_7_1_reg_1757 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                conv_last_output_V_0_2_reg_1859 <= conv_last_output_V_0_q0;
                conv_last_output_V_1_2_reg_1869 <= conv_last_output_V_1_q0;
                conv_last_output_V_2_2_reg_1879 <= conv_last_output_V_2_q0;
                conv_last_output_V_3_2_reg_1889 <= conv_last_output_V_3_q0;
                conv_last_output_V_4_2_reg_1899 <= conv_last_output_V_4_q0;
                conv_last_output_V_5_2_reg_1909 <= conv_last_output_V_5_q0;
                conv_last_output_V_6_2_reg_1919 <= conv_last_output_V_6_q0;
                conv_last_output_V_7_2_reg_1929 <= conv_last_output_V_7_q0;
                input_V_load_reg_1847 <= input_V_q0;
                weight_temp_0_0_0_4_reg_1842 <= weight_temp_0_0_0_q0;
                weight_temp_1_0_0_3_reg_1864 <= weight_temp_1_0_0_q0;
                weight_temp_2_0_0_3_reg_1874 <= weight_temp_2_0_0_q0;
                weight_temp_3_0_0_3_reg_1884 <= weight_temp_3_0_0_q0;
                weight_temp_4_0_0_3_reg_1894 <= weight_temp_4_0_0_q0;
                weight_temp_5_0_0_3_reg_1904 <= weight_temp_5_0_0_q0;
                weight_temp_6_0_0_3_reg_1914 <= weight_temp_6_0_0_q0;
                weight_temp_7_0_0_3_reg_1924 <= weight_temp_7_0_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934))) then
                conv_last_output_V_0_3_reg_2016 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_1_3_reg_2021 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_2_3_reg_2026 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_3_3_reg_2001 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_4_3_reg_1996 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_5_3_reg_2011 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_6_3_reg_2006 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
                conv_last_output_V_7_3_reg_1991 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten14_fu_972_p2))) then
                exitcond_flatten15_reg_1651 <= exitcond_flatten15_fu_984_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_fu_1340_p2))) then
                exitcond_mid_reg_1964 <= exitcond_mid_fu_1406_p2;
                j_2_mid_reg_1943 <= j_2_mid_fu_1364_p3;
                k_1_mid2_reg_1969 <= k_1_mid2_fu_1418_p3;
                newIndex9_cast_mid2_s_reg_1959 <= arrayNo8_mid2_v_fu_1372_p3(9 downto 3);
                tmp_522_reg_1954 <= tmp_522_fu_1380_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                h_33_reg_1713 <= h_33_fu_1156_p2;
                    h_cast6_cast1_reg_1699(2 downto 0) <= h_cast6_cast1_fu_1142_p1(2 downto 0);
                    h_cast6_cast_reg_1704(2 downto 0) <= h_cast6_cast_fu_1146_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten14_reg_1642))) then
                i_1_cast9_mid2_v_reg_1664 <= i_1_cast9_mid2_v_fu_1017_p3;
                j_1_cast8_mid2_reg_1683 <= j_1_cast8_mid2_fu_1079_p3;
                k_2_reg_1694 <= k_2_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_811_p2))) then
                i_cast_mid2_v_reg_1602 <= i_cast_mid2_v_fu_843_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then
                indvar_flatten_next2_reg_1938 <= indvar_flatten_next2_fu_1346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934))) then
                j_2_cast2_mid2_reg_1980 <= j_2_cast2_mid2_fu_1445_p3;
                k_3_reg_1986 <= k_3_fu_1451_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_811_p2))) then
                j_mid2_reg_1596 <= j_mid2_fu_835_p3;
                newIndex_cast_mid2_v_reg_1613 <= i_cast_mid2_v_fu_843_p3(9 downto 3);
                tmp_reg_1609 <= tmp_fu_851_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten14_reg_1642))) then
                k_mid2_reg_1678 <= k_mid2_fu_1071_p3;
                newIndex1_cast_mid2_s_reg_1673 <= i_1_cast9_mid2_v_fu_1017_p3(9 downto 3);
                tmp_521_reg_1669 <= tmp_521_fu_1029_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                w_43_reg_1731 <= w_43_fu_1176_p2;
                    w_cast5_cast1_reg_1718(2 downto 0) <= w_cast5_cast1_fu_1162_p1(2 downto 0);
                    w_cast5_cast_reg_1723(2 downto 0) <= w_cast5_cast_fu_1166_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                weight_V_addr_read_reg_1630 <= m_axi_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_reg_1587))) then
                weight_V_addr_reg_1624 <= sum_fu_916_p2;
            end if;
        end if;
    end process;
    h_cast6_cast1_reg_1699(9 downto 3) <= "0000000";
    h_cast6_cast_reg_1704(10 downto 3) <= "00000000";
    w_cast5_cast1_reg_1718(11 downto 3) <= "000000000";
    w_cast5_cast_reg_1723(12 downto 3) <= "0000000000";
    ci_cast4_cast_reg_1736(14 downto 8) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter9, exitcond_flatten_fu_811_p2, ap_enable_reg_pp0_iter0, exitcond_flatten14_fu_972_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state18, exitcond44_fu_1150_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, exitcond48_fu_1233_p2, exitcond_flatten16_fu_1340_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp0_stage0_flag00011011, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter10, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_flag00011011, ap_enable_reg_pp2_iter1, ap_block_pp2_stage1_flag00011011, exitcond45_fu_1170_p2, exitcond47_fu_1221_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_811_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_811_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten14_fu_972_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten14_fu_972_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond44_fu_1150_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond45_fu_1170_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond47_fu_1221_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond48_fu_1233_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_pp2_stage0 => 
                if (((ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten16_fu_1340_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten16_fu_1340_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if (((ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2);
    ap_CS_fsm_state17 <= ap_CS_fsm(4);
    ap_CS_fsm_state18 <= ap_CS_fsm(5);
    ap_CS_fsm_state19 <= ap_CS_fsm(6);
    ap_CS_fsm_state20 <= ap_CS_fsm(7);
    ap_CS_fsm_state21 <= ap_CS_fsm(8);
    ap_CS_fsm_state22 <= ap_CS_fsm(9);
    ap_CS_fsm_state23 <= ap_CS_fsm(10);
    ap_CS_fsm_state28 <= ap_CS_fsm(13);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00001001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_1587)
    begin
                ap_block_pp0_stage0_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;


    ap_block_pp0_stage0_flag00011001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_1587, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_flag00011001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_1587, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;

        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter9_assign_proc : process(m_axi_weight_V_RVALID, ap_reg_pp0_iter8_exitcond_flatten_reg_1587)
    begin
                ap_block_state11_pp0_stage0_iter9 <= ((ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;

        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_1587, ap_sig_ioackin_m_axi_weight_V_ARREADY)
    begin
                ap_block_state4_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1587) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_weight_V_ARREADY));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_811_p2)
    begin
        if ((exitcond_flatten_fu_811_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state14_assign_proc : process(exitcond_flatten14_fu_972_p2)
    begin
        if ((exitcond_flatten14_fu_972_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state24_assign_proc : process(exitcond_flatten16_fu_1340_p2)
    begin
        if ((exitcond_flatten16_fu_1340_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state24 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state28)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1) and (ap_const_logic_0 = ap_enable_reg_pp1_iter2))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp2_iter0) and (ap_const_logic_0 = ap_enable_reg_pp2_iter1))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(m_axi_weight_V_ARREADY, ap_reg_ioackin_m_axi_weight_V_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY)) then 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= m_axi_weight_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    arrayNo8_mid2_v_fu_1372_p3 <= 
        i_5_fu_1352_p2 when (exitcond_flatten17_fu_1358_p2(0) = '1') else 
        i_2_phi_fu_771_p4;
    bias_V_address0 <= i_1_cast9_mid2_fu_1024_p1(9 - 1 downto 0);

    bias_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ci_16_fu_1227_p2 <= std_logic_vector(unsigned(ci_reg_734) + unsigned(ap_const_lv8_1));
    ci_cast4_cast_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_734),15));
    co_48_7_fu_1334_p2 <= std_logic_vector(unsigned(co_reg_745) + unsigned(ap_const_lv10_8));

    conv_last_output_V_0_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_0_1_reg_1812, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_0_3_reg_2016, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= conv_last_output_V_0_3_reg_2016;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_0_address0 <= conv_last_output_V_0_1_reg_1812;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_0_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_0_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_0_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1534_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_0_d0 <= grp_fu_1534_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_d0 <= bias_V_q0;
        else 
            conv_last_output_V_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_0_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv3_0 = tmp_521_reg_1669)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_const_lv3_0 = ap_reg_pp2_iter1_tmp_522_reg_1954)))) then 
            conv_last_output_V_0_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_1_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_1_1_reg_1827, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_1_3_reg_2021, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= conv_last_output_V_1_3_reg_2021;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_1_address0 <= conv_last_output_V_1_1_reg_1827;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_1_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_1_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_1_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1540_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_1_d0 <= grp_fu_1540_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_d0 <= bias_V_q0;
        else 
            conv_last_output_V_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_1_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_1)))) then 
            conv_last_output_V_1_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_2_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_2_1_reg_1832, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_2_3_reg_2026, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= conv_last_output_V_2_3_reg_2026;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_2_address0 <= conv_last_output_V_2_1_reg_1832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_2_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_2_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_2_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_2_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1546_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_2_d0 <= grp_fu_1546_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_d0 <= bias_V_q0;
        else 
            conv_last_output_V_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_2_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_2)))) then 
            conv_last_output_V_2_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_3_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_3_1_reg_1767, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_3_3_reg_2001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= conv_last_output_V_3_3_reg_2001;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_3_address0 <= conv_last_output_V_3_1_reg_1767;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_3_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_3_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_3_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_3_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1552_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_3_d0 <= grp_fu_1552_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_d0 <= bias_V_q0;
        else 
            conv_last_output_V_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_3_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_3)))) then 
            conv_last_output_V_3_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_4_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_4_1_reg_1762, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_4_3_reg_1996, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= conv_last_output_V_4_3_reg_1996;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_4_address0 <= conv_last_output_V_4_1_reg_1762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_4_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_4_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_4_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_4_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1558_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_4_d0 <= grp_fu_1558_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_d0 <= bias_V_q0;
        else 
            conv_last_output_V_4_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_4_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_4)))) then 
            conv_last_output_V_4_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_5_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_5_1_reg_1777, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_5_3_reg_2011, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= conv_last_output_V_5_3_reg_2011;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_5_address0 <= conv_last_output_V_5_1_reg_1777;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_5_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_5_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_5_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_5_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1564_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_5_d0 <= grp_fu_1564_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_d0 <= bias_V_q0;
        else 
            conv_last_output_V_5_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_5_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_5)))) then 
            conv_last_output_V_5_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_6_address0_assign_proc : process(ap_CS_fsm_state21, conv_last_output_V_6_1_reg_1772, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_6_3_reg_2006, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= conv_last_output_V_6_3_reg_2006;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_6_address0 <= conv_last_output_V_6_1_reg_1772;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_6_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_6_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_6_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_6_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, grp_fu_1570_p3, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_6_d0 <= grp_fu_1570_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_d0 <= bias_V_q0;
        else 
            conv_last_output_V_6_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_6_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_6)))) then 
            conv_last_output_V_6_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_7_address0_assign_proc : process(conv_last_output_V_7_1_reg_1757, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_7_3_reg_1991, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage0_flag00000000, tmp_562_cast_fu_1130_p1, tmp_581_cast_fu_1279_p1, tmp_569_cast_fu_1493_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= conv_last_output_V_7_3_reg_1991;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= tmp_569_cast_fu_1493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_7_address0 <= conv_last_output_V_7_1_reg_1757;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv_last_output_V_7_address0 <= tmp_581_cast_fu_1279_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= tmp_562_cast_fu_1130_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_7_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state21, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_7_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_7_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state23, ap_block_pp2_stage1_flag00000000, grp_fu_1576_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv_last_output_V_7_d0 <= grp_fu_1576_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_d0 <= bias_V_q0;
        else 
            conv_last_output_V_7_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_7_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_521_reg_1669, ap_reg_pp2_iter1_tmp_522_reg_1954, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state23, tmp_523_fu_1526_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_521_reg_1669 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_523_fu_1526_p3) and (ap_reg_pp2_iter1_tmp_522_reg_1954 = ap_const_lv3_7)))) then 
            conv_last_output_V_7_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond43_fu_1048_p2 <= "1" when (k_phi_fu_704_p4 = ap_const_lv3_4) else "0";
    exitcond44_fu_1150_p2 <= "1" when (h_reg_712 = ap_const_lv3_4) else "0";
    exitcond45_fu_1170_p2 <= "1" when (w_reg_723 = ap_const_lv3_4) else "0";
    exitcond46_fu_1400_p2 <= "1" when (k_1_phi_fu_804_p4 = ap_const_lv3_4) else "0";
    exitcond47_fu_1221_p2 <= "1" when (ci_reg_734 = ap_const_lv8_C0) else "0";
    exitcond48_fu_1233_p2 <= "1" when (co_reg_745 = ap_const_lv10_200) else "0";
    exitcond60_mid_fu_1054_p2 <= (exitcond43_fu_1048_p2 and not_exitcond_flatten_3_fu_1043_p2);
    exitcond_flatten14_fu_972_p2 <= "1" when (indvar_flatten10_reg_654 = ap_const_lv14_2000) else "0";
    exitcond_flatten15_fu_984_p2 <= "1" when (indvar_flatten6_reg_677 = ap_const_lv6_10) else "0";
    exitcond_flatten16_fu_1340_p2 <= "1" when (indvar_flatten11_phi_fu_760_p4 = ap_const_lv14_2000) else "0";
    exitcond_flatten17_fu_1358_p2 <= "1" when (indvar_flatten12_phi_fu_782_p4 = ap_const_lv6_10) else "0";
    exitcond_flatten_fu_811_p2 <= "1" when (indvar_flatten_reg_621 = ap_const_lv17_18000) else "0";
    exitcond_fu_829_p2 <= "1" when (j_reg_643 = ap_const_lv8_C0) else "0";
    exitcond_mid_fu_1406_p2 <= (exitcond46_fu_1400_p2 and not_exitcond_flatten_fu_1394_p2);
    h_33_fu_1156_p2 <= std_logic_vector(unsigned(h_reg_712) + unsigned(ap_const_lv3_1));
    h_cast6_cast1_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_712),10));
    h_cast6_cast_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_712),11));
    i_1_cast9_mid2_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_cast9_mid2_v_fu_1017_p3),32));
    i_1_cast9_mid2_v_fu_1017_p3 <= 
        i_4_fu_1004_p2 when (exitcond_flatten15_reg_1651(0) = '1') else 
        i_1_phi_fu_669_p4;

    i_1_phi_fu_669_p4_assign_proc : process(i_1_reg_665, ap_reg_pp1_iter1_exitcond_flatten14_reg_1642, i_1_cast9_mid2_v_reg_1664, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            i_1_phi_fu_669_p4 <= i_1_cast9_mid2_v_reg_1664;
        else 
            i_1_phi_fu_669_p4 <= i_1_reg_665;
        end if; 
    end process;


    i_2_phi_fu_771_p4_assign_proc : process(i_2_reg_767, exitcond_flatten16_reg_1934, ap_CS_fsm_pp2_stage0, arrayNo8_mid2_v_reg_1949, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            i_2_phi_fu_771_p4 <= arrayNo8_mid2_v_reg_1949;
        else 
            i_2_phi_fu_771_p4 <= i_2_reg_767;
        end if; 
    end process;

    i_3_fu_823_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_phi_fu_636_p4));
    i_4_fu_1004_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_1_phi_fu_669_p4));
    i_5_fu_1352_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_2_phi_fu_771_p4));
    i_cast_mid2_v_fu_843_p3 <= 
        i_3_fu_823_p2 when (exitcond_fu_829_p2(0) = '1') else 
        i_phi_fu_636_p4;

    i_phi_fu_636_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, exitcond_flatten_reg_1587, i_reg_632, ap_CS_fsm_pp0_stage0, i_cast_mid2_v_reg_1602, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_reg_1587) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_636_p4 <= i_cast_mid2_v_reg_1602;
        else 
            i_phi_fu_636_p4 <= i_reg_632;
        end if; 
    end process;


    indvar_flatten11_phi_fu_760_p4_assign_proc : process(indvar_flatten11_reg_756, exitcond_flatten16_reg_1934, ap_CS_fsm_pp2_stage0, indvar_flatten_next2_reg_1938, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten11_phi_fu_760_p4 <= indvar_flatten_next2_reg_1938;
        else 
            indvar_flatten11_phi_fu_760_p4 <= indvar_flatten11_reg_756;
        end if; 
    end process;


    indvar_flatten12_phi_fu_782_p4_assign_proc : process(indvar_flatten12_reg_778, exitcond_flatten16_reg_1934, ap_CS_fsm_pp2_stage0, indvar_flatten_next1_7_reg_1975, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten12_phi_fu_782_p4 <= indvar_flatten_next1_7_reg_1975;
        else 
            indvar_flatten12_phi_fu_782_p4 <= indvar_flatten12_reg_778;
        end if; 
    end process;

    indvar_flatten28_op_fu_1426_p2 <= std_logic_vector(unsigned(indvar_flatten12_phi_fu_782_p4) + unsigned(ap_const_lv6_1));
    indvar_flatten6_op_fu_990_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_677) + unsigned(ap_const_lv6_1));
    indvar_flatten_next1_7_fu_1432_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten17_fu_1358_p2(0) = '1') else 
        indvar_flatten28_op_fu_1426_p2;
    indvar_flatten_next1_fu_978_p2 <= std_logic_vector(unsigned(indvar_flatten10_reg_654) + unsigned(ap_const_lv14_1));
    indvar_flatten_next2_fu_1346_p2 <= std_logic_vector(unsigned(indvar_flatten11_phi_fu_760_p4) + unsigned(ap_const_lv14_1));
    indvar_flatten_next7_fu_996_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten15_fu_984_p2(0) = '1') else 
        indvar_flatten6_op_fu_990_p2;
    indvar_flatten_next_fu_817_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_621) + unsigned(ap_const_lv17_1));
    input_V_address0 <= input_V_addr_reg_1741;

    input_V_ce0_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_1_cast8_mid2_cast_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_cast8_mid2_reg_1683),10));
    j_1_cast8_mid2_fu_1079_p3 <= 
        j_4_fu_1060_p2 when (exitcond60_mid_fu_1054_p2(0) = '1') else 
        j_1_mid_fu_1010_p3;
    j_1_mid_fu_1010_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten15_reg_1651(0) = '1') else 
        j_1_phi_fu_692_p4;

    j_1_phi_fu_692_p4_assign_proc : process(j_1_reg_688, ap_reg_pp1_iter1_exitcond_flatten14_reg_1642, j_1_cast8_mid2_reg_1683, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            j_1_phi_fu_692_p4 <= j_1_cast8_mid2_reg_1683;
        else 
            j_1_phi_fu_692_p4 <= j_1_reg_688;
        end if; 
    end process;

    j_2_cast2_mid2_cast_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_2_cast2_mid2_reg_1980),10));
    j_2_cast2_mid2_fu_1445_p3 <= 
        j_5_fu_1440_p2 when (exitcond_mid_reg_1964(0) = '1') else 
        j_2_mid_reg_1943;
    j_2_mid_fu_1364_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten17_fu_1358_p2(0) = '1') else 
        j_2_phi_fu_793_p4;

    j_2_phi_fu_793_p4_assign_proc : process(j_2_reg_789, exitcond_flatten16_reg_1934, ap_CS_fsm_pp2_stage0, j_2_cast2_mid2_reg_1980, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            j_2_phi_fu_793_p4 <= j_2_cast2_mid2_reg_1980;
        else 
            j_2_phi_fu_793_p4 <= j_2_reg_789;
        end if; 
    end process;

    j_3_fu_865_p2 <= std_logic_vector(unsigned(j_mid2_fu_835_p3) + unsigned(ap_const_lv8_1));
    j_4_fu_1060_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_1_mid_fu_1010_p3));
    j_5_fu_1440_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_2_mid_reg_1943));
    j_cast_cast1_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter9_j_mid2_reg_1596),15));
    j_cast_cast_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_1596),20));
    j_mid2_fu_835_p3 <= 
        ap_const_lv8_0 when (exitcond_fu_829_p2(0) = '1') else 
        j_reg_643;
    k_1_cast1_cast_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_mid2_reg_1969),12));
    k_1_mid2_fu_1418_p3 <= 
        ap_const_lv3_0 when (tmp_435_fu_1412_p2(0) = '1') else 
        k_1_phi_fu_804_p4;

    k_1_phi_fu_804_p4_assign_proc : process(k_1_reg_800, exitcond_flatten16_reg_1934, ap_CS_fsm_pp2_stage0, k_3_reg_1986, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_1934) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            k_1_phi_fu_804_p4 <= k_3_reg_1986;
        else 
            k_1_phi_fu_804_p4 <= k_1_reg_800;
        end if; 
    end process;

    k_2_fu_1087_p2 <= std_logic_vector(unsigned(k_mid2_fu_1071_p3) + unsigned(ap_const_lv3_1));
    k_3_fu_1451_p2 <= std_logic_vector(unsigned(k_1_mid2_reg_1969) + unsigned(ap_const_lv3_1));
    k_cast7_cast_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_reg_1678),12));
    k_mid2_fu_1071_p3 <= 
        ap_const_lv3_0 when (tmp_431_fu_1066_p2(0) = '1') else 
        k_phi_fu_704_p4;

    k_phi_fu_704_p4_assign_proc : process(k_reg_700, ap_reg_pp1_iter1_exitcond_flatten14_reg_1642, k_2_reg_1694, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_1642) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            k_phi_fu_704_p4 <= k_2_reg_1694;
        else 
            k_phi_fu_704_p4 <= k_reg_700;
        end if; 
    end process;

    m_axi_weight_V_ARADDR <= weight_V_addr_reg_1624;
    m_axi_weight_V_ARBURST <= ap_const_lv2_0;
    m_axi_weight_V_ARCACHE <= ap_const_lv4_0;
    m_axi_weight_V_ARID <= ap_const_lv1_0;
    m_axi_weight_V_ARLEN <= ap_const_lv32_1;
    m_axi_weight_V_ARLOCK <= ap_const_lv2_0;
    m_axi_weight_V_ARPROT <= ap_const_lv3_0;
    m_axi_weight_V_ARQOS <= ap_const_lv4_0;
    m_axi_weight_V_ARREGION <= ap_const_lv4_0;
    m_axi_weight_V_ARSIZE <= ap_const_lv3_0;
    m_axi_weight_V_ARUSER <= ap_const_lv1_0;

    m_axi_weight_V_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond_flatten_reg_1587, ap_reg_ioackin_m_axi_weight_V_ARREADY, ap_block_pp0_stage0_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1587) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY))) then 
            m_axi_weight_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_weight_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_AWADDR <= ap_const_lv32_0;
    m_axi_weight_V_AWBURST <= ap_const_lv2_0;
    m_axi_weight_V_AWCACHE <= ap_const_lv4_0;
    m_axi_weight_V_AWID <= ap_const_lv1_0;
    m_axi_weight_V_AWLEN <= ap_const_lv32_0;
    m_axi_weight_V_AWLOCK <= ap_const_lv2_0;
    m_axi_weight_V_AWPROT <= ap_const_lv3_0;
    m_axi_weight_V_AWQOS <= ap_const_lv4_0;
    m_axi_weight_V_AWREGION <= ap_const_lv4_0;
    m_axi_weight_V_AWSIZE <= ap_const_lv3_0;
    m_axi_weight_V_AWUSER <= ap_const_lv1_0;
    m_axi_weight_V_AWVALID <= ap_const_logic_0;
    m_axi_weight_V_BREADY <= ap_const_logic_0;

    m_axi_weight_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_1587, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            m_axi_weight_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_weight_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_WDATA <= ap_const_lv8_0;
    m_axi_weight_V_WID <= ap_const_lv1_0;
    m_axi_weight_V_WLAST <= ap_const_logic_0;
    m_axi_weight_V_WSTRB <= ap_const_lv1_0;
    m_axi_weight_V_WUSER <= ap_const_lv1_0;
    m_axi_weight_V_WVALID <= ap_const_logic_0;
    newIndex2_fu_1239_p4 <= co_reg_745(9 downto 3);
    not_exitcond_flatten_3_fu_1043_p2 <= (exitcond_flatten15_reg_1651 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_1394_p2 <= (exitcond_flatten17_fu_1358_p2 xor ap_const_lv1_1);
    p_shl1_cast_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_426_fu_934_p3),15));
    p_shl2_cast_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_422_fu_871_p3),19));
    p_shl3_cast_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_423_fu_882_p3),19));
    p_shl5_cast_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_445_fu_1299_p3),15));
    sum_fu_916_p2 <= std_logic_vector(signed(tmp_554_cast_fu_912_p1) + signed(conv_last_weight_V9));
    tmp_422_fu_871_p3 <= (i_cast_mid2_v_reg_1602 & ap_const_lv8_0);
    tmp_423_fu_882_p3 <= (i_cast_mid2_v_reg_1602 & ap_const_lv6_0);
    tmp_424_fu_893_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_878_p1) - unsigned(p_shl3_cast_fu_889_p1));
    tmp_425_fu_927_p3 <= (ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_1613 & ap_const_lv8_0);
    tmp_426_fu_934_p3 <= (ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_1613 & ap_const_lv6_0);
    tmp_427_fu_945_p2 <= std_logic_vector(unsigned(tmp_425_fu_927_p3) - unsigned(p_shl1_cast_fu_941_p1));
    tmp_428_fu_906_p2 <= std_logic_vector(unsigned(j_cast_cast_fu_903_p1) + unsigned(tmp_550_cast_fu_899_p1));
    tmp_429_fu_954_p2 <= std_logic_vector(unsigned(j_cast_cast1_fu_951_p1) + unsigned(tmp_427_fu_945_p2));
    tmp_430_fu_1093_p3 <= (newIndex1_cast_mid2_s_reg_1673 & ap_const_lv2_0);
    tmp_431_fu_1066_p2 <= (exitcond60_mid_fu_1054_p2 or exitcond_flatten15_reg_1651);
    tmp_432_fu_1107_p2 <= std_logic_vector(unsigned(tmp_557_cast_fu_1100_p1) + unsigned(j_1_cast8_mid2_cast_fu_1104_p1));
    tmp_433_fu_1124_p2 <= std_logic_vector(unsigned(tmp_561_cast_fu_1113_p3) + unsigned(k_cast7_cast_fu_1121_p1));
    tmp_434_fu_1456_p3 <= (newIndex9_cast_mid2_s_reg_1959 & ap_const_lv2_0);
    tmp_435_fu_1412_p2 <= (exitcond_mid_fu_1406_p2 or exitcond_flatten17_fu_1358_p2);
    tmp_436_fu_1470_p2 <= std_logic_vector(unsigned(tmp_564_cast_fu_1463_p1) + unsigned(j_2_cast2_mid2_cast_fu_1467_p1));
    tmp_437_fu_1487_p2 <= std_logic_vector(unsigned(tmp_568_cast_fu_1476_p3) + unsigned(k_1_cast1_cast_fu_1484_p1));
    tmp_438_fu_1186_p3 <= (ci_reg_734 & ap_const_lv2_0);
    tmp_439_fu_1198_p2 <= std_logic_vector(unsigned(h_cast6_cast_reg_1704) + unsigned(tmp_571_cast_fu_1194_p1));
    tmp_440_fu_1211_p2 <= std_logic_vector(unsigned(w_cast5_cast_reg_1723) + unsigned(tmp_574_cast_fu_1203_p3));
    tmp_441_fu_1249_p3 <= (newIndex2_fu_1239_p4 & ap_const_lv2_0);
    tmp_442_fu_1261_p2 <= std_logic_vector(unsigned(tmp_577_cast_fu_1257_p1) + unsigned(h_cast6_cast1_reg_1699));
    tmp_443_fu_1274_p2 <= std_logic_vector(unsigned(tmp_580_cast_fu_1266_p3) + unsigned(w_cast5_cast1_reg_1718));
    tmp_444_fu_1291_p3 <= (newIndex2_fu_1239_p4 & ap_const_lv8_0);
    tmp_445_fu_1299_p3 <= (newIndex2_fu_1239_p4 & ap_const_lv6_0);
    tmp_446_fu_1311_p2 <= std_logic_vector(unsigned(tmp_444_fu_1291_p3) - unsigned(p_shl5_cast_fu_1307_p1));
    tmp_447_fu_1317_p2 <= std_logic_vector(unsigned(tmp_446_fu_1311_p2) + unsigned(ci_cast4_cast_reg_1736));
    tmp_521_fu_1029_p1 <= i_1_cast9_mid2_v_fu_1017_p3(3 - 1 downto 0);
    tmp_522_fu_1380_p1 <= arrayNo8_mid2_v_fu_1372_p3(3 - 1 downto 0);
    tmp_523_fu_1526_p3 <= tmp_54_fu_1505_p10(7 downto 7);
        tmp_550_cast_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_424_fu_893_p2),20));

        tmp_554_cast_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_428_fu_906_p2),32));

        tmp_555_cast_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_429_fu_954_p2),32));

    tmp_557_cast_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_430_fu_1093_p3),10));
    tmp_561_cast_fu_1113_p3 <= (tmp_432_fu_1107_p2 & ap_const_lv2_0);
    tmp_562_cast_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_433_fu_1124_p2),32));
    tmp_564_cast_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_434_fu_1456_p3),10));
    tmp_568_cast_fu_1476_p3 <= (tmp_436_fu_1470_p2 & ap_const_lv2_0);
    tmp_569_cast_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_437_fu_1487_p2),32));
    tmp_571_cast_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_438_fu_1186_p3),11));
    tmp_574_cast_fu_1203_p3 <= (tmp_439_fu_1198_p2 & ap_const_lv2_0);
    tmp_575_cast_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_440_fu_1211_p2),32));
    tmp_577_cast_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_441_fu_1249_p3),10));
    tmp_580_cast_fu_1266_p3 <= (tmp_442_fu_1261_p2 & ap_const_lv2_0);
    tmp_581_cast_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_443_fu_1274_p2),32));
        tmp_585_cast_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_447_fu_1317_p2),32));

    tmp_fu_851_p1 <= i_cast_mid2_v_fu_843_p3(3 - 1 downto 0);
    w_43_fu_1176_p2 <= std_logic_vector(unsigned(w_reg_723) + unsigned(ap_const_lv3_1));
    w_cast5_cast1_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_723),12));
    w_cast5_cast_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_723),13));

    weight_V_blk_n_AR_assign_proc : process(m_axi_weight_V_ARREADY, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_reg_pp0_iter1_exitcond_flatten_reg_1587)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_1587))) then 
            weight_V_blk_n_AR <= m_axi_weight_V_ARREADY;
        else 
            weight_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    weight_V_blk_n_R_assign_proc : process(m_axi_weight_V_RVALID, ap_block_pp0_stage0_flag00000000, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_1587)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_1587))) then 
            weight_V_blk_n_R <= m_axi_weight_V_RVALID;
        else 
            weight_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    weight_temp_0_0_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_0_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_0_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_0_0_address0 <= ap_const_lv32_0(14 - 1 downto 0);
        else 
            weight_temp_0_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_0_0_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_0_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_0_0_0_d0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, weight_V_addr_read_reg_1630, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_0_0_0_d0 <= weight_V_addr_read_reg_1630;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_0_0_d0 <= ap_const_lv8_0;
        else 
            weight_temp_0_0_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_temp_0_0_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv3_0 = ap_reg_pp0_iter9_tmp_reg_1609)))) then 
            weight_temp_0_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_1_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_1_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_1_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_1_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_1_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_1))) then 
            weight_temp_1_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_2_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_2_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_2_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_2_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_2_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_2))) then 
            weight_temp_2_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_3_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_3_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_3_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_3_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_3_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_3))) then 
            weight_temp_3_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_4_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_4_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_4_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_4_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_4_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_4_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_4))) then 
            weight_temp_4_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_4_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_5_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_5_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_5_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_5_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_5_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_5_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_5))) then 
            weight_temp_5_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_5_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_6_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_6_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_6_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_6_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_6_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_6_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_6))) then 
            weight_temp_6_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_6_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_555_cast_fu_960_p1, tmp_585_cast_fu_1322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_7_0_0_address0 <= tmp_585_cast_fu_1322_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_7_0_0_address0 <= tmp_555_cast_fu_960_p1(14 - 1 downto 0);
        else 
            weight_temp_7_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_7_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_7_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_7_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_1609, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_1609 = ap_const_lv3_7))) then 
            weight_temp_7_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_7_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
