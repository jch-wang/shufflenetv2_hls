-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_last is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_AWVALID : OUT STD_LOGIC;
    m_axi_weight_V_AWREADY : IN STD_LOGIC;
    m_axi_weight_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WVALID : OUT STD_LOGIC;
    m_axi_weight_V_WREADY : IN STD_LOGIC;
    m_axi_weight_V_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WLAST : OUT STD_LOGIC;
    m_axi_weight_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARVALID : OUT STD_LOGIC;
    m_axi_weight_V_ARREADY : IN STD_LOGIC;
    m_axi_weight_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RVALID : IN STD_LOGIC;
    m_axi_weight_V_RREADY : OUT STD_LOGIC;
    m_axi_weight_V_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_RLAST : IN STD_LOGIC;
    m_axi_weight_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BVALID : IN STD_LOGIC;
    m_axi_weight_V_BREADY : OUT STD_LOGIC;
    m_axi_weight_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv_last_weight_V9 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_0_ce0 : OUT STD_LOGIC;
    conv_last_output_V_0_we0 : OUT STD_LOGIC;
    conv_last_output_V_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_1_ce0 : OUT STD_LOGIC;
    conv_last_output_V_1_we0 : OUT STD_LOGIC;
    conv_last_output_V_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_2_ce0 : OUT STD_LOGIC;
    conv_last_output_V_2_we0 : OUT STD_LOGIC;
    conv_last_output_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_3_ce0 : OUT STD_LOGIC;
    conv_last_output_V_3_we0 : OUT STD_LOGIC;
    conv_last_output_V_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_4_ce0 : OUT STD_LOGIC;
    conv_last_output_V_4_we0 : OUT STD_LOGIC;
    conv_last_output_V_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_5_ce0 : OUT STD_LOGIC;
    conv_last_output_V_5_we0 : OUT STD_LOGIC;
    conv_last_output_V_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_6_ce0 : OUT STD_LOGIC;
    conv_last_output_V_6_we0 : OUT STD_LOGIC;
    conv_last_output_V_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv_last_output_V_7_ce0 : OUT STD_LOGIC;
    conv_last_output_V_7_we0 : OUT STD_LOGIC;
    conv_last_output_V_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_last_output_V_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of conv_last is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight_V_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_V_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_645 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_reg_656 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_reg_667 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten10_reg_678 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_1_reg_689 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten6_reg_701 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_712 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_724 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten11_reg_780 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_2_reg_791 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten12_reg_802 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_reg_813 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_824 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter2_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_flatten_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_841_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_859_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter1_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_j_mid2_reg_3374 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_cast_mid2_v_fu_867_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_cast_mid2_v_reg_3380 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_875_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_tmp_reg_3387 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_3_fu_889_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_V_addr_reg_3402 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_V_addr_read_reg_3408 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten14_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten14_reg_3420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state14_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp1_iter1_exitcond_flatten14_reg_3420 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_1002_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten15_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten15_reg_3429 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next7_fu_1020_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_cast_mid2_v_fu_1041_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_cast_mid2_v_reg_3442 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_2095_fu_1053_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2095_reg_3447 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex2_cast_mid2_s_reg_3451 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_mid2_fu_1095_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_mid2_reg_3456 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_cast_mid2_fu_1103_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_cast_mid2_reg_3461 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_fu_1111_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_2_reg_3472 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_cast_cast1_fu_1166_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_cast_cast1_reg_3477 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal h_cast_cast_fu_1170_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal h_cast_cast_reg_3482 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond46_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_33_fu_1180_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_33_reg_3491 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_cast_cast1_fu_1186_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_cast_cast1_reg_3496 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal w_cast_cast_fu_1190_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_cast_cast_reg_3501 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_43_fu_1200_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_43_reg_3509 : STD_LOGIC_VECTOR (2 downto 0);
    signal ci_cast_cast_fu_1206_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ci_cast_cast_reg_3514 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal input_V_addr_reg_3519 : STD_LOGIC_VECTOR (11 downto 0);
    signal ci_15_fu_1251_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ci_15_reg_3527 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_612_fu_1298_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_612_reg_3535 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal exitcond50_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal co_48_7_fu_1346_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_48_7_reg_3580 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_1_1_reg_3585 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal conv_last_output_V_4_1_reg_3590 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_3_1_reg_3595 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_6_1_reg_3600 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_2_1_reg_3605 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_7_1_reg_3610 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_5_1_reg_3615 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_0_1_reg_3620 : STD_LOGIC_VECTOR (9 downto 0);
    signal weight_temp_0_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_0_0_0_4_reg_3625 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_V_load_reg_3630 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_3_reg_3635 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_2_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_2_0_0_3_reg_3640 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_3_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_3_0_0_3_reg_3645 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_4_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_4_0_0_3_reg_3650 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_5_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_5_0_0_3_reg_3655 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_6_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_6_0_0_3_reg_3660 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_7_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_7_0_0_3_reg_3665 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1369_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_3670 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal conv_last_output_V_0_2_reg_3675 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2099_reg_3680 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_1_fu_1386_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_1_reg_3685 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_1_2_reg_3690 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2104_reg_3695 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_2_fu_1403_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_2_reg_3700 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_2_2_reg_3705 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2109_reg_3710 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_3_fu_1420_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_3_reg_3715 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_3_2_reg_3720 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2114_reg_3725 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_4_fu_1437_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_4_reg_3730 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_4_2_reg_3735 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2119_reg_3740 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_5_fu_1454_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_5_reg_3745 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_5_2_reg_3750 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2124_reg_3755 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_6_fu_1471_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_6_reg_3760 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_6_2_reg_3765 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2129_reg_3770 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_180_7_fu_1488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_180_7_reg_3775 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_last_output_V_7_2_reg_3780 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2134_reg_3785 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_73_fu_1513_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_73_reg_3790 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_2098_reg_3795 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_75_fu_1547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_75_reg_3802 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2101_fu_1553_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2101_reg_3808 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_244_reg_3821 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_1_fu_1594_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_1_reg_3827 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2103_reg_3832 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_1_fu_1628_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_1_reg_3839 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2106_fu_1634_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2106_reg_3845 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_1_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_1_reg_3851 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_247_reg_3858 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_2_fu_1675_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_2_reg_3864 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2108_reg_3869 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_2_fu_1709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_2_reg_3876 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2111_fu_1715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2111_reg_3882 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_2_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_2_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_248_reg_3895 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_3_fu_1756_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_3_reg_3901 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2113_reg_3906 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_3_fu_1790_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_3_reg_3913 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2116_fu_1796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2116_reg_3919 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_3_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_3_reg_3925 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_249_reg_3932 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_4_fu_1837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_4_reg_3938 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2118_reg_3943 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_4_fu_1871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_4_reg_3950 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2121_fu_1877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2121_reg_3956 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_4_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_4_reg_3962 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_reg_3969 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_5_fu_1918_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_5_reg_3975 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2123_reg_3980 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_5_fu_1952_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_5_reg_3987 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2126_fu_1958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2126_reg_3993 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_5_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_5_reg_3999 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_reg_4006 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_6_fu_1999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_6_reg_4012 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2128_reg_4017 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_6_fu_2033_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_6_reg_4024 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2131_fu_2039_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2131_reg_4030 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_6_fu_2053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_6_reg_4036 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_252_reg_4043 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_181_7_fu_2080_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_181_7_reg_4049 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2133_reg_4054 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_7_fu_2114_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_7_reg_4061 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2136_fu_2120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2136_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_7_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_54_7_reg_4073 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_reg_4080 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_38_i_i_fu_2192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_reg_4086 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_246_fu_2208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_246_reg_4091 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_4096 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_2236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_4101 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_2241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_reg_4106 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_reg_4111 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_1_fu_2305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_1_reg_4116 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_331_fu_2316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_331_reg_4121 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_2333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_reg_4126 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_fu_2338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_reg_4131 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_fu_2386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_reg_4136 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_2_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_2_reg_4141 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_325_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_325_reg_4146 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_2430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_4151 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_reg_4156 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_fu_2483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_reg_4161 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_3_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_3_reg_4166 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_326_fu_2510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_326_reg_4171 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_2527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_4176 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_fu_2532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_reg_4181 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_fu_2580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_reg_4186 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_4_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_4_reg_4191 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_327_fu_2607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_327_reg_4196 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_2624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_reg_4201 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_fu_2629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_reg_4206 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_fu_2677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_reg_4211 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_5_fu_2693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_5_reg_4216 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_328_fu_2704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_328_reg_4221 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_2721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_reg_4226 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_fu_2726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_reg_4231 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_fu_2774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_reg_4236 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_6_fu_2790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_6_reg_4241 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_329_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_329_reg_4246 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_2818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_reg_4251 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_fu_2823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_reg_4256 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_fu_2871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_reg_4261 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_7_fu_2887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_583_7_reg_4266 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_330_fu_2898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_330_reg_4271 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_reg_4276 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_fu_2920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_reg_4281 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten16_fu_3166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten16_reg_4286 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state27_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_flag00011001 : BOOLEAN;
    signal indvar_flatten_next2_fu_3172_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_next2_reg_4290 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal j_2_mid_fu_3190_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_mid_reg_4295 : STD_LOGIC_VECTOR (2 downto 0);
    signal arrayNo8_mid2_v_fu_3198_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal arrayNo8_mid2_v_reg_4301 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2096_fu_3206_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2096_reg_4306 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp2_iter1_tmp_2096_reg_4306 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex9_cast_mid2_s_reg_4311 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_mid_fu_3232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_4316 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_mid2_fu_3244_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_mid2_reg_4321 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next1_7_fu_3258_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next1_7_reg_4327 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_cast_mid2_fu_3271_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_cast_mid2_reg_4332 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state28_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state30_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_flag00011001 : BOOLEAN;
    signal k_3_fu_3277_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_3_reg_4338 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_last_output_V_1_3_reg_4343 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_4_3_reg_4348 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_3_3_reg_4353 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_6_3_reg_4358 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_2_3_reg_4363 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_7_3_reg_4368 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_5_3_reg_4373 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_last_output_V_0_3_reg_4378 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state27 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage1_flag00011011 : BOOLEAN;
    signal weight_temp_0_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_0_0_0_ce0 : STD_LOGIC;
    signal weight_temp_0_0_0_we0 : STD_LOGIC;
    signal weight_temp_0_0_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_1_0_0_ce0 : STD_LOGIC;
    signal weight_temp_1_0_0_we0 : STD_LOGIC;
    signal weight_temp_2_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_2_0_0_ce0 : STD_LOGIC;
    signal weight_temp_2_0_0_we0 : STD_LOGIC;
    signal weight_temp_3_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_3_0_0_ce0 : STD_LOGIC;
    signal weight_temp_3_0_0_we0 : STD_LOGIC;
    signal weight_temp_4_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_4_0_0_ce0 : STD_LOGIC;
    signal weight_temp_4_0_0_we0 : STD_LOGIC;
    signal weight_temp_5_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_5_0_0_ce0 : STD_LOGIC;
    signal weight_temp_5_0_0_we0 : STD_LOGIC;
    signal weight_temp_6_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_6_0_0_ce0 : STD_LOGIC;
    signal weight_temp_6_0_0_we0 : STD_LOGIC;
    signal weight_temp_7_0_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weight_temp_7_0_0_ce0 : STD_LOGIC;
    signal weight_temp_7_0_0_we0 : STD_LOGIC;
    signal i_phi_fu_660_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_phi_fu_693_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal j_1_phi_fu_716_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_phi_fu_728_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_reg_736 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond47_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal w_reg_747 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond49_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ci_reg_758 : STD_LOGIC_VECTOR (7 downto 0);
    signal co_reg_769 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal indvar_flatten11_phi_fu_784_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp2_stage0_flag00000000 : BOOLEAN;
    signal i_2_phi_fu_795_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten12_phi_fu_806_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_phi_fu_817_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_phi_fu_828_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_713_cast_fu_984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_cast_mid2_fu_1048_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_720_cast_fu_1154_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_733_cast_fu_1240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_743_cast_fu_1334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_739_cast_fu_1352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_727_cast_fu_3319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00001001 : BOOLEAN;
    signal this_assign_1_6_fu_3127_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2097_fu_3352_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp2_stage1_flag00000000 : BOOLEAN;
    signal this_assign_1_5_fu_3097_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_4_fu_3067_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_3_fu_3037_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_2_fu_3007_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_1_fu_2977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_fu_2947_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_7_fu_3157_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_847_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_591_fu_895_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_592_fu_906_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl2_cast_fu_902_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl3_cast_fu_913_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_593_fu_917_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal j_cast_cast_fu_927_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_708_cast_fu_923_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_597_fu_930_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_712_cast_fu_936_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_595_fu_958_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_594_fu_951_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_fu_965_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_cast_cast1_fu_975_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_596_fu_969_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_598_fu_978_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_flatten6_op_fu_1014_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_4_fu_1028_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond45_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_3_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_mid_fu_1034_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond69_mid_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_600_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_1084_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_599_fu_1117_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_715_cast_fu_1124_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_1_cast_mid2_cast_fu_1128_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_601_fu_1131_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_719_cast_fu_1137_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_cast_cast_fu_1145_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_602_fu_1148_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_607_fu_1210_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_729_cast_fu_1218_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_608_fu_1222_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_732_cast_fu_1227_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_609_fu_1235_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex3_fu_1263_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_610_fu_1273_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_735_cast_fu_1281_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_611_fu_1285_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_738_cast_fu_1290_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_614_fu_1311_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_613_fu_1303_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl5_cast_fu_1319_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_615_fu_1323_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_616_fu_1329_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_s_fu_1369_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP2_V_fu_1366_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_1369_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_1_fu_1386_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_1_fu_1386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_2_fu_1403_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_2_fu_1403_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_3_fu_1420_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_3_fu_1420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_4_fu_1437_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_4_fu_1437_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_5_fu_1454_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_5_fu_1454_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_6_fu_1471_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_6_fu_1471_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_7_fu_1488_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_180_7_fu_1488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1502_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_360_cast_fu_1509_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_242_fu_1536_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_74_fu_1526_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2100_fu_1539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_1561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_1_fu_1583_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_1_cast_fu_1590_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_1_fu_1617_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_1_fu_1607_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2105_fu_1620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_1_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_2_fu_1664_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_2_cast_fu_1671_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_2_fu_1698_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_2_fu_1688_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2110_fu_1701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_2_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_3_fu_1745_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_3_cast_fu_1752_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_3_fu_1779_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_3_fu_1769_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2115_fu_1782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_3_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_4_fu_1826_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_4_cast_fu_1833_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_4_fu_1860_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_4_fu_1850_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2120_fu_1863_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_4_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_5_fu_1907_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_5_cast_fu_1914_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_5_fu_1941_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_5_fu_1931_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2125_fu_1944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_5_fu_1966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_6_fu_1988_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_6_cast_fu_1995_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_6_fu_2022_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_6_fu_2012_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2130_fu_2025_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_6_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_570_7_fu_2069_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_570_7_cast_fu_2076_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_574_7_fu_2103_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_182_7_fu_2093_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2135_fu_2106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_7_fu_2128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2102_fu_2150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_2174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_2167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_2197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_2185_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_2254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_2259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2107_fu_2247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_1_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_1_fu_2277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_2264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_1_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_1_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_2282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_2351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_2356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2112_fu_2344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_2_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_2_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_2361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_2_fu_2391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_2_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_2379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_2418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_2424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_2407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_2453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2117_fu_2441_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_3_fu_2465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_3_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_3_fu_2488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_3_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_2476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_demorgan_fu_2515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_2521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_2504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_2545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2122_fu_2538_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_4_fu_2562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_4_fu_2568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_2555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_4_fu_2585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_4_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2573_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_demorgan_fu_2612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_2618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_fu_2601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_2642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_2647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2127_fu_2635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_5_fu_2659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_5_fu_2665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_2652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_5_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_5_fu_2688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_5_fu_2670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_demorgan_fu_2709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_fu_2698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_6_fu_2739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_2744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2132_fu_2732_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_6_fu_2756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_6_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_2749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_6_fu_2779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_6_fu_2785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_2767_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_demorgan_fu_2806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_2812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_2795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_7_fu_2836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_7_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2137_fu_2829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_581_7_fu_2853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_7_fu_2859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_7_fu_2846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_7_fu_2876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_7_fu_2882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_7_fu_2864_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_demorgan_fu_2903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_2909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_2892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_2926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_2930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_fu_2935_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_485_fu_2941_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_2956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_1_fu_2960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_1_fu_2965_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_1_486_fu_2971_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_2986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_2_fu_2990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_2_fu_2995_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_2_487_fu_3001_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_3016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_3_fu_3020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_3_fu_3025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_3_488_fu_3031_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp10_fu_3046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_4_fu_3050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_4_fu_3055_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_4_489_fu_3061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp12_fu_3076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_5_fu_3080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_5_fu_3085_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_5_490_fu_3091_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp14_fu_3106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_6_fu_3110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_6_fu_3115_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_6_491_fu_3121_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp16_fu_3136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_7_fu_3140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_183_mux_7_fu_3145_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_183_7_492_fu_3151_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten17_fu_3184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_3178_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond48_fu_3226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_3220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_604_fu_3238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten28_op_fu_3252_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_fu_3266_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_603_fu_3282_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_722_cast_fu_3289_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_2_cast_mid2_cast_fu_3293_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_605_fu_3296_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_726_cast_fu_3302_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_1_cast_cast_fu_3310_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_606_fu_3313_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_241_fu_3331_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component ShuffleNetV2_mux_udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv_last_weight_mb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    weight_temp_0_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_0_0_0_address0,
        ce0 => weight_temp_0_0_0_ce0,
        we0 => weight_temp_0_0_0_we0,
        d0 => weight_temp_0_0_0_d0,
        q0 => weight_temp_0_0_0_q0);

    weight_temp_1_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_1_0_0_address0,
        ce0 => weight_temp_1_0_0_ce0,
        we0 => weight_temp_1_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_1_0_0_q0);

    weight_temp_2_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_2_0_0_address0,
        ce0 => weight_temp_2_0_0_ce0,
        we0 => weight_temp_2_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_2_0_0_q0);

    weight_temp_3_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_3_0_0_address0,
        ce0 => weight_temp_3_0_0_ce0,
        we0 => weight_temp_3_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_3_0_0_q0);

    weight_temp_4_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_4_0_0_address0,
        ce0 => weight_temp_4_0_0_ce0,
        we0 => weight_temp_4_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_4_0_0_q0);

    weight_temp_5_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_5_0_0_address0,
        ce0 => weight_temp_5_0_0_ce0,
        we0 => weight_temp_5_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_5_0_0_q0);

    weight_temp_6_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_6_0_0_address0,
        ce0 => weight_temp_6_0_0_ce0,
        we0 => weight_temp_6_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_6_0_0_q0);

    weight_temp_7_0_0_U : component conv_last_weight_mb6
    generic map (
        DataWidth => 8,
        AddressRange => 12288,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_7_0_0_address0,
        ce0 => weight_temp_7_0_0_ce0,
        we0 => weight_temp_7_0_0_we0,
        d0 => weight_V_addr_read_reg_3408,
        q0 => weight_temp_7_0_0_q0);

    ShuffleNetV2_mux_udo_U747 : component ShuffleNetV2_mux_udo
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => conv_last_output_V_0_q0,
        din2 => conv_last_output_V_1_q0,
        din3 => conv_last_output_V_2_q0,
        din4 => conv_last_output_V_3_q0,
        din5 => conv_last_output_V_4_q0,
        din6 => conv_last_output_V_5_q0,
        din7 => conv_last_output_V_6_q0,
        din8 => conv_last_output_V_7_q0,
        din9 => ap_reg_pp2_iter1_tmp_2096_reg_4306,
        dout => tmp_241_fu_3331_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state27 xor ap_const_logic_1);
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3365))) then
                    if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = m_axi_weight_V_ARREADY) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_758_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond47_fu_1194_p2))) then 
                ci_reg_758 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond50_fu_1257_p2 = ap_const_lv1_1))) then 
                ci_reg_758 <= ci_15_reg_3527;
            end if; 
        end if;
    end process;

    co_reg_769_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond49_fu_1245_p2))) then 
                co_reg_769 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                co_reg_769 <= co_48_7_reg_3580;
            end if; 
        end if;
    end process;

    h_reg_736_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                h_reg_736 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond47_fu_1194_p2))) then 
                h_reg_736 <= h_33_reg_3491;
            end if; 
        end if;
    end process;

    i_1_reg_689_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_1_reg_689 <= ap_const_lv10_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) then 
                i_1_reg_689 <= i_1_cast_mid2_v_reg_3442;
            end if; 
        end if;
    end process;

    i_2_reg_791_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                i_2_reg_791 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i_2_reg_791 <= arrayNo8_mid2_v_reg_4301;
            end if; 
        end if;
    end process;

    i_reg_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_reg_3365) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_656 <= i_cast_mid2_v_reg_3380;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_656 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten10_reg_678_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                indvar_flatten10_reg_678 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten14_fu_996_p2))) then 
                indvar_flatten10_reg_678 <= indvar_flatten_next1_fu_1002_p2;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_780_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                indvar_flatten11_reg_780 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                indvar_flatten11_reg_780 <= indvar_flatten_next2_reg_4290;
            end if; 
        end if;
    end process;

    indvar_flatten12_reg_802_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                indvar_flatten12_reg_802 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                indvar_flatten12_reg_802 <= indvar_flatten_next1_7_reg_4327;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                indvar_flatten6_reg_701 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten14_fu_996_p2))) then 
                indvar_flatten6_reg_701 <= indvar_flatten_next7_fu_1020_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_835_p2))) then 
                indvar_flatten_reg_645 <= indvar_flatten_next_fu_841_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_645 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    j_1_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                j_1_reg_712 <= ap_const_lv3_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) then 
                j_1_reg_712 <= j_1_cast_mid2_reg_3461;
            end if; 
        end if;
    end process;

    j_2_reg_813_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                j_2_reg_813 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                j_2_reg_813 <= j_2_cast_mid2_reg_4332;
            end if; 
        end if;
    end process;

    j_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_835_p2))) then 
                j_reg_667 <= j_3_fu_889_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_667 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    k_1_reg_824_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then 
                k_1_reg_824 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                k_1_reg_824 <= k_3_reg_4338;
            end if; 
        end if;
    end process;

    k_reg_724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                k_reg_724 <= ap_const_lv3_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420))) then 
                k_reg_724 <= k_2_reg_3472;
            end if; 
        end if;
    end process;

    w_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond46_fu_1174_p2))) then 
                w_reg_747 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond49_fu_1245_p2))) then 
                w_reg_747 <= w_43_reg_3509;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten_reg_3365 <= exitcond_flatten_reg_3365;
                ap_reg_pp0_iter1_j_mid2_reg_3374 <= j_mid2_reg_3374;
                ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391 <= newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter1_tmp_reg_3387 <= tmp_reg_3387;
                exitcond_flatten_reg_3365 <= exitcond_flatten_fu_835_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter2_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter1_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter2_j_mid2_reg_3374 <= ap_reg_pp0_iter1_j_mid2_reg_3374;
                ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter1_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter2_tmp_reg_3387 <= ap_reg_pp0_iter1_tmp_reg_3387;
                ap_reg_pp0_iter3_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter2_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter3_j_mid2_reg_3374 <= ap_reg_pp0_iter2_j_mid2_reg_3374;
                ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter2_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter3_tmp_reg_3387 <= ap_reg_pp0_iter2_tmp_reg_3387;
                ap_reg_pp0_iter4_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter3_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter4_j_mid2_reg_3374 <= ap_reg_pp0_iter3_j_mid2_reg_3374;
                ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter3_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter4_tmp_reg_3387 <= ap_reg_pp0_iter3_tmp_reg_3387;
                ap_reg_pp0_iter5_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter4_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter5_j_mid2_reg_3374 <= ap_reg_pp0_iter4_j_mid2_reg_3374;
                ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter4_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter5_tmp_reg_3387 <= ap_reg_pp0_iter4_tmp_reg_3387;
                ap_reg_pp0_iter6_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter5_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter6_j_mid2_reg_3374 <= ap_reg_pp0_iter5_j_mid2_reg_3374;
                ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter5_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter6_tmp_reg_3387 <= ap_reg_pp0_iter5_tmp_reg_3387;
                ap_reg_pp0_iter7_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter6_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter7_j_mid2_reg_3374 <= ap_reg_pp0_iter6_j_mid2_reg_3374;
                ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter6_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter7_tmp_reg_3387 <= ap_reg_pp0_iter6_tmp_reg_3387;
                ap_reg_pp0_iter8_exitcond_flatten_reg_3365 <= ap_reg_pp0_iter7_exitcond_flatten_reg_3365;
                ap_reg_pp0_iter8_j_mid2_reg_3374 <= ap_reg_pp0_iter7_j_mid2_reg_3374;
                ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter7_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter8_tmp_reg_3387 <= ap_reg_pp0_iter7_tmp_reg_3387;
                ap_reg_pp0_iter9_j_mid2_reg_3374 <= ap_reg_pp0_iter8_j_mid2_reg_3374;
                ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391 <= ap_reg_pp0_iter8_newIndex_cast_mid2_v_reg_3391;
                ap_reg_pp0_iter9_tmp_reg_3387 <= ap_reg_pp0_iter8_tmp_reg_3387;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp1_iter1_exitcond_flatten14_reg_3420 <= exitcond_flatten14_reg_3420;
                exitcond_flatten14_reg_3420 <= exitcond_flatten14_fu_996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp2_iter1_tmp_2096_reg_4306 <= tmp_2096_reg_4306;
                exitcond_flatten16_reg_4286 <= exitcond_flatten16_fu_3166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten16_fu_3166_p2))) then
                arrayNo8_mid2_v_reg_4301 <= arrayNo8_mid2_v_fu_3198_p3;
                indvar_flatten_next1_7_reg_4327 <= indvar_flatten_next1_7_fu_3258_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                brmerge40_demorgan_i_325_reg_4146 <= brmerge40_demorgan_i_325_fu_2413_p2;
                brmerge40_demorgan_i_326_reg_4171 <= brmerge40_demorgan_i_326_fu_2510_p2;
                brmerge40_demorgan_i_327_reg_4196 <= brmerge40_demorgan_i_327_fu_2607_p2;
                brmerge40_demorgan_i_328_reg_4221 <= brmerge40_demorgan_i_328_fu_2704_p2;
                brmerge40_demorgan_i_329_reg_4246 <= brmerge40_demorgan_i_329_fu_2801_p2;
                brmerge40_demorgan_i_330_reg_4271 <= brmerge40_demorgan_i_330_fu_2898_p2;
                brmerge40_demorgan_i_331_reg_4121 <= brmerge40_demorgan_i_331_fu_2316_p2;
                brmerge40_demorgan_i_reg_4096 <= brmerge40_demorgan_i_fu_2219_p2;
                brmerge_i_i_i_1_reg_4131 <= brmerge_i_i_i_1_fu_2338_p2;
                brmerge_i_i_i_2_reg_4156 <= brmerge_i_i_i_2_fu_2435_p2;
                brmerge_i_i_i_3_reg_4181 <= brmerge_i_i_i_3_fu_2532_p2;
                brmerge_i_i_i_4_reg_4206 <= brmerge_i_i_i_4_fu_2629_p2;
                brmerge_i_i_i_5_reg_4231 <= brmerge_i_i_i_5_fu_2726_p2;
                brmerge_i_i_i_6_reg_4256 <= brmerge_i_i_i_6_fu_2823_p2;
                brmerge_i_i_i_7_reg_4281 <= brmerge_i_i_i_7_fu_2920_p2;
                brmerge_i_i_i_reg_4106 <= brmerge_i_i_i_fu_2241_p2;
                p_38_i_i_1_reg_4111 <= p_38_i_i_1_fu_2289_p2;
                p_38_i_i_2_reg_4136 <= p_38_i_i_2_fu_2386_p2;
                p_38_i_i_3_reg_4161 <= p_38_i_i_3_fu_2483_p2;
                p_38_i_i_4_reg_4186 <= p_38_i_i_4_fu_2580_p2;
                p_38_i_i_5_reg_4211 <= p_38_i_i_5_fu_2677_p2;
                p_38_i_i_6_reg_4236 <= p_38_i_i_6_fu_2774_p2;
                p_38_i_i_7_reg_4261 <= p_38_i_i_7_fu_2871_p2;
                p_38_i_i_reg_4086 <= p_38_i_i_fu_2192_p2;
                tmp_246_reg_4091 <= tmp_246_fu_2208_p2;
                tmp_583_1_reg_4116 <= tmp_583_1_fu_2305_p2;
                tmp_583_2_reg_4141 <= tmp_583_2_fu_2402_p2;
                tmp_583_3_reg_4166 <= tmp_583_3_fu_2499_p2;
                tmp_583_4_reg_4191 <= tmp_583_4_fu_2596_p2;
                tmp_583_5_reg_4216 <= tmp_583_5_fu_2693_p2;
                tmp_583_6_reg_4241 <= tmp_583_6_fu_2790_p2;
                tmp_583_7_reg_4266 <= tmp_583_7_fu_2887_p2;
                underflow_1_reg_4126 <= underflow_1_fu_2333_p2;
                underflow_2_reg_4151 <= underflow_2_fu_2430_p2;
                underflow_3_reg_4176 <= underflow_3_fu_2527_p2;
                underflow_4_reg_4201 <= underflow_4_fu_2624_p2;
                underflow_5_reg_4226 <= underflow_5_fu_2721_p2;
                underflow_6_reg_4251 <= underflow_6_fu_2818_p2;
                underflow_7_reg_4276 <= underflow_7_fu_2915_p2;
                underflow_reg_4101 <= underflow_fu_2236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                carry_54_1_reg_3851 <= carry_54_1_fu_1648_p2;
                carry_54_2_reg_3888 <= carry_54_2_fu_1729_p2;
                carry_54_3_reg_3925 <= carry_54_3_fu_1810_p2;
                carry_54_4_reg_3962 <= carry_54_4_fu_1891_p2;
                carry_54_5_reg_3999 <= carry_54_5_fu_1972_p2;
                carry_54_6_reg_4036 <= carry_54_6_fu_2053_p2;
                carry_54_7_reg_4073 <= carry_54_7_fu_2134_p2;
                carry_s_reg_3814 <= carry_s_fu_1567_p2;
                p_Val2_181_1_reg_3827 <= p_Val2_181_1_fu_1594_p2;
                p_Val2_181_2_reg_3864 <= p_Val2_181_2_fu_1675_p2;
                p_Val2_181_3_reg_3901 <= p_Val2_181_3_fu_1756_p2;
                p_Val2_181_4_reg_3938 <= p_Val2_181_4_fu_1837_p2;
                p_Val2_181_5_reg_3975 <= p_Val2_181_5_fu_1918_p2;
                p_Val2_181_6_reg_4012 <= p_Val2_181_6_fu_1999_p2;
                p_Val2_181_7_reg_4049 <= p_Val2_181_7_fu_2080_p2;
                p_Val2_183_1_reg_3839 <= p_Val2_183_1_fu_1628_p2;
                p_Val2_183_2_reg_3876 <= p_Val2_183_2_fu_1709_p2;
                p_Val2_183_3_reg_3913 <= p_Val2_183_3_fu_1790_p2;
                p_Val2_183_4_reg_3950 <= p_Val2_183_4_fu_1871_p2;
                p_Val2_183_5_reg_3987 <= p_Val2_183_5_fu_1952_p2;
                p_Val2_183_6_reg_4024 <= p_Val2_183_6_fu_2033_p2;
                p_Val2_183_7_reg_4061 <= p_Val2_183_7_fu_2114_p2;
                p_Val2_73_reg_3790 <= p_Val2_73_fu_1513_p2;
                p_Val2_75_reg_3802 <= p_Val2_75_fu_1547_p2;
                tmp_2098_reg_3795 <= p_Val2_73_fu_1513_p2(15 downto 15);
                tmp_2101_reg_3808 <= p_Val2_75_fu_1547_p2(7 downto 7);
                tmp_2103_reg_3832 <= p_Val2_181_1_fu_1594_p2(15 downto 15);
                tmp_2106_reg_3845 <= p_Val2_183_1_fu_1628_p2(7 downto 7);
                tmp_2108_reg_3869 <= p_Val2_181_2_fu_1675_p2(15 downto 15);
                tmp_2111_reg_3882 <= p_Val2_183_2_fu_1709_p2(7 downto 7);
                tmp_2113_reg_3906 <= p_Val2_181_3_fu_1756_p2(15 downto 15);
                tmp_2116_reg_3919 <= p_Val2_183_3_fu_1790_p2(7 downto 7);
                tmp_2118_reg_3943 <= p_Val2_181_4_fu_1837_p2(15 downto 15);
                tmp_2121_reg_3956 <= p_Val2_183_4_fu_1871_p2(7 downto 7);
                tmp_2123_reg_3980 <= p_Val2_181_5_fu_1918_p2(15 downto 15);
                tmp_2126_reg_3993 <= p_Val2_183_5_fu_1952_p2(7 downto 7);
                tmp_2128_reg_4017 <= p_Val2_181_6_fu_1999_p2(15 downto 15);
                tmp_2131_reg_4030 <= p_Val2_183_6_fu_2033_p2(7 downto 7);
                tmp_2133_reg_4054 <= p_Val2_181_7_fu_2080_p2(15 downto 15);
                tmp_2136_reg_4067 <= p_Val2_183_7_fu_2114_p2(7 downto 7);
                tmp_244_reg_3821 <= p_Val2_73_fu_1513_p2(15 downto 14);
                tmp_247_reg_3858 <= p_Val2_181_1_fu_1594_p2(15 downto 14);
                tmp_248_reg_3895 <= p_Val2_181_2_fu_1675_p2(15 downto 14);
                tmp_249_reg_3932 <= p_Val2_181_3_fu_1756_p2(15 downto 14);
                tmp_250_reg_3969 <= p_Val2_181_4_fu_1837_p2(15 downto 14);
                tmp_251_reg_4006 <= p_Val2_181_5_fu_1918_p2(15 downto 14);
                tmp_252_reg_4043 <= p_Val2_181_6_fu_1999_p2(15 downto 14);
                tmp_253_reg_4080 <= p_Val2_181_7_fu_2080_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                ci_15_reg_3527 <= ci_15_fu_1251_p2;
                    ci_cast_cast_reg_3514(7 downto 0) <= ci_cast_cast_fu_1206_p1(7 downto 0);
                input_V_addr_reg_3519 <= tmp_733_cast_fu_1240_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_0 = exitcond50_fu_1257_p2))) then
                co_48_7_reg_3580 <= co_48_7_fu_1346_p2;
                tmp_612_reg_3535 <= tmp_612_fu_1298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                conv_last_output_V_0_1_reg_3620 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_1_1_reg_3585 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_2_1_reg_3605 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_3_1_reg_3595 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_4_1_reg_3590 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_5_1_reg_3615 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_6_1_reg_3600 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                conv_last_output_V_7_1_reg_3610 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
                input_V_load_reg_3630 <= input_V_q0;
                weight_temp_0_0_0_4_reg_3625 <= weight_temp_0_0_0_q0;
                weight_temp_1_0_0_3_reg_3635 <= weight_temp_1_0_0_q0;
                weight_temp_2_0_0_3_reg_3640 <= weight_temp_2_0_0_q0;
                weight_temp_3_0_0_3_reg_3645 <= weight_temp_3_0_0_q0;
                weight_temp_4_0_0_3_reg_3650 <= weight_temp_4_0_0_q0;
                weight_temp_5_0_0_3_reg_3655 <= weight_temp_5_0_0_q0;
                weight_temp_6_0_0_3_reg_3660 <= weight_temp_6_0_0_q0;
                weight_temp_7_0_0_3_reg_3665 <= weight_temp_7_0_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                conv_last_output_V_0_2_reg_3675 <= conv_last_output_V_0_q0;
                conv_last_output_V_1_2_reg_3690 <= conv_last_output_V_1_q0;
                conv_last_output_V_2_2_reg_3705 <= conv_last_output_V_2_q0;
                conv_last_output_V_3_2_reg_3720 <= conv_last_output_V_3_q0;
                conv_last_output_V_4_2_reg_3735 <= conv_last_output_V_4_q0;
                conv_last_output_V_5_2_reg_3750 <= conv_last_output_V_5_q0;
                conv_last_output_V_6_2_reg_3765 <= conv_last_output_V_6_q0;
                conv_last_output_V_7_2_reg_3780 <= conv_last_output_V_7_q0;
                p_Val2_180_1_reg_3685 <= p_Val2_180_1_fu_1386_p2;
                p_Val2_180_2_reg_3700 <= p_Val2_180_2_fu_1403_p2;
                p_Val2_180_3_reg_3715 <= p_Val2_180_3_fu_1420_p2;
                p_Val2_180_4_reg_3730 <= p_Val2_180_4_fu_1437_p2;
                p_Val2_180_5_reg_3745 <= p_Val2_180_5_fu_1454_p2;
                p_Val2_180_6_reg_3760 <= p_Val2_180_6_fu_1471_p2;
                p_Val2_180_7_reg_3775 <= p_Val2_180_7_fu_1488_p2;
                p_Val2_s_reg_3670 <= p_Val2_s_fu_1369_p2;
                tmp_2099_reg_3680 <= p_Val2_s_fu_1369_p2(5 downto 5);
                tmp_2104_reg_3695 <= p_Val2_180_1_fu_1386_p2(5 downto 5);
                tmp_2109_reg_3710 <= p_Val2_180_2_fu_1403_p2(5 downto 5);
                tmp_2114_reg_3725 <= p_Val2_180_3_fu_1420_p2(5 downto 5);
                tmp_2119_reg_3740 <= p_Val2_180_4_fu_1437_p2(5 downto 5);
                tmp_2124_reg_3755 <= p_Val2_180_5_fu_1454_p2(5 downto 5);
                tmp_2129_reg_3770 <= p_Val2_180_6_fu_1471_p2(5 downto 5);
                tmp_2134_reg_3785 <= p_Val2_180_7_fu_1488_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286))) then
                conv_last_output_V_0_3_reg_4378 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_1_3_reg_4343 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_2_3_reg_4363 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_3_3_reg_4353 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_4_3_reg_4348 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_5_3_reg_4373 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_6_3_reg_4358 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
                conv_last_output_V_7_3_reg_4368 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten14_fu_996_p2))) then
                exitcond_flatten15_reg_3429 <= exitcond_flatten15_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_fu_3166_p2))) then
                exitcond_mid_reg_4316 <= exitcond_mid_fu_3232_p2;
                j_2_mid_reg_4295 <= j_2_mid_fu_3190_p3;
                k_1_mid2_reg_4321 <= k_1_mid2_fu_3244_p3;
                newIndex9_cast_mid2_s_reg_4311 <= arrayNo8_mid2_v_fu_3198_p3(9 downto 3);
                tmp_2096_reg_4306 <= tmp_2096_fu_3206_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                h_33_reg_3491 <= h_33_fu_1180_p2;
                    h_cast_cast1_reg_3477(2 downto 0) <= h_cast_cast1_fu_1166_p1(2 downto 0);
                    h_cast_cast_reg_3482(2 downto 0) <= h_cast_cast_fu_1170_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten14_reg_3420))) then
                i_1_cast_mid2_v_reg_3442 <= i_1_cast_mid2_v_fu_1041_p3;
                j_1_cast_mid2_reg_3461 <= j_1_cast_mid2_fu_1103_p3;
                k_2_reg_3472 <= k_2_fu_1111_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_835_p2))) then
                i_cast_mid2_v_reg_3380 <= i_cast_mid2_v_fu_867_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then
                indvar_flatten_next2_reg_4290 <= indvar_flatten_next2_fu_3172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286))) then
                j_2_cast_mid2_reg_4332 <= j_2_cast_mid2_fu_3271_p3;
                k_3_reg_4338 <= k_3_fu_3277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_835_p2))) then
                j_mid2_reg_3374 <= j_mid2_fu_859_p3;
                newIndex_cast_mid2_v_reg_3391 <= i_cast_mid2_v_fu_867_p3(9 downto 3);
                tmp_reg_3387 <= tmp_fu_875_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten14_reg_3420))) then
                k_mid2_reg_3456 <= k_mid2_fu_1095_p3;
                newIndex2_cast_mid2_s_reg_3451 <= i_1_cast_mid2_v_fu_1041_p3(9 downto 3);
                tmp_2095_reg_3447 <= tmp_2095_fu_1053_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                w_43_reg_3509 <= w_43_fu_1200_p2;
                    w_cast_cast1_reg_3496(2 downto 0) <= w_cast_cast1_fu_1186_p1(2 downto 0);
                    w_cast_cast_reg_3501(2 downto 0) <= w_cast_cast_fu_1190_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                weight_V_addr_read_reg_3408 <= m_axi_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_reg_3365))) then
                weight_V_addr_reg_3402 <= sum_fu_940_p2;
            end if;
        end if;
    end process;
    h_cast_cast1_reg_3477(9 downto 3) <= "0000000";
    h_cast_cast_reg_3482(10 downto 3) <= "00000000";
    w_cast_cast1_reg_3496(11 downto 3) <= "000000000";
    w_cast_cast_reg_3501(12 downto 3) <= "0000000000";
    ci_cast_cast_reg_3514(14 downto 8) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter9, exitcond_flatten_fu_835_p2, ap_enable_reg_pp0_iter0, exitcond_flatten14_fu_996_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state18, exitcond46_fu_1174_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, exitcond50_fu_1257_p2, exitcond_flatten16_fu_3166_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp0_stage0_flag00011011, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter10, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_flag00011011, ap_enable_reg_pp2_iter1, ap_block_pp2_stage1_flag00011011, exitcond47_fu_1194_p2, exitcond49_fu_1245_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_835_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_835_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten14_fu_996_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten14_fu_996_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond46_fu_1174_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond47_fu_1194_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond49_fu_1245_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond50_fu_1257_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_pp2_stage0 => 
                if (((ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten16_fu_3166_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_block_pp2_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten16_fu_3166_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if (((ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
        OP2_V_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_V_load_reg_3630),16));

    Range1_all_ones_1_fu_2254_p2 <= "1" when (tmp_247_reg_3858 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_2351_p2 <= "1" when (tmp_248_reg_3895 = ap_const_lv2_3) else "0";
    Range1_all_ones_3_fu_2448_p2 <= "1" when (tmp_249_reg_3932 = ap_const_lv2_3) else "0";
    Range1_all_ones_4_fu_2545_p2 <= "1" when (tmp_250_reg_3969 = ap_const_lv2_3) else "0";
    Range1_all_ones_5_fu_2642_p2 <= "1" when (tmp_251_reg_4006 = ap_const_lv2_3) else "0";
    Range1_all_ones_6_fu_2739_p2 <= "1" when (tmp_252_reg_4043 = ap_const_lv2_3) else "0";
    Range1_all_ones_7_fu_2836_p2 <= "1" when (tmp_253_reg_4080 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_2157_p2 <= "1" when (tmp_244_reg_3821 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_2259_p2 <= "1" when (tmp_247_reg_3858 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_2356_p2 <= "1" when (tmp_248_reg_3895 = ap_const_lv2_0) else "0";
    Range1_all_zeros_3_fu_2453_p2 <= "1" when (tmp_249_reg_3932 = ap_const_lv2_0) else "0";
    Range1_all_zeros_4_fu_2550_p2 <= "1" when (tmp_250_reg_3969 = ap_const_lv2_0) else "0";
    Range1_all_zeros_5_fu_2647_p2 <= "1" when (tmp_251_reg_4006 = ap_const_lv2_0) else "0";
    Range1_all_zeros_6_fu_2744_p2 <= "1" when (tmp_252_reg_4043 = ap_const_lv2_0) else "0";
    Range1_all_zeros_7_fu_2841_p2 <= "1" when (tmp_253_reg_4080 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_2162_p2 <= "1" when (tmp_244_reg_3821 = ap_const_lv2_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(14);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2);
    ap_CS_fsm_state17 <= ap_CS_fsm(4);
    ap_CS_fsm_state18 <= ap_CS_fsm(5);
    ap_CS_fsm_state19 <= ap_CS_fsm(6);
    ap_CS_fsm_state20 <= ap_CS_fsm(7);
    ap_CS_fsm_state21 <= ap_CS_fsm(8);
    ap_CS_fsm_state22 <= ap_CS_fsm(9);
    ap_CS_fsm_state23 <= ap_CS_fsm(10);
    ap_CS_fsm_state24 <= ap_CS_fsm(11);
    ap_CS_fsm_state25 <= ap_CS_fsm(12);
    ap_CS_fsm_state26 <= ap_CS_fsm(13);
    ap_CS_fsm_state31 <= ap_CS_fsm(16);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00001001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_3365)
    begin
                ap_block_pp0_stage0_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;


    ap_block_pp0_stage0_flag00011001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_3365, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_flag00011001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_3365, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;

        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter9_assign_proc : process(m_axi_weight_V_RVALID, ap_reg_pp0_iter8_exitcond_flatten_reg_3365)
    begin
                ap_block_state11_pp0_stage0_iter9 <= ((ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;

        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_3365, ap_sig_ioackin_m_axi_weight_V_ARREADY)
    begin
                ap_block_state4_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3365) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_weight_V_ARREADY));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_835_p2)
    begin
        if ((exitcond_flatten_fu_835_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state14_assign_proc : process(exitcond_flatten14_fu_996_p2)
    begin
        if ((exitcond_flatten14_fu_996_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state27_assign_proc : process(exitcond_flatten16_fu_3166_p2)
    begin
        if ((exitcond_flatten16_fu_3166_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state31)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1) and (ap_const_logic_0 = ap_enable_reg_pp1_iter2))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp2_iter0) and (ap_const_logic_0 = ap_enable_reg_pp2_iter1))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(m_axi_weight_V_ARREADY, ap_reg_ioackin_m_axi_weight_V_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY)) then 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= m_axi_weight_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    arrayNo8_mid2_v_fu_3198_p3 <= 
        i_5_fu_3178_p2 when (exitcond_flatten17_fu_3184_p2(0) = '1') else 
        i_2_phi_fu_795_p4;
    bias_V_address0 <= i_1_cast_mid2_fu_1048_p1(9 - 1 downto 0);

    bias_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge40_demorgan_i_325_fu_2413_p2 <= (tmp_2111_reg_3882 and deleted_ones_2_fu_2379_p3);
    brmerge40_demorgan_i_326_fu_2510_p2 <= (tmp_2116_reg_3919 and deleted_ones_3_fu_2476_p3);
    brmerge40_demorgan_i_327_fu_2607_p2 <= (tmp_2121_reg_3956 and deleted_ones_4_fu_2573_p3);
    brmerge40_demorgan_i_328_fu_2704_p2 <= (tmp_2126_reg_3993 and deleted_ones_5_fu_2670_p3);
    brmerge40_demorgan_i_329_fu_2801_p2 <= (tmp_2131_reg_4030 and deleted_ones_6_fu_2767_p3);
    brmerge40_demorgan_i_330_fu_2898_p2 <= (tmp_2136_reg_4067 and deleted_ones_7_fu_2864_p3);
    brmerge40_demorgan_i_331_fu_2316_p2 <= (tmp_2106_reg_3845 and deleted_ones_1_fu_2282_p3);
    brmerge40_demorgan_i_fu_2219_p2 <= (tmp_2101_reg_3808 and deleted_ones_fu_2185_p3);
    brmerge_i_i_1_fu_2300_p2 <= (tmp_2106_reg_3845 or p_not_i_i_1_fu_2294_p2);
    brmerge_i_i_2_fu_2397_p2 <= (tmp_2111_reg_3882 or p_not_i_i_2_fu_2391_p2);
    brmerge_i_i_3_fu_2494_p2 <= (tmp_2116_reg_3919 or p_not_i_i_3_fu_2488_p2);
    brmerge_i_i_4_fu_2591_p2 <= (tmp_2121_reg_3956 or p_not_i_i_4_fu_2585_p2);
    brmerge_i_i_5_fu_2688_p2 <= (tmp_2126_reg_3993 or p_not_i_i_5_fu_2682_p2);
    brmerge_i_i_6_fu_2785_p2 <= (tmp_2131_reg_4030 or p_not_i_i_6_fu_2779_p2);
    brmerge_i_i_7_fu_2882_p2 <= (tmp_2136_reg_4067 or p_not_i_i_7_fu_2876_p2);
    brmerge_i_i_fu_2203_p2 <= (tmp_2101_reg_3808 or p_not_i_i_fu_2197_p2);
    brmerge_i_i_i_1_fu_2338_p2 <= (underflow_1_fu_2333_p2 or overflow_1_fu_2310_p2);
    brmerge_i_i_i_2_fu_2435_p2 <= (underflow_2_fu_2430_p2 or overflow_2_fu_2407_p2);
    brmerge_i_i_i_3_fu_2532_p2 <= (underflow_3_fu_2527_p2 or overflow_3_fu_2504_p2);
    brmerge_i_i_i_4_fu_2629_p2 <= (underflow_4_fu_2624_p2 or overflow_4_fu_2601_p2);
    brmerge_i_i_i_5_fu_2726_p2 <= (underflow_5_fu_2721_p2 or overflow_5_fu_2698_p2);
    brmerge_i_i_i_6_fu_2823_p2 <= (underflow_6_fu_2818_p2 or overflow_6_fu_2795_p2);
    brmerge_i_i_i_7_fu_2920_p2 <= (underflow_7_fu_2915_p2 or overflow_7_fu_2892_p2);
    brmerge_i_i_i_fu_2241_p2 <= (underflow_fu_2236_p2 or overflow_fu_2213_p2);
    carry_54_1_fu_1648_p2 <= (tmp_2105_fu_1620_p3 and tmp_578_1_fu_1642_p2);
    carry_54_2_fu_1729_p2 <= (tmp_2110_fu_1701_p3 and tmp_578_2_fu_1723_p2);
    carry_54_3_fu_1810_p2 <= (tmp_2115_fu_1782_p3 and tmp_578_3_fu_1804_p2);
    carry_54_4_fu_1891_p2 <= (tmp_2120_fu_1863_p3 and tmp_578_4_fu_1885_p2);
    carry_54_5_fu_1972_p2 <= (tmp_2125_fu_1944_p3 and tmp_578_5_fu_1966_p2);
    carry_54_6_fu_2053_p2 <= (tmp_2130_fu_2025_p3 and tmp_578_6_fu_2047_p2);
    carry_54_7_fu_2134_p2 <= (tmp_2135_fu_2106_p3 and tmp_578_7_fu_2128_p2);
    carry_s_fu_1567_p2 <= (tmp_2100_fu_1539_p3 and tmp_243_fu_1561_p2);
    ci_15_fu_1251_p2 <= std_logic_vector(unsigned(ci_reg_758) + unsigned(ap_const_lv8_1));
    ci_cast_cast_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_758),15));
    co_48_7_fu_1346_p2 <= std_logic_vector(unsigned(co_reg_769) + unsigned(ap_const_lv10_8));

    conv_last_output_V_0_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_0_1_reg_3620, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_0_3_reg_4378, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= conv_last_output_V_0_3_reg_4378;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_0_address0 <= conv_last_output_V_0_1_reg_3620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_0_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_0_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_0_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_fu_2947_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_0_d0 <= this_assign_1_fu_2947_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_0_d0 <= bias_V_q0;
        else 
            conv_last_output_V_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_0_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv3_0 = tmp_2095_reg_3447)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_const_lv3_0 = ap_reg_pp2_iter1_tmp_2096_reg_4306)))) then 
            conv_last_output_V_0_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_1_address0_assign_proc : process(conv_last_output_V_1_1_reg_3585, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_1_3_reg_4343, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= conv_last_output_V_1_3_reg_4343;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_1_address0 <= conv_last_output_V_1_1_reg_3585;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_1_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_1_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_1_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_1_fu_2977_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_1_d0 <= this_assign_1_1_fu_2977_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_1_d0 <= bias_V_q0;
        else 
            conv_last_output_V_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_1_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_1)))) then 
            conv_last_output_V_1_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_2_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_2_1_reg_3605, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_2_3_reg_4363, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= conv_last_output_V_2_3_reg_4363;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_2_address0 <= conv_last_output_V_2_1_reg_3605;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_2_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_2_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_2_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_2_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_2_fu_3007_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_2_d0 <= this_assign_1_2_fu_3007_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_2_d0 <= bias_V_q0;
        else 
            conv_last_output_V_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_2_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_2)))) then 
            conv_last_output_V_2_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_3_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_3_1_reg_3595, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_3_3_reg_4353, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= conv_last_output_V_3_3_reg_4353;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_3_address0 <= conv_last_output_V_3_1_reg_3595;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_3_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_3_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_3_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_3_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_3_fu_3037_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_3_d0 <= this_assign_1_3_fu_3037_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_3_d0 <= bias_V_q0;
        else 
            conv_last_output_V_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_3_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_3)))) then 
            conv_last_output_V_3_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_4_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_4_1_reg_3590, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_4_3_reg_4348, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= conv_last_output_V_4_3_reg_4348;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_4_address0 <= conv_last_output_V_4_1_reg_3590;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_4_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_4_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_4_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_4_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_4_fu_3067_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_4_d0 <= this_assign_1_4_fu_3067_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_4_d0 <= bias_V_q0;
        else 
            conv_last_output_V_4_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_4_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_4)))) then 
            conv_last_output_V_4_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_5_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_5_1_reg_3615, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_5_3_reg_4373, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= conv_last_output_V_5_3_reg_4373;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_5_address0 <= conv_last_output_V_5_1_reg_3615;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_5_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_5_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_5_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_5_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_5_fu_3097_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_5_d0 <= this_assign_1_5_fu_3097_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_5_d0 <= bias_V_q0;
        else 
            conv_last_output_V_5_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_5_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_5)))) then 
            conv_last_output_V_5_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_6_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_6_1_reg_3600, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_6_3_reg_4358, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= conv_last_output_V_6_3_reg_4358;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_6_address0 <= conv_last_output_V_6_1_reg_3600;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_6_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_6_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_6_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_6_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, this_assign_1_6_fu_3127_p3, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_6_d0 <= this_assign_1_6_fu_3127_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_6_d0 <= bias_V_q0;
        else 
            conv_last_output_V_6_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_6_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_6)))) then 
            conv_last_output_V_6_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_7_address0_assign_proc : process(ap_CS_fsm_state22, conv_last_output_V_7_1_reg_3610, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, conv_last_output_V_7_3_reg_4368, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage0_flag00000000, tmp_720_cast_fu_1154_p1, tmp_739_cast_fu_1352_p1, tmp_727_cast_fu_3319_p1, ap_block_pp2_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= conv_last_output_V_7_3_reg_4368;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= tmp_727_cast_fu_3319_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_7_address0 <= conv_last_output_V_7_1_reg_3610;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_last_output_V_7_address0 <= tmp_739_cast_fu_1352_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_address0 <= tmp_720_cast_fu_1154_p1(10 - 1 downto 0);
        else 
            conv_last_output_V_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_7_ce0_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_CS_fsm_state22, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_flag00011001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_block_pp2_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            conv_last_output_V_7_ce0 <= ap_const_logic_1;
        else 
            conv_last_output_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_last_output_V_7_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_block_pp1_stage0_flag00000000, ap_CS_fsm_state26, ap_block_pp2_stage1_flag00000000, this_assign_1_7_fu_3157_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage1_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv_last_output_V_7_d0 <= this_assign_1_7_fu_3157_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            conv_last_output_V_7_d0 <= bias_V_q0;
        else 
            conv_last_output_V_7_d0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_last_output_V_7_we0_assign_proc : process(ap_block_pp1_stage0_flag00011001, tmp_2095_reg_3447, ap_reg_pp2_iter1_tmp_2096_reg_4306, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_flag00011001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state26, tmp_2097_fu_3352_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (tmp_2095_reg_3447 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_block_pp2_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_2097_fu_3352_p3) and (ap_reg_pp2_iter1_tmp_2096_reg_4306 = ap_const_lv3_7)))) then 
            conv_last_output_V_7_we0 <= ap_const_logic_1;
        else 
            conv_last_output_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    deleted_ones_1_fu_2282_p3 <= 
        p_41_i_i_1_fu_2277_p2 when (carry_54_1_reg_3851(0) = '1') else 
        Range1_all_ones_1_fu_2254_p2;
    deleted_ones_2_fu_2379_p3 <= 
        p_41_i_i_2_fu_2374_p2 when (carry_54_2_reg_3888(0) = '1') else 
        Range1_all_ones_2_fu_2351_p2;
    deleted_ones_3_fu_2476_p3 <= 
        p_41_i_i_3_fu_2471_p2 when (carry_54_3_reg_3925(0) = '1') else 
        Range1_all_ones_3_fu_2448_p2;
    deleted_ones_4_fu_2573_p3 <= 
        p_41_i_i_4_fu_2568_p2 when (carry_54_4_reg_3962(0) = '1') else 
        Range1_all_ones_4_fu_2545_p2;
    deleted_ones_5_fu_2670_p3 <= 
        p_41_i_i_5_fu_2665_p2 when (carry_54_5_reg_3999(0) = '1') else 
        Range1_all_ones_5_fu_2642_p2;
    deleted_ones_6_fu_2767_p3 <= 
        p_41_i_i_6_fu_2762_p2 when (carry_54_6_reg_4036(0) = '1') else 
        Range1_all_ones_6_fu_2739_p2;
    deleted_ones_7_fu_2864_p3 <= 
        p_41_i_i_7_fu_2859_p2 when (carry_54_7_reg_4073(0) = '1') else 
        Range1_all_ones_7_fu_2836_p2;
    deleted_ones_fu_2185_p3 <= 
        p_41_i_i_fu_2180_p2 when (carry_s_reg_3814(0) = '1') else 
        Range1_all_ones_fu_2157_p2;
    deleted_zeros_1_fu_2264_p3 <= 
        Range1_all_ones_1_fu_2254_p2 when (carry_54_1_reg_3851(0) = '1') else 
        Range1_all_zeros_1_fu_2259_p2;
    deleted_zeros_2_fu_2361_p3 <= 
        Range1_all_ones_2_fu_2351_p2 when (carry_54_2_reg_3888(0) = '1') else 
        Range1_all_zeros_2_fu_2356_p2;
    deleted_zeros_3_fu_2458_p3 <= 
        Range1_all_ones_3_fu_2448_p2 when (carry_54_3_reg_3925(0) = '1') else 
        Range1_all_zeros_3_fu_2453_p2;
    deleted_zeros_4_fu_2555_p3 <= 
        Range1_all_ones_4_fu_2545_p2 when (carry_54_4_reg_3962(0) = '1') else 
        Range1_all_zeros_4_fu_2550_p2;
    deleted_zeros_5_fu_2652_p3 <= 
        Range1_all_ones_5_fu_2642_p2 when (carry_54_5_reg_3999(0) = '1') else 
        Range1_all_zeros_5_fu_2647_p2;
    deleted_zeros_6_fu_2749_p3 <= 
        Range1_all_ones_6_fu_2739_p2 when (carry_54_6_reg_4036(0) = '1') else 
        Range1_all_zeros_6_fu_2744_p2;
    deleted_zeros_7_fu_2846_p3 <= 
        Range1_all_ones_7_fu_2836_p2 when (carry_54_7_reg_4073(0) = '1') else 
        Range1_all_zeros_7_fu_2841_p2;
    deleted_zeros_fu_2167_p3 <= 
        Range1_all_ones_fu_2157_p2 when (carry_s_reg_3814(0) = '1') else 
        Range1_all_zeros_fu_2162_p2;
    exitcond45_fu_1072_p2 <= "1" when (k_phi_fu_728_p4 = ap_const_lv3_4) else "0";
    exitcond46_fu_1174_p2 <= "1" when (h_reg_736 = ap_const_lv3_4) else "0";
    exitcond47_fu_1194_p2 <= "1" when (w_reg_747 = ap_const_lv3_4) else "0";
    exitcond48_fu_3226_p2 <= "1" when (k_1_phi_fu_828_p4 = ap_const_lv3_4) else "0";
    exitcond49_fu_1245_p2 <= "1" when (ci_reg_758 = ap_const_lv8_C0) else "0";
    exitcond50_fu_1257_p2 <= "1" when (co_reg_769 = ap_const_lv10_200) else "0";
    exitcond69_mid_fu_1078_p2 <= (exitcond45_fu_1072_p2 and not_exitcond_flatten_3_fu_1067_p2);
    exitcond_flatten14_fu_996_p2 <= "1" when (indvar_flatten10_reg_678 = ap_const_lv14_2000) else "0";
    exitcond_flatten15_fu_1008_p2 <= "1" when (indvar_flatten6_reg_701 = ap_const_lv6_10) else "0";
    exitcond_flatten16_fu_3166_p2 <= "1" when (indvar_flatten11_phi_fu_784_p4 = ap_const_lv14_2000) else "0";
    exitcond_flatten17_fu_3184_p2 <= "1" when (indvar_flatten12_phi_fu_806_p4 = ap_const_lv6_10) else "0";
    exitcond_flatten_fu_835_p2 <= "1" when (indvar_flatten_reg_645 = ap_const_lv17_18000) else "0";
    exitcond_fu_853_p2 <= "1" when (j_reg_667 = ap_const_lv8_C0) else "0";
    exitcond_mid_fu_3232_p2 <= (exitcond48_fu_3226_p2 and not_exitcond_flatten_fu_3220_p2);
    h_33_fu_1180_p2 <= std_logic_vector(unsigned(h_reg_736) + unsigned(ap_const_lv3_1));
    h_cast_cast1_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_736),10));
    h_cast_cast_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_736),11));
    i_1_cast_mid2_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_cast_mid2_v_fu_1041_p3),32));
    i_1_cast_mid2_v_fu_1041_p3 <= 
        i_4_fu_1028_p2 when (exitcond_flatten15_reg_3429(0) = '1') else 
        i_1_phi_fu_693_p4;

    i_1_phi_fu_693_p4_assign_proc : process(i_1_reg_689, ap_reg_pp1_iter1_exitcond_flatten14_reg_3420, i_1_cast_mid2_v_reg_3442, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            i_1_phi_fu_693_p4 <= i_1_cast_mid2_v_reg_3442;
        else 
            i_1_phi_fu_693_p4 <= i_1_reg_689;
        end if; 
    end process;


    i_2_phi_fu_795_p4_assign_proc : process(i_2_reg_791, exitcond_flatten16_reg_4286, ap_CS_fsm_pp2_stage0, arrayNo8_mid2_v_reg_4301, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            i_2_phi_fu_795_p4 <= arrayNo8_mid2_v_reg_4301;
        else 
            i_2_phi_fu_795_p4 <= i_2_reg_791;
        end if; 
    end process;

    i_3_fu_847_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_phi_fu_660_p4));
    i_4_fu_1028_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_1_phi_fu_693_p4));
    i_5_fu_3178_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(i_2_phi_fu_795_p4));
    i_cast_mid2_v_fu_867_p3 <= 
        i_3_fu_847_p2 when (exitcond_fu_853_p2(0) = '1') else 
        i_phi_fu_660_p4;

    i_phi_fu_660_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, exitcond_flatten_reg_3365, i_reg_656, ap_CS_fsm_pp0_stage0, i_cast_mid2_v_reg_3380, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_reg_3365) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_660_p4 <= i_cast_mid2_v_reg_3380;
        else 
            i_phi_fu_660_p4 <= i_reg_656;
        end if; 
    end process;


    indvar_flatten11_phi_fu_784_p4_assign_proc : process(indvar_flatten11_reg_780, exitcond_flatten16_reg_4286, ap_CS_fsm_pp2_stage0, indvar_flatten_next2_reg_4290, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten11_phi_fu_784_p4 <= indvar_flatten_next2_reg_4290;
        else 
            indvar_flatten11_phi_fu_784_p4 <= indvar_flatten11_reg_780;
        end if; 
    end process;


    indvar_flatten12_phi_fu_806_p4_assign_proc : process(indvar_flatten12_reg_802, exitcond_flatten16_reg_4286, ap_CS_fsm_pp2_stage0, indvar_flatten_next1_7_reg_4327, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten12_phi_fu_806_p4 <= indvar_flatten_next1_7_reg_4327;
        else 
            indvar_flatten12_phi_fu_806_p4 <= indvar_flatten12_reg_802;
        end if; 
    end process;

    indvar_flatten28_op_fu_3252_p2 <= std_logic_vector(unsigned(indvar_flatten12_phi_fu_806_p4) + unsigned(ap_const_lv6_1));
    indvar_flatten6_op_fu_1014_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_701) + unsigned(ap_const_lv6_1));
    indvar_flatten_next1_7_fu_3258_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten17_fu_3184_p2(0) = '1') else 
        indvar_flatten28_op_fu_3252_p2;
    indvar_flatten_next1_fu_1002_p2 <= std_logic_vector(unsigned(indvar_flatten10_reg_678) + unsigned(ap_const_lv14_1));
    indvar_flatten_next2_fu_3172_p2 <= std_logic_vector(unsigned(indvar_flatten11_phi_fu_784_p4) + unsigned(ap_const_lv14_1));
    indvar_flatten_next7_fu_1020_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten15_fu_1008_p2(0) = '1') else 
        indvar_flatten6_op_fu_1014_p2;
    indvar_flatten_next_fu_841_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_645) + unsigned(ap_const_lv17_1));
    input_V_address0 <= input_V_addr_reg_3519;

    input_V_ce0_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_1_cast_mid2_cast_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_cast_mid2_reg_3461),10));
    j_1_cast_mid2_fu_1103_p3 <= 
        j_4_fu_1084_p2 when (exitcond69_mid_fu_1078_p2(0) = '1') else 
        j_1_mid_fu_1034_p3;
    j_1_mid_fu_1034_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten15_reg_3429(0) = '1') else 
        j_1_phi_fu_716_p4;

    j_1_phi_fu_716_p4_assign_proc : process(j_1_reg_712, ap_reg_pp1_iter1_exitcond_flatten14_reg_3420, j_1_cast_mid2_reg_3461, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            j_1_phi_fu_716_p4 <= j_1_cast_mid2_reg_3461;
        else 
            j_1_phi_fu_716_p4 <= j_1_reg_712;
        end if; 
    end process;

    j_2_cast_mid2_cast_fu_3293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_2_cast_mid2_reg_4332),10));
    j_2_cast_mid2_fu_3271_p3 <= 
        j_5_fu_3266_p2 when (exitcond_mid_reg_4316(0) = '1') else 
        j_2_mid_reg_4295;
    j_2_mid_fu_3190_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten17_fu_3184_p2(0) = '1') else 
        j_2_phi_fu_817_p4;

    j_2_phi_fu_817_p4_assign_proc : process(j_2_reg_813, exitcond_flatten16_reg_4286, ap_CS_fsm_pp2_stage0, j_2_cast_mid2_reg_4332, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            j_2_phi_fu_817_p4 <= j_2_cast_mid2_reg_4332;
        else 
            j_2_phi_fu_817_p4 <= j_2_reg_813;
        end if; 
    end process;

    j_3_fu_889_p2 <= std_logic_vector(unsigned(j_mid2_fu_859_p3) + unsigned(ap_const_lv8_1));
    j_4_fu_1084_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_1_mid_fu_1034_p3));
    j_5_fu_3266_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_2_mid_reg_4295));
    j_cast_cast1_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter9_j_mid2_reg_3374),15));
    j_cast_cast_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_3374),20));
    j_mid2_fu_859_p3 <= 
        ap_const_lv8_0 when (exitcond_fu_853_p2(0) = '1') else 
        j_reg_667;
    k_1_cast_cast_fu_3310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_mid2_reg_4321),12));
    k_1_mid2_fu_3244_p3 <= 
        ap_const_lv3_0 when (tmp_604_fu_3238_p2(0) = '1') else 
        k_1_phi_fu_828_p4;

    k_1_phi_fu_828_p4_assign_proc : process(k_1_reg_824, exitcond_flatten16_reg_4286, ap_CS_fsm_pp2_stage0, k_3_reg_4338, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond_flatten16_reg_4286) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_block_pp2_stage0_flag00000000 = ap_const_boolean_0))) then 
            k_1_phi_fu_828_p4 <= k_3_reg_4338;
        else 
            k_1_phi_fu_828_p4 <= k_1_reg_824;
        end if; 
    end process;

    k_2_fu_1111_p2 <= std_logic_vector(unsigned(k_mid2_fu_1095_p3) + unsigned(ap_const_lv3_1));
    k_3_fu_3277_p2 <= std_logic_vector(unsigned(k_1_mid2_reg_4321) + unsigned(ap_const_lv3_1));
    k_cast_cast_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_reg_3456),12));
    k_mid2_fu_1095_p3 <= 
        ap_const_lv3_0 when (tmp_600_fu_1090_p2(0) = '1') else 
        k_phi_fu_728_p4;

    k_phi_fu_728_p4_assign_proc : process(k_reg_724, ap_reg_pp1_iter1_exitcond_flatten14_reg_3420, k_2_reg_3472, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten14_reg_3420) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            k_phi_fu_728_p4 <= k_2_reg_3472;
        else 
            k_phi_fu_728_p4 <= k_reg_724;
        end if; 
    end process;

    m_axi_weight_V_ARADDR <= weight_V_addr_reg_3402;
    m_axi_weight_V_ARBURST <= ap_const_lv2_0;
    m_axi_weight_V_ARCACHE <= ap_const_lv4_0;
    m_axi_weight_V_ARID <= ap_const_lv1_0;
    m_axi_weight_V_ARLEN <= ap_const_lv32_1;
    m_axi_weight_V_ARLOCK <= ap_const_lv2_0;
    m_axi_weight_V_ARPROT <= ap_const_lv3_0;
    m_axi_weight_V_ARQOS <= ap_const_lv4_0;
    m_axi_weight_V_ARREGION <= ap_const_lv4_0;
    m_axi_weight_V_ARSIZE <= ap_const_lv3_0;
    m_axi_weight_V_ARUSER <= ap_const_lv1_0;

    m_axi_weight_V_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond_flatten_reg_3365, ap_reg_ioackin_m_axi_weight_V_ARREADY, ap_block_pp0_stage0_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3365) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY))) then 
            m_axi_weight_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_weight_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_AWADDR <= ap_const_lv32_0;
    m_axi_weight_V_AWBURST <= ap_const_lv2_0;
    m_axi_weight_V_AWCACHE <= ap_const_lv4_0;
    m_axi_weight_V_AWID <= ap_const_lv1_0;
    m_axi_weight_V_AWLEN <= ap_const_lv32_0;
    m_axi_weight_V_AWLOCK <= ap_const_lv2_0;
    m_axi_weight_V_AWPROT <= ap_const_lv3_0;
    m_axi_weight_V_AWQOS <= ap_const_lv4_0;
    m_axi_weight_V_AWREGION <= ap_const_lv4_0;
    m_axi_weight_V_AWSIZE <= ap_const_lv3_0;
    m_axi_weight_V_AWUSER <= ap_const_lv1_0;
    m_axi_weight_V_AWVALID <= ap_const_logic_0;
    m_axi_weight_V_BREADY <= ap_const_logic_0;

    m_axi_weight_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_3365, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            m_axi_weight_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_weight_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_WDATA <= ap_const_lv8_0;
    m_axi_weight_V_WID <= ap_const_lv1_0;
    m_axi_weight_V_WLAST <= ap_const_logic_0;
    m_axi_weight_V_WSTRB <= ap_const_lv1_0;
    m_axi_weight_V_WUSER <= ap_const_lv1_0;
    m_axi_weight_V_WVALID <= ap_const_logic_0;
    newIndex3_fu_1263_p4 <= co_reg_769(9 downto 3);
    not_exitcond_flatten_3_fu_1067_p2 <= (exitcond_flatten15_reg_3429 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_3220_p2 <= (exitcond_flatten17_fu_3184_p2 xor ap_const_lv1_1);
    overflow_1_fu_2310_p2 <= (brmerge_i_i_1_fu_2300_p2 and tmp_583_1_fu_2305_p2);
    overflow_2_fu_2407_p2 <= (brmerge_i_i_2_fu_2397_p2 and tmp_583_2_fu_2402_p2);
    overflow_3_fu_2504_p2 <= (brmerge_i_i_3_fu_2494_p2 and tmp_583_3_fu_2499_p2);
    overflow_4_fu_2601_p2 <= (brmerge_i_i_4_fu_2591_p2 and tmp_583_4_fu_2596_p2);
    overflow_5_fu_2698_p2 <= (brmerge_i_i_5_fu_2688_p2 and tmp_583_5_fu_2693_p2);
    overflow_6_fu_2795_p2 <= (brmerge_i_i_6_fu_2785_p2 and tmp_583_6_fu_2790_p2);
    overflow_7_fu_2892_p2 <= (brmerge_i_i_7_fu_2882_p2 and tmp_583_7_fu_2887_p2);
    overflow_fu_2213_p2 <= (brmerge_i_i_fu_2203_p2 and tmp_246_fu_2208_p2);
    p_38_i_i_1_fu_2289_p2 <= (carry_54_1_reg_3851 and Range1_all_ones_1_fu_2254_p2);
    p_38_i_i_2_fu_2386_p2 <= (carry_54_2_reg_3888 and Range1_all_ones_2_fu_2351_p2);
    p_38_i_i_3_fu_2483_p2 <= (carry_54_3_reg_3925 and Range1_all_ones_3_fu_2448_p2);
    p_38_i_i_4_fu_2580_p2 <= (carry_54_4_reg_3962 and Range1_all_ones_4_fu_2545_p2);
    p_38_i_i_5_fu_2677_p2 <= (carry_54_5_reg_3999 and Range1_all_ones_5_fu_2642_p2);
    p_38_i_i_6_fu_2774_p2 <= (carry_54_6_reg_4036 and Range1_all_ones_6_fu_2739_p2);
    p_38_i_i_7_fu_2871_p2 <= (carry_54_7_reg_4073 and Range1_all_ones_7_fu_2836_p2);
    p_38_i_i_fu_2192_p2 <= (carry_s_reg_3814 and Range1_all_ones_fu_2157_p2);
    p_41_i_i_1_fu_2277_p2 <= (tmp_2103_reg_3832 and tmp_581_1_fu_2271_p2);
    p_41_i_i_2_fu_2374_p2 <= (tmp_2108_reg_3869 and tmp_581_2_fu_2368_p2);
    p_41_i_i_3_fu_2471_p2 <= (tmp_2113_reg_3906 and tmp_581_3_fu_2465_p2);
    p_41_i_i_4_fu_2568_p2 <= (tmp_2118_reg_3943 and tmp_581_4_fu_2562_p2);
    p_41_i_i_5_fu_2665_p2 <= (tmp_2123_reg_3980 and tmp_581_5_fu_2659_p2);
    p_41_i_i_6_fu_2762_p2 <= (tmp_2128_reg_4017 and tmp_581_6_fu_2756_p2);
    p_41_i_i_7_fu_2859_p2 <= (tmp_2133_reg_4054 and tmp_581_7_fu_2853_p2);
    p_41_i_i_fu_2180_p2 <= (tmp_2098_reg_3795 and tmp_245_fu_2174_p2);
    p_Val2_180_1_fu_1386_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_1_fu_1386_p1 <= weight_temp_1_0_0_3_reg_3635;
    p_Val2_180_1_fu_1386_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_1_fu_1386_p0) * signed(p_Val2_180_1_fu_1386_p1))), 16));
    p_Val2_180_2_fu_1403_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_2_fu_1403_p1 <= weight_temp_2_0_0_3_reg_3640;
    p_Val2_180_2_fu_1403_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_2_fu_1403_p0) * signed(p_Val2_180_2_fu_1403_p1))), 16));
    p_Val2_180_3_fu_1420_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_3_fu_1420_p1 <= weight_temp_3_0_0_3_reg_3645;
    p_Val2_180_3_fu_1420_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_3_fu_1420_p0) * signed(p_Val2_180_3_fu_1420_p1))), 16));
    p_Val2_180_4_fu_1437_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_4_fu_1437_p1 <= weight_temp_4_0_0_3_reg_3650;
    p_Val2_180_4_fu_1437_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_4_fu_1437_p0) * signed(p_Val2_180_4_fu_1437_p1))), 16));
    p_Val2_180_5_fu_1454_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_5_fu_1454_p1 <= weight_temp_5_0_0_3_reg_3655;
    p_Val2_180_5_fu_1454_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_5_fu_1454_p0) * signed(p_Val2_180_5_fu_1454_p1))), 16));
    p_Val2_180_6_fu_1471_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_6_fu_1471_p1 <= weight_temp_6_0_0_3_reg_3660;
    p_Val2_180_6_fu_1471_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_6_fu_1471_p0) * signed(p_Val2_180_6_fu_1471_p1))), 16));
    p_Val2_180_7_fu_1488_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_180_7_fu_1488_p1 <= weight_temp_7_0_0_3_reg_3665;
    p_Val2_180_7_fu_1488_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_180_7_fu_1488_p0) * signed(p_Val2_180_7_fu_1488_p1))), 16));
    p_Val2_181_1_fu_1594_p2 <= std_logic_vector(unsigned(p_Val2_180_1_reg_3685) + unsigned(tmp_570_1_cast_fu_1590_p1));
    p_Val2_181_2_fu_1675_p2 <= std_logic_vector(unsigned(p_Val2_180_2_reg_3700) + unsigned(tmp_570_2_cast_fu_1671_p1));
    p_Val2_181_3_fu_1756_p2 <= std_logic_vector(unsigned(p_Val2_180_3_reg_3715) + unsigned(tmp_570_3_cast_fu_1752_p1));
    p_Val2_181_4_fu_1837_p2 <= std_logic_vector(unsigned(p_Val2_180_4_reg_3730) + unsigned(tmp_570_4_cast_fu_1833_p1));
    p_Val2_181_5_fu_1918_p2 <= std_logic_vector(unsigned(p_Val2_180_5_reg_3745) + unsigned(tmp_570_5_cast_fu_1914_p1));
    p_Val2_181_6_fu_1999_p2 <= std_logic_vector(unsigned(p_Val2_180_6_reg_3760) + unsigned(tmp_570_6_cast_fu_1995_p1));
    p_Val2_181_7_fu_2080_p2 <= std_logic_vector(unsigned(p_Val2_180_7_reg_3775) + unsigned(tmp_570_7_cast_fu_2076_p1));
    p_Val2_182_1_fu_1607_p4 <= p_Val2_181_1_fu_1594_p2(13 downto 6);
    p_Val2_182_2_fu_1688_p4 <= p_Val2_181_2_fu_1675_p2(13 downto 6);
    p_Val2_182_3_fu_1769_p4 <= p_Val2_181_3_fu_1756_p2(13 downto 6);
    p_Val2_182_4_fu_1850_p4 <= p_Val2_181_4_fu_1837_p2(13 downto 6);
    p_Val2_182_5_fu_1931_p4 <= p_Val2_181_5_fu_1918_p2(13 downto 6);
    p_Val2_182_6_fu_2012_p4 <= p_Val2_181_6_fu_1999_p2(13 downto 6);
    p_Val2_182_7_fu_2093_p4 <= p_Val2_181_7_fu_2080_p2(13 downto 6);
    p_Val2_183_1_486_fu_2971_p3 <= 
        ap_const_lv8_80 when (underflow_1_reg_4126(0) = '1') else 
        p_Val2_183_1_reg_3839;
    p_Val2_183_1_fu_1628_p2 <= std_logic_vector(unsigned(tmp_574_1_fu_1617_p1) + unsigned(p_Val2_182_1_fu_1607_p4));
    p_Val2_183_2_487_fu_3001_p3 <= 
        ap_const_lv8_80 when (underflow_2_reg_4151(0) = '1') else 
        p_Val2_183_2_reg_3876;
    p_Val2_183_2_fu_1709_p2 <= std_logic_vector(unsigned(tmp_574_2_fu_1698_p1) + unsigned(p_Val2_182_2_fu_1688_p4));
    p_Val2_183_3_488_fu_3031_p3 <= 
        ap_const_lv8_80 when (underflow_3_reg_4176(0) = '1') else 
        p_Val2_183_3_reg_3913;
    p_Val2_183_3_fu_1790_p2 <= std_logic_vector(unsigned(tmp_574_3_fu_1779_p1) + unsigned(p_Val2_182_3_fu_1769_p4));
    p_Val2_183_4_489_fu_3061_p3 <= 
        ap_const_lv8_80 when (underflow_4_reg_4201(0) = '1') else 
        p_Val2_183_4_reg_3950;
    p_Val2_183_4_fu_1871_p2 <= std_logic_vector(unsigned(tmp_574_4_fu_1860_p1) + unsigned(p_Val2_182_4_fu_1850_p4));
    p_Val2_183_5_490_fu_3091_p3 <= 
        ap_const_lv8_80 when (underflow_5_reg_4226(0) = '1') else 
        p_Val2_183_5_reg_3987;
    p_Val2_183_5_fu_1952_p2 <= std_logic_vector(unsigned(tmp_574_5_fu_1941_p1) + unsigned(p_Val2_182_5_fu_1931_p4));
    p_Val2_183_6_491_fu_3121_p3 <= 
        ap_const_lv8_80 when (underflow_6_reg_4251(0) = '1') else 
        p_Val2_183_6_reg_4024;
    p_Val2_183_6_fu_2033_p2 <= std_logic_vector(unsigned(tmp_574_6_fu_2022_p1) + unsigned(p_Val2_182_6_fu_2012_p4));
    p_Val2_183_7_492_fu_3151_p3 <= 
        ap_const_lv8_80 when (underflow_7_reg_4276(0) = '1') else 
        p_Val2_183_7_reg_4061;
    p_Val2_183_7_fu_2114_p2 <= std_logic_vector(unsigned(tmp_574_7_fu_2103_p1) + unsigned(p_Val2_182_7_fu_2093_p4));
    p_Val2_183_mux_1_fu_2965_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_1_reg_4131(0) = '1') else 
        p_Val2_183_1_reg_3839;
    p_Val2_183_mux_2_fu_2995_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_2_reg_4156(0) = '1') else 
        p_Val2_183_2_reg_3876;
    p_Val2_183_mux_3_fu_3025_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_3_reg_4181(0) = '1') else 
        p_Val2_183_3_reg_3913;
    p_Val2_183_mux_4_fu_3055_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_4_reg_4206(0) = '1') else 
        p_Val2_183_4_reg_3950;
    p_Val2_183_mux_5_fu_3085_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_5_reg_4231(0) = '1') else 
        p_Val2_183_5_reg_3987;
    p_Val2_183_mux_6_fu_3115_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_6_reg_4256(0) = '1') else 
        p_Val2_183_6_reg_4024;
    p_Val2_183_mux_7_fu_3145_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_7_reg_4281(0) = '1') else 
        p_Val2_183_7_reg_4061;
    p_Val2_183_mux_fu_2935_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_reg_4106(0) = '1') else 
        p_Val2_75_reg_3802;
    p_Val2_73_fu_1513_p2 <= std_logic_vector(unsigned(p_Val2_s_reg_3670) + unsigned(tmp_360_cast_fu_1509_p1));
    p_Val2_74_fu_1526_p4 <= p_Val2_73_fu_1513_p2(13 downto 6);
    p_Val2_75_fu_1547_p2 <= std_logic_vector(unsigned(tmp_242_fu_1536_p1) + unsigned(p_Val2_74_fu_1526_p4));
    p_Val2_s_485_fu_2941_p3 <= 
        ap_const_lv8_80 when (underflow_reg_4101(0) = '1') else 
        p_Val2_75_reg_3802;
    p_Val2_s_fu_1369_p0 <= OP2_V_fu_1366_p1(8 - 1 downto 0);
    p_Val2_s_fu_1369_p1 <= weight_temp_0_0_0_4_reg_3625;
    p_Val2_s_fu_1369_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_fu_1369_p0) * signed(p_Val2_s_fu_1369_p1))), 16));
    p_not_i_i_1_fu_2294_p2 <= (deleted_zeros_1_fu_2264_p3 xor ap_const_lv1_1);
    p_not_i_i_2_fu_2391_p2 <= (deleted_zeros_2_fu_2361_p3 xor ap_const_lv1_1);
    p_not_i_i_3_fu_2488_p2 <= (deleted_zeros_3_fu_2458_p3 xor ap_const_lv1_1);
    p_not_i_i_4_fu_2585_p2 <= (deleted_zeros_4_fu_2555_p3 xor ap_const_lv1_1);
    p_not_i_i_5_fu_2682_p2 <= (deleted_zeros_5_fu_2652_p3 xor ap_const_lv1_1);
    p_not_i_i_6_fu_2779_p2 <= (deleted_zeros_6_fu_2749_p3 xor ap_const_lv1_1);
    p_not_i_i_7_fu_2876_p2 <= (deleted_zeros_7_fu_2846_p3 xor ap_const_lv1_1);
    p_not_i_i_fu_2197_p2 <= (deleted_zeros_fu_2167_p3 xor ap_const_lv1_1);
    p_shl1_cast_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_595_fu_958_p3),15));
    p_shl2_cast_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_591_fu_895_p3),19));
    p_shl3_cast_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_592_fu_906_p3),19));
    p_shl5_cast_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_614_fu_1311_p3),15));
    sum_fu_940_p2 <= std_logic_vector(signed(tmp_712_cast_fu_936_p1) + signed(conv_last_weight_V9));
    this_assign_1_1_fu_2977_p3 <= 
        p_Val2_183_mux_1_fu_2965_p3 when (underflow_not_1_fu_2960_p2(0) = '1') else 
        p_Val2_183_1_486_fu_2971_p3;
    this_assign_1_2_fu_3007_p3 <= 
        p_Val2_183_mux_2_fu_2995_p3 when (underflow_not_2_fu_2990_p2(0) = '1') else 
        p_Val2_183_2_487_fu_3001_p3;
    this_assign_1_3_fu_3037_p3 <= 
        p_Val2_183_mux_3_fu_3025_p3 when (underflow_not_3_fu_3020_p2(0) = '1') else 
        p_Val2_183_3_488_fu_3031_p3;
    this_assign_1_4_fu_3067_p3 <= 
        p_Val2_183_mux_4_fu_3055_p3 when (underflow_not_4_fu_3050_p2(0) = '1') else 
        p_Val2_183_4_489_fu_3061_p3;
    this_assign_1_5_fu_3097_p3 <= 
        p_Val2_183_mux_5_fu_3085_p3 when (underflow_not_5_fu_3080_p2(0) = '1') else 
        p_Val2_183_5_490_fu_3091_p3;
    this_assign_1_6_fu_3127_p3 <= 
        p_Val2_183_mux_6_fu_3115_p3 when (underflow_not_6_fu_3110_p2(0) = '1') else 
        p_Val2_183_6_491_fu_3121_p3;
    this_assign_1_7_fu_3157_p3 <= 
        p_Val2_183_mux_7_fu_3145_p3 when (underflow_not_7_fu_3140_p2(0) = '1') else 
        p_Val2_183_7_492_fu_3151_p3;
    this_assign_1_fu_2947_p3 <= 
        p_Val2_183_mux_fu_2935_p3 when (underflow_not_fu_2930_p2(0) = '1') else 
        p_Val2_s_485_fu_2941_p3;
    tmp10_fu_3046_p2 <= (brmerge40_demorgan_i_327_reg_4196 or tmp_583_4_reg_4191);
    tmp11_demorgan_fu_2709_p2 <= (p_38_i_i_5_fu_2677_p2 or brmerge40_demorgan_i_328_fu_2704_p2);
    tmp11_fu_2715_p2 <= (tmp11_demorgan_fu_2709_p2 xor ap_const_lv1_1);
    tmp12_fu_3076_p2 <= (brmerge40_demorgan_i_328_reg_4221 or tmp_583_5_reg_4216);
    tmp13_demorgan_fu_2806_p2 <= (p_38_i_i_6_fu_2774_p2 or brmerge40_demorgan_i_329_fu_2801_p2);
    tmp13_fu_2812_p2 <= (tmp13_demorgan_fu_2806_p2 xor ap_const_lv1_1);
    tmp14_fu_3106_p2 <= (brmerge40_demorgan_i_329_reg_4246 or tmp_583_6_reg_4241);
    tmp15_demorgan_fu_2903_p2 <= (p_38_i_i_7_fu_2871_p2 or brmerge40_demorgan_i_330_fu_2898_p2);
    tmp15_fu_2909_p2 <= (tmp15_demorgan_fu_2903_p2 xor ap_const_lv1_1);
    tmp16_fu_3136_p2 <= (brmerge40_demorgan_i_330_reg_4271 or tmp_583_7_reg_4266);
    tmp1_demorgan_fu_2224_p2 <= (p_38_i_i_fu_2192_p2 or brmerge40_demorgan_i_fu_2219_p2);
    tmp1_fu_2230_p2 <= (tmp1_demorgan_fu_2224_p2 xor ap_const_lv1_1);
    tmp2_fu_2926_p2 <= (brmerge40_demorgan_i_reg_4096 or tmp_246_reg_4091);
    tmp3_demorgan_fu_2321_p2 <= (p_38_i_i_1_fu_2289_p2 or brmerge40_demorgan_i_331_fu_2316_p2);
    tmp3_fu_2327_p2 <= (tmp3_demorgan_fu_2321_p2 xor ap_const_lv1_1);
    tmp4_fu_2956_p2 <= (brmerge40_demorgan_i_331_reg_4121 or tmp_583_1_reg_4116);
    tmp5_demorgan_fu_2418_p2 <= (p_38_i_i_2_fu_2386_p2 or brmerge40_demorgan_i_325_fu_2413_p2);
    tmp5_fu_2424_p2 <= (tmp5_demorgan_fu_2418_p2 xor ap_const_lv1_1);
    tmp6_fu_2986_p2 <= (brmerge40_demorgan_i_325_reg_4146 or tmp_583_2_reg_4141);
    tmp7_demorgan_fu_2515_p2 <= (p_38_i_i_3_fu_2483_p2 or brmerge40_demorgan_i_326_fu_2510_p2);
    tmp7_fu_2521_p2 <= (tmp7_demorgan_fu_2515_p2 xor ap_const_lv1_1);
    tmp8_fu_3016_p2 <= (brmerge40_demorgan_i_326_reg_4171 or tmp_583_3_reg_4166);
    tmp9_demorgan_fu_2612_p2 <= (p_38_i_i_4_fu_2580_p2 or brmerge40_demorgan_i_327_fu_2607_p2);
    tmp9_fu_2618_p2 <= (tmp9_demorgan_fu_2612_p2 xor ap_const_lv1_1);
    tmp_2095_fu_1053_p1 <= i_1_cast_mid2_v_fu_1041_p3(3 - 1 downto 0);
    tmp_2096_fu_3206_p1 <= arrayNo8_mid2_v_fu_3198_p3(3 - 1 downto 0);
    tmp_2097_fu_3352_p3 <= tmp_241_fu_3331_p10(7 downto 7);
    tmp_2100_fu_1539_p3 <= p_Val2_73_fu_1513_p2(13 downto 13);
    tmp_2101_fu_1553_p3 <= p_Val2_75_fu_1547_p2(7 downto 7);
    tmp_2102_fu_2150_p3 <= p_Val2_73_reg_3790(14 downto 14);
    tmp_2105_fu_1620_p3 <= p_Val2_181_1_fu_1594_p2(13 downto 13);
    tmp_2106_fu_1634_p3 <= p_Val2_183_1_fu_1628_p2(7 downto 7);
    tmp_2107_fu_2247_p3 <= p_Val2_181_1_reg_3827(14 downto 14);
    tmp_2110_fu_1701_p3 <= p_Val2_181_2_fu_1675_p2(13 downto 13);
    tmp_2111_fu_1715_p3 <= p_Val2_183_2_fu_1709_p2(7 downto 7);
    tmp_2112_fu_2344_p3 <= p_Val2_181_2_reg_3864(14 downto 14);
    tmp_2115_fu_1782_p3 <= p_Val2_181_3_fu_1756_p2(13 downto 13);
    tmp_2116_fu_1796_p3 <= p_Val2_183_3_fu_1790_p2(7 downto 7);
    tmp_2117_fu_2441_p3 <= p_Val2_181_3_reg_3901(14 downto 14);
    tmp_2120_fu_1863_p3 <= p_Val2_181_4_fu_1837_p2(13 downto 13);
    tmp_2121_fu_1877_p3 <= p_Val2_183_4_fu_1871_p2(7 downto 7);
    tmp_2122_fu_2538_p3 <= p_Val2_181_4_reg_3938(14 downto 14);
    tmp_2125_fu_1944_p3 <= p_Val2_181_5_fu_1918_p2(13 downto 13);
    tmp_2126_fu_1958_p3 <= p_Val2_183_5_fu_1952_p2(7 downto 7);
    tmp_2127_fu_2635_p3 <= p_Val2_181_5_reg_3975(14 downto 14);
    tmp_2130_fu_2025_p3 <= p_Val2_181_6_fu_1999_p2(13 downto 13);
    tmp_2131_fu_2039_p3 <= p_Val2_183_6_fu_2033_p2(7 downto 7);
    tmp_2132_fu_2732_p3 <= p_Val2_181_6_reg_4012(14 downto 14);
    tmp_2135_fu_2106_p3 <= p_Val2_181_7_fu_2080_p2(13 downto 13);
    tmp_2136_fu_2120_p3 <= p_Val2_183_7_fu_2114_p2(7 downto 7);
    tmp_2137_fu_2829_p3 <= p_Val2_181_7_reg_4049(14 downto 14);
    tmp_242_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2099_reg_3680),8));
    tmp_243_fu_1561_p2 <= (tmp_2101_fu_1553_p3 xor ap_const_lv1_1);
    tmp_245_fu_2174_p2 <= (tmp_2102_fu_2150_p3 xor ap_const_lv1_1);
    tmp_246_fu_2208_p2 <= (tmp_2098_reg_3795 xor ap_const_lv1_1);
        tmp_360_cast_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1502_p3),16));

        tmp_570_1_cast_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_1_fu_1583_p3),16));

    tmp_570_1_fu_1583_p3 <= (conv_last_output_V_1_2_reg_3690 & ap_const_lv6_0);
        tmp_570_2_cast_fu_1671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_2_fu_1664_p3),16));

    tmp_570_2_fu_1664_p3 <= (conv_last_output_V_2_2_reg_3705 & ap_const_lv6_0);
        tmp_570_3_cast_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_3_fu_1745_p3),16));

    tmp_570_3_fu_1745_p3 <= (conv_last_output_V_3_2_reg_3720 & ap_const_lv6_0);
        tmp_570_4_cast_fu_1833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_4_fu_1826_p3),16));

    tmp_570_4_fu_1826_p3 <= (conv_last_output_V_4_2_reg_3735 & ap_const_lv6_0);
        tmp_570_5_cast_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_5_fu_1907_p3),16));

    tmp_570_5_fu_1907_p3 <= (conv_last_output_V_5_2_reg_3750 & ap_const_lv6_0);
        tmp_570_6_cast_fu_1995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_6_fu_1988_p3),16));

    tmp_570_6_fu_1988_p3 <= (conv_last_output_V_6_2_reg_3765 & ap_const_lv6_0);
        tmp_570_7_cast_fu_2076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_570_7_fu_2069_p3),16));

    tmp_570_7_fu_2069_p3 <= (conv_last_output_V_7_2_reg_3780 & ap_const_lv6_0);
    tmp_574_1_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2104_reg_3695),8));
    tmp_574_2_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2109_reg_3710),8));
    tmp_574_3_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2114_reg_3725),8));
    tmp_574_4_fu_1860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2119_reg_3740),8));
    tmp_574_5_fu_1941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2124_reg_3755),8));
    tmp_574_6_fu_2022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2129_reg_3770),8));
    tmp_574_7_fu_2103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2134_reg_3785),8));
    tmp_578_1_fu_1642_p2 <= (tmp_2106_fu_1634_p3 xor ap_const_lv1_1);
    tmp_578_2_fu_1723_p2 <= (tmp_2111_fu_1715_p3 xor ap_const_lv1_1);
    tmp_578_3_fu_1804_p2 <= (tmp_2116_fu_1796_p3 xor ap_const_lv1_1);
    tmp_578_4_fu_1885_p2 <= (tmp_2121_fu_1877_p3 xor ap_const_lv1_1);
    tmp_578_5_fu_1966_p2 <= (tmp_2126_fu_1958_p3 xor ap_const_lv1_1);
    tmp_578_6_fu_2047_p2 <= (tmp_2131_fu_2039_p3 xor ap_const_lv1_1);
    tmp_578_7_fu_2128_p2 <= (tmp_2136_fu_2120_p3 xor ap_const_lv1_1);
    tmp_581_1_fu_2271_p2 <= (tmp_2107_fu_2247_p3 xor ap_const_lv1_1);
    tmp_581_2_fu_2368_p2 <= (tmp_2112_fu_2344_p3 xor ap_const_lv1_1);
    tmp_581_3_fu_2465_p2 <= (tmp_2117_fu_2441_p3 xor ap_const_lv1_1);
    tmp_581_4_fu_2562_p2 <= (tmp_2122_fu_2538_p3 xor ap_const_lv1_1);
    tmp_581_5_fu_2659_p2 <= (tmp_2127_fu_2635_p3 xor ap_const_lv1_1);
    tmp_581_6_fu_2756_p2 <= (tmp_2132_fu_2732_p3 xor ap_const_lv1_1);
    tmp_581_7_fu_2853_p2 <= (tmp_2137_fu_2829_p3 xor ap_const_lv1_1);
    tmp_583_1_fu_2305_p2 <= (tmp_2103_reg_3832 xor ap_const_lv1_1);
    tmp_583_2_fu_2402_p2 <= (tmp_2108_reg_3869 xor ap_const_lv1_1);
    tmp_583_3_fu_2499_p2 <= (tmp_2113_reg_3906 xor ap_const_lv1_1);
    tmp_583_4_fu_2596_p2 <= (tmp_2118_reg_3943 xor ap_const_lv1_1);
    tmp_583_5_fu_2693_p2 <= (tmp_2123_reg_3980 xor ap_const_lv1_1);
    tmp_583_6_fu_2790_p2 <= (tmp_2128_reg_4017 xor ap_const_lv1_1);
    tmp_583_7_fu_2887_p2 <= (tmp_2133_reg_4054 xor ap_const_lv1_1);
    tmp_591_fu_895_p3 <= (i_cast_mid2_v_reg_3380 & ap_const_lv8_0);
    tmp_592_fu_906_p3 <= (i_cast_mid2_v_reg_3380 & ap_const_lv6_0);
    tmp_593_fu_917_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_902_p1) - unsigned(p_shl3_cast_fu_913_p1));
    tmp_594_fu_951_p3 <= (ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391 & ap_const_lv8_0);
    tmp_595_fu_958_p3 <= (ap_reg_pp0_iter9_newIndex_cast_mid2_v_reg_3391 & ap_const_lv6_0);
    tmp_596_fu_969_p2 <= std_logic_vector(unsigned(tmp_594_fu_951_p3) - unsigned(p_shl1_cast_fu_965_p1));
    tmp_597_fu_930_p2 <= std_logic_vector(unsigned(j_cast_cast_fu_927_p1) + unsigned(tmp_708_cast_fu_923_p1));
    tmp_598_fu_978_p2 <= std_logic_vector(unsigned(j_cast_cast1_fu_975_p1) + unsigned(tmp_596_fu_969_p2));
    tmp_599_fu_1117_p3 <= (newIndex2_cast_mid2_s_reg_3451 & ap_const_lv2_0);
    tmp_600_fu_1090_p2 <= (exitcond69_mid_fu_1078_p2 or exitcond_flatten15_reg_3429);
    tmp_601_fu_1131_p2 <= std_logic_vector(unsigned(tmp_715_cast_fu_1124_p1) + unsigned(j_1_cast_mid2_cast_fu_1128_p1));
    tmp_602_fu_1148_p2 <= std_logic_vector(unsigned(tmp_719_cast_fu_1137_p3) + unsigned(k_cast_cast_fu_1145_p1));
    tmp_603_fu_3282_p3 <= (newIndex9_cast_mid2_s_reg_4311 & ap_const_lv2_0);
    tmp_604_fu_3238_p2 <= (exitcond_mid_fu_3232_p2 or exitcond_flatten17_fu_3184_p2);
    tmp_605_fu_3296_p2 <= std_logic_vector(unsigned(tmp_722_cast_fu_3289_p1) + unsigned(j_2_cast_mid2_cast_fu_3293_p1));
    tmp_606_fu_3313_p2 <= std_logic_vector(unsigned(tmp_726_cast_fu_3302_p3) + unsigned(k_1_cast_cast_fu_3310_p1));
    tmp_607_fu_1210_p3 <= (ci_reg_758 & ap_const_lv2_0);
    tmp_608_fu_1222_p2 <= std_logic_vector(unsigned(h_cast_cast_reg_3482) + unsigned(tmp_729_cast_fu_1218_p1));
    tmp_609_fu_1235_p2 <= std_logic_vector(unsigned(w_cast_cast_reg_3501) + unsigned(tmp_732_cast_fu_1227_p3));
    tmp_610_fu_1273_p3 <= (newIndex3_fu_1263_p4 & ap_const_lv2_0);
    tmp_611_fu_1285_p2 <= std_logic_vector(unsigned(tmp_735_cast_fu_1281_p1) + unsigned(h_cast_cast1_reg_3477));
    tmp_612_fu_1298_p2 <= std_logic_vector(unsigned(tmp_738_cast_fu_1290_p3) + unsigned(w_cast_cast1_reg_3496));
    tmp_613_fu_1303_p3 <= (newIndex3_fu_1263_p4 & ap_const_lv8_0);
    tmp_614_fu_1311_p3 <= (newIndex3_fu_1263_p4 & ap_const_lv6_0);
    tmp_615_fu_1323_p2 <= std_logic_vector(unsigned(tmp_613_fu_1303_p3) - unsigned(p_shl5_cast_fu_1319_p1));
    tmp_616_fu_1329_p2 <= std_logic_vector(unsigned(tmp_615_fu_1323_p2) + unsigned(ci_cast_cast_reg_3514));
        tmp_708_cast_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_593_fu_917_p2),20));

        tmp_712_cast_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_597_fu_930_p2),32));

        tmp_713_cast_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_598_fu_978_p2),32));

    tmp_715_cast_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_599_fu_1117_p3),10));
    tmp_719_cast_fu_1137_p3 <= (tmp_601_fu_1131_p2 & ap_const_lv2_0);
    tmp_720_cast_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_602_fu_1148_p2),32));
    tmp_722_cast_fu_3289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_603_fu_3282_p3),10));
    tmp_726_cast_fu_3302_p3 <= (tmp_605_fu_3296_p2 & ap_const_lv2_0);
    tmp_727_cast_fu_3319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_606_fu_3313_p2),32));
    tmp_729_cast_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_607_fu_1210_p3),11));
    tmp_732_cast_fu_1227_p3 <= (tmp_608_fu_1222_p2 & ap_const_lv2_0);
    tmp_733_cast_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_609_fu_1235_p2),32));
    tmp_735_cast_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_610_fu_1273_p3),10));
    tmp_738_cast_fu_1290_p3 <= (tmp_611_fu_1285_p2 & ap_const_lv2_0);
    tmp_739_cast_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_612_reg_3535),32));
        tmp_743_cast_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_616_fu_1329_p2),32));

    tmp_fu_875_p1 <= i_cast_mid2_v_fu_867_p3(3 - 1 downto 0);
    tmp_s_fu_1502_p3 <= (conv_last_output_V_0_2_reg_3675 & ap_const_lv6_0);
    underflow_1_fu_2333_p2 <= (tmp_2103_reg_3832 and tmp3_fu_2327_p2);
    underflow_2_fu_2430_p2 <= (tmp_2108_reg_3869 and tmp5_fu_2424_p2);
    underflow_3_fu_2527_p2 <= (tmp_2113_reg_3906 and tmp7_fu_2521_p2);
    underflow_4_fu_2624_p2 <= (tmp_2118_reg_3943 and tmp9_fu_2618_p2);
    underflow_5_fu_2721_p2 <= (tmp_2123_reg_3980 and tmp11_fu_2715_p2);
    underflow_6_fu_2818_p2 <= (tmp_2128_reg_4017 and tmp13_fu_2812_p2);
    underflow_7_fu_2915_p2 <= (tmp_2133_reg_4054 and tmp15_fu_2909_p2);
    underflow_fu_2236_p2 <= (tmp_2098_reg_3795 and tmp1_fu_2230_p2);
    underflow_not_1_fu_2960_p2 <= (tmp4_fu_2956_p2 or p_38_i_i_1_reg_4111);
    underflow_not_2_fu_2990_p2 <= (tmp6_fu_2986_p2 or p_38_i_i_2_reg_4136);
    underflow_not_3_fu_3020_p2 <= (tmp8_fu_3016_p2 or p_38_i_i_3_reg_4161);
    underflow_not_4_fu_3050_p2 <= (tmp10_fu_3046_p2 or p_38_i_i_4_reg_4186);
    underflow_not_5_fu_3080_p2 <= (tmp12_fu_3076_p2 or p_38_i_i_5_reg_4211);
    underflow_not_6_fu_3110_p2 <= (tmp14_fu_3106_p2 or p_38_i_i_6_reg_4236);
    underflow_not_7_fu_3140_p2 <= (tmp16_fu_3136_p2 or p_38_i_i_7_reg_4261);
    underflow_not_fu_2930_p2 <= (tmp2_fu_2926_p2 or p_38_i_i_reg_4086);
    w_43_fu_1200_p2 <= std_logic_vector(unsigned(w_reg_747) + unsigned(ap_const_lv3_1));
    w_cast_cast1_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_747),12));
    w_cast_cast_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_747),13));

    weight_V_blk_n_AR_assign_proc : process(m_axi_weight_V_ARREADY, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_reg_pp0_iter1_exitcond_flatten_reg_3365)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3365))) then 
            weight_V_blk_n_AR <= m_axi_weight_V_ARREADY;
        else 
            weight_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    weight_V_blk_n_R_assign_proc : process(m_axi_weight_V_RVALID, ap_block_pp0_stage0_flag00000000, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_exitcond_flatten_reg_3365)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_reg_pp0_iter8_exitcond_flatten_reg_3365))) then 
            weight_V_blk_n_R <= m_axi_weight_V_RVALID;
        else 
            weight_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    weight_temp_0_0_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_0_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_0_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_0_0_address0 <= ap_const_lv32_0(14 - 1 downto 0);
        else 
            weight_temp_0_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_0_0_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_0_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_0_0_0_d0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, weight_V_addr_read_reg_3408, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_0_0_0_d0 <= weight_V_addr_read_reg_3408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_0_0_d0 <= ap_const_lv8_0;
        else 
            weight_temp_0_0_0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_temp_0_0_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv3_0 = ap_reg_pp0_iter9_tmp_reg_3387)))) then 
            weight_temp_0_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_1_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_1_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_1_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_1_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_1_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_1))) then 
            weight_temp_1_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_2_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_2_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_2_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_2_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_2_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_2))) then 
            weight_temp_2_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_3_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_3_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_3_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_3_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_3_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_3))) then 
            weight_temp_3_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_4_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_4_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_4_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_4_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_4_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_4_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_4))) then 
            weight_temp_4_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_4_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_5_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_5_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_5_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_5_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_5_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_5_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_5))) then 
            weight_temp_5_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_5_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_6_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_6_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_6_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_6_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_6_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_6_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_6))) then 
            weight_temp_6_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_6_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_0_0_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10, tmp_713_cast_fu_984_p1, tmp_743_cast_fu_1334_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_temp_7_0_0_address0 <= tmp_743_cast_fu_1334_p1(14 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            weight_temp_7_0_0_address0 <= tmp_713_cast_fu_984_p1(14 - 1 downto 0);
        else 
            weight_temp_7_0_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_temp_7_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state21, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10)))) then 
            weight_temp_7_0_0_ce0 <= ap_const_logic_1;
        else 
            weight_temp_7_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_0_0_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter9_tmp_reg_3387, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_reg_pp0_iter9_tmp_reg_3387 = ap_const_lv3_7))) then 
            weight_temp_7_0_0_we0 <= ap_const_logic_1;
        else 
            weight_temp_7_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
