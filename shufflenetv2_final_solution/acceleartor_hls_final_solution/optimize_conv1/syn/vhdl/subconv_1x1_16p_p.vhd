-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subconv_1x1_16p_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_0_V_ce0 : OUT STD_LOGIC;
    weight_0_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_1_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_1_V_ce0 : OUT STD_LOGIC;
    weight_1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_2_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_2_V_ce0 : OUT STD_LOGIC;
    weight_2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_3_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_3_V_ce0 : OUT STD_LOGIC;
    weight_3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_4_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_4_V_ce0 : OUT STD_LOGIC;
    weight_4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_5_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_5_V_ce0 : OUT STD_LOGIC;
    weight_5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_6_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_6_V_ce0 : OUT STD_LOGIC;
    weight_6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_7_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weight_7_V_ce0 : OUT STD_LOGIC;
    weight_7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_7_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_7_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_7_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_7_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_7_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_6_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_6_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_6_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_6_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_6_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_6_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_5_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_5_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_5_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_5_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_5_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_5_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_4_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_4_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_4_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_4_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_4_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_4_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_3_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_3_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_3_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_3_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_2_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_2_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_2_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_2_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_1_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_1_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_1_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_1_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_ce0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_we0 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ShuffleConvs_1_Downs_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ShuffleConvs_1_Downs_ce1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_we1 : OUT STD_LOGIC;
    ShuffleConvs_1_Downs_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of subconv_1x1_16p_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv14_3000 : STD_LOGIC_VECTOR (13 downto 0) := "11000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv10_100 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten4_reg_549 : STD_LOGIC_VECTOR (13 downto 0);
    signal co_reg_560 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_572 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_reg_583 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_reg_595 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten5_reg_652 : STD_LOGIC_VECTOR (13 downto 0);
    signal co4_reg_663 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten6_reg_675 : STD_LOGIC_VECTOR (9 downto 0);
    signal h5_reg_686 : STD_LOGIC_VECTOR (4 downto 0);
    signal w6_reg_698 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_3213 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_3213 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_715_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten8_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_3222 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond32_mid_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond32_mid_reg_3228 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_mid2_fu_751_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_mid2_reg_3233 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_w_mid2_reg_3233 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_fu_765_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_mid2_v_fu_786_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_reg_3244 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_414_fu_798_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_414_reg_3249 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_184_mid2_fu_848_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_184_mid2_reg_3253 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_303_fu_859_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_303_reg_3258 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_19_fu_865_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond12_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_cast4_fu_921_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast4_reg_3278 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_fu_925_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_reg_3283 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_185_cast1_fu_935_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_185_cast1_reg_3291 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond13_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_185_cast_fu_939_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_185_cast_reg_3296 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_8_fu_943_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ci_5_fu_955_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ci_5_reg_3309 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_188_cast_fu_961_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_188_cast_reg_3314 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond14_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_V_addr_reg_3319 : STD_LOGIC_VECTOR (13 downto 0);
    signal w_20_fu_1036_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond15_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_327_fu_1158_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_327_reg_3372 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_21_7_fu_1163_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal co_21_7_reg_3377 : STD_LOGIC_VECTOR (5 downto 0);
    signal ShuffleConvs_1_Downs_31_reg_3382 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ShuffleConvs_1_Downs_32_reg_3387 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_33_reg_3392 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_34_reg_3397 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_35_reg_3402 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_36_reg_3407 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_37_reg_3412 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_38_reg_3417 : STD_LOGIC_VECTOR (10 downto 0);
    signal weight_0_V_load_reg_3422 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_V_load_reg_3427 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_1_V_load_reg_3432 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_2_V_load_reg_3437 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_3_V_load_reg_3442 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_4_V_load_reg_3447 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_5_V_load_reg_3452 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_6_V_load_reg_3457 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_7_V_load_reg_3462 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1186_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_3467 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ShuffleConvs_1_Downs_39_reg_3472 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_422_reg_3477 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_1_fu_1203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_1_reg_3482 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_40_reg_3487 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_427_reg_3492 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_2_fu_1220_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_2_reg_3497 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_41_reg_3502 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_432_reg_3507 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_3_fu_1237_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_3_reg_3512 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_42_reg_3517 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_437_reg_3522 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_4_fu_1254_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_4_reg_3527 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_43_reg_3532 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_442_reg_3537 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_5_fu_1271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_5_reg_3542 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_44_reg_3547 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_447_reg_3552 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_6_fu_1288_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_6_reg_3557 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_45_reg_3562 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_452_reg_3567 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_7_fu_1305_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_7_reg_3572 : STD_LOGIC_VECTOR (15 downto 0);
    signal ShuffleConvs_1_Downs_46_reg_3577 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_457_reg_3582 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_1330_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_3587 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_421_reg_3592 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_1364_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_3599 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_424_fu_1370_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_424_reg_3605 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_reg_3611 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_reg_3618 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_1_fu_1411_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_1_reg_3624 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_426_reg_3629 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_1_fu_1445_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_1_reg_3636 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_429_fu_1451_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_429_reg_3642 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_1_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_1_reg_3648 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_198_reg_3655 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_2_fu_1492_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_2_reg_3661 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_431_reg_3666 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_2_fu_1526_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_2_reg_3673 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_434_fu_1532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_434_reg_3679 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_2_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_2_reg_3685 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_reg_3692 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_3_fu_1573_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_3_reg_3698 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_436_reg_3703 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_3_fu_1607_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_3_reg_3710 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_439_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_439_reg_3716 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_3_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_3_reg_3722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_reg_3729 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_4_fu_1654_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_4_reg_3735 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_441_reg_3740 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_4_fu_1688_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_4_reg_3747 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_444_fu_1694_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_444_reg_3753 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_4_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_4_reg_3759 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_201_reg_3766 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_5_fu_1735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_5_reg_3772 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_446_reg_3777 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_5_fu_1769_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_5_reg_3784 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_449_fu_1775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_449_reg_3790 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_5_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_5_reg_3796 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_202_reg_3803 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_6_fu_1816_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_6_reg_3809 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_451_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_6_fu_1850_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_6_reg_3821 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_454_fu_1856_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_454_reg_3827 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_6_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_6_reg_3833 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_reg_3840 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_66_7_fu_1897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_66_7_reg_3846 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_456_reg_3851 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_7_fu_1931_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_7_reg_3858 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_459_fu_1937_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_459_reg_3864 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_7_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_11_7_reg_3870 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_204_reg_3877 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_38_i_i_fu_2009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_reg_3883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_195_fu_2025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_195_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_3893 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_2053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_3898 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_2058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_reg_3903 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_fu_2106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_reg_3908 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_1_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_1_reg_3913 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_23_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_23_reg_3918 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_reg_3923 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_fu_2155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_reg_3928 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_reg_3933 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_2_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_2_reg_3938 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_17_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_17_reg_3943 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_2247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_3948 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_fu_2252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_reg_3953 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_reg_3958 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_3_fu_2316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_3_reg_3963 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_18_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_18_reg_3968 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_2344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_3973 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_fu_2349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_reg_3978 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_reg_3983 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_4_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_4_reg_3988 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_19_fu_2424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_19_reg_3993 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_2441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_reg_3998 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_fu_2446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_reg_4003 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_reg_4008 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_5_fu_2510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_5_reg_4013 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_20_fu_2521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_20_reg_4018 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_2538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_reg_4023 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_fu_2543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_reg_4028 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_reg_4033 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_6_fu_2607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_6_reg_4038 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_21_fu_2618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_21_reg_4043 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_reg_4048 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_fu_2640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_reg_4053 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_fu_2688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_reg_4058 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_7_fu_2704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_306_7_reg_4063 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_22_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_22_reg_4068 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_reg_4073 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_fu_2737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_reg_4078 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_fu_2983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_4083 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state15_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp1_iter1_exitcond_flatten9_reg_4083 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_4_fu_2989_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten10_fu_2995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten10_reg_4092 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_fu_3013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_4098 : STD_LOGIC_VECTOR (0 downto 0);
    signal w6_mid2_fu_3025_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal w6_mid2_reg_4103 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp1_iter1_w6_mid2_reg_4103 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next1_3_fu_3039_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal arrayNo_mid2_v_fu_3060_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal arrayNo_mid2_v_reg_4114 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_416_fu_3067_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_416_reg_4119 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp1_iter2_tmp_416_reg_4119 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_187_mid2_fu_3117_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_187_mid2_reg_4124 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_310_fu_3128_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_310_reg_4129 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_21_fu_3134_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ShuffleConvs_1_Downs_47_reg_4140 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_48_reg_4146 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_49_reg_4152 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_50_reg_4158 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_51_reg_4164 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_52_reg_4170 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_53_reg_4176 : STD_LOGIC_VECTOR (10 downto 0);
    signal ShuffleConvs_1_Downs_54_reg_4182 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal co_phi_fu_564_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal h_phi_fu_587_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_phi_fu_599_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal h1_reg_606 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal w2_reg_618 : STD_LOGIC_VECTOR (4 downto 0);
    signal ci_reg_630 : STD_LOGIC_VECTOR (5 downto 0);
    signal co3_reg_641 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal co4_phi_fu_667_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal h5_phi_fu_690_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal w6_phi_fu_702_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_351_cast_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_368_cast_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_372_cast_fu_1097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_380_cast_fu_1169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_360_cast_fu_3172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal this_assign_1_6_fu_2944_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_418_fu_3205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_assign_1_5_fu_2914_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_4_fu_2884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_3_fu_2854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_2_fu_2824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_1_fu_2794_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_fu_2764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_7_fu_2974_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_302_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_op_fu_759_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_19_fu_773_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal newIndex5_mid2_v_fu_802_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_812_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_824_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_cast_fu_832_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_cast_fu_820_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_mid_fu_779_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_17_fu_842_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_301_fu_836_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_184_mid2_cast_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_415_fu_877_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_cast_fu_884_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_870_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_304_fu_888_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_186_cast_fu_894_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_305_fu_897_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_313_fu_965_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_314_fu_977_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl6_cast_fu_973_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_cast_fu_985_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_315_fu_989_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_316_fu_995_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_419_fu_1008_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl4_cast_fu_1000_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl5_cast_fu_1016_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_317_fu_1020_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_318_fu_1026_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal newIndex8_fu_1048_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_319_fu_1058_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_320_fu_1070_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl12_cast_fu_1066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl13_cast_fu_1082_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_321_fu_1086_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_322_fu_1092_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_323_fu_1109_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl13_cast1_fu_1078_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl11_cast_fu_1117_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_324_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_325_fu_1127_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_420_fu_1140_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_cast_fu_1132_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl9_cast_fu_1148_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_326_fu_1152_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1186_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1186_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP2_V_fu_1183_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_65_1_fu_1203_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_1_fu_1203_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_2_fu_1220_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_2_fu_1220_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_3_fu_1237_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_3_fu_1237_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_4_fu_1254_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_4_fu_1254_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_5_fu_1271_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_5_fu_1271_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_6_fu_1288_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_6_fu_1288_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_7_fu_1305_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_65_7_fu_1305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_191_fu_1319_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_212_cast_fu_1326_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_fu_1343_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_fu_1353_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_423_fu_1356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_1_fu_1400_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_1_cast_fu_1407_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_1_fu_1424_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_1_fu_1434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_428_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_1_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_2_fu_1481_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_2_cast_fu_1488_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_2_fu_1505_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_2_fu_1515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_433_fu_1518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_2_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_3_fu_1562_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_3_cast_fu_1569_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_3_fu_1586_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_3_fu_1596_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_438_fu_1599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_3_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_4_fu_1643_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_4_cast_fu_1650_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_4_fu_1667_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_4_fu_1677_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_443_fu_1680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_4_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_5_fu_1724_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_5_cast_fu_1731_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_5_fu_1748_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_5_fu_1758_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_448_fu_1761_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_5_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_6_fu_1805_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_6_cast_fu_1812_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_6_fu_1829_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_6_fu_1839_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_453_fu_1842_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_6_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_7_fu_1886_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_293_7_cast_fu_1893_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_67_7_fu_1910_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_7_fu_1920_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_458_fu_1923_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_7_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_425_fu_1967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_fu_1991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_fu_1997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_2014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_2020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_2002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_2041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_2030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_2071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_2076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_430_fu_2064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_1_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_1_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_2081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_1_fu_2111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_1_fu_2117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_2099_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_2138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_2144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_2127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_435_fu_2161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_2_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_2_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_2178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_2_fu_2208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_2_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_2196_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_2235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_2241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_2270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_440_fu_2258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_3_fu_2282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_3_fu_2288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_3_fu_2305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_3_fu_2311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_2293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_demorgan_fu_2332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_2338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_2362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_2367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_445_fu_2355_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_4_fu_2379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_4_fu_2385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_2372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_4_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_4_fu_2408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_demorgan_fu_2429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_fu_2418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_2459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_2464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_fu_2452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_5_fu_2476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_5_fu_2482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_2469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_5_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_5_fu_2505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_5_fu_2487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_demorgan_fu_2526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_2532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_fu_2515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_6_fu_2556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_455_fu_2549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_6_fu_2573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_6_fu_2579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_2566_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_6_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_6_fu_2602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_2584_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_demorgan_fu_2623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_2629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_2612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_7_fu_2653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_7_fu_2658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_460_fu_2646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_7_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_7_fu_2676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_7_fu_2663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_7_fu_2693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_7_fu_2699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_7_fu_2681_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_demorgan_fu_2720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_2726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_2709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_2743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_2747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_fu_2752_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_127_fu_2758_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_2773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_1_fu_2777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_1_fu_2782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_1_128_fu_2788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_2803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_2_fu_2807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_2_fu_2812_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_2_129_fu_2818_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_2833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_3_fu_2837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_3_fu_2842_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_3_130_fu_2848_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp10_fu_2863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_4_fu_2867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_4_fu_2872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_4_131_fu_2878_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp12_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_5_fu_2897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_5_fu_2902_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_5_132_fu_2908_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp14_fu_2923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_6_fu_2927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_6_fu_2932_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_6_133_fu_2938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp16_fu_2953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_7_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_68_mux_7_fu_2962_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_68_7_134_fu_2968_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond16_fu_3007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_1_fu_3001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_fu_3019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten21_op_fu_3033_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal co_20_fu_3047_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal newIndex7_mid2_v_fu_3071_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_306_fu_3081_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_307_fu_3093_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl17_cast_fu_3101_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl16_cast_fu_3089_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal h5_mid_fu_3053_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_7_fu_3111_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_308_fu_3105_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_187_mid2_cast_fu_3124_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_417_fu_3146_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl15_cast_fu_3153_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl14_cast_fu_3139_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_311_fu_3157_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_189_cast_fu_3163_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_312_fu_3166_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_196_fu_3184_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component ShuffleNetV2_mux_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    ShuffleNetV2_mux_jbC_x_U117 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => ShuffleConvs_1_Downs_7_q0,
        din2 => ShuffleConvs_1_Downs_6_q0,
        din3 => ShuffleConvs_1_Downs_5_q0,
        din4 => ShuffleConvs_1_Downs_4_q0,
        din5 => ShuffleConvs_1_Downs_3_q0,
        din6 => ShuffleConvs_1_Downs_2_q0,
        din7 => ShuffleConvs_1_Downs_1_q0,
        din8 => ShuffleConvs_1_Downs_q0,
        din9 => ap_reg_pp1_iter2_tmp_416_reg_4119,
        dout => tmp_196_fu_3184_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state15))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state15)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = exitcond15_fu_1042_p2))) then 
                ci_reg_630 <= ci_5_reg_3309;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond13_fu_929_p2))) then 
                ci_reg_630 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    co3_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond14_fu_949_p2))) then 
                co3_reg_641 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                co3_reg_641 <= co_21_7_reg_3377;
            end if; 
        end if;
    end process;

    co4_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                co4_reg_663 <= ap_const_lv6_0;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
                co4_reg_663 <= arrayNo_mid2_v_reg_4114;
            end if; 
        end if;
    end process;

    co_reg_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 = ap_const_lv1_0))) then 
                co_reg_560 <= tmp_mid2_v_reg_3244;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_560 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    h1_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                h1_reg_606 <= ap_const_lv5_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond13_fu_929_p2 = ap_const_lv1_1))) then 
                h1_reg_606 <= h_8_fu_943_p2;
            end if; 
        end if;
    end process;

    h5_reg_686_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                h5_reg_686 <= ap_const_lv5_1;
            elsif (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
                h5_reg_686 <= tmp_187_mid2_reg_4124;
            end if; 
        end if;
    end process;

    h_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 = ap_const_lv1_0))) then 
                h_reg_583 <= tmp_184_mid2_reg_3253;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_reg_583 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;

    indvar_flatten4_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_709_p2 = ap_const_lv1_0))) then 
                indvar_flatten4_reg_549 <= indvar_flatten_next1_fu_715_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten4_reg_549 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten5_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                indvar_flatten5_reg_652 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten9_fu_2983_p2))) then 
                indvar_flatten5_reg_652 <= indvar_flatten_next1_4_fu_2989_p2;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                indvar_flatten6_reg_675 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten9_fu_2983_p2))) then 
                indvar_flatten6_reg_675 <= indvar_flatten_next1_3_fu_3039_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_709_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_572 <= indvar_flatten_next_fu_765_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_572 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    w2_reg_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond12_fu_915_p2))) then 
                w2_reg_618 <= ap_const_lv5_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond14_fu_949_p2))) then 
                w2_reg_618 <= w_20_fu_1036_p2;
            end if; 
        end if;
    end process;

    w6_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then 
                w6_reg_698 <= ap_const_lv5_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten9_reg_4083))) then 
                w6_reg_698 <= w_21_fu_3134_p2;
            end if; 
        end if;
    end process;

    w_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3213 = ap_const_lv1_0))) then 
                w_reg_595 <= w_19_fu_865_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_reg_595 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                ShuffleConvs_1_Downs_31_reg_3382 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_32_reg_3387 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_33_reg_3392 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_34_reg_3397 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_35_reg_3402 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_36_reg_3407 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_37_reg_3412 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_38_reg_3417 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
                input_V_load_reg_3427 <= input_V_q0;
                weight_0_V_load_reg_3422 <= weight_0_V_q0;
                weight_1_V_load_reg_3432 <= weight_1_V_q0;
                weight_2_V_load_reg_3437 <= weight_2_V_q0;
                weight_3_V_load_reg_3442 <= weight_3_V_q0;
                weight_4_V_load_reg_3447 <= weight_4_V_q0;
                weight_5_V_load_reg_3452 <= weight_5_V_q0;
                weight_6_V_load_reg_3457 <= weight_6_V_q0;
                weight_7_V_load_reg_3462 <= weight_7_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                ShuffleConvs_1_Downs_39_reg_3472 <= ShuffleConvs_1_Downs_7_q0;
                ShuffleConvs_1_Downs_40_reg_3487 <= ShuffleConvs_1_Downs_6_q0;
                ShuffleConvs_1_Downs_41_reg_3502 <= ShuffleConvs_1_Downs_5_q0;
                ShuffleConvs_1_Downs_42_reg_3517 <= ShuffleConvs_1_Downs_4_q0;
                ShuffleConvs_1_Downs_43_reg_3532 <= ShuffleConvs_1_Downs_3_q0;
                ShuffleConvs_1_Downs_44_reg_3547 <= ShuffleConvs_1_Downs_2_q0;
                ShuffleConvs_1_Downs_45_reg_3562 <= ShuffleConvs_1_Downs_1_q0;
                ShuffleConvs_1_Downs_46_reg_3577 <= ShuffleConvs_1_Downs_q0;
                p_Val2_65_1_reg_3482 <= p_Val2_65_1_fu_1203_p2;
                p_Val2_65_2_reg_3497 <= p_Val2_65_2_fu_1220_p2;
                p_Val2_65_3_reg_3512 <= p_Val2_65_3_fu_1237_p2;
                p_Val2_65_4_reg_3527 <= p_Val2_65_4_fu_1254_p2;
                p_Val2_65_5_reg_3542 <= p_Val2_65_5_fu_1271_p2;
                p_Val2_65_6_reg_3557 <= p_Val2_65_6_fu_1288_p2;
                p_Val2_65_7_reg_3572 <= p_Val2_65_7_fu_1305_p2;
                p_Val2_s_reg_3467 <= p_Val2_s_fu_1186_p2;
                tmp_422_reg_3477 <= p_Val2_s_fu_1186_p2(5 downto 5);
                tmp_427_reg_3492 <= p_Val2_65_1_fu_1203_p2(5 downto 5);
                tmp_432_reg_3507 <= p_Val2_65_2_fu_1220_p2(5 downto 5);
                tmp_437_reg_3522 <= p_Val2_65_3_fu_1237_p2(5 downto 5);
                tmp_442_reg_3537 <= p_Val2_65_4_fu_1254_p2(5 downto 5);
                tmp_447_reg_3552 <= p_Val2_65_5_fu_1271_p2(5 downto 5);
                tmp_452_reg_3567 <= p_Val2_65_6_fu_1288_p2(5 downto 5);
                tmp_457_reg_3582 <= p_Val2_65_7_fu_1305_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten9_reg_4083))) then
                ShuffleConvs_1_Downs_47_reg_4140 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_48_reg_4146 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_49_reg_4152 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_50_reg_4158 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_51_reg_4164 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_52_reg_4170 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_53_reg_4176 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
                ShuffleConvs_1_Downs_54_reg_4182 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten_reg_3213 <= exitcond_flatten_reg_3213;
                ap_reg_pp0_iter1_w_mid2_reg_3233 <= w_mid2_reg_3233;
                exitcond_flatten_reg_3213 <= exitcond_flatten_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp1_iter1_exitcond_flatten9_reg_4083 <= exitcond_flatten9_reg_4083;
                ap_reg_pp1_iter1_w6_mid2_reg_4103 <= w6_mid2_reg_4103;
                exitcond_flatten9_reg_4083 <= exitcond_flatten9_fu_2983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp1_iter2_tmp_416_reg_4119 <= tmp_416_reg_4119;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten9_reg_4083))) then
                arrayNo_mid2_v_reg_4114 <= arrayNo_mid2_v_fu_3060_p3;
                tmp_187_mid2_reg_4124 <= tmp_187_mid2_fu_3117_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                brmerge40_demorgan_i_17_reg_3943 <= brmerge40_demorgan_i_17_fu_2230_p2;
                brmerge40_demorgan_i_18_reg_3968 <= brmerge40_demorgan_i_18_fu_2327_p2;
                brmerge40_demorgan_i_19_reg_3993 <= brmerge40_demorgan_i_19_fu_2424_p2;
                brmerge40_demorgan_i_20_reg_4018 <= brmerge40_demorgan_i_20_fu_2521_p2;
                brmerge40_demorgan_i_21_reg_4043 <= brmerge40_demorgan_i_21_fu_2618_p2;
                brmerge40_demorgan_i_22_reg_4068 <= brmerge40_demorgan_i_22_fu_2715_p2;
                brmerge40_demorgan_i_23_reg_3918 <= brmerge40_demorgan_i_23_fu_2133_p2;
                brmerge40_demorgan_i_reg_3893 <= brmerge40_demorgan_i_fu_2036_p2;
                brmerge_i_i_i_1_reg_3928 <= brmerge_i_i_i_1_fu_2155_p2;
                brmerge_i_i_i_2_reg_3953 <= brmerge_i_i_i_2_fu_2252_p2;
                brmerge_i_i_i_3_reg_3978 <= brmerge_i_i_i_3_fu_2349_p2;
                brmerge_i_i_i_4_reg_4003 <= brmerge_i_i_i_4_fu_2446_p2;
                brmerge_i_i_i_5_reg_4028 <= brmerge_i_i_i_5_fu_2543_p2;
                brmerge_i_i_i_6_reg_4053 <= brmerge_i_i_i_6_fu_2640_p2;
                brmerge_i_i_i_7_reg_4078 <= brmerge_i_i_i_7_fu_2737_p2;
                brmerge_i_i_i_reg_3903 <= brmerge_i_i_i_fu_2058_p2;
                p_38_i_i_1_reg_3908 <= p_38_i_i_1_fu_2106_p2;
                p_38_i_i_2_reg_3933 <= p_38_i_i_2_fu_2203_p2;
                p_38_i_i_3_reg_3958 <= p_38_i_i_3_fu_2300_p2;
                p_38_i_i_4_reg_3983 <= p_38_i_i_4_fu_2397_p2;
                p_38_i_i_5_reg_4008 <= p_38_i_i_5_fu_2494_p2;
                p_38_i_i_6_reg_4033 <= p_38_i_i_6_fu_2591_p2;
                p_38_i_i_7_reg_4058 <= p_38_i_i_7_fu_2688_p2;
                p_38_i_i_reg_3883 <= p_38_i_i_fu_2009_p2;
                tmp_195_reg_3888 <= tmp_195_fu_2025_p2;
                tmp_306_1_reg_3913 <= tmp_306_1_fu_2122_p2;
                tmp_306_2_reg_3938 <= tmp_306_2_fu_2219_p2;
                tmp_306_3_reg_3963 <= tmp_306_3_fu_2316_p2;
                tmp_306_4_reg_3988 <= tmp_306_4_fu_2413_p2;
                tmp_306_5_reg_4013 <= tmp_306_5_fu_2510_p2;
                tmp_306_6_reg_4038 <= tmp_306_6_fu_2607_p2;
                tmp_306_7_reg_4063 <= tmp_306_7_fu_2704_p2;
                underflow_1_reg_3923 <= underflow_1_fu_2150_p2;
                underflow_2_reg_3948 <= underflow_2_fu_2247_p2;
                underflow_3_reg_3973 <= underflow_3_fu_2344_p2;
                underflow_4_reg_3998 <= underflow_4_fu_2441_p2;
                underflow_5_reg_4023 <= underflow_5_fu_2538_p2;
                underflow_6_reg_4048 <= underflow_6_fu_2635_p2;
                underflow_7_reg_4073 <= underflow_7_fu_2732_p2;
                underflow_reg_3898 <= underflow_fu_2053_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                carry_11_1_reg_3648 <= carry_11_1_fu_1465_p2;
                carry_11_2_reg_3685 <= carry_11_2_fu_1546_p2;
                carry_11_3_reg_3722 <= carry_11_3_fu_1627_p2;
                carry_11_4_reg_3759 <= carry_11_4_fu_1708_p2;
                carry_11_5_reg_3796 <= carry_11_5_fu_1789_p2;
                carry_11_6_reg_3833 <= carry_11_6_fu_1870_p2;
                carry_11_7_reg_3870 <= carry_11_7_fu_1951_p2;
                carry_s_reg_3611 <= carry_s_fu_1384_p2;
                p_Val2_4_reg_3587 <= p_Val2_4_fu_1330_p2;
                p_Val2_66_1_reg_3624 <= p_Val2_66_1_fu_1411_p2;
                p_Val2_66_2_reg_3661 <= p_Val2_66_2_fu_1492_p2;
                p_Val2_66_3_reg_3698 <= p_Val2_66_3_fu_1573_p2;
                p_Val2_66_4_reg_3735 <= p_Val2_66_4_fu_1654_p2;
                p_Val2_66_5_reg_3772 <= p_Val2_66_5_fu_1735_p2;
                p_Val2_66_6_reg_3809 <= p_Val2_66_6_fu_1816_p2;
                p_Val2_66_7_reg_3846 <= p_Val2_66_7_fu_1897_p2;
                p_Val2_68_1_reg_3636 <= p_Val2_68_1_fu_1445_p2;
                p_Val2_68_2_reg_3673 <= p_Val2_68_2_fu_1526_p2;
                p_Val2_68_3_reg_3710 <= p_Val2_68_3_fu_1607_p2;
                p_Val2_68_4_reg_3747 <= p_Val2_68_4_fu_1688_p2;
                p_Val2_68_5_reg_3784 <= p_Val2_68_5_fu_1769_p2;
                p_Val2_68_6_reg_3821 <= p_Val2_68_6_fu_1850_p2;
                p_Val2_68_7_reg_3858 <= p_Val2_68_7_fu_1931_p2;
                p_Val2_6_reg_3599 <= p_Val2_6_fu_1364_p2;
                tmp_197_reg_3618 <= p_Val2_4_fu_1330_p2(15 downto 14);
                tmp_198_reg_3655 <= p_Val2_66_1_fu_1411_p2(15 downto 14);
                tmp_199_reg_3692 <= p_Val2_66_2_fu_1492_p2(15 downto 14);
                tmp_200_reg_3729 <= p_Val2_66_3_fu_1573_p2(15 downto 14);
                tmp_201_reg_3766 <= p_Val2_66_4_fu_1654_p2(15 downto 14);
                tmp_202_reg_3803 <= p_Val2_66_5_fu_1735_p2(15 downto 14);
                tmp_203_reg_3840 <= p_Val2_66_6_fu_1816_p2(15 downto 14);
                tmp_204_reg_3877 <= p_Val2_66_7_fu_1897_p2(15 downto 14);
                tmp_421_reg_3592 <= p_Val2_4_fu_1330_p2(15 downto 15);
                tmp_424_reg_3605 <= p_Val2_6_fu_1364_p2(7 downto 7);
                tmp_426_reg_3629 <= p_Val2_66_1_fu_1411_p2(15 downto 15);
                tmp_429_reg_3642 <= p_Val2_68_1_fu_1445_p2(7 downto 7);
                tmp_431_reg_3666 <= p_Val2_66_2_fu_1492_p2(15 downto 15);
                tmp_434_reg_3679 <= p_Val2_68_2_fu_1526_p2(7 downto 7);
                tmp_436_reg_3703 <= p_Val2_66_3_fu_1573_p2(15 downto 15);
                tmp_439_reg_3716 <= p_Val2_68_3_fu_1607_p2(7 downto 7);
                tmp_441_reg_3740 <= p_Val2_66_4_fu_1654_p2(15 downto 15);
                tmp_444_reg_3753 <= p_Val2_68_4_fu_1688_p2(7 downto 7);
                tmp_446_reg_3777 <= p_Val2_66_5_fu_1735_p2(15 downto 15);
                tmp_449_reg_3790 <= p_Val2_68_5_fu_1769_p2(7 downto 7);
                tmp_451_reg_3814 <= p_Val2_66_6_fu_1816_p2(15 downto 15);
                tmp_454_reg_3827 <= p_Val2_68_6_fu_1850_p2(7 downto 7);
                tmp_456_reg_3851 <= p_Val2_66_7_fu_1897_p2(15 downto 15);
                tmp_459_reg_3864 <= p_Val2_68_7_fu_1931_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                ci_5_reg_3309 <= ci_5_fu_955_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_0 = exitcond15_fu_1042_p2))) then
                co_21_7_reg_3377 <= co_21_7_fu_1163_p2;
                tmp_327_reg_3372 <= tmp_327_fu_1158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (exitcond_flatten_fu_709_p2 = ap_const_lv1_0))) then
                exitcond32_mid_reg_3228 <= exitcond32_mid_fu_739_p2;
                exitcond_flatten8_reg_3222 <= exitcond_flatten8_fu_721_p2;
                w_mid2_reg_3233 <= w_mid2_fu_751_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten9_fu_2983_p2))) then
                exitcond_flatten10_reg_4092 <= exitcond_flatten10_fu_2995_p2;
                exitcond_mid_reg_4098 <= exitcond_mid_fu_3013_p2;
                w6_mid2_reg_4103 <= w6_mid2_fu_3025_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond14_fu_949_p2))) then
                input_V_addr_reg_3319 <= tmp_368_cast_fu_1031_p1(14 - 1 downto 0);
                    tmp_188_cast_reg_3314(5 downto 0) <= tmp_188_cast_fu_961_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3213 = ap_const_lv1_0))) then
                tmp_184_mid2_reg_3253 <= tmp_184_mid2_fu_848_p3;
                tmp_mid2_v_reg_3244 <= tmp_mid2_v_fu_786_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond13_fu_929_p2))) then
                    tmp_185_cast1_reg_3291(4 downto 0) <= tmp_185_cast1_fu_935_p1(4 downto 0);
                    tmp_185_cast_reg_3296(4 downto 0) <= tmp_185_cast_fu_939_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (exitcond_flatten_reg_3213 = ap_const_lv1_0))) then
                tmp_303_reg_3258 <= tmp_303_fu_859_p2;
                tmp_414_reg_3249 <= tmp_414_fu_798_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten9_reg_4083))) then
                tmp_310_reg_4129 <= tmp_310_fu_3128_p2;
                tmp_416_reg_4119 <= tmp_416_fu_3067_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond12_fu_915_p2))) then
                    tmp_cast4_reg_3278(4 downto 0) <= tmp_cast4_fu_921_p1(4 downto 0);
                    tmp_cast_reg_3283(4 downto 0) <= tmp_cast_fu_925_p1(4 downto 0);
            end if;
        end if;
    end process;
    tmp_cast4_reg_3278(7 downto 5) <= "000";
    tmp_cast_reg_3283(10 downto 5) <= "000000";
    tmp_185_cast1_reg_3291(11 downto 5) <= "0000000";
    tmp_185_cast_reg_3296(14 downto 5) <= "0000000000";
    tmp_188_cast_reg_3314(9 downto 6) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_fu_709_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond12_fu_915_p2, ap_CS_fsm_state6, ap_CS_fsm_state7, exitcond13_fu_929_p2, ap_CS_fsm_state8, exitcond14_fu_949_p2, ap_CS_fsm_state9, exitcond15_fu_1042_p2, exitcond_flatten9_fu_2983_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_flag00011011, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_709_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_709_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond12_fu_915_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond13_fu_929_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond14_fu_949_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = exitcond15_fu_1042_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten9_fu_2983_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten9_fu_2983_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
        OP2_V_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_V_load_reg_3427),16));

    Range1_all_ones_1_fu_2071_p2 <= "1" when (tmp_198_reg_3655 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_2168_p2 <= "1" when (tmp_199_reg_3692 = ap_const_lv2_3) else "0";
    Range1_all_ones_3_fu_2265_p2 <= "1" when (tmp_200_reg_3729 = ap_const_lv2_3) else "0";
    Range1_all_ones_4_fu_2362_p2 <= "1" when (tmp_201_reg_3766 = ap_const_lv2_3) else "0";
    Range1_all_ones_5_fu_2459_p2 <= "1" when (tmp_202_reg_3803 = ap_const_lv2_3) else "0";
    Range1_all_ones_6_fu_2556_p2 <= "1" when (tmp_203_reg_3840 = ap_const_lv2_3) else "0";
    Range1_all_ones_7_fu_2653_p2 <= "1" when (tmp_204_reg_3877 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_1974_p2 <= "1" when (tmp_197_reg_3618 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_2076_p2 <= "1" when (tmp_198_reg_3655 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_2173_p2 <= "1" when (tmp_199_reg_3692 = ap_const_lv2_0) else "0";
    Range1_all_zeros_3_fu_2270_p2 <= "1" when (tmp_200_reg_3729 = ap_const_lv2_0) else "0";
    Range1_all_zeros_4_fu_2367_p2 <= "1" when (tmp_201_reg_3766 = ap_const_lv2_0) else "0";
    Range1_all_zeros_5_fu_2464_p2 <= "1" when (tmp_202_reg_3803 = ap_const_lv2_0) else "0";
    Range1_all_zeros_6_fu_2561_p2 <= "1" when (tmp_203_reg_3840 = ap_const_lv2_0) else "0";
    Range1_all_zeros_7_fu_2658_p2 <= "1" when (tmp_204_reg_3877 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_1979_p2 <= "1" when (tmp_197_reg_3618 = ap_const_lv2_0) else "0";

    ShuffleConvs_1_Downs_1_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_32_reg_3387, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_1_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_1_address0 <= ShuffleConvs_1_Downs_32_reg_3387;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_1_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_1_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_1_address1 <= ShuffleConvs_1_Downs_48_reg_4146;

    ShuffleConvs_1_Downs_1_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_1_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_1_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_6_fu_2944_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_1_d0 <= this_assign_1_6_fu_2944_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_1_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_1_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_1_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_1_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_6)))) then 
            ShuffleConvs_1_Downs_1_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_1_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_6))) then 
            ShuffleConvs_1_Downs_1_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_2_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_37_reg_3412, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_2_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_2_address0 <= ShuffleConvs_1_Downs_37_reg_3412;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_2_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_2_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_2_address1 <= ShuffleConvs_1_Downs_53_reg_4176;

    ShuffleConvs_1_Downs_2_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_2_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_2_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_2_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_2_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_5_fu_2914_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_2_d0 <= this_assign_1_5_fu_2914_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_2_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_2_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_2_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_2_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_5)))) then 
            ShuffleConvs_1_Downs_2_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_2_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_5))) then 
            ShuffleConvs_1_Downs_2_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_33_reg_3392, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_3_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_3_address0 <= ShuffleConvs_1_Downs_33_reg_3392;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_3_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_3_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_3_address1 <= ShuffleConvs_1_Downs_49_reg_4152;

    ShuffleConvs_1_Downs_3_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_3_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_3_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_4_fu_2884_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_3_d0 <= this_assign_1_4_fu_2884_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_3_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_3_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_3_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_3_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_4)))) then 
            ShuffleConvs_1_Downs_3_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_3_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_4))) then 
            ShuffleConvs_1_Downs_3_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_38_reg_3417, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_4_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_4_address0 <= ShuffleConvs_1_Downs_38_reg_3417;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_4_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_4_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_4_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_4_address1 <= ShuffleConvs_1_Downs_54_reg_4182;

    ShuffleConvs_1_Downs_4_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_4_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_4_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_3_fu_2854_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_4_d0 <= this_assign_1_3_fu_2854_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_4_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_4_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_4_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_4_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_3)))) then 
            ShuffleConvs_1_Downs_4_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_4_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_3))) then 
            ShuffleConvs_1_Downs_4_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_35_reg_3402, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_5_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_5_address0 <= ShuffleConvs_1_Downs_35_reg_3402;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_5_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_5_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_5_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_5_address1 <= ShuffleConvs_1_Downs_51_reg_4164;

    ShuffleConvs_1_Downs_5_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_5_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_5_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_2_fu_2824_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_5_d0 <= this_assign_1_2_fu_2824_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_5_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_5_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_5_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_5_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_2)))) then 
            ShuffleConvs_1_Downs_5_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_5_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_2))) then 
            ShuffleConvs_1_Downs_5_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_address0_assign_proc : process(ShuffleConvs_1_Downs_31_reg_3382, ap_CS_fsm_state10, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_6_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_6_address0 <= ShuffleConvs_1_Downs_31_reg_3382;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_6_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_6_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_6_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_6_address1 <= ShuffleConvs_1_Downs_47_reg_4140;

    ShuffleConvs_1_Downs_6_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_6_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_6_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_1_fu_2794_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_6_d0 <= this_assign_1_1_fu_2794_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_6_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_6_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_6_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_6_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_1)))) then 
            ShuffleConvs_1_Downs_6_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_6_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_1))) then 
            ShuffleConvs_1_Downs_6_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_34_reg_3397, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_7_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_7_address0 <= ShuffleConvs_1_Downs_34_reg_3397;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_7_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_7_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_7_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_7_address1 <= ShuffleConvs_1_Downs_50_reg_4158;

    ShuffleConvs_1_Downs_7_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_7_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_7_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_fu_2764_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_7_d0 <= this_assign_1_fu_2764_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_7_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_7_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_7_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_7_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_0)))) then 
            ShuffleConvs_1_Downs_7_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_7_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_0))) then 
            ShuffleConvs_1_Downs_7_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_address0_assign_proc : process(ap_CS_fsm_state10, ShuffleConvs_1_Downs_36_reg_3407, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, ap_block_pp1_stage0_flag00000000, tmp_351_cast_fu_903_p1, tmp_380_cast_fu_1169_p1, tmp_360_cast_fu_3172_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_address0 <= tmp_360_cast_fu_3172_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_address0 <= ShuffleConvs_1_Downs_36_reg_3407;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ShuffleConvs_1_Downs_address0 <= tmp_380_cast_fu_1169_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_address0 <= tmp_351_cast_fu_903_p1(11 - 1 downto 0);
        else 
            ShuffleConvs_1_Downs_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_address1 <= ShuffleConvs_1_Downs_52_reg_4170;

    ShuffleConvs_1_Downs_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state10, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            ShuffleConvs_1_Downs_ce0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_ce1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3))) then 
            ShuffleConvs_1_Downs_ce1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_d0_assign_proc : process(bias_V_q0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state14, this_assign_1_7_fu_2974_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ShuffleConvs_1_Downs_d0 <= this_assign_1_7_fu_2974_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            ShuffleConvs_1_Downs_d0 <= bias_V_q0;
        else 
            ShuffleConvs_1_Downs_d0 <= "XXXXXXXX";
        end if; 
    end process;

    ShuffleConvs_1_Downs_d1 <= ap_const_lv8_0;

    ShuffleConvs_1_Downs_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, tmp_414_reg_3249, ap_enable_reg_pp0_iter2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (tmp_414_reg_3249 = ap_const_lv3_7)))) then 
            ShuffleConvs_1_Downs_we0 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ShuffleConvs_1_Downs_we1_assign_proc : process(ap_block_pp1_stage0_flag00011001, ap_reg_pp1_iter2_tmp_416_reg_4119, ap_enable_reg_pp1_iter3, tmp_418_fu_3205_p3)
    begin
        if (((ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter3) and (ap_const_lv1_1 = tmp_418_fu_3205_p3) and (ap_reg_pp1_iter2_tmp_416_reg_4119 = ap_const_lv3_7))) then 
            ShuffleConvs_1_Downs_we1 <= ap_const_logic_1;
        else 
            ShuffleConvs_1_Downs_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state19 <= ap_CS_fsm(13);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_709_p2)
    begin
        if ((exitcond_flatten_fu_709_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state15_assign_proc : process(exitcond_flatten9_fu_2983_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_flatten9_fu_2983_p2)) then 
            ap_condition_pp1_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1) and (ap_const_logic_0 = ap_enable_reg_pp1_iter2) and (ap_const_logic_0 = ap_enable_reg_pp1_iter3))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo_mid2_v_fu_3060_p3 <= 
        co_20_fu_3047_p2 when (exitcond_flatten10_reg_4092(0) = '1') else 
        co4_phi_fu_667_p4;
    bias_V_address0 <= tmp_mid2_fu_793_p1(6 - 1 downto 0);

    bias_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge40_demorgan_i_17_fu_2230_p2 <= (tmp_434_reg_3679 and deleted_ones_2_fu_2196_p3);
    brmerge40_demorgan_i_18_fu_2327_p2 <= (tmp_439_reg_3716 and deleted_ones_3_fu_2293_p3);
    brmerge40_demorgan_i_19_fu_2424_p2 <= (tmp_444_reg_3753 and deleted_ones_4_fu_2390_p3);
    brmerge40_demorgan_i_20_fu_2521_p2 <= (tmp_449_reg_3790 and deleted_ones_5_fu_2487_p3);
    brmerge40_demorgan_i_21_fu_2618_p2 <= (tmp_454_reg_3827 and deleted_ones_6_fu_2584_p3);
    brmerge40_demorgan_i_22_fu_2715_p2 <= (tmp_459_reg_3864 and deleted_ones_7_fu_2681_p3);
    brmerge40_demorgan_i_23_fu_2133_p2 <= (tmp_429_reg_3642 and deleted_ones_1_fu_2099_p3);
    brmerge40_demorgan_i_fu_2036_p2 <= (tmp_424_reg_3605 and deleted_ones_fu_2002_p3);
    brmerge_i_i_1_fu_2117_p2 <= (tmp_429_reg_3642 or p_not_i_i_1_fu_2111_p2);
    brmerge_i_i_2_fu_2214_p2 <= (tmp_434_reg_3679 or p_not_i_i_2_fu_2208_p2);
    brmerge_i_i_3_fu_2311_p2 <= (tmp_439_reg_3716 or p_not_i_i_3_fu_2305_p2);
    brmerge_i_i_4_fu_2408_p2 <= (tmp_444_reg_3753 or p_not_i_i_4_fu_2402_p2);
    brmerge_i_i_5_fu_2505_p2 <= (tmp_449_reg_3790 or p_not_i_i_5_fu_2499_p2);
    brmerge_i_i_6_fu_2602_p2 <= (tmp_454_reg_3827 or p_not_i_i_6_fu_2596_p2);
    brmerge_i_i_7_fu_2699_p2 <= (tmp_459_reg_3864 or p_not_i_i_7_fu_2693_p2);
    brmerge_i_i_fu_2020_p2 <= (tmp_424_reg_3605 or p_not_i_i_fu_2014_p2);
    brmerge_i_i_i_1_fu_2155_p2 <= (underflow_1_fu_2150_p2 or overflow_1_fu_2127_p2);
    brmerge_i_i_i_2_fu_2252_p2 <= (underflow_2_fu_2247_p2 or overflow_2_fu_2224_p2);
    brmerge_i_i_i_3_fu_2349_p2 <= (underflow_3_fu_2344_p2 or overflow_3_fu_2321_p2);
    brmerge_i_i_i_4_fu_2446_p2 <= (underflow_4_fu_2441_p2 or overflow_4_fu_2418_p2);
    brmerge_i_i_i_5_fu_2543_p2 <= (underflow_5_fu_2538_p2 or overflow_5_fu_2515_p2);
    brmerge_i_i_i_6_fu_2640_p2 <= (underflow_6_fu_2635_p2 or overflow_6_fu_2612_p2);
    brmerge_i_i_i_7_fu_2737_p2 <= (underflow_7_fu_2732_p2 or overflow_7_fu_2709_p2);
    brmerge_i_i_i_fu_2058_p2 <= (underflow_fu_2053_p2 or overflow_fu_2030_p2);
    carry_11_1_fu_1465_p2 <= (tmp_428_fu_1437_p3 and tmp_301_1_fu_1459_p2);
    carry_11_2_fu_1546_p2 <= (tmp_433_fu_1518_p3 and tmp_301_2_fu_1540_p2);
    carry_11_3_fu_1627_p2 <= (tmp_438_fu_1599_p3 and tmp_301_3_fu_1621_p2);
    carry_11_4_fu_1708_p2 <= (tmp_443_fu_1680_p3 and tmp_301_4_fu_1702_p2);
    carry_11_5_fu_1789_p2 <= (tmp_448_fu_1761_p3 and tmp_301_5_fu_1783_p2);
    carry_11_6_fu_1870_p2 <= (tmp_453_fu_1842_p3 and tmp_301_6_fu_1864_p2);
    carry_11_7_fu_1951_p2 <= (tmp_458_fu_1923_p3 and tmp_301_7_fu_1945_p2);
    carry_s_fu_1384_p2 <= (tmp_423_fu_1356_p3 and tmp_193_fu_1378_p2);
    ci_5_fu_955_p2 <= std_logic_vector(unsigned(ci_reg_630) + unsigned(ap_const_lv6_1));

    co4_phi_fu_667_p4_assign_proc : process(co4_reg_663, ap_reg_pp1_iter1_exitcond_flatten9_reg_4083, arrayNo_mid2_v_reg_4114, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            co4_phi_fu_667_p4 <= arrayNo_mid2_v_reg_4114;
        else 
            co4_phi_fu_667_p4 <= co4_reg_663;
        end if; 
    end process;

    co_19_fu_773_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(co_phi_fu_564_p4));
    co_20_fu_3047_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(co4_phi_fu_667_p4));
    co_21_7_fu_1163_p2 <= std_logic_vector(unsigned(co3_reg_641) + unsigned(ap_const_lv6_8));

    co_phi_fu_564_p4_assign_proc : process(co_reg_560, ap_reg_pp0_iter1_exitcond_flatten_reg_3213, tmp_mid2_v_reg_3244, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            co_phi_fu_564_p4 <= tmp_mid2_v_reg_3244;
        else 
            co_phi_fu_564_p4 <= co_reg_560;
        end if; 
    end process;

    deleted_ones_1_fu_2099_p3 <= 
        p_41_i_i_1_fu_2094_p2 when (carry_11_1_reg_3648(0) = '1') else 
        Range1_all_ones_1_fu_2071_p2;
    deleted_ones_2_fu_2196_p3 <= 
        p_41_i_i_2_fu_2191_p2 when (carry_11_2_reg_3685(0) = '1') else 
        Range1_all_ones_2_fu_2168_p2;
    deleted_ones_3_fu_2293_p3 <= 
        p_41_i_i_3_fu_2288_p2 when (carry_11_3_reg_3722(0) = '1') else 
        Range1_all_ones_3_fu_2265_p2;
    deleted_ones_4_fu_2390_p3 <= 
        p_41_i_i_4_fu_2385_p2 when (carry_11_4_reg_3759(0) = '1') else 
        Range1_all_ones_4_fu_2362_p2;
    deleted_ones_5_fu_2487_p3 <= 
        p_41_i_i_5_fu_2482_p2 when (carry_11_5_reg_3796(0) = '1') else 
        Range1_all_ones_5_fu_2459_p2;
    deleted_ones_6_fu_2584_p3 <= 
        p_41_i_i_6_fu_2579_p2 when (carry_11_6_reg_3833(0) = '1') else 
        Range1_all_ones_6_fu_2556_p2;
    deleted_ones_7_fu_2681_p3 <= 
        p_41_i_i_7_fu_2676_p2 when (carry_11_7_reg_3870(0) = '1') else 
        Range1_all_ones_7_fu_2653_p2;
    deleted_ones_fu_2002_p3 <= 
        p_41_i_i_fu_1997_p2 when (carry_s_reg_3611(0) = '1') else 
        Range1_all_ones_fu_1974_p2;
    deleted_zeros_1_fu_2081_p3 <= 
        Range1_all_ones_1_fu_2071_p2 when (carry_11_1_reg_3648(0) = '1') else 
        Range1_all_zeros_1_fu_2076_p2;
    deleted_zeros_2_fu_2178_p3 <= 
        Range1_all_ones_2_fu_2168_p2 when (carry_11_2_reg_3685(0) = '1') else 
        Range1_all_zeros_2_fu_2173_p2;
    deleted_zeros_3_fu_2275_p3 <= 
        Range1_all_ones_3_fu_2265_p2 when (carry_11_3_reg_3722(0) = '1') else 
        Range1_all_zeros_3_fu_2270_p2;
    deleted_zeros_4_fu_2372_p3 <= 
        Range1_all_ones_4_fu_2362_p2 when (carry_11_4_reg_3759(0) = '1') else 
        Range1_all_zeros_4_fu_2367_p2;
    deleted_zeros_5_fu_2469_p3 <= 
        Range1_all_ones_5_fu_2459_p2 when (carry_11_5_reg_3796(0) = '1') else 
        Range1_all_zeros_5_fu_2464_p2;
    deleted_zeros_6_fu_2566_p3 <= 
        Range1_all_ones_6_fu_2556_p2 when (carry_11_6_reg_3833(0) = '1') else 
        Range1_all_zeros_6_fu_2561_p2;
    deleted_zeros_7_fu_2663_p3 <= 
        Range1_all_ones_7_fu_2653_p2 when (carry_11_7_reg_3870(0) = '1') else 
        Range1_all_zeros_7_fu_2658_p2;
    deleted_zeros_fu_1984_p3 <= 
        Range1_all_ones_fu_1974_p2 when (carry_s_reg_3611(0) = '1') else 
        Range1_all_zeros_fu_1979_p2;
    exitcond12_fu_915_p2 <= "1" when (h1_reg_606 = ap_const_lv5_11) else "0";
    exitcond13_fu_929_p2 <= "1" when (w2_reg_618 = ap_const_lv5_11) else "0";
    exitcond14_fu_949_p2 <= "1" when (ci_reg_630 = ap_const_lv6_30) else "0";
    exitcond15_fu_1042_p2 <= "1" when (co3_reg_641 = ap_const_lv6_30) else "0";
    exitcond16_fu_3007_p2 <= "1" when (w6_phi_fu_702_p4 = ap_const_lv5_11) else "0";
    exitcond32_mid_fu_739_p2 <= (exitcond_fu_733_p2 and not_exitcond_flatten_fu_727_p2);
    exitcond_flatten10_fu_2995_p2 <= "1" when (indvar_flatten6_reg_675 = ap_const_lv10_100) else "0";
    exitcond_flatten8_fu_721_p2 <= "1" when (indvar_flatten_reg_572 = ap_const_lv10_100) else "0";
    exitcond_flatten9_fu_2983_p2 <= "1" when (indvar_flatten5_reg_652 = ap_const_lv14_3000) else "0";
    exitcond_flatten_fu_709_p2 <= "1" when (indvar_flatten4_reg_549 = ap_const_lv14_3000) else "0";
    exitcond_fu_733_p2 <= "1" when (w_phi_fu_599_p4 = ap_const_lv5_11) else "0";
    exitcond_mid_fu_3013_p2 <= (exitcond16_fu_3007_p2 and not_exitcond_flatten_1_fu_3001_p2);
    h5_mid_fu_3053_p3 <= 
        ap_const_lv5_1 when (exitcond_flatten10_reg_4092(0) = '1') else 
        h5_phi_fu_690_p4;

    h5_phi_fu_690_p4_assign_proc : process(h5_reg_686, ap_reg_pp1_iter1_exitcond_flatten9_reg_4083, tmp_187_mid2_reg_4124, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_lv1_0 = ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            h5_phi_fu_690_p4 <= tmp_187_mid2_reg_4124;
        else 
            h5_phi_fu_690_p4 <= h5_reg_686;
        end if; 
    end process;

    h_17_fu_842_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(h_mid_fu_779_p3));
    h_7_fu_3111_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(h5_mid_fu_3053_p3));
    h_8_fu_943_p2 <= std_logic_vector(unsigned(h1_reg_606) + unsigned(ap_const_lv5_1));
    h_mid_fu_779_p3 <= 
        ap_const_lv5_1 when (exitcond_flatten8_reg_3222(0) = '1') else 
        h_phi_fu_587_p4;

    h_phi_fu_587_p4_assign_proc : process(h_reg_583, ap_reg_pp0_iter1_exitcond_flatten_reg_3213, tmp_184_mid2_reg_3253, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            h_phi_fu_587_p4 <= tmp_184_mid2_reg_3253;
        else 
            h_phi_fu_587_p4 <= h_reg_583;
        end if; 
    end process;

    indvar_flatten21_op_fu_3033_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_675) + unsigned(ap_const_lv10_1));
    indvar_flatten_next1_3_fu_3039_p3 <= 
        ap_const_lv10_1 when (exitcond_flatten10_fu_2995_p2(0) = '1') else 
        indvar_flatten21_op_fu_3033_p2;
    indvar_flatten_next1_4_fu_2989_p2 <= std_logic_vector(unsigned(indvar_flatten5_reg_652) + unsigned(ap_const_lv14_1));
    indvar_flatten_next1_fu_715_p2 <= std_logic_vector(unsigned(indvar_flatten4_reg_549) + unsigned(ap_const_lv14_1));
    indvar_flatten_next_fu_765_p3 <= 
        ap_const_lv10_1 when (exitcond_flatten8_fu_721_p2(0) = '1') else 
        indvar_flatten_op_fu_759_p2;
    indvar_flatten_op_fu_759_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_572) + unsigned(ap_const_lv10_1));
    input_V_address0 <= input_V_addr_reg_3319;

    input_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    newIndex5_mid2_v_fu_802_p4 <= tmp_mid2_v_fu_786_p3(5 downto 3);
    newIndex7_mid2_v_fu_3071_p4 <= arrayNo_mid2_v_fu_3060_p3(5 downto 3);
    newIndex8_fu_1048_p4 <= co3_reg_641(5 downto 3);
    not_exitcond_flatten_1_fu_3001_p2 <= (exitcond_flatten10_fu_2995_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_727_p2 <= (exitcond_flatten8_fu_721_p2 xor ap_const_lv1_1);
    overflow_1_fu_2127_p2 <= (brmerge_i_i_1_fu_2117_p2 and tmp_306_1_fu_2122_p2);
    overflow_2_fu_2224_p2 <= (brmerge_i_i_2_fu_2214_p2 and tmp_306_2_fu_2219_p2);
    overflow_3_fu_2321_p2 <= (brmerge_i_i_3_fu_2311_p2 and tmp_306_3_fu_2316_p2);
    overflow_4_fu_2418_p2 <= (brmerge_i_i_4_fu_2408_p2 and tmp_306_4_fu_2413_p2);
    overflow_5_fu_2515_p2 <= (brmerge_i_i_5_fu_2505_p2 and tmp_306_5_fu_2510_p2);
    overflow_6_fu_2612_p2 <= (brmerge_i_i_6_fu_2602_p2 and tmp_306_6_fu_2607_p2);
    overflow_7_fu_2709_p2 <= (brmerge_i_i_7_fu_2699_p2 and tmp_306_7_fu_2704_p2);
    overflow_fu_2030_p2 <= (brmerge_i_i_fu_2020_p2 and tmp_195_fu_2025_p2);
    p_38_i_i_1_fu_2106_p2 <= (carry_11_1_reg_3648 and Range1_all_ones_1_fu_2071_p2);
    p_38_i_i_2_fu_2203_p2 <= (carry_11_2_reg_3685 and Range1_all_ones_2_fu_2168_p2);
    p_38_i_i_3_fu_2300_p2 <= (carry_11_3_reg_3722 and Range1_all_ones_3_fu_2265_p2);
    p_38_i_i_4_fu_2397_p2 <= (carry_11_4_reg_3759 and Range1_all_ones_4_fu_2362_p2);
    p_38_i_i_5_fu_2494_p2 <= (carry_11_5_reg_3796 and Range1_all_ones_5_fu_2459_p2);
    p_38_i_i_6_fu_2591_p2 <= (carry_11_6_reg_3833 and Range1_all_ones_6_fu_2556_p2);
    p_38_i_i_7_fu_2688_p2 <= (carry_11_7_reg_3870 and Range1_all_ones_7_fu_2653_p2);
    p_38_i_i_fu_2009_p2 <= (carry_s_reg_3611 and Range1_all_ones_fu_1974_p2);
    p_41_i_i_1_fu_2094_p2 <= (tmp_426_reg_3629 and tmp_304_1_fu_2088_p2);
    p_41_i_i_2_fu_2191_p2 <= (tmp_431_reg_3666 and tmp_304_2_fu_2185_p2);
    p_41_i_i_3_fu_2288_p2 <= (tmp_436_reg_3703 and tmp_304_3_fu_2282_p2);
    p_41_i_i_4_fu_2385_p2 <= (tmp_441_reg_3740 and tmp_304_4_fu_2379_p2);
    p_41_i_i_5_fu_2482_p2 <= (tmp_446_reg_3777 and tmp_304_5_fu_2476_p2);
    p_41_i_i_6_fu_2579_p2 <= (tmp_451_reg_3814 and tmp_304_6_fu_2573_p2);
    p_41_i_i_7_fu_2676_p2 <= (tmp_456_reg_3851 and tmp_304_7_fu_2670_p2);
    p_41_i_i_fu_1997_p2 <= (tmp_421_reg_3592 and tmp_194_fu_1991_p2);
    p_Val2_4_fu_1330_p2 <= std_logic_vector(signed(tmp_212_cast_fu_1326_p1) + signed(p_Val2_s_reg_3467));
    p_Val2_5_fu_1343_p4 <= p_Val2_4_fu_1330_p2(13 downto 6);
    p_Val2_65_1_fu_1203_p0 <= weight_1_V_load_reg_3432;
    p_Val2_65_1_fu_1203_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_1_fu_1203_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_1_fu_1203_p0) * signed(p_Val2_65_1_fu_1203_p1))), 16));
    p_Val2_65_2_fu_1220_p0 <= weight_2_V_load_reg_3437;
    p_Val2_65_2_fu_1220_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_2_fu_1220_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_2_fu_1220_p0) * signed(p_Val2_65_2_fu_1220_p1))), 16));
    p_Val2_65_3_fu_1237_p0 <= weight_3_V_load_reg_3442;
    p_Val2_65_3_fu_1237_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_3_fu_1237_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_3_fu_1237_p0) * signed(p_Val2_65_3_fu_1237_p1))), 16));
    p_Val2_65_4_fu_1254_p0 <= weight_4_V_load_reg_3447;
    p_Val2_65_4_fu_1254_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_4_fu_1254_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_4_fu_1254_p0) * signed(p_Val2_65_4_fu_1254_p1))), 16));
    p_Val2_65_5_fu_1271_p0 <= weight_5_V_load_reg_3452;
    p_Val2_65_5_fu_1271_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_5_fu_1271_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_5_fu_1271_p0) * signed(p_Val2_65_5_fu_1271_p1))), 16));
    p_Val2_65_6_fu_1288_p0 <= weight_6_V_load_reg_3457;
    p_Val2_65_6_fu_1288_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_6_fu_1288_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_6_fu_1288_p0) * signed(p_Val2_65_6_fu_1288_p1))), 16));
    p_Val2_65_7_fu_1305_p0 <= weight_7_V_load_reg_3462;
    p_Val2_65_7_fu_1305_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_65_7_fu_1305_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_65_7_fu_1305_p0) * signed(p_Val2_65_7_fu_1305_p1))), 16));
    p_Val2_66_1_fu_1411_p2 <= std_logic_vector(signed(tmp_293_1_cast_fu_1407_p1) + signed(p_Val2_65_1_reg_3482));
    p_Val2_66_2_fu_1492_p2 <= std_logic_vector(signed(tmp_293_2_cast_fu_1488_p1) + signed(p_Val2_65_2_reg_3497));
    p_Val2_66_3_fu_1573_p2 <= std_logic_vector(signed(tmp_293_3_cast_fu_1569_p1) + signed(p_Val2_65_3_reg_3512));
    p_Val2_66_4_fu_1654_p2 <= std_logic_vector(signed(tmp_293_4_cast_fu_1650_p1) + signed(p_Val2_65_4_reg_3527));
    p_Val2_66_5_fu_1735_p2 <= std_logic_vector(signed(tmp_293_5_cast_fu_1731_p1) + signed(p_Val2_65_5_reg_3542));
    p_Val2_66_6_fu_1816_p2 <= std_logic_vector(signed(tmp_293_6_cast_fu_1812_p1) + signed(p_Val2_65_6_reg_3557));
    p_Val2_66_7_fu_1897_p2 <= std_logic_vector(signed(tmp_293_7_cast_fu_1893_p1) + signed(p_Val2_65_7_reg_3572));
    p_Val2_67_1_fu_1424_p4 <= p_Val2_66_1_fu_1411_p2(13 downto 6);
    p_Val2_67_2_fu_1505_p4 <= p_Val2_66_2_fu_1492_p2(13 downto 6);
    p_Val2_67_3_fu_1586_p4 <= p_Val2_66_3_fu_1573_p2(13 downto 6);
    p_Val2_67_4_fu_1667_p4 <= p_Val2_66_4_fu_1654_p2(13 downto 6);
    p_Val2_67_5_fu_1748_p4 <= p_Val2_66_5_fu_1735_p2(13 downto 6);
    p_Val2_67_6_fu_1829_p4 <= p_Val2_66_6_fu_1816_p2(13 downto 6);
    p_Val2_67_7_fu_1910_p4 <= p_Val2_66_7_fu_1897_p2(13 downto 6);
    p_Val2_68_1_128_fu_2788_p3 <= 
        ap_const_lv8_80 when (underflow_1_reg_3923(0) = '1') else 
        p_Val2_68_1_reg_3636;
    p_Val2_68_1_fu_1445_p2 <= std_logic_vector(unsigned(p_Val2_67_1_fu_1424_p4) + unsigned(tmp_297_1_fu_1434_p1));
    p_Val2_68_2_129_fu_2818_p3 <= 
        ap_const_lv8_80 when (underflow_2_reg_3948(0) = '1') else 
        p_Val2_68_2_reg_3673;
    p_Val2_68_2_fu_1526_p2 <= std_logic_vector(unsigned(p_Val2_67_2_fu_1505_p4) + unsigned(tmp_297_2_fu_1515_p1));
    p_Val2_68_3_130_fu_2848_p3 <= 
        ap_const_lv8_80 when (underflow_3_reg_3973(0) = '1') else 
        p_Val2_68_3_reg_3710;
    p_Val2_68_3_fu_1607_p2 <= std_logic_vector(unsigned(p_Val2_67_3_fu_1586_p4) + unsigned(tmp_297_3_fu_1596_p1));
    p_Val2_68_4_131_fu_2878_p3 <= 
        ap_const_lv8_80 when (underflow_4_reg_3998(0) = '1') else 
        p_Val2_68_4_reg_3747;
    p_Val2_68_4_fu_1688_p2 <= std_logic_vector(unsigned(p_Val2_67_4_fu_1667_p4) + unsigned(tmp_297_4_fu_1677_p1));
    p_Val2_68_5_132_fu_2908_p3 <= 
        ap_const_lv8_80 when (underflow_5_reg_4023(0) = '1') else 
        p_Val2_68_5_reg_3784;
    p_Val2_68_5_fu_1769_p2 <= std_logic_vector(unsigned(p_Val2_67_5_fu_1748_p4) + unsigned(tmp_297_5_fu_1758_p1));
    p_Val2_68_6_133_fu_2938_p3 <= 
        ap_const_lv8_80 when (underflow_6_reg_4048(0) = '1') else 
        p_Val2_68_6_reg_3821;
    p_Val2_68_6_fu_1850_p2 <= std_logic_vector(unsigned(p_Val2_67_6_fu_1829_p4) + unsigned(tmp_297_6_fu_1839_p1));
    p_Val2_68_7_134_fu_2968_p3 <= 
        ap_const_lv8_80 when (underflow_7_reg_4073(0) = '1') else 
        p_Val2_68_7_reg_3858;
    p_Val2_68_7_fu_1931_p2 <= std_logic_vector(unsigned(p_Val2_67_7_fu_1910_p4) + unsigned(tmp_297_7_fu_1920_p1));
    p_Val2_68_mux_1_fu_2782_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_1_reg_3928(0) = '1') else 
        p_Val2_68_1_reg_3636;
    p_Val2_68_mux_2_fu_2812_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_2_reg_3953(0) = '1') else 
        p_Val2_68_2_reg_3673;
    p_Val2_68_mux_3_fu_2842_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_3_reg_3978(0) = '1') else 
        p_Val2_68_3_reg_3710;
    p_Val2_68_mux_4_fu_2872_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_4_reg_4003(0) = '1') else 
        p_Val2_68_4_reg_3747;
    p_Val2_68_mux_5_fu_2902_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_5_reg_4028(0) = '1') else 
        p_Val2_68_5_reg_3784;
    p_Val2_68_mux_6_fu_2932_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_6_reg_4053(0) = '1') else 
        p_Val2_68_6_reg_3821;
    p_Val2_68_mux_7_fu_2962_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_7_reg_4078(0) = '1') else 
        p_Val2_68_7_reg_3858;
    p_Val2_68_mux_fu_2752_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_reg_3903(0) = '1') else 
        p_Val2_6_reg_3599;
    p_Val2_6_fu_1364_p2 <= std_logic_vector(unsigned(p_Val2_5_fu_1343_p4) + unsigned(tmp_192_fu_1353_p1));
    p_Val2_s_127_fu_2758_p3 <= 
        ap_const_lv8_80 when (underflow_reg_3898(0) = '1') else 
        p_Val2_6_reg_3599;
    p_Val2_s_fu_1186_p0 <= weight_0_V_load_reg_3422;
    p_Val2_s_fu_1186_p1 <= OP2_V_fu_1183_p1(8 - 1 downto 0);
    p_Val2_s_fu_1186_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_fu_1186_p0) * signed(p_Val2_s_fu_1186_p1))), 16));
    p_not_i_i_1_fu_2111_p2 <= (deleted_zeros_1_fu_2081_p3 xor ap_const_lv1_1);
    p_not_i_i_2_fu_2208_p2 <= (deleted_zeros_2_fu_2178_p3 xor ap_const_lv1_1);
    p_not_i_i_3_fu_2305_p2 <= (deleted_zeros_3_fu_2275_p3 xor ap_const_lv1_1);
    p_not_i_i_4_fu_2402_p2 <= (deleted_zeros_4_fu_2372_p3 xor ap_const_lv1_1);
    p_not_i_i_5_fu_2499_p2 <= (deleted_zeros_5_fu_2469_p3 xor ap_const_lv1_1);
    p_not_i_i_6_fu_2596_p2 <= (deleted_zeros_6_fu_2566_p3 xor ap_const_lv1_1);
    p_not_i_i_7_fu_2693_p2 <= (deleted_zeros_7_fu_2663_p3 xor ap_const_lv1_1);
    p_not_i_i_fu_2014_p2 <= (deleted_zeros_fu_1984_p3 xor ap_const_lv1_1);
    p_shl11_cast_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_323_fu_1109_p3),8));
    p_shl12_cast_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_319_fu_1058_p3),10));
    p_shl13_cast1_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_320_fu_1070_p3),8));
    p_shl13_cast_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_320_fu_1070_p3),10));
    p_shl14_cast_fu_3139_p3 <= (tmp_310_reg_4129 & ap_const_lv4_0);
    p_shl15_cast_fu_3153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_417_fu_3146_p3),12));
    p_shl16_cast_fu_3089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_306_fu_3081_p3),8));
    p_shl17_cast_fu_3101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_307_fu_3093_p3),8));
    p_shl1_cast_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_415_fu_877_p3),12));
    p_shl2_cast_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_812_p3),8));
    p_shl3_cast_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_824_p3),8));
    p_shl4_cast_fu_1000_p3 <= (tmp_316_fu_995_p2 & ap_const_lv4_0);
    p_shl5_cast_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_419_fu_1008_p3),15));
    p_shl6_cast_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_313_fu_965_p3),11));
    p_shl7_cast_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_314_fu_977_p3),11));
    p_shl8_cast_fu_1132_p3 <= (tmp_325_fu_1127_p2 & ap_const_lv4_0);
    p_shl9_cast_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_420_fu_1140_p3),12));
    p_shl_cast_fu_870_p3 <= (tmp_303_reg_3258 & ap_const_lv4_0);
    this_assign_1_1_fu_2794_p3 <= 
        p_Val2_68_mux_1_fu_2782_p3 when (underflow_not_1_fu_2777_p2(0) = '1') else 
        p_Val2_68_1_128_fu_2788_p3;
    this_assign_1_2_fu_2824_p3 <= 
        p_Val2_68_mux_2_fu_2812_p3 when (underflow_not_2_fu_2807_p2(0) = '1') else 
        p_Val2_68_2_129_fu_2818_p3;
    this_assign_1_3_fu_2854_p3 <= 
        p_Val2_68_mux_3_fu_2842_p3 when (underflow_not_3_fu_2837_p2(0) = '1') else 
        p_Val2_68_3_130_fu_2848_p3;
    this_assign_1_4_fu_2884_p3 <= 
        p_Val2_68_mux_4_fu_2872_p3 when (underflow_not_4_fu_2867_p2(0) = '1') else 
        p_Val2_68_4_131_fu_2878_p3;
    this_assign_1_5_fu_2914_p3 <= 
        p_Val2_68_mux_5_fu_2902_p3 when (underflow_not_5_fu_2897_p2(0) = '1') else 
        p_Val2_68_5_132_fu_2908_p3;
    this_assign_1_6_fu_2944_p3 <= 
        p_Val2_68_mux_6_fu_2932_p3 when (underflow_not_6_fu_2927_p2(0) = '1') else 
        p_Val2_68_6_133_fu_2938_p3;
    this_assign_1_7_fu_2974_p3 <= 
        p_Val2_68_mux_7_fu_2962_p3 when (underflow_not_7_fu_2957_p2(0) = '1') else 
        p_Val2_68_7_134_fu_2968_p3;
    this_assign_1_fu_2764_p3 <= 
        p_Val2_68_mux_fu_2752_p3 when (underflow_not_fu_2747_p2(0) = '1') else 
        p_Val2_s_127_fu_2758_p3;
    tmp10_fu_2863_p2 <= (brmerge40_demorgan_i_19_reg_3993 or tmp_306_4_reg_3988);
    tmp11_demorgan_fu_2526_p2 <= (p_38_i_i_5_fu_2494_p2 or brmerge40_demorgan_i_20_fu_2521_p2);
    tmp11_fu_2532_p2 <= (tmp11_demorgan_fu_2526_p2 xor ap_const_lv1_1);
    tmp12_fu_2893_p2 <= (brmerge40_demorgan_i_20_reg_4018 or tmp_306_5_reg_4013);
    tmp13_demorgan_fu_2623_p2 <= (p_38_i_i_6_fu_2591_p2 or brmerge40_demorgan_i_21_fu_2618_p2);
    tmp13_fu_2629_p2 <= (tmp13_demorgan_fu_2623_p2 xor ap_const_lv1_1);
    tmp14_fu_2923_p2 <= (brmerge40_demorgan_i_21_reg_4043 or tmp_306_6_reg_4038);
    tmp15_demorgan_fu_2720_p2 <= (p_38_i_i_7_fu_2688_p2 or brmerge40_demorgan_i_22_fu_2715_p2);
    tmp15_fu_2726_p2 <= (tmp15_demorgan_fu_2720_p2 xor ap_const_lv1_1);
    tmp16_fu_2953_p2 <= (brmerge40_demorgan_i_22_reg_4068 or tmp_306_7_reg_4063);
    tmp1_demorgan_fu_2041_p2 <= (p_38_i_i_fu_2009_p2 or brmerge40_demorgan_i_fu_2036_p2);
    tmp1_fu_2047_p2 <= (tmp1_demorgan_fu_2041_p2 xor ap_const_lv1_1);
    tmp2_fu_2743_p2 <= (brmerge40_demorgan_i_reg_3893 or tmp_195_reg_3888);
    tmp3_demorgan_fu_2138_p2 <= (p_38_i_i_1_fu_2106_p2 or brmerge40_demorgan_i_23_fu_2133_p2);
    tmp3_fu_2144_p2 <= (tmp3_demorgan_fu_2138_p2 xor ap_const_lv1_1);
    tmp4_fu_2773_p2 <= (brmerge40_demorgan_i_23_reg_3918 or tmp_306_1_reg_3913);
    tmp5_demorgan_fu_2235_p2 <= (p_38_i_i_2_fu_2203_p2 or brmerge40_demorgan_i_17_fu_2230_p2);
    tmp5_fu_2241_p2 <= (tmp5_demorgan_fu_2235_p2 xor ap_const_lv1_1);
    tmp6_fu_2803_p2 <= (brmerge40_demorgan_i_17_reg_3943 or tmp_306_2_reg_3938);
    tmp7_demorgan_fu_2332_p2 <= (p_38_i_i_3_fu_2300_p2 or brmerge40_demorgan_i_18_fu_2327_p2);
    tmp7_fu_2338_p2 <= (tmp7_demorgan_fu_2332_p2 xor ap_const_lv1_1);
    tmp8_fu_2833_p2 <= (brmerge40_demorgan_i_18_reg_3968 or tmp_306_3_reg_3963);
    tmp9_demorgan_fu_2429_p2 <= (p_38_i_i_4_fu_2397_p2 or brmerge40_demorgan_i_19_fu_2424_p2);
    tmp9_fu_2435_p2 <= (tmp9_demorgan_fu_2429_p2 xor ap_const_lv1_1);
    tmp_184_mid2_cast_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_184_mid2_fu_848_p3),8));
    tmp_184_mid2_fu_848_p3 <= 
        h_17_fu_842_p2 when (exitcond32_mid_reg_3228(0) = '1') else 
        h_mid_fu_779_p3;
    tmp_185_cast1_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_618),12));
    tmp_185_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_618),15));
    tmp_186_cast_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_w_mid2_reg_3233),12));
    tmp_187_mid2_cast_fu_3124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_187_mid2_fu_3117_p3),8));
    tmp_187_mid2_fu_3117_p3 <= 
        h_7_fu_3111_p2 when (exitcond_mid_reg_4098(0) = '1') else 
        h5_mid_fu_3053_p3;
    tmp_188_cast_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_630),10));
    tmp_189_cast_fu_3163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp1_iter1_w6_mid2_reg_4103),12));
    tmp_191_fu_1319_p3 <= (ShuffleConvs_1_Downs_39_reg_3472 & ap_const_lv6_0);
    tmp_192_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_422_reg_3477),8));
    tmp_193_fu_1378_p2 <= (tmp_424_fu_1370_p3 xor ap_const_lv1_1);
    tmp_194_fu_1991_p2 <= (tmp_425_fu_1967_p3 xor ap_const_lv1_1);
    tmp_195_fu_2025_p2 <= (tmp_421_reg_3592 xor ap_const_lv1_1);
        tmp_212_cast_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_191_fu_1319_p3),16));

        tmp_293_1_cast_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_1_fu_1400_p3),16));

    tmp_293_1_fu_1400_p3 <= (ShuffleConvs_1_Downs_40_reg_3487 & ap_const_lv6_0);
        tmp_293_2_cast_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_2_fu_1481_p3),16));

    tmp_293_2_fu_1481_p3 <= (ShuffleConvs_1_Downs_41_reg_3502 & ap_const_lv6_0);
        tmp_293_3_cast_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_3_fu_1562_p3),16));

    tmp_293_3_fu_1562_p3 <= (ShuffleConvs_1_Downs_42_reg_3517 & ap_const_lv6_0);
        tmp_293_4_cast_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_4_fu_1643_p3),16));

    tmp_293_4_fu_1643_p3 <= (ShuffleConvs_1_Downs_43_reg_3532 & ap_const_lv6_0);
        tmp_293_5_cast_fu_1731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_5_fu_1724_p3),16));

    tmp_293_5_fu_1724_p3 <= (ShuffleConvs_1_Downs_44_reg_3547 & ap_const_lv6_0);
        tmp_293_6_cast_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_6_fu_1805_p3),16));

    tmp_293_6_fu_1805_p3 <= (ShuffleConvs_1_Downs_45_reg_3562 & ap_const_lv6_0);
        tmp_293_7_cast_fu_1893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_293_7_fu_1886_p3),16));

    tmp_293_7_fu_1886_p3 <= (ShuffleConvs_1_Downs_46_reg_3577 & ap_const_lv6_0);
    tmp_297_1_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_427_reg_3492),8));
    tmp_297_2_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_432_reg_3507),8));
    tmp_297_3_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_437_reg_3522),8));
    tmp_297_4_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_442_reg_3537),8));
    tmp_297_5_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_447_reg_3552),8));
    tmp_297_6_fu_1839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_452_reg_3567),8));
    tmp_297_7_fu_1920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_457_reg_3582),8));
    tmp_301_1_fu_1459_p2 <= (tmp_429_fu_1451_p3 xor ap_const_lv1_1);
    tmp_301_2_fu_1540_p2 <= (tmp_434_fu_1532_p3 xor ap_const_lv1_1);
    tmp_301_3_fu_1621_p2 <= (tmp_439_fu_1613_p3 xor ap_const_lv1_1);
    tmp_301_4_fu_1702_p2 <= (tmp_444_fu_1694_p3 xor ap_const_lv1_1);
    tmp_301_5_fu_1783_p2 <= (tmp_449_fu_1775_p3 xor ap_const_lv1_1);
    tmp_301_6_fu_1864_p2 <= (tmp_454_fu_1856_p3 xor ap_const_lv1_1);
    tmp_301_7_fu_1945_p2 <= (tmp_459_fu_1937_p3 xor ap_const_lv1_1);
    tmp_301_fu_836_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_832_p1) + unsigned(p_shl2_cast_fu_820_p1));
    tmp_302_fu_745_p2 <= (exitcond32_mid_fu_739_p2 or exitcond_flatten8_fu_721_p2);
    tmp_303_fu_859_p2 <= std_logic_vector(unsigned(tmp_301_fu_836_p2) + unsigned(tmp_184_mid2_cast_fu_855_p1));
    tmp_304_1_fu_2088_p2 <= (tmp_430_fu_2064_p3 xor ap_const_lv1_1);
    tmp_304_2_fu_2185_p2 <= (tmp_435_fu_2161_p3 xor ap_const_lv1_1);
    tmp_304_3_fu_2282_p2 <= (tmp_440_fu_2258_p3 xor ap_const_lv1_1);
    tmp_304_4_fu_2379_p2 <= (tmp_445_fu_2355_p3 xor ap_const_lv1_1);
    tmp_304_5_fu_2476_p2 <= (tmp_450_fu_2452_p3 xor ap_const_lv1_1);
    tmp_304_6_fu_2573_p2 <= (tmp_455_fu_2549_p3 xor ap_const_lv1_1);
    tmp_304_7_fu_2670_p2 <= (tmp_460_fu_2646_p3 xor ap_const_lv1_1);
    tmp_304_fu_888_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_884_p1) + unsigned(p_shl_cast_fu_870_p3));
    tmp_305_fu_897_p2 <= std_logic_vector(unsigned(tmp_304_fu_888_p2) + unsigned(tmp_186_cast_fu_894_p1));
    tmp_306_1_fu_2122_p2 <= (tmp_426_reg_3629 xor ap_const_lv1_1);
    tmp_306_2_fu_2219_p2 <= (tmp_431_reg_3666 xor ap_const_lv1_1);
    tmp_306_3_fu_2316_p2 <= (tmp_436_reg_3703 xor ap_const_lv1_1);
    tmp_306_4_fu_2413_p2 <= (tmp_441_reg_3740 xor ap_const_lv1_1);
    tmp_306_5_fu_2510_p2 <= (tmp_446_reg_3777 xor ap_const_lv1_1);
    tmp_306_6_fu_2607_p2 <= (tmp_451_reg_3814 xor ap_const_lv1_1);
    tmp_306_7_fu_2704_p2 <= (tmp_456_reg_3851 xor ap_const_lv1_1);
    tmp_306_fu_3081_p3 <= (newIndex7_mid2_v_fu_3071_p4 & ap_const_lv4_0);
    tmp_307_fu_3093_p3 <= (newIndex7_mid2_v_fu_3071_p4 & ap_const_lv1_0);
    tmp_308_fu_3105_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_3101_p1) + unsigned(p_shl16_cast_fu_3089_p1));
    tmp_309_fu_3019_p2 <= (exitcond_mid_fu_3013_p2 or exitcond_flatten10_fu_2995_p2);
    tmp_310_fu_3128_p2 <= std_logic_vector(unsigned(tmp_308_fu_3105_p2) + unsigned(tmp_187_mid2_cast_fu_3124_p1));
    tmp_311_fu_3157_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_3153_p1) + unsigned(p_shl14_cast_fu_3139_p3));
    tmp_312_fu_3166_p2 <= std_logic_vector(unsigned(tmp_311_fu_3157_p2) + unsigned(tmp_189_cast_fu_3163_p1));
    tmp_313_fu_965_p3 <= (ci_reg_630 & ap_const_lv4_0);
    tmp_314_fu_977_p3 <= (ci_reg_630 & ap_const_lv1_0);
    tmp_315_fu_989_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_973_p1) + unsigned(p_shl7_cast_fu_985_p1));
    tmp_316_fu_995_p2 <= std_logic_vector(unsigned(tmp_cast_reg_3283) + unsigned(tmp_315_fu_989_p2));
    tmp_317_fu_1020_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1000_p3) + unsigned(p_shl5_cast_fu_1016_p1));
    tmp_318_fu_1026_p2 <= std_logic_vector(unsigned(tmp_185_cast_reg_3296) + unsigned(tmp_317_fu_1020_p2));
    tmp_319_fu_1058_p3 <= (newIndex8_fu_1048_p4 & ap_const_lv6_0);
    tmp_320_fu_1070_p3 <= (newIndex8_fu_1048_p4 & ap_const_lv4_0);
    tmp_321_fu_1086_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1066_p1) - unsigned(p_shl13_cast_fu_1082_p1));
    tmp_322_fu_1092_p2 <= std_logic_vector(unsigned(tmp_188_cast_reg_3314) + unsigned(tmp_321_fu_1086_p2));
    tmp_323_fu_1109_p3 <= (newIndex8_fu_1048_p4 & ap_const_lv1_0);
    tmp_324_fu_1121_p2 <= std_logic_vector(unsigned(p_shl13_cast1_fu_1078_p1) + unsigned(p_shl11_cast_fu_1117_p1));
    tmp_325_fu_1127_p2 <= std_logic_vector(unsigned(tmp_cast4_reg_3278) + unsigned(tmp_324_fu_1121_p2));
    tmp_326_fu_1152_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_1132_p3) + unsigned(p_shl9_cast_fu_1148_p1));
    tmp_327_fu_1158_p2 <= std_logic_vector(unsigned(tmp_185_cast1_reg_3291) + unsigned(tmp_326_fu_1152_p2));
    tmp_351_cast_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_305_fu_897_p2),64));
    tmp_360_cast_fu_3172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_312_fu_3166_p2),64));
    tmp_368_cast_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_318_fu_1026_p2),64));
        tmp_372_cast_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_fu_1092_p2),64));

    tmp_380_cast_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_327_reg_3372),64));
    tmp_414_fu_798_p1 <= tmp_mid2_v_fu_786_p3(3 - 1 downto 0);
    tmp_415_fu_877_p3 <= (tmp_303_reg_3258 & ap_const_lv1_0);
    tmp_416_fu_3067_p1 <= arrayNo_mid2_v_fu_3060_p3(3 - 1 downto 0);
    tmp_417_fu_3146_p3 <= (tmp_310_reg_4129 & ap_const_lv1_0);
    tmp_418_fu_3205_p3 <= tmp_196_fu_3184_p10(7 downto 7);
    tmp_419_fu_1008_p3 <= (tmp_316_fu_995_p2 & ap_const_lv1_0);
    tmp_420_fu_1140_p3 <= (tmp_325_fu_1127_p2 & ap_const_lv1_0);
    tmp_423_fu_1356_p3 <= p_Val2_4_fu_1330_p2(13 downto 13);
    tmp_424_fu_1370_p3 <= p_Val2_6_fu_1364_p2(7 downto 7);
    tmp_425_fu_1967_p3 <= p_Val2_4_reg_3587(14 downto 14);
    tmp_428_fu_1437_p3 <= p_Val2_66_1_fu_1411_p2(13 downto 13);
    tmp_429_fu_1451_p3 <= p_Val2_68_1_fu_1445_p2(7 downto 7);
    tmp_430_fu_2064_p3 <= p_Val2_66_1_reg_3624(14 downto 14);
    tmp_433_fu_1518_p3 <= p_Val2_66_2_fu_1492_p2(13 downto 13);
    tmp_434_fu_1532_p3 <= p_Val2_68_2_fu_1526_p2(7 downto 7);
    tmp_435_fu_2161_p3 <= p_Val2_66_2_reg_3661(14 downto 14);
    tmp_438_fu_1599_p3 <= p_Val2_66_3_fu_1573_p2(13 downto 13);
    tmp_439_fu_1613_p3 <= p_Val2_68_3_fu_1607_p2(7 downto 7);
    tmp_440_fu_2258_p3 <= p_Val2_66_3_reg_3698(14 downto 14);
    tmp_443_fu_1680_p3 <= p_Val2_66_4_fu_1654_p2(13 downto 13);
    tmp_444_fu_1694_p3 <= p_Val2_68_4_fu_1688_p2(7 downto 7);
    tmp_445_fu_2355_p3 <= p_Val2_66_4_reg_3735(14 downto 14);
    tmp_448_fu_1761_p3 <= p_Val2_66_5_fu_1735_p2(13 downto 13);
    tmp_449_fu_1775_p3 <= p_Val2_68_5_fu_1769_p2(7 downto 7);
    tmp_450_fu_2452_p3 <= p_Val2_66_5_reg_3772(14 downto 14);
    tmp_453_fu_1842_p3 <= p_Val2_66_6_fu_1816_p2(13 downto 13);
    tmp_454_fu_1856_p3 <= p_Val2_68_6_fu_1850_p2(7 downto 7);
    tmp_455_fu_2549_p3 <= p_Val2_66_6_reg_3809(14 downto 14);
    tmp_458_fu_1923_p3 <= p_Val2_66_7_fu_1897_p2(13 downto 13);
    tmp_459_fu_1937_p3 <= p_Val2_68_7_fu_1931_p2(7 downto 7);
    tmp_460_fu_2646_p3 <= p_Val2_66_7_reg_3846(14 downto 14);
    tmp_cast4_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h1_reg_606),8));
    tmp_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h1_reg_606),11));
    tmp_fu_812_p3 <= (newIndex5_mid2_v_fu_802_p4 & ap_const_lv4_0);
    tmp_mid2_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_fu_786_p3),64));
    tmp_mid2_v_fu_786_p3 <= 
        co_19_fu_773_p2 when (exitcond_flatten8_reg_3222(0) = '1') else 
        co_phi_fu_564_p4;
    tmp_s_fu_824_p3 <= (newIndex5_mid2_v_fu_802_p4 & ap_const_lv1_0);
    underflow_1_fu_2150_p2 <= (tmp_426_reg_3629 and tmp3_fu_2144_p2);
    underflow_2_fu_2247_p2 <= (tmp_431_reg_3666 and tmp5_fu_2241_p2);
    underflow_3_fu_2344_p2 <= (tmp_436_reg_3703 and tmp7_fu_2338_p2);
    underflow_4_fu_2441_p2 <= (tmp_441_reg_3740 and tmp9_fu_2435_p2);
    underflow_5_fu_2538_p2 <= (tmp_446_reg_3777 and tmp11_fu_2532_p2);
    underflow_6_fu_2635_p2 <= (tmp_451_reg_3814 and tmp13_fu_2629_p2);
    underflow_7_fu_2732_p2 <= (tmp_456_reg_3851 and tmp15_fu_2726_p2);
    underflow_fu_2053_p2 <= (tmp_421_reg_3592 and tmp1_fu_2047_p2);
    underflow_not_1_fu_2777_p2 <= (tmp4_fu_2773_p2 or p_38_i_i_1_reg_3908);
    underflow_not_2_fu_2807_p2 <= (tmp6_fu_2803_p2 or p_38_i_i_2_reg_3933);
    underflow_not_3_fu_2837_p2 <= (tmp8_fu_2833_p2 or p_38_i_i_3_reg_3958);
    underflow_not_4_fu_2867_p2 <= (tmp10_fu_2863_p2 or p_38_i_i_4_reg_3983);
    underflow_not_5_fu_2897_p2 <= (tmp12_fu_2893_p2 or p_38_i_i_5_reg_4008);
    underflow_not_6_fu_2927_p2 <= (tmp14_fu_2923_p2 or p_38_i_i_6_reg_4033);
    underflow_not_7_fu_2957_p2 <= (tmp16_fu_2953_p2 or p_38_i_i_7_reg_4058);
    underflow_not_fu_2747_p2 <= (tmp2_fu_2743_p2 or p_38_i_i_reg_3883);
    w6_mid2_fu_3025_p3 <= 
        ap_const_lv5_1 when (tmp_309_fu_3019_p2(0) = '1') else 
        w6_phi_fu_702_p4;

    w6_phi_fu_702_p4_assign_proc : process(w6_reg_698, exitcond_flatten9_reg_4083, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, w_21_fu_3134_p2, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten9_reg_4083) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            w6_phi_fu_702_p4 <= w_21_fu_3134_p2;
        else 
            w6_phi_fu_702_p4 <= w6_reg_698;
        end if; 
    end process;

    w_19_fu_865_p2 <= std_logic_vector(unsigned(w_mid2_reg_3233) + unsigned(ap_const_lv5_1));
    w_20_fu_1036_p2 <= std_logic_vector(unsigned(w2_reg_618) + unsigned(ap_const_lv5_1));
    w_21_fu_3134_p2 <= std_logic_vector(unsigned(w6_mid2_reg_4103) + unsigned(ap_const_lv5_1));
    w_mid2_fu_751_p3 <= 
        ap_const_lv5_1 when (tmp_302_fu_745_p2(0) = '1') else 
        w_phi_fu_599_p4;

    w_phi_fu_599_p4_assign_proc : process(w_reg_595, exitcond_flatten_reg_3213, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w_19_fu_865_p2, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_flatten_reg_3213 = ap_const_lv1_0) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            w_phi_fu_599_p4 <= w_19_fu_865_p2;
        else 
            w_phi_fu_599_p4 <= w_reg_595;
        end if; 
    end process;

    weight_0_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_0_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_0_V_ce0 <= ap_const_logic_1;
        else 
            weight_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_1_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_1_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_1_V_ce0 <= ap_const_logic_1;
        else 
            weight_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_2_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_2_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_2_V_ce0 <= ap_const_logic_1;
        else 
            weight_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_3_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_3_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_3_V_ce0 <= ap_const_logic_1;
        else 
            weight_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_4_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_4_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_4_V_ce0 <= ap_const_logic_1;
        else 
            weight_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_5_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_5_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_5_V_ce0 <= ap_const_logic_1;
        else 
            weight_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_6_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_6_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_6_V_ce0 <= ap_const_logic_1;
        else 
            weight_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_7_V_address0 <= tmp_372_cast_fu_1097_p1(9 - 1 downto 0);

    weight_7_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_7_V_ce0 <= ap_const_logic_1;
        else 
            weight_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
