// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv1_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        m_axi_weight_V_AWVALID,
        m_axi_weight_V_AWREADY,
        m_axi_weight_V_AWADDR,
        m_axi_weight_V_AWID,
        m_axi_weight_V_AWLEN,
        m_axi_weight_V_AWSIZE,
        m_axi_weight_V_AWBURST,
        m_axi_weight_V_AWLOCK,
        m_axi_weight_V_AWCACHE,
        m_axi_weight_V_AWPROT,
        m_axi_weight_V_AWQOS,
        m_axi_weight_V_AWREGION,
        m_axi_weight_V_AWUSER,
        m_axi_weight_V_WVALID,
        m_axi_weight_V_WREADY,
        m_axi_weight_V_WDATA,
        m_axi_weight_V_WSTRB,
        m_axi_weight_V_WLAST,
        m_axi_weight_V_WID,
        m_axi_weight_V_WUSER,
        m_axi_weight_V_ARVALID,
        m_axi_weight_V_ARREADY,
        m_axi_weight_V_ARADDR,
        m_axi_weight_V_ARID,
        m_axi_weight_V_ARLEN,
        m_axi_weight_V_ARSIZE,
        m_axi_weight_V_ARBURST,
        m_axi_weight_V_ARLOCK,
        m_axi_weight_V_ARCACHE,
        m_axi_weight_V_ARPROT,
        m_axi_weight_V_ARQOS,
        m_axi_weight_V_ARREGION,
        m_axi_weight_V_ARUSER,
        m_axi_weight_V_RVALID,
        m_axi_weight_V_RREADY,
        m_axi_weight_V_RDATA,
        m_axi_weight_V_RLAST,
        m_axi_weight_V_RID,
        m_axi_weight_V_RUSER,
        m_axi_weight_V_RRESP,
        m_axi_weight_V_BVALID,
        m_axi_weight_V_BREADY,
        m_axi_weight_V_BRESP,
        m_axi_weight_V_BID,
        m_axi_weight_V_BUSER,
        conv1_weight_V3,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv1_output_p_V_0_address0,
        conv1_output_p_V_0_ce0,
        conv1_output_p_V_0_we0,
        conv1_output_p_V_0_d0,
        conv1_output_p_V_0_q0,
        conv1_output_p_V_1_address0,
        conv1_output_p_V_1_ce0,
        conv1_output_p_V_1_we0,
        conv1_output_p_V_1_d0,
        conv1_output_p_V_1_q0,
        conv1_output_p_V_2_address0,
        conv1_output_p_V_2_ce0,
        conv1_output_p_V_2_we0,
        conv1_output_p_V_2_d0,
        conv1_output_p_V_2_q0,
        conv1_output_p_V_3_address0,
        conv1_output_p_V_3_ce0,
        conv1_output_p_V_3_we0,
        conv1_output_p_V_3_d0,
        conv1_output_p_V_3_q0,
        conv1_output_p_V_4_address0,
        conv1_output_p_V_4_ce0,
        conv1_output_p_V_4_we0,
        conv1_output_p_V_4_d0,
        conv1_output_p_V_4_q0,
        conv1_output_p_V_5_address0,
        conv1_output_p_V_5_ce0,
        conv1_output_p_V_5_we0,
        conv1_output_p_V_5_d0,
        conv1_output_p_V_5_q0,
        conv1_output_p_V_6_address0,
        conv1_output_p_V_6_ce0,
        conv1_output_p_V_6_we0,
        conv1_output_p_V_6_d0,
        conv1_output_p_V_6_q0,
        conv1_output_p_V_7_address0,
        conv1_output_p_V_7_ce0,
        conv1_output_p_V_7_we0,
        conv1_output_p_V_7_d0,
        conv1_output_p_V_7_q0
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_pp0_stage0 = 23'd2;
parameter    ap_ST_fsm_state15 = 23'd4;
parameter    ap_ST_fsm_state16 = 23'd8;
parameter    ap_ST_fsm_state17 = 23'd16;
parameter    ap_ST_fsm_state18 = 23'd32;
parameter    ap_ST_fsm_state19 = 23'd64;
parameter    ap_ST_fsm_state20 = 23'd128;
parameter    ap_ST_fsm_state21 = 23'd256;
parameter    ap_ST_fsm_state22 = 23'd512;
parameter    ap_ST_fsm_state23 = 23'd1024;
parameter    ap_ST_fsm_state24 = 23'd2048;
parameter    ap_ST_fsm_state25 = 23'd4096;
parameter    ap_ST_fsm_state26 = 23'd8192;
parameter    ap_ST_fsm_state27 = 23'd16384;
parameter    ap_ST_fsm_state28 = 23'd32768;
parameter    ap_ST_fsm_state29 = 23'd65536;
parameter    ap_ST_fsm_state30 = 23'd131072;
parameter    ap_ST_fsm_state31 = 23'd262144;
parameter    ap_ST_fsm_state32 = 23'd524288;
parameter    ap_ST_fsm_pp1_stage0 = 23'd1048576;
parameter    ap_ST_fsm_pp1_stage1 = 23'd2097152;
parameter    ap_ST_fsm_state37 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output   m_axi_weight_V_AWVALID;
input   m_axi_weight_V_AWREADY;
output  [31:0] m_axi_weight_V_AWADDR;
output  [0:0] m_axi_weight_V_AWID;
output  [31:0] m_axi_weight_V_AWLEN;
output  [2:0] m_axi_weight_V_AWSIZE;
output  [1:0] m_axi_weight_V_AWBURST;
output  [1:0] m_axi_weight_V_AWLOCK;
output  [3:0] m_axi_weight_V_AWCACHE;
output  [2:0] m_axi_weight_V_AWPROT;
output  [3:0] m_axi_weight_V_AWQOS;
output  [3:0] m_axi_weight_V_AWREGION;
output  [0:0] m_axi_weight_V_AWUSER;
output   m_axi_weight_V_WVALID;
input   m_axi_weight_V_WREADY;
output  [7:0] m_axi_weight_V_WDATA;
output  [0:0] m_axi_weight_V_WSTRB;
output   m_axi_weight_V_WLAST;
output  [0:0] m_axi_weight_V_WID;
output  [0:0] m_axi_weight_V_WUSER;
output   m_axi_weight_V_ARVALID;
input   m_axi_weight_V_ARREADY;
output  [31:0] m_axi_weight_V_ARADDR;
output  [0:0] m_axi_weight_V_ARID;
output  [31:0] m_axi_weight_V_ARLEN;
output  [2:0] m_axi_weight_V_ARSIZE;
output  [1:0] m_axi_weight_V_ARBURST;
output  [1:0] m_axi_weight_V_ARLOCK;
output  [3:0] m_axi_weight_V_ARCACHE;
output  [2:0] m_axi_weight_V_ARPROT;
output  [3:0] m_axi_weight_V_ARQOS;
output  [3:0] m_axi_weight_V_ARREGION;
output  [0:0] m_axi_weight_V_ARUSER;
input   m_axi_weight_V_RVALID;
output   m_axi_weight_V_RREADY;
input  [7:0] m_axi_weight_V_RDATA;
input   m_axi_weight_V_RLAST;
input  [0:0] m_axi_weight_V_RID;
input  [0:0] m_axi_weight_V_RUSER;
input  [1:0] m_axi_weight_V_RRESP;
input   m_axi_weight_V_BVALID;
output   m_axi_weight_V_BREADY;
input  [1:0] m_axi_weight_V_BRESP;
input  [0:0] m_axi_weight_V_BID;
input  [0:0] m_axi_weight_V_BUSER;
input  [31:0] conv1_weight_V3;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [11:0] conv1_output_p_V_0_address0;
output   conv1_output_p_V_0_ce0;
output   conv1_output_p_V_0_we0;
output  [7:0] conv1_output_p_V_0_d0;
input  [7:0] conv1_output_p_V_0_q0;
output  [11:0] conv1_output_p_V_1_address0;
output   conv1_output_p_V_1_ce0;
output   conv1_output_p_V_1_we0;
output  [7:0] conv1_output_p_V_1_d0;
input  [7:0] conv1_output_p_V_1_q0;
output  [11:0] conv1_output_p_V_2_address0;
output   conv1_output_p_V_2_ce0;
output   conv1_output_p_V_2_we0;
output  [7:0] conv1_output_p_V_2_d0;
input  [7:0] conv1_output_p_V_2_q0;
output  [11:0] conv1_output_p_V_3_address0;
output   conv1_output_p_V_3_ce0;
output   conv1_output_p_V_3_we0;
output  [7:0] conv1_output_p_V_3_d0;
input  [7:0] conv1_output_p_V_3_q0;
output  [11:0] conv1_output_p_V_4_address0;
output   conv1_output_p_V_4_ce0;
output   conv1_output_p_V_4_we0;
output  [7:0] conv1_output_p_V_4_d0;
input  [7:0] conv1_output_p_V_4_q0;
output  [11:0] conv1_output_p_V_5_address0;
output   conv1_output_p_V_5_ce0;
output   conv1_output_p_V_5_we0;
output  [7:0] conv1_output_p_V_5_d0;
input  [7:0] conv1_output_p_V_5_q0;
output  [11:0] conv1_output_p_V_6_address0;
output   conv1_output_p_V_6_ce0;
output   conv1_output_p_V_6_we0;
output  [7:0] conv1_output_p_V_6_d0;
input  [7:0] conv1_output_p_V_6_q0;
output  [11:0] conv1_output_p_V_7_address0;
output   conv1_output_p_V_7_ce0;
output   conv1_output_p_V_7_we0;
output  [7:0] conv1_output_p_V_7_d0;
input  [7:0] conv1_output_p_V_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg m_axi_weight_V_ARVALID;
reg m_axi_weight_V_RREADY;
reg bias_V_ce0;
reg[11:0] conv1_output_p_V_0_address0;
reg conv1_output_p_V_0_ce0;
reg conv1_output_p_V_0_we0;
reg[7:0] conv1_output_p_V_0_d0;
reg[11:0] conv1_output_p_V_1_address0;
reg conv1_output_p_V_1_ce0;
reg conv1_output_p_V_1_we0;
reg[7:0] conv1_output_p_V_1_d0;
reg[11:0] conv1_output_p_V_2_address0;
reg conv1_output_p_V_2_ce0;
reg conv1_output_p_V_2_we0;
reg[7:0] conv1_output_p_V_2_d0;
reg[11:0] conv1_output_p_V_3_address0;
reg conv1_output_p_V_3_ce0;
reg conv1_output_p_V_3_we0;
reg[7:0] conv1_output_p_V_3_d0;
reg[11:0] conv1_output_p_V_4_address0;
reg conv1_output_p_V_4_ce0;
reg conv1_output_p_V_4_we0;
reg[7:0] conv1_output_p_V_4_d0;
reg[11:0] conv1_output_p_V_5_address0;
reg conv1_output_p_V_5_ce0;
reg conv1_output_p_V_5_we0;
reg[7:0] conv1_output_p_V_5_d0;
reg[11:0] conv1_output_p_V_6_address0;
reg conv1_output_p_V_6_ce0;
reg conv1_output_p_V_6_we0;
reg[7:0] conv1_output_p_V_6_d0;
reg[11:0] conv1_output_p_V_7_address0;
reg conv1_output_p_V_7_ce0;
reg conv1_output_p_V_7_we0;
reg[7:0] conv1_output_p_V_7_d0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_3965;
reg    weight_V_blk_n_R;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten_reg_3965;
reg   [9:0] indvar_flatten11_reg_658;
reg   [4:0] i_reg_669;
reg   [5:0] indvar_flatten12_reg_681;
reg   [1:0] j_reg_692;
reg   [3:0] indvar_flatten_reg_704;
reg   [1:0] k_reg_716;
reg   [1:0] p_reg_728;
reg   [14:0] indvar_flatten13_reg_843;
reg   [4:0] i_2_reg_854;
reg   [11:0] indvar_flatten14_reg_865;
reg   [5:0] j_2_reg_876;
reg   [5:0] k_2_reg_887;
wire  signed [63:0] sext_fu_898_p1;
reg  signed [63:0] sext_reg_3960;
wire   [0:0] exitcond_flatten_fu_902_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
reg    ap_sig_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_state6_io;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_3965;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten_reg_3965;
wire   [9:0] indvar_flatten_next1_7_fu_908_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten16_fu_914_p2;
reg   [0:0] exitcond_flatten16_reg_3974;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten16_reg_3974;
wire   [5:0] indvar_flatten_next1_fu_926_p3;
wire   [4:0] tmp_mid2_v_fu_947_p3;
reg   [4:0] tmp_mid2_v_reg_3989;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] tmp_617_fu_954_p1;
reg   [2:0] tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter2_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter3_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter4_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter5_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter6_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter7_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter8_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter9_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter10_tmp_617_reg_3996;
reg   [2:0] ap_reg_pp0_iter11_tmp_617_reg_3996;
reg   [1:0] newIndex22_mid2_v_reg_4000;
wire   [0:0] not_exitcond_flatten_fu_968_p2;
reg   [0:0] not_exitcond_flatten_reg_4006;
wire   [0:0] exitcond_flatten17_fu_973_p2;
reg   [0:0] exitcond_flatten17_reg_4011;
wire   [0:0] exitcond_flatten_mid_fu_979_p2;
reg   [0:0] exitcond_flatten_mid_reg_4016;
wire   [0:0] tmp_511_fu_991_p2;
reg   [0:0] tmp_511_reg_4021;
wire   [1:0] tmp_254_mid2_fu_996_p3;
reg   [1:0] tmp_254_mid2_reg_4027;
wire   [3:0] indvar_flatten_op_fu_1004_p2;
reg   [3:0] indvar_flatten_op_reg_4034;
wire   [1:0] p_mid2_fu_1170_p3;
reg   [1:0] p_mid2_reg_4039;
wire   [1:0] tmp_257_mid2_fu_1178_p3;
reg   [1:0] tmp_257_mid2_reg_4045;
reg    ap_enable_reg_pp0_iter2;
wire   [63:0] tmp_517_fu_1190_p2;
reg   [63:0] tmp_517_reg_4050;
wire   [7:0] tmp_622_fu_1202_p1;
reg   [7:0] tmp_622_reg_4056;
wire   [5:0] tmp_623_fu_1206_p1;
reg   [5:0] tmp_623_reg_4061;
wire   [1:0] p_1_fu_1210_p2;
reg   [1:0] p_1_reg_4066;
wire   [3:0] indvar_flatten_next_fu_1216_p3;
reg   [31:0] weight_V_addr_reg_4076;
wire   [7:0] tmp_522_fu_1267_p2;
reg   [7:0] tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter4_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter5_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter6_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter7_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter8_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter9_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter10_tmp_522_reg_4082;
reg   [7:0] ap_reg_pp0_iter11_tmp_522_reg_4082;
reg   [7:0] weight_V_addr_read_reg_4087;
wire   [7:0] tmp_cast_fu_1290_p1;
reg   [7:0] tmp_cast_reg_4102;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond30_fu_1284_p2;
wire   [12:0] tmp_256_cast_fu_1300_p1;
reg   [12:0] tmp_256_cast_reg_4110;
wire    ap_CS_fsm_state17;
wire   [0:0] exitcond32_fu_1294_p2;
wire   [5:0] h_30_fu_1304_p2;
wire   [1:0] m_7_fu_1316_p2;
reg   [1:0] m_7_reg_4123;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_259_fu_1322_p1;
reg   [63:0] tmp_259_reg_4128;
wire   [0:0] exitcond34_fu_1310_p2;
wire   [7:0] tmp_261_cast_fu_1342_p1;
reg   [7:0] tmp_261_cast_reg_4133;
wire   [5:0] w_35_fu_1346_p2;
wire   [1:0] n_7_fu_1358_p2;
reg   [1:0] n_7_reg_4146;
wire    ap_CS_fsm_state19;
wire   [7:0] tmp_268_cast_fu_1364_p1;
reg   [7:0] tmp_268_cast_reg_4151;
wire   [0:0] exitcond37_fu_1352_p2;
wire   [12:0] tmp_270_cast_fu_1384_p1;
reg   [12:0] tmp_270_cast_reg_4156;
wire   [1:0] ci_9_fu_1394_p2;
reg   [1:0] ci_9_reg_4164;
wire    ap_CS_fsm_state20;
wire   [5:0] tmp_273_cast_fu_1400_p1;
reg   [5:0] tmp_273_cast_reg_4169;
wire   [0:0] exitcond38_fu_1388_p2;
reg   [11:0] input_V_addr_reg_4174;
wire   [12:0] tmp_547_fu_1556_p2;
reg   [12:0] tmp_547_reg_4182;
wire    ap_CS_fsm_state21;
wire   [0:0] exitcond39_fu_1475_p2;
wire   [7:0] tmp_634_fu_1615_p1;
reg   [7:0] tmp_634_reg_4187;
wire   [5:0] tmp_635_fu_1619_p1;
reg   [5:0] tmp_635_reg_4192;
wire   [4:0] co_36_7_fu_1623_p2;
reg   [4:0] co_36_7_reg_4197;
reg   [11:0] conv1_output_p_V_0_a_reg_4202;
wire    ap_CS_fsm_state22;
reg   [11:0] conv1_output_p_V_4_a_reg_4207;
reg   [11:0] conv1_output_p_V_7_a_reg_4212;
reg   [11:0] conv1_output_p_V_6_a_reg_4217;
reg   [11:0] conv1_output_p_V_2_a_reg_4222;
reg   [11:0] conv1_output_p_V_1_a_reg_4227;
reg   [11:0] conv1_output_p_V_3_a_reg_4272;
reg   [11:0] conv1_output_p_V_5_a_reg_4277;
reg   [7:0] input_V_load_reg_4282;
wire   [15:0] p_Val2_s_fu_1676_p2;
reg   [15:0] p_Val2_s_reg_4287;
wire    ap_CS_fsm_state23;
reg   [7:0] conv1_output_p_V_0_l_reg_4292;
reg   [0:0] tmp_637_reg_4297;
wire   [15:0] p_Val2_92_1_fu_1694_p2;
reg   [15:0] p_Val2_92_1_reg_4302;
reg   [7:0] conv1_output_p_V_1_l_reg_4307;
reg   [0:0] tmp_642_reg_4312;
wire   [15:0] p_Val2_92_2_fu_1712_p2;
reg   [15:0] p_Val2_92_2_reg_4317;
reg   [7:0] conv1_output_p_V_2_l_reg_4322;
reg   [0:0] tmp_647_reg_4327;
wire   [15:0] p_Val2_92_3_fu_1730_p2;
reg   [15:0] p_Val2_92_3_reg_4332;
reg   [7:0] conv1_output_p_V_3_l_reg_4337;
reg   [0:0] tmp_652_reg_4342;
wire   [15:0] p_Val2_92_4_fu_1748_p2;
reg   [15:0] p_Val2_92_4_reg_4347;
reg   [7:0] conv1_output_p_V_4_l_reg_4352;
reg   [0:0] tmp_657_reg_4357;
wire   [15:0] p_Val2_92_5_fu_1766_p2;
reg   [15:0] p_Val2_92_5_reg_4362;
reg   [7:0] conv1_output_p_V_5_l_reg_4367;
reg   [0:0] tmp_662_reg_4372;
wire   [15:0] p_Val2_92_6_fu_1784_p2;
reg   [15:0] p_Val2_92_6_reg_4377;
reg   [7:0] conv1_output_p_V_6_l_reg_4382;
reg   [0:0] tmp_667_reg_4387;
wire   [15:0] p_Val2_92_7_fu_1802_p2;
reg   [15:0] p_Val2_92_7_reg_4392;
reg   [7:0] conv1_output_p_V_7_l_reg_4397;
reg   [0:0] tmp_672_reg_4402;
wire   [15:0] p_Val2_8_fu_1827_p2;
reg   [15:0] p_Val2_8_reg_4407;
wire    ap_CS_fsm_state24;
reg   [0:0] tmp_636_reg_4412;
wire   [7:0] p_Val2_1_fu_1861_p2;
reg   [7:0] p_Val2_1_reg_4419;
wire   [0:0] tmp_639_fu_1867_p3;
reg   [0:0] tmp_639_reg_4425;
wire   [0:0] carry_s_fu_1881_p2;
reg   [0:0] carry_s_reg_4431;
reg   [1:0] tmp_280_reg_4438;
wire   [15:0] p_Val2_93_1_fu_1908_p2;
reg   [15:0] p_Val2_93_1_reg_4444;
reg   [0:0] tmp_641_reg_4449;
wire   [7:0] p_Val2_95_1_fu_1942_p2;
reg   [7:0] p_Val2_95_1_reg_4456;
wire   [0:0] tmp_644_fu_1948_p3;
reg   [0:0] tmp_644_reg_4462;
wire   [0:0] carry_15_1_fu_1962_p2;
reg   [0:0] carry_15_1_reg_4468;
reg   [1:0] tmp_281_reg_4475;
wire   [15:0] p_Val2_93_2_fu_1989_p2;
reg   [15:0] p_Val2_93_2_reg_4481;
reg   [0:0] tmp_646_reg_4486;
wire   [7:0] p_Val2_95_2_fu_2023_p2;
reg   [7:0] p_Val2_95_2_reg_4493;
wire   [0:0] tmp_649_fu_2029_p3;
reg   [0:0] tmp_649_reg_4499;
wire   [0:0] carry_15_2_fu_2043_p2;
reg   [0:0] carry_15_2_reg_4505;
reg   [1:0] tmp_282_reg_4512;
wire   [15:0] p_Val2_93_3_fu_2070_p2;
reg   [15:0] p_Val2_93_3_reg_4518;
reg   [0:0] tmp_651_reg_4523;
wire   [7:0] p_Val2_95_3_fu_2104_p2;
reg   [7:0] p_Val2_95_3_reg_4530;
wire   [0:0] tmp_654_fu_2110_p3;
reg   [0:0] tmp_654_reg_4536;
wire   [0:0] carry_15_3_fu_2124_p2;
reg   [0:0] carry_15_3_reg_4542;
reg   [1:0] tmp_283_reg_4549;
wire   [15:0] p_Val2_93_4_fu_2151_p2;
reg   [15:0] p_Val2_93_4_reg_4555;
reg   [0:0] tmp_656_reg_4560;
wire   [7:0] p_Val2_95_4_fu_2185_p2;
reg   [7:0] p_Val2_95_4_reg_4567;
wire   [0:0] tmp_659_fu_2191_p3;
reg   [0:0] tmp_659_reg_4573;
wire   [0:0] carry_15_4_fu_2205_p2;
reg   [0:0] carry_15_4_reg_4579;
reg   [1:0] tmp_284_reg_4586;
wire   [15:0] p_Val2_93_5_fu_2232_p2;
reg   [15:0] p_Val2_93_5_reg_4592;
reg   [0:0] tmp_661_reg_4597;
wire   [7:0] p_Val2_95_5_fu_2266_p2;
reg   [7:0] p_Val2_95_5_reg_4604;
wire   [0:0] tmp_664_fu_2272_p3;
reg   [0:0] tmp_664_reg_4610;
wire   [0:0] carry_15_5_fu_2286_p2;
reg   [0:0] carry_15_5_reg_4616;
reg   [1:0] tmp_285_reg_4623;
wire   [15:0] p_Val2_93_6_fu_2313_p2;
reg   [15:0] p_Val2_93_6_reg_4629;
reg   [0:0] tmp_666_reg_4634;
wire   [7:0] p_Val2_95_6_fu_2347_p2;
reg   [7:0] p_Val2_95_6_reg_4641;
wire   [0:0] tmp_669_fu_2353_p3;
reg   [0:0] tmp_669_reg_4647;
wire   [0:0] carry_15_6_fu_2367_p2;
reg   [0:0] carry_15_6_reg_4653;
reg   [1:0] tmp_286_reg_4660;
wire   [15:0] p_Val2_93_7_fu_2394_p2;
reg   [15:0] p_Val2_93_7_reg_4666;
reg   [0:0] tmp_671_reg_4671;
wire   [7:0] p_Val2_95_7_fu_2428_p2;
reg   [7:0] p_Val2_95_7_reg_4678;
wire   [0:0] tmp_674_fu_2434_p3;
reg   [0:0] tmp_674_reg_4684;
wire   [0:0] carry_15_7_fu_2448_p2;
reg   [0:0] carry_15_7_reg_4690;
reg   [1:0] tmp_287_reg_4697;
wire   [0:0] p_38_i_i_fu_2506_p2;
reg   [0:0] p_38_i_i_reg_4703;
wire    ap_CS_fsm_state25;
wire   [0:0] tmp_278_fu_2522_p2;
reg   [0:0] tmp_278_reg_4708;
wire   [0:0] brmerge40_demorgan_i_fu_2533_p2;
reg   [0:0] brmerge40_demorgan_i_reg_4713;
wire   [0:0] underflow_fu_2550_p2;
reg   [0:0] underflow_reg_4718;
wire   [0:0] brmerge_i_i_i_fu_2555_p2;
reg   [0:0] brmerge_i_i_i_reg_4723;
wire   [0:0] p_38_i_i_1_fu_2603_p2;
reg   [0:0] p_38_i_i_1_reg_4728;
wire   [0:0] tmp_473_1_fu_2619_p2;
reg   [0:0] tmp_473_1_reg_4733;
wire   [0:0] brmerge40_demorgan_i_41_fu_2630_p2;
reg   [0:0] brmerge40_demorgan_i_41_reg_4738;
wire   [0:0] underflow_1_fu_2647_p2;
reg   [0:0] underflow_1_reg_4743;
wire   [0:0] brmerge_i_i_i_1_fu_2652_p2;
reg   [0:0] brmerge_i_i_i_1_reg_4748;
wire   [0:0] p_38_i_i_2_fu_2700_p2;
reg   [0:0] p_38_i_i_2_reg_4753;
wire   [0:0] tmp_473_2_fu_2716_p2;
reg   [0:0] tmp_473_2_reg_4758;
wire   [0:0] brmerge40_demorgan_i_35_fu_2727_p2;
reg   [0:0] brmerge40_demorgan_i_35_reg_4763;
wire   [0:0] underflow_2_fu_2744_p2;
reg   [0:0] underflow_2_reg_4768;
wire   [0:0] brmerge_i_i_i_2_fu_2749_p2;
reg   [0:0] brmerge_i_i_i_2_reg_4773;
wire   [0:0] p_38_i_i_3_fu_2797_p2;
reg   [0:0] p_38_i_i_3_reg_4778;
wire   [0:0] tmp_473_3_fu_2813_p2;
reg   [0:0] tmp_473_3_reg_4783;
wire   [0:0] brmerge40_demorgan_i_36_fu_2824_p2;
reg   [0:0] brmerge40_demorgan_i_36_reg_4788;
wire   [0:0] underflow_3_fu_2841_p2;
reg   [0:0] underflow_3_reg_4793;
wire   [0:0] brmerge_i_i_i_3_fu_2846_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4798;
wire   [0:0] p_38_i_i_4_fu_2894_p2;
reg   [0:0] p_38_i_i_4_reg_4803;
wire   [0:0] tmp_473_4_fu_2910_p2;
reg   [0:0] tmp_473_4_reg_4808;
wire   [0:0] brmerge40_demorgan_i_37_fu_2921_p2;
reg   [0:0] brmerge40_demorgan_i_37_reg_4813;
wire   [0:0] underflow_4_fu_2938_p2;
reg   [0:0] underflow_4_reg_4818;
wire   [0:0] brmerge_i_i_i_4_fu_2943_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4823;
wire   [0:0] p_38_i_i_5_fu_2991_p2;
reg   [0:0] p_38_i_i_5_reg_4828;
wire   [0:0] tmp_473_5_fu_3007_p2;
reg   [0:0] tmp_473_5_reg_4833;
wire   [0:0] brmerge40_demorgan_i_38_fu_3018_p2;
reg   [0:0] brmerge40_demorgan_i_38_reg_4838;
wire   [0:0] underflow_5_fu_3035_p2;
reg   [0:0] underflow_5_reg_4843;
wire   [0:0] brmerge_i_i_i_5_fu_3040_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4848;
wire   [0:0] p_38_i_i_6_fu_3088_p2;
reg   [0:0] p_38_i_i_6_reg_4853;
wire   [0:0] tmp_473_6_fu_3104_p2;
reg   [0:0] tmp_473_6_reg_4858;
wire   [0:0] brmerge40_demorgan_i_39_fu_3115_p2;
reg   [0:0] brmerge40_demorgan_i_39_reg_4863;
wire   [0:0] underflow_6_fu_3132_p2;
reg   [0:0] underflow_6_reg_4868;
wire   [0:0] brmerge_i_i_i_6_fu_3137_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4873;
wire   [0:0] p_38_i_i_7_fu_3185_p2;
reg   [0:0] p_38_i_i_7_reg_4878;
wire   [0:0] tmp_473_7_fu_3201_p2;
reg   [0:0] tmp_473_7_reg_4883;
wire   [0:0] brmerge40_demorgan_i_40_fu_3212_p2;
reg   [0:0] brmerge40_demorgan_i_40_reg_4888;
wire   [0:0] underflow_7_fu_3229_p2;
reg   [0:0] underflow_7_reg_4893;
wire   [0:0] brmerge_i_i_i_7_fu_3234_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4898;
wire   [0:0] exitcond31_fu_3480_p2;
wire    ap_CS_fsm_state27;
wire   [4:0] i_7_fu_3486_p2;
reg   [4:0] i_7_reg_4907;
wire   [2:0] tmp_624_fu_3497_p1;
reg   [2:0] tmp_624_reg_4912;
wire   [7:0] tmp_525_fu_3535_p2;
reg   [7:0] tmp_525_reg_4917;
reg   [4:0] bias_V_addr_reg_4922;
wire   [12:0] tmp_534_fu_3576_p2;
reg   [12:0] tmp_534_reg_4930;
wire    ap_CS_fsm_state28;
wire   [0:0] exitcond33_fu_3541_p2;
reg   [11:0] conv1_output_p_V_0_a_1_reg_4938;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond36_fu_3582_p2;
reg   [11:0] conv1_output_p_V_4_a_1_reg_4943;
reg   [11:0] conv1_output_p_V_7_a_1_reg_4948;
reg   [11:0] conv1_output_p_V_6_a_1_reg_4953;
reg   [11:0] conv1_output_p_V_2_a_1_reg_4958;
reg   [11:0] conv1_output_p_V_1_a_1_reg_4963;
reg   [11:0] conv1_output_p_V_3_a_1_reg_4968;
reg   [11:0] conv1_output_p_V_5_a_1_reg_4973;
wire   [5:0] j_7_fu_3609_p2;
reg   [0:0] isneg_reg_4983;
wire    ap_CS_fsm_state30;
wire   [7:0] p_Val2_7_fu_3658_p2;
reg   [7:0] p_Val2_7_reg_4990;
reg   [0:0] newsignbit_reg_4996;
wire   [5:0] k_6_fu_3726_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] exitcond_flatten18_fu_3732_p2;
reg   [0:0] exitcond_flatten18_reg_5008;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state33_pp1_stage0_iter0;
wire    ap_block_state35_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_flag00011001;
wire   [14:0] indvar_flatten_next2_1_fu_3738_p2;
reg   [14:0] indvar_flatten_next2_1_reg_5012;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] j_2_mid_fu_3756_p3;
reg   [5:0] j_2_mid_reg_5017;
wire   [4:0] arrayNo8_mid2_v_fu_3764_p3;
reg   [4:0] arrayNo8_mid2_v_reg_5023;
wire   [2:0] tmp_625_fu_3772_p1;
reg   [2:0] tmp_625_reg_5028;
reg   [2:0] ap_reg_pp1_iter1_tmp_625_reg_5028;
reg   [1:0] newIndex_mid2_v_reg_5033;
wire   [0:0] exitcond_mid_fu_3798_p2;
reg   [0:0] exitcond_mid_reg_5039;
wire   [5:0] k_2_mid2_fu_3810_p3;
reg   [5:0] k_2_mid2_reg_5044;
wire   [11:0] indvar_flatten_next2_fu_3824_p3;
reg   [11:0] indvar_flatten_next2_reg_5050;
wire   [5:0] tmp_263_mid2_fu_3865_p3;
reg   [5:0] tmp_263_mid2_reg_5055;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state34_pp1_stage1_iter0;
wire    ap_block_state36_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_flag00011001;
wire   [7:0] tmp_530_fu_3875_p2;
reg   [7:0] tmp_530_reg_5060;
wire   [5:0] k_5_fu_3881_p2;
reg   [5:0] k_5_reg_5066;
reg   [11:0] conv1_output_p_V_0_a_2_reg_5071;
reg   [11:0] conv1_output_p_V_4_a_2_reg_5076;
reg   [11:0] conv1_output_p_V_7_a_2_reg_5081;
reg   [11:0] conv1_output_p_V_6_a_2_reg_5086;
reg   [11:0] conv1_output_p_V_2_a_2_reg_5091;
reg   [11:0] conv1_output_p_V_1_a_2_reg_5096;
reg   [11:0] conv1_output_p_V_3_a_2_reg_5101;
reg   [11:0] conv1_output_p_V_5_a_2_reg_5106;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter12;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state33;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_flag00011011;
reg   [6:0] weight_temp_0_V_address0;
reg    weight_temp_0_V_ce0;
reg    weight_temp_0_V_we0;
reg   [7:0] weight_temp_0_V_d0;
wire   [7:0] weight_temp_0_V_q0;
reg   [6:0] weight_temp_1_V_address0;
reg    weight_temp_1_V_ce0;
reg    weight_temp_1_V_we0;
wire   [7:0] weight_temp_1_V_q0;
reg   [6:0] weight_temp_2_V_address0;
reg    weight_temp_2_V_ce0;
reg    weight_temp_2_V_we0;
wire   [7:0] weight_temp_2_V_q0;
reg   [6:0] weight_temp_3_V_address0;
reg    weight_temp_3_V_ce0;
reg    weight_temp_3_V_we0;
wire   [7:0] weight_temp_3_V_q0;
reg   [6:0] weight_temp_4_V_address0;
reg    weight_temp_4_V_ce0;
reg    weight_temp_4_V_we0;
wire   [7:0] weight_temp_4_V_q0;
reg   [6:0] weight_temp_5_V_address0;
reg    weight_temp_5_V_ce0;
reg    weight_temp_5_V_we0;
wire   [7:0] weight_temp_5_V_q0;
reg   [6:0] weight_temp_6_V_address0;
reg    weight_temp_6_V_ce0;
reg    weight_temp_6_V_we0;
wire   [7:0] weight_temp_6_V_q0;
reg   [6:0] weight_temp_7_V_address0;
reg    weight_temp_7_V_ce0;
reg    weight_temp_7_V_we0;
wire   [7:0] weight_temp_7_V_q0;
reg   [4:0] i_phi_fu_673_p4;
reg   [1:0] j_phi_fu_696_p4;
reg   [3:0] indvar_flatten_phi_fu_708_p4;
reg   [1:0] k_phi_fu_720_p4;
reg   [1:0] p_phi_fu_732_p4;
reg   [5:0] h_reg_740;
wire    ap_CS_fsm_state15;
reg   [5:0] w_reg_752;
reg   [1:0] m_reg_764;
reg   [1:0] n_reg_775;
reg   [1:0] ci_reg_786;
reg   [4:0] co_reg_797;
wire    ap_CS_fsm_state26;
reg   [4:0] i_1_reg_808;
reg   [5:0] j_1_reg_819;
reg   [5:0] k_1_reg_831;
reg   [14:0] indvar_flatten13_phi_fu_847_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [4:0] i_2_phi_fu_858_p4;
reg   [11:0] indvar_flatten14_phi_fu_869_p4;
reg   [5:0] j_2_phi_fu_880_p4;
reg   [5:0] k_2_phi_fu_891_p4;
wire   [63:0] tmp_668_cast_fu_1273_p1;
wire   [63:0] tmp_694_cast_fu_1470_p1;
wire   [63:0] tmp_702_cast_fu_1629_p1;
wire   [63:0] tmp_711_cast_fu_1657_p1;
wire   [63:0] tmp_255_fu_3492_p1;
wire   [63:0] tmp_686_cast_fu_3597_p1;
wire   [63:0] tmp_681_cast_fu_3919_p1;
wire   [63:0] sum_fu_1256_p2;
reg    ap_reg_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_pp0_stage0_flag00001001;
wire   [7:0] this_assign_1_fu_3261_p3;
wire    ap_CS_fsm_state31;
wire   [7:0] this_assign_47_1_fu_3710_p3;
wire   [0:0] tmp_627_fu_3952_p3;
wire    ap_block_pp1_stage1_flag00000000;
wire   [7:0] this_assign_1_1_fu_3291_p3;
wire   [7:0] this_assign_1_2_fu_3321_p3;
wire   [7:0] this_assign_1_3_fu_3351_p3;
wire   [7:0] this_assign_1_4_fu_3381_p3;
wire   [7:0] this_assign_1_5_fu_3411_p3;
wire   [7:0] this_assign_1_6_fu_3441_p3;
wire   [7:0] this_assign_1_7_fu_3471_p3;
wire   [5:0] indvar_flatten13_op_fu_920_p2;
wire   [4:0] i_6_fu_934_p2;
wire   [1:0] j_mid_fu_940_p3;
wire   [1:0] j_6_fu_985_p2;
wire   [6:0] tmp_fu_1013_p3;
wire   [7:0] p_shl5_cast_fu_1020_p1;
wire   [7:0] tmp_mid2_cast_fu_1010_p1;
wire   [7:0] tmp_s_fu_1024_p2;
wire   [3:0] tmp_509_fu_1037_p3;
wire   [4:0] p_shl4_cast_fu_1044_p1;
wire   [4:0] newIndex22_mid2_cast_fu_1034_p1;
wire   [4:0] tmp_510_fu_1048_p2;
wire   [0:0] exitcond_fu_1058_p2;
wire   [8:0] tmp_254_mid2_cast_fu_1079_p1;
wire  signed [8:0] tmp_649_cast_fu_1030_p1;
wire   [8:0] tmp_512_fu_1082_p2;
wire   [10:0] tmp_618_fu_1092_p3;
wire  signed [63:0] p_shl3_fu_1100_p1;
wire  signed [63:0] tmp_653_cast_fu_1088_p1;
wire   [5:0] tmp_254_mid2_cast1_fu_1076_p1;
wire  signed [5:0] tmp_651_cast_fu_1054_p1;
wire   [5:0] tmp_514_fu_1110_p2;
wire   [7:0] tmp_619_fu_1120_p3;
wire  signed [63:0] p_shl2_fu_1128_p1;
wire  signed [63:0] tmp_656_cast_fu_1116_p1;
wire   [0:0] exitcond_flatten_not_fu_1138_p2;
wire   [0:0] exitcond65_mid_fu_1064_p2;
wire   [0:0] not_exitcond_flatten_3_fu_1143_p2;
wire   [1:0] k_mid_fu_1069_p3;
wire   [0:0] exitcond65_mid1_fu_1148_p2;
wire   [0:0] tmp_516_fu_1160_p2;
wire   [0:0] tmp_620_fu_1165_p2;
wire   [1:0] k_4_fu_1154_p2;
wire   [63:0] tmp_257_mid2_cast_fu_1186_p1;
wire   [63:0] tmp_513_fu_1104_p2;
wire   [63:0] tmp_515_fu_1132_p2;
wire   [63:0] tmp_519_fu_1196_p2;
wire   [63:0] tmp_621_fu_1222_p2;
wire   [7:0] p_shl_cast_fu_1232_p3;
wire   [63:0] tmp_262_fu_1244_p1;
wire   [63:0] tmp_518_fu_1227_p2;
wire   [63:0] tmp_521_fu_1250_p2;
wire   [7:0] tmp_262_cast_fu_1247_p1;
wire   [7:0] tmp_520_fu_1239_p2;
wire   [1:0] tmp2_fu_1326_p2;
wire  signed [5:0] tmp2_cast_fu_1332_p1;
wire   [5:0] tmp_260_fu_1336_p2;
wire   [1:0] tmp3_fu_1368_p2;
wire  signed [5:0] tmp3_cast_fu_1374_p1;
wire   [5:0] tmp_269_fu_1378_p2;
wire   [6:0] tmp_536_fu_1404_p3;
wire   [2:0] tmp_537_fu_1416_p3;
wire   [7:0] p_shl8_cast_fu_1412_p1;
wire   [7:0] p_shl9_cast_fu_1424_p1;
wire   [7:0] tmp_538_fu_1428_p2;
wire   [7:0] tmp_539_fu_1434_p2;
wire   [8:0] tmp_631_fu_1447_p3;
wire   [12:0] p_shl6_cast_fu_1439_p3;
wire   [12:0] p_shl7_cast_fu_1455_p1;
wire   [12:0] tmp_540_fu_1459_p2;
wire   [12:0] tmp_541_fu_1465_p2;
wire   [1:0] newIndex2_fu_1481_p4;
wire   [6:0] tmp_542_fu_1495_p3;
wire   [2:0] tmp_543_fu_1507_p3;
wire   [7:0] p_shl16_cast_fu_1515_p1;
wire   [7:0] p_shl15_cast_fu_1503_p1;
wire   [7:0] tmp_544_fu_1519_p2;
wire   [7:0] tmp_545_fu_1525_p2;
wire   [8:0] tmp_632_fu_1538_p3;
wire   [12:0] p_shl14_cast_fu_1546_p1;
wire   [12:0] p_shl13_cast_fu_1530_p3;
wire   [12:0] tmp_546_fu_1550_p2;
wire   [3:0] tmp_548_fu_1561_p3;
wire   [4:0] p_shl12_cast_fu_1569_p1;
wire   [4:0] newIndex3_cast_fu_1491_p1;
wire   [4:0] tmp_549_fu_1573_p2;
wire  signed [5:0] tmp_704_cast_fu_1579_p1;
wire   [5:0] tmp_550_fu_1583_p2;
wire   [7:0] tmp_633_fu_1592_p3;
wire  signed [63:0] p_shl_fu_1600_p1;
wire  signed [63:0] tmp_705_cast_fu_1588_p1;
wire   [63:0] tmp_551_fu_1604_p2;
wire   [63:0] tmp_552_fu_1610_p2;
wire   [7:0] p_shl10_cast_fu_1640_p3;
wire   [7:0] tmp_553_fu_1647_p2;
wire   [7:0] tmp_554_fu_1652_p2;
wire  signed [7:0] p_Val2_s_fu_1676_p0;
wire  signed [15:0] OP2_V_fu_1673_p1;
wire  signed [7:0] p_Val2_s_fu_1676_p1;
wire  signed [7:0] p_Val2_92_1_fu_1694_p0;
wire  signed [7:0] p_Val2_92_1_fu_1694_p1;
wire  signed [7:0] p_Val2_92_2_fu_1712_p0;
wire  signed [7:0] p_Val2_92_2_fu_1712_p1;
wire  signed [7:0] p_Val2_92_3_fu_1730_p0;
wire  signed [7:0] p_Val2_92_3_fu_1730_p1;
wire  signed [7:0] p_Val2_92_4_fu_1748_p0;
wire  signed [7:0] p_Val2_92_4_fu_1748_p1;
wire  signed [7:0] p_Val2_92_5_fu_1766_p0;
wire  signed [7:0] p_Val2_92_5_fu_1766_p1;
wire  signed [7:0] p_Val2_92_6_fu_1784_p0;
wire  signed [7:0] p_Val2_92_6_fu_1784_p1;
wire  signed [7:0] p_Val2_92_7_fu_1802_p0;
wire  signed [7:0] p_Val2_92_7_fu_1802_p1;
wire   [13:0] tmp_274_fu_1816_p3;
wire  signed [15:0] tmp_290_cast_fu_1823_p1;
wire   [7:0] tmp_275_fu_1850_p1;
wire   [7:0] p_Val2_9_fu_1840_p4;
wire   [0:0] tmp_638_fu_1853_p3;
wire   [0:0] tmp_276_fu_1875_p2;
wire   [13:0] tmp_460_1_fu_1897_p3;
wire  signed [15:0] tmp_460_1_cast_fu_1904_p1;
wire   [7:0] tmp_464_1_fu_1931_p1;
wire   [7:0] p_Val2_94_1_fu_1921_p4;
wire   [0:0] tmp_643_fu_1934_p3;
wire   [0:0] tmp_468_1_fu_1956_p2;
wire   [13:0] tmp_460_2_fu_1978_p3;
wire  signed [15:0] tmp_460_2_cast_fu_1985_p1;
wire   [7:0] tmp_464_2_fu_2012_p1;
wire   [7:0] p_Val2_94_2_fu_2002_p4;
wire   [0:0] tmp_648_fu_2015_p3;
wire   [0:0] tmp_468_2_fu_2037_p2;
wire   [13:0] tmp_460_3_fu_2059_p3;
wire  signed [15:0] tmp_460_3_cast_fu_2066_p1;
wire   [7:0] tmp_464_3_fu_2093_p1;
wire   [7:0] p_Val2_94_3_fu_2083_p4;
wire   [0:0] tmp_653_fu_2096_p3;
wire   [0:0] tmp_468_3_fu_2118_p2;
wire   [13:0] tmp_460_4_fu_2140_p3;
wire  signed [15:0] tmp_460_4_cast_fu_2147_p1;
wire   [7:0] tmp_464_4_fu_2174_p1;
wire   [7:0] p_Val2_94_4_fu_2164_p4;
wire   [0:0] tmp_658_fu_2177_p3;
wire   [0:0] tmp_468_4_fu_2199_p2;
wire   [13:0] tmp_460_5_fu_2221_p3;
wire  signed [15:0] tmp_460_5_cast_fu_2228_p1;
wire   [7:0] tmp_464_5_fu_2255_p1;
wire   [7:0] p_Val2_94_5_fu_2245_p4;
wire   [0:0] tmp_663_fu_2258_p3;
wire   [0:0] tmp_468_5_fu_2280_p2;
wire   [13:0] tmp_460_6_fu_2302_p3;
wire  signed [15:0] tmp_460_6_cast_fu_2309_p1;
wire   [7:0] tmp_464_6_fu_2336_p1;
wire   [7:0] p_Val2_94_6_fu_2326_p4;
wire   [0:0] tmp_668_fu_2339_p3;
wire   [0:0] tmp_468_6_fu_2361_p2;
wire   [13:0] tmp_460_7_fu_2383_p3;
wire  signed [15:0] tmp_460_7_cast_fu_2390_p1;
wire   [7:0] tmp_464_7_fu_2417_p1;
wire   [7:0] p_Val2_94_7_fu_2407_p4;
wire   [0:0] tmp_673_fu_2420_p3;
wire   [0:0] tmp_468_7_fu_2442_p2;
wire   [0:0] Range1_all_ones_fu_2471_p2;
wire   [0:0] Range1_all_zeros_fu_2476_p2;
wire   [0:0] tmp_640_fu_2464_p3;
wire   [0:0] tmp_277_fu_2488_p2;
wire   [0:0] p_41_i_i_fu_2494_p2;
wire   [0:0] deleted_zeros_fu_2481_p3;
wire   [0:0] p_not_i_i_fu_2511_p2;
wire   [0:0] brmerge_i_i9_fu_2517_p2;
wire   [0:0] deleted_ones_fu_2499_p3;
wire   [0:0] tmp4_demorgan_fu_2538_p2;
wire   [0:0] tmp4_fu_2544_p2;
wire   [0:0] overflow_fu_2527_p2;
wire   [0:0] Range1_all_ones_1_fu_2568_p2;
wire   [0:0] Range1_all_zeros_1_fu_2573_p2;
wire   [0:0] tmp_645_fu_2561_p3;
wire   [0:0] tmp_471_1_fu_2585_p2;
wire   [0:0] p_41_i_i_1_fu_2591_p2;
wire   [0:0] deleted_zeros_1_fu_2578_p3;
wire   [0:0] p_not_i_i_1_fu_2608_p2;
wire   [0:0] brmerge_i_i9_1_fu_2614_p2;
wire   [0:0] deleted_ones_1_fu_2596_p3;
wire   [0:0] tmp6_demorgan_fu_2635_p2;
wire   [0:0] tmp6_fu_2641_p2;
wire   [0:0] overflow_1_fu_2624_p2;
wire   [0:0] Range1_all_ones_2_fu_2665_p2;
wire   [0:0] Range1_all_zeros_2_fu_2670_p2;
wire   [0:0] tmp_650_fu_2658_p3;
wire   [0:0] tmp_471_2_fu_2682_p2;
wire   [0:0] p_41_i_i_2_fu_2688_p2;
wire   [0:0] deleted_zeros_2_fu_2675_p3;
wire   [0:0] p_not_i_i_2_fu_2705_p2;
wire   [0:0] brmerge_i_i9_2_fu_2711_p2;
wire   [0:0] deleted_ones_2_fu_2693_p3;
wire   [0:0] tmp8_demorgan_fu_2732_p2;
wire   [0:0] tmp8_fu_2738_p2;
wire   [0:0] overflow_2_fu_2721_p2;
wire   [0:0] Range1_all_ones_3_fu_2762_p2;
wire   [0:0] Range1_all_zeros_3_fu_2767_p2;
wire   [0:0] tmp_655_fu_2755_p3;
wire   [0:0] tmp_471_3_fu_2779_p2;
wire   [0:0] p_41_i_i_3_fu_2785_p2;
wire   [0:0] deleted_zeros_3_fu_2772_p3;
wire   [0:0] p_not_i_i_3_fu_2802_p2;
wire   [0:0] brmerge_i_i9_3_fu_2808_p2;
wire   [0:0] deleted_ones_3_fu_2790_p3;
wire   [0:0] tmp10_demorgan_fu_2829_p2;
wire   [0:0] tmp10_fu_2835_p2;
wire   [0:0] overflow_3_fu_2818_p2;
wire   [0:0] Range1_all_ones_4_fu_2859_p2;
wire   [0:0] Range1_all_zeros_4_fu_2864_p2;
wire   [0:0] tmp_660_fu_2852_p3;
wire   [0:0] tmp_471_4_fu_2876_p2;
wire   [0:0] p_41_i_i_4_fu_2882_p2;
wire   [0:0] deleted_zeros_4_fu_2869_p3;
wire   [0:0] p_not_i_i_4_fu_2899_p2;
wire   [0:0] brmerge_i_i9_4_fu_2905_p2;
wire   [0:0] deleted_ones_4_fu_2887_p3;
wire   [0:0] tmp12_demorgan_fu_2926_p2;
wire   [0:0] tmp12_fu_2932_p2;
wire   [0:0] overflow_4_fu_2915_p2;
wire   [0:0] Range1_all_ones_5_fu_2956_p2;
wire   [0:0] Range1_all_zeros_5_fu_2961_p2;
wire   [0:0] tmp_665_fu_2949_p3;
wire   [0:0] tmp_471_5_fu_2973_p2;
wire   [0:0] p_41_i_i_5_fu_2979_p2;
wire   [0:0] deleted_zeros_5_fu_2966_p3;
wire   [0:0] p_not_i_i_5_fu_2996_p2;
wire   [0:0] brmerge_i_i9_5_fu_3002_p2;
wire   [0:0] deleted_ones_5_fu_2984_p3;
wire   [0:0] tmp14_demorgan_fu_3023_p2;
wire   [0:0] tmp14_fu_3029_p2;
wire   [0:0] overflow_5_fu_3012_p2;
wire   [0:0] Range1_all_ones_6_fu_3053_p2;
wire   [0:0] Range1_all_zeros_6_fu_3058_p2;
wire   [0:0] tmp_670_fu_3046_p3;
wire   [0:0] tmp_471_6_fu_3070_p2;
wire   [0:0] p_41_i_i_6_fu_3076_p2;
wire   [0:0] deleted_zeros_6_fu_3063_p3;
wire   [0:0] p_not_i_i_6_fu_3093_p2;
wire   [0:0] brmerge_i_i9_6_fu_3099_p2;
wire   [0:0] deleted_ones_6_fu_3081_p3;
wire   [0:0] tmp16_demorgan_fu_3120_p2;
wire   [0:0] tmp16_fu_3126_p2;
wire   [0:0] overflow_6_fu_3109_p2;
wire   [0:0] Range1_all_ones_7_fu_3150_p2;
wire   [0:0] Range1_all_zeros_7_fu_3155_p2;
wire   [0:0] tmp_675_fu_3143_p3;
wire   [0:0] tmp_471_7_fu_3167_p2;
wire   [0:0] p_41_i_i_7_fu_3173_p2;
wire   [0:0] deleted_zeros_7_fu_3160_p3;
wire   [0:0] p_not_i_i_7_fu_3190_p2;
wire   [0:0] brmerge_i_i9_7_fu_3196_p2;
wire   [0:0] deleted_ones_7_fu_3178_p3;
wire   [0:0] tmp18_demorgan_fu_3217_p2;
wire   [0:0] tmp18_fu_3223_p2;
wire   [0:0] overflow_7_fu_3206_p2;
wire   [0:0] tmp5_fu_3240_p2;
wire   [0:0] underflow_not_fu_3244_p2;
wire   [7:0] p_Val2_95_mux_fu_3249_p3;
wire   [7:0] p_Val2_2_fu_3255_p3;
wire   [0:0] tmp7_fu_3270_p2;
wire   [0:0] underflow_not_1_fu_3274_p2;
wire   [7:0] p_Val2_95_mux_1_fu_3279_p3;
wire   [7:0] p_Val2_95_1_199_fu_3285_p3;
wire   [0:0] tmp9_fu_3300_p2;
wire   [0:0] underflow_not_2_fu_3304_p2;
wire   [7:0] p_Val2_95_mux_2_fu_3309_p3;
wire   [7:0] p_Val2_95_2_200_fu_3315_p3;
wire   [0:0] tmp11_fu_3330_p2;
wire   [0:0] underflow_not_3_fu_3334_p2;
wire   [7:0] p_Val2_95_mux_3_fu_3339_p3;
wire   [7:0] p_Val2_95_3_201_fu_3345_p3;
wire   [0:0] tmp13_fu_3360_p2;
wire   [0:0] underflow_not_4_fu_3364_p2;
wire   [7:0] p_Val2_95_mux_4_fu_3369_p3;
wire   [7:0] p_Val2_95_4_202_fu_3375_p3;
wire   [0:0] tmp15_fu_3390_p2;
wire   [0:0] underflow_not_5_fu_3394_p2;
wire   [7:0] p_Val2_95_mux_5_fu_3399_p3;
wire   [7:0] p_Val2_95_5_203_fu_3405_p3;
wire   [0:0] tmp17_fu_3420_p2;
wire   [0:0] underflow_not_6_fu_3424_p2;
wire   [7:0] p_Val2_95_mux_6_fu_3429_p3;
wire   [7:0] p_Val2_95_6_204_fu_3435_p3;
wire   [0:0] tmp19_fu_3450_p2;
wire   [0:0] underflow_not_7_fu_3454_p2;
wire   [7:0] p_Val2_95_mux_7_fu_3459_p3;
wire   [7:0] p_Val2_95_7_205_fu_3465_p3;
wire   [1:0] newIndex_fu_3501_p4;
wire   [6:0] tmp_523_fu_3511_p3;
wire   [2:0] tmp_524_fu_3523_p3;
wire   [7:0] p_shl17_cast_fu_3519_p1;
wire   [7:0] p_shl18_cast_fu_3531_p1;
wire   [7:0] tmp_258_cast_fu_3547_p1;
wire   [7:0] tmp_533_fu_3551_p2;
wire   [8:0] tmp_628_fu_3564_p3;
wire   [12:0] p_shl19_cast_fu_3556_p3;
wire   [12:0] p_shl20_cast_fu_3572_p1;
wire   [12:0] tmp_264_cast_fu_3588_p1;
wire   [12:0] tmp_535_fu_3592_p2;
wire   [7:0] p_Val2_s_209_fu_3615_p10;
wire  signed [8:0] tmp_265_fu_3636_p1;
wire  signed [8:0] tmp_266_fu_3640_p1;
wire   [8:0] p_Val2_6_fu_3644_p2;
wire   [0:0] tmp_267_fu_3672_p2;
wire   [0:0] isneg_not_fu_3686_p2;
wire   [0:0] brmerge_i_i_fu_3682_p2;
wire   [0:0] underflow_11_fu_3677_p2;
wire   [0:0] brmerge_fu_3691_p2;
wire   [7:0] p_Val2_90_mux_fu_3696_p3;
wire   [7:0] p_Val2_s_210_fu_3703_p3;
wire   [0:0] exitcond_flatten19_fu_3750_p2;
wire   [4:0] i_8_fu_3744_p2;
wire   [0:0] exitcond35_fu_3792_p2;
wire   [0:0] not_exitcond_flatten_1_fu_3786_p2;
wire   [0:0] tmp_529_fu_3804_p2;
wire   [11:0] indvar_flatten44_op_fu_3818_p2;
wire   [6:0] tmp_526_fu_3832_p3;
wire   [2:0] tmp_527_fu_3843_p3;
wire   [7:0] p_shl24_cast_fu_3850_p1;
wire   [7:0] p_shl23_cast_fu_3839_p1;
wire   [5:0] j_8_fu_3860_p2;
wire   [7:0] tmp_528_fu_3854_p2;
wire   [7:0] tmp_263_mid2_cast_fu_3871_p1;
wire   [8:0] tmp_626_fu_3893_p3;
wire   [12:0] p_shl22_cast_fu_3900_p1;
wire   [12:0] p_shl21_cast_fu_3886_p3;
wire   [12:0] tmp_531_fu_3904_p2;
wire   [12:0] tmp_271_cast_fu_3910_p1;
wire   [12:0] tmp_532_fu_3913_p2;
wire   [7:0] tmp_279_fu_3931_p10;
wire    ap_CS_fsm_state37;
reg   [22:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_V_ARREADY = 1'b0;
end

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_0_V_address0),
    .ce0(weight_temp_0_V_ce0),
    .we0(weight_temp_0_V_we0),
    .d0(weight_temp_0_V_d0),
    .q0(weight_temp_0_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_1_V_address0),
    .ce0(weight_temp_1_V_ce0),
    .we0(weight_temp_1_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_1_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_2_V_address0),
    .ce0(weight_temp_2_V_ce0),
    .we0(weight_temp_2_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_2_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_3_V_address0),
    .ce0(weight_temp_3_V_ce0),
    .we0(weight_temp_3_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_3_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_4_V_address0),
    .ce0(weight_temp_4_V_ce0),
    .we0(weight_temp_4_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_4_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_5_V_address0),
    .ce0(weight_temp_5_V_ce0),
    .we0(weight_temp_5_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_5_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_6_V_address0),
    .ce0(weight_temp_6_V_ce0),
    .we0(weight_temp_6_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_6_V_q0)
);

conv1_p_weight_tebkb #(
    .DataWidth( 8 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
weight_temp_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_7_V_address0),
    .ce0(weight_temp_7_V_ce0),
    .we0(weight_temp_7_V_we0),
    .d0(weight_V_addr_read_reg_4087),
    .q0(weight_temp_7_V_q0)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_U1(
    .din1(conv1_output_p_V_0_q0),
    .din2(conv1_output_p_V_1_q0),
    .din3(conv1_output_p_V_2_q0),
    .din4(conv1_output_p_V_3_q0),
    .din5(conv1_output_p_V_4_q0),
    .din6(conv1_output_p_V_5_q0),
    .din7(conv1_output_p_V_6_q0),
    .din8(conv1_output_p_V_7_q0),
    .din9(tmp_624_reg_4912),
    .dout(p_Val2_s_209_fu_3615_p10)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_U2(
    .din1(conv1_output_p_V_0_q0),
    .din2(conv1_output_p_V_1_q0),
    .din3(conv1_output_p_V_2_q0),
    .din4(conv1_output_p_V_3_q0),
    .din5(conv1_output_p_V_4_q0),
    .din6(conv1_output_p_V_5_q0),
    .din7(conv1_output_p_V_6_q0),
    .din8(conv1_output_p_V_7_q0),
    .din9(ap_reg_pp1_iter1_tmp_625_reg_5028),
    .dout(tmp_279_fu_3931_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state33))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_condition_pp1_exit_iter0_state33) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state33 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_3965))) begin
            if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
            end else if (((1'b1 == m_axi_weight_V_ARREADY) & (ap_block_pp0_stage0_flag00001001 == 1'b0))) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == exitcond39_fu_1475_p2))) begin
        ci_reg_786 <= ci_9_reg_4164;
    end else if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond37_fu_1352_p2))) begin
        ci_reg_786 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd0 == exitcond38_fu_1388_p2))) begin
        co_reg_797 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        co_reg_797 <= co_36_7_reg_4197;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        h_reg_740 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond32_fu_1294_p2 == 1'd1))) begin
        h_reg_740 <= h_30_fu_1304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond30_fu_1284_p2 == 1'd1))) begin
        i_1_reg_808 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond33_fu_3541_p2))) begin
        i_1_reg_808 <= i_7_reg_4907;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
        i_2_reg_854 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_2_reg_854 <= arrayNo8_mid2_v_reg_5023;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        i_reg_669 <= tmp_mid2_v_reg_3989;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_669 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_902_p2))) begin
        indvar_flatten11_reg_658 <= indvar_flatten_next1_7_fu_908_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten11_reg_658 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_902_p2))) begin
        indvar_flatten12_reg_681 <= indvar_flatten_next1_fu_926_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten12_reg_681 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
        indvar_flatten13_reg_843 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten13_reg_843 <= indvar_flatten_next2_1_reg_5012;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
        indvar_flatten14_reg_865 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten14_reg_865 <= indvar_flatten_next2_reg_5050;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        indvar_flatten_reg_704 <= indvar_flatten_next_fu_1216_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_704 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond31_fu_3480_p2))) begin
        j_1_reg_819 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond36_fu_3582_p2))) begin
        j_1_reg_819 <= j_7_fu_3609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
        j_2_reg_876 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_2_reg_876 <= tmp_263_mid2_reg_5055;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        j_reg_692 <= tmp_254_mid2_reg_4027;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_692 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond33_fu_3541_p2))) begin
        k_1_reg_831 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        k_1_reg_831 <= k_6_fu_3726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
        k_2_reg_887 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        k_2_reg_887 <= k_5_reg_5066;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        k_reg_716 <= tmp_257_mid2_reg_4045;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_716 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == exitcond37_fu_1352_p2))) begin
        m_reg_764 <= m_7_reg_4123;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'd0 == exitcond32_fu_1294_p2))) begin
        m_reg_764 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond38_fu_1388_p2))) begin
        n_reg_775 <= n_7_reg_4146;
    end else if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond34_fu_1310_p2))) begin
        n_reg_775 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        p_reg_728 <= p_1_reg_4066;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_reg_728 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond30_fu_1284_p2))) begin
        w_reg_752 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == exitcond34_fu_1310_p2))) begin
        w_reg_752 <= w_35_fu_1346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter10_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter9_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter10_tmp_522_reg_4082 <= ap_reg_pp0_iter9_tmp_522_reg_4082;
        ap_reg_pp0_iter10_tmp_617_reg_3996 <= ap_reg_pp0_iter9_tmp_617_reg_3996;
        ap_reg_pp0_iter11_tmp_522_reg_4082 <= ap_reg_pp0_iter10_tmp_522_reg_4082;
        ap_reg_pp0_iter11_tmp_617_reg_3996 <= ap_reg_pp0_iter10_tmp_617_reg_3996;
        ap_reg_pp0_iter2_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter1_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter2_tmp_617_reg_3996 <= tmp_617_reg_3996;
        ap_reg_pp0_iter3_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter2_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter3_tmp_617_reg_3996 <= ap_reg_pp0_iter2_tmp_617_reg_3996;
        ap_reg_pp0_iter4_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter3_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter4_tmp_522_reg_4082 <= tmp_522_reg_4082;
        ap_reg_pp0_iter4_tmp_617_reg_3996 <= ap_reg_pp0_iter3_tmp_617_reg_3996;
        ap_reg_pp0_iter5_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter4_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter5_tmp_522_reg_4082 <= ap_reg_pp0_iter4_tmp_522_reg_4082;
        ap_reg_pp0_iter5_tmp_617_reg_3996 <= ap_reg_pp0_iter4_tmp_617_reg_3996;
        ap_reg_pp0_iter6_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter5_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter6_tmp_522_reg_4082 <= ap_reg_pp0_iter5_tmp_522_reg_4082;
        ap_reg_pp0_iter6_tmp_617_reg_3996 <= ap_reg_pp0_iter5_tmp_617_reg_3996;
        ap_reg_pp0_iter7_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter6_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter7_tmp_522_reg_4082 <= ap_reg_pp0_iter6_tmp_522_reg_4082;
        ap_reg_pp0_iter7_tmp_617_reg_3996 <= ap_reg_pp0_iter6_tmp_617_reg_3996;
        ap_reg_pp0_iter8_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter7_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter8_tmp_522_reg_4082 <= ap_reg_pp0_iter7_tmp_522_reg_4082;
        ap_reg_pp0_iter8_tmp_617_reg_3996 <= ap_reg_pp0_iter7_tmp_617_reg_3996;
        ap_reg_pp0_iter9_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter8_exitcond_flatten_reg_3965;
        ap_reg_pp0_iter9_tmp_522_reg_4082 <= ap_reg_pp0_iter8_tmp_522_reg_4082;
        ap_reg_pp0_iter9_tmp_617_reg_3996 <= ap_reg_pp0_iter8_tmp_617_reg_3996;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten16_reg_3974 <= exitcond_flatten16_reg_3974;
        ap_reg_pp0_iter1_exitcond_flatten_reg_3965 <= exitcond_flatten_reg_3965;
        exitcond_flatten_reg_3965 <= exitcond_flatten_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_tmp_625_reg_5028 <= tmp_625_reg_5028;
        exitcond_flatten18_reg_5008 <= exitcond_flatten18_fu_3732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten18_fu_3732_p2))) begin
        arrayNo8_mid2_v_reg_5023 <= arrayNo8_mid2_v_fu_3764_p3;
        indvar_flatten_next2_reg_5050 <= indvar_flatten_next2_fu_3824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond31_fu_3480_p2))) begin
        bias_V_addr_reg_4922 <= tmp_255_fu_3492_p1;
        tmp_525_reg_4917[7 : 1] <= tmp_525_fu_3535_p2[7 : 1];
        tmp_624_reg_4912 <= tmp_624_fu_3497_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        brmerge40_demorgan_i_35_reg_4763 <= brmerge40_demorgan_i_35_fu_2727_p2;
        brmerge40_demorgan_i_36_reg_4788 <= brmerge40_demorgan_i_36_fu_2824_p2;
        brmerge40_demorgan_i_37_reg_4813 <= brmerge40_demorgan_i_37_fu_2921_p2;
        brmerge40_demorgan_i_38_reg_4838 <= brmerge40_demorgan_i_38_fu_3018_p2;
        brmerge40_demorgan_i_39_reg_4863 <= brmerge40_demorgan_i_39_fu_3115_p2;
        brmerge40_demorgan_i_40_reg_4888 <= brmerge40_demorgan_i_40_fu_3212_p2;
        brmerge40_demorgan_i_41_reg_4738 <= brmerge40_demorgan_i_41_fu_2630_p2;
        brmerge40_demorgan_i_reg_4713 <= brmerge40_demorgan_i_fu_2533_p2;
        brmerge_i_i_i_1_reg_4748 <= brmerge_i_i_i_1_fu_2652_p2;
        brmerge_i_i_i_2_reg_4773 <= brmerge_i_i_i_2_fu_2749_p2;
        brmerge_i_i_i_3_reg_4798 <= brmerge_i_i_i_3_fu_2846_p2;
        brmerge_i_i_i_4_reg_4823 <= brmerge_i_i_i_4_fu_2943_p2;
        brmerge_i_i_i_5_reg_4848 <= brmerge_i_i_i_5_fu_3040_p2;
        brmerge_i_i_i_6_reg_4873 <= brmerge_i_i_i_6_fu_3137_p2;
        brmerge_i_i_i_7_reg_4898 <= brmerge_i_i_i_7_fu_3234_p2;
        brmerge_i_i_i_reg_4723 <= brmerge_i_i_i_fu_2555_p2;
        p_38_i_i_1_reg_4728 <= p_38_i_i_1_fu_2603_p2;
        p_38_i_i_2_reg_4753 <= p_38_i_i_2_fu_2700_p2;
        p_38_i_i_3_reg_4778 <= p_38_i_i_3_fu_2797_p2;
        p_38_i_i_4_reg_4803 <= p_38_i_i_4_fu_2894_p2;
        p_38_i_i_5_reg_4828 <= p_38_i_i_5_fu_2991_p2;
        p_38_i_i_6_reg_4853 <= p_38_i_i_6_fu_3088_p2;
        p_38_i_i_7_reg_4878 <= p_38_i_i_7_fu_3185_p2;
        p_38_i_i_reg_4703 <= p_38_i_i_fu_2506_p2;
        tmp_278_reg_4708 <= tmp_278_fu_2522_p2;
        tmp_473_1_reg_4733 <= tmp_473_1_fu_2619_p2;
        tmp_473_2_reg_4758 <= tmp_473_2_fu_2716_p2;
        tmp_473_3_reg_4783 <= tmp_473_3_fu_2813_p2;
        tmp_473_4_reg_4808 <= tmp_473_4_fu_2910_p2;
        tmp_473_5_reg_4833 <= tmp_473_5_fu_3007_p2;
        tmp_473_6_reg_4858 <= tmp_473_6_fu_3104_p2;
        tmp_473_7_reg_4883 <= tmp_473_7_fu_3201_p2;
        underflow_1_reg_4743 <= underflow_1_fu_2647_p2;
        underflow_2_reg_4768 <= underflow_2_fu_2744_p2;
        underflow_3_reg_4793 <= underflow_3_fu_2841_p2;
        underflow_4_reg_4818 <= underflow_4_fu_2938_p2;
        underflow_5_reg_4843 <= underflow_5_fu_3035_p2;
        underflow_6_reg_4868 <= underflow_6_fu_3132_p2;
        underflow_7_reg_4893 <= underflow_7_fu_3229_p2;
        underflow_reg_4718 <= underflow_fu_2550_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        carry_15_1_reg_4468 <= carry_15_1_fu_1962_p2;
        carry_15_2_reg_4505 <= carry_15_2_fu_2043_p2;
        carry_15_3_reg_4542 <= carry_15_3_fu_2124_p2;
        carry_15_4_reg_4579 <= carry_15_4_fu_2205_p2;
        carry_15_5_reg_4616 <= carry_15_5_fu_2286_p2;
        carry_15_6_reg_4653 <= carry_15_6_fu_2367_p2;
        carry_15_7_reg_4690 <= carry_15_7_fu_2448_p2;
        carry_s_reg_4431 <= carry_s_fu_1881_p2;
        p_Val2_1_reg_4419 <= p_Val2_1_fu_1861_p2;
        p_Val2_8_reg_4407 <= p_Val2_8_fu_1827_p2;
        p_Val2_93_1_reg_4444 <= p_Val2_93_1_fu_1908_p2;
        p_Val2_93_2_reg_4481 <= p_Val2_93_2_fu_1989_p2;
        p_Val2_93_3_reg_4518 <= p_Val2_93_3_fu_2070_p2;
        p_Val2_93_4_reg_4555 <= p_Val2_93_4_fu_2151_p2;
        p_Val2_93_5_reg_4592 <= p_Val2_93_5_fu_2232_p2;
        p_Val2_93_6_reg_4629 <= p_Val2_93_6_fu_2313_p2;
        p_Val2_93_7_reg_4666 <= p_Val2_93_7_fu_2394_p2;
        p_Val2_95_1_reg_4456 <= p_Val2_95_1_fu_1942_p2;
        p_Val2_95_2_reg_4493 <= p_Val2_95_2_fu_2023_p2;
        p_Val2_95_3_reg_4530 <= p_Val2_95_3_fu_2104_p2;
        p_Val2_95_4_reg_4567 <= p_Val2_95_4_fu_2185_p2;
        p_Val2_95_5_reg_4604 <= p_Val2_95_5_fu_2266_p2;
        p_Val2_95_6_reg_4641 <= p_Val2_95_6_fu_2347_p2;
        p_Val2_95_7_reg_4678 <= p_Val2_95_7_fu_2428_p2;
        tmp_280_reg_4438 <= {{p_Val2_8_fu_1827_p2[15:14]}};
        tmp_281_reg_4475 <= {{p_Val2_93_1_fu_1908_p2[15:14]}};
        tmp_282_reg_4512 <= {{p_Val2_93_2_fu_1989_p2[15:14]}};
        tmp_283_reg_4549 <= {{p_Val2_93_3_fu_2070_p2[15:14]}};
        tmp_284_reg_4586 <= {{p_Val2_93_4_fu_2151_p2[15:14]}};
        tmp_285_reg_4623 <= {{p_Val2_93_5_fu_2232_p2[15:14]}};
        tmp_286_reg_4660 <= {{p_Val2_93_6_fu_2313_p2[15:14]}};
        tmp_287_reg_4697 <= {{p_Val2_93_7_fu_2394_p2[15:14]}};
        tmp_636_reg_4412 <= p_Val2_8_fu_1827_p2[32'd15];
        tmp_639_reg_4425 <= p_Val2_1_fu_1861_p2[32'd7];
        tmp_641_reg_4449 <= p_Val2_93_1_fu_1908_p2[32'd15];
        tmp_644_reg_4462 <= p_Val2_95_1_fu_1942_p2[32'd7];
        tmp_646_reg_4486 <= p_Val2_93_2_fu_1989_p2[32'd15];
        tmp_649_reg_4499 <= p_Val2_95_2_fu_2023_p2[32'd7];
        tmp_651_reg_4523 <= p_Val2_93_3_fu_2070_p2[32'd15];
        tmp_654_reg_4536 <= p_Val2_95_3_fu_2104_p2[32'd7];
        tmp_656_reg_4560 <= p_Val2_93_4_fu_2151_p2[32'd15];
        tmp_659_reg_4573 <= p_Val2_95_4_fu_2185_p2[32'd7];
        tmp_661_reg_4597 <= p_Val2_93_5_fu_2232_p2[32'd15];
        tmp_664_reg_4610 <= p_Val2_95_5_fu_2266_p2[32'd7];
        tmp_666_reg_4634 <= p_Val2_93_6_fu_2313_p2[32'd15];
        tmp_669_reg_4647 <= p_Val2_95_6_fu_2347_p2[32'd7];
        tmp_671_reg_4671 <= p_Val2_93_7_fu_2394_p2[32'd15];
        tmp_674_reg_4684 <= p_Val2_95_7_fu_2428_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ci_9_reg_4164 <= ci_9_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd0 == exitcond39_fu_1475_p2))) begin
        co_36_7_reg_4197 <= co_36_7_fu_1623_p2;
        tmp_547_reg_4182 <= tmp_547_fu_1556_p2;
        tmp_634_reg_4187 <= tmp_634_fu_1615_p1;
        tmp_635_reg_4192 <= tmp_635_fu_1619_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond36_fu_3582_p2))) begin
        conv1_output_p_V_0_a_1_reg_4938 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_1_a_1_reg_4963 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_2_a_1_reg_4958 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_3_a_1_reg_4968 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_4_a_1_reg_4943 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_5_a_1_reg_4973 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_6_a_1_reg_4953 <= tmp_686_cast_fu_3597_p1;
        conv1_output_p_V_7_a_1_reg_4948 <= tmp_686_cast_fu_3597_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008))) begin
        conv1_output_p_V_0_a_2_reg_5071 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_1_a_2_reg_5096 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_2_a_2_reg_5091 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_3_a_2_reg_5101 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_4_a_2_reg_5076 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_5_a_2_reg_5106 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_6_a_2_reg_5086 <= tmp_681_cast_fu_3919_p1;
        conv1_output_p_V_7_a_2_reg_5081 <= tmp_681_cast_fu_3919_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_0_a_reg_4202 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_1_a_reg_4227 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_2_a_reg_4222 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_3_a_reg_4272 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_4_a_reg_4207 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_5_a_reg_4277 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_6_a_reg_4217 <= tmp_702_cast_fu_1629_p1;
        conv1_output_p_V_7_a_reg_4212 <= tmp_702_cast_fu_1629_p1;
        input_V_load_reg_4282 <= input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_p_V_0_l_reg_4292 <= conv1_output_p_V_0_q0;
        conv1_output_p_V_1_l_reg_4307 <= conv1_output_p_V_1_q0;
        conv1_output_p_V_2_l_reg_4322 <= conv1_output_p_V_2_q0;
        conv1_output_p_V_3_l_reg_4337 <= conv1_output_p_V_3_q0;
        conv1_output_p_V_4_l_reg_4352 <= conv1_output_p_V_4_q0;
        conv1_output_p_V_5_l_reg_4367 <= conv1_output_p_V_5_q0;
        conv1_output_p_V_6_l_reg_4382 <= conv1_output_p_V_6_q0;
        conv1_output_p_V_7_l_reg_4397 <= conv1_output_p_V_7_q0;
        p_Val2_92_1_reg_4302 <= p_Val2_92_1_fu_1694_p2;
        p_Val2_92_2_reg_4317 <= p_Val2_92_2_fu_1712_p2;
        p_Val2_92_3_reg_4332 <= p_Val2_92_3_fu_1730_p2;
        p_Val2_92_4_reg_4347 <= p_Val2_92_4_fu_1748_p2;
        p_Val2_92_5_reg_4362 <= p_Val2_92_5_fu_1766_p2;
        p_Val2_92_6_reg_4377 <= p_Val2_92_6_fu_1784_p2;
        p_Val2_92_7_reg_4392 <= p_Val2_92_7_fu_1802_p2;
        p_Val2_s_reg_4287 <= p_Val2_s_fu_1676_p2;
        tmp_637_reg_4297 <= p_Val2_s_fu_1676_p2[32'd5];
        tmp_642_reg_4312 <= p_Val2_92_1_fu_1694_p2[32'd5];
        tmp_647_reg_4327 <= p_Val2_92_2_fu_1712_p2[32'd5];
        tmp_652_reg_4342 <= p_Val2_92_3_fu_1730_p2[32'd5];
        tmp_657_reg_4357 <= p_Val2_92_4_fu_1748_p2[32'd5];
        tmp_662_reg_4372 <= p_Val2_92_5_fu_1766_p2[32'd5];
        tmp_667_reg_4387 <= p_Val2_92_6_fu_1784_p2[32'd5];
        tmp_672_reg_4402 <= p_Val2_92_7_fu_1802_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_902_p2))) begin
        exitcond_flatten16_reg_3974 <= exitcond_flatten16_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_3965))) begin
        exitcond_flatten17_reg_4011 <= exitcond_flatten17_fu_973_p2;
        exitcond_flatten_mid_reg_4016 <= exitcond_flatten_mid_fu_979_p2;
        indvar_flatten_op_reg_4034 <= indvar_flatten_op_fu_1004_p2;
        newIndex22_mid2_v_reg_4000 <= {{tmp_mid2_v_fu_947_p3[4:3]}};
        not_exitcond_flatten_reg_4006 <= not_exitcond_flatten_fu_968_p2;
        tmp_511_reg_4021 <= tmp_511_fu_991_p2;
        tmp_617_reg_3996 <= tmp_617_fu_954_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_fu_3732_p2))) begin
        exitcond_mid_reg_5039 <= exitcond_mid_fu_3798_p2;
        j_2_mid_reg_5017 <= j_2_mid_fu_3756_p3;
        k_2_mid2_reg_5044 <= k_2_mid2_fu_3810_p3;
        newIndex_mid2_v_reg_5033 <= {{arrayNo8_mid2_v_fu_3764_p3[4:3]}};
        tmp_625_reg_5028 <= tmp_625_fu_3772_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_7_reg_4907 <= i_7_fu_3486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        indvar_flatten_next2_1_reg_5012 <= indvar_flatten_next2_1_fu_3738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'd0 == exitcond38_fu_1388_p2))) begin
        input_V_addr_reg_4174 <= tmp_694_cast_fu_1470_p1;
        tmp_273_cast_reg_4169[1 : 0] <= tmp_273_cast_fu_1400_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        isneg_reg_4983 <= p_Val2_6_fu_3644_p2[32'd8];
        newsignbit_reg_4996 <= p_Val2_7_fu_3658_p2[32'd7];
        p_Val2_7_reg_4990 <= p_Val2_7_fu_3658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008))) begin
        k_5_reg_5066 <= k_5_fu_3881_p2;
        tmp_263_mid2_reg_5055 <= tmp_263_mid2_fu_3865_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m_7_reg_4123 <= m_7_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        n_7_reg_4146 <= n_7_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        p_1_reg_4066 <= p_1_fu_1210_p2;
        tmp_257_mid2_reg_4045 <= tmp_257_mid2_fu_1178_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965))) begin
        p_mid2_reg_4039 <= p_mid2_fu_1170_p3;
        tmp_517_reg_4050 <= tmp_517_fu_1190_p2;
        tmp_622_reg_4056 <= tmp_622_fu_1202_p1;
        tmp_623_reg_4061 <= tmp_623_fu_1206_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sext_reg_3960 <= sext_fu_898_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond_flatten_reg_3965))) begin
        tmp_254_mid2_reg_4027 <= tmp_254_mid2_fu_996_p3;
        tmp_mid2_v_reg_3989 <= tmp_mid2_v_fu_947_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'd0 == exitcond32_fu_1294_p2))) begin
        tmp_256_cast_reg_4110[5 : 0] <= tmp_256_cast_fu_1300_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd0 == exitcond34_fu_1310_p2))) begin
        tmp_259_reg_4128[1 : 0] <= tmp_259_fu_1322_p1[1 : 0];
        tmp_261_cast_reg_4133[5 : 0] <= tmp_261_cast_fu_1342_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == exitcond37_fu_1352_p2))) begin
        tmp_268_cast_reg_4151[1 : 0] <= tmp_268_cast_fu_1364_p1[1 : 0];
        tmp_270_cast_reg_4156[5 : 0] <= tmp_270_cast_fu_1384_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_3965))) begin
        tmp_522_reg_4082 <= tmp_522_fu_1267_p2;
        weight_V_addr_reg_4076 <= sum_fu_1256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten18_reg_5008))) begin
        tmp_530_reg_5060 <= tmp_530_fu_3875_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond33_fu_3541_p2))) begin
        tmp_534_reg_4930[12 : 1] <= tmp_534_fu_3576_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond30_fu_1284_p2))) begin
        tmp_cast_reg_4102[5 : 0] <= tmp_cast_fu_1290_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        weight_V_addr_read_reg_4087 <= m_axi_weight_V_RDATA;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_902_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten18_fu_3732_p2)) begin
        ap_condition_pp1_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state37))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_2_reg_5071;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_0_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_1_reg_4938;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_0_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_reg_4202;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_0_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_0_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_0_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_0_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_0_d0 = this_assign_1_fu_3261_p3;
    end else begin
        conv1_output_p_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (3'd0 == tmp_624_reg_4912)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (3'd0 == ap_reg_pp1_iter1_tmp_625_reg_5028)))) begin
        conv1_output_p_V_0_we0 = 1'b1;
    end else begin
        conv1_output_p_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_2_reg_5096;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_1_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_1_reg_4963;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_1_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_reg_4227;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_1_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_1_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_1_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_1_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_1_d0 = this_assign_1_1_fu_3291_p3;
    end else begin
        conv1_output_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd1)))) begin
        conv1_output_p_V_1_we0 = 1'b1;
    end else begin
        conv1_output_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_2_reg_5091;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_2_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_1_reg_4958;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_2_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_reg_4222;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_2_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_2_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_2_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_2_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_2_d0 = this_assign_1_2_fu_3321_p3;
    end else begin
        conv1_output_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd2)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd2)))) begin
        conv1_output_p_V_2_we0 = 1'b1;
    end else begin
        conv1_output_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_2_reg_5101;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_3_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_1_reg_4968;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_3_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_reg_4272;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_3_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_3_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_3_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_3_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_3_d0 = this_assign_1_3_fu_3351_p3;
    end else begin
        conv1_output_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd3)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd3)))) begin
        conv1_output_p_V_3_we0 = 1'b1;
    end else begin
        conv1_output_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_2_reg_5076;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_4_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_1_reg_4943;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_4_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_reg_4207;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_4_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_4_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_4_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_4_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_4_d0 = this_assign_1_4_fu_3381_p3;
    end else begin
        conv1_output_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd4)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd4)))) begin
        conv1_output_p_V_4_we0 = 1'b1;
    end else begin
        conv1_output_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_2_reg_5106;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_5_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_1_reg_4973;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_5_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_reg_4277;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_5_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_5_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_5_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_5_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_5_d0 = this_assign_1_5_fu_3411_p3;
    end else begin
        conv1_output_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd5)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd5)))) begin
        conv1_output_p_V_5_we0 = 1'b1;
    end else begin
        conv1_output_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_2_reg_5086;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_6_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_1_reg_4953;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_6_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_reg_4217;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_6_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_6_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_6_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_6_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_6_d0 = this_assign_1_6_fu_3441_p3;
    end else begin
        conv1_output_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd6)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd6)))) begin
        conv1_output_p_V_6_we0 = 1'b1;
    end else begin
        conv1_output_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_2_reg_5081;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv1_output_p_V_7_address0 = tmp_681_cast_fu_3919_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_1_reg_4948;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_output_p_V_7_address0 = tmp_686_cast_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_reg_4212;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv1_output_p_V_7_address0 = tmp_702_cast_fu_1629_p1;
    end else begin
        conv1_output_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv1_output_p_V_7_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_7_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        conv1_output_p_V_7_d0 = this_assign_47_1_fu_3710_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_p_V_7_d0 = this_assign_1_7_fu_3471_p3;
    end else begin
        conv1_output_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state31) & (tmp_624_reg_4912 == 3'd7)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_627_fu_3952_p3) & (ap_reg_pp1_iter1_tmp_625_reg_5028 == 3'd7)))) begin
        conv1_output_p_V_7_we0 = 1'b1;
    end else begin
        conv1_output_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_2_phi_fu_858_p4 = arrayNo8_mid2_v_reg_5023;
    end else begin
        i_2_phi_fu_858_p4 = i_2_reg_854;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        i_phi_fu_673_p4 = tmp_mid2_v_reg_3989;
    end else begin
        i_phi_fu_673_p4 = i_reg_669;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten13_phi_fu_847_p4 = indvar_flatten_next2_1_reg_5012;
    end else begin
        indvar_flatten13_phi_fu_847_p4 = indvar_flatten13_reg_843;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten14_phi_fu_869_p4 = indvar_flatten_next2_reg_5050;
    end else begin
        indvar_flatten14_phi_fu_869_p4 = indvar_flatten14_reg_865;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        indvar_flatten_phi_fu_708_p4 = indvar_flatten_next_fu_1216_p3;
    end else begin
        indvar_flatten_phi_fu_708_p4 = indvar_flatten_reg_704;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_2_phi_fu_880_p4 = tmp_263_mid2_reg_5055;
    end else begin
        j_2_phi_fu_880_p4 = j_2_reg_876;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        j_phi_fu_696_p4 = tmp_254_mid2_reg_4027;
    end else begin
        j_phi_fu_696_p4 = j_reg_692;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten18_reg_5008) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        k_2_phi_fu_891_p4 = k_5_reg_5066;
    end else begin
        k_2_phi_fu_891_p4 = k_2_reg_887;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        k_phi_fu_720_p4 = tmp_257_mid2_reg_4045;
    end else begin
        k_phi_fu_720_p4 = k_reg_716;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_3965) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY))) begin
        m_axi_weight_V_ARVALID = 1'b1;
    end else begin
        m_axi_weight_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        m_axi_weight_V_RREADY = 1'b1;
    end else begin
        m_axi_weight_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_3965) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        p_phi_fu_732_p4 = p_1_reg_4066;
    end else begin
        p_phi_fu_732_p4 = p_reg_728;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_3965))) begin
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY;
    end else begin
        weight_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965))) begin
        weight_V_blk_n_R = m_axi_weight_V_RVALID;
    end else begin
        weight_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_0_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_0_V_address0 = tmp_668_cast_fu_1273_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_V_address0 = 64'd0;
    end else begin
        weight_temp_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_0_V_ce0 = 1'b1;
    end else begin
        weight_temp_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_0_V_d0 = weight_V_addr_read_reg_4087;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_V_d0 = 8'd0;
    end else begin
        weight_temp_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (3'd0 == ap_reg_pp0_iter11_tmp_617_reg_3996)))) begin
        weight_temp_0_V_we0 = 1'b1;
    end else begin
        weight_temp_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_1_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_1_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_1_V_ce0 = 1'b1;
    end else begin
        weight_temp_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd1))) begin
        weight_temp_1_V_we0 = 1'b1;
    end else begin
        weight_temp_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_2_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_2_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_2_V_ce0 = 1'b1;
    end else begin
        weight_temp_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd2))) begin
        weight_temp_2_V_we0 = 1'b1;
    end else begin
        weight_temp_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_3_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_3_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_3_V_ce0 = 1'b1;
    end else begin
        weight_temp_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd3))) begin
        weight_temp_3_V_we0 = 1'b1;
    end else begin
        weight_temp_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_4_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_4_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_4_V_ce0 = 1'b1;
    end else begin
        weight_temp_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd4))) begin
        weight_temp_4_V_we0 = 1'b1;
    end else begin
        weight_temp_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_5_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_5_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_5_V_ce0 = 1'b1;
    end else begin
        weight_temp_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd5))) begin
        weight_temp_5_V_we0 = 1'b1;
    end else begin
        weight_temp_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_6_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_6_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_6_V_ce0 = 1'b1;
    end else begin
        weight_temp_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd6))) begin
        weight_temp_6_V_we0 = 1'b1;
    end else begin
        weight_temp_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        weight_temp_7_V_address0 = tmp_711_cast_fu_1657_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_7_V_address0 = tmp_668_cast_fu_1273_p1;
    end else begin
        weight_temp_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_7_V_ce0 = 1'b1;
    end else begin
        weight_temp_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_tmp_617_reg_3996 == 3'd7))) begin
        weight_temp_7_V_we0 = 1'b1;
    end else begin
        weight_temp_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_enable_reg_pp0_iter11 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_902_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_enable_reg_pp0_iter11 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_902_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond30_fu_1284_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond32_fu_1294_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == exitcond34_fu_1310_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == exitcond37_fu_1352_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'd1 == exitcond38_fu_1388_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == exitcond39_fu_1475_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond31_fu_3480_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond33_fu_3541_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond36_fu_3582_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten18_fu_3732_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten18_fu_3732_p2) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (((ap_block_pp1_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1673_p1 = $signed(input_V_load_reg_4282);

assign Range1_all_ones_1_fu_2568_p2 = ((tmp_281_reg_4475 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2665_p2 = ((tmp_282_reg_4512 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2762_p2 = ((tmp_283_reg_4549 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2859_p2 = ((tmp_284_reg_4586 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2956_p2 = ((tmp_285_reg_4623 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_3053_p2 = ((tmp_286_reg_4660 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_3150_p2 = ((tmp_287_reg_4697 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_2471_p2 = ((tmp_280_reg_4438 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2573_p2 = ((tmp_281_reg_4475 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2670_p2 = ((tmp_282_reg_4512 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2767_p2 = ((tmp_283_reg_4549 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2864_p2 = ((tmp_284_reg_4586 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2961_p2 = ((tmp_285_reg_4623 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_3058_p2 = ((tmp_286_reg_4660 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_3155_p2 = ((tmp_287_reg_4697 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2476_p2 = ((tmp_280_reg_4438 == 2'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd22];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (1'b0 == m_axi_weight_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b1 == ap_block_state6_io)) | ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (1'b0 == m_axi_weight_V_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b1 == ap_block_state6_io)) | ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (1'b0 == m_axi_weight_V_RVALID)));
end

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter11 = ((1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_3965) & (1'b0 == m_axi_weight_V_RVALID));
end

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_3965) & (1'b0 == ap_sig_ioackin_m_axi_weight_V_ARREADY));
end

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo8_mid2_v_fu_3764_p3 = ((exitcond_flatten19_fu_3750_p2[0:0] === 1'b1) ? i_8_fu_3744_p2 : i_2_phi_fu_858_p4);

assign bias_V_address0 = bias_V_addr_reg_4922;

assign brmerge40_demorgan_i_35_fu_2727_p2 = (tmp_649_reg_4499 & deleted_ones_2_fu_2693_p3);

assign brmerge40_demorgan_i_36_fu_2824_p2 = (tmp_654_reg_4536 & deleted_ones_3_fu_2790_p3);

assign brmerge40_demorgan_i_37_fu_2921_p2 = (tmp_659_reg_4573 & deleted_ones_4_fu_2887_p3);

assign brmerge40_demorgan_i_38_fu_3018_p2 = (tmp_664_reg_4610 & deleted_ones_5_fu_2984_p3);

assign brmerge40_demorgan_i_39_fu_3115_p2 = (tmp_669_reg_4647 & deleted_ones_6_fu_3081_p3);

assign brmerge40_demorgan_i_40_fu_3212_p2 = (tmp_674_reg_4684 & deleted_ones_7_fu_3178_p3);

assign brmerge40_demorgan_i_41_fu_2630_p2 = (tmp_644_reg_4462 & deleted_ones_1_fu_2596_p3);

assign brmerge40_demorgan_i_fu_2533_p2 = (tmp_639_reg_4425 & deleted_ones_fu_2499_p3);

assign brmerge_fu_3691_p2 = (newsignbit_reg_4996 | isneg_not_fu_3686_p2);

assign brmerge_i_i9_1_fu_2614_p2 = (tmp_644_reg_4462 | p_not_i_i_1_fu_2608_p2);

assign brmerge_i_i9_2_fu_2711_p2 = (tmp_649_reg_4499 | p_not_i_i_2_fu_2705_p2);

assign brmerge_i_i9_3_fu_2808_p2 = (tmp_654_reg_4536 | p_not_i_i_3_fu_2802_p2);

assign brmerge_i_i9_4_fu_2905_p2 = (tmp_659_reg_4573 | p_not_i_i_4_fu_2899_p2);

assign brmerge_i_i9_5_fu_3002_p2 = (tmp_664_reg_4610 | p_not_i_i_5_fu_2996_p2);

assign brmerge_i_i9_6_fu_3099_p2 = (tmp_669_reg_4647 | p_not_i_i_6_fu_3093_p2);

assign brmerge_i_i9_7_fu_3196_p2 = (tmp_674_reg_4684 | p_not_i_i_7_fu_3190_p2);

assign brmerge_i_i9_fu_2517_p2 = (tmp_639_reg_4425 | p_not_i_i_fu_2511_p2);

assign brmerge_i_i_fu_3682_p2 = (isneg_reg_4983 ^ newsignbit_reg_4996);

assign brmerge_i_i_i_1_fu_2652_p2 = (underflow_1_fu_2647_p2 | overflow_1_fu_2624_p2);

assign brmerge_i_i_i_2_fu_2749_p2 = (underflow_2_fu_2744_p2 | overflow_2_fu_2721_p2);

assign brmerge_i_i_i_3_fu_2846_p2 = (underflow_3_fu_2841_p2 | overflow_3_fu_2818_p2);

assign brmerge_i_i_i_4_fu_2943_p2 = (underflow_4_fu_2938_p2 | overflow_4_fu_2915_p2);

assign brmerge_i_i_i_5_fu_3040_p2 = (underflow_5_fu_3035_p2 | overflow_5_fu_3012_p2);

assign brmerge_i_i_i_6_fu_3137_p2 = (underflow_6_fu_3132_p2 | overflow_6_fu_3109_p2);

assign brmerge_i_i_i_7_fu_3234_p2 = (underflow_7_fu_3229_p2 | overflow_7_fu_3206_p2);

assign brmerge_i_i_i_fu_2555_p2 = (underflow_fu_2550_p2 | overflow_fu_2527_p2);

assign carry_15_1_fu_1962_p2 = (tmp_643_fu_1934_p3 & tmp_468_1_fu_1956_p2);

assign carry_15_2_fu_2043_p2 = (tmp_648_fu_2015_p3 & tmp_468_2_fu_2037_p2);

assign carry_15_3_fu_2124_p2 = (tmp_653_fu_2096_p3 & tmp_468_3_fu_2118_p2);

assign carry_15_4_fu_2205_p2 = (tmp_658_fu_2177_p3 & tmp_468_4_fu_2199_p2);

assign carry_15_5_fu_2286_p2 = (tmp_663_fu_2258_p3 & tmp_468_5_fu_2280_p2);

assign carry_15_6_fu_2367_p2 = (tmp_668_fu_2339_p3 & tmp_468_6_fu_2361_p2);

assign carry_15_7_fu_2448_p2 = (tmp_673_fu_2420_p3 & tmp_468_7_fu_2442_p2);

assign carry_s_fu_1881_p2 = (tmp_638_fu_1853_p3 & tmp_276_fu_1875_p2);

assign ci_9_fu_1394_p2 = (ci_reg_786 + 2'd1);

assign co_36_7_fu_1623_p2 = (5'd8 + co_reg_797);

assign deleted_ones_1_fu_2596_p3 = ((carry_15_1_reg_4468[0:0] === 1'b1) ? p_41_i_i_1_fu_2591_p2 : Range1_all_ones_1_fu_2568_p2);

assign deleted_ones_2_fu_2693_p3 = ((carry_15_2_reg_4505[0:0] === 1'b1) ? p_41_i_i_2_fu_2688_p2 : Range1_all_ones_2_fu_2665_p2);

assign deleted_ones_3_fu_2790_p3 = ((carry_15_3_reg_4542[0:0] === 1'b1) ? p_41_i_i_3_fu_2785_p2 : Range1_all_ones_3_fu_2762_p2);

assign deleted_ones_4_fu_2887_p3 = ((carry_15_4_reg_4579[0:0] === 1'b1) ? p_41_i_i_4_fu_2882_p2 : Range1_all_ones_4_fu_2859_p2);

assign deleted_ones_5_fu_2984_p3 = ((carry_15_5_reg_4616[0:0] === 1'b1) ? p_41_i_i_5_fu_2979_p2 : Range1_all_ones_5_fu_2956_p2);

assign deleted_ones_6_fu_3081_p3 = ((carry_15_6_reg_4653[0:0] === 1'b1) ? p_41_i_i_6_fu_3076_p2 : Range1_all_ones_6_fu_3053_p2);

assign deleted_ones_7_fu_3178_p3 = ((carry_15_7_reg_4690[0:0] === 1'b1) ? p_41_i_i_7_fu_3173_p2 : Range1_all_ones_7_fu_3150_p2);

assign deleted_ones_fu_2499_p3 = ((carry_s_reg_4431[0:0] === 1'b1) ? p_41_i_i_fu_2494_p2 : Range1_all_ones_fu_2471_p2);

assign deleted_zeros_1_fu_2578_p3 = ((carry_15_1_reg_4468[0:0] === 1'b1) ? Range1_all_ones_1_fu_2568_p2 : Range1_all_zeros_1_fu_2573_p2);

assign deleted_zeros_2_fu_2675_p3 = ((carry_15_2_reg_4505[0:0] === 1'b1) ? Range1_all_ones_2_fu_2665_p2 : Range1_all_zeros_2_fu_2670_p2);

assign deleted_zeros_3_fu_2772_p3 = ((carry_15_3_reg_4542[0:0] === 1'b1) ? Range1_all_ones_3_fu_2762_p2 : Range1_all_zeros_3_fu_2767_p2);

assign deleted_zeros_4_fu_2869_p3 = ((carry_15_4_reg_4579[0:0] === 1'b1) ? Range1_all_ones_4_fu_2859_p2 : Range1_all_zeros_4_fu_2864_p2);

assign deleted_zeros_5_fu_2966_p3 = ((carry_15_5_reg_4616[0:0] === 1'b1) ? Range1_all_ones_5_fu_2956_p2 : Range1_all_zeros_5_fu_2961_p2);

assign deleted_zeros_6_fu_3063_p3 = ((carry_15_6_reg_4653[0:0] === 1'b1) ? Range1_all_ones_6_fu_3053_p2 : Range1_all_zeros_6_fu_3058_p2);

assign deleted_zeros_7_fu_3160_p3 = ((carry_15_7_reg_4690[0:0] === 1'b1) ? Range1_all_ones_7_fu_3150_p2 : Range1_all_zeros_7_fu_3155_p2);

assign deleted_zeros_fu_2481_p3 = ((carry_s_reg_4431[0:0] === 1'b1) ? Range1_all_ones_fu_2471_p2 : Range1_all_zeros_fu_2476_p2);

assign exitcond30_fu_1284_p2 = ((h_reg_740 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond31_fu_3480_p2 = ((i_1_reg_808 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond32_fu_1294_p2 = ((w_reg_752 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond33_fu_3541_p2 = ((j_1_reg_819 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond34_fu_1310_p2 = ((m_reg_764 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond35_fu_3792_p2 = ((k_2_phi_fu_891_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond36_fu_3582_p2 = ((k_1_reg_831 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond37_fu_1352_p2 = ((n_reg_775 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond38_fu_1388_p2 = ((ci_reg_786 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond39_fu_1475_p2 = ((co_reg_797 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond65_mid1_fu_1148_p2 = (exitcond65_mid_fu_1064_p2 & not_exitcond_flatten_3_fu_1143_p2);

assign exitcond65_mid_fu_1064_p2 = (exitcond_fu_1058_p2 & not_exitcond_flatten_reg_4006);

assign exitcond_flatten16_fu_914_p2 = ((indvar_flatten12_reg_681 == 6'd27) ? 1'b1 : 1'b0);

assign exitcond_flatten17_fu_973_p2 = ((indvar_flatten_phi_fu_708_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten18_fu_3732_p2 = ((indvar_flatten13_phi_fu_847_p4 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_flatten19_fu_3750_p2 = ((indvar_flatten14_phi_fu_869_p4 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_902_p2 = ((indvar_flatten11_reg_658 == 10'd648) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_979_p2 = (exitcond_flatten17_fu_973_p2 & not_exitcond_flatten_fu_968_p2);

assign exitcond_flatten_not_fu_1138_p2 = (exitcond_flatten17_reg_4011 ^ 1'd1);

assign exitcond_fu_1058_p2 = ((p_phi_fu_732_p4 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3798_p2 = (exitcond35_fu_3792_p2 & not_exitcond_flatten_1_fu_3786_p2);

assign h_30_fu_1304_p2 = (h_reg_740 + 6'd1);

assign i_6_fu_934_p2 = (5'd1 + i_phi_fu_673_p4);

assign i_7_fu_3486_p2 = (i_1_reg_808 + 5'd1);

assign i_8_fu_3744_p2 = (5'd1 + i_2_phi_fu_858_p4);

assign indvar_flatten13_op_fu_920_p2 = (indvar_flatten12_reg_681 + 6'd1);

assign indvar_flatten44_op_fu_3818_p2 = (indvar_flatten14_phi_fu_869_p4 + 12'd1);

assign indvar_flatten_next1_7_fu_908_p2 = (indvar_flatten11_reg_658 + 10'd1);

assign indvar_flatten_next1_fu_926_p3 = ((exitcond_flatten16_fu_914_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten13_op_fu_920_p2);

assign indvar_flatten_next2_1_fu_3738_p2 = (indvar_flatten13_phi_fu_847_p4 + 15'd1);

assign indvar_flatten_next2_fu_3824_p3 = ((exitcond_flatten19_fu_3750_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten44_op_fu_3818_p2);

assign indvar_flatten_next_fu_1216_p3 = ((tmp_511_reg_4021[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_reg_4034);

assign indvar_flatten_op_fu_1004_p2 = (indvar_flatten_phi_fu_708_p4 + 4'd1);

assign input_V_address0 = input_V_addr_reg_4174;

assign isneg_not_fu_3686_p2 = (isneg_reg_4983 ^ 1'd1);

assign j_2_mid_fu_3756_p3 = ((exitcond_flatten19_fu_3750_p2[0:0] === 1'b1) ? 6'd1 : j_2_phi_fu_880_p4);

assign j_6_fu_985_p2 = (2'd1 + j_mid_fu_940_p3);

assign j_7_fu_3609_p2 = (j_1_reg_819 + 6'd1);

assign j_8_fu_3860_p2 = (6'd1 + j_2_mid_reg_5017);

assign j_mid_fu_940_p3 = ((exitcond_flatten16_reg_3974[0:0] === 1'b1) ? 2'd0 : j_phi_fu_696_p4);

assign k_2_mid2_fu_3810_p3 = ((tmp_529_fu_3804_p2[0:0] === 1'b1) ? 6'd1 : k_2_phi_fu_891_p4);

assign k_4_fu_1154_p2 = (2'd1 + k_mid_fu_1069_p3);

assign k_5_fu_3881_p2 = (k_2_mid2_reg_5044 + 6'd1);

assign k_6_fu_3726_p2 = (k_1_reg_831 + 6'd1);

assign k_mid_fu_1069_p3 = ((tmp_511_reg_4021[0:0] === 1'b1) ? 2'd0 : k_phi_fu_720_p4);

assign m_7_fu_1316_p2 = (m_reg_764 + 2'd1);

assign m_axi_weight_V_ARADDR = weight_V_addr_reg_4076;

assign m_axi_weight_V_ARBURST = 2'd0;

assign m_axi_weight_V_ARCACHE = 4'd0;

assign m_axi_weight_V_ARID = 1'd0;

assign m_axi_weight_V_ARLEN = 32'd1;

assign m_axi_weight_V_ARLOCK = 2'd0;

assign m_axi_weight_V_ARPROT = 3'd0;

assign m_axi_weight_V_ARQOS = 4'd0;

assign m_axi_weight_V_ARREGION = 4'd0;

assign m_axi_weight_V_ARSIZE = 3'd0;

assign m_axi_weight_V_ARUSER = 1'd0;

assign m_axi_weight_V_AWADDR = 32'd0;

assign m_axi_weight_V_AWBURST = 2'd0;

assign m_axi_weight_V_AWCACHE = 4'd0;

assign m_axi_weight_V_AWID = 1'd0;

assign m_axi_weight_V_AWLEN = 32'd0;

assign m_axi_weight_V_AWLOCK = 2'd0;

assign m_axi_weight_V_AWPROT = 3'd0;

assign m_axi_weight_V_AWQOS = 4'd0;

assign m_axi_weight_V_AWREGION = 4'd0;

assign m_axi_weight_V_AWSIZE = 3'd0;

assign m_axi_weight_V_AWUSER = 1'd0;

assign m_axi_weight_V_AWVALID = 1'b0;

assign m_axi_weight_V_BREADY = 1'b0;

assign m_axi_weight_V_WDATA = 8'd0;

assign m_axi_weight_V_WID = 1'd0;

assign m_axi_weight_V_WLAST = 1'b0;

assign m_axi_weight_V_WSTRB = 1'd0;

assign m_axi_weight_V_WUSER = 1'd0;

assign m_axi_weight_V_WVALID = 1'b0;

assign n_7_fu_1358_p2 = (n_reg_775 + 2'd1);

assign newIndex22_mid2_cast_fu_1034_p1 = newIndex22_mid2_v_reg_4000;

assign newIndex2_fu_1481_p4 = {{co_reg_797[4:3]}};

assign newIndex3_cast_fu_1491_p1 = newIndex2_fu_1481_p4;

assign newIndex_fu_3501_p4 = {{i_1_reg_808[4:3]}};

assign not_exitcond_flatten_1_fu_3786_p2 = (exitcond_flatten19_fu_3750_p2 ^ 1'd1);

assign not_exitcond_flatten_3_fu_1143_p2 = (ap_reg_pp0_iter1_exitcond_flatten16_reg_3974 | exitcond_flatten_not_fu_1138_p2);

assign not_exitcond_flatten_fu_968_p2 = (exitcond_flatten16_reg_3974 ^ 1'd1);

assign overflow_1_fu_2624_p2 = (brmerge_i_i9_1_fu_2614_p2 & tmp_473_1_fu_2619_p2);

assign overflow_2_fu_2721_p2 = (brmerge_i_i9_2_fu_2711_p2 & tmp_473_2_fu_2716_p2);

assign overflow_3_fu_2818_p2 = (brmerge_i_i9_3_fu_2808_p2 & tmp_473_3_fu_2813_p2);

assign overflow_4_fu_2915_p2 = (brmerge_i_i9_4_fu_2905_p2 & tmp_473_4_fu_2910_p2);

assign overflow_5_fu_3012_p2 = (brmerge_i_i9_5_fu_3002_p2 & tmp_473_5_fu_3007_p2);

assign overflow_6_fu_3109_p2 = (brmerge_i_i9_6_fu_3099_p2 & tmp_473_6_fu_3104_p2);

assign overflow_7_fu_3206_p2 = (brmerge_i_i9_7_fu_3196_p2 & tmp_473_7_fu_3201_p2);

assign overflow_fu_2527_p2 = (brmerge_i_i9_fu_2517_p2 & tmp_278_fu_2522_p2);

assign p_1_fu_1210_p2 = (p_mid2_fu_1170_p3 + 2'd1);

assign p_38_i_i_1_fu_2603_p2 = (carry_15_1_reg_4468 & Range1_all_ones_1_fu_2568_p2);

assign p_38_i_i_2_fu_2700_p2 = (carry_15_2_reg_4505 & Range1_all_ones_2_fu_2665_p2);

assign p_38_i_i_3_fu_2797_p2 = (carry_15_3_reg_4542 & Range1_all_ones_3_fu_2762_p2);

assign p_38_i_i_4_fu_2894_p2 = (carry_15_4_reg_4579 & Range1_all_ones_4_fu_2859_p2);

assign p_38_i_i_5_fu_2991_p2 = (carry_15_5_reg_4616 & Range1_all_ones_5_fu_2956_p2);

assign p_38_i_i_6_fu_3088_p2 = (carry_15_6_reg_4653 & Range1_all_ones_6_fu_3053_p2);

assign p_38_i_i_7_fu_3185_p2 = (carry_15_7_reg_4690 & Range1_all_ones_7_fu_3150_p2);

assign p_38_i_i_fu_2506_p2 = (carry_s_reg_4431 & Range1_all_ones_fu_2471_p2);

assign p_41_i_i_1_fu_2591_p2 = (tmp_641_reg_4449 & tmp_471_1_fu_2585_p2);

assign p_41_i_i_2_fu_2688_p2 = (tmp_646_reg_4486 & tmp_471_2_fu_2682_p2);

assign p_41_i_i_3_fu_2785_p2 = (tmp_651_reg_4523 & tmp_471_3_fu_2779_p2);

assign p_41_i_i_4_fu_2882_p2 = (tmp_656_reg_4560 & tmp_471_4_fu_2876_p2);

assign p_41_i_i_5_fu_2979_p2 = (tmp_661_reg_4597 & tmp_471_5_fu_2973_p2);

assign p_41_i_i_6_fu_3076_p2 = (tmp_666_reg_4634 & tmp_471_6_fu_3070_p2);

assign p_41_i_i_7_fu_3173_p2 = (tmp_671_reg_4671 & tmp_471_7_fu_3167_p2);

assign p_41_i_i_fu_2494_p2 = (tmp_636_reg_4412 & tmp_277_fu_2488_p2);

assign p_Val2_1_fu_1861_p2 = (tmp_275_fu_1850_p1 + p_Val2_9_fu_1840_p4);

assign p_Val2_2_fu_3255_p3 = ((underflow_reg_4718[0:0] === 1'b1) ? 8'd128 : p_Val2_1_reg_4419);

assign p_Val2_6_fu_3644_p2 = ($signed(tmp_265_fu_3636_p1) + $signed(tmp_266_fu_3640_p1));

assign p_Val2_7_fu_3658_p2 = (p_Val2_s_209_fu_3615_p10 + bias_V_q0);

assign p_Val2_8_fu_1827_p2 = ($signed(p_Val2_s_reg_4287) + $signed(tmp_290_cast_fu_1823_p1));

assign p_Val2_90_mux_fu_3696_p3 = ((brmerge_i_i_fu_3682_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_7_reg_4990);

assign p_Val2_92_1_fu_1694_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_1_fu_1694_p1 = weight_temp_1_V_q0;

assign p_Val2_92_1_fu_1694_p2 = ($signed(p_Val2_92_1_fu_1694_p0) * $signed(p_Val2_92_1_fu_1694_p1));

assign p_Val2_92_2_fu_1712_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_2_fu_1712_p1 = weight_temp_2_V_q0;

assign p_Val2_92_2_fu_1712_p2 = ($signed(p_Val2_92_2_fu_1712_p0) * $signed(p_Val2_92_2_fu_1712_p1));

assign p_Val2_92_3_fu_1730_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_3_fu_1730_p1 = weight_temp_3_V_q0;

assign p_Val2_92_3_fu_1730_p2 = ($signed(p_Val2_92_3_fu_1730_p0) * $signed(p_Val2_92_3_fu_1730_p1));

assign p_Val2_92_4_fu_1748_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_4_fu_1748_p1 = weight_temp_4_V_q0;

assign p_Val2_92_4_fu_1748_p2 = ($signed(p_Val2_92_4_fu_1748_p0) * $signed(p_Val2_92_4_fu_1748_p1));

assign p_Val2_92_5_fu_1766_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_5_fu_1766_p1 = weight_temp_5_V_q0;

assign p_Val2_92_5_fu_1766_p2 = ($signed(p_Val2_92_5_fu_1766_p0) * $signed(p_Val2_92_5_fu_1766_p1));

assign p_Val2_92_6_fu_1784_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_6_fu_1784_p1 = weight_temp_6_V_q0;

assign p_Val2_92_6_fu_1784_p2 = ($signed(p_Val2_92_6_fu_1784_p0) * $signed(p_Val2_92_6_fu_1784_p1));

assign p_Val2_92_7_fu_1802_p0 = OP2_V_fu_1673_p1;

assign p_Val2_92_7_fu_1802_p1 = weight_temp_7_V_q0;

assign p_Val2_92_7_fu_1802_p2 = ($signed(p_Val2_92_7_fu_1802_p0) * $signed(p_Val2_92_7_fu_1802_p1));

assign p_Val2_93_1_fu_1908_p2 = ($signed(p_Val2_92_1_reg_4302) + $signed(tmp_460_1_cast_fu_1904_p1));

assign p_Val2_93_2_fu_1989_p2 = ($signed(p_Val2_92_2_reg_4317) + $signed(tmp_460_2_cast_fu_1985_p1));

assign p_Val2_93_3_fu_2070_p2 = ($signed(p_Val2_92_3_reg_4332) + $signed(tmp_460_3_cast_fu_2066_p1));

assign p_Val2_93_4_fu_2151_p2 = ($signed(p_Val2_92_4_reg_4347) + $signed(tmp_460_4_cast_fu_2147_p1));

assign p_Val2_93_5_fu_2232_p2 = ($signed(p_Val2_92_5_reg_4362) + $signed(tmp_460_5_cast_fu_2228_p1));

assign p_Val2_93_6_fu_2313_p2 = ($signed(p_Val2_92_6_reg_4377) + $signed(tmp_460_6_cast_fu_2309_p1));

assign p_Val2_93_7_fu_2394_p2 = ($signed(p_Val2_92_7_reg_4392) + $signed(tmp_460_7_cast_fu_2390_p1));

assign p_Val2_94_1_fu_1921_p4 = {{p_Val2_93_1_fu_1908_p2[13:6]}};

assign p_Val2_94_2_fu_2002_p4 = {{p_Val2_93_2_fu_1989_p2[13:6]}};

assign p_Val2_94_3_fu_2083_p4 = {{p_Val2_93_3_fu_2070_p2[13:6]}};

assign p_Val2_94_4_fu_2164_p4 = {{p_Val2_93_4_fu_2151_p2[13:6]}};

assign p_Val2_94_5_fu_2245_p4 = {{p_Val2_93_5_fu_2232_p2[13:6]}};

assign p_Val2_94_6_fu_2326_p4 = {{p_Val2_93_6_fu_2313_p2[13:6]}};

assign p_Val2_94_7_fu_2407_p4 = {{p_Val2_93_7_fu_2394_p2[13:6]}};

assign p_Val2_95_1_199_fu_3285_p3 = ((underflow_1_reg_4743[0:0] === 1'b1) ? 8'd128 : p_Val2_95_1_reg_4456);

assign p_Val2_95_1_fu_1942_p2 = (tmp_464_1_fu_1931_p1 + p_Val2_94_1_fu_1921_p4);

assign p_Val2_95_2_200_fu_3315_p3 = ((underflow_2_reg_4768[0:0] === 1'b1) ? 8'd128 : p_Val2_95_2_reg_4493);

assign p_Val2_95_2_fu_2023_p2 = (tmp_464_2_fu_2012_p1 + p_Val2_94_2_fu_2002_p4);

assign p_Val2_95_3_201_fu_3345_p3 = ((underflow_3_reg_4793[0:0] === 1'b1) ? 8'd128 : p_Val2_95_3_reg_4530);

assign p_Val2_95_3_fu_2104_p2 = (tmp_464_3_fu_2093_p1 + p_Val2_94_3_fu_2083_p4);

assign p_Val2_95_4_202_fu_3375_p3 = ((underflow_4_reg_4818[0:0] === 1'b1) ? 8'd128 : p_Val2_95_4_reg_4567);

assign p_Val2_95_4_fu_2185_p2 = (tmp_464_4_fu_2174_p1 + p_Val2_94_4_fu_2164_p4);

assign p_Val2_95_5_203_fu_3405_p3 = ((underflow_5_reg_4843[0:0] === 1'b1) ? 8'd128 : p_Val2_95_5_reg_4604);

assign p_Val2_95_5_fu_2266_p2 = (tmp_464_5_fu_2255_p1 + p_Val2_94_5_fu_2245_p4);

assign p_Val2_95_6_204_fu_3435_p3 = ((underflow_6_reg_4868[0:0] === 1'b1) ? 8'd128 : p_Val2_95_6_reg_4641);

assign p_Val2_95_6_fu_2347_p2 = (tmp_464_6_fu_2336_p1 + p_Val2_94_6_fu_2326_p4);

assign p_Val2_95_7_205_fu_3465_p3 = ((underflow_7_reg_4893[0:0] === 1'b1) ? 8'd128 : p_Val2_95_7_reg_4678);

assign p_Val2_95_7_fu_2428_p2 = (tmp_464_7_fu_2417_p1 + p_Val2_94_7_fu_2407_p4);

assign p_Val2_95_mux_1_fu_3279_p3 = ((brmerge_i_i_i_1_reg_4748[0:0] === 1'b1) ? 8'd127 : p_Val2_95_1_reg_4456);

assign p_Val2_95_mux_2_fu_3309_p3 = ((brmerge_i_i_i_2_reg_4773[0:0] === 1'b1) ? 8'd127 : p_Val2_95_2_reg_4493);

assign p_Val2_95_mux_3_fu_3339_p3 = ((brmerge_i_i_i_3_reg_4798[0:0] === 1'b1) ? 8'd127 : p_Val2_95_3_reg_4530);

assign p_Val2_95_mux_4_fu_3369_p3 = ((brmerge_i_i_i_4_reg_4823[0:0] === 1'b1) ? 8'd127 : p_Val2_95_4_reg_4567);

assign p_Val2_95_mux_5_fu_3399_p3 = ((brmerge_i_i_i_5_reg_4848[0:0] === 1'b1) ? 8'd127 : p_Val2_95_5_reg_4604);

assign p_Val2_95_mux_6_fu_3429_p3 = ((brmerge_i_i_i_6_reg_4873[0:0] === 1'b1) ? 8'd127 : p_Val2_95_6_reg_4641);

assign p_Val2_95_mux_7_fu_3459_p3 = ((brmerge_i_i_i_7_reg_4898[0:0] === 1'b1) ? 8'd127 : p_Val2_95_7_reg_4678);

assign p_Val2_95_mux_fu_3249_p3 = ((brmerge_i_i_i_reg_4723[0:0] === 1'b1) ? 8'd127 : p_Val2_1_reg_4419);

assign p_Val2_9_fu_1840_p4 = {{p_Val2_8_fu_1827_p2[13:6]}};

assign p_Val2_s_210_fu_3703_p3 = ((underflow_11_fu_3677_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_7_reg_4990);

assign p_Val2_s_fu_1676_p0 = OP2_V_fu_1673_p1;

assign p_Val2_s_fu_1676_p1 = weight_temp_0_V_q0;

assign p_Val2_s_fu_1676_p2 = ($signed(p_Val2_s_fu_1676_p0) * $signed(p_Val2_s_fu_1676_p1));

assign p_mid2_fu_1170_p3 = ((tmp_620_fu_1165_p2[0:0] === 1'b1) ? 2'd0 : p_phi_fu_732_p4);

assign p_not_i_i_1_fu_2608_p2 = (deleted_zeros_1_fu_2578_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2705_p2 = (deleted_zeros_2_fu_2675_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2802_p2 = (deleted_zeros_3_fu_2772_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2899_p2 = (deleted_zeros_4_fu_2869_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2996_p2 = (deleted_zeros_5_fu_2966_p3 ^ 1'd1);

assign p_not_i_i_6_fu_3093_p2 = (deleted_zeros_6_fu_3063_p3 ^ 1'd1);

assign p_not_i_i_7_fu_3190_p2 = (deleted_zeros_7_fu_3160_p3 ^ 1'd1);

assign p_not_i_i_fu_2511_p2 = (deleted_zeros_fu_2481_p3 ^ 1'd1);

assign p_shl10_cast_fu_1640_p3 = {{tmp_635_reg_4192}, {2'd0}};

assign p_shl12_cast_fu_1569_p1 = tmp_548_fu_1561_p3;

assign p_shl13_cast_fu_1530_p3 = {{tmp_545_fu_1525_p2}, {5'd0}};

assign p_shl14_cast_fu_1546_p1 = tmp_632_fu_1538_p3;

assign p_shl15_cast_fu_1503_p1 = tmp_542_fu_1495_p3;

assign p_shl16_cast_fu_1515_p1 = tmp_543_fu_1507_p3;

assign p_shl17_cast_fu_3519_p1 = tmp_523_fu_3511_p3;

assign p_shl18_cast_fu_3531_p1 = tmp_524_fu_3523_p3;

assign p_shl19_cast_fu_3556_p3 = {{tmp_533_fu_3551_p2}, {5'd0}};

assign p_shl20_cast_fu_3572_p1 = tmp_628_fu_3564_p3;

assign p_shl21_cast_fu_3886_p3 = {{tmp_530_reg_5060}, {5'd0}};

assign p_shl22_cast_fu_3900_p1 = tmp_626_fu_3893_p3;

assign p_shl23_cast_fu_3839_p1 = tmp_526_fu_3832_p3;

assign p_shl24_cast_fu_3850_p1 = tmp_527_fu_3843_p3;

assign p_shl2_fu_1128_p1 = $signed(tmp_619_fu_1120_p3);

assign p_shl3_fu_1100_p1 = $signed(tmp_618_fu_1092_p3);

assign p_shl4_cast_fu_1044_p1 = tmp_509_fu_1037_p3;

assign p_shl5_cast_fu_1020_p1 = tmp_fu_1013_p3;

assign p_shl6_cast_fu_1439_p3 = {{tmp_539_fu_1434_p2}, {5'd0}};

assign p_shl7_cast_fu_1455_p1 = tmp_631_fu_1447_p3;

assign p_shl8_cast_fu_1412_p1 = tmp_536_fu_1404_p3;

assign p_shl9_cast_fu_1424_p1 = tmp_537_fu_1416_p3;

assign p_shl_cast_fu_1232_p3 = {{tmp_623_reg_4061}, {2'd0}};

assign p_shl_fu_1600_p1 = $signed(tmp_633_fu_1592_p3);

assign sext_fu_898_p1 = $signed(conv1_weight_V3);

assign sum_fu_1256_p2 = ($signed(tmp_521_fu_1250_p2) + $signed(sext_reg_3960));

assign this_assign_1_1_fu_3291_p3 = ((underflow_not_1_fu_3274_p2[0:0] === 1'b1) ? p_Val2_95_mux_1_fu_3279_p3 : p_Val2_95_1_199_fu_3285_p3);

assign this_assign_1_2_fu_3321_p3 = ((underflow_not_2_fu_3304_p2[0:0] === 1'b1) ? p_Val2_95_mux_2_fu_3309_p3 : p_Val2_95_2_200_fu_3315_p3);

assign this_assign_1_3_fu_3351_p3 = ((underflow_not_3_fu_3334_p2[0:0] === 1'b1) ? p_Val2_95_mux_3_fu_3339_p3 : p_Val2_95_3_201_fu_3345_p3);

assign this_assign_1_4_fu_3381_p3 = ((underflow_not_4_fu_3364_p2[0:0] === 1'b1) ? p_Val2_95_mux_4_fu_3369_p3 : p_Val2_95_4_202_fu_3375_p3);

assign this_assign_1_5_fu_3411_p3 = ((underflow_not_5_fu_3394_p2[0:0] === 1'b1) ? p_Val2_95_mux_5_fu_3399_p3 : p_Val2_95_5_203_fu_3405_p3);

assign this_assign_1_6_fu_3441_p3 = ((underflow_not_6_fu_3424_p2[0:0] === 1'b1) ? p_Val2_95_mux_6_fu_3429_p3 : p_Val2_95_6_204_fu_3435_p3);

assign this_assign_1_7_fu_3471_p3 = ((underflow_not_7_fu_3454_p2[0:0] === 1'b1) ? p_Val2_95_mux_7_fu_3459_p3 : p_Val2_95_7_205_fu_3465_p3);

assign this_assign_1_fu_3261_p3 = ((underflow_not_fu_3244_p2[0:0] === 1'b1) ? p_Val2_95_mux_fu_3249_p3 : p_Val2_2_fu_3255_p3);

assign this_assign_47_1_fu_3710_p3 = ((brmerge_fu_3691_p2[0:0] === 1'b1) ? p_Val2_90_mux_fu_3696_p3 : p_Val2_s_210_fu_3703_p3);

assign tmp10_demorgan_fu_2829_p2 = (p_38_i_i_3_fu_2797_p2 | brmerge40_demorgan_i_36_fu_2824_p2);

assign tmp10_fu_2835_p2 = (tmp10_demorgan_fu_2829_p2 ^ 1'd1);

assign tmp11_fu_3330_p2 = (brmerge40_demorgan_i_36_reg_4788 | tmp_473_3_reg_4783);

assign tmp12_demorgan_fu_2926_p2 = (p_38_i_i_4_fu_2894_p2 | brmerge40_demorgan_i_37_fu_2921_p2);

assign tmp12_fu_2932_p2 = (tmp12_demorgan_fu_2926_p2 ^ 1'd1);

assign tmp13_fu_3360_p2 = (brmerge40_demorgan_i_37_reg_4813 | tmp_473_4_reg_4808);

assign tmp14_demorgan_fu_3023_p2 = (p_38_i_i_5_fu_2991_p2 | brmerge40_demorgan_i_38_fu_3018_p2);

assign tmp14_fu_3029_p2 = (tmp14_demorgan_fu_3023_p2 ^ 1'd1);

assign tmp15_fu_3390_p2 = (brmerge40_demorgan_i_38_reg_4838 | tmp_473_5_reg_4833);

assign tmp16_demorgan_fu_3120_p2 = (p_38_i_i_6_fu_3088_p2 | brmerge40_demorgan_i_39_fu_3115_p2);

assign tmp16_fu_3126_p2 = (tmp16_demorgan_fu_3120_p2 ^ 1'd1);

assign tmp17_fu_3420_p2 = (brmerge40_demorgan_i_39_reg_4863 | tmp_473_6_reg_4858);

assign tmp18_demorgan_fu_3217_p2 = (p_38_i_i_7_fu_3185_p2 | brmerge40_demorgan_i_40_fu_3212_p2);

assign tmp18_fu_3223_p2 = (tmp18_demorgan_fu_3217_p2 ^ 1'd1);

assign tmp19_fu_3450_p2 = (brmerge40_demorgan_i_40_reg_4888 | tmp_473_7_reg_4883);

assign tmp2_cast_fu_1332_p1 = $signed(tmp2_fu_1326_p2);

assign tmp2_fu_1326_p2 = ($signed(m_reg_764) + $signed(2'd3));

assign tmp3_cast_fu_1374_p1 = $signed(tmp3_fu_1368_p2);

assign tmp3_fu_1368_p2 = ($signed(n_reg_775) + $signed(2'd3));

assign tmp4_demorgan_fu_2538_p2 = (p_38_i_i_fu_2506_p2 | brmerge40_demorgan_i_fu_2533_p2);

assign tmp4_fu_2544_p2 = (tmp4_demorgan_fu_2538_p2 ^ 1'd1);

assign tmp5_fu_3240_p2 = (brmerge40_demorgan_i_reg_4713 | tmp_278_reg_4708);

assign tmp6_demorgan_fu_2635_p2 = (p_38_i_i_1_fu_2603_p2 | brmerge40_demorgan_i_41_fu_2630_p2);

assign tmp6_fu_2641_p2 = (tmp6_demorgan_fu_2635_p2 ^ 1'd1);

assign tmp7_fu_3270_p2 = (brmerge40_demorgan_i_41_reg_4738 | tmp_473_1_reg_4733);

assign tmp8_demorgan_fu_2732_p2 = (p_38_i_i_2_fu_2700_p2 | brmerge40_demorgan_i_35_fu_2727_p2);

assign tmp8_fu_2738_p2 = (tmp8_demorgan_fu_2732_p2 ^ 1'd1);

assign tmp9_fu_3300_p2 = (brmerge40_demorgan_i_35_reg_4763 | tmp_473_2_reg_4758);

assign tmp_254_mid2_cast1_fu_1076_p1 = tmp_254_mid2_reg_4027;

assign tmp_254_mid2_cast_fu_1079_p1 = tmp_254_mid2_reg_4027;

assign tmp_254_mid2_fu_996_p3 = ((exitcond_flatten_mid_fu_979_p2[0:0] === 1'b1) ? j_6_fu_985_p2 : j_mid_fu_940_p3);

assign tmp_255_fu_3492_p1 = i_1_reg_808;

assign tmp_256_cast_fu_1300_p1 = w_reg_752;

assign tmp_257_mid2_cast_fu_1186_p1 = tmp_257_mid2_fu_1178_p3;

assign tmp_257_mid2_fu_1178_p3 = ((exitcond65_mid1_fu_1148_p2[0:0] === 1'b1) ? k_4_fu_1154_p2 : k_mid_fu_1069_p3);

assign tmp_258_cast_fu_3547_p1 = j_1_reg_819;

assign tmp_259_fu_1322_p1 = m_reg_764;

assign tmp_260_fu_1336_p2 = ($signed(h_reg_740) + $signed(tmp2_cast_fu_1332_p1));

assign tmp_261_cast_fu_1342_p1 = tmp_260_fu_1336_p2;

assign tmp_262_cast_fu_1247_p1 = p_mid2_reg_4039;

assign tmp_262_fu_1244_p1 = p_mid2_reg_4039;

assign tmp_263_mid2_cast_fu_3871_p1 = tmp_263_mid2_fu_3865_p3;

assign tmp_263_mid2_fu_3865_p3 = ((exitcond_mid_reg_5039[0:0] === 1'b1) ? j_8_fu_3860_p2 : j_2_mid_reg_5017);

assign tmp_264_cast_fu_3588_p1 = k_1_reg_831;

assign tmp_265_fu_3636_p1 = $signed(p_Val2_s_209_fu_3615_p10);

assign tmp_266_fu_3640_p1 = $signed(bias_V_q0);

assign tmp_267_fu_3672_p2 = (newsignbit_reg_4996 ^ 1'd1);

assign tmp_268_cast_fu_1364_p1 = n_reg_775;

assign tmp_269_fu_1378_p2 = ($signed(w_reg_752) + $signed(tmp3_cast_fu_1374_p1));

assign tmp_270_cast_fu_1384_p1 = tmp_269_fu_1378_p2;

assign tmp_271_cast_fu_3910_p1 = k_2_mid2_reg_5044;

assign tmp_273_cast_fu_1400_p1 = ci_reg_786;

assign tmp_274_fu_1816_p3 = {{conv1_output_p_V_0_l_reg_4292}, {6'd0}};

assign tmp_275_fu_1850_p1 = tmp_637_reg_4297;

assign tmp_276_fu_1875_p2 = (tmp_639_fu_1867_p3 ^ 1'd1);

assign tmp_277_fu_2488_p2 = (tmp_640_fu_2464_p3 ^ 1'd1);

assign tmp_278_fu_2522_p2 = (tmp_636_reg_4412 ^ 1'd1);

assign tmp_290_cast_fu_1823_p1 = $signed(tmp_274_fu_1816_p3);

assign tmp_460_1_cast_fu_1904_p1 = $signed(tmp_460_1_fu_1897_p3);

assign tmp_460_1_fu_1897_p3 = {{conv1_output_p_V_1_l_reg_4307}, {6'd0}};

assign tmp_460_2_cast_fu_1985_p1 = $signed(tmp_460_2_fu_1978_p3);

assign tmp_460_2_fu_1978_p3 = {{conv1_output_p_V_2_l_reg_4322}, {6'd0}};

assign tmp_460_3_cast_fu_2066_p1 = $signed(tmp_460_3_fu_2059_p3);

assign tmp_460_3_fu_2059_p3 = {{conv1_output_p_V_3_l_reg_4337}, {6'd0}};

assign tmp_460_4_cast_fu_2147_p1 = $signed(tmp_460_4_fu_2140_p3);

assign tmp_460_4_fu_2140_p3 = {{conv1_output_p_V_4_l_reg_4352}, {6'd0}};

assign tmp_460_5_cast_fu_2228_p1 = $signed(tmp_460_5_fu_2221_p3);

assign tmp_460_5_fu_2221_p3 = {{conv1_output_p_V_5_l_reg_4367}, {6'd0}};

assign tmp_460_6_cast_fu_2309_p1 = $signed(tmp_460_6_fu_2302_p3);

assign tmp_460_6_fu_2302_p3 = {{conv1_output_p_V_6_l_reg_4382}, {6'd0}};

assign tmp_460_7_cast_fu_2390_p1 = $signed(tmp_460_7_fu_2383_p3);

assign tmp_460_7_fu_2383_p3 = {{conv1_output_p_V_7_l_reg_4397}, {6'd0}};

assign tmp_464_1_fu_1931_p1 = tmp_642_reg_4312;

assign tmp_464_2_fu_2012_p1 = tmp_647_reg_4327;

assign tmp_464_3_fu_2093_p1 = tmp_652_reg_4342;

assign tmp_464_4_fu_2174_p1 = tmp_657_reg_4357;

assign tmp_464_5_fu_2255_p1 = tmp_662_reg_4372;

assign tmp_464_6_fu_2336_p1 = tmp_667_reg_4387;

assign tmp_464_7_fu_2417_p1 = tmp_672_reg_4402;

assign tmp_468_1_fu_1956_p2 = (tmp_644_fu_1948_p3 ^ 1'd1);

assign tmp_468_2_fu_2037_p2 = (tmp_649_fu_2029_p3 ^ 1'd1);

assign tmp_468_3_fu_2118_p2 = (tmp_654_fu_2110_p3 ^ 1'd1);

assign tmp_468_4_fu_2199_p2 = (tmp_659_fu_2191_p3 ^ 1'd1);

assign tmp_468_5_fu_2280_p2 = (tmp_664_fu_2272_p3 ^ 1'd1);

assign tmp_468_6_fu_2361_p2 = (tmp_669_fu_2353_p3 ^ 1'd1);

assign tmp_468_7_fu_2442_p2 = (tmp_674_fu_2434_p3 ^ 1'd1);

assign tmp_471_1_fu_2585_p2 = (tmp_645_fu_2561_p3 ^ 1'd1);

assign tmp_471_2_fu_2682_p2 = (tmp_650_fu_2658_p3 ^ 1'd1);

assign tmp_471_3_fu_2779_p2 = (tmp_655_fu_2755_p3 ^ 1'd1);

assign tmp_471_4_fu_2876_p2 = (tmp_660_fu_2852_p3 ^ 1'd1);

assign tmp_471_5_fu_2973_p2 = (tmp_665_fu_2949_p3 ^ 1'd1);

assign tmp_471_6_fu_3070_p2 = (tmp_670_fu_3046_p3 ^ 1'd1);

assign tmp_471_7_fu_3167_p2 = (tmp_675_fu_3143_p3 ^ 1'd1);

assign tmp_473_1_fu_2619_p2 = (tmp_641_reg_4449 ^ 1'd1);

assign tmp_473_2_fu_2716_p2 = (tmp_646_reg_4486 ^ 1'd1);

assign tmp_473_3_fu_2813_p2 = (tmp_651_reg_4523 ^ 1'd1);

assign tmp_473_4_fu_2910_p2 = (tmp_656_reg_4560 ^ 1'd1);

assign tmp_473_5_fu_3007_p2 = (tmp_661_reg_4597 ^ 1'd1);

assign tmp_473_6_fu_3104_p2 = (tmp_666_reg_4634 ^ 1'd1);

assign tmp_473_7_fu_3201_p2 = (tmp_671_reg_4671 ^ 1'd1);

assign tmp_509_fu_1037_p3 = {{newIndex22_mid2_v_reg_4000}, {2'd0}};

assign tmp_510_fu_1048_p2 = (p_shl4_cast_fu_1044_p1 - newIndex22_mid2_cast_fu_1034_p1);

assign tmp_511_fu_991_p2 = (exitcond_flatten_mid_fu_979_p2 | exitcond_flatten16_reg_3974);

assign tmp_512_fu_1082_p2 = ($signed(tmp_254_mid2_cast_fu_1079_p1) + $signed(tmp_649_cast_fu_1030_p1));

assign tmp_513_fu_1104_p2 = ($signed(p_shl3_fu_1100_p1) - $signed(tmp_653_cast_fu_1088_p1));

assign tmp_514_fu_1110_p2 = ($signed(tmp_254_mid2_cast1_fu_1076_p1) + $signed(tmp_651_cast_fu_1054_p1));

assign tmp_515_fu_1132_p2 = ($signed(p_shl2_fu_1128_p1) - $signed(tmp_656_cast_fu_1116_p1));

assign tmp_516_fu_1160_p2 = (exitcond65_mid1_fu_1148_p2 | exitcond_flatten_mid_reg_4016);

assign tmp_517_fu_1190_p2 = (tmp_257_mid2_cast_fu_1186_p1 + tmp_513_fu_1104_p2);

assign tmp_518_fu_1227_p2 = (tmp_621_fu_1222_p2 - tmp_517_reg_4050);

assign tmp_519_fu_1196_p2 = (tmp_257_mid2_cast_fu_1186_p1 + tmp_515_fu_1132_p2);

assign tmp_520_fu_1239_p2 = (p_shl_cast_fu_1232_p3 - tmp_622_reg_4056);

assign tmp_521_fu_1250_p2 = (tmp_262_fu_1244_p1 + tmp_518_fu_1227_p2);

assign tmp_522_fu_1267_p2 = (tmp_262_cast_fu_1247_p1 + tmp_520_fu_1239_p2);

assign tmp_523_fu_3511_p3 = {{newIndex_fu_3501_p4}, {5'd0}};

assign tmp_524_fu_3523_p3 = {{newIndex_fu_3501_p4}, {1'd0}};

assign tmp_525_fu_3535_p2 = (p_shl17_cast_fu_3519_p1 + p_shl18_cast_fu_3531_p1);

assign tmp_526_fu_3832_p3 = {{newIndex_mid2_v_reg_5033}, {5'd0}};

assign tmp_527_fu_3843_p3 = {{newIndex_mid2_v_reg_5033}, {1'd0}};

assign tmp_528_fu_3854_p2 = (p_shl24_cast_fu_3850_p1 + p_shl23_cast_fu_3839_p1);

assign tmp_529_fu_3804_p2 = (exitcond_mid_fu_3798_p2 | exitcond_flatten19_fu_3750_p2);

assign tmp_530_fu_3875_p2 = (tmp_528_fu_3854_p2 + tmp_263_mid2_cast_fu_3871_p1);

assign tmp_531_fu_3904_p2 = (p_shl22_cast_fu_3900_p1 + p_shl21_cast_fu_3886_p3);

assign tmp_532_fu_3913_p2 = (tmp_531_fu_3904_p2 + tmp_271_cast_fu_3910_p1);

assign tmp_533_fu_3551_p2 = (tmp_258_cast_fu_3547_p1 + tmp_525_reg_4917);

assign tmp_534_fu_3576_p2 = (p_shl19_cast_fu_3556_p3 + p_shl20_cast_fu_3572_p1);

assign tmp_535_fu_3592_p2 = (tmp_534_reg_4930 + tmp_264_cast_fu_3588_p1);

assign tmp_536_fu_1404_p3 = {{ci_reg_786}, {5'd0}};

assign tmp_537_fu_1416_p3 = {{ci_reg_786}, {1'd0}};

assign tmp_538_fu_1428_p2 = (p_shl8_cast_fu_1412_p1 + p_shl9_cast_fu_1424_p1);

assign tmp_539_fu_1434_p2 = (tmp_261_cast_reg_4133 + tmp_538_fu_1428_p2);

assign tmp_540_fu_1459_p2 = (p_shl6_cast_fu_1439_p3 + p_shl7_cast_fu_1455_p1);

assign tmp_541_fu_1465_p2 = (tmp_270_cast_reg_4156 + tmp_540_fu_1459_p2);

assign tmp_542_fu_1495_p3 = {{newIndex2_fu_1481_p4}, {5'd0}};

assign tmp_543_fu_1507_p3 = {{newIndex2_fu_1481_p4}, {1'd0}};

assign tmp_544_fu_1519_p2 = (p_shl16_cast_fu_1515_p1 + p_shl15_cast_fu_1503_p1);

assign tmp_545_fu_1525_p2 = (tmp_544_fu_1519_p2 + tmp_cast_reg_4102);

assign tmp_546_fu_1550_p2 = (p_shl14_cast_fu_1546_p1 + p_shl13_cast_fu_1530_p3);

assign tmp_547_fu_1556_p2 = (tmp_546_fu_1550_p2 + tmp_256_cast_reg_4110);

assign tmp_548_fu_1561_p3 = {{newIndex2_fu_1481_p4}, {2'd0}};

assign tmp_549_fu_1573_p2 = (p_shl12_cast_fu_1569_p1 - newIndex3_cast_fu_1491_p1);

assign tmp_550_fu_1583_p2 = ($signed(tmp_704_cast_fu_1579_p1) + $signed(tmp_273_cast_reg_4169));

assign tmp_551_fu_1604_p2 = ($signed(p_shl_fu_1600_p1) - $signed(tmp_705_cast_fu_1588_p1));

assign tmp_552_fu_1610_p2 = (tmp_551_fu_1604_p2 + tmp_259_reg_4128);

assign tmp_553_fu_1647_p2 = (p_shl10_cast_fu_1640_p3 - tmp_634_reg_4187);

assign tmp_554_fu_1652_p2 = (tmp_553_fu_1647_p2 + tmp_268_cast_reg_4151);

assign tmp_617_fu_954_p1 = tmp_mid2_v_fu_947_p3[2:0];

assign tmp_618_fu_1092_p3 = {{tmp_512_fu_1082_p2}, {2'd0}};

assign tmp_619_fu_1120_p3 = {{tmp_514_fu_1110_p2}, {2'd0}};

assign tmp_620_fu_1165_p2 = (tmp_516_fu_1160_p2 | ap_reg_pp0_iter1_exitcond_flatten16_reg_3974);

assign tmp_621_fu_1222_p2 = tmp_517_reg_4050 << 64'd2;

assign tmp_622_fu_1202_p1 = tmp_519_fu_1196_p2[7:0];

assign tmp_623_fu_1206_p1 = tmp_519_fu_1196_p2[5:0];

assign tmp_624_fu_3497_p1 = i_1_reg_808[2:0];

assign tmp_625_fu_3772_p1 = arrayNo8_mid2_v_fu_3764_p3[2:0];

assign tmp_626_fu_3893_p3 = {{tmp_530_reg_5060}, {1'd0}};

assign tmp_627_fu_3952_p3 = tmp_279_fu_3931_p10[32'd7];

assign tmp_628_fu_3564_p3 = {{tmp_533_fu_3551_p2}, {1'd0}};

assign tmp_631_fu_1447_p3 = {{tmp_539_fu_1434_p2}, {1'd0}};

assign tmp_632_fu_1538_p3 = {{tmp_545_fu_1525_p2}, {1'd0}};

assign tmp_633_fu_1592_p3 = {{tmp_550_fu_1583_p2}, {2'd0}};

assign tmp_634_fu_1615_p1 = tmp_552_fu_1610_p2[7:0];

assign tmp_635_fu_1619_p1 = tmp_552_fu_1610_p2[5:0];

assign tmp_638_fu_1853_p3 = p_Val2_8_fu_1827_p2[32'd13];

assign tmp_639_fu_1867_p3 = p_Val2_1_fu_1861_p2[32'd7];

assign tmp_640_fu_2464_p3 = p_Val2_8_reg_4407[32'd14];

assign tmp_643_fu_1934_p3 = p_Val2_93_1_fu_1908_p2[32'd13];

assign tmp_644_fu_1948_p3 = p_Val2_95_1_fu_1942_p2[32'd7];

assign tmp_645_fu_2561_p3 = p_Val2_93_1_reg_4444[32'd14];

assign tmp_648_fu_2015_p3 = p_Val2_93_2_fu_1989_p2[32'd13];

assign tmp_649_cast_fu_1030_p1 = $signed(tmp_s_fu_1024_p2);

assign tmp_649_fu_2029_p3 = p_Val2_95_2_fu_2023_p2[32'd7];

assign tmp_650_fu_2658_p3 = p_Val2_93_2_reg_4481[32'd14];

assign tmp_651_cast_fu_1054_p1 = $signed(tmp_510_fu_1048_p2);

assign tmp_653_cast_fu_1088_p1 = $signed(tmp_512_fu_1082_p2);

assign tmp_653_fu_2096_p3 = p_Val2_93_3_fu_2070_p2[32'd13];

assign tmp_654_fu_2110_p3 = p_Val2_95_3_fu_2104_p2[32'd7];

assign tmp_655_fu_2755_p3 = p_Val2_93_3_reg_4518[32'd14];

assign tmp_656_cast_fu_1116_p1 = $signed(tmp_514_fu_1110_p2);

assign tmp_658_fu_2177_p3 = p_Val2_93_4_fu_2151_p2[32'd13];

assign tmp_659_fu_2191_p3 = p_Val2_95_4_fu_2185_p2[32'd7];

assign tmp_660_fu_2852_p3 = p_Val2_93_4_reg_4555[32'd14];

assign tmp_663_fu_2258_p3 = p_Val2_93_5_fu_2232_p2[32'd13];

assign tmp_664_fu_2272_p3 = p_Val2_95_5_fu_2266_p2[32'd7];

assign tmp_665_fu_2949_p3 = p_Val2_93_5_reg_4592[32'd14];

assign tmp_668_cast_fu_1273_p1 = ap_reg_pp0_iter11_tmp_522_reg_4082;

assign tmp_668_fu_2339_p3 = p_Val2_93_6_fu_2313_p2[32'd13];

assign tmp_669_fu_2353_p3 = p_Val2_95_6_fu_2347_p2[32'd7];

assign tmp_670_fu_3046_p3 = p_Val2_93_6_reg_4629[32'd14];

assign tmp_673_fu_2420_p3 = p_Val2_93_7_fu_2394_p2[32'd13];

assign tmp_674_fu_2434_p3 = p_Val2_95_7_fu_2428_p2[32'd7];

assign tmp_675_fu_3143_p3 = p_Val2_93_7_reg_4666[32'd14];

assign tmp_681_cast_fu_3919_p1 = tmp_532_fu_3913_p2;

assign tmp_686_cast_fu_3597_p1 = tmp_535_fu_3592_p2;

assign tmp_694_cast_fu_1470_p1 = tmp_541_fu_1465_p2;

assign tmp_702_cast_fu_1629_p1 = tmp_547_reg_4182;

assign tmp_704_cast_fu_1579_p1 = $signed(tmp_549_fu_1573_p2);

assign tmp_705_cast_fu_1588_p1 = $signed(tmp_550_fu_1583_p2);

assign tmp_711_cast_fu_1657_p1 = tmp_554_fu_1652_p2;

assign tmp_cast_fu_1290_p1 = h_reg_740;

assign tmp_fu_1013_p3 = {{tmp_mid2_v_reg_3989}, {2'd0}};

assign tmp_mid2_cast_fu_1010_p1 = tmp_mid2_v_reg_3989;

assign tmp_mid2_v_fu_947_p3 = ((exitcond_flatten16_reg_3974[0:0] === 1'b1) ? i_6_fu_934_p2 : i_phi_fu_673_p4);

assign tmp_s_fu_1024_p2 = (p_shl5_cast_fu_1020_p1 - tmp_mid2_cast_fu_1010_p1);

assign underflow_11_fu_3677_p2 = (isneg_reg_4983 & tmp_267_fu_3672_p2);

assign underflow_1_fu_2647_p2 = (tmp_641_reg_4449 & tmp6_fu_2641_p2);

assign underflow_2_fu_2744_p2 = (tmp_646_reg_4486 & tmp8_fu_2738_p2);

assign underflow_3_fu_2841_p2 = (tmp_651_reg_4523 & tmp10_fu_2835_p2);

assign underflow_4_fu_2938_p2 = (tmp_656_reg_4560 & tmp12_fu_2932_p2);

assign underflow_5_fu_3035_p2 = (tmp_661_reg_4597 & tmp14_fu_3029_p2);

assign underflow_6_fu_3132_p2 = (tmp_666_reg_4634 & tmp16_fu_3126_p2);

assign underflow_7_fu_3229_p2 = (tmp_671_reg_4671 & tmp18_fu_3223_p2);

assign underflow_fu_2550_p2 = (tmp_636_reg_4412 & tmp4_fu_2544_p2);

assign underflow_not_1_fu_3274_p2 = (tmp7_fu_3270_p2 | p_38_i_i_1_reg_4728);

assign underflow_not_2_fu_3304_p2 = (tmp9_fu_3300_p2 | p_38_i_i_2_reg_4753);

assign underflow_not_3_fu_3334_p2 = (tmp11_fu_3330_p2 | p_38_i_i_3_reg_4778);

assign underflow_not_4_fu_3364_p2 = (tmp13_fu_3360_p2 | p_38_i_i_4_reg_4803);

assign underflow_not_5_fu_3394_p2 = (tmp15_fu_3390_p2 | p_38_i_i_5_reg_4828);

assign underflow_not_6_fu_3424_p2 = (tmp17_fu_3420_p2 | p_38_i_i_6_reg_4853);

assign underflow_not_7_fu_3454_p2 = (tmp19_fu_3450_p2 | p_38_i_i_7_reg_4878);

assign underflow_not_fu_3244_p2 = (tmp5_fu_3240_p2 | p_38_i_i_reg_4703);

assign w_35_fu_1346_p2 = (w_reg_752 + 6'd1);

always @ (posedge ap_clk) begin
    tmp_cast_reg_4102[7:6] <= 2'b00;
    tmp_256_cast_reg_4110[12:6] <= 7'b0000000;
    tmp_259_reg_4128[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_261_cast_reg_4133[7:6] <= 2'b00;
    tmp_268_cast_reg_4151[7:2] <= 6'b000000;
    tmp_270_cast_reg_4156[12:6] <= 7'b0000000;
    tmp_273_cast_reg_4169[5:2] <= 4'b0000;
    tmp_525_reg_4917[0] <= 1'b0;
    tmp_534_reg_4930[0] <= 1'b0;
end

endmodule //conv1_p
