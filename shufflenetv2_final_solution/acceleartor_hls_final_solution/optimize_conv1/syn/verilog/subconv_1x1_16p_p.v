// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_16p_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        ShuffleConvs_1_Downs_7_address0,
        ShuffleConvs_1_Downs_7_ce0,
        ShuffleConvs_1_Downs_7_we0,
        ShuffleConvs_1_Downs_7_d0,
        ShuffleConvs_1_Downs_7_q0,
        ShuffleConvs_1_Downs_7_address1,
        ShuffleConvs_1_Downs_7_ce1,
        ShuffleConvs_1_Downs_7_we1,
        ShuffleConvs_1_Downs_7_d1,
        ShuffleConvs_1_Downs_6_address0,
        ShuffleConvs_1_Downs_6_ce0,
        ShuffleConvs_1_Downs_6_we0,
        ShuffleConvs_1_Downs_6_d0,
        ShuffleConvs_1_Downs_6_q0,
        ShuffleConvs_1_Downs_6_address1,
        ShuffleConvs_1_Downs_6_ce1,
        ShuffleConvs_1_Downs_6_we1,
        ShuffleConvs_1_Downs_6_d1,
        ShuffleConvs_1_Downs_5_address0,
        ShuffleConvs_1_Downs_5_ce0,
        ShuffleConvs_1_Downs_5_we0,
        ShuffleConvs_1_Downs_5_d0,
        ShuffleConvs_1_Downs_5_q0,
        ShuffleConvs_1_Downs_5_address1,
        ShuffleConvs_1_Downs_5_ce1,
        ShuffleConvs_1_Downs_5_we1,
        ShuffleConvs_1_Downs_5_d1,
        ShuffleConvs_1_Downs_4_address0,
        ShuffleConvs_1_Downs_4_ce0,
        ShuffleConvs_1_Downs_4_we0,
        ShuffleConvs_1_Downs_4_d0,
        ShuffleConvs_1_Downs_4_q0,
        ShuffleConvs_1_Downs_4_address1,
        ShuffleConvs_1_Downs_4_ce1,
        ShuffleConvs_1_Downs_4_we1,
        ShuffleConvs_1_Downs_4_d1,
        ShuffleConvs_1_Downs_3_address0,
        ShuffleConvs_1_Downs_3_ce0,
        ShuffleConvs_1_Downs_3_we0,
        ShuffleConvs_1_Downs_3_d0,
        ShuffleConvs_1_Downs_3_q0,
        ShuffleConvs_1_Downs_3_address1,
        ShuffleConvs_1_Downs_3_ce1,
        ShuffleConvs_1_Downs_3_we1,
        ShuffleConvs_1_Downs_3_d1,
        ShuffleConvs_1_Downs_2_address0,
        ShuffleConvs_1_Downs_2_ce0,
        ShuffleConvs_1_Downs_2_we0,
        ShuffleConvs_1_Downs_2_d0,
        ShuffleConvs_1_Downs_2_q0,
        ShuffleConvs_1_Downs_2_address1,
        ShuffleConvs_1_Downs_2_ce1,
        ShuffleConvs_1_Downs_2_we1,
        ShuffleConvs_1_Downs_2_d1,
        ShuffleConvs_1_Downs_1_address0,
        ShuffleConvs_1_Downs_1_ce0,
        ShuffleConvs_1_Downs_1_we0,
        ShuffleConvs_1_Downs_1_d0,
        ShuffleConvs_1_Downs_1_q0,
        ShuffleConvs_1_Downs_1_address1,
        ShuffleConvs_1_Downs_1_ce1,
        ShuffleConvs_1_Downs_1_we1,
        ShuffleConvs_1_Downs_1_d1,
        ShuffleConvs_1_Downs_address0,
        ShuffleConvs_1_Downs_ce0,
        ShuffleConvs_1_Downs_we0,
        ShuffleConvs_1_Downs_d0,
        ShuffleConvs_1_Downs_q0,
        ShuffleConvs_1_Downs_address1,
        ShuffleConvs_1_Downs_ce1,
        ShuffleConvs_1_Downs_we1,
        ShuffleConvs_1_Downs_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_state5 = 14'd4;
parameter    ap_ST_fsm_state6 = 14'd8;
parameter    ap_ST_fsm_state7 = 14'd16;
parameter    ap_ST_fsm_state8 = 14'd32;
parameter    ap_ST_fsm_state9 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_state14 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output  [8:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [8:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [8:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [8:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [8:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [8:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [8:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [8:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [5:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [10:0] ShuffleConvs_1_Downs_7_address0;
output   ShuffleConvs_1_Downs_7_ce0;
output   ShuffleConvs_1_Downs_7_we0;
output  [7:0] ShuffleConvs_1_Downs_7_d0;
input  [7:0] ShuffleConvs_1_Downs_7_q0;
output  [10:0] ShuffleConvs_1_Downs_7_address1;
output   ShuffleConvs_1_Downs_7_ce1;
output   ShuffleConvs_1_Downs_7_we1;
output  [7:0] ShuffleConvs_1_Downs_7_d1;
output  [10:0] ShuffleConvs_1_Downs_6_address0;
output   ShuffleConvs_1_Downs_6_ce0;
output   ShuffleConvs_1_Downs_6_we0;
output  [7:0] ShuffleConvs_1_Downs_6_d0;
input  [7:0] ShuffleConvs_1_Downs_6_q0;
output  [10:0] ShuffleConvs_1_Downs_6_address1;
output   ShuffleConvs_1_Downs_6_ce1;
output   ShuffleConvs_1_Downs_6_we1;
output  [7:0] ShuffleConvs_1_Downs_6_d1;
output  [10:0] ShuffleConvs_1_Downs_5_address0;
output   ShuffleConvs_1_Downs_5_ce0;
output   ShuffleConvs_1_Downs_5_we0;
output  [7:0] ShuffleConvs_1_Downs_5_d0;
input  [7:0] ShuffleConvs_1_Downs_5_q0;
output  [10:0] ShuffleConvs_1_Downs_5_address1;
output   ShuffleConvs_1_Downs_5_ce1;
output   ShuffleConvs_1_Downs_5_we1;
output  [7:0] ShuffleConvs_1_Downs_5_d1;
output  [10:0] ShuffleConvs_1_Downs_4_address0;
output   ShuffleConvs_1_Downs_4_ce0;
output   ShuffleConvs_1_Downs_4_we0;
output  [7:0] ShuffleConvs_1_Downs_4_d0;
input  [7:0] ShuffleConvs_1_Downs_4_q0;
output  [10:0] ShuffleConvs_1_Downs_4_address1;
output   ShuffleConvs_1_Downs_4_ce1;
output   ShuffleConvs_1_Downs_4_we1;
output  [7:0] ShuffleConvs_1_Downs_4_d1;
output  [10:0] ShuffleConvs_1_Downs_3_address0;
output   ShuffleConvs_1_Downs_3_ce0;
output   ShuffleConvs_1_Downs_3_we0;
output  [7:0] ShuffleConvs_1_Downs_3_d0;
input  [7:0] ShuffleConvs_1_Downs_3_q0;
output  [10:0] ShuffleConvs_1_Downs_3_address1;
output   ShuffleConvs_1_Downs_3_ce1;
output   ShuffleConvs_1_Downs_3_we1;
output  [7:0] ShuffleConvs_1_Downs_3_d1;
output  [10:0] ShuffleConvs_1_Downs_2_address0;
output   ShuffleConvs_1_Downs_2_ce0;
output   ShuffleConvs_1_Downs_2_we0;
output  [7:0] ShuffleConvs_1_Downs_2_d0;
input  [7:0] ShuffleConvs_1_Downs_2_q0;
output  [10:0] ShuffleConvs_1_Downs_2_address1;
output   ShuffleConvs_1_Downs_2_ce1;
output   ShuffleConvs_1_Downs_2_we1;
output  [7:0] ShuffleConvs_1_Downs_2_d1;
output  [10:0] ShuffleConvs_1_Downs_1_address0;
output   ShuffleConvs_1_Downs_1_ce0;
output   ShuffleConvs_1_Downs_1_we0;
output  [7:0] ShuffleConvs_1_Downs_1_d0;
input  [7:0] ShuffleConvs_1_Downs_1_q0;
output  [10:0] ShuffleConvs_1_Downs_1_address1;
output   ShuffleConvs_1_Downs_1_ce1;
output   ShuffleConvs_1_Downs_1_we1;
output  [7:0] ShuffleConvs_1_Downs_1_d1;
output  [10:0] ShuffleConvs_1_Downs_address0;
output   ShuffleConvs_1_Downs_ce0;
output   ShuffleConvs_1_Downs_we0;
output  [7:0] ShuffleConvs_1_Downs_d0;
input  [7:0] ShuffleConvs_1_Downs_q0;
output  [10:0] ShuffleConvs_1_Downs_address1;
output   ShuffleConvs_1_Downs_ce1;
output   ShuffleConvs_1_Downs_we1;
output  [7:0] ShuffleConvs_1_Downs_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg weight_0_V_ce0;
reg weight_1_V_ce0;
reg weight_2_V_ce0;
reg weight_3_V_ce0;
reg weight_4_V_ce0;
reg weight_5_V_ce0;
reg weight_6_V_ce0;
reg weight_7_V_ce0;
reg bias_V_ce0;
reg[10:0] ShuffleConvs_1_Downs_7_address0;
reg ShuffleConvs_1_Downs_7_ce0;
reg ShuffleConvs_1_Downs_7_we0;
reg[7:0] ShuffleConvs_1_Downs_7_d0;
reg ShuffleConvs_1_Downs_7_ce1;
reg ShuffleConvs_1_Downs_7_we1;
reg[10:0] ShuffleConvs_1_Downs_6_address0;
reg ShuffleConvs_1_Downs_6_ce0;
reg ShuffleConvs_1_Downs_6_we0;
reg[7:0] ShuffleConvs_1_Downs_6_d0;
reg ShuffleConvs_1_Downs_6_ce1;
reg ShuffleConvs_1_Downs_6_we1;
reg[10:0] ShuffleConvs_1_Downs_5_address0;
reg ShuffleConvs_1_Downs_5_ce0;
reg ShuffleConvs_1_Downs_5_we0;
reg[7:0] ShuffleConvs_1_Downs_5_d0;
reg ShuffleConvs_1_Downs_5_ce1;
reg ShuffleConvs_1_Downs_5_we1;
reg[10:0] ShuffleConvs_1_Downs_4_address0;
reg ShuffleConvs_1_Downs_4_ce0;
reg ShuffleConvs_1_Downs_4_we0;
reg[7:0] ShuffleConvs_1_Downs_4_d0;
reg ShuffleConvs_1_Downs_4_ce1;
reg ShuffleConvs_1_Downs_4_we1;
reg[10:0] ShuffleConvs_1_Downs_3_address0;
reg ShuffleConvs_1_Downs_3_ce0;
reg ShuffleConvs_1_Downs_3_we0;
reg[7:0] ShuffleConvs_1_Downs_3_d0;
reg ShuffleConvs_1_Downs_3_ce1;
reg ShuffleConvs_1_Downs_3_we1;
reg[10:0] ShuffleConvs_1_Downs_2_address0;
reg ShuffleConvs_1_Downs_2_ce0;
reg ShuffleConvs_1_Downs_2_we0;
reg[7:0] ShuffleConvs_1_Downs_2_d0;
reg ShuffleConvs_1_Downs_2_ce1;
reg ShuffleConvs_1_Downs_2_we1;
reg[10:0] ShuffleConvs_1_Downs_1_address0;
reg ShuffleConvs_1_Downs_1_ce0;
reg ShuffleConvs_1_Downs_1_we0;
reg[7:0] ShuffleConvs_1_Downs_1_d0;
reg ShuffleConvs_1_Downs_1_ce1;
reg ShuffleConvs_1_Downs_1_we1;
reg[10:0] ShuffleConvs_1_Downs_address0;
reg ShuffleConvs_1_Downs_ce0;
reg ShuffleConvs_1_Downs_we0;
reg[7:0] ShuffleConvs_1_Downs_d0;
reg ShuffleConvs_1_Downs_ce1;
reg ShuffleConvs_1_Downs_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten4_reg_549;
reg   [5:0] co_reg_560;
reg   [9:0] indvar_flatten_reg_572;
reg   [4:0] h_reg_583;
reg   [4:0] w_reg_595;
reg   [13:0] indvar_flatten5_reg_652;
reg   [5:0] co4_reg_663;
reg   [9:0] indvar_flatten6_reg_675;
reg   [4:0] h5_reg_686;
reg   [4:0] w6_reg_698;
wire   [0:0] exitcond_flatten_fu_709_p2;
reg   [0:0] exitcond_flatten_reg_3213;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_3213;
wire   [13:0] indvar_flatten_next1_fu_715_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten8_fu_721_p2;
reg   [0:0] exitcond_flatten8_reg_3222;
wire   [0:0] exitcond32_mid_fu_739_p2;
reg   [0:0] exitcond32_mid_reg_3228;
wire   [4:0] w_mid2_fu_751_p3;
reg   [4:0] w_mid2_reg_3233;
reg   [4:0] ap_reg_pp0_iter1_w_mid2_reg_3233;
wire   [9:0] indvar_flatten_next_fu_765_p3;
wire   [5:0] tmp_mid2_v_fu_786_p3;
reg   [5:0] tmp_mid2_v_reg_3244;
reg    ap_enable_reg_pp0_iter1;
wire   [2:0] tmp_414_fu_798_p1;
reg   [2:0] tmp_414_reg_3249;
wire   [4:0] tmp_184_mid2_fu_848_p3;
reg   [4:0] tmp_184_mid2_reg_3253;
wire   [7:0] tmp_303_fu_859_p2;
reg   [7:0] tmp_303_reg_3258;
wire   [4:0] w_19_fu_865_p2;
wire   [0:0] exitcond12_fu_915_p2;
wire    ap_CS_fsm_state6;
wire   [7:0] tmp_cast4_fu_921_p1;
reg   [7:0] tmp_cast4_reg_3278;
wire   [10:0] tmp_cast_fu_925_p1;
reg   [10:0] tmp_cast_reg_3283;
wire   [11:0] tmp_185_cast1_fu_935_p1;
reg   [11:0] tmp_185_cast1_reg_3291;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond13_fu_929_p2;
wire   [14:0] tmp_185_cast_fu_939_p1;
reg   [14:0] tmp_185_cast_reg_3296;
wire   [4:0] h_8_fu_943_p2;
wire   [5:0] ci_5_fu_955_p2;
reg   [5:0] ci_5_reg_3309;
wire    ap_CS_fsm_state8;
wire   [9:0] tmp_188_cast_fu_961_p1;
reg   [9:0] tmp_188_cast_reg_3314;
wire   [0:0] exitcond14_fu_949_p2;
reg   [13:0] input_V_addr_reg_3319;
wire   [4:0] w_20_fu_1036_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond15_fu_1042_p2;
wire   [11:0] tmp_327_fu_1158_p2;
reg   [11:0] tmp_327_reg_3372;
wire   [5:0] co_21_7_fu_1163_p2;
reg   [5:0] co_21_7_reg_3377;
reg   [10:0] ShuffleConvs_1_Downs_31_reg_3382;
wire    ap_CS_fsm_state10;
reg   [10:0] ShuffleConvs_1_Downs_32_reg_3387;
reg   [10:0] ShuffleConvs_1_Downs_33_reg_3392;
reg   [10:0] ShuffleConvs_1_Downs_34_reg_3397;
reg   [10:0] ShuffleConvs_1_Downs_35_reg_3402;
reg   [10:0] ShuffleConvs_1_Downs_36_reg_3407;
reg   [10:0] ShuffleConvs_1_Downs_37_reg_3412;
reg   [10:0] ShuffleConvs_1_Downs_38_reg_3417;
reg   [7:0] weight_0_V_load_reg_3422;
reg   [7:0] input_V_load_reg_3427;
reg   [7:0] weight_1_V_load_reg_3432;
reg   [7:0] weight_2_V_load_reg_3437;
reg   [7:0] weight_3_V_load_reg_3442;
reg   [7:0] weight_4_V_load_reg_3447;
reg   [7:0] weight_5_V_load_reg_3452;
reg   [7:0] weight_6_V_load_reg_3457;
reg   [7:0] weight_7_V_load_reg_3462;
wire   [15:0] p_Val2_s_fu_1186_p2;
reg   [15:0] p_Val2_s_reg_3467;
wire    ap_CS_fsm_state11;
reg   [7:0] ShuffleConvs_1_Downs_39_reg_3472;
reg   [0:0] tmp_422_reg_3477;
wire   [15:0] p_Val2_65_1_fu_1203_p2;
reg   [15:0] p_Val2_65_1_reg_3482;
reg   [7:0] ShuffleConvs_1_Downs_40_reg_3487;
reg   [0:0] tmp_427_reg_3492;
wire   [15:0] p_Val2_65_2_fu_1220_p2;
reg   [15:0] p_Val2_65_2_reg_3497;
reg   [7:0] ShuffleConvs_1_Downs_41_reg_3502;
reg   [0:0] tmp_432_reg_3507;
wire   [15:0] p_Val2_65_3_fu_1237_p2;
reg   [15:0] p_Val2_65_3_reg_3512;
reg   [7:0] ShuffleConvs_1_Downs_42_reg_3517;
reg   [0:0] tmp_437_reg_3522;
wire   [15:0] p_Val2_65_4_fu_1254_p2;
reg   [15:0] p_Val2_65_4_reg_3527;
reg   [7:0] ShuffleConvs_1_Downs_43_reg_3532;
reg   [0:0] tmp_442_reg_3537;
wire   [15:0] p_Val2_65_5_fu_1271_p2;
reg   [15:0] p_Val2_65_5_reg_3542;
reg   [7:0] ShuffleConvs_1_Downs_44_reg_3547;
reg   [0:0] tmp_447_reg_3552;
wire   [15:0] p_Val2_65_6_fu_1288_p2;
reg   [15:0] p_Val2_65_6_reg_3557;
reg   [7:0] ShuffleConvs_1_Downs_45_reg_3562;
reg   [0:0] tmp_452_reg_3567;
wire   [15:0] p_Val2_65_7_fu_1305_p2;
reg   [15:0] p_Val2_65_7_reg_3572;
reg   [7:0] ShuffleConvs_1_Downs_46_reg_3577;
reg   [0:0] tmp_457_reg_3582;
wire   [15:0] p_Val2_4_fu_1330_p2;
reg   [15:0] p_Val2_4_reg_3587;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_421_reg_3592;
wire   [7:0] p_Val2_6_fu_1364_p2;
reg   [7:0] p_Val2_6_reg_3599;
wire   [0:0] tmp_424_fu_1370_p3;
reg   [0:0] tmp_424_reg_3605;
wire   [0:0] carry_s_fu_1384_p2;
reg   [0:0] carry_s_reg_3611;
reg   [1:0] tmp_197_reg_3618;
wire   [15:0] p_Val2_66_1_fu_1411_p2;
reg   [15:0] p_Val2_66_1_reg_3624;
reg   [0:0] tmp_426_reg_3629;
wire   [7:0] p_Val2_68_1_fu_1445_p2;
reg   [7:0] p_Val2_68_1_reg_3636;
wire   [0:0] tmp_429_fu_1451_p3;
reg   [0:0] tmp_429_reg_3642;
wire   [0:0] carry_11_1_fu_1465_p2;
reg   [0:0] carry_11_1_reg_3648;
reg   [1:0] tmp_198_reg_3655;
wire   [15:0] p_Val2_66_2_fu_1492_p2;
reg   [15:0] p_Val2_66_2_reg_3661;
reg   [0:0] tmp_431_reg_3666;
wire   [7:0] p_Val2_68_2_fu_1526_p2;
reg   [7:0] p_Val2_68_2_reg_3673;
wire   [0:0] tmp_434_fu_1532_p3;
reg   [0:0] tmp_434_reg_3679;
wire   [0:0] carry_11_2_fu_1546_p2;
reg   [0:0] carry_11_2_reg_3685;
reg   [1:0] tmp_199_reg_3692;
wire   [15:0] p_Val2_66_3_fu_1573_p2;
reg   [15:0] p_Val2_66_3_reg_3698;
reg   [0:0] tmp_436_reg_3703;
wire   [7:0] p_Val2_68_3_fu_1607_p2;
reg   [7:0] p_Val2_68_3_reg_3710;
wire   [0:0] tmp_439_fu_1613_p3;
reg   [0:0] tmp_439_reg_3716;
wire   [0:0] carry_11_3_fu_1627_p2;
reg   [0:0] carry_11_3_reg_3722;
reg   [1:0] tmp_200_reg_3729;
wire   [15:0] p_Val2_66_4_fu_1654_p2;
reg   [15:0] p_Val2_66_4_reg_3735;
reg   [0:0] tmp_441_reg_3740;
wire   [7:0] p_Val2_68_4_fu_1688_p2;
reg   [7:0] p_Val2_68_4_reg_3747;
wire   [0:0] tmp_444_fu_1694_p3;
reg   [0:0] tmp_444_reg_3753;
wire   [0:0] carry_11_4_fu_1708_p2;
reg   [0:0] carry_11_4_reg_3759;
reg   [1:0] tmp_201_reg_3766;
wire   [15:0] p_Val2_66_5_fu_1735_p2;
reg   [15:0] p_Val2_66_5_reg_3772;
reg   [0:0] tmp_446_reg_3777;
wire   [7:0] p_Val2_68_5_fu_1769_p2;
reg   [7:0] p_Val2_68_5_reg_3784;
wire   [0:0] tmp_449_fu_1775_p3;
reg   [0:0] tmp_449_reg_3790;
wire   [0:0] carry_11_5_fu_1789_p2;
reg   [0:0] carry_11_5_reg_3796;
reg   [1:0] tmp_202_reg_3803;
wire   [15:0] p_Val2_66_6_fu_1816_p2;
reg   [15:0] p_Val2_66_6_reg_3809;
reg   [0:0] tmp_451_reg_3814;
wire   [7:0] p_Val2_68_6_fu_1850_p2;
reg   [7:0] p_Val2_68_6_reg_3821;
wire   [0:0] tmp_454_fu_1856_p3;
reg   [0:0] tmp_454_reg_3827;
wire   [0:0] carry_11_6_fu_1870_p2;
reg   [0:0] carry_11_6_reg_3833;
reg   [1:0] tmp_203_reg_3840;
wire   [15:0] p_Val2_66_7_fu_1897_p2;
reg   [15:0] p_Val2_66_7_reg_3846;
reg   [0:0] tmp_456_reg_3851;
wire   [7:0] p_Val2_68_7_fu_1931_p2;
reg   [7:0] p_Val2_68_7_reg_3858;
wire   [0:0] tmp_459_fu_1937_p3;
reg   [0:0] tmp_459_reg_3864;
wire   [0:0] carry_11_7_fu_1951_p2;
reg   [0:0] carry_11_7_reg_3870;
reg   [1:0] tmp_204_reg_3877;
wire   [0:0] p_38_i_i_fu_2009_p2;
reg   [0:0] p_38_i_i_reg_3883;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_195_fu_2025_p2;
reg   [0:0] tmp_195_reg_3888;
wire   [0:0] brmerge40_demorgan_i_fu_2036_p2;
reg   [0:0] brmerge40_demorgan_i_reg_3893;
wire   [0:0] underflow_fu_2053_p2;
reg   [0:0] underflow_reg_3898;
wire   [0:0] brmerge_i_i_i_fu_2058_p2;
reg   [0:0] brmerge_i_i_i_reg_3903;
wire   [0:0] p_38_i_i_1_fu_2106_p2;
reg   [0:0] p_38_i_i_1_reg_3908;
wire   [0:0] tmp_306_1_fu_2122_p2;
reg   [0:0] tmp_306_1_reg_3913;
wire   [0:0] brmerge40_demorgan_i_23_fu_2133_p2;
reg   [0:0] brmerge40_demorgan_i_23_reg_3918;
wire   [0:0] underflow_1_fu_2150_p2;
reg   [0:0] underflow_1_reg_3923;
wire   [0:0] brmerge_i_i_i_1_fu_2155_p2;
reg   [0:0] brmerge_i_i_i_1_reg_3928;
wire   [0:0] p_38_i_i_2_fu_2203_p2;
reg   [0:0] p_38_i_i_2_reg_3933;
wire   [0:0] tmp_306_2_fu_2219_p2;
reg   [0:0] tmp_306_2_reg_3938;
wire   [0:0] brmerge40_demorgan_i_17_fu_2230_p2;
reg   [0:0] brmerge40_demorgan_i_17_reg_3943;
wire   [0:0] underflow_2_fu_2247_p2;
reg   [0:0] underflow_2_reg_3948;
wire   [0:0] brmerge_i_i_i_2_fu_2252_p2;
reg   [0:0] brmerge_i_i_i_2_reg_3953;
wire   [0:0] p_38_i_i_3_fu_2300_p2;
reg   [0:0] p_38_i_i_3_reg_3958;
wire   [0:0] tmp_306_3_fu_2316_p2;
reg   [0:0] tmp_306_3_reg_3963;
wire   [0:0] brmerge40_demorgan_i_18_fu_2327_p2;
reg   [0:0] brmerge40_demorgan_i_18_reg_3968;
wire   [0:0] underflow_3_fu_2344_p2;
reg   [0:0] underflow_3_reg_3973;
wire   [0:0] brmerge_i_i_i_3_fu_2349_p2;
reg   [0:0] brmerge_i_i_i_3_reg_3978;
wire   [0:0] p_38_i_i_4_fu_2397_p2;
reg   [0:0] p_38_i_i_4_reg_3983;
wire   [0:0] tmp_306_4_fu_2413_p2;
reg   [0:0] tmp_306_4_reg_3988;
wire   [0:0] brmerge40_demorgan_i_19_fu_2424_p2;
reg   [0:0] brmerge40_demorgan_i_19_reg_3993;
wire   [0:0] underflow_4_fu_2441_p2;
reg   [0:0] underflow_4_reg_3998;
wire   [0:0] brmerge_i_i_i_4_fu_2446_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4003;
wire   [0:0] p_38_i_i_5_fu_2494_p2;
reg   [0:0] p_38_i_i_5_reg_4008;
wire   [0:0] tmp_306_5_fu_2510_p2;
reg   [0:0] tmp_306_5_reg_4013;
wire   [0:0] brmerge40_demorgan_i_20_fu_2521_p2;
reg   [0:0] brmerge40_demorgan_i_20_reg_4018;
wire   [0:0] underflow_5_fu_2538_p2;
reg   [0:0] underflow_5_reg_4023;
wire   [0:0] brmerge_i_i_i_5_fu_2543_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4028;
wire   [0:0] p_38_i_i_6_fu_2591_p2;
reg   [0:0] p_38_i_i_6_reg_4033;
wire   [0:0] tmp_306_6_fu_2607_p2;
reg   [0:0] tmp_306_6_reg_4038;
wire   [0:0] brmerge40_demorgan_i_21_fu_2618_p2;
reg   [0:0] brmerge40_demorgan_i_21_reg_4043;
wire   [0:0] underflow_6_fu_2635_p2;
reg   [0:0] underflow_6_reg_4048;
wire   [0:0] brmerge_i_i_i_6_fu_2640_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4053;
wire   [0:0] p_38_i_i_7_fu_2688_p2;
reg   [0:0] p_38_i_i_7_reg_4058;
wire   [0:0] tmp_306_7_fu_2704_p2;
reg   [0:0] tmp_306_7_reg_4063;
wire   [0:0] brmerge40_demorgan_i_22_fu_2715_p2;
reg   [0:0] brmerge40_demorgan_i_22_reg_4068;
wire   [0:0] underflow_7_fu_2732_p2;
reg   [0:0] underflow_7_reg_4073;
wire   [0:0] brmerge_i_i_i_7_fu_2737_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4078;
wire   [0:0] exitcond_flatten9_fu_2983_p2;
reg   [0:0] exitcond_flatten9_reg_4083;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_state18_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten9_reg_4083;
wire   [13:0] indvar_flatten_next1_4_fu_2989_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten10_fu_2995_p2;
reg   [0:0] exitcond_flatten10_reg_4092;
wire   [0:0] exitcond_mid_fu_3013_p2;
reg   [0:0] exitcond_mid_reg_4098;
wire   [4:0] w6_mid2_fu_3025_p3;
reg   [4:0] w6_mid2_reg_4103;
reg   [4:0] ap_reg_pp1_iter1_w6_mid2_reg_4103;
wire   [9:0] indvar_flatten_next1_3_fu_3039_p3;
wire   [5:0] arrayNo_mid2_v_fu_3060_p3;
reg   [5:0] arrayNo_mid2_v_reg_4114;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] tmp_416_fu_3067_p1;
reg   [2:0] tmp_416_reg_4119;
reg   [2:0] ap_reg_pp1_iter2_tmp_416_reg_4119;
wire   [4:0] tmp_187_mid2_fu_3117_p3;
reg   [4:0] tmp_187_mid2_reg_4124;
wire   [7:0] tmp_310_fu_3128_p2;
reg   [7:0] tmp_310_reg_4129;
wire   [4:0] w_21_fu_3134_p2;
reg   [10:0] ShuffleConvs_1_Downs_47_reg_4140;
reg   [10:0] ShuffleConvs_1_Downs_48_reg_4146;
reg   [10:0] ShuffleConvs_1_Downs_49_reg_4152;
reg   [10:0] ShuffleConvs_1_Downs_50_reg_4158;
reg   [10:0] ShuffleConvs_1_Downs_51_reg_4164;
reg   [10:0] ShuffleConvs_1_Downs_52_reg_4170;
reg   [10:0] ShuffleConvs_1_Downs_53_reg_4176;
reg   [10:0] ShuffleConvs_1_Downs_54_reg_4182;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [5:0] co_phi_fu_564_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [4:0] h_phi_fu_587_p4;
reg   [4:0] w_phi_fu_599_p4;
reg   [4:0] h1_reg_606;
wire    ap_CS_fsm_state5;
reg   [4:0] w2_reg_618;
reg   [5:0] ci_reg_630;
reg   [5:0] co3_reg_641;
wire    ap_CS_fsm_state14;
reg   [5:0] co4_phi_fu_667_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [4:0] h5_phi_fu_690_p4;
reg   [4:0] w6_phi_fu_702_p4;
wire   [63:0] tmp_mid2_fu_793_p1;
wire   [63:0] tmp_351_cast_fu_903_p1;
wire   [63:0] tmp_368_cast_fu_1031_p1;
wire  signed [63:0] tmp_372_cast_fu_1097_p1;
wire   [63:0] tmp_380_cast_fu_1169_p1;
wire   [63:0] tmp_360_cast_fu_3172_p1;
wire   [7:0] this_assign_1_6_fu_2944_p3;
wire   [0:0] tmp_418_fu_3205_p3;
wire   [7:0] this_assign_1_5_fu_2914_p3;
wire   [7:0] this_assign_1_4_fu_2884_p3;
wire   [7:0] this_assign_1_3_fu_2854_p3;
wire   [7:0] this_assign_1_2_fu_2824_p3;
wire   [7:0] this_assign_1_1_fu_2794_p3;
wire   [7:0] this_assign_1_fu_2764_p3;
wire   [7:0] this_assign_1_7_fu_2974_p3;
wire   [0:0] exitcond_fu_733_p2;
wire   [0:0] not_exitcond_flatten_fu_727_p2;
wire   [0:0] tmp_302_fu_745_p2;
wire   [9:0] indvar_flatten_op_fu_759_p2;
wire   [5:0] co_19_fu_773_p2;
wire   [2:0] newIndex5_mid2_v_fu_802_p4;
wire   [6:0] tmp_fu_812_p3;
wire   [3:0] tmp_s_fu_824_p3;
wire   [7:0] p_shl3_cast_fu_832_p1;
wire   [7:0] p_shl2_cast_fu_820_p1;
wire   [4:0] h_mid_fu_779_p3;
wire   [4:0] h_17_fu_842_p2;
wire   [7:0] tmp_301_fu_836_p2;
wire   [7:0] tmp_184_mid2_cast_fu_855_p1;
wire   [8:0] tmp_415_fu_877_p3;
wire   [11:0] p_shl1_cast_fu_884_p1;
wire   [11:0] p_shl_cast_fu_870_p3;
wire   [11:0] tmp_304_fu_888_p2;
wire   [11:0] tmp_186_cast_fu_894_p1;
wire   [11:0] tmp_305_fu_897_p2;
wire   [9:0] tmp_313_fu_965_p3;
wire   [6:0] tmp_314_fu_977_p3;
wire   [10:0] p_shl6_cast_fu_973_p1;
wire   [10:0] p_shl7_cast_fu_985_p1;
wire   [10:0] tmp_315_fu_989_p2;
wire   [10:0] tmp_316_fu_995_p2;
wire   [11:0] tmp_419_fu_1008_p3;
wire   [14:0] p_shl4_cast_fu_1000_p3;
wire   [14:0] p_shl5_cast_fu_1016_p1;
wire   [14:0] tmp_317_fu_1020_p2;
wire   [14:0] tmp_318_fu_1026_p2;
wire   [2:0] newIndex8_fu_1048_p4;
wire   [8:0] tmp_319_fu_1058_p3;
wire   [6:0] tmp_320_fu_1070_p3;
wire   [9:0] p_shl12_cast_fu_1066_p1;
wire   [9:0] p_shl13_cast_fu_1082_p1;
wire   [9:0] tmp_321_fu_1086_p2;
wire   [9:0] tmp_322_fu_1092_p2;
wire   [3:0] tmp_323_fu_1109_p3;
wire   [7:0] p_shl13_cast1_fu_1078_p1;
wire   [7:0] p_shl11_cast_fu_1117_p1;
wire   [7:0] tmp_324_fu_1121_p2;
wire   [7:0] tmp_325_fu_1127_p2;
wire   [8:0] tmp_420_fu_1140_p3;
wire   [11:0] p_shl8_cast_fu_1132_p3;
wire   [11:0] p_shl9_cast_fu_1148_p1;
wire   [11:0] tmp_326_fu_1152_p2;
wire  signed [7:0] p_Val2_s_fu_1186_p0;
wire  signed [7:0] p_Val2_s_fu_1186_p1;
wire  signed [15:0] OP2_V_fu_1183_p1;
wire  signed [7:0] p_Val2_65_1_fu_1203_p0;
wire  signed [7:0] p_Val2_65_1_fu_1203_p1;
wire  signed [7:0] p_Val2_65_2_fu_1220_p0;
wire  signed [7:0] p_Val2_65_2_fu_1220_p1;
wire  signed [7:0] p_Val2_65_3_fu_1237_p0;
wire  signed [7:0] p_Val2_65_3_fu_1237_p1;
wire  signed [7:0] p_Val2_65_4_fu_1254_p0;
wire  signed [7:0] p_Val2_65_4_fu_1254_p1;
wire  signed [7:0] p_Val2_65_5_fu_1271_p0;
wire  signed [7:0] p_Val2_65_5_fu_1271_p1;
wire  signed [7:0] p_Val2_65_6_fu_1288_p0;
wire  signed [7:0] p_Val2_65_6_fu_1288_p1;
wire  signed [7:0] p_Val2_65_7_fu_1305_p0;
wire  signed [7:0] p_Val2_65_7_fu_1305_p1;
wire   [13:0] tmp_191_fu_1319_p3;
wire  signed [15:0] tmp_212_cast_fu_1326_p1;
wire   [7:0] p_Val2_5_fu_1343_p4;
wire   [7:0] tmp_192_fu_1353_p1;
wire   [0:0] tmp_423_fu_1356_p3;
wire   [0:0] tmp_193_fu_1378_p2;
wire   [13:0] tmp_293_1_fu_1400_p3;
wire  signed [15:0] tmp_293_1_cast_fu_1407_p1;
wire   [7:0] p_Val2_67_1_fu_1424_p4;
wire   [7:0] tmp_297_1_fu_1434_p1;
wire   [0:0] tmp_428_fu_1437_p3;
wire   [0:0] tmp_301_1_fu_1459_p2;
wire   [13:0] tmp_293_2_fu_1481_p3;
wire  signed [15:0] tmp_293_2_cast_fu_1488_p1;
wire   [7:0] p_Val2_67_2_fu_1505_p4;
wire   [7:0] tmp_297_2_fu_1515_p1;
wire   [0:0] tmp_433_fu_1518_p3;
wire   [0:0] tmp_301_2_fu_1540_p2;
wire   [13:0] tmp_293_3_fu_1562_p3;
wire  signed [15:0] tmp_293_3_cast_fu_1569_p1;
wire   [7:0] p_Val2_67_3_fu_1586_p4;
wire   [7:0] tmp_297_3_fu_1596_p1;
wire   [0:0] tmp_438_fu_1599_p3;
wire   [0:0] tmp_301_3_fu_1621_p2;
wire   [13:0] tmp_293_4_fu_1643_p3;
wire  signed [15:0] tmp_293_4_cast_fu_1650_p1;
wire   [7:0] p_Val2_67_4_fu_1667_p4;
wire   [7:0] tmp_297_4_fu_1677_p1;
wire   [0:0] tmp_443_fu_1680_p3;
wire   [0:0] tmp_301_4_fu_1702_p2;
wire   [13:0] tmp_293_5_fu_1724_p3;
wire  signed [15:0] tmp_293_5_cast_fu_1731_p1;
wire   [7:0] p_Val2_67_5_fu_1748_p4;
wire   [7:0] tmp_297_5_fu_1758_p1;
wire   [0:0] tmp_448_fu_1761_p3;
wire   [0:0] tmp_301_5_fu_1783_p2;
wire   [13:0] tmp_293_6_fu_1805_p3;
wire  signed [15:0] tmp_293_6_cast_fu_1812_p1;
wire   [7:0] p_Val2_67_6_fu_1829_p4;
wire   [7:0] tmp_297_6_fu_1839_p1;
wire   [0:0] tmp_453_fu_1842_p3;
wire   [0:0] tmp_301_6_fu_1864_p2;
wire   [13:0] tmp_293_7_fu_1886_p3;
wire  signed [15:0] tmp_293_7_cast_fu_1893_p1;
wire   [7:0] p_Val2_67_7_fu_1910_p4;
wire   [7:0] tmp_297_7_fu_1920_p1;
wire   [0:0] tmp_458_fu_1923_p3;
wire   [0:0] tmp_301_7_fu_1945_p2;
wire   [0:0] Range1_all_ones_fu_1974_p2;
wire   [0:0] Range1_all_zeros_fu_1979_p2;
wire   [0:0] tmp_425_fu_1967_p3;
wire   [0:0] tmp_194_fu_1991_p2;
wire   [0:0] p_41_i_i_fu_1997_p2;
wire   [0:0] deleted_zeros_fu_1984_p3;
wire   [0:0] p_not_i_i_fu_2014_p2;
wire   [0:0] brmerge_i_i_fu_2020_p2;
wire   [0:0] deleted_ones_fu_2002_p3;
wire   [0:0] tmp1_demorgan_fu_2041_p2;
wire   [0:0] tmp1_fu_2047_p2;
wire   [0:0] overflow_fu_2030_p2;
wire   [0:0] Range1_all_ones_1_fu_2071_p2;
wire   [0:0] Range1_all_zeros_1_fu_2076_p2;
wire   [0:0] tmp_430_fu_2064_p3;
wire   [0:0] tmp_304_1_fu_2088_p2;
wire   [0:0] p_41_i_i_1_fu_2094_p2;
wire   [0:0] deleted_zeros_1_fu_2081_p3;
wire   [0:0] p_not_i_i_1_fu_2111_p2;
wire   [0:0] brmerge_i_i_1_fu_2117_p2;
wire   [0:0] deleted_ones_1_fu_2099_p3;
wire   [0:0] tmp3_demorgan_fu_2138_p2;
wire   [0:0] tmp3_fu_2144_p2;
wire   [0:0] overflow_1_fu_2127_p2;
wire   [0:0] Range1_all_ones_2_fu_2168_p2;
wire   [0:0] Range1_all_zeros_2_fu_2173_p2;
wire   [0:0] tmp_435_fu_2161_p3;
wire   [0:0] tmp_304_2_fu_2185_p2;
wire   [0:0] p_41_i_i_2_fu_2191_p2;
wire   [0:0] deleted_zeros_2_fu_2178_p3;
wire   [0:0] p_not_i_i_2_fu_2208_p2;
wire   [0:0] brmerge_i_i_2_fu_2214_p2;
wire   [0:0] deleted_ones_2_fu_2196_p3;
wire   [0:0] tmp5_demorgan_fu_2235_p2;
wire   [0:0] tmp5_fu_2241_p2;
wire   [0:0] overflow_2_fu_2224_p2;
wire   [0:0] Range1_all_ones_3_fu_2265_p2;
wire   [0:0] Range1_all_zeros_3_fu_2270_p2;
wire   [0:0] tmp_440_fu_2258_p3;
wire   [0:0] tmp_304_3_fu_2282_p2;
wire   [0:0] p_41_i_i_3_fu_2288_p2;
wire   [0:0] deleted_zeros_3_fu_2275_p3;
wire   [0:0] p_not_i_i_3_fu_2305_p2;
wire   [0:0] brmerge_i_i_3_fu_2311_p2;
wire   [0:0] deleted_ones_3_fu_2293_p3;
wire   [0:0] tmp7_demorgan_fu_2332_p2;
wire   [0:0] tmp7_fu_2338_p2;
wire   [0:0] overflow_3_fu_2321_p2;
wire   [0:0] Range1_all_ones_4_fu_2362_p2;
wire   [0:0] Range1_all_zeros_4_fu_2367_p2;
wire   [0:0] tmp_445_fu_2355_p3;
wire   [0:0] tmp_304_4_fu_2379_p2;
wire   [0:0] p_41_i_i_4_fu_2385_p2;
wire   [0:0] deleted_zeros_4_fu_2372_p3;
wire   [0:0] p_not_i_i_4_fu_2402_p2;
wire   [0:0] brmerge_i_i_4_fu_2408_p2;
wire   [0:0] deleted_ones_4_fu_2390_p3;
wire   [0:0] tmp9_demorgan_fu_2429_p2;
wire   [0:0] tmp9_fu_2435_p2;
wire   [0:0] overflow_4_fu_2418_p2;
wire   [0:0] Range1_all_ones_5_fu_2459_p2;
wire   [0:0] Range1_all_zeros_5_fu_2464_p2;
wire   [0:0] tmp_450_fu_2452_p3;
wire   [0:0] tmp_304_5_fu_2476_p2;
wire   [0:0] p_41_i_i_5_fu_2482_p2;
wire   [0:0] deleted_zeros_5_fu_2469_p3;
wire   [0:0] p_not_i_i_5_fu_2499_p2;
wire   [0:0] brmerge_i_i_5_fu_2505_p2;
wire   [0:0] deleted_ones_5_fu_2487_p3;
wire   [0:0] tmp11_demorgan_fu_2526_p2;
wire   [0:0] tmp11_fu_2532_p2;
wire   [0:0] overflow_5_fu_2515_p2;
wire   [0:0] Range1_all_ones_6_fu_2556_p2;
wire   [0:0] Range1_all_zeros_6_fu_2561_p2;
wire   [0:0] tmp_455_fu_2549_p3;
wire   [0:0] tmp_304_6_fu_2573_p2;
wire   [0:0] p_41_i_i_6_fu_2579_p2;
wire   [0:0] deleted_zeros_6_fu_2566_p3;
wire   [0:0] p_not_i_i_6_fu_2596_p2;
wire   [0:0] brmerge_i_i_6_fu_2602_p2;
wire   [0:0] deleted_ones_6_fu_2584_p3;
wire   [0:0] tmp13_demorgan_fu_2623_p2;
wire   [0:0] tmp13_fu_2629_p2;
wire   [0:0] overflow_6_fu_2612_p2;
wire   [0:0] Range1_all_ones_7_fu_2653_p2;
wire   [0:0] Range1_all_zeros_7_fu_2658_p2;
wire   [0:0] tmp_460_fu_2646_p3;
wire   [0:0] tmp_304_7_fu_2670_p2;
wire   [0:0] p_41_i_i_7_fu_2676_p2;
wire   [0:0] deleted_zeros_7_fu_2663_p3;
wire   [0:0] p_not_i_i_7_fu_2693_p2;
wire   [0:0] brmerge_i_i_7_fu_2699_p2;
wire   [0:0] deleted_ones_7_fu_2681_p3;
wire   [0:0] tmp15_demorgan_fu_2720_p2;
wire   [0:0] tmp15_fu_2726_p2;
wire   [0:0] overflow_7_fu_2709_p2;
wire   [0:0] tmp2_fu_2743_p2;
wire   [0:0] underflow_not_fu_2747_p2;
wire   [7:0] p_Val2_68_mux_fu_2752_p3;
wire   [7:0] p_Val2_s_127_fu_2758_p3;
wire   [0:0] tmp4_fu_2773_p2;
wire   [0:0] underflow_not_1_fu_2777_p2;
wire   [7:0] p_Val2_68_mux_1_fu_2782_p3;
wire   [7:0] p_Val2_68_1_128_fu_2788_p3;
wire   [0:0] tmp6_fu_2803_p2;
wire   [0:0] underflow_not_2_fu_2807_p2;
wire   [7:0] p_Val2_68_mux_2_fu_2812_p3;
wire   [7:0] p_Val2_68_2_129_fu_2818_p3;
wire   [0:0] tmp8_fu_2833_p2;
wire   [0:0] underflow_not_3_fu_2837_p2;
wire   [7:0] p_Val2_68_mux_3_fu_2842_p3;
wire   [7:0] p_Val2_68_3_130_fu_2848_p3;
wire   [0:0] tmp10_fu_2863_p2;
wire   [0:0] underflow_not_4_fu_2867_p2;
wire   [7:0] p_Val2_68_mux_4_fu_2872_p3;
wire   [7:0] p_Val2_68_4_131_fu_2878_p3;
wire   [0:0] tmp12_fu_2893_p2;
wire   [0:0] underflow_not_5_fu_2897_p2;
wire   [7:0] p_Val2_68_mux_5_fu_2902_p3;
wire   [7:0] p_Val2_68_5_132_fu_2908_p3;
wire   [0:0] tmp14_fu_2923_p2;
wire   [0:0] underflow_not_6_fu_2927_p2;
wire   [7:0] p_Val2_68_mux_6_fu_2932_p3;
wire   [7:0] p_Val2_68_6_133_fu_2938_p3;
wire   [0:0] tmp16_fu_2953_p2;
wire   [0:0] underflow_not_7_fu_2957_p2;
wire   [7:0] p_Val2_68_mux_7_fu_2962_p3;
wire   [7:0] p_Val2_68_7_134_fu_2968_p3;
wire   [0:0] exitcond16_fu_3007_p2;
wire   [0:0] not_exitcond_flatten_1_fu_3001_p2;
wire   [0:0] tmp_309_fu_3019_p2;
wire   [9:0] indvar_flatten21_op_fu_3033_p2;
wire   [5:0] co_20_fu_3047_p2;
wire   [2:0] newIndex7_mid2_v_fu_3071_p4;
wire   [6:0] tmp_306_fu_3081_p3;
wire   [3:0] tmp_307_fu_3093_p3;
wire   [7:0] p_shl17_cast_fu_3101_p1;
wire   [7:0] p_shl16_cast_fu_3089_p1;
wire   [4:0] h5_mid_fu_3053_p3;
wire   [4:0] h_7_fu_3111_p2;
wire   [7:0] tmp_308_fu_3105_p2;
wire   [7:0] tmp_187_mid2_cast_fu_3124_p1;
wire   [8:0] tmp_417_fu_3146_p3;
wire   [11:0] p_shl15_cast_fu_3153_p1;
wire   [11:0] p_shl14_cast_fu_3139_p3;
wire   [11:0] tmp_311_fu_3157_p2;
wire   [11:0] tmp_189_cast_fu_3163_p1;
wire   [11:0] tmp_312_fu_3166_p2;
wire   [7:0] tmp_196_fu_3184_p10;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U117(
    .din1(ShuffleConvs_1_Downs_7_q0),
    .din2(ShuffleConvs_1_Downs_6_q0),
    .din3(ShuffleConvs_1_Downs_5_q0),
    .din4(ShuffleConvs_1_Downs_4_q0),
    .din5(ShuffleConvs_1_Downs_3_q0),
    .din6(ShuffleConvs_1_Downs_2_q0),
    .din7(ShuffleConvs_1_Downs_1_q0),
    .din8(ShuffleConvs_1_Downs_q0),
    .din9(ap_reg_pp1_iter2_tmp_416_reg_4119),
    .dout(tmp_196_fu_3184_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state15 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond15_fu_1042_p2))) begin
        ci_reg_630 <= ci_5_reg_3309;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond13_fu_929_p2))) begin
        ci_reg_630 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond14_fu_949_p2))) begin
        co3_reg_641 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        co3_reg_641 <= co_21_7_reg_3377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
        co4_reg_663 <= 6'd0;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        co4_reg_663 <= arrayNo_mid2_v_reg_4114;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 == 1'd0))) begin
        co_reg_560 <= tmp_mid2_v_reg_3244;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_560 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h1_reg_606 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond13_fu_929_p2 == 1'd1))) begin
        h1_reg_606 <= h_8_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
        h5_reg_686 <= 5'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        h5_reg_686 <= tmp_187_mid2_reg_4124;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 == 1'd0))) begin
        h_reg_583 <= tmp_184_mid2_reg_3253;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_583 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_709_p2 == 1'd0))) begin
        indvar_flatten4_reg_549 <= indvar_flatten_next1_fu_715_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_549 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
        indvar_flatten5_reg_652 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_2983_p2))) begin
        indvar_flatten5_reg_652 <= indvar_flatten_next1_4_fu_2989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
        indvar_flatten6_reg_675 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten9_fu_2983_p2))) begin
        indvar_flatten6_reg_675 <= indvar_flatten_next1_3_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_709_p2 == 1'd0))) begin
        indvar_flatten_reg_572 <= indvar_flatten_next_fu_765_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_572 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond12_fu_915_p2))) begin
        w2_reg_618 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond14_fu_949_p2))) begin
        w2_reg_618 <= w_20_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
        w6_reg_698 <= 5'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten9_reg_4083))) begin
        w6_reg_698 <= w_21_fu_3134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3213 == 1'd0))) begin
        w_reg_595 <= w_19_fu_865_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_595 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_31_reg_3382 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_32_reg_3387 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_33_reg_3392 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_34_reg_3397 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_35_reg_3402 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_36_reg_3407 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_37_reg_3412 <= tmp_380_cast_fu_1169_p1;
        ShuffleConvs_1_Downs_38_reg_3417 <= tmp_380_cast_fu_1169_p1;
        input_V_load_reg_3427 <= input_V_q0;
        weight_0_V_load_reg_3422 <= weight_0_V_q0;
        weight_1_V_load_reg_3432 <= weight_1_V_q0;
        weight_2_V_load_reg_3437 <= weight_2_V_q0;
        weight_3_V_load_reg_3442 <= weight_3_V_q0;
        weight_4_V_load_reg_3447 <= weight_4_V_q0;
        weight_5_V_load_reg_3452 <= weight_5_V_q0;
        weight_6_V_load_reg_3457 <= weight_6_V_q0;
        weight_7_V_load_reg_3462 <= weight_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ShuffleConvs_1_Downs_39_reg_3472 <= ShuffleConvs_1_Downs_7_q0;
        ShuffleConvs_1_Downs_40_reg_3487 <= ShuffleConvs_1_Downs_6_q0;
        ShuffleConvs_1_Downs_41_reg_3502 <= ShuffleConvs_1_Downs_5_q0;
        ShuffleConvs_1_Downs_42_reg_3517 <= ShuffleConvs_1_Downs_4_q0;
        ShuffleConvs_1_Downs_43_reg_3532 <= ShuffleConvs_1_Downs_3_q0;
        ShuffleConvs_1_Downs_44_reg_3547 <= ShuffleConvs_1_Downs_2_q0;
        ShuffleConvs_1_Downs_45_reg_3562 <= ShuffleConvs_1_Downs_1_q0;
        ShuffleConvs_1_Downs_46_reg_3577 <= ShuffleConvs_1_Downs_q0;
        p_Val2_65_1_reg_3482 <= p_Val2_65_1_fu_1203_p2;
        p_Val2_65_2_reg_3497 <= p_Val2_65_2_fu_1220_p2;
        p_Val2_65_3_reg_3512 <= p_Val2_65_3_fu_1237_p2;
        p_Val2_65_4_reg_3527 <= p_Val2_65_4_fu_1254_p2;
        p_Val2_65_5_reg_3542 <= p_Val2_65_5_fu_1271_p2;
        p_Val2_65_6_reg_3557 <= p_Val2_65_6_fu_1288_p2;
        p_Val2_65_7_reg_3572 <= p_Val2_65_7_fu_1305_p2;
        p_Val2_s_reg_3467 <= p_Val2_s_fu_1186_p2;
        tmp_422_reg_3477 <= p_Val2_s_fu_1186_p2[32'd5];
        tmp_427_reg_3492 <= p_Val2_65_1_fu_1203_p2[32'd5];
        tmp_432_reg_3507 <= p_Val2_65_2_fu_1220_p2[32'd5];
        tmp_437_reg_3522 <= p_Val2_65_3_fu_1237_p2[32'd5];
        tmp_442_reg_3537 <= p_Val2_65_4_fu_1254_p2[32'd5];
        tmp_447_reg_3552 <= p_Val2_65_5_fu_1271_p2[32'd5];
        tmp_452_reg_3567 <= p_Val2_65_6_fu_1288_p2[32'd5];
        tmp_457_reg_3582 <= p_Val2_65_7_fu_1305_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4083))) begin
        ShuffleConvs_1_Downs_47_reg_4140 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_48_reg_4146 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_49_reg_4152 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_50_reg_4158 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_51_reg_4164 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_52_reg_4170 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_53_reg_4176 <= tmp_360_cast_fu_3172_p1;
        ShuffleConvs_1_Downs_54_reg_4182 <= tmp_360_cast_fu_3172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_3213 <= exitcond_flatten_reg_3213;
        ap_reg_pp0_iter1_w_mid2_reg_3233 <= w_mid2_reg_3233;
        exitcond_flatten_reg_3213 <= exitcond_flatten_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten9_reg_4083 <= exitcond_flatten9_reg_4083;
        ap_reg_pp1_iter1_w6_mid2_reg_4103 <= w6_mid2_reg_4103;
        exitcond_flatten9_reg_4083 <= exitcond_flatten9_fu_2983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_tmp_416_reg_4119 <= tmp_416_reg_4119;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten9_reg_4083))) begin
        arrayNo_mid2_v_reg_4114 <= arrayNo_mid2_v_fu_3060_p3;
        tmp_187_mid2_reg_4124 <= tmp_187_mid2_fu_3117_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        brmerge40_demorgan_i_17_reg_3943 <= brmerge40_demorgan_i_17_fu_2230_p2;
        brmerge40_demorgan_i_18_reg_3968 <= brmerge40_demorgan_i_18_fu_2327_p2;
        brmerge40_demorgan_i_19_reg_3993 <= brmerge40_demorgan_i_19_fu_2424_p2;
        brmerge40_demorgan_i_20_reg_4018 <= brmerge40_demorgan_i_20_fu_2521_p2;
        brmerge40_demorgan_i_21_reg_4043 <= brmerge40_demorgan_i_21_fu_2618_p2;
        brmerge40_demorgan_i_22_reg_4068 <= brmerge40_demorgan_i_22_fu_2715_p2;
        brmerge40_demorgan_i_23_reg_3918 <= brmerge40_demorgan_i_23_fu_2133_p2;
        brmerge40_demorgan_i_reg_3893 <= brmerge40_demorgan_i_fu_2036_p2;
        brmerge_i_i_i_1_reg_3928 <= brmerge_i_i_i_1_fu_2155_p2;
        brmerge_i_i_i_2_reg_3953 <= brmerge_i_i_i_2_fu_2252_p2;
        brmerge_i_i_i_3_reg_3978 <= brmerge_i_i_i_3_fu_2349_p2;
        brmerge_i_i_i_4_reg_4003 <= brmerge_i_i_i_4_fu_2446_p2;
        brmerge_i_i_i_5_reg_4028 <= brmerge_i_i_i_5_fu_2543_p2;
        brmerge_i_i_i_6_reg_4053 <= brmerge_i_i_i_6_fu_2640_p2;
        brmerge_i_i_i_7_reg_4078 <= brmerge_i_i_i_7_fu_2737_p2;
        brmerge_i_i_i_reg_3903 <= brmerge_i_i_i_fu_2058_p2;
        p_38_i_i_1_reg_3908 <= p_38_i_i_1_fu_2106_p2;
        p_38_i_i_2_reg_3933 <= p_38_i_i_2_fu_2203_p2;
        p_38_i_i_3_reg_3958 <= p_38_i_i_3_fu_2300_p2;
        p_38_i_i_4_reg_3983 <= p_38_i_i_4_fu_2397_p2;
        p_38_i_i_5_reg_4008 <= p_38_i_i_5_fu_2494_p2;
        p_38_i_i_6_reg_4033 <= p_38_i_i_6_fu_2591_p2;
        p_38_i_i_7_reg_4058 <= p_38_i_i_7_fu_2688_p2;
        p_38_i_i_reg_3883 <= p_38_i_i_fu_2009_p2;
        tmp_195_reg_3888 <= tmp_195_fu_2025_p2;
        tmp_306_1_reg_3913 <= tmp_306_1_fu_2122_p2;
        tmp_306_2_reg_3938 <= tmp_306_2_fu_2219_p2;
        tmp_306_3_reg_3963 <= tmp_306_3_fu_2316_p2;
        tmp_306_4_reg_3988 <= tmp_306_4_fu_2413_p2;
        tmp_306_5_reg_4013 <= tmp_306_5_fu_2510_p2;
        tmp_306_6_reg_4038 <= tmp_306_6_fu_2607_p2;
        tmp_306_7_reg_4063 <= tmp_306_7_fu_2704_p2;
        underflow_1_reg_3923 <= underflow_1_fu_2150_p2;
        underflow_2_reg_3948 <= underflow_2_fu_2247_p2;
        underflow_3_reg_3973 <= underflow_3_fu_2344_p2;
        underflow_4_reg_3998 <= underflow_4_fu_2441_p2;
        underflow_5_reg_4023 <= underflow_5_fu_2538_p2;
        underflow_6_reg_4048 <= underflow_6_fu_2635_p2;
        underflow_7_reg_4073 <= underflow_7_fu_2732_p2;
        underflow_reg_3898 <= underflow_fu_2053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        carry_11_1_reg_3648 <= carry_11_1_fu_1465_p2;
        carry_11_2_reg_3685 <= carry_11_2_fu_1546_p2;
        carry_11_3_reg_3722 <= carry_11_3_fu_1627_p2;
        carry_11_4_reg_3759 <= carry_11_4_fu_1708_p2;
        carry_11_5_reg_3796 <= carry_11_5_fu_1789_p2;
        carry_11_6_reg_3833 <= carry_11_6_fu_1870_p2;
        carry_11_7_reg_3870 <= carry_11_7_fu_1951_p2;
        carry_s_reg_3611 <= carry_s_fu_1384_p2;
        p_Val2_4_reg_3587 <= p_Val2_4_fu_1330_p2;
        p_Val2_66_1_reg_3624 <= p_Val2_66_1_fu_1411_p2;
        p_Val2_66_2_reg_3661 <= p_Val2_66_2_fu_1492_p2;
        p_Val2_66_3_reg_3698 <= p_Val2_66_3_fu_1573_p2;
        p_Val2_66_4_reg_3735 <= p_Val2_66_4_fu_1654_p2;
        p_Val2_66_5_reg_3772 <= p_Val2_66_5_fu_1735_p2;
        p_Val2_66_6_reg_3809 <= p_Val2_66_6_fu_1816_p2;
        p_Val2_66_7_reg_3846 <= p_Val2_66_7_fu_1897_p2;
        p_Val2_68_1_reg_3636 <= p_Val2_68_1_fu_1445_p2;
        p_Val2_68_2_reg_3673 <= p_Val2_68_2_fu_1526_p2;
        p_Val2_68_3_reg_3710 <= p_Val2_68_3_fu_1607_p2;
        p_Val2_68_4_reg_3747 <= p_Val2_68_4_fu_1688_p2;
        p_Val2_68_5_reg_3784 <= p_Val2_68_5_fu_1769_p2;
        p_Val2_68_6_reg_3821 <= p_Val2_68_6_fu_1850_p2;
        p_Val2_68_7_reg_3858 <= p_Val2_68_7_fu_1931_p2;
        p_Val2_6_reg_3599 <= p_Val2_6_fu_1364_p2;
        tmp_197_reg_3618 <= {{p_Val2_4_fu_1330_p2[15:14]}};
        tmp_198_reg_3655 <= {{p_Val2_66_1_fu_1411_p2[15:14]}};
        tmp_199_reg_3692 <= {{p_Val2_66_2_fu_1492_p2[15:14]}};
        tmp_200_reg_3729 <= {{p_Val2_66_3_fu_1573_p2[15:14]}};
        tmp_201_reg_3766 <= {{p_Val2_66_4_fu_1654_p2[15:14]}};
        tmp_202_reg_3803 <= {{p_Val2_66_5_fu_1735_p2[15:14]}};
        tmp_203_reg_3840 <= {{p_Val2_66_6_fu_1816_p2[15:14]}};
        tmp_204_reg_3877 <= {{p_Val2_66_7_fu_1897_p2[15:14]}};
        tmp_421_reg_3592 <= p_Val2_4_fu_1330_p2[32'd15];
        tmp_424_reg_3605 <= p_Val2_6_fu_1364_p2[32'd7];
        tmp_426_reg_3629 <= p_Val2_66_1_fu_1411_p2[32'd15];
        tmp_429_reg_3642 <= p_Val2_68_1_fu_1445_p2[32'd7];
        tmp_431_reg_3666 <= p_Val2_66_2_fu_1492_p2[32'd15];
        tmp_434_reg_3679 <= p_Val2_68_2_fu_1526_p2[32'd7];
        tmp_436_reg_3703 <= p_Val2_66_3_fu_1573_p2[32'd15];
        tmp_439_reg_3716 <= p_Val2_68_3_fu_1607_p2[32'd7];
        tmp_441_reg_3740 <= p_Val2_66_4_fu_1654_p2[32'd15];
        tmp_444_reg_3753 <= p_Val2_68_4_fu_1688_p2[32'd7];
        tmp_446_reg_3777 <= p_Val2_66_5_fu_1735_p2[32'd15];
        tmp_449_reg_3790 <= p_Val2_68_5_fu_1769_p2[32'd7];
        tmp_451_reg_3814 <= p_Val2_66_6_fu_1816_p2[32'd15];
        tmp_454_reg_3827 <= p_Val2_68_6_fu_1850_p2[32'd7];
        tmp_456_reg_3851 <= p_Val2_66_7_fu_1897_p2[32'd15];
        tmp_459_reg_3864 <= p_Val2_68_7_fu_1931_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ci_5_reg_3309 <= ci_5_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == exitcond15_fu_1042_p2))) begin
        co_21_7_reg_3377 <= co_21_7_fu_1163_p2;
        tmp_327_reg_3372 <= tmp_327_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_709_p2 == 1'd0))) begin
        exitcond32_mid_reg_3228 <= exitcond32_mid_fu_739_p2;
        exitcond_flatten8_reg_3222 <= exitcond_flatten8_fu_721_p2;
        w_mid2_reg_3233 <= w_mid2_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_fu_2983_p2))) begin
        exitcond_flatten10_reg_4092 <= exitcond_flatten10_fu_2995_p2;
        exitcond_mid_reg_4098 <= exitcond_mid_fu_3013_p2;
        w6_mid2_reg_4103 <= w6_mid2_fu_3025_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond14_fu_949_p2))) begin
        input_V_addr_reg_3319 <= tmp_368_cast_fu_1031_p1;
        tmp_188_cast_reg_3314[5 : 0] <= tmp_188_cast_fu_961_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3213 == 1'd0))) begin
        tmp_184_mid2_reg_3253 <= tmp_184_mid2_fu_848_p3;
        tmp_mid2_v_reg_3244 <= tmp_mid2_v_fu_786_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond13_fu_929_p2))) begin
        tmp_185_cast1_reg_3291[4 : 0] <= tmp_185_cast1_fu_935_p1[4 : 0];
        tmp_185_cast_reg_3296[4 : 0] <= tmp_185_cast_fu_939_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_3213 == 1'd0))) begin
        tmp_303_reg_3258 <= tmp_303_fu_859_p2;
        tmp_414_reg_3249 <= tmp_414_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten9_reg_4083))) begin
        tmp_310_reg_4129 <= tmp_310_fu_3128_p2;
        tmp_416_reg_4119 <= tmp_416_fu_3067_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond12_fu_915_p2))) begin
        tmp_cast4_reg_3278[4 : 0] <= tmp_cast4_fu_921_p1[4 : 0];
        tmp_cast_reg_3283[4 : 0] <= tmp_cast_fu_925_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_1_address0 = ShuffleConvs_1_Downs_32_reg_3387;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_1_d0 = this_assign_1_6_fu_2944_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_1_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd6)))) begin
        ShuffleConvs_1_Downs_1_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd6))) begin
        ShuffleConvs_1_Downs_1_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_2_address0 = ShuffleConvs_1_Downs_37_reg_3412;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_2_d0 = this_assign_1_5_fu_2914_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_2_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd5)))) begin
        ShuffleConvs_1_Downs_2_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd5))) begin
        ShuffleConvs_1_Downs_2_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_3_address0 = ShuffleConvs_1_Downs_33_reg_3392;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_3_d0 = this_assign_1_4_fu_2884_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_3_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd4)))) begin
        ShuffleConvs_1_Downs_3_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd4))) begin
        ShuffleConvs_1_Downs_3_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_4_address0 = ShuffleConvs_1_Downs_38_reg_3417;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_4_d0 = this_assign_1_3_fu_2854_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_4_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd3)))) begin
        ShuffleConvs_1_Downs_4_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd3))) begin
        ShuffleConvs_1_Downs_4_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_5_address0 = ShuffleConvs_1_Downs_35_reg_3402;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_5_d0 = this_assign_1_2_fu_2824_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_5_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd2)))) begin
        ShuffleConvs_1_Downs_5_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd2))) begin
        ShuffleConvs_1_Downs_5_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_6_address0 = ShuffleConvs_1_Downs_31_reg_3382;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_6_d0 = this_assign_1_1_fu_2794_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_6_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd1)))) begin
        ShuffleConvs_1_Downs_6_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd1))) begin
        ShuffleConvs_1_Downs_6_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_7_address0 = ShuffleConvs_1_Downs_34_reg_3397;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_7_d0 = this_assign_1_fu_2764_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_7_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd0)))) begin
        ShuffleConvs_1_Downs_7_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd0))) begin
        ShuffleConvs_1_Downs_7_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_address0 = tmp_360_cast_fu_3172_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_address0 = ShuffleConvs_1_Downs_36_reg_3407;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        ShuffleConvs_1_Downs_address0 = tmp_380_cast_fu_1169_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_address0 = tmp_351_cast_fu_903_p1;
    end else begin
        ShuffleConvs_1_Downs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        ShuffleConvs_1_Downs_ce0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        ShuffleConvs_1_Downs_ce1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ShuffleConvs_1_Downs_d0 = this_assign_1_7_fu_2974_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        ShuffleConvs_1_Downs_d0 = bias_V_q0;
    end else begin
        ShuffleConvs_1_Downs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (tmp_414_reg_3249 == 3'd7)))) begin
        ShuffleConvs_1_Downs_we0 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (1'd1 == tmp_418_fu_3205_p3) & (ap_reg_pp1_iter2_tmp_416_reg_4119 == 3'd7))) begin
        ShuffleConvs_1_Downs_we1 = 1'b1;
    end else begin
        ShuffleConvs_1_Downs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_709_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten9_fu_2983_p2)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        co4_phi_fu_667_p4 = arrayNo_mid2_v_reg_4114;
    end else begin
        co4_phi_fu_667_p4 = co4_reg_663;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        co_phi_fu_564_p4 = tmp_mid2_v_reg_3244;
    end else begin
        co_phi_fu_564_p4 = co_reg_560;
    end
end

always @ (*) begin
    if (((1'd0 == ap_reg_pp1_iter1_exitcond_flatten9_reg_4083) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        h5_phi_fu_690_p4 = tmp_187_mid2_reg_4124;
    end else begin
        h5_phi_fu_690_p4 = h5_reg_686;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_3213 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        h_phi_fu_587_p4 = tmp_184_mid2_reg_3253;
    end else begin
        h_phi_fu_587_p4 = h_reg_583;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_flatten9_reg_4083) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        w6_phi_fu_702_p4 = w_21_fu_3134_p2;
    end else begin
        w6_phi_fu_702_p4 = w6_reg_698;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_3213 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        w_phi_fu_599_p4 = w_19_fu_865_p2;
    end else begin
        w_phi_fu_599_p4 = w_reg_595;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_709_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_709_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond12_fu_915_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond13_fu_929_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond14_fu_949_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == exitcond15_fu_1042_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_2983_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten9_fu_2983_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1183_p1 = $signed(input_V_load_reg_3427);

assign Range1_all_ones_1_fu_2071_p2 = ((tmp_198_reg_3655 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2168_p2 = ((tmp_199_reg_3692 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2265_p2 = ((tmp_200_reg_3729 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2362_p2 = ((tmp_201_reg_3766 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2459_p2 = ((tmp_202_reg_3803 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2556_p2 = ((tmp_203_reg_3840 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2653_p2 = ((tmp_204_reg_3877 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1974_p2 = ((tmp_197_reg_3618 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2076_p2 = ((tmp_198_reg_3655 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2173_p2 = ((tmp_199_reg_3692 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2270_p2 = ((tmp_200_reg_3729 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2367_p2 = ((tmp_201_reg_3766 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2464_p2 = ((tmp_202_reg_3803 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2561_p2 = ((tmp_203_reg_3840 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2658_p2 = ((tmp_204_reg_3877 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1979_p2 = ((tmp_197_reg_3618 == 2'd0) ? 1'b1 : 1'b0);

assign ShuffleConvs_1_Downs_1_address1 = ShuffleConvs_1_Downs_48_reg_4146;

assign ShuffleConvs_1_Downs_1_d1 = 8'd0;

assign ShuffleConvs_1_Downs_2_address1 = ShuffleConvs_1_Downs_53_reg_4176;

assign ShuffleConvs_1_Downs_2_d1 = 8'd0;

assign ShuffleConvs_1_Downs_3_address1 = ShuffleConvs_1_Downs_49_reg_4152;

assign ShuffleConvs_1_Downs_3_d1 = 8'd0;

assign ShuffleConvs_1_Downs_4_address1 = ShuffleConvs_1_Downs_54_reg_4182;

assign ShuffleConvs_1_Downs_4_d1 = 8'd0;

assign ShuffleConvs_1_Downs_5_address1 = ShuffleConvs_1_Downs_51_reg_4164;

assign ShuffleConvs_1_Downs_5_d1 = 8'd0;

assign ShuffleConvs_1_Downs_6_address1 = ShuffleConvs_1_Downs_47_reg_4140;

assign ShuffleConvs_1_Downs_6_d1 = 8'd0;

assign ShuffleConvs_1_Downs_7_address1 = ShuffleConvs_1_Downs_50_reg_4158;

assign ShuffleConvs_1_Downs_7_d1 = 8'd0;

assign ShuffleConvs_1_Downs_address1 = ShuffleConvs_1_Downs_52_reg_4170;

assign ShuffleConvs_1_Downs_d1 = 8'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo_mid2_v_fu_3060_p3 = ((exitcond_flatten10_reg_4092[0:0] === 1'b1) ? co_20_fu_3047_p2 : co4_phi_fu_667_p4);

assign bias_V_address0 = tmp_mid2_fu_793_p1;

assign brmerge40_demorgan_i_17_fu_2230_p2 = (tmp_434_reg_3679 & deleted_ones_2_fu_2196_p3);

assign brmerge40_demorgan_i_18_fu_2327_p2 = (tmp_439_reg_3716 & deleted_ones_3_fu_2293_p3);

assign brmerge40_demorgan_i_19_fu_2424_p2 = (tmp_444_reg_3753 & deleted_ones_4_fu_2390_p3);

assign brmerge40_demorgan_i_20_fu_2521_p2 = (tmp_449_reg_3790 & deleted_ones_5_fu_2487_p3);

assign brmerge40_demorgan_i_21_fu_2618_p2 = (tmp_454_reg_3827 & deleted_ones_6_fu_2584_p3);

assign brmerge40_demorgan_i_22_fu_2715_p2 = (tmp_459_reg_3864 & deleted_ones_7_fu_2681_p3);

assign brmerge40_demorgan_i_23_fu_2133_p2 = (tmp_429_reg_3642 & deleted_ones_1_fu_2099_p3);

assign brmerge40_demorgan_i_fu_2036_p2 = (tmp_424_reg_3605 & deleted_ones_fu_2002_p3);

assign brmerge_i_i_1_fu_2117_p2 = (tmp_429_reg_3642 | p_not_i_i_1_fu_2111_p2);

assign brmerge_i_i_2_fu_2214_p2 = (tmp_434_reg_3679 | p_not_i_i_2_fu_2208_p2);

assign brmerge_i_i_3_fu_2311_p2 = (tmp_439_reg_3716 | p_not_i_i_3_fu_2305_p2);

assign brmerge_i_i_4_fu_2408_p2 = (tmp_444_reg_3753 | p_not_i_i_4_fu_2402_p2);

assign brmerge_i_i_5_fu_2505_p2 = (tmp_449_reg_3790 | p_not_i_i_5_fu_2499_p2);

assign brmerge_i_i_6_fu_2602_p2 = (tmp_454_reg_3827 | p_not_i_i_6_fu_2596_p2);

assign brmerge_i_i_7_fu_2699_p2 = (tmp_459_reg_3864 | p_not_i_i_7_fu_2693_p2);

assign brmerge_i_i_fu_2020_p2 = (tmp_424_reg_3605 | p_not_i_i_fu_2014_p2);

assign brmerge_i_i_i_1_fu_2155_p2 = (underflow_1_fu_2150_p2 | overflow_1_fu_2127_p2);

assign brmerge_i_i_i_2_fu_2252_p2 = (underflow_2_fu_2247_p2 | overflow_2_fu_2224_p2);

assign brmerge_i_i_i_3_fu_2349_p2 = (underflow_3_fu_2344_p2 | overflow_3_fu_2321_p2);

assign brmerge_i_i_i_4_fu_2446_p2 = (underflow_4_fu_2441_p2 | overflow_4_fu_2418_p2);

assign brmerge_i_i_i_5_fu_2543_p2 = (underflow_5_fu_2538_p2 | overflow_5_fu_2515_p2);

assign brmerge_i_i_i_6_fu_2640_p2 = (underflow_6_fu_2635_p2 | overflow_6_fu_2612_p2);

assign brmerge_i_i_i_7_fu_2737_p2 = (underflow_7_fu_2732_p2 | overflow_7_fu_2709_p2);

assign brmerge_i_i_i_fu_2058_p2 = (underflow_fu_2053_p2 | overflow_fu_2030_p2);

assign carry_11_1_fu_1465_p2 = (tmp_428_fu_1437_p3 & tmp_301_1_fu_1459_p2);

assign carry_11_2_fu_1546_p2 = (tmp_433_fu_1518_p3 & tmp_301_2_fu_1540_p2);

assign carry_11_3_fu_1627_p2 = (tmp_438_fu_1599_p3 & tmp_301_3_fu_1621_p2);

assign carry_11_4_fu_1708_p2 = (tmp_443_fu_1680_p3 & tmp_301_4_fu_1702_p2);

assign carry_11_5_fu_1789_p2 = (tmp_448_fu_1761_p3 & tmp_301_5_fu_1783_p2);

assign carry_11_6_fu_1870_p2 = (tmp_453_fu_1842_p3 & tmp_301_6_fu_1864_p2);

assign carry_11_7_fu_1951_p2 = (tmp_458_fu_1923_p3 & tmp_301_7_fu_1945_p2);

assign carry_s_fu_1384_p2 = (tmp_423_fu_1356_p3 & tmp_193_fu_1378_p2);

assign ci_5_fu_955_p2 = (ci_reg_630 + 6'd1);

assign co_19_fu_773_p2 = (6'd1 + co_phi_fu_564_p4);

assign co_20_fu_3047_p2 = (6'd1 + co4_phi_fu_667_p4);

assign co_21_7_fu_1163_p2 = (co3_reg_641 + 6'd8);

assign deleted_ones_1_fu_2099_p3 = ((carry_11_1_reg_3648[0:0] === 1'b1) ? p_41_i_i_1_fu_2094_p2 : Range1_all_ones_1_fu_2071_p2);

assign deleted_ones_2_fu_2196_p3 = ((carry_11_2_reg_3685[0:0] === 1'b1) ? p_41_i_i_2_fu_2191_p2 : Range1_all_ones_2_fu_2168_p2);

assign deleted_ones_3_fu_2293_p3 = ((carry_11_3_reg_3722[0:0] === 1'b1) ? p_41_i_i_3_fu_2288_p2 : Range1_all_ones_3_fu_2265_p2);

assign deleted_ones_4_fu_2390_p3 = ((carry_11_4_reg_3759[0:0] === 1'b1) ? p_41_i_i_4_fu_2385_p2 : Range1_all_ones_4_fu_2362_p2);

assign deleted_ones_5_fu_2487_p3 = ((carry_11_5_reg_3796[0:0] === 1'b1) ? p_41_i_i_5_fu_2482_p2 : Range1_all_ones_5_fu_2459_p2);

assign deleted_ones_6_fu_2584_p3 = ((carry_11_6_reg_3833[0:0] === 1'b1) ? p_41_i_i_6_fu_2579_p2 : Range1_all_ones_6_fu_2556_p2);

assign deleted_ones_7_fu_2681_p3 = ((carry_11_7_reg_3870[0:0] === 1'b1) ? p_41_i_i_7_fu_2676_p2 : Range1_all_ones_7_fu_2653_p2);

assign deleted_ones_fu_2002_p3 = ((carry_s_reg_3611[0:0] === 1'b1) ? p_41_i_i_fu_1997_p2 : Range1_all_ones_fu_1974_p2);

assign deleted_zeros_1_fu_2081_p3 = ((carry_11_1_reg_3648[0:0] === 1'b1) ? Range1_all_ones_1_fu_2071_p2 : Range1_all_zeros_1_fu_2076_p2);

assign deleted_zeros_2_fu_2178_p3 = ((carry_11_2_reg_3685[0:0] === 1'b1) ? Range1_all_ones_2_fu_2168_p2 : Range1_all_zeros_2_fu_2173_p2);

assign deleted_zeros_3_fu_2275_p3 = ((carry_11_3_reg_3722[0:0] === 1'b1) ? Range1_all_ones_3_fu_2265_p2 : Range1_all_zeros_3_fu_2270_p2);

assign deleted_zeros_4_fu_2372_p3 = ((carry_11_4_reg_3759[0:0] === 1'b1) ? Range1_all_ones_4_fu_2362_p2 : Range1_all_zeros_4_fu_2367_p2);

assign deleted_zeros_5_fu_2469_p3 = ((carry_11_5_reg_3796[0:0] === 1'b1) ? Range1_all_ones_5_fu_2459_p2 : Range1_all_zeros_5_fu_2464_p2);

assign deleted_zeros_6_fu_2566_p3 = ((carry_11_6_reg_3833[0:0] === 1'b1) ? Range1_all_ones_6_fu_2556_p2 : Range1_all_zeros_6_fu_2561_p2);

assign deleted_zeros_7_fu_2663_p3 = ((carry_11_7_reg_3870[0:0] === 1'b1) ? Range1_all_ones_7_fu_2653_p2 : Range1_all_zeros_7_fu_2658_p2);

assign deleted_zeros_fu_1984_p3 = ((carry_s_reg_3611[0:0] === 1'b1) ? Range1_all_ones_fu_1974_p2 : Range1_all_zeros_fu_1979_p2);

assign exitcond12_fu_915_p2 = ((h1_reg_606 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond13_fu_929_p2 = ((w2_reg_618 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond14_fu_949_p2 = ((ci_reg_630 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond15_fu_1042_p2 = ((co3_reg_641 == 6'd48) ? 1'b1 : 1'b0);

assign exitcond16_fu_3007_p2 = ((w6_phi_fu_702_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond32_mid_fu_739_p2 = (exitcond_fu_733_p2 & not_exitcond_flatten_fu_727_p2);

assign exitcond_flatten10_fu_2995_p2 = ((indvar_flatten6_reg_675 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_721_p2 = ((indvar_flatten_reg_572 == 10'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_2983_p2 = ((indvar_flatten5_reg_652 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_709_p2 = ((indvar_flatten4_reg_549 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_fu_733_p2 = ((w_phi_fu_599_p4 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3013_p2 = (exitcond16_fu_3007_p2 & not_exitcond_flatten_1_fu_3001_p2);

assign h5_mid_fu_3053_p3 = ((exitcond_flatten10_reg_4092[0:0] === 1'b1) ? 5'd1 : h5_phi_fu_690_p4);

assign h_17_fu_842_p2 = (5'd1 + h_mid_fu_779_p3);

assign h_7_fu_3111_p2 = (5'd1 + h5_mid_fu_3053_p3);

assign h_8_fu_943_p2 = (h1_reg_606 + 5'd1);

assign h_mid_fu_779_p3 = ((exitcond_flatten8_reg_3222[0:0] === 1'b1) ? 5'd1 : h_phi_fu_587_p4);

assign indvar_flatten21_op_fu_3033_p2 = (indvar_flatten6_reg_675 + 10'd1);

assign indvar_flatten_next1_3_fu_3039_p3 = ((exitcond_flatten10_fu_2995_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten21_op_fu_3033_p2);

assign indvar_flatten_next1_4_fu_2989_p2 = (indvar_flatten5_reg_652 + 14'd1);

assign indvar_flatten_next1_fu_715_p2 = (indvar_flatten4_reg_549 + 14'd1);

assign indvar_flatten_next_fu_765_p3 = ((exitcond_flatten8_fu_721_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten_op_fu_759_p2);

assign indvar_flatten_op_fu_759_p2 = (indvar_flatten_reg_572 + 10'd1);

assign input_V_address0 = input_V_addr_reg_3319;

assign newIndex5_mid2_v_fu_802_p4 = {{tmp_mid2_v_fu_786_p3[5:3]}};

assign newIndex7_mid2_v_fu_3071_p4 = {{arrayNo_mid2_v_fu_3060_p3[5:3]}};

assign newIndex8_fu_1048_p4 = {{co3_reg_641[5:3]}};

assign not_exitcond_flatten_1_fu_3001_p2 = (exitcond_flatten10_fu_2995_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_727_p2 = (exitcond_flatten8_fu_721_p2 ^ 1'd1);

assign overflow_1_fu_2127_p2 = (brmerge_i_i_1_fu_2117_p2 & tmp_306_1_fu_2122_p2);

assign overflow_2_fu_2224_p2 = (brmerge_i_i_2_fu_2214_p2 & tmp_306_2_fu_2219_p2);

assign overflow_3_fu_2321_p2 = (brmerge_i_i_3_fu_2311_p2 & tmp_306_3_fu_2316_p2);

assign overflow_4_fu_2418_p2 = (brmerge_i_i_4_fu_2408_p2 & tmp_306_4_fu_2413_p2);

assign overflow_5_fu_2515_p2 = (brmerge_i_i_5_fu_2505_p2 & tmp_306_5_fu_2510_p2);

assign overflow_6_fu_2612_p2 = (brmerge_i_i_6_fu_2602_p2 & tmp_306_6_fu_2607_p2);

assign overflow_7_fu_2709_p2 = (brmerge_i_i_7_fu_2699_p2 & tmp_306_7_fu_2704_p2);

assign overflow_fu_2030_p2 = (brmerge_i_i_fu_2020_p2 & tmp_195_fu_2025_p2);

assign p_38_i_i_1_fu_2106_p2 = (carry_11_1_reg_3648 & Range1_all_ones_1_fu_2071_p2);

assign p_38_i_i_2_fu_2203_p2 = (carry_11_2_reg_3685 & Range1_all_ones_2_fu_2168_p2);

assign p_38_i_i_3_fu_2300_p2 = (carry_11_3_reg_3722 & Range1_all_ones_3_fu_2265_p2);

assign p_38_i_i_4_fu_2397_p2 = (carry_11_4_reg_3759 & Range1_all_ones_4_fu_2362_p2);

assign p_38_i_i_5_fu_2494_p2 = (carry_11_5_reg_3796 & Range1_all_ones_5_fu_2459_p2);

assign p_38_i_i_6_fu_2591_p2 = (carry_11_6_reg_3833 & Range1_all_ones_6_fu_2556_p2);

assign p_38_i_i_7_fu_2688_p2 = (carry_11_7_reg_3870 & Range1_all_ones_7_fu_2653_p2);

assign p_38_i_i_fu_2009_p2 = (carry_s_reg_3611 & Range1_all_ones_fu_1974_p2);

assign p_41_i_i_1_fu_2094_p2 = (tmp_426_reg_3629 & tmp_304_1_fu_2088_p2);

assign p_41_i_i_2_fu_2191_p2 = (tmp_431_reg_3666 & tmp_304_2_fu_2185_p2);

assign p_41_i_i_3_fu_2288_p2 = (tmp_436_reg_3703 & tmp_304_3_fu_2282_p2);

assign p_41_i_i_4_fu_2385_p2 = (tmp_441_reg_3740 & tmp_304_4_fu_2379_p2);

assign p_41_i_i_5_fu_2482_p2 = (tmp_446_reg_3777 & tmp_304_5_fu_2476_p2);

assign p_41_i_i_6_fu_2579_p2 = (tmp_451_reg_3814 & tmp_304_6_fu_2573_p2);

assign p_41_i_i_7_fu_2676_p2 = (tmp_456_reg_3851 & tmp_304_7_fu_2670_p2);

assign p_41_i_i_fu_1997_p2 = (tmp_421_reg_3592 & tmp_194_fu_1991_p2);

assign p_Val2_4_fu_1330_p2 = ($signed(tmp_212_cast_fu_1326_p1) + $signed(p_Val2_s_reg_3467));

assign p_Val2_5_fu_1343_p4 = {{p_Val2_4_fu_1330_p2[13:6]}};

assign p_Val2_65_1_fu_1203_p0 = weight_1_V_load_reg_3432;

assign p_Val2_65_1_fu_1203_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_1_fu_1203_p2 = ($signed(p_Val2_65_1_fu_1203_p0) * $signed(p_Val2_65_1_fu_1203_p1));

assign p_Val2_65_2_fu_1220_p0 = weight_2_V_load_reg_3437;

assign p_Val2_65_2_fu_1220_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_2_fu_1220_p2 = ($signed(p_Val2_65_2_fu_1220_p0) * $signed(p_Val2_65_2_fu_1220_p1));

assign p_Val2_65_3_fu_1237_p0 = weight_3_V_load_reg_3442;

assign p_Val2_65_3_fu_1237_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_3_fu_1237_p2 = ($signed(p_Val2_65_3_fu_1237_p0) * $signed(p_Val2_65_3_fu_1237_p1));

assign p_Val2_65_4_fu_1254_p0 = weight_4_V_load_reg_3447;

assign p_Val2_65_4_fu_1254_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_4_fu_1254_p2 = ($signed(p_Val2_65_4_fu_1254_p0) * $signed(p_Val2_65_4_fu_1254_p1));

assign p_Val2_65_5_fu_1271_p0 = weight_5_V_load_reg_3452;

assign p_Val2_65_5_fu_1271_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_5_fu_1271_p2 = ($signed(p_Val2_65_5_fu_1271_p0) * $signed(p_Val2_65_5_fu_1271_p1));

assign p_Val2_65_6_fu_1288_p0 = weight_6_V_load_reg_3457;

assign p_Val2_65_6_fu_1288_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_6_fu_1288_p2 = ($signed(p_Val2_65_6_fu_1288_p0) * $signed(p_Val2_65_6_fu_1288_p1));

assign p_Val2_65_7_fu_1305_p0 = weight_7_V_load_reg_3462;

assign p_Val2_65_7_fu_1305_p1 = OP2_V_fu_1183_p1;

assign p_Val2_65_7_fu_1305_p2 = ($signed(p_Val2_65_7_fu_1305_p0) * $signed(p_Val2_65_7_fu_1305_p1));

assign p_Val2_66_1_fu_1411_p2 = ($signed(tmp_293_1_cast_fu_1407_p1) + $signed(p_Val2_65_1_reg_3482));

assign p_Val2_66_2_fu_1492_p2 = ($signed(tmp_293_2_cast_fu_1488_p1) + $signed(p_Val2_65_2_reg_3497));

assign p_Val2_66_3_fu_1573_p2 = ($signed(tmp_293_3_cast_fu_1569_p1) + $signed(p_Val2_65_3_reg_3512));

assign p_Val2_66_4_fu_1654_p2 = ($signed(tmp_293_4_cast_fu_1650_p1) + $signed(p_Val2_65_4_reg_3527));

assign p_Val2_66_5_fu_1735_p2 = ($signed(tmp_293_5_cast_fu_1731_p1) + $signed(p_Val2_65_5_reg_3542));

assign p_Val2_66_6_fu_1816_p2 = ($signed(tmp_293_6_cast_fu_1812_p1) + $signed(p_Val2_65_6_reg_3557));

assign p_Val2_66_7_fu_1897_p2 = ($signed(tmp_293_7_cast_fu_1893_p1) + $signed(p_Val2_65_7_reg_3572));

assign p_Val2_67_1_fu_1424_p4 = {{p_Val2_66_1_fu_1411_p2[13:6]}};

assign p_Val2_67_2_fu_1505_p4 = {{p_Val2_66_2_fu_1492_p2[13:6]}};

assign p_Val2_67_3_fu_1586_p4 = {{p_Val2_66_3_fu_1573_p2[13:6]}};

assign p_Val2_67_4_fu_1667_p4 = {{p_Val2_66_4_fu_1654_p2[13:6]}};

assign p_Val2_67_5_fu_1748_p4 = {{p_Val2_66_5_fu_1735_p2[13:6]}};

assign p_Val2_67_6_fu_1829_p4 = {{p_Val2_66_6_fu_1816_p2[13:6]}};

assign p_Val2_67_7_fu_1910_p4 = {{p_Val2_66_7_fu_1897_p2[13:6]}};

assign p_Val2_68_1_128_fu_2788_p3 = ((underflow_1_reg_3923[0:0] === 1'b1) ? 8'd128 : p_Val2_68_1_reg_3636);

assign p_Val2_68_1_fu_1445_p2 = (p_Val2_67_1_fu_1424_p4 + tmp_297_1_fu_1434_p1);

assign p_Val2_68_2_129_fu_2818_p3 = ((underflow_2_reg_3948[0:0] === 1'b1) ? 8'd128 : p_Val2_68_2_reg_3673);

assign p_Val2_68_2_fu_1526_p2 = (p_Val2_67_2_fu_1505_p4 + tmp_297_2_fu_1515_p1);

assign p_Val2_68_3_130_fu_2848_p3 = ((underflow_3_reg_3973[0:0] === 1'b1) ? 8'd128 : p_Val2_68_3_reg_3710);

assign p_Val2_68_3_fu_1607_p2 = (p_Val2_67_3_fu_1586_p4 + tmp_297_3_fu_1596_p1);

assign p_Val2_68_4_131_fu_2878_p3 = ((underflow_4_reg_3998[0:0] === 1'b1) ? 8'd128 : p_Val2_68_4_reg_3747);

assign p_Val2_68_4_fu_1688_p2 = (p_Val2_67_4_fu_1667_p4 + tmp_297_4_fu_1677_p1);

assign p_Val2_68_5_132_fu_2908_p3 = ((underflow_5_reg_4023[0:0] === 1'b1) ? 8'd128 : p_Val2_68_5_reg_3784);

assign p_Val2_68_5_fu_1769_p2 = (p_Val2_67_5_fu_1748_p4 + tmp_297_5_fu_1758_p1);

assign p_Val2_68_6_133_fu_2938_p3 = ((underflow_6_reg_4048[0:0] === 1'b1) ? 8'd128 : p_Val2_68_6_reg_3821);

assign p_Val2_68_6_fu_1850_p2 = (p_Val2_67_6_fu_1829_p4 + tmp_297_6_fu_1839_p1);

assign p_Val2_68_7_134_fu_2968_p3 = ((underflow_7_reg_4073[0:0] === 1'b1) ? 8'd128 : p_Val2_68_7_reg_3858);

assign p_Val2_68_7_fu_1931_p2 = (p_Val2_67_7_fu_1910_p4 + tmp_297_7_fu_1920_p1);

assign p_Val2_68_mux_1_fu_2782_p3 = ((brmerge_i_i_i_1_reg_3928[0:0] === 1'b1) ? 8'd127 : p_Val2_68_1_reg_3636);

assign p_Val2_68_mux_2_fu_2812_p3 = ((brmerge_i_i_i_2_reg_3953[0:0] === 1'b1) ? 8'd127 : p_Val2_68_2_reg_3673);

assign p_Val2_68_mux_3_fu_2842_p3 = ((brmerge_i_i_i_3_reg_3978[0:0] === 1'b1) ? 8'd127 : p_Val2_68_3_reg_3710);

assign p_Val2_68_mux_4_fu_2872_p3 = ((brmerge_i_i_i_4_reg_4003[0:0] === 1'b1) ? 8'd127 : p_Val2_68_4_reg_3747);

assign p_Val2_68_mux_5_fu_2902_p3 = ((brmerge_i_i_i_5_reg_4028[0:0] === 1'b1) ? 8'd127 : p_Val2_68_5_reg_3784);

assign p_Val2_68_mux_6_fu_2932_p3 = ((brmerge_i_i_i_6_reg_4053[0:0] === 1'b1) ? 8'd127 : p_Val2_68_6_reg_3821);

assign p_Val2_68_mux_7_fu_2962_p3 = ((brmerge_i_i_i_7_reg_4078[0:0] === 1'b1) ? 8'd127 : p_Val2_68_7_reg_3858);

assign p_Val2_68_mux_fu_2752_p3 = ((brmerge_i_i_i_reg_3903[0:0] === 1'b1) ? 8'd127 : p_Val2_6_reg_3599);

assign p_Val2_6_fu_1364_p2 = (p_Val2_5_fu_1343_p4 + tmp_192_fu_1353_p1);

assign p_Val2_s_127_fu_2758_p3 = ((underflow_reg_3898[0:0] === 1'b1) ? 8'd128 : p_Val2_6_reg_3599);

assign p_Val2_s_fu_1186_p0 = weight_0_V_load_reg_3422;

assign p_Val2_s_fu_1186_p1 = OP2_V_fu_1183_p1;

assign p_Val2_s_fu_1186_p2 = ($signed(p_Val2_s_fu_1186_p0) * $signed(p_Val2_s_fu_1186_p1));

assign p_not_i_i_1_fu_2111_p2 = (deleted_zeros_1_fu_2081_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2208_p2 = (deleted_zeros_2_fu_2178_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2305_p2 = (deleted_zeros_3_fu_2275_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2402_p2 = (deleted_zeros_4_fu_2372_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2499_p2 = (deleted_zeros_5_fu_2469_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2596_p2 = (deleted_zeros_6_fu_2566_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2693_p2 = (deleted_zeros_7_fu_2663_p3 ^ 1'd1);

assign p_not_i_i_fu_2014_p2 = (deleted_zeros_fu_1984_p3 ^ 1'd1);

assign p_shl11_cast_fu_1117_p1 = tmp_323_fu_1109_p3;

assign p_shl12_cast_fu_1066_p1 = tmp_319_fu_1058_p3;

assign p_shl13_cast1_fu_1078_p1 = tmp_320_fu_1070_p3;

assign p_shl13_cast_fu_1082_p1 = tmp_320_fu_1070_p3;

assign p_shl14_cast_fu_3139_p3 = {{tmp_310_reg_4129}, {4'd0}};

assign p_shl15_cast_fu_3153_p1 = tmp_417_fu_3146_p3;

assign p_shl16_cast_fu_3089_p1 = tmp_306_fu_3081_p3;

assign p_shl17_cast_fu_3101_p1 = tmp_307_fu_3093_p3;

assign p_shl1_cast_fu_884_p1 = tmp_415_fu_877_p3;

assign p_shl2_cast_fu_820_p1 = tmp_fu_812_p3;

assign p_shl3_cast_fu_832_p1 = tmp_s_fu_824_p3;

assign p_shl4_cast_fu_1000_p3 = {{tmp_316_fu_995_p2}, {4'd0}};

assign p_shl5_cast_fu_1016_p1 = tmp_419_fu_1008_p3;

assign p_shl6_cast_fu_973_p1 = tmp_313_fu_965_p3;

assign p_shl7_cast_fu_985_p1 = tmp_314_fu_977_p3;

assign p_shl8_cast_fu_1132_p3 = {{tmp_325_fu_1127_p2}, {4'd0}};

assign p_shl9_cast_fu_1148_p1 = tmp_420_fu_1140_p3;

assign p_shl_cast_fu_870_p3 = {{tmp_303_reg_3258}, {4'd0}};

assign this_assign_1_1_fu_2794_p3 = ((underflow_not_1_fu_2777_p2[0:0] === 1'b1) ? p_Val2_68_mux_1_fu_2782_p3 : p_Val2_68_1_128_fu_2788_p3);

assign this_assign_1_2_fu_2824_p3 = ((underflow_not_2_fu_2807_p2[0:0] === 1'b1) ? p_Val2_68_mux_2_fu_2812_p3 : p_Val2_68_2_129_fu_2818_p3);

assign this_assign_1_3_fu_2854_p3 = ((underflow_not_3_fu_2837_p2[0:0] === 1'b1) ? p_Val2_68_mux_3_fu_2842_p3 : p_Val2_68_3_130_fu_2848_p3);

assign this_assign_1_4_fu_2884_p3 = ((underflow_not_4_fu_2867_p2[0:0] === 1'b1) ? p_Val2_68_mux_4_fu_2872_p3 : p_Val2_68_4_131_fu_2878_p3);

assign this_assign_1_5_fu_2914_p3 = ((underflow_not_5_fu_2897_p2[0:0] === 1'b1) ? p_Val2_68_mux_5_fu_2902_p3 : p_Val2_68_5_132_fu_2908_p3);

assign this_assign_1_6_fu_2944_p3 = ((underflow_not_6_fu_2927_p2[0:0] === 1'b1) ? p_Val2_68_mux_6_fu_2932_p3 : p_Val2_68_6_133_fu_2938_p3);

assign this_assign_1_7_fu_2974_p3 = ((underflow_not_7_fu_2957_p2[0:0] === 1'b1) ? p_Val2_68_mux_7_fu_2962_p3 : p_Val2_68_7_134_fu_2968_p3);

assign this_assign_1_fu_2764_p3 = ((underflow_not_fu_2747_p2[0:0] === 1'b1) ? p_Val2_68_mux_fu_2752_p3 : p_Val2_s_127_fu_2758_p3);

assign tmp10_fu_2863_p2 = (brmerge40_demorgan_i_19_reg_3993 | tmp_306_4_reg_3988);

assign tmp11_demorgan_fu_2526_p2 = (p_38_i_i_5_fu_2494_p2 | brmerge40_demorgan_i_20_fu_2521_p2);

assign tmp11_fu_2532_p2 = (tmp11_demorgan_fu_2526_p2 ^ 1'd1);

assign tmp12_fu_2893_p2 = (brmerge40_demorgan_i_20_reg_4018 | tmp_306_5_reg_4013);

assign tmp13_demorgan_fu_2623_p2 = (p_38_i_i_6_fu_2591_p2 | brmerge40_demorgan_i_21_fu_2618_p2);

assign tmp13_fu_2629_p2 = (tmp13_demorgan_fu_2623_p2 ^ 1'd1);

assign tmp14_fu_2923_p2 = (brmerge40_demorgan_i_21_reg_4043 | tmp_306_6_reg_4038);

assign tmp15_demorgan_fu_2720_p2 = (p_38_i_i_7_fu_2688_p2 | brmerge40_demorgan_i_22_fu_2715_p2);

assign tmp15_fu_2726_p2 = (tmp15_demorgan_fu_2720_p2 ^ 1'd1);

assign tmp16_fu_2953_p2 = (brmerge40_demorgan_i_22_reg_4068 | tmp_306_7_reg_4063);

assign tmp1_demorgan_fu_2041_p2 = (p_38_i_i_fu_2009_p2 | brmerge40_demorgan_i_fu_2036_p2);

assign tmp1_fu_2047_p2 = (tmp1_demorgan_fu_2041_p2 ^ 1'd1);

assign tmp2_fu_2743_p2 = (brmerge40_demorgan_i_reg_3893 | tmp_195_reg_3888);

assign tmp3_demorgan_fu_2138_p2 = (p_38_i_i_1_fu_2106_p2 | brmerge40_demorgan_i_23_fu_2133_p2);

assign tmp3_fu_2144_p2 = (tmp3_demorgan_fu_2138_p2 ^ 1'd1);

assign tmp4_fu_2773_p2 = (brmerge40_demorgan_i_23_reg_3918 | tmp_306_1_reg_3913);

assign tmp5_demorgan_fu_2235_p2 = (p_38_i_i_2_fu_2203_p2 | brmerge40_demorgan_i_17_fu_2230_p2);

assign tmp5_fu_2241_p2 = (tmp5_demorgan_fu_2235_p2 ^ 1'd1);

assign tmp6_fu_2803_p2 = (brmerge40_demorgan_i_17_reg_3943 | tmp_306_2_reg_3938);

assign tmp7_demorgan_fu_2332_p2 = (p_38_i_i_3_fu_2300_p2 | brmerge40_demorgan_i_18_fu_2327_p2);

assign tmp7_fu_2338_p2 = (tmp7_demorgan_fu_2332_p2 ^ 1'd1);

assign tmp8_fu_2833_p2 = (brmerge40_demorgan_i_18_reg_3968 | tmp_306_3_reg_3963);

assign tmp9_demorgan_fu_2429_p2 = (p_38_i_i_4_fu_2397_p2 | brmerge40_demorgan_i_19_fu_2424_p2);

assign tmp9_fu_2435_p2 = (tmp9_demorgan_fu_2429_p2 ^ 1'd1);

assign tmp_184_mid2_cast_fu_855_p1 = tmp_184_mid2_fu_848_p3;

assign tmp_184_mid2_fu_848_p3 = ((exitcond32_mid_reg_3228[0:0] === 1'b1) ? h_17_fu_842_p2 : h_mid_fu_779_p3);

assign tmp_185_cast1_fu_935_p1 = w2_reg_618;

assign tmp_185_cast_fu_939_p1 = w2_reg_618;

assign tmp_186_cast_fu_894_p1 = ap_reg_pp0_iter1_w_mid2_reg_3233;

assign tmp_187_mid2_cast_fu_3124_p1 = tmp_187_mid2_fu_3117_p3;

assign tmp_187_mid2_fu_3117_p3 = ((exitcond_mid_reg_4098[0:0] === 1'b1) ? h_7_fu_3111_p2 : h5_mid_fu_3053_p3);

assign tmp_188_cast_fu_961_p1 = ci_reg_630;

assign tmp_189_cast_fu_3163_p1 = ap_reg_pp1_iter1_w6_mid2_reg_4103;

assign tmp_191_fu_1319_p3 = {{ShuffleConvs_1_Downs_39_reg_3472}, {6'd0}};

assign tmp_192_fu_1353_p1 = tmp_422_reg_3477;

assign tmp_193_fu_1378_p2 = (tmp_424_fu_1370_p3 ^ 1'd1);

assign tmp_194_fu_1991_p2 = (tmp_425_fu_1967_p3 ^ 1'd1);

assign tmp_195_fu_2025_p2 = (tmp_421_reg_3592 ^ 1'd1);

assign tmp_212_cast_fu_1326_p1 = $signed(tmp_191_fu_1319_p3);

assign tmp_293_1_cast_fu_1407_p1 = $signed(tmp_293_1_fu_1400_p3);

assign tmp_293_1_fu_1400_p3 = {{ShuffleConvs_1_Downs_40_reg_3487}, {6'd0}};

assign tmp_293_2_cast_fu_1488_p1 = $signed(tmp_293_2_fu_1481_p3);

assign tmp_293_2_fu_1481_p3 = {{ShuffleConvs_1_Downs_41_reg_3502}, {6'd0}};

assign tmp_293_3_cast_fu_1569_p1 = $signed(tmp_293_3_fu_1562_p3);

assign tmp_293_3_fu_1562_p3 = {{ShuffleConvs_1_Downs_42_reg_3517}, {6'd0}};

assign tmp_293_4_cast_fu_1650_p1 = $signed(tmp_293_4_fu_1643_p3);

assign tmp_293_4_fu_1643_p3 = {{ShuffleConvs_1_Downs_43_reg_3532}, {6'd0}};

assign tmp_293_5_cast_fu_1731_p1 = $signed(tmp_293_5_fu_1724_p3);

assign tmp_293_5_fu_1724_p3 = {{ShuffleConvs_1_Downs_44_reg_3547}, {6'd0}};

assign tmp_293_6_cast_fu_1812_p1 = $signed(tmp_293_6_fu_1805_p3);

assign tmp_293_6_fu_1805_p3 = {{ShuffleConvs_1_Downs_45_reg_3562}, {6'd0}};

assign tmp_293_7_cast_fu_1893_p1 = $signed(tmp_293_7_fu_1886_p3);

assign tmp_293_7_fu_1886_p3 = {{ShuffleConvs_1_Downs_46_reg_3577}, {6'd0}};

assign tmp_297_1_fu_1434_p1 = tmp_427_reg_3492;

assign tmp_297_2_fu_1515_p1 = tmp_432_reg_3507;

assign tmp_297_3_fu_1596_p1 = tmp_437_reg_3522;

assign tmp_297_4_fu_1677_p1 = tmp_442_reg_3537;

assign tmp_297_5_fu_1758_p1 = tmp_447_reg_3552;

assign tmp_297_6_fu_1839_p1 = tmp_452_reg_3567;

assign tmp_297_7_fu_1920_p1 = tmp_457_reg_3582;

assign tmp_301_1_fu_1459_p2 = (tmp_429_fu_1451_p3 ^ 1'd1);

assign tmp_301_2_fu_1540_p2 = (tmp_434_fu_1532_p3 ^ 1'd1);

assign tmp_301_3_fu_1621_p2 = (tmp_439_fu_1613_p3 ^ 1'd1);

assign tmp_301_4_fu_1702_p2 = (tmp_444_fu_1694_p3 ^ 1'd1);

assign tmp_301_5_fu_1783_p2 = (tmp_449_fu_1775_p3 ^ 1'd1);

assign tmp_301_6_fu_1864_p2 = (tmp_454_fu_1856_p3 ^ 1'd1);

assign tmp_301_7_fu_1945_p2 = (tmp_459_fu_1937_p3 ^ 1'd1);

assign tmp_301_fu_836_p2 = (p_shl3_cast_fu_832_p1 + p_shl2_cast_fu_820_p1);

assign tmp_302_fu_745_p2 = (exitcond32_mid_fu_739_p2 | exitcond_flatten8_fu_721_p2);

assign tmp_303_fu_859_p2 = (tmp_301_fu_836_p2 + tmp_184_mid2_cast_fu_855_p1);

assign tmp_304_1_fu_2088_p2 = (tmp_430_fu_2064_p3 ^ 1'd1);

assign tmp_304_2_fu_2185_p2 = (tmp_435_fu_2161_p3 ^ 1'd1);

assign tmp_304_3_fu_2282_p2 = (tmp_440_fu_2258_p3 ^ 1'd1);

assign tmp_304_4_fu_2379_p2 = (tmp_445_fu_2355_p3 ^ 1'd1);

assign tmp_304_5_fu_2476_p2 = (tmp_450_fu_2452_p3 ^ 1'd1);

assign tmp_304_6_fu_2573_p2 = (tmp_455_fu_2549_p3 ^ 1'd1);

assign tmp_304_7_fu_2670_p2 = (tmp_460_fu_2646_p3 ^ 1'd1);

assign tmp_304_fu_888_p2 = (p_shl1_cast_fu_884_p1 + p_shl_cast_fu_870_p3);

assign tmp_305_fu_897_p2 = (tmp_304_fu_888_p2 + tmp_186_cast_fu_894_p1);

assign tmp_306_1_fu_2122_p2 = (tmp_426_reg_3629 ^ 1'd1);

assign tmp_306_2_fu_2219_p2 = (tmp_431_reg_3666 ^ 1'd1);

assign tmp_306_3_fu_2316_p2 = (tmp_436_reg_3703 ^ 1'd1);

assign tmp_306_4_fu_2413_p2 = (tmp_441_reg_3740 ^ 1'd1);

assign tmp_306_5_fu_2510_p2 = (tmp_446_reg_3777 ^ 1'd1);

assign tmp_306_6_fu_2607_p2 = (tmp_451_reg_3814 ^ 1'd1);

assign tmp_306_7_fu_2704_p2 = (tmp_456_reg_3851 ^ 1'd1);

assign tmp_306_fu_3081_p3 = {{newIndex7_mid2_v_fu_3071_p4}, {4'd0}};

assign tmp_307_fu_3093_p3 = {{newIndex7_mid2_v_fu_3071_p4}, {1'd0}};

assign tmp_308_fu_3105_p2 = (p_shl17_cast_fu_3101_p1 + p_shl16_cast_fu_3089_p1);

assign tmp_309_fu_3019_p2 = (exitcond_mid_fu_3013_p2 | exitcond_flatten10_fu_2995_p2);

assign tmp_310_fu_3128_p2 = (tmp_308_fu_3105_p2 + tmp_187_mid2_cast_fu_3124_p1);

assign tmp_311_fu_3157_p2 = (p_shl15_cast_fu_3153_p1 + p_shl14_cast_fu_3139_p3);

assign tmp_312_fu_3166_p2 = (tmp_311_fu_3157_p2 + tmp_189_cast_fu_3163_p1);

assign tmp_313_fu_965_p3 = {{ci_reg_630}, {4'd0}};

assign tmp_314_fu_977_p3 = {{ci_reg_630}, {1'd0}};

assign tmp_315_fu_989_p2 = (p_shl6_cast_fu_973_p1 + p_shl7_cast_fu_985_p1);

assign tmp_316_fu_995_p2 = (tmp_cast_reg_3283 + tmp_315_fu_989_p2);

assign tmp_317_fu_1020_p2 = (p_shl4_cast_fu_1000_p3 + p_shl5_cast_fu_1016_p1);

assign tmp_318_fu_1026_p2 = (tmp_185_cast_reg_3296 + tmp_317_fu_1020_p2);

assign tmp_319_fu_1058_p3 = {{newIndex8_fu_1048_p4}, {6'd0}};

assign tmp_320_fu_1070_p3 = {{newIndex8_fu_1048_p4}, {4'd0}};

assign tmp_321_fu_1086_p2 = (p_shl12_cast_fu_1066_p1 - p_shl13_cast_fu_1082_p1);

assign tmp_322_fu_1092_p2 = (tmp_188_cast_reg_3314 + tmp_321_fu_1086_p2);

assign tmp_323_fu_1109_p3 = {{newIndex8_fu_1048_p4}, {1'd0}};

assign tmp_324_fu_1121_p2 = (p_shl13_cast1_fu_1078_p1 + p_shl11_cast_fu_1117_p1);

assign tmp_325_fu_1127_p2 = (tmp_cast4_reg_3278 + tmp_324_fu_1121_p2);

assign tmp_326_fu_1152_p2 = (p_shl8_cast_fu_1132_p3 + p_shl9_cast_fu_1148_p1);

assign tmp_327_fu_1158_p2 = (tmp_185_cast1_reg_3291 + tmp_326_fu_1152_p2);

assign tmp_351_cast_fu_903_p1 = tmp_305_fu_897_p2;

assign tmp_360_cast_fu_3172_p1 = tmp_312_fu_3166_p2;

assign tmp_368_cast_fu_1031_p1 = tmp_318_fu_1026_p2;

assign tmp_372_cast_fu_1097_p1 = $signed(tmp_322_fu_1092_p2);

assign tmp_380_cast_fu_1169_p1 = tmp_327_reg_3372;

assign tmp_414_fu_798_p1 = tmp_mid2_v_fu_786_p3[2:0];

assign tmp_415_fu_877_p3 = {{tmp_303_reg_3258}, {1'd0}};

assign tmp_416_fu_3067_p1 = arrayNo_mid2_v_fu_3060_p3[2:0];

assign tmp_417_fu_3146_p3 = {{tmp_310_reg_4129}, {1'd0}};

assign tmp_418_fu_3205_p3 = tmp_196_fu_3184_p10[32'd7];

assign tmp_419_fu_1008_p3 = {{tmp_316_fu_995_p2}, {1'd0}};

assign tmp_420_fu_1140_p3 = {{tmp_325_fu_1127_p2}, {1'd0}};

assign tmp_423_fu_1356_p3 = p_Val2_4_fu_1330_p2[32'd13];

assign tmp_424_fu_1370_p3 = p_Val2_6_fu_1364_p2[32'd7];

assign tmp_425_fu_1967_p3 = p_Val2_4_reg_3587[32'd14];

assign tmp_428_fu_1437_p3 = p_Val2_66_1_fu_1411_p2[32'd13];

assign tmp_429_fu_1451_p3 = p_Val2_68_1_fu_1445_p2[32'd7];

assign tmp_430_fu_2064_p3 = p_Val2_66_1_reg_3624[32'd14];

assign tmp_433_fu_1518_p3 = p_Val2_66_2_fu_1492_p2[32'd13];

assign tmp_434_fu_1532_p3 = p_Val2_68_2_fu_1526_p2[32'd7];

assign tmp_435_fu_2161_p3 = p_Val2_66_2_reg_3661[32'd14];

assign tmp_438_fu_1599_p3 = p_Val2_66_3_fu_1573_p2[32'd13];

assign tmp_439_fu_1613_p3 = p_Val2_68_3_fu_1607_p2[32'd7];

assign tmp_440_fu_2258_p3 = p_Val2_66_3_reg_3698[32'd14];

assign tmp_443_fu_1680_p3 = p_Val2_66_4_fu_1654_p2[32'd13];

assign tmp_444_fu_1694_p3 = p_Val2_68_4_fu_1688_p2[32'd7];

assign tmp_445_fu_2355_p3 = p_Val2_66_4_reg_3735[32'd14];

assign tmp_448_fu_1761_p3 = p_Val2_66_5_fu_1735_p2[32'd13];

assign tmp_449_fu_1775_p3 = p_Val2_68_5_fu_1769_p2[32'd7];

assign tmp_450_fu_2452_p3 = p_Val2_66_5_reg_3772[32'd14];

assign tmp_453_fu_1842_p3 = p_Val2_66_6_fu_1816_p2[32'd13];

assign tmp_454_fu_1856_p3 = p_Val2_68_6_fu_1850_p2[32'd7];

assign tmp_455_fu_2549_p3 = p_Val2_66_6_reg_3809[32'd14];

assign tmp_458_fu_1923_p3 = p_Val2_66_7_fu_1897_p2[32'd13];

assign tmp_459_fu_1937_p3 = p_Val2_68_7_fu_1931_p2[32'd7];

assign tmp_460_fu_2646_p3 = p_Val2_66_7_reg_3846[32'd14];

assign tmp_cast4_fu_921_p1 = h1_reg_606;

assign tmp_cast_fu_925_p1 = h1_reg_606;

assign tmp_fu_812_p3 = {{newIndex5_mid2_v_fu_802_p4}, {4'd0}};

assign tmp_mid2_fu_793_p1 = tmp_mid2_v_fu_786_p3;

assign tmp_mid2_v_fu_786_p3 = ((exitcond_flatten8_reg_3222[0:0] === 1'b1) ? co_19_fu_773_p2 : co_phi_fu_564_p4);

assign tmp_s_fu_824_p3 = {{newIndex5_mid2_v_fu_802_p4}, {1'd0}};

assign underflow_1_fu_2150_p2 = (tmp_426_reg_3629 & tmp3_fu_2144_p2);

assign underflow_2_fu_2247_p2 = (tmp_431_reg_3666 & tmp5_fu_2241_p2);

assign underflow_3_fu_2344_p2 = (tmp_436_reg_3703 & tmp7_fu_2338_p2);

assign underflow_4_fu_2441_p2 = (tmp_441_reg_3740 & tmp9_fu_2435_p2);

assign underflow_5_fu_2538_p2 = (tmp_446_reg_3777 & tmp11_fu_2532_p2);

assign underflow_6_fu_2635_p2 = (tmp_451_reg_3814 & tmp13_fu_2629_p2);

assign underflow_7_fu_2732_p2 = (tmp_456_reg_3851 & tmp15_fu_2726_p2);

assign underflow_fu_2053_p2 = (tmp_421_reg_3592 & tmp1_fu_2047_p2);

assign underflow_not_1_fu_2777_p2 = (tmp4_fu_2773_p2 | p_38_i_i_1_reg_3908);

assign underflow_not_2_fu_2807_p2 = (tmp6_fu_2803_p2 | p_38_i_i_2_reg_3933);

assign underflow_not_3_fu_2837_p2 = (tmp8_fu_2833_p2 | p_38_i_i_3_reg_3958);

assign underflow_not_4_fu_2867_p2 = (tmp10_fu_2863_p2 | p_38_i_i_4_reg_3983);

assign underflow_not_5_fu_2897_p2 = (tmp12_fu_2893_p2 | p_38_i_i_5_reg_4008);

assign underflow_not_6_fu_2927_p2 = (tmp14_fu_2923_p2 | p_38_i_i_6_reg_4033);

assign underflow_not_7_fu_2957_p2 = (tmp16_fu_2953_p2 | p_38_i_i_7_reg_4058);

assign underflow_not_fu_2747_p2 = (tmp2_fu_2743_p2 | p_38_i_i_reg_3883);

assign w6_mid2_fu_3025_p3 = ((tmp_309_fu_3019_p2[0:0] === 1'b1) ? 5'd1 : w6_phi_fu_702_p4);

assign w_19_fu_865_p2 = (w_mid2_reg_3233 + 5'd1);

assign w_20_fu_1036_p2 = (w2_reg_618 + 5'd1);

assign w_21_fu_3134_p2 = (w6_mid2_reg_4103 + 5'd1);

assign w_mid2_fu_751_p3 = ((tmp_302_fu_745_p2[0:0] === 1'b1) ? 5'd1 : w_phi_fu_599_p4);

assign weight_0_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_1_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_2_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_3_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_4_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_5_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_6_V_address0 = tmp_372_cast_fu_1097_p1;

assign weight_7_V_address0 = tmp_372_cast_fu_1097_p1;

always @ (posedge ap_clk) begin
    tmp_cast4_reg_3278[7:5] <= 3'b000;
    tmp_cast_reg_3283[10:5] <= 6'b000000;
    tmp_185_cast1_reg_3291[11:5] <= 7'b0000000;
    tmp_185_cast_reg_3296[14:5] <= 10'b0000000000;
    tmp_188_cast_reg_3314[9:6] <= 4'b0000;
end

endmodule //subconv_1x1_16p_p
