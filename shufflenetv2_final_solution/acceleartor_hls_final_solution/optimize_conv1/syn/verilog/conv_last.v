// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_last (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        m_axi_weight_V_AWVALID,
        m_axi_weight_V_AWREADY,
        m_axi_weight_V_AWADDR,
        m_axi_weight_V_AWID,
        m_axi_weight_V_AWLEN,
        m_axi_weight_V_AWSIZE,
        m_axi_weight_V_AWBURST,
        m_axi_weight_V_AWLOCK,
        m_axi_weight_V_AWCACHE,
        m_axi_weight_V_AWPROT,
        m_axi_weight_V_AWQOS,
        m_axi_weight_V_AWREGION,
        m_axi_weight_V_AWUSER,
        m_axi_weight_V_WVALID,
        m_axi_weight_V_WREADY,
        m_axi_weight_V_WDATA,
        m_axi_weight_V_WSTRB,
        m_axi_weight_V_WLAST,
        m_axi_weight_V_WID,
        m_axi_weight_V_WUSER,
        m_axi_weight_V_ARVALID,
        m_axi_weight_V_ARREADY,
        m_axi_weight_V_ARADDR,
        m_axi_weight_V_ARID,
        m_axi_weight_V_ARLEN,
        m_axi_weight_V_ARSIZE,
        m_axi_weight_V_ARBURST,
        m_axi_weight_V_ARLOCK,
        m_axi_weight_V_ARCACHE,
        m_axi_weight_V_ARPROT,
        m_axi_weight_V_ARQOS,
        m_axi_weight_V_ARREGION,
        m_axi_weight_V_ARUSER,
        m_axi_weight_V_RVALID,
        m_axi_weight_V_RREADY,
        m_axi_weight_V_RDATA,
        m_axi_weight_V_RLAST,
        m_axi_weight_V_RID,
        m_axi_weight_V_RUSER,
        m_axi_weight_V_RRESP,
        m_axi_weight_V_BVALID,
        m_axi_weight_V_BREADY,
        m_axi_weight_V_BRESP,
        m_axi_weight_V_BID,
        m_axi_weight_V_BUSER,
        conv_last_weight_V9,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv_last_output_V_0_address0,
        conv_last_output_V_0_ce0,
        conv_last_output_V_0_we0,
        conv_last_output_V_0_d0,
        conv_last_output_V_0_q0,
        conv_last_output_V_1_address0,
        conv_last_output_V_1_ce0,
        conv_last_output_V_1_we0,
        conv_last_output_V_1_d0,
        conv_last_output_V_1_q0,
        conv_last_output_V_2_address0,
        conv_last_output_V_2_ce0,
        conv_last_output_V_2_we0,
        conv_last_output_V_2_d0,
        conv_last_output_V_2_q0,
        conv_last_output_V_3_address0,
        conv_last_output_V_3_ce0,
        conv_last_output_V_3_we0,
        conv_last_output_V_3_d0,
        conv_last_output_V_3_q0,
        conv_last_output_V_4_address0,
        conv_last_output_V_4_ce0,
        conv_last_output_V_4_we0,
        conv_last_output_V_4_d0,
        conv_last_output_V_4_q0,
        conv_last_output_V_5_address0,
        conv_last_output_V_5_ce0,
        conv_last_output_V_5_we0,
        conv_last_output_V_5_d0,
        conv_last_output_V_5_q0,
        conv_last_output_V_6_address0,
        conv_last_output_V_6_ce0,
        conv_last_output_V_6_we0,
        conv_last_output_V_6_d0,
        conv_last_output_V_6_q0,
        conv_last_output_V_7_address0,
        conv_last_output_V_7_ce0,
        conv_last_output_V_7_we0,
        conv_last_output_V_7_d0,
        conv_last_output_V_7_q0
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_pp0_stage0 = 21'd2;
parameter    ap_ST_fsm_state13 = 21'd4;
parameter    ap_ST_fsm_state14 = 21'd8;
parameter    ap_ST_fsm_state15 = 21'd16;
parameter    ap_ST_fsm_state16 = 21'd32;
parameter    ap_ST_fsm_state17 = 21'd64;
parameter    ap_ST_fsm_state18 = 21'd128;
parameter    ap_ST_fsm_state19 = 21'd256;
parameter    ap_ST_fsm_state20 = 21'd512;
parameter    ap_ST_fsm_state21 = 21'd1024;
parameter    ap_ST_fsm_state22 = 21'd2048;
parameter    ap_ST_fsm_state23 = 21'd4096;
parameter    ap_ST_fsm_state24 = 21'd8192;
parameter    ap_ST_fsm_state25 = 21'd16384;
parameter    ap_ST_fsm_state26 = 21'd32768;
parameter    ap_ST_fsm_state27 = 21'd65536;
parameter    ap_ST_fsm_state28 = 21'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 21'd262144;
parameter    ap_ST_fsm_pp1_stage1 = 21'd524288;
parameter    ap_ST_fsm_state33 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output   m_axi_weight_V_AWVALID;
input   m_axi_weight_V_AWREADY;
output  [31:0] m_axi_weight_V_AWADDR;
output  [0:0] m_axi_weight_V_AWID;
output  [31:0] m_axi_weight_V_AWLEN;
output  [2:0] m_axi_weight_V_AWSIZE;
output  [1:0] m_axi_weight_V_AWBURST;
output  [1:0] m_axi_weight_V_AWLOCK;
output  [3:0] m_axi_weight_V_AWCACHE;
output  [2:0] m_axi_weight_V_AWPROT;
output  [3:0] m_axi_weight_V_AWQOS;
output  [3:0] m_axi_weight_V_AWREGION;
output  [0:0] m_axi_weight_V_AWUSER;
output   m_axi_weight_V_WVALID;
input   m_axi_weight_V_WREADY;
output  [7:0] m_axi_weight_V_WDATA;
output  [0:0] m_axi_weight_V_WSTRB;
output   m_axi_weight_V_WLAST;
output  [0:0] m_axi_weight_V_WID;
output  [0:0] m_axi_weight_V_WUSER;
output   m_axi_weight_V_ARVALID;
input   m_axi_weight_V_ARREADY;
output  [31:0] m_axi_weight_V_ARADDR;
output  [0:0] m_axi_weight_V_ARID;
output  [31:0] m_axi_weight_V_ARLEN;
output  [2:0] m_axi_weight_V_ARSIZE;
output  [1:0] m_axi_weight_V_ARBURST;
output  [1:0] m_axi_weight_V_ARLOCK;
output  [3:0] m_axi_weight_V_ARCACHE;
output  [2:0] m_axi_weight_V_ARPROT;
output  [3:0] m_axi_weight_V_ARQOS;
output  [3:0] m_axi_weight_V_ARREGION;
output  [0:0] m_axi_weight_V_ARUSER;
input   m_axi_weight_V_RVALID;
output   m_axi_weight_V_RREADY;
input  [7:0] m_axi_weight_V_RDATA;
input   m_axi_weight_V_RLAST;
input  [0:0] m_axi_weight_V_RID;
input  [0:0] m_axi_weight_V_RUSER;
input  [1:0] m_axi_weight_V_RRESP;
input   m_axi_weight_V_BVALID;
output   m_axi_weight_V_BREADY;
input  [1:0] m_axi_weight_V_BRESP;
input  [0:0] m_axi_weight_V_BID;
input  [0:0] m_axi_weight_V_BUSER;
input  [31:0] conv_last_weight_V9;
output  [8:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [9:0] conv_last_output_V_0_address0;
output   conv_last_output_V_0_ce0;
output   conv_last_output_V_0_we0;
output  [7:0] conv_last_output_V_0_d0;
input  [7:0] conv_last_output_V_0_q0;
output  [9:0] conv_last_output_V_1_address0;
output   conv_last_output_V_1_ce0;
output   conv_last_output_V_1_we0;
output  [7:0] conv_last_output_V_1_d0;
input  [7:0] conv_last_output_V_1_q0;
output  [9:0] conv_last_output_V_2_address0;
output   conv_last_output_V_2_ce0;
output   conv_last_output_V_2_we0;
output  [7:0] conv_last_output_V_2_d0;
input  [7:0] conv_last_output_V_2_q0;
output  [9:0] conv_last_output_V_3_address0;
output   conv_last_output_V_3_ce0;
output   conv_last_output_V_3_we0;
output  [7:0] conv_last_output_V_3_d0;
input  [7:0] conv_last_output_V_3_q0;
output  [9:0] conv_last_output_V_4_address0;
output   conv_last_output_V_4_ce0;
output   conv_last_output_V_4_we0;
output  [7:0] conv_last_output_V_4_d0;
input  [7:0] conv_last_output_V_4_q0;
output  [9:0] conv_last_output_V_5_address0;
output   conv_last_output_V_5_ce0;
output   conv_last_output_V_5_we0;
output  [7:0] conv_last_output_V_5_d0;
input  [7:0] conv_last_output_V_5_q0;
output  [9:0] conv_last_output_V_6_address0;
output   conv_last_output_V_6_ce0;
output   conv_last_output_V_6_we0;
output  [7:0] conv_last_output_V_6_d0;
input  [7:0] conv_last_output_V_6_q0;
output  [9:0] conv_last_output_V_7_address0;
output   conv_last_output_V_7_ce0;
output   conv_last_output_V_7_we0;
output  [7:0] conv_last_output_V_7_d0;
input  [7:0] conv_last_output_V_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg m_axi_weight_V_ARVALID;
reg m_axi_weight_V_RREADY;
reg bias_V_ce0;
reg[9:0] conv_last_output_V_0_address0;
reg conv_last_output_V_0_ce0;
reg conv_last_output_V_0_we0;
reg[7:0] conv_last_output_V_0_d0;
reg[9:0] conv_last_output_V_1_address0;
reg conv_last_output_V_1_ce0;
reg conv_last_output_V_1_we0;
reg[7:0] conv_last_output_V_1_d0;
reg[9:0] conv_last_output_V_2_address0;
reg conv_last_output_V_2_ce0;
reg conv_last_output_V_2_we0;
reg[7:0] conv_last_output_V_2_d0;
reg[9:0] conv_last_output_V_3_address0;
reg conv_last_output_V_3_ce0;
reg conv_last_output_V_3_we0;
reg[7:0] conv_last_output_V_3_d0;
reg[9:0] conv_last_output_V_4_address0;
reg conv_last_output_V_4_ce0;
reg conv_last_output_V_4_we0;
reg[7:0] conv_last_output_V_4_d0;
reg[9:0] conv_last_output_V_5_address0;
reg conv_last_output_V_5_ce0;
reg conv_last_output_V_5_we0;
reg[7:0] conv_last_output_V_5_d0;
reg[9:0] conv_last_output_V_6_address0;
reg conv_last_output_V_6_ce0;
reg conv_last_output_V_6_we0;
reg[7:0] conv_last_output_V_6_d0;
reg[9:0] conv_last_output_V_7_address0;
reg conv_last_output_V_7_ce0;
reg conv_last_output_V_7_we0;
reg[7:0] conv_last_output_V_7_d0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_3393;
reg    weight_V_blk_n_R;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_3393;
reg   [16:0] indvar_flatten_reg_644;
reg   [9:0] i_reg_655;
reg   [7:0] j_reg_666;
reg   [13:0] indvar_flatten10_reg_754;
reg   [9:0] i_2_reg_765;
reg   [5:0] indvar_flatten6_reg_776;
reg   [2:0] j_2_reg_787;
reg   [2:0] k_1_reg_798;
wire  signed [32:0] sext_cast_fu_809_p1;
reg  signed [32:0] sext_cast_reg_3388;
wire   [0:0] exitcond_flatten_fu_813_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_sig_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_3393;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_3393;
wire   [16:0] indvar_flatten_next_fu_819_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] j_mid2_fu_837_p3;
reg   [7:0] j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter1_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter2_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter3_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter4_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter5_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter6_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter7_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter8_j_mid2_reg_3402;
reg   [7:0] ap_reg_pp0_iter9_j_mid2_reg_3402;
wire   [9:0] tmp_mid2_v_fu_845_p3;
reg   [9:0] tmp_mid2_v_reg_3408;
wire   [2:0] tmp_571_fu_853_p1;
reg   [2:0] tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter1_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter2_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter3_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter4_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter5_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter6_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter7_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter8_tmp_571_reg_3415;
reg   [2:0] ap_reg_pp0_iter9_tmp_571_reg_3415;
reg   [6:0] newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter1_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter2_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter3_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter4_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter5_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter6_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter7_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter8_newIndex15_mid2_v_reg_3419;
reg   [6:0] ap_reg_pp0_iter9_newIndex15_mid2_v_reg_3419;
wire   [7:0] j_3_fu_867_p2;
reg   [31:0] weight_V_addr_reg_3430;
reg   [7:0] weight_V_addr_read_reg_3436;
wire   [2:0] h_29_fu_984_p2;
reg   [2:0] h_29_reg_3451;
wire    ap_CS_fsm_state14;
wire   [9:0] tmp_cast10_fu_990_p1;
reg   [9:0] tmp_cast10_reg_3456;
wire   [0:0] exitcond22_fu_978_p2;
wire   [10:0] tmp_cast_fu_994_p1;
reg   [10:0] tmp_cast_reg_3461;
wire   [2:0] w_34_fu_1004_p2;
reg   [2:0] w_34_reg_3469;
wire    ap_CS_fsm_state15;
wire   [11:0] tmp_233_cast1_fu_1010_p1;
reg   [11:0] tmp_233_cast1_reg_3474;
wire   [0:0] exitcond24_fu_998_p2;
wire   [12:0] tmp_233_cast_fu_1014_p1;
reg   [12:0] tmp_233_cast_reg_3479;
wire   [7:0] ci_8_fu_1024_p2;
reg   [7:0] ci_8_reg_3487;
wire    ap_CS_fsm_state16;
wire   [14:0] tmp_239_cast_fu_1030_p1;
reg   [14:0] tmp_239_cast_reg_3492;
wire   [0:0] exitcond26_fu_1018_p2;
reg   [11:0] input_V_addr_reg_3497;
wire   [11:0] tmp_504_fu_1110_p2;
reg   [11:0] tmp_504_reg_3505;
wire    ap_CS_fsm_state17;
wire   [0:0] exitcond29_fu_1069_p2;
wire   [9:0] co_35_7_fu_1158_p2;
reg   [9:0] co_35_7_reg_3550;
reg   [9:0] conv_last_output_V_5_reg_3555;
wire    ap_CS_fsm_state18;
reg   [9:0] conv_last_output_V_7_reg_3560;
reg   [9:0] conv_last_output_V_6_reg_3565;
reg   [9:0] conv_last_output_V_1_reg_3570;
reg   [9:0] conv_last_output_V_0_reg_3575;
reg   [9:0] conv_last_output_V_4_reg_3580;
reg   [9:0] conv_last_output_V_3_reg_3585;
reg   [9:0] conv_last_output_V_2_reg_3590;
wire   [7:0] weight_temp_0_0_0_q0;
reg   [7:0] weight_temp_0_0_0_4_reg_3595;
reg   [7:0] input_V_load_reg_3600;
wire   [7:0] weight_temp_1_0_0_q0;
reg   [7:0] weight_temp_1_0_0_3_reg_3605;
wire   [7:0] weight_temp_2_0_0_q0;
reg   [7:0] weight_temp_2_0_0_3_reg_3610;
wire   [7:0] weight_temp_3_0_0_q0;
reg   [7:0] weight_temp_3_0_0_3_reg_3615;
wire   [7:0] weight_temp_4_0_0_q0;
reg   [7:0] weight_temp_4_0_0_3_reg_3620;
wire   [7:0] weight_temp_5_0_0_q0;
reg   [7:0] weight_temp_5_0_0_3_reg_3625;
wire   [7:0] weight_temp_6_0_0_q0;
reg   [7:0] weight_temp_6_0_0_3_reg_3630;
wire   [7:0] weight_temp_7_0_0_q0;
reg   [7:0] weight_temp_7_0_0_3_reg_3635;
wire   [15:0] p_Val2_s_fu_1181_p2;
reg   [15:0] p_Val2_s_reg_3640;
wire    ap_CS_fsm_state19;
reg   [7:0] conv_last_output_V_0_1_reg_3645;
reg   [0:0] tmp_578_reg_3650;
wire   [15:0] p_Val2_84_1_fu_1198_p2;
reg   [15:0] p_Val2_84_1_reg_3655;
reg   [7:0] conv_last_output_V_1_1_reg_3660;
reg   [0:0] tmp_583_reg_3665;
wire   [15:0] p_Val2_84_2_fu_1215_p2;
reg   [15:0] p_Val2_84_2_reg_3670;
reg   [7:0] conv_last_output_V_2_1_reg_3675;
reg   [0:0] tmp_588_reg_3680;
wire   [15:0] p_Val2_84_3_fu_1232_p2;
reg   [15:0] p_Val2_84_3_reg_3685;
reg   [7:0] conv_last_output_V_3_1_reg_3690;
reg   [0:0] tmp_593_reg_3695;
wire   [15:0] p_Val2_84_4_fu_1249_p2;
reg   [15:0] p_Val2_84_4_reg_3700;
reg   [7:0] conv_last_output_V_4_1_reg_3705;
reg   [0:0] tmp_598_reg_3710;
wire   [15:0] p_Val2_84_5_fu_1266_p2;
reg   [15:0] p_Val2_84_5_reg_3715;
reg   [7:0] conv_last_output_V_5_1_reg_3720;
reg   [0:0] tmp_603_reg_3725;
wire   [15:0] p_Val2_84_6_fu_1283_p2;
reg   [15:0] p_Val2_84_6_reg_3730;
reg   [7:0] conv_last_output_V_6_1_reg_3735;
reg   [0:0] tmp_608_reg_3740;
wire   [15:0] p_Val2_84_7_fu_1300_p2;
reg   [15:0] p_Val2_84_7_reg_3745;
reg   [7:0] conv_last_output_V_7_1_reg_3750;
reg   [0:0] tmp_613_reg_3755;
wire   [15:0] p_Val2_3_fu_1325_p2;
reg   [15:0] p_Val2_3_reg_3760;
wire    ap_CS_fsm_state20;
reg   [0:0] tmp_577_reg_3765;
wire   [7:0] p_Val2_5_fu_1359_p2;
reg   [7:0] p_Val2_5_reg_3772;
wire   [0:0] tmp_580_fu_1365_p3;
reg   [0:0] tmp_580_reg_3778;
wire   [0:0] carry_s_fu_1379_p2;
reg   [0:0] carry_s_reg_3784;
reg   [1:0] tmp_247_reg_3791;
wire   [15:0] p_Val2_85_1_fu_1406_p2;
reg   [15:0] p_Val2_85_1_reg_3797;
reg   [0:0] tmp_582_reg_3802;
wire   [7:0] p_Val2_87_1_fu_1440_p2;
reg   [7:0] p_Val2_87_1_reg_3809;
wire   [0:0] tmp_585_fu_1446_p3;
reg   [0:0] tmp_585_reg_3815;
wire   [0:0] carry_14_1_fu_1460_p2;
reg   [0:0] carry_14_1_reg_3821;
reg   [1:0] tmp_250_reg_3828;
wire   [15:0] p_Val2_85_2_fu_1487_p2;
reg   [15:0] p_Val2_85_2_reg_3834;
reg   [0:0] tmp_587_reg_3839;
wire   [7:0] p_Val2_87_2_fu_1521_p2;
reg   [7:0] p_Val2_87_2_reg_3846;
wire   [0:0] tmp_590_fu_1527_p3;
reg   [0:0] tmp_590_reg_3852;
wire   [0:0] carry_14_2_fu_1541_p2;
reg   [0:0] carry_14_2_reg_3858;
reg   [1:0] tmp_251_reg_3865;
wire   [15:0] p_Val2_85_3_fu_1568_p2;
reg   [15:0] p_Val2_85_3_reg_3871;
reg   [0:0] tmp_592_reg_3876;
wire   [7:0] p_Val2_87_3_fu_1602_p2;
reg   [7:0] p_Val2_87_3_reg_3883;
wire   [0:0] tmp_595_fu_1608_p3;
reg   [0:0] tmp_595_reg_3889;
wire   [0:0] carry_14_3_fu_1622_p2;
reg   [0:0] carry_14_3_reg_3895;
reg   [1:0] tmp_252_reg_3902;
wire   [15:0] p_Val2_85_4_fu_1649_p2;
reg   [15:0] p_Val2_85_4_reg_3908;
reg   [0:0] tmp_597_reg_3913;
wire   [7:0] p_Val2_87_4_fu_1683_p2;
reg   [7:0] p_Val2_87_4_reg_3920;
wire   [0:0] tmp_600_fu_1689_p3;
reg   [0:0] tmp_600_reg_3926;
wire   [0:0] carry_14_4_fu_1703_p2;
reg   [0:0] carry_14_4_reg_3932;
reg   [1:0] tmp_253_reg_3939;
wire   [15:0] p_Val2_85_5_fu_1730_p2;
reg   [15:0] p_Val2_85_5_reg_3945;
reg   [0:0] tmp_602_reg_3950;
wire   [7:0] p_Val2_87_5_fu_1764_p2;
reg   [7:0] p_Val2_87_5_reg_3957;
wire   [0:0] tmp_605_fu_1770_p3;
reg   [0:0] tmp_605_reg_3963;
wire   [0:0] carry_14_5_fu_1784_p2;
reg   [0:0] carry_14_5_reg_3969;
reg   [1:0] tmp_254_reg_3976;
wire   [15:0] p_Val2_85_6_fu_1811_p2;
reg   [15:0] p_Val2_85_6_reg_3982;
reg   [0:0] tmp_607_reg_3987;
wire   [7:0] p_Val2_87_6_fu_1845_p2;
reg   [7:0] p_Val2_87_6_reg_3994;
wire   [0:0] tmp_610_fu_1851_p3;
reg   [0:0] tmp_610_reg_4000;
wire   [0:0] carry_14_6_fu_1865_p2;
reg   [0:0] carry_14_6_reg_4006;
reg   [1:0] tmp_255_reg_4013;
wire   [15:0] p_Val2_85_7_fu_1892_p2;
reg   [15:0] p_Val2_85_7_reg_4019;
reg   [0:0] tmp_612_reg_4024;
wire   [7:0] p_Val2_87_7_fu_1926_p2;
reg   [7:0] p_Val2_87_7_reg_4031;
wire   [0:0] tmp_615_fu_1932_p3;
reg   [0:0] tmp_615_reg_4037;
wire   [0:0] carry_14_7_fu_1946_p2;
reg   [0:0] carry_14_7_reg_4043;
reg   [1:0] tmp_256_reg_4050;
wire   [0:0] p_38_i_i_fu_2004_p2;
reg   [0:0] p_38_i_i_reg_4056;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_249_fu_2020_p2;
reg   [0:0] tmp_249_reg_4061;
wire   [0:0] brmerge40_demorgan_i_fu_2031_p2;
reg   [0:0] brmerge40_demorgan_i_reg_4066;
wire   [0:0] underflow_fu_2048_p2;
reg   [0:0] underflow_reg_4071;
wire   [0:0] brmerge_i_i_i_fu_2053_p2;
reg   [0:0] brmerge_i_i_i_reg_4076;
wire   [0:0] p_38_i_i_1_fu_2101_p2;
reg   [0:0] p_38_i_i_1_reg_4081;
wire   [0:0] tmp_431_1_fu_2117_p2;
reg   [0:0] tmp_431_1_reg_4086;
wire   [0:0] brmerge40_demorgan_i_35_fu_2128_p2;
reg   [0:0] brmerge40_demorgan_i_35_reg_4091;
wire   [0:0] underflow_1_fu_2145_p2;
reg   [0:0] underflow_1_reg_4096;
wire   [0:0] brmerge_i_i_i_1_fu_2150_p2;
reg   [0:0] brmerge_i_i_i_1_reg_4101;
wire   [0:0] p_38_i_i_2_fu_2198_p2;
reg   [0:0] p_38_i_i_2_reg_4106;
wire   [0:0] tmp_431_2_fu_2214_p2;
reg   [0:0] tmp_431_2_reg_4111;
wire   [0:0] brmerge40_demorgan_i_29_fu_2225_p2;
reg   [0:0] brmerge40_demorgan_i_29_reg_4116;
wire   [0:0] underflow_2_fu_2242_p2;
reg   [0:0] underflow_2_reg_4121;
wire   [0:0] brmerge_i_i_i_2_fu_2247_p2;
reg   [0:0] brmerge_i_i_i_2_reg_4126;
wire   [0:0] p_38_i_i_3_fu_2295_p2;
reg   [0:0] p_38_i_i_3_reg_4131;
wire   [0:0] tmp_431_3_fu_2311_p2;
reg   [0:0] tmp_431_3_reg_4136;
wire   [0:0] brmerge40_demorgan_i_30_fu_2322_p2;
reg   [0:0] brmerge40_demorgan_i_30_reg_4141;
wire   [0:0] underflow_3_fu_2339_p2;
reg   [0:0] underflow_3_reg_4146;
wire   [0:0] brmerge_i_i_i_3_fu_2344_p2;
reg   [0:0] brmerge_i_i_i_3_reg_4151;
wire   [0:0] p_38_i_i_4_fu_2392_p2;
reg   [0:0] p_38_i_i_4_reg_4156;
wire   [0:0] tmp_431_4_fu_2408_p2;
reg   [0:0] tmp_431_4_reg_4161;
wire   [0:0] brmerge40_demorgan_i_31_fu_2419_p2;
reg   [0:0] brmerge40_demorgan_i_31_reg_4166;
wire   [0:0] underflow_4_fu_2436_p2;
reg   [0:0] underflow_4_reg_4171;
wire   [0:0] brmerge_i_i_i_4_fu_2441_p2;
reg   [0:0] brmerge_i_i_i_4_reg_4176;
wire   [0:0] p_38_i_i_5_fu_2489_p2;
reg   [0:0] p_38_i_i_5_reg_4181;
wire   [0:0] tmp_431_5_fu_2505_p2;
reg   [0:0] tmp_431_5_reg_4186;
wire   [0:0] brmerge40_demorgan_i_32_fu_2516_p2;
reg   [0:0] brmerge40_demorgan_i_32_reg_4191;
wire   [0:0] underflow_5_fu_2533_p2;
reg   [0:0] underflow_5_reg_4196;
wire   [0:0] brmerge_i_i_i_5_fu_2538_p2;
reg   [0:0] brmerge_i_i_i_5_reg_4201;
wire   [0:0] p_38_i_i_6_fu_2586_p2;
reg   [0:0] p_38_i_i_6_reg_4206;
wire   [0:0] tmp_431_6_fu_2602_p2;
reg   [0:0] tmp_431_6_reg_4211;
wire   [0:0] brmerge40_demorgan_i_33_fu_2613_p2;
reg   [0:0] brmerge40_demorgan_i_33_reg_4216;
wire   [0:0] underflow_6_fu_2630_p2;
reg   [0:0] underflow_6_reg_4221;
wire   [0:0] brmerge_i_i_i_6_fu_2635_p2;
reg   [0:0] brmerge_i_i_i_6_reg_4226;
wire   [0:0] p_38_i_i_7_fu_2683_p2;
reg   [0:0] p_38_i_i_7_reg_4231;
wire   [0:0] tmp_431_7_fu_2699_p2;
reg   [0:0] tmp_431_7_reg_4236;
wire   [0:0] brmerge40_demorgan_i_34_fu_2710_p2;
reg   [0:0] brmerge40_demorgan_i_34_reg_4241;
wire   [0:0] underflow_7_fu_2727_p2;
reg   [0:0] underflow_7_reg_4246;
wire   [0:0] brmerge_i_i_i_7_fu_2732_p2;
reg   [0:0] brmerge_i_i_i_7_reg_4251;
wire   [0:0] exitcond23_fu_2978_p2;
wire    ap_CS_fsm_state23;
wire   [9:0] i_4_fu_2984_p2;
reg   [9:0] i_4_reg_4260;
wire   [2:0] tmp_572_fu_2995_p1;
reg   [2:0] tmp_572_reg_4265;
wire   [9:0] tmp_621_cast_fu_3017_p1;
reg   [9:0] tmp_621_cast_reg_4270;
reg   [8:0] bias_V_addr_reg_4275;
wire   [2:0] j_4_fu_3027_p2;
reg   [2:0] j_4_reg_4283;
wire    ap_CS_fsm_state24;
wire   [11:0] tmp_631_cast_fu_3042_p3;
reg   [11:0] tmp_631_cast_reg_4288;
wire   [0:0] exitcond25_fu_3021_p2;
wire   [2:0] k_3_fu_3056_p2;
reg   [2:0] k_3_reg_4296;
wire    ap_CS_fsm_state25;
reg   [9:0] conv_last_output_V_5_2_reg_4301;
wire   [0:0] exitcond28_fu_3050_p2;
reg   [9:0] conv_last_output_V_7_2_reg_4306;
reg   [9:0] conv_last_output_V_6_2_reg_4311;
reg   [9:0] conv_last_output_V_1_2_reg_4316;
reg   [9:0] conv_last_output_V_0_2_reg_4321;
reg   [9:0] conv_last_output_V_4_2_reg_4326;
reg   [9:0] conv_last_output_V_3_2_reg_4331;
reg   [9:0] conv_last_output_V_2_2_reg_4336;
reg   [0:0] isneg_reg_4341;
wire    ap_CS_fsm_state26;
wire   [7:0] p_Val2_2_fu_3126_p2;
reg   [7:0] p_Val2_2_reg_4348;
reg   [0:0] newsignbit_reg_4354;
wire   [0:0] exitcond_flatten14_fu_3194_p2;
reg   [0:0] exitcond_flatten14_reg_4361;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state29_pp1_stage0_iter0;
wire    ap_block_state31_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_flag00011001;
wire   [13:0] indvar_flatten_next1_fu_3200_p2;
reg   [13:0] indvar_flatten_next1_reg_4365;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] j_2_mid_fu_3218_p3;
reg   [2:0] j_2_mid_reg_4370;
wire   [9:0] arrayNo8_mid2_v_fu_3226_p3;
reg   [9:0] arrayNo8_mid2_v_reg_4376;
wire   [2:0] tmp_573_fu_3234_p1;
reg   [2:0] tmp_573_reg_4381;
reg   [2:0] ap_reg_pp1_iter1_tmp_573_reg_4381;
reg   [6:0] newIndex18_mid2_v_reg_4386;
wire   [0:0] exitcond_mid_fu_3260_p2;
reg   [0:0] exitcond_mid_reg_4391;
wire   [2:0] k_1_mid2_fu_3272_p3;
reg   [2:0] k_1_mid2_reg_4396;
wire   [5:0] indvar_flatten_next7_fu_3286_p3;
reg   [5:0] indvar_flatten_next7_reg_4402;
wire   [2:0] tmp_242_mid2_fu_3299_p3;
reg   [2:0] tmp_242_mid2_reg_4407;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state30_pp1_stage1_iter0;
wire    ap_block_state32_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_flag00011001;
wire   [2:0] k_2_fu_3305_p2;
reg   [2:0] k_2_reg_4413;
reg   [9:0] conv_last_output_V_5_4_reg_4418;
reg   [9:0] conv_last_output_V_7_4_reg_4423;
reg   [9:0] conv_last_output_V_6_4_reg_4428;
reg   [9:0] conv_last_output_V_1_4_reg_4433;
reg   [9:0] conv_last_output_V_0_4_reg_4438;
reg   [9:0] conv_last_output_V_4_4_reg_4443;
reg   [9:0] conv_last_output_V_3_4_reg_4448;
reg   [9:0] conv_last_output_V_2_4_reg_4453;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state29;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_flag00011011;
reg   [13:0] weight_temp_0_0_0_address0;
reg    weight_temp_0_0_0_ce0;
reg    weight_temp_0_0_0_we0;
reg   [7:0] weight_temp_0_0_0_d0;
reg   [13:0] weight_temp_1_0_0_address0;
reg    weight_temp_1_0_0_ce0;
reg    weight_temp_1_0_0_we0;
reg   [13:0] weight_temp_2_0_0_address0;
reg    weight_temp_2_0_0_ce0;
reg    weight_temp_2_0_0_we0;
reg   [13:0] weight_temp_3_0_0_address0;
reg    weight_temp_3_0_0_ce0;
reg    weight_temp_3_0_0_we0;
reg   [13:0] weight_temp_4_0_0_address0;
reg    weight_temp_4_0_0_ce0;
reg    weight_temp_4_0_0_we0;
reg   [13:0] weight_temp_5_0_0_address0;
reg    weight_temp_5_0_0_ce0;
reg    weight_temp_5_0_0_we0;
reg   [13:0] weight_temp_6_0_0_address0;
reg    weight_temp_6_0_0_ce0;
reg    weight_temp_6_0_0_we0;
reg   [13:0] weight_temp_7_0_0_address0;
reg    weight_temp_7_0_0_ce0;
reg    weight_temp_7_0_0_we0;
reg   [9:0] i_phi_fu_659_p4;
reg   [2:0] h_reg_677;
wire    ap_CS_fsm_state13;
reg   [2:0] w_reg_688;
reg   [7:0] ci_reg_699;
reg   [9:0] co_reg_710;
wire    ap_CS_fsm_state22;
reg   [9:0] i_1_reg_721;
reg   [2:0] j_1_reg_732;
reg   [2:0] k_reg_743;
wire    ap_CS_fsm_state28;
reg   [13:0] indvar_flatten10_phi_fu_758_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [9:0] i_2_phi_fu_769_p4;
reg   [5:0] indvar_flatten6_phi_fu_780_p4;
reg   [2:0] j_2_phi_fu_791_p4;
reg   [2:0] k_1_phi_fu_802_p4;
wire  signed [63:0] tmp_619_cast_fu_966_p1;
wire   [63:0] tmp_637_cast_fu_1064_p1;
wire  signed [63:0] tmp_648_cast_fu_1146_p1;
wire   [63:0] tmp_644_cast_fu_1164_p1;
wire   [63:0] tmp_232_fu_2990_p1;
wire   [63:0] tmp_638_cast_fu_3071_p1;
wire   [63:0] tmp_628_cast_fu_3347_p1;
wire  signed [63:0] sum_cast_fu_923_p1;
reg    ap_reg_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_pp0_stage0_flag00001001;
wire   [7:0] this_assign_1_fu_2759_p3;
wire    ap_CS_fsm_state27;
wire   [7:0] this_assign_43_1_fu_3178_p3;
wire   [0:0] tmp_574_fu_3380_p3;
wire    ap_block_pp1_stage1_flag00000000;
wire   [7:0] this_assign_1_1_fu_2789_p3;
wire   [7:0] this_assign_1_2_fu_2819_p3;
wire   [7:0] this_assign_1_3_fu_2849_p3;
wire   [7:0] this_assign_1_4_fu_2879_p3;
wire   [7:0] this_assign_1_5_fu_2909_p3;
wire   [7:0] this_assign_1_6_fu_2939_p3;
wire   [7:0] this_assign_1_7_fu_2969_p3;
wire   [0:0] exitcond_fu_831_p2;
wire   [9:0] i_3_fu_825_p2;
wire   [17:0] tmp_fu_873_p3;
wire   [15:0] tmp_s_fu_884_p3;
wire   [18:0] p_shl2_cast_fu_880_p1;
wire   [18:0] p_shl3_cast_fu_891_p1;
wire   [18:0] tmp_486_fu_895_p2;
wire   [19:0] tmp_231_cast_fu_905_p1;
wire  signed [19:0] tmp_614_cast_fu_901_p1;
wire   [19:0] tmp_490_fu_908_p2;
wire  signed [32:0] tmp_618_cast_fu_914_p1;
wire   [32:0] sum_fu_918_p2;
wire   [12:0] tmp_488_fu_940_p3;
wire   [14:0] tmp_487_fu_933_p3;
wire   [14:0] p_shl1_cast_fu_947_p1;
wire   [14:0] tmp_231_cast1_fu_957_p1;
wire   [14:0] tmp_489_fu_951_p2;
wire   [14:0] tmp_491_fu_960_p2;
wire   [9:0] tmp_498_fu_1034_p3;
wire   [10:0] tmp_633_cast_fu_1042_p1;
wire   [10:0] tmp_499_fu_1046_p2;
wire   [12:0] tmp_636_cast_fu_1051_p3;
wire   [12:0] tmp_500_fu_1059_p2;
wire   [6:0] newIndex1_fu_1075_p4;
wire   [8:0] tmp_502_fu_1085_p3;
wire   [9:0] tmp_640_cast_fu_1093_p1;
wire   [9:0] tmp_503_fu_1097_p2;
wire   [11:0] tmp_643_cast_fu_1102_p3;
wire   [12:0] tmp_506_fu_1123_p3;
wire   [14:0] tmp_505_fu_1115_p3;
wire   [14:0] p_shl5_cast_fu_1131_p1;
wire   [14:0] tmp_507_fu_1135_p2;
wire   [14:0] tmp_508_fu_1141_p2;
wire  signed [7:0] p_Val2_s_fu_1181_p0;
wire  signed [15:0] OP2_V_fu_1178_p1;
wire  signed [7:0] p_Val2_s_fu_1181_p1;
wire  signed [7:0] p_Val2_84_1_fu_1198_p0;
wire  signed [7:0] p_Val2_84_1_fu_1198_p1;
wire  signed [7:0] p_Val2_84_2_fu_1215_p0;
wire  signed [7:0] p_Val2_84_2_fu_1215_p1;
wire  signed [7:0] p_Val2_84_3_fu_1232_p0;
wire  signed [7:0] p_Val2_84_3_fu_1232_p1;
wire  signed [7:0] p_Val2_84_4_fu_1249_p0;
wire  signed [7:0] p_Val2_84_4_fu_1249_p1;
wire  signed [7:0] p_Val2_84_5_fu_1266_p0;
wire  signed [7:0] p_Val2_84_5_fu_1266_p1;
wire  signed [7:0] p_Val2_84_6_fu_1283_p0;
wire  signed [7:0] p_Val2_84_6_fu_1283_p1;
wire  signed [7:0] p_Val2_84_7_fu_1300_p0;
wire  signed [7:0] p_Val2_84_7_fu_1300_p1;
wire   [13:0] tmp_244_fu_1314_p3;
wire  signed [15:0] tmp_267_cast_fu_1321_p1;
wire   [7:0] tmp_245_fu_1348_p1;
wire   [7:0] p_Val2_4_fu_1338_p4;
wire   [0:0] tmp_579_fu_1351_p3;
wire   [0:0] tmp_246_fu_1373_p2;
wire   [13:0] tmp_414_1_fu_1395_p3;
wire  signed [15:0] tmp_414_1_cast_fu_1402_p1;
wire   [7:0] tmp_418_1_fu_1429_p1;
wire   [7:0] p_Val2_86_1_fu_1419_p4;
wire   [0:0] tmp_584_fu_1432_p3;
wire   [0:0] tmp_424_1_fu_1454_p2;
wire   [13:0] tmp_414_2_fu_1476_p3;
wire  signed [15:0] tmp_414_2_cast_fu_1483_p1;
wire   [7:0] tmp_418_2_fu_1510_p1;
wire   [7:0] p_Val2_86_2_fu_1500_p4;
wire   [0:0] tmp_589_fu_1513_p3;
wire   [0:0] tmp_424_2_fu_1535_p2;
wire   [13:0] tmp_414_3_fu_1557_p3;
wire  signed [15:0] tmp_414_3_cast_fu_1564_p1;
wire   [7:0] tmp_418_3_fu_1591_p1;
wire   [7:0] p_Val2_86_3_fu_1581_p4;
wire   [0:0] tmp_594_fu_1594_p3;
wire   [0:0] tmp_424_3_fu_1616_p2;
wire   [13:0] tmp_414_4_fu_1638_p3;
wire  signed [15:0] tmp_414_4_cast_fu_1645_p1;
wire   [7:0] tmp_418_4_fu_1672_p1;
wire   [7:0] p_Val2_86_4_fu_1662_p4;
wire   [0:0] tmp_599_fu_1675_p3;
wire   [0:0] tmp_424_4_fu_1697_p2;
wire   [13:0] tmp_414_5_fu_1719_p3;
wire  signed [15:0] tmp_414_5_cast_fu_1726_p1;
wire   [7:0] tmp_418_5_fu_1753_p1;
wire   [7:0] p_Val2_86_5_fu_1743_p4;
wire   [0:0] tmp_604_fu_1756_p3;
wire   [0:0] tmp_424_5_fu_1778_p2;
wire   [13:0] tmp_414_6_fu_1800_p3;
wire  signed [15:0] tmp_414_6_cast_fu_1807_p1;
wire   [7:0] tmp_418_6_fu_1834_p1;
wire   [7:0] p_Val2_86_6_fu_1824_p4;
wire   [0:0] tmp_609_fu_1837_p3;
wire   [0:0] tmp_424_6_fu_1859_p2;
wire   [13:0] tmp_414_7_fu_1881_p3;
wire  signed [15:0] tmp_414_7_cast_fu_1888_p1;
wire   [7:0] tmp_418_7_fu_1915_p1;
wire   [7:0] p_Val2_86_7_fu_1905_p4;
wire   [0:0] tmp_614_fu_1918_p3;
wire   [0:0] tmp_424_7_fu_1940_p2;
wire   [0:0] Range1_all_ones_fu_1969_p2;
wire   [0:0] Range1_all_zeros_fu_1974_p2;
wire   [0:0] tmp_581_fu_1962_p3;
wire   [0:0] tmp_248_fu_1986_p2;
wire   [0:0] p_41_i_i_fu_1992_p2;
wire   [0:0] deleted_zeros_fu_1979_p3;
wire   [0:0] p_not_i_i_fu_2009_p2;
wire   [0:0] brmerge_i_i8_fu_2015_p2;
wire   [0:0] deleted_ones_fu_1997_p3;
wire   [0:0] tmp2_demorgan_fu_2036_p2;
wire   [0:0] tmp2_fu_2042_p2;
wire   [0:0] overflow_fu_2025_p2;
wire   [0:0] Range1_all_ones_1_fu_2066_p2;
wire   [0:0] Range1_all_zeros_1_fu_2071_p2;
wire   [0:0] tmp_586_fu_2059_p3;
wire   [0:0] tmp_429_1_fu_2083_p2;
wire   [0:0] p_41_i_i_1_fu_2089_p2;
wire   [0:0] deleted_zeros_1_fu_2076_p3;
wire   [0:0] p_not_i_i_1_fu_2106_p2;
wire   [0:0] brmerge_i_i8_1_fu_2112_p2;
wire   [0:0] deleted_ones_1_fu_2094_p3;
wire   [0:0] tmp4_demorgan_fu_2133_p2;
wire   [0:0] tmp4_fu_2139_p2;
wire   [0:0] overflow_1_fu_2122_p2;
wire   [0:0] Range1_all_ones_2_fu_2163_p2;
wire   [0:0] Range1_all_zeros_2_fu_2168_p2;
wire   [0:0] tmp_591_fu_2156_p3;
wire   [0:0] tmp_429_2_fu_2180_p2;
wire   [0:0] p_41_i_i_2_fu_2186_p2;
wire   [0:0] deleted_zeros_2_fu_2173_p3;
wire   [0:0] p_not_i_i_2_fu_2203_p2;
wire   [0:0] brmerge_i_i8_2_fu_2209_p2;
wire   [0:0] deleted_ones_2_fu_2191_p3;
wire   [0:0] tmp6_demorgan_fu_2230_p2;
wire   [0:0] tmp6_fu_2236_p2;
wire   [0:0] overflow_2_fu_2219_p2;
wire   [0:0] Range1_all_ones_3_fu_2260_p2;
wire   [0:0] Range1_all_zeros_3_fu_2265_p2;
wire   [0:0] tmp_596_fu_2253_p3;
wire   [0:0] tmp_429_3_fu_2277_p2;
wire   [0:0] p_41_i_i_3_fu_2283_p2;
wire   [0:0] deleted_zeros_3_fu_2270_p3;
wire   [0:0] p_not_i_i_3_fu_2300_p2;
wire   [0:0] brmerge_i_i8_3_fu_2306_p2;
wire   [0:0] deleted_ones_3_fu_2288_p3;
wire   [0:0] tmp8_demorgan_fu_2327_p2;
wire   [0:0] tmp8_fu_2333_p2;
wire   [0:0] overflow_3_fu_2316_p2;
wire   [0:0] Range1_all_ones_4_fu_2357_p2;
wire   [0:0] Range1_all_zeros_4_fu_2362_p2;
wire   [0:0] tmp_601_fu_2350_p3;
wire   [0:0] tmp_429_4_fu_2374_p2;
wire   [0:0] p_41_i_i_4_fu_2380_p2;
wire   [0:0] deleted_zeros_4_fu_2367_p3;
wire   [0:0] p_not_i_i_4_fu_2397_p2;
wire   [0:0] brmerge_i_i8_4_fu_2403_p2;
wire   [0:0] deleted_ones_4_fu_2385_p3;
wire   [0:0] tmp10_demorgan_fu_2424_p2;
wire   [0:0] tmp10_fu_2430_p2;
wire   [0:0] overflow_4_fu_2413_p2;
wire   [0:0] Range1_all_ones_5_fu_2454_p2;
wire   [0:0] Range1_all_zeros_5_fu_2459_p2;
wire   [0:0] tmp_606_fu_2447_p3;
wire   [0:0] tmp_429_5_fu_2471_p2;
wire   [0:0] p_41_i_i_5_fu_2477_p2;
wire   [0:0] deleted_zeros_5_fu_2464_p3;
wire   [0:0] p_not_i_i_5_fu_2494_p2;
wire   [0:0] brmerge_i_i8_5_fu_2500_p2;
wire   [0:0] deleted_ones_5_fu_2482_p3;
wire   [0:0] tmp12_demorgan_fu_2521_p2;
wire   [0:0] tmp12_fu_2527_p2;
wire   [0:0] overflow_5_fu_2510_p2;
wire   [0:0] Range1_all_ones_6_fu_2551_p2;
wire   [0:0] Range1_all_zeros_6_fu_2556_p2;
wire   [0:0] tmp_611_fu_2544_p3;
wire   [0:0] tmp_429_6_fu_2568_p2;
wire   [0:0] p_41_i_i_6_fu_2574_p2;
wire   [0:0] deleted_zeros_6_fu_2561_p3;
wire   [0:0] p_not_i_i_6_fu_2591_p2;
wire   [0:0] brmerge_i_i8_6_fu_2597_p2;
wire   [0:0] deleted_ones_6_fu_2579_p3;
wire   [0:0] tmp14_demorgan_fu_2618_p2;
wire   [0:0] tmp14_fu_2624_p2;
wire   [0:0] overflow_6_fu_2607_p2;
wire   [0:0] Range1_all_ones_7_fu_2648_p2;
wire   [0:0] Range1_all_zeros_7_fu_2653_p2;
wire   [0:0] tmp_616_fu_2641_p3;
wire   [0:0] tmp_429_7_fu_2665_p2;
wire   [0:0] p_41_i_i_7_fu_2671_p2;
wire   [0:0] deleted_zeros_7_fu_2658_p3;
wire   [0:0] p_not_i_i_7_fu_2688_p2;
wire   [0:0] brmerge_i_i8_7_fu_2694_p2;
wire   [0:0] deleted_ones_7_fu_2676_p3;
wire   [0:0] tmp16_demorgan_fu_2715_p2;
wire   [0:0] tmp16_fu_2721_p2;
wire   [0:0] overflow_7_fu_2704_p2;
wire   [0:0] tmp3_fu_2738_p2;
wire   [0:0] underflow_not_fu_2742_p2;
wire   [7:0] p_Val2_87_mux_fu_2747_p3;
wire   [7:0] p_Val2_1_fu_2753_p3;
wire   [0:0] tmp5_fu_2768_p2;
wire   [0:0] underflow_not_1_fu_2772_p2;
wire   [7:0] p_Val2_87_mux_1_fu_2777_p3;
wire   [7:0] p_Val2_87_1_177_fu_2783_p3;
wire   [0:0] tmp7_fu_2798_p2;
wire   [0:0] underflow_not_2_fu_2802_p2;
wire   [7:0] p_Val2_87_mux_2_fu_2807_p3;
wire   [7:0] p_Val2_87_2_178_fu_2813_p3;
wire   [0:0] tmp9_fu_2828_p2;
wire   [0:0] underflow_not_3_fu_2832_p2;
wire   [7:0] p_Val2_87_mux_3_fu_2837_p3;
wire   [7:0] p_Val2_87_3_179_fu_2843_p3;
wire   [0:0] tmp11_fu_2858_p2;
wire   [0:0] underflow_not_4_fu_2862_p2;
wire   [7:0] p_Val2_87_mux_4_fu_2867_p3;
wire   [7:0] p_Val2_87_4_180_fu_2873_p3;
wire   [0:0] tmp13_fu_2888_p2;
wire   [0:0] underflow_not_5_fu_2892_p2;
wire   [7:0] p_Val2_87_mux_5_fu_2897_p3;
wire   [7:0] p_Val2_87_5_181_fu_2903_p3;
wire   [0:0] tmp15_fu_2918_p2;
wire   [0:0] underflow_not_6_fu_2922_p2;
wire   [7:0] p_Val2_87_mux_6_fu_2927_p3;
wire   [7:0] p_Val2_87_6_182_fu_2933_p3;
wire   [0:0] tmp17_fu_2948_p2;
wire   [0:0] underflow_not_7_fu_2952_p2;
wire   [7:0] p_Val2_87_mux_7_fu_2957_p3;
wire   [7:0] p_Val2_87_7_183_fu_2963_p3;
wire   [6:0] newIndex_fu_2999_p4;
wire   [8:0] tmp_492_fu_3009_p3;
wire   [9:0] tmp_238_cast_fu_3033_p1;
wire   [9:0] tmp_497_fu_3037_p2;
wire   [11:0] tmp_240_cast_fu_3062_p1;
wire   [11:0] tmp_501_fu_3066_p2;
wire   [7:0] p_Val2_s_187_fu_3083_p10;
wire  signed [8:0] tmp_241_fu_3104_p1;
wire  signed [8:0] tmp_242_fu_3108_p1;
wire   [8:0] p_Val2_1_188_fu_3112_p2;
wire   [0:0] tmp_243_fu_3140_p2;
wire   [0:0] isneg_not_fu_3154_p2;
wire   [0:0] brmerge_i_i_fu_3150_p2;
wire   [0:0] underflow_10_fu_3145_p2;
wire   [0:0] brmerge_fu_3159_p2;
wire   [7:0] p_Val2_82_mux_fu_3164_p3;
wire   [7:0] p_Val2_s_189_fu_3171_p3;
wire   [0:0] exitcond_flatten15_fu_3212_p2;
wire   [9:0] i_5_fu_3206_p2;
wire   [0:0] exitcond27_fu_3254_p2;
wire   [0:0] not_exitcond_flatten_fu_3248_p2;
wire   [0:0] tmp_494_fu_3266_p2;
wire   [5:0] indvar_flatten6_op_fu_3280_p2;
wire   [2:0] j_5_fu_3294_p2;
wire   [8:0] tmp_493_fu_3310_p3;
wire   [9:0] tmp_623_cast_fu_3317_p1;
wire   [9:0] tmp_242_mid2_cast_fu_3321_p1;
wire   [9:0] tmp_495_fu_3324_p2;
wire   [11:0] tmp_627_cast_fu_3330_p3;
wire   [11:0] tmp_235_cast_fu_3338_p1;
wire   [11:0] tmp_496_fu_3341_p2;
wire   [7:0] tmp_236_fu_3359_p10;
wire    ap_CS_fsm_state33;
reg   [20:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_V_ARREADY = 1'b0;
end

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_0_0_0_address0),
    .ce0(weight_temp_0_0_0_ce0),
    .we0(weight_temp_0_0_0_we0),
    .d0(weight_temp_0_0_0_d0),
    .q0(weight_temp_0_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_1_0_0_address0),
    .ce0(weight_temp_1_0_0_ce0),
    .we0(weight_temp_1_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_1_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_2_0_0_address0),
    .ce0(weight_temp_2_0_0_ce0),
    .we0(weight_temp_2_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_2_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_3_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_3_0_0_address0),
    .ce0(weight_temp_3_0_0_ce0),
    .we0(weight_temp_3_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_3_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_4_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_4_0_0_address0),
    .ce0(weight_temp_4_0_0_ce0),
    .we0(weight_temp_4_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_4_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_5_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_5_0_0_address0),
    .ce0(weight_temp_5_0_0_ce0),
    .we0(weight_temp_5_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_5_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_6_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_6_0_0_address0),
    .ce0(weight_temp_6_0_0_ce0),
    .we0(weight_temp_6_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_6_0_0_q0)
);

conv_last_weight_kbM #(
    .DataWidth( 8 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
weight_temp_7_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_7_0_0_address0),
    .ce0(weight_temp_7_0_0_ce0),
    .we0(weight_temp_7_0_0_we0),
    .d0(weight_V_addr_read_reg_3436),
    .q0(weight_temp_7_0_0_q0)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U311(
    .din1(conv_last_output_V_0_q0),
    .din2(conv_last_output_V_1_q0),
    .din3(conv_last_output_V_2_q0),
    .din4(conv_last_output_V_3_q0),
    .din5(conv_last_output_V_4_q0),
    .din6(conv_last_output_V_5_q0),
    .din7(conv_last_output_V_6_q0),
    .din8(conv_last_output_V_7_q0),
    .din9(tmp_572_reg_4265),
    .dout(p_Val2_s_187_fu_3083_p10)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U312(
    .din1(conv_last_output_V_0_q0),
    .din2(conv_last_output_V_1_q0),
    .din3(conv_last_output_V_2_q0),
    .din4(conv_last_output_V_3_q0),
    .din5(conv_last_output_V_4_q0),
    .din6(conv_last_output_V_5_q0),
    .din7(conv_last_output_V_6_q0),
    .din8(conv_last_output_V_7_q0),
    .din9(ap_reg_pp1_iter1_tmp_573_reg_4381),
    .dout(tmp_236_fu_3359_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state29))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_condition_pp1_exit_iter0_state29) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state29 ^ 1'b1);
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3393))) begin
            if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
            end else if (((1'b1 == m_axi_weight_V_ARREADY) & (ap_block_pp0_stage0_flag00001001 == 1'b0))) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond29_fu_1069_p2 == 1'd1))) begin
        ci_reg_699 <= ci_8_reg_3487;
    end else if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond24_fu_998_p2))) begin
        ci_reg_699 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond26_fu_1018_p2))) begin
        co_reg_710 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        co_reg_710 <= co_35_7_reg_3550;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        h_reg_677 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond24_fu_998_p2 == 1'd1))) begin
        h_reg_677 <= h_29_reg_3451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond22_fu_978_p2 == 1'd1))) begin
        i_1_reg_721 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state24) & (exitcond25_fu_3021_p2 == 1'd1))) begin
        i_1_reg_721 <= i_4_reg_4260;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
        i_2_reg_765 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_2_reg_765 <= arrayNo8_mid2_v_reg_4376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_3393) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_655 <= tmp_mid2_v_reg_3408;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_655 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
        indvar_flatten10_reg_754 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten10_reg_754 <= indvar_flatten_next1_reg_4365;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
        indvar_flatten6_reg_776 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        indvar_flatten6_reg_776 <= indvar_flatten_next7_reg_4402;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_813_p2))) begin
        indvar_flatten_reg_644 <= indvar_flatten_next_fu_819_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_644 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (exitcond28_fu_3050_p2 == 1'd1))) begin
        j_1_reg_732 <= j_4_reg_4283;
    end else if (((1'b1 == ap_CS_fsm_state23) & (1'd0 == exitcond23_fu_2978_p2))) begin
        j_1_reg_732 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
        j_2_reg_787 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_2_reg_787 <= tmp_242_mid2_reg_4407;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_813_p2))) begin
        j_reg_666 <= j_3_fu_867_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_666 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
        k_1_reg_798 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        k_1_reg_798 <= k_2_reg_4413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd0 == exitcond25_fu_3021_p2))) begin
        k_reg_743 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        k_reg_743 <= k_3_reg_4296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond26_fu_1018_p2 == 1'd1))) begin
        w_reg_688 <= w_34_reg_3469;
    end else if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond22_fu_978_p2))) begin
        w_reg_688 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_3393 <= exitcond_flatten_reg_3393;
        ap_reg_pp0_iter1_j_mid2_reg_3402 <= j_mid2_reg_3402;
        ap_reg_pp0_iter1_newIndex15_mid2_v_reg_3419 <= newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter1_tmp_571_reg_3415 <= tmp_571_reg_3415;
        exitcond_flatten_reg_3393 <= exitcond_flatten_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter1_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter2_j_mid2_reg_3402 <= ap_reg_pp0_iter1_j_mid2_reg_3402;
        ap_reg_pp0_iter2_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter1_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter2_tmp_571_reg_3415 <= ap_reg_pp0_iter1_tmp_571_reg_3415;
        ap_reg_pp0_iter3_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter2_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter3_j_mid2_reg_3402 <= ap_reg_pp0_iter2_j_mid2_reg_3402;
        ap_reg_pp0_iter3_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter2_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter3_tmp_571_reg_3415 <= ap_reg_pp0_iter2_tmp_571_reg_3415;
        ap_reg_pp0_iter4_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter3_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter4_j_mid2_reg_3402 <= ap_reg_pp0_iter3_j_mid2_reg_3402;
        ap_reg_pp0_iter4_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter3_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter4_tmp_571_reg_3415 <= ap_reg_pp0_iter3_tmp_571_reg_3415;
        ap_reg_pp0_iter5_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter4_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter5_j_mid2_reg_3402 <= ap_reg_pp0_iter4_j_mid2_reg_3402;
        ap_reg_pp0_iter5_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter4_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter5_tmp_571_reg_3415 <= ap_reg_pp0_iter4_tmp_571_reg_3415;
        ap_reg_pp0_iter6_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter5_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter6_j_mid2_reg_3402 <= ap_reg_pp0_iter5_j_mid2_reg_3402;
        ap_reg_pp0_iter6_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter5_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter6_tmp_571_reg_3415 <= ap_reg_pp0_iter5_tmp_571_reg_3415;
        ap_reg_pp0_iter7_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter6_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter7_j_mid2_reg_3402 <= ap_reg_pp0_iter6_j_mid2_reg_3402;
        ap_reg_pp0_iter7_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter6_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter7_tmp_571_reg_3415 <= ap_reg_pp0_iter6_tmp_571_reg_3415;
        ap_reg_pp0_iter8_exitcond_flatten_reg_3393 <= ap_reg_pp0_iter7_exitcond_flatten_reg_3393;
        ap_reg_pp0_iter8_j_mid2_reg_3402 <= ap_reg_pp0_iter7_j_mid2_reg_3402;
        ap_reg_pp0_iter8_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter7_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter8_tmp_571_reg_3415 <= ap_reg_pp0_iter7_tmp_571_reg_3415;
        ap_reg_pp0_iter9_j_mid2_reg_3402 <= ap_reg_pp0_iter8_j_mid2_reg_3402;
        ap_reg_pp0_iter9_newIndex15_mid2_v_reg_3419 <= ap_reg_pp0_iter8_newIndex15_mid2_v_reg_3419;
        ap_reg_pp0_iter9_tmp_571_reg_3415 <= ap_reg_pp0_iter8_tmp_571_reg_3415;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_tmp_573_reg_4381 <= tmp_573_reg_4381;
        exitcond_flatten14_reg_4361 <= exitcond_flatten14_fu_3194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten14_fu_3194_p2))) begin
        arrayNo8_mid2_v_reg_4376 <= arrayNo8_mid2_v_fu_3226_p3;
        indvar_flatten_next7_reg_4402 <= indvar_flatten_next7_fu_3286_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (1'd0 == exitcond23_fu_2978_p2))) begin
        bias_V_addr_reg_4275 <= tmp_232_fu_2990_p1;
        tmp_572_reg_4265 <= tmp_572_fu_2995_p1;
        tmp_621_cast_reg_4270[8 : 2] <= tmp_621_cast_fu_3017_p1[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        brmerge40_demorgan_i_29_reg_4116 <= brmerge40_demorgan_i_29_fu_2225_p2;
        brmerge40_demorgan_i_30_reg_4141 <= brmerge40_demorgan_i_30_fu_2322_p2;
        brmerge40_demorgan_i_31_reg_4166 <= brmerge40_demorgan_i_31_fu_2419_p2;
        brmerge40_demorgan_i_32_reg_4191 <= brmerge40_demorgan_i_32_fu_2516_p2;
        brmerge40_demorgan_i_33_reg_4216 <= brmerge40_demorgan_i_33_fu_2613_p2;
        brmerge40_demorgan_i_34_reg_4241 <= brmerge40_demorgan_i_34_fu_2710_p2;
        brmerge40_demorgan_i_35_reg_4091 <= brmerge40_demorgan_i_35_fu_2128_p2;
        brmerge40_demorgan_i_reg_4066 <= brmerge40_demorgan_i_fu_2031_p2;
        brmerge_i_i_i_1_reg_4101 <= brmerge_i_i_i_1_fu_2150_p2;
        brmerge_i_i_i_2_reg_4126 <= brmerge_i_i_i_2_fu_2247_p2;
        brmerge_i_i_i_3_reg_4151 <= brmerge_i_i_i_3_fu_2344_p2;
        brmerge_i_i_i_4_reg_4176 <= brmerge_i_i_i_4_fu_2441_p2;
        brmerge_i_i_i_5_reg_4201 <= brmerge_i_i_i_5_fu_2538_p2;
        brmerge_i_i_i_6_reg_4226 <= brmerge_i_i_i_6_fu_2635_p2;
        brmerge_i_i_i_7_reg_4251 <= brmerge_i_i_i_7_fu_2732_p2;
        brmerge_i_i_i_reg_4076 <= brmerge_i_i_i_fu_2053_p2;
        p_38_i_i_1_reg_4081 <= p_38_i_i_1_fu_2101_p2;
        p_38_i_i_2_reg_4106 <= p_38_i_i_2_fu_2198_p2;
        p_38_i_i_3_reg_4131 <= p_38_i_i_3_fu_2295_p2;
        p_38_i_i_4_reg_4156 <= p_38_i_i_4_fu_2392_p2;
        p_38_i_i_5_reg_4181 <= p_38_i_i_5_fu_2489_p2;
        p_38_i_i_6_reg_4206 <= p_38_i_i_6_fu_2586_p2;
        p_38_i_i_7_reg_4231 <= p_38_i_i_7_fu_2683_p2;
        p_38_i_i_reg_4056 <= p_38_i_i_fu_2004_p2;
        tmp_249_reg_4061 <= tmp_249_fu_2020_p2;
        tmp_431_1_reg_4086 <= tmp_431_1_fu_2117_p2;
        tmp_431_2_reg_4111 <= tmp_431_2_fu_2214_p2;
        tmp_431_3_reg_4136 <= tmp_431_3_fu_2311_p2;
        tmp_431_4_reg_4161 <= tmp_431_4_fu_2408_p2;
        tmp_431_5_reg_4186 <= tmp_431_5_fu_2505_p2;
        tmp_431_6_reg_4211 <= tmp_431_6_fu_2602_p2;
        tmp_431_7_reg_4236 <= tmp_431_7_fu_2699_p2;
        underflow_1_reg_4096 <= underflow_1_fu_2145_p2;
        underflow_2_reg_4121 <= underflow_2_fu_2242_p2;
        underflow_3_reg_4146 <= underflow_3_fu_2339_p2;
        underflow_4_reg_4171 <= underflow_4_fu_2436_p2;
        underflow_5_reg_4196 <= underflow_5_fu_2533_p2;
        underflow_6_reg_4221 <= underflow_6_fu_2630_p2;
        underflow_7_reg_4246 <= underflow_7_fu_2727_p2;
        underflow_reg_4071 <= underflow_fu_2048_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        carry_14_1_reg_3821 <= carry_14_1_fu_1460_p2;
        carry_14_2_reg_3858 <= carry_14_2_fu_1541_p2;
        carry_14_3_reg_3895 <= carry_14_3_fu_1622_p2;
        carry_14_4_reg_3932 <= carry_14_4_fu_1703_p2;
        carry_14_5_reg_3969 <= carry_14_5_fu_1784_p2;
        carry_14_6_reg_4006 <= carry_14_6_fu_1865_p2;
        carry_14_7_reg_4043 <= carry_14_7_fu_1946_p2;
        carry_s_reg_3784 <= carry_s_fu_1379_p2;
        p_Val2_3_reg_3760 <= p_Val2_3_fu_1325_p2;
        p_Val2_5_reg_3772 <= p_Val2_5_fu_1359_p2;
        p_Val2_85_1_reg_3797 <= p_Val2_85_1_fu_1406_p2;
        p_Val2_85_2_reg_3834 <= p_Val2_85_2_fu_1487_p2;
        p_Val2_85_3_reg_3871 <= p_Val2_85_3_fu_1568_p2;
        p_Val2_85_4_reg_3908 <= p_Val2_85_4_fu_1649_p2;
        p_Val2_85_5_reg_3945 <= p_Val2_85_5_fu_1730_p2;
        p_Val2_85_6_reg_3982 <= p_Val2_85_6_fu_1811_p2;
        p_Val2_85_7_reg_4019 <= p_Val2_85_7_fu_1892_p2;
        p_Val2_87_1_reg_3809 <= p_Val2_87_1_fu_1440_p2;
        p_Val2_87_2_reg_3846 <= p_Val2_87_2_fu_1521_p2;
        p_Val2_87_3_reg_3883 <= p_Val2_87_3_fu_1602_p2;
        p_Val2_87_4_reg_3920 <= p_Val2_87_4_fu_1683_p2;
        p_Val2_87_5_reg_3957 <= p_Val2_87_5_fu_1764_p2;
        p_Val2_87_6_reg_3994 <= p_Val2_87_6_fu_1845_p2;
        p_Val2_87_7_reg_4031 <= p_Val2_87_7_fu_1926_p2;
        tmp_247_reg_3791 <= {{p_Val2_3_fu_1325_p2[15:14]}};
        tmp_250_reg_3828 <= {{p_Val2_85_1_fu_1406_p2[15:14]}};
        tmp_251_reg_3865 <= {{p_Val2_85_2_fu_1487_p2[15:14]}};
        tmp_252_reg_3902 <= {{p_Val2_85_3_fu_1568_p2[15:14]}};
        tmp_253_reg_3939 <= {{p_Val2_85_4_fu_1649_p2[15:14]}};
        tmp_254_reg_3976 <= {{p_Val2_85_5_fu_1730_p2[15:14]}};
        tmp_255_reg_4013 <= {{p_Val2_85_6_fu_1811_p2[15:14]}};
        tmp_256_reg_4050 <= {{p_Val2_85_7_fu_1892_p2[15:14]}};
        tmp_577_reg_3765 <= p_Val2_3_fu_1325_p2[32'd15];
        tmp_580_reg_3778 <= p_Val2_5_fu_1359_p2[32'd7];
        tmp_582_reg_3802 <= p_Val2_85_1_fu_1406_p2[32'd15];
        tmp_585_reg_3815 <= p_Val2_87_1_fu_1440_p2[32'd7];
        tmp_587_reg_3839 <= p_Val2_85_2_fu_1487_p2[32'd15];
        tmp_590_reg_3852 <= p_Val2_87_2_fu_1521_p2[32'd7];
        tmp_592_reg_3876 <= p_Val2_85_3_fu_1568_p2[32'd15];
        tmp_595_reg_3889 <= p_Val2_87_3_fu_1602_p2[32'd7];
        tmp_597_reg_3913 <= p_Val2_85_4_fu_1649_p2[32'd15];
        tmp_600_reg_3926 <= p_Val2_87_4_fu_1683_p2[32'd7];
        tmp_602_reg_3950 <= p_Val2_85_5_fu_1730_p2[32'd15];
        tmp_605_reg_3963 <= p_Val2_87_5_fu_1764_p2[32'd7];
        tmp_607_reg_3987 <= p_Val2_85_6_fu_1811_p2[32'd15];
        tmp_610_reg_4000 <= p_Val2_87_6_fu_1845_p2[32'd7];
        tmp_612_reg_4024 <= p_Val2_85_7_fu_1892_p2[32'd15];
        tmp_615_reg_4037 <= p_Val2_87_7_fu_1926_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ci_8_reg_3487 <= ci_8_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'd0 == exitcond29_fu_1069_p2))) begin
        co_35_7_reg_3550 <= co_35_7_fu_1158_p2;
        tmp_504_reg_3505 <= tmp_504_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv_last_output_V_0_1_reg_3645 <= conv_last_output_V_0_q0;
        conv_last_output_V_1_1_reg_3660 <= conv_last_output_V_1_q0;
        conv_last_output_V_2_1_reg_3675 <= conv_last_output_V_2_q0;
        conv_last_output_V_3_1_reg_3690 <= conv_last_output_V_3_q0;
        conv_last_output_V_4_1_reg_3705 <= conv_last_output_V_4_q0;
        conv_last_output_V_5_1_reg_3720 <= conv_last_output_V_5_q0;
        conv_last_output_V_6_1_reg_3735 <= conv_last_output_V_6_q0;
        conv_last_output_V_7_1_reg_3750 <= conv_last_output_V_7_q0;
        p_Val2_84_1_reg_3655 <= p_Val2_84_1_fu_1198_p2;
        p_Val2_84_2_reg_3670 <= p_Val2_84_2_fu_1215_p2;
        p_Val2_84_3_reg_3685 <= p_Val2_84_3_fu_1232_p2;
        p_Val2_84_4_reg_3700 <= p_Val2_84_4_fu_1249_p2;
        p_Val2_84_5_reg_3715 <= p_Val2_84_5_fu_1266_p2;
        p_Val2_84_6_reg_3730 <= p_Val2_84_6_fu_1283_p2;
        p_Val2_84_7_reg_3745 <= p_Val2_84_7_fu_1300_p2;
        p_Val2_s_reg_3640 <= p_Val2_s_fu_1181_p2;
        tmp_578_reg_3650 <= p_Val2_s_fu_1181_p2[32'd5];
        tmp_583_reg_3665 <= p_Val2_84_1_fu_1198_p2[32'd5];
        tmp_588_reg_3680 <= p_Val2_84_2_fu_1215_p2[32'd5];
        tmp_593_reg_3695 <= p_Val2_84_3_fu_1232_p2[32'd5];
        tmp_598_reg_3710 <= p_Val2_84_4_fu_1249_p2[32'd5];
        tmp_603_reg_3725 <= p_Val2_84_5_fu_1266_p2[32'd5];
        tmp_608_reg_3740 <= p_Val2_84_6_fu_1283_p2[32'd5];
        tmp_613_reg_3755 <= p_Val2_84_7_fu_1300_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd0 == exitcond28_fu_3050_p2))) begin
        conv_last_output_V_0_2_reg_4321 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_1_2_reg_4316 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_2_2_reg_4336 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_3_2_reg_4331 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_4_2_reg_4326 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_5_2_reg_4301 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_6_2_reg_4311 <= tmp_638_cast_fu_3071_p1;
        conv_last_output_V_7_2_reg_4306 <= tmp_638_cast_fu_3071_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361))) begin
        conv_last_output_V_0_4_reg_4438 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_1_4_reg_4433 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_2_4_reg_4453 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_3_4_reg_4448 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_4_4_reg_4443 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_5_4_reg_4418 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_6_4_reg_4428 <= tmp_628_cast_fu_3347_p1;
        conv_last_output_V_7_4_reg_4423 <= tmp_628_cast_fu_3347_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_0_reg_3575 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_1_reg_3570 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_2_reg_3590 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_3_reg_3585 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_4_reg_3580 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_5_reg_3555 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_6_reg_3565 <= tmp_644_cast_fu_1164_p1;
        conv_last_output_V_7_reg_3560 <= tmp_644_cast_fu_1164_p1;
        input_V_load_reg_3600 <= input_V_q0;
        weight_temp_0_0_0_4_reg_3595 <= weight_temp_0_0_0_q0;
        weight_temp_1_0_0_3_reg_3605 <= weight_temp_1_0_0_q0;
        weight_temp_2_0_0_3_reg_3610 <= weight_temp_2_0_0_q0;
        weight_temp_3_0_0_3_reg_3615 <= weight_temp_3_0_0_q0;
        weight_temp_4_0_0_3_reg_3620 <= weight_temp_4_0_0_q0;
        weight_temp_5_0_0_3_reg_3625 <= weight_temp_5_0_0_q0;
        weight_temp_6_0_0_3_reg_3630 <= weight_temp_6_0_0_q0;
        weight_temp_7_0_0_3_reg_3635 <= weight_temp_7_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_fu_3194_p2))) begin
        exitcond_mid_reg_4391 <= exitcond_mid_fu_3260_p2;
        j_2_mid_reg_4370 <= j_2_mid_fu_3218_p3;
        k_1_mid2_reg_4396 <= k_1_mid2_fu_3272_p3;
        newIndex18_mid2_v_reg_4386 <= {{arrayNo8_mid2_v_fu_3226_p3[9:3]}};
        tmp_573_reg_4381 <= tmp_573_fu_3234_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h_29_reg_3451 <= h_29_fu_984_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_4_reg_4260 <= i_4_fu_2984_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        indvar_flatten_next1_reg_4365 <= indvar_flatten_next1_fu_3200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd0 == exitcond26_fu_1018_p2))) begin
        input_V_addr_reg_3497 <= tmp_637_cast_fu_1064_p1;
        tmp_239_cast_reg_3492[7 : 0] <= tmp_239_cast_fu_1030_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        isneg_reg_4341 <= p_Val2_1_188_fu_3112_p2[32'd8];
        newsignbit_reg_4354 <= p_Val2_2_fu_3126_p2[32'd7];
        p_Val2_2_reg_4348 <= p_Val2_2_fu_3126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_4_reg_4283 <= j_4_fu_3027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_813_p2))) begin
        j_mid2_reg_3402 <= j_mid2_fu_837_p3;
        newIndex15_mid2_v_reg_3419 <= {{tmp_mid2_v_fu_845_p3[9:3]}};
        tmp_571_reg_3415 <= tmp_571_fu_853_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten14_reg_4361))) begin
        k_2_reg_4413 <= k_2_fu_3305_p2;
        tmp_242_mid2_reg_4407 <= tmp_242_mid2_fu_3299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        k_3_reg_4296 <= k_3_fu_3056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sext_cast_reg_3388 <= sext_cast_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'd0 == exitcond24_fu_998_p2))) begin
        tmp_233_cast1_reg_3474[2 : 0] <= tmp_233_cast1_fu_1010_p1[2 : 0];
        tmp_233_cast_reg_3479[2 : 0] <= tmp_233_cast_fu_1014_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd0 == exitcond25_fu_3021_p2))) begin
        tmp_631_cast_reg_4288[11 : 2] <= tmp_631_cast_fu_3042_p3[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd0 == exitcond22_fu_978_p2))) begin
        tmp_cast10_reg_3456[2 : 0] <= tmp_cast10_fu_990_p1[2 : 0];
        tmp_cast_reg_3461[2 : 0] <= tmp_cast_fu_994_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_813_p2))) begin
        tmp_mid2_v_reg_3408 <= tmp_mid2_v_fu_845_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        w_34_reg_3469 <= w_34_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        weight_V_addr_read_reg_3436 <= m_axi_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_3393))) begin
        weight_V_addr_reg_3430 <= sum_cast_fu_923_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_813_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten14_fu_3194_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state29 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state29 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state33))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_4_reg_4438;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_2_reg_4321;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_0_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_0_address0 = conv_last_output_V_0_reg_3575;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_0_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_0_ce0 = 1'b1;
    end else begin
        conv_last_output_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_0_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_0_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_0_d0 = this_assign_1_fu_2759_p3;
    end else begin
        conv_last_output_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (3'd0 == tmp_572_reg_4265)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (3'd0 == ap_reg_pp1_iter1_tmp_573_reg_4381)))) begin
        conv_last_output_V_0_we0 = 1'b1;
    end else begin
        conv_last_output_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_4_reg_4433;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_2_reg_4316;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_1_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_1_address0 = conv_last_output_V_1_reg_3570;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_1_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_1_ce0 = 1'b1;
    end else begin
        conv_last_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_1_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_1_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_1_d0 = this_assign_1_1_fu_2789_p3;
    end else begin
        conv_last_output_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd1)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd1)))) begin
        conv_last_output_V_1_we0 = 1'b1;
    end else begin
        conv_last_output_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_4_reg_4453;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_2_reg_4336;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_2_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_2_address0 = conv_last_output_V_2_reg_3590;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_2_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_2_ce0 = 1'b1;
    end else begin
        conv_last_output_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_2_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_2_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_2_d0 = this_assign_1_2_fu_2819_p3;
    end else begin
        conv_last_output_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd2)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd2)))) begin
        conv_last_output_V_2_we0 = 1'b1;
    end else begin
        conv_last_output_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_4_reg_4448;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_2_reg_4331;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_3_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_3_address0 = conv_last_output_V_3_reg_3585;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_3_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_3_ce0 = 1'b1;
    end else begin
        conv_last_output_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_3_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_3_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_3_d0 = this_assign_1_3_fu_2849_p3;
    end else begin
        conv_last_output_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd3)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd3)))) begin
        conv_last_output_V_3_we0 = 1'b1;
    end else begin
        conv_last_output_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_4_reg_4443;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_2_reg_4326;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_4_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_4_address0 = conv_last_output_V_4_reg_3580;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_4_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_4_ce0 = 1'b1;
    end else begin
        conv_last_output_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_4_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_4_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_4_d0 = this_assign_1_4_fu_2879_p3;
    end else begin
        conv_last_output_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd4)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd4)))) begin
        conv_last_output_V_4_we0 = 1'b1;
    end else begin
        conv_last_output_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_4_reg_4418;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_2_reg_4301;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_5_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_5_address0 = conv_last_output_V_5_reg_3555;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_5_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_5_ce0 = 1'b1;
    end else begin
        conv_last_output_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_5_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_5_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_5_d0 = this_assign_1_5_fu_2909_p3;
    end else begin
        conv_last_output_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd5)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd5)))) begin
        conv_last_output_V_5_we0 = 1'b1;
    end else begin
        conv_last_output_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_4_reg_4428;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_2_reg_4311;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_6_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_6_address0 = conv_last_output_V_6_reg_3565;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_6_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_6_ce0 = 1'b1;
    end else begin
        conv_last_output_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_6_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_6_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_6_d0 = this_assign_1_6_fu_2939_p3;
    end else begin
        conv_last_output_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd6)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd6)))) begin
        conv_last_output_V_6_we0 = 1'b1;
    end else begin
        conv_last_output_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_4_reg_4423;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_address0 = tmp_628_cast_fu_3347_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_2_reg_4306;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_last_output_V_7_address0 = tmp_638_cast_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_7_address0 = conv_last_output_V_7_reg_3560;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_last_output_V_7_address0 = tmp_644_cast_fu_1164_p1;
    end else begin
        conv_last_output_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1)))) begin
        conv_last_output_V_7_ce0 = 1'b1;
    end else begin
        conv_last_output_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        conv_last_output_V_7_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_last_output_V_7_d0 = this_assign_43_1_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        conv_last_output_V_7_d0 = this_assign_1_7_fu_2969_p3;
    end else begin
        conv_last_output_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state27) & (tmp_572_reg_4265 == 3'd7)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == tmp_574_fu_3380_p3) & (ap_reg_pp1_iter1_tmp_573_reg_4381 == 3'd7)))) begin
        conv_last_output_V_7_we0 = 1'b1;
    end else begin
        conv_last_output_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_2_phi_fu_769_p4 = arrayNo8_mid2_v_reg_4376;
    end else begin
        i_2_phi_fu_769_p4 = i_2_reg_765;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond_flatten_reg_3393) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_659_p4 = tmp_mid2_v_reg_3408;
    end else begin
        i_phi_fu_659_p4 = i_reg_655;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten10_phi_fu_758_p4 = indvar_flatten_next1_reg_4365;
    end else begin
        indvar_flatten10_phi_fu_758_p4 = indvar_flatten10_reg_754;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten6_phi_fu_780_p4 = indvar_flatten_next7_reg_4402;
    end else begin
        indvar_flatten6_phi_fu_780_p4 = indvar_flatten6_reg_776;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_2_phi_fu_791_p4 = tmp_242_mid2_reg_4407;
    end else begin
        j_2_phi_fu_791_p4 = j_2_reg_787;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten14_reg_4361) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        k_1_phi_fu_802_p4 = k_2_reg_4413;
    end else begin
        k_1_phi_fu_802_p4 = k_1_reg_798;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3393) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY))) begin
        m_axi_weight_V_ARVALID = 1'b1;
    end else begin
        m_axi_weight_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        m_axi_weight_V_RREADY = 1'b1;
    end else begin
        m_axi_weight_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3393))) begin
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY;
    end else begin
        weight_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393))) begin
        weight_V_blk_n_R = m_axi_weight_V_RVALID;
    end else begin
        weight_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_0_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_0_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_0_0_address0 = 64'd0;
    end else begin
        weight_temp_0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_0_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_0_0_0_d0 = weight_V_addr_read_reg_3436;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_0_0_d0 = 8'd0;
    end else begin
        weight_temp_0_0_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (3'd0 == ap_reg_pp0_iter9_tmp_571_reg_3415)))) begin
        weight_temp_0_0_0_we0 = 1'b1;
    end else begin
        weight_temp_0_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_1_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_1_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_1_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd1))) begin
        weight_temp_1_0_0_we0 = 1'b1;
    end else begin
        weight_temp_1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_2_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_2_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_2_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_2_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd2))) begin
        weight_temp_2_0_0_we0 = 1'b1;
    end else begin
        weight_temp_2_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_3_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_3_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_3_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_3_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd3))) begin
        weight_temp_3_0_0_we0 = 1'b1;
    end else begin
        weight_temp_3_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_4_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_4_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_4_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_4_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_4_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd4))) begin
        weight_temp_4_0_0_we0 = 1'b1;
    end else begin
        weight_temp_4_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_5_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_5_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_5_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_5_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_5_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd5))) begin
        weight_temp_5_0_0_we0 = 1'b1;
    end else begin
        weight_temp_5_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_6_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_6_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_6_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_6_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_6_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd6))) begin
        weight_temp_6_0_0_we0 = 1'b1;
    end else begin
        weight_temp_6_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_temp_7_0_0_address0 = tmp_648_cast_fu_1146_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        weight_temp_7_0_0_address0 = tmp_619_cast_fu_966_p1;
    end else begin
        weight_temp_7_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10)))) begin
        weight_temp_7_0_0_ce0 = 1'b1;
    end else begin
        weight_temp_7_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter9_tmp_571_reg_3415 == 3'd7))) begin
        weight_temp_7_0_0_we0 = 1'b1;
    end else begin
        weight_temp_7_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_813_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_813_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond22_fu_978_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond24_fu_998_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond26_fu_1018_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond29_fu_1069_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (exitcond23_fu_2978_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (exitcond25_fu_3021_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (exitcond28_fu_3050_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten14_fu_3194_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten14_fu_3194_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (((ap_block_pp1_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_1178_p1 = $signed(input_V_load_reg_3600);

assign Range1_all_ones_1_fu_2066_p2 = ((tmp_250_reg_3828 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_2163_p2 = ((tmp_251_reg_3865 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_2260_p2 = ((tmp_252_reg_3902 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_2357_p2 = ((tmp_253_reg_3939 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2454_p2 = ((tmp_254_reg_3976 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2551_p2 = ((tmp_255_reg_4013 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2648_p2 = ((tmp_256_reg_4050 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1969_p2 = ((tmp_247_reg_3791 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_2071_p2 = ((tmp_250_reg_3828 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2168_p2 = ((tmp_251_reg_3865 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_2265_p2 = ((tmp_252_reg_3902 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2362_p2 = ((tmp_253_reg_3939 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2459_p2 = ((tmp_254_reg_3976 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2556_p2 = ((tmp_255_reg_4013 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_2653_p2 = ((tmp_256_reg_4050 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1974_p2 = ((tmp_247_reg_3791 == 2'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd20];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (1'b0 == m_axi_weight_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_block_state4_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (1'b0 == m_axi_weight_V_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_block_state4_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & (1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (1'b0 == m_axi_weight_V_RVALID)));
end

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter9 = ((1'd0 == ap_reg_pp0_iter8_exitcond_flatten_reg_3393) & (1'b0 == m_axi_weight_V_RVALID));
end

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_3393) & (1'b0 == ap_sig_ioackin_m_axi_weight_V_ARREADY));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign arrayNo8_mid2_v_fu_3226_p3 = ((exitcond_flatten15_fu_3212_p2[0:0] === 1'b1) ? i_5_fu_3206_p2 : i_2_phi_fu_769_p4);

assign bias_V_address0 = bias_V_addr_reg_4275;

assign brmerge40_demorgan_i_29_fu_2225_p2 = (tmp_590_reg_3852 & deleted_ones_2_fu_2191_p3);

assign brmerge40_demorgan_i_30_fu_2322_p2 = (tmp_595_reg_3889 & deleted_ones_3_fu_2288_p3);

assign brmerge40_demorgan_i_31_fu_2419_p2 = (tmp_600_reg_3926 & deleted_ones_4_fu_2385_p3);

assign brmerge40_demorgan_i_32_fu_2516_p2 = (tmp_605_reg_3963 & deleted_ones_5_fu_2482_p3);

assign brmerge40_demorgan_i_33_fu_2613_p2 = (tmp_610_reg_4000 & deleted_ones_6_fu_2579_p3);

assign brmerge40_demorgan_i_34_fu_2710_p2 = (tmp_615_reg_4037 & deleted_ones_7_fu_2676_p3);

assign brmerge40_demorgan_i_35_fu_2128_p2 = (tmp_585_reg_3815 & deleted_ones_1_fu_2094_p3);

assign brmerge40_demorgan_i_fu_2031_p2 = (tmp_580_reg_3778 & deleted_ones_fu_1997_p3);

assign brmerge_fu_3159_p2 = (newsignbit_reg_4354 | isneg_not_fu_3154_p2);

assign brmerge_i_i8_1_fu_2112_p2 = (tmp_585_reg_3815 | p_not_i_i_1_fu_2106_p2);

assign brmerge_i_i8_2_fu_2209_p2 = (tmp_590_reg_3852 | p_not_i_i_2_fu_2203_p2);

assign brmerge_i_i8_3_fu_2306_p2 = (tmp_595_reg_3889 | p_not_i_i_3_fu_2300_p2);

assign brmerge_i_i8_4_fu_2403_p2 = (tmp_600_reg_3926 | p_not_i_i_4_fu_2397_p2);

assign brmerge_i_i8_5_fu_2500_p2 = (tmp_605_reg_3963 | p_not_i_i_5_fu_2494_p2);

assign brmerge_i_i8_6_fu_2597_p2 = (tmp_610_reg_4000 | p_not_i_i_6_fu_2591_p2);

assign brmerge_i_i8_7_fu_2694_p2 = (tmp_615_reg_4037 | p_not_i_i_7_fu_2688_p2);

assign brmerge_i_i8_fu_2015_p2 = (tmp_580_reg_3778 | p_not_i_i_fu_2009_p2);

assign brmerge_i_i_fu_3150_p2 = (isneg_reg_4341 ^ newsignbit_reg_4354);

assign brmerge_i_i_i_1_fu_2150_p2 = (underflow_1_fu_2145_p2 | overflow_1_fu_2122_p2);

assign brmerge_i_i_i_2_fu_2247_p2 = (underflow_2_fu_2242_p2 | overflow_2_fu_2219_p2);

assign brmerge_i_i_i_3_fu_2344_p2 = (underflow_3_fu_2339_p2 | overflow_3_fu_2316_p2);

assign brmerge_i_i_i_4_fu_2441_p2 = (underflow_4_fu_2436_p2 | overflow_4_fu_2413_p2);

assign brmerge_i_i_i_5_fu_2538_p2 = (underflow_5_fu_2533_p2 | overflow_5_fu_2510_p2);

assign brmerge_i_i_i_6_fu_2635_p2 = (underflow_6_fu_2630_p2 | overflow_6_fu_2607_p2);

assign brmerge_i_i_i_7_fu_2732_p2 = (underflow_7_fu_2727_p2 | overflow_7_fu_2704_p2);

assign brmerge_i_i_i_fu_2053_p2 = (underflow_fu_2048_p2 | overflow_fu_2025_p2);

assign carry_14_1_fu_1460_p2 = (tmp_584_fu_1432_p3 & tmp_424_1_fu_1454_p2);

assign carry_14_2_fu_1541_p2 = (tmp_589_fu_1513_p3 & tmp_424_2_fu_1535_p2);

assign carry_14_3_fu_1622_p2 = (tmp_594_fu_1594_p3 & tmp_424_3_fu_1616_p2);

assign carry_14_4_fu_1703_p2 = (tmp_599_fu_1675_p3 & tmp_424_4_fu_1697_p2);

assign carry_14_5_fu_1784_p2 = (tmp_604_fu_1756_p3 & tmp_424_5_fu_1778_p2);

assign carry_14_6_fu_1865_p2 = (tmp_609_fu_1837_p3 & tmp_424_6_fu_1859_p2);

assign carry_14_7_fu_1946_p2 = (tmp_614_fu_1918_p3 & tmp_424_7_fu_1940_p2);

assign carry_s_fu_1379_p2 = (tmp_579_fu_1351_p3 & tmp_246_fu_1373_p2);

assign ci_8_fu_1024_p2 = (ci_reg_699 + 8'd1);

assign co_35_7_fu_1158_p2 = (co_reg_710 + 10'd8);

assign deleted_ones_1_fu_2094_p3 = ((carry_14_1_reg_3821[0:0] === 1'b1) ? p_41_i_i_1_fu_2089_p2 : Range1_all_ones_1_fu_2066_p2);

assign deleted_ones_2_fu_2191_p3 = ((carry_14_2_reg_3858[0:0] === 1'b1) ? p_41_i_i_2_fu_2186_p2 : Range1_all_ones_2_fu_2163_p2);

assign deleted_ones_3_fu_2288_p3 = ((carry_14_3_reg_3895[0:0] === 1'b1) ? p_41_i_i_3_fu_2283_p2 : Range1_all_ones_3_fu_2260_p2);

assign deleted_ones_4_fu_2385_p3 = ((carry_14_4_reg_3932[0:0] === 1'b1) ? p_41_i_i_4_fu_2380_p2 : Range1_all_ones_4_fu_2357_p2);

assign deleted_ones_5_fu_2482_p3 = ((carry_14_5_reg_3969[0:0] === 1'b1) ? p_41_i_i_5_fu_2477_p2 : Range1_all_ones_5_fu_2454_p2);

assign deleted_ones_6_fu_2579_p3 = ((carry_14_6_reg_4006[0:0] === 1'b1) ? p_41_i_i_6_fu_2574_p2 : Range1_all_ones_6_fu_2551_p2);

assign deleted_ones_7_fu_2676_p3 = ((carry_14_7_reg_4043[0:0] === 1'b1) ? p_41_i_i_7_fu_2671_p2 : Range1_all_ones_7_fu_2648_p2);

assign deleted_ones_fu_1997_p3 = ((carry_s_reg_3784[0:0] === 1'b1) ? p_41_i_i_fu_1992_p2 : Range1_all_ones_fu_1969_p2);

assign deleted_zeros_1_fu_2076_p3 = ((carry_14_1_reg_3821[0:0] === 1'b1) ? Range1_all_ones_1_fu_2066_p2 : Range1_all_zeros_1_fu_2071_p2);

assign deleted_zeros_2_fu_2173_p3 = ((carry_14_2_reg_3858[0:0] === 1'b1) ? Range1_all_ones_2_fu_2163_p2 : Range1_all_zeros_2_fu_2168_p2);

assign deleted_zeros_3_fu_2270_p3 = ((carry_14_3_reg_3895[0:0] === 1'b1) ? Range1_all_ones_3_fu_2260_p2 : Range1_all_zeros_3_fu_2265_p2);

assign deleted_zeros_4_fu_2367_p3 = ((carry_14_4_reg_3932[0:0] === 1'b1) ? Range1_all_ones_4_fu_2357_p2 : Range1_all_zeros_4_fu_2362_p2);

assign deleted_zeros_5_fu_2464_p3 = ((carry_14_5_reg_3969[0:0] === 1'b1) ? Range1_all_ones_5_fu_2454_p2 : Range1_all_zeros_5_fu_2459_p2);

assign deleted_zeros_6_fu_2561_p3 = ((carry_14_6_reg_4006[0:0] === 1'b1) ? Range1_all_ones_6_fu_2551_p2 : Range1_all_zeros_6_fu_2556_p2);

assign deleted_zeros_7_fu_2658_p3 = ((carry_14_7_reg_4043[0:0] === 1'b1) ? Range1_all_ones_7_fu_2648_p2 : Range1_all_zeros_7_fu_2653_p2);

assign deleted_zeros_fu_1979_p3 = ((carry_s_reg_3784[0:0] === 1'b1) ? Range1_all_ones_fu_1969_p2 : Range1_all_zeros_fu_1974_p2);

assign exitcond22_fu_978_p2 = ((h_reg_677 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond23_fu_2978_p2 = ((i_1_reg_721 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond24_fu_998_p2 = ((w_reg_688 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond25_fu_3021_p2 = ((j_1_reg_732 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond26_fu_1018_p2 = ((ci_reg_699 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond27_fu_3254_p2 = ((k_1_phi_fu_802_p4 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond28_fu_3050_p2 = ((k_reg_743 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond29_fu_1069_p2 = ((co_reg_710 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond_flatten14_fu_3194_p2 = ((indvar_flatten10_phi_fu_758_p4 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond_flatten15_fu_3212_p2 = ((indvar_flatten6_phi_fu_780_p4 == 6'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_813_p2 = ((indvar_flatten_reg_644 == 17'd98304) ? 1'b1 : 1'b0);

assign exitcond_fu_831_p2 = ((j_reg_666 == 8'd192) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_3260_p2 = (exitcond27_fu_3254_p2 & not_exitcond_flatten_fu_3248_p2);

assign h_29_fu_984_p2 = (h_reg_677 + 3'd1);

assign i_3_fu_825_p2 = (10'd1 + i_phi_fu_659_p4);

assign i_4_fu_2984_p2 = (i_1_reg_721 + 10'd1);

assign i_5_fu_3206_p2 = (10'd1 + i_2_phi_fu_769_p4);

assign indvar_flatten6_op_fu_3280_p2 = (indvar_flatten6_phi_fu_780_p4 + 6'd1);

assign indvar_flatten_next1_fu_3200_p2 = (indvar_flatten10_phi_fu_758_p4 + 14'd1);

assign indvar_flatten_next7_fu_3286_p3 = ((exitcond_flatten15_fu_3212_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten6_op_fu_3280_p2);

assign indvar_flatten_next_fu_819_p2 = (indvar_flatten_reg_644 + 17'd1);

assign input_V_address0 = input_V_addr_reg_3497;

assign isneg_not_fu_3154_p2 = (isneg_reg_4341 ^ 1'd1);

assign j_2_mid_fu_3218_p3 = ((exitcond_flatten15_fu_3212_p2[0:0] === 1'b1) ? 3'd0 : j_2_phi_fu_791_p4);

assign j_3_fu_867_p2 = (j_mid2_fu_837_p3 + 8'd1);

assign j_4_fu_3027_p2 = (j_1_reg_732 + 3'd1);

assign j_5_fu_3294_p2 = (3'd1 + j_2_mid_reg_4370);

assign j_mid2_fu_837_p3 = ((exitcond_fu_831_p2[0:0] === 1'b1) ? 8'd0 : j_reg_666);

assign k_1_mid2_fu_3272_p3 = ((tmp_494_fu_3266_p2[0:0] === 1'b1) ? 3'd0 : k_1_phi_fu_802_p4);

assign k_2_fu_3305_p2 = (k_1_mid2_reg_4396 + 3'd1);

assign k_3_fu_3056_p2 = (k_reg_743 + 3'd1);

assign m_axi_weight_V_ARADDR = weight_V_addr_reg_3430;

assign m_axi_weight_V_ARBURST = 2'd0;

assign m_axi_weight_V_ARCACHE = 4'd0;

assign m_axi_weight_V_ARID = 1'd0;

assign m_axi_weight_V_ARLEN = 32'd1;

assign m_axi_weight_V_ARLOCK = 2'd0;

assign m_axi_weight_V_ARPROT = 3'd0;

assign m_axi_weight_V_ARQOS = 4'd0;

assign m_axi_weight_V_ARREGION = 4'd0;

assign m_axi_weight_V_ARSIZE = 3'd0;

assign m_axi_weight_V_ARUSER = 1'd0;

assign m_axi_weight_V_AWADDR = 32'd0;

assign m_axi_weight_V_AWBURST = 2'd0;

assign m_axi_weight_V_AWCACHE = 4'd0;

assign m_axi_weight_V_AWID = 1'd0;

assign m_axi_weight_V_AWLEN = 32'd0;

assign m_axi_weight_V_AWLOCK = 2'd0;

assign m_axi_weight_V_AWPROT = 3'd0;

assign m_axi_weight_V_AWQOS = 4'd0;

assign m_axi_weight_V_AWREGION = 4'd0;

assign m_axi_weight_V_AWSIZE = 3'd0;

assign m_axi_weight_V_AWUSER = 1'd0;

assign m_axi_weight_V_AWVALID = 1'b0;

assign m_axi_weight_V_BREADY = 1'b0;

assign m_axi_weight_V_WDATA = 8'd0;

assign m_axi_weight_V_WID = 1'd0;

assign m_axi_weight_V_WLAST = 1'b0;

assign m_axi_weight_V_WSTRB = 1'd0;

assign m_axi_weight_V_WUSER = 1'd0;

assign m_axi_weight_V_WVALID = 1'b0;

assign newIndex1_fu_1075_p4 = {{co_reg_710[9:3]}};

assign newIndex_fu_2999_p4 = {{i_1_reg_721[9:3]}};

assign not_exitcond_flatten_fu_3248_p2 = (exitcond_flatten15_fu_3212_p2 ^ 1'd1);

assign overflow_1_fu_2122_p2 = (brmerge_i_i8_1_fu_2112_p2 & tmp_431_1_fu_2117_p2);

assign overflow_2_fu_2219_p2 = (brmerge_i_i8_2_fu_2209_p2 & tmp_431_2_fu_2214_p2);

assign overflow_3_fu_2316_p2 = (brmerge_i_i8_3_fu_2306_p2 & tmp_431_3_fu_2311_p2);

assign overflow_4_fu_2413_p2 = (brmerge_i_i8_4_fu_2403_p2 & tmp_431_4_fu_2408_p2);

assign overflow_5_fu_2510_p2 = (brmerge_i_i8_5_fu_2500_p2 & tmp_431_5_fu_2505_p2);

assign overflow_6_fu_2607_p2 = (brmerge_i_i8_6_fu_2597_p2 & tmp_431_6_fu_2602_p2);

assign overflow_7_fu_2704_p2 = (brmerge_i_i8_7_fu_2694_p2 & tmp_431_7_fu_2699_p2);

assign overflow_fu_2025_p2 = (brmerge_i_i8_fu_2015_p2 & tmp_249_fu_2020_p2);

assign p_38_i_i_1_fu_2101_p2 = (carry_14_1_reg_3821 & Range1_all_ones_1_fu_2066_p2);

assign p_38_i_i_2_fu_2198_p2 = (carry_14_2_reg_3858 & Range1_all_ones_2_fu_2163_p2);

assign p_38_i_i_3_fu_2295_p2 = (carry_14_3_reg_3895 & Range1_all_ones_3_fu_2260_p2);

assign p_38_i_i_4_fu_2392_p2 = (carry_14_4_reg_3932 & Range1_all_ones_4_fu_2357_p2);

assign p_38_i_i_5_fu_2489_p2 = (carry_14_5_reg_3969 & Range1_all_ones_5_fu_2454_p2);

assign p_38_i_i_6_fu_2586_p2 = (carry_14_6_reg_4006 & Range1_all_ones_6_fu_2551_p2);

assign p_38_i_i_7_fu_2683_p2 = (carry_14_7_reg_4043 & Range1_all_ones_7_fu_2648_p2);

assign p_38_i_i_fu_2004_p2 = (carry_s_reg_3784 & Range1_all_ones_fu_1969_p2);

assign p_41_i_i_1_fu_2089_p2 = (tmp_582_reg_3802 & tmp_429_1_fu_2083_p2);

assign p_41_i_i_2_fu_2186_p2 = (tmp_587_reg_3839 & tmp_429_2_fu_2180_p2);

assign p_41_i_i_3_fu_2283_p2 = (tmp_592_reg_3876 & tmp_429_3_fu_2277_p2);

assign p_41_i_i_4_fu_2380_p2 = (tmp_597_reg_3913 & tmp_429_4_fu_2374_p2);

assign p_41_i_i_5_fu_2477_p2 = (tmp_602_reg_3950 & tmp_429_5_fu_2471_p2);

assign p_41_i_i_6_fu_2574_p2 = (tmp_607_reg_3987 & tmp_429_6_fu_2568_p2);

assign p_41_i_i_7_fu_2671_p2 = (tmp_612_reg_4024 & tmp_429_7_fu_2665_p2);

assign p_41_i_i_fu_1992_p2 = (tmp_577_reg_3765 & tmp_248_fu_1986_p2);

assign p_Val2_1_188_fu_3112_p2 = ($signed(tmp_241_fu_3104_p1) + $signed(tmp_242_fu_3108_p1));

assign p_Val2_1_fu_2753_p3 = ((underflow_reg_4071[0:0] === 1'b1) ? 8'd128 : p_Val2_5_reg_3772);

assign p_Val2_2_fu_3126_p2 = (p_Val2_s_187_fu_3083_p10 + bias_V_q0);

assign p_Val2_3_fu_1325_p2 = ($signed(p_Val2_s_reg_3640) + $signed(tmp_267_cast_fu_1321_p1));

assign p_Val2_4_fu_1338_p4 = {{p_Val2_3_fu_1325_p2[13:6]}};

assign p_Val2_5_fu_1359_p2 = (tmp_245_fu_1348_p1 + p_Val2_4_fu_1338_p4);

assign p_Val2_82_mux_fu_3164_p3 = ((brmerge_i_i_fu_3150_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_2_reg_4348);

assign p_Val2_84_1_fu_1198_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_1_fu_1198_p1 = weight_temp_1_0_0_3_reg_3605;

assign p_Val2_84_1_fu_1198_p2 = ($signed(p_Val2_84_1_fu_1198_p0) * $signed(p_Val2_84_1_fu_1198_p1));

assign p_Val2_84_2_fu_1215_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_2_fu_1215_p1 = weight_temp_2_0_0_3_reg_3610;

assign p_Val2_84_2_fu_1215_p2 = ($signed(p_Val2_84_2_fu_1215_p0) * $signed(p_Val2_84_2_fu_1215_p1));

assign p_Val2_84_3_fu_1232_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_3_fu_1232_p1 = weight_temp_3_0_0_3_reg_3615;

assign p_Val2_84_3_fu_1232_p2 = ($signed(p_Val2_84_3_fu_1232_p0) * $signed(p_Val2_84_3_fu_1232_p1));

assign p_Val2_84_4_fu_1249_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_4_fu_1249_p1 = weight_temp_4_0_0_3_reg_3620;

assign p_Val2_84_4_fu_1249_p2 = ($signed(p_Val2_84_4_fu_1249_p0) * $signed(p_Val2_84_4_fu_1249_p1));

assign p_Val2_84_5_fu_1266_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_5_fu_1266_p1 = weight_temp_5_0_0_3_reg_3625;

assign p_Val2_84_5_fu_1266_p2 = ($signed(p_Val2_84_5_fu_1266_p0) * $signed(p_Val2_84_5_fu_1266_p1));

assign p_Val2_84_6_fu_1283_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_6_fu_1283_p1 = weight_temp_6_0_0_3_reg_3630;

assign p_Val2_84_6_fu_1283_p2 = ($signed(p_Val2_84_6_fu_1283_p0) * $signed(p_Val2_84_6_fu_1283_p1));

assign p_Val2_84_7_fu_1300_p0 = OP2_V_fu_1178_p1;

assign p_Val2_84_7_fu_1300_p1 = weight_temp_7_0_0_3_reg_3635;

assign p_Val2_84_7_fu_1300_p2 = ($signed(p_Val2_84_7_fu_1300_p0) * $signed(p_Val2_84_7_fu_1300_p1));

assign p_Val2_85_1_fu_1406_p2 = ($signed(p_Val2_84_1_reg_3655) + $signed(tmp_414_1_cast_fu_1402_p1));

assign p_Val2_85_2_fu_1487_p2 = ($signed(p_Val2_84_2_reg_3670) + $signed(tmp_414_2_cast_fu_1483_p1));

assign p_Val2_85_3_fu_1568_p2 = ($signed(p_Val2_84_3_reg_3685) + $signed(tmp_414_3_cast_fu_1564_p1));

assign p_Val2_85_4_fu_1649_p2 = ($signed(p_Val2_84_4_reg_3700) + $signed(tmp_414_4_cast_fu_1645_p1));

assign p_Val2_85_5_fu_1730_p2 = ($signed(p_Val2_84_5_reg_3715) + $signed(tmp_414_5_cast_fu_1726_p1));

assign p_Val2_85_6_fu_1811_p2 = ($signed(p_Val2_84_6_reg_3730) + $signed(tmp_414_6_cast_fu_1807_p1));

assign p_Val2_85_7_fu_1892_p2 = ($signed(p_Val2_84_7_reg_3745) + $signed(tmp_414_7_cast_fu_1888_p1));

assign p_Val2_86_1_fu_1419_p4 = {{p_Val2_85_1_fu_1406_p2[13:6]}};

assign p_Val2_86_2_fu_1500_p4 = {{p_Val2_85_2_fu_1487_p2[13:6]}};

assign p_Val2_86_3_fu_1581_p4 = {{p_Val2_85_3_fu_1568_p2[13:6]}};

assign p_Val2_86_4_fu_1662_p4 = {{p_Val2_85_4_fu_1649_p2[13:6]}};

assign p_Val2_86_5_fu_1743_p4 = {{p_Val2_85_5_fu_1730_p2[13:6]}};

assign p_Val2_86_6_fu_1824_p4 = {{p_Val2_85_6_fu_1811_p2[13:6]}};

assign p_Val2_86_7_fu_1905_p4 = {{p_Val2_85_7_fu_1892_p2[13:6]}};

assign p_Val2_87_1_177_fu_2783_p3 = ((underflow_1_reg_4096[0:0] === 1'b1) ? 8'd128 : p_Val2_87_1_reg_3809);

assign p_Val2_87_1_fu_1440_p2 = (tmp_418_1_fu_1429_p1 + p_Val2_86_1_fu_1419_p4);

assign p_Val2_87_2_178_fu_2813_p3 = ((underflow_2_reg_4121[0:0] === 1'b1) ? 8'd128 : p_Val2_87_2_reg_3846);

assign p_Val2_87_2_fu_1521_p2 = (tmp_418_2_fu_1510_p1 + p_Val2_86_2_fu_1500_p4);

assign p_Val2_87_3_179_fu_2843_p3 = ((underflow_3_reg_4146[0:0] === 1'b1) ? 8'd128 : p_Val2_87_3_reg_3883);

assign p_Val2_87_3_fu_1602_p2 = (tmp_418_3_fu_1591_p1 + p_Val2_86_3_fu_1581_p4);

assign p_Val2_87_4_180_fu_2873_p3 = ((underflow_4_reg_4171[0:0] === 1'b1) ? 8'd128 : p_Val2_87_4_reg_3920);

assign p_Val2_87_4_fu_1683_p2 = (tmp_418_4_fu_1672_p1 + p_Val2_86_4_fu_1662_p4);

assign p_Val2_87_5_181_fu_2903_p3 = ((underflow_5_reg_4196[0:0] === 1'b1) ? 8'd128 : p_Val2_87_5_reg_3957);

assign p_Val2_87_5_fu_1764_p2 = (tmp_418_5_fu_1753_p1 + p_Val2_86_5_fu_1743_p4);

assign p_Val2_87_6_182_fu_2933_p3 = ((underflow_6_reg_4221[0:0] === 1'b1) ? 8'd128 : p_Val2_87_6_reg_3994);

assign p_Val2_87_6_fu_1845_p2 = (tmp_418_6_fu_1834_p1 + p_Val2_86_6_fu_1824_p4);

assign p_Val2_87_7_183_fu_2963_p3 = ((underflow_7_reg_4246[0:0] === 1'b1) ? 8'd128 : p_Val2_87_7_reg_4031);

assign p_Val2_87_7_fu_1926_p2 = (tmp_418_7_fu_1915_p1 + p_Val2_86_7_fu_1905_p4);

assign p_Val2_87_mux_1_fu_2777_p3 = ((brmerge_i_i_i_1_reg_4101[0:0] === 1'b1) ? 8'd127 : p_Val2_87_1_reg_3809);

assign p_Val2_87_mux_2_fu_2807_p3 = ((brmerge_i_i_i_2_reg_4126[0:0] === 1'b1) ? 8'd127 : p_Val2_87_2_reg_3846);

assign p_Val2_87_mux_3_fu_2837_p3 = ((brmerge_i_i_i_3_reg_4151[0:0] === 1'b1) ? 8'd127 : p_Val2_87_3_reg_3883);

assign p_Val2_87_mux_4_fu_2867_p3 = ((brmerge_i_i_i_4_reg_4176[0:0] === 1'b1) ? 8'd127 : p_Val2_87_4_reg_3920);

assign p_Val2_87_mux_5_fu_2897_p3 = ((brmerge_i_i_i_5_reg_4201[0:0] === 1'b1) ? 8'd127 : p_Val2_87_5_reg_3957);

assign p_Val2_87_mux_6_fu_2927_p3 = ((brmerge_i_i_i_6_reg_4226[0:0] === 1'b1) ? 8'd127 : p_Val2_87_6_reg_3994);

assign p_Val2_87_mux_7_fu_2957_p3 = ((brmerge_i_i_i_7_reg_4251[0:0] === 1'b1) ? 8'd127 : p_Val2_87_7_reg_4031);

assign p_Val2_87_mux_fu_2747_p3 = ((brmerge_i_i_i_reg_4076[0:0] === 1'b1) ? 8'd127 : p_Val2_5_reg_3772);

assign p_Val2_s_189_fu_3171_p3 = ((underflow_10_fu_3145_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_2_reg_4348);

assign p_Val2_s_fu_1181_p0 = OP2_V_fu_1178_p1;

assign p_Val2_s_fu_1181_p1 = weight_temp_0_0_0_4_reg_3595;

assign p_Val2_s_fu_1181_p2 = ($signed(p_Val2_s_fu_1181_p0) * $signed(p_Val2_s_fu_1181_p1));

assign p_not_i_i_1_fu_2106_p2 = (deleted_zeros_1_fu_2076_p3 ^ 1'd1);

assign p_not_i_i_2_fu_2203_p2 = (deleted_zeros_2_fu_2173_p3 ^ 1'd1);

assign p_not_i_i_3_fu_2300_p2 = (deleted_zeros_3_fu_2270_p3 ^ 1'd1);

assign p_not_i_i_4_fu_2397_p2 = (deleted_zeros_4_fu_2367_p3 ^ 1'd1);

assign p_not_i_i_5_fu_2494_p2 = (deleted_zeros_5_fu_2464_p3 ^ 1'd1);

assign p_not_i_i_6_fu_2591_p2 = (deleted_zeros_6_fu_2561_p3 ^ 1'd1);

assign p_not_i_i_7_fu_2688_p2 = (deleted_zeros_7_fu_2658_p3 ^ 1'd1);

assign p_not_i_i_fu_2009_p2 = (deleted_zeros_fu_1979_p3 ^ 1'd1);

assign p_shl1_cast_fu_947_p1 = tmp_488_fu_940_p3;

assign p_shl2_cast_fu_880_p1 = tmp_fu_873_p3;

assign p_shl3_cast_fu_891_p1 = tmp_s_fu_884_p3;

assign p_shl5_cast_fu_1131_p1 = tmp_506_fu_1123_p3;

assign sext_cast_fu_809_p1 = $signed(conv_last_weight_V9);

assign sum_cast_fu_923_p1 = $signed(sum_fu_918_p2);

assign sum_fu_918_p2 = ($signed(tmp_618_cast_fu_914_p1) + $signed(sext_cast_reg_3388));

assign this_assign_1_1_fu_2789_p3 = ((underflow_not_1_fu_2772_p2[0:0] === 1'b1) ? p_Val2_87_mux_1_fu_2777_p3 : p_Val2_87_1_177_fu_2783_p3);

assign this_assign_1_2_fu_2819_p3 = ((underflow_not_2_fu_2802_p2[0:0] === 1'b1) ? p_Val2_87_mux_2_fu_2807_p3 : p_Val2_87_2_178_fu_2813_p3);

assign this_assign_1_3_fu_2849_p3 = ((underflow_not_3_fu_2832_p2[0:0] === 1'b1) ? p_Val2_87_mux_3_fu_2837_p3 : p_Val2_87_3_179_fu_2843_p3);

assign this_assign_1_4_fu_2879_p3 = ((underflow_not_4_fu_2862_p2[0:0] === 1'b1) ? p_Val2_87_mux_4_fu_2867_p3 : p_Val2_87_4_180_fu_2873_p3);

assign this_assign_1_5_fu_2909_p3 = ((underflow_not_5_fu_2892_p2[0:0] === 1'b1) ? p_Val2_87_mux_5_fu_2897_p3 : p_Val2_87_5_181_fu_2903_p3);

assign this_assign_1_6_fu_2939_p3 = ((underflow_not_6_fu_2922_p2[0:0] === 1'b1) ? p_Val2_87_mux_6_fu_2927_p3 : p_Val2_87_6_182_fu_2933_p3);

assign this_assign_1_7_fu_2969_p3 = ((underflow_not_7_fu_2952_p2[0:0] === 1'b1) ? p_Val2_87_mux_7_fu_2957_p3 : p_Val2_87_7_183_fu_2963_p3);

assign this_assign_1_fu_2759_p3 = ((underflow_not_fu_2742_p2[0:0] === 1'b1) ? p_Val2_87_mux_fu_2747_p3 : p_Val2_1_fu_2753_p3);

assign this_assign_43_1_fu_3178_p3 = ((brmerge_fu_3159_p2[0:0] === 1'b1) ? p_Val2_82_mux_fu_3164_p3 : p_Val2_s_189_fu_3171_p3);

assign tmp10_demorgan_fu_2424_p2 = (p_38_i_i_4_fu_2392_p2 | brmerge40_demorgan_i_31_fu_2419_p2);

assign tmp10_fu_2430_p2 = (tmp10_demorgan_fu_2424_p2 ^ 1'd1);

assign tmp11_fu_2858_p2 = (brmerge40_demorgan_i_31_reg_4166 | tmp_431_4_reg_4161);

assign tmp12_demorgan_fu_2521_p2 = (p_38_i_i_5_fu_2489_p2 | brmerge40_demorgan_i_32_fu_2516_p2);

assign tmp12_fu_2527_p2 = (tmp12_demorgan_fu_2521_p2 ^ 1'd1);

assign tmp13_fu_2888_p2 = (brmerge40_demorgan_i_32_reg_4191 | tmp_431_5_reg_4186);

assign tmp14_demorgan_fu_2618_p2 = (p_38_i_i_6_fu_2586_p2 | brmerge40_demorgan_i_33_fu_2613_p2);

assign tmp14_fu_2624_p2 = (tmp14_demorgan_fu_2618_p2 ^ 1'd1);

assign tmp15_fu_2918_p2 = (brmerge40_demorgan_i_33_reg_4216 | tmp_431_6_reg_4211);

assign tmp16_demorgan_fu_2715_p2 = (p_38_i_i_7_fu_2683_p2 | brmerge40_demorgan_i_34_fu_2710_p2);

assign tmp16_fu_2721_p2 = (tmp16_demorgan_fu_2715_p2 ^ 1'd1);

assign tmp17_fu_2948_p2 = (brmerge40_demorgan_i_34_reg_4241 | tmp_431_7_reg_4236);

assign tmp2_demorgan_fu_2036_p2 = (p_38_i_i_fu_2004_p2 | brmerge40_demorgan_i_fu_2031_p2);

assign tmp2_fu_2042_p2 = (tmp2_demorgan_fu_2036_p2 ^ 1'd1);

assign tmp3_fu_2738_p2 = (brmerge40_demorgan_i_reg_4066 | tmp_249_reg_4061);

assign tmp4_demorgan_fu_2133_p2 = (p_38_i_i_1_fu_2101_p2 | brmerge40_demorgan_i_35_fu_2128_p2);

assign tmp4_fu_2139_p2 = (tmp4_demorgan_fu_2133_p2 ^ 1'd1);

assign tmp5_fu_2768_p2 = (brmerge40_demorgan_i_35_reg_4091 | tmp_431_1_reg_4086);

assign tmp6_demorgan_fu_2230_p2 = (p_38_i_i_2_fu_2198_p2 | brmerge40_demorgan_i_29_fu_2225_p2);

assign tmp6_fu_2236_p2 = (tmp6_demorgan_fu_2230_p2 ^ 1'd1);

assign tmp7_fu_2798_p2 = (brmerge40_demorgan_i_29_reg_4116 | tmp_431_2_reg_4111);

assign tmp8_demorgan_fu_2327_p2 = (p_38_i_i_3_fu_2295_p2 | brmerge40_demorgan_i_30_fu_2322_p2);

assign tmp8_fu_2333_p2 = (tmp8_demorgan_fu_2327_p2 ^ 1'd1);

assign tmp9_fu_2828_p2 = (brmerge40_demorgan_i_30_reg_4141 | tmp_431_3_reg_4136);

assign tmp_231_cast1_fu_957_p1 = ap_reg_pp0_iter9_j_mid2_reg_3402;

assign tmp_231_cast_fu_905_p1 = j_mid2_reg_3402;

assign tmp_232_fu_2990_p1 = i_1_reg_721;

assign tmp_233_cast1_fu_1010_p1 = w_reg_688;

assign tmp_233_cast_fu_1014_p1 = w_reg_688;

assign tmp_235_cast_fu_3338_p1 = k_1_mid2_reg_4396;

assign tmp_238_cast_fu_3033_p1 = j_1_reg_732;

assign tmp_239_cast_fu_1030_p1 = ci_reg_699;

assign tmp_240_cast_fu_3062_p1 = k_reg_743;

assign tmp_241_fu_3104_p1 = $signed(p_Val2_s_187_fu_3083_p10);

assign tmp_242_fu_3108_p1 = $signed(bias_V_q0);

assign tmp_242_mid2_cast_fu_3321_p1 = tmp_242_mid2_reg_4407;

assign tmp_242_mid2_fu_3299_p3 = ((exitcond_mid_reg_4391[0:0] === 1'b1) ? j_5_fu_3294_p2 : j_2_mid_reg_4370);

assign tmp_243_fu_3140_p2 = (newsignbit_reg_4354 ^ 1'd1);

assign tmp_244_fu_1314_p3 = {{conv_last_output_V_0_1_reg_3645}, {6'd0}};

assign tmp_245_fu_1348_p1 = tmp_578_reg_3650;

assign tmp_246_fu_1373_p2 = (tmp_580_fu_1365_p3 ^ 1'd1);

assign tmp_248_fu_1986_p2 = (tmp_581_fu_1962_p3 ^ 1'd1);

assign tmp_249_fu_2020_p2 = (tmp_577_reg_3765 ^ 1'd1);

assign tmp_267_cast_fu_1321_p1 = $signed(tmp_244_fu_1314_p3);

assign tmp_414_1_cast_fu_1402_p1 = $signed(tmp_414_1_fu_1395_p3);

assign tmp_414_1_fu_1395_p3 = {{conv_last_output_V_1_1_reg_3660}, {6'd0}};

assign tmp_414_2_cast_fu_1483_p1 = $signed(tmp_414_2_fu_1476_p3);

assign tmp_414_2_fu_1476_p3 = {{conv_last_output_V_2_1_reg_3675}, {6'd0}};

assign tmp_414_3_cast_fu_1564_p1 = $signed(tmp_414_3_fu_1557_p3);

assign tmp_414_3_fu_1557_p3 = {{conv_last_output_V_3_1_reg_3690}, {6'd0}};

assign tmp_414_4_cast_fu_1645_p1 = $signed(tmp_414_4_fu_1638_p3);

assign tmp_414_4_fu_1638_p3 = {{conv_last_output_V_4_1_reg_3705}, {6'd0}};

assign tmp_414_5_cast_fu_1726_p1 = $signed(tmp_414_5_fu_1719_p3);

assign tmp_414_5_fu_1719_p3 = {{conv_last_output_V_5_1_reg_3720}, {6'd0}};

assign tmp_414_6_cast_fu_1807_p1 = $signed(tmp_414_6_fu_1800_p3);

assign tmp_414_6_fu_1800_p3 = {{conv_last_output_V_6_1_reg_3735}, {6'd0}};

assign tmp_414_7_cast_fu_1888_p1 = $signed(tmp_414_7_fu_1881_p3);

assign tmp_414_7_fu_1881_p3 = {{conv_last_output_V_7_1_reg_3750}, {6'd0}};

assign tmp_418_1_fu_1429_p1 = tmp_583_reg_3665;

assign tmp_418_2_fu_1510_p1 = tmp_588_reg_3680;

assign tmp_418_3_fu_1591_p1 = tmp_593_reg_3695;

assign tmp_418_4_fu_1672_p1 = tmp_598_reg_3710;

assign tmp_418_5_fu_1753_p1 = tmp_603_reg_3725;

assign tmp_418_6_fu_1834_p1 = tmp_608_reg_3740;

assign tmp_418_7_fu_1915_p1 = tmp_613_reg_3755;

assign tmp_424_1_fu_1454_p2 = (tmp_585_fu_1446_p3 ^ 1'd1);

assign tmp_424_2_fu_1535_p2 = (tmp_590_fu_1527_p3 ^ 1'd1);

assign tmp_424_3_fu_1616_p2 = (tmp_595_fu_1608_p3 ^ 1'd1);

assign tmp_424_4_fu_1697_p2 = (tmp_600_fu_1689_p3 ^ 1'd1);

assign tmp_424_5_fu_1778_p2 = (tmp_605_fu_1770_p3 ^ 1'd1);

assign tmp_424_6_fu_1859_p2 = (tmp_610_fu_1851_p3 ^ 1'd1);

assign tmp_424_7_fu_1940_p2 = (tmp_615_fu_1932_p3 ^ 1'd1);

assign tmp_429_1_fu_2083_p2 = (tmp_586_fu_2059_p3 ^ 1'd1);

assign tmp_429_2_fu_2180_p2 = (tmp_591_fu_2156_p3 ^ 1'd1);

assign tmp_429_3_fu_2277_p2 = (tmp_596_fu_2253_p3 ^ 1'd1);

assign tmp_429_4_fu_2374_p2 = (tmp_601_fu_2350_p3 ^ 1'd1);

assign tmp_429_5_fu_2471_p2 = (tmp_606_fu_2447_p3 ^ 1'd1);

assign tmp_429_6_fu_2568_p2 = (tmp_611_fu_2544_p3 ^ 1'd1);

assign tmp_429_7_fu_2665_p2 = (tmp_616_fu_2641_p3 ^ 1'd1);

assign tmp_431_1_fu_2117_p2 = (tmp_582_reg_3802 ^ 1'd1);

assign tmp_431_2_fu_2214_p2 = (tmp_587_reg_3839 ^ 1'd1);

assign tmp_431_3_fu_2311_p2 = (tmp_592_reg_3876 ^ 1'd1);

assign tmp_431_4_fu_2408_p2 = (tmp_597_reg_3913 ^ 1'd1);

assign tmp_431_5_fu_2505_p2 = (tmp_602_reg_3950 ^ 1'd1);

assign tmp_431_6_fu_2602_p2 = (tmp_607_reg_3987 ^ 1'd1);

assign tmp_431_7_fu_2699_p2 = (tmp_612_reg_4024 ^ 1'd1);

assign tmp_486_fu_895_p2 = (p_shl2_cast_fu_880_p1 - p_shl3_cast_fu_891_p1);

assign tmp_487_fu_933_p3 = {{ap_reg_pp0_iter9_newIndex15_mid2_v_reg_3419}, {8'd0}};

assign tmp_488_fu_940_p3 = {{ap_reg_pp0_iter9_newIndex15_mid2_v_reg_3419}, {6'd0}};

assign tmp_489_fu_951_p2 = (tmp_487_fu_933_p3 - p_shl1_cast_fu_947_p1);

assign tmp_490_fu_908_p2 = ($signed(tmp_231_cast_fu_905_p1) + $signed(tmp_614_cast_fu_901_p1));

assign tmp_491_fu_960_p2 = (tmp_231_cast1_fu_957_p1 + tmp_489_fu_951_p2);

assign tmp_492_fu_3009_p3 = {{newIndex_fu_2999_p4}, {2'd0}};

assign tmp_493_fu_3310_p3 = {{newIndex18_mid2_v_reg_4386}, {2'd0}};

assign tmp_494_fu_3266_p2 = (exitcond_mid_fu_3260_p2 | exitcond_flatten15_fu_3212_p2);

assign tmp_495_fu_3324_p2 = (tmp_623_cast_fu_3317_p1 + tmp_242_mid2_cast_fu_3321_p1);

assign tmp_496_fu_3341_p2 = (tmp_627_cast_fu_3330_p3 + tmp_235_cast_fu_3338_p1);

assign tmp_497_fu_3037_p2 = (tmp_238_cast_fu_3033_p1 + tmp_621_cast_reg_4270);

assign tmp_498_fu_1034_p3 = {{ci_reg_699}, {2'd0}};

assign tmp_499_fu_1046_p2 = (tmp_cast_reg_3461 + tmp_633_cast_fu_1042_p1);

assign tmp_500_fu_1059_p2 = (tmp_233_cast_reg_3479 + tmp_636_cast_fu_1051_p3);

assign tmp_501_fu_3066_p2 = (tmp_631_cast_reg_4288 + tmp_240_cast_fu_3062_p1);

assign tmp_502_fu_1085_p3 = {{newIndex1_fu_1075_p4}, {2'd0}};

assign tmp_503_fu_1097_p2 = (tmp_640_cast_fu_1093_p1 + tmp_cast10_reg_3456);

assign tmp_504_fu_1110_p2 = (tmp_643_cast_fu_1102_p3 + tmp_233_cast1_reg_3474);

assign tmp_505_fu_1115_p3 = {{newIndex1_fu_1075_p4}, {8'd0}};

assign tmp_506_fu_1123_p3 = {{newIndex1_fu_1075_p4}, {6'd0}};

assign tmp_507_fu_1135_p2 = (tmp_505_fu_1115_p3 - p_shl5_cast_fu_1131_p1);

assign tmp_508_fu_1141_p2 = (tmp_507_fu_1135_p2 + tmp_239_cast_reg_3492);

assign tmp_571_fu_853_p1 = tmp_mid2_v_fu_845_p3[2:0];

assign tmp_572_fu_2995_p1 = i_1_reg_721[2:0];

assign tmp_573_fu_3234_p1 = arrayNo8_mid2_v_fu_3226_p3[2:0];

assign tmp_574_fu_3380_p3 = tmp_236_fu_3359_p10[32'd7];

assign tmp_579_fu_1351_p3 = p_Val2_3_fu_1325_p2[32'd13];

assign tmp_580_fu_1365_p3 = p_Val2_5_fu_1359_p2[32'd7];

assign tmp_581_fu_1962_p3 = p_Val2_3_reg_3760[32'd14];

assign tmp_584_fu_1432_p3 = p_Val2_85_1_fu_1406_p2[32'd13];

assign tmp_585_fu_1446_p3 = p_Val2_87_1_fu_1440_p2[32'd7];

assign tmp_586_fu_2059_p3 = p_Val2_85_1_reg_3797[32'd14];

assign tmp_589_fu_1513_p3 = p_Val2_85_2_fu_1487_p2[32'd13];

assign tmp_590_fu_1527_p3 = p_Val2_87_2_fu_1521_p2[32'd7];

assign tmp_591_fu_2156_p3 = p_Val2_85_2_reg_3834[32'd14];

assign tmp_594_fu_1594_p3 = p_Val2_85_3_fu_1568_p2[32'd13];

assign tmp_595_fu_1608_p3 = p_Val2_87_3_fu_1602_p2[32'd7];

assign tmp_596_fu_2253_p3 = p_Val2_85_3_reg_3871[32'd14];

assign tmp_599_fu_1675_p3 = p_Val2_85_4_fu_1649_p2[32'd13];

assign tmp_600_fu_1689_p3 = p_Val2_87_4_fu_1683_p2[32'd7];

assign tmp_601_fu_2350_p3 = p_Val2_85_4_reg_3908[32'd14];

assign tmp_604_fu_1756_p3 = p_Val2_85_5_fu_1730_p2[32'd13];

assign tmp_605_fu_1770_p3 = p_Val2_87_5_fu_1764_p2[32'd7];

assign tmp_606_fu_2447_p3 = p_Val2_85_5_reg_3945[32'd14];

assign tmp_609_fu_1837_p3 = p_Val2_85_6_fu_1811_p2[32'd13];

assign tmp_610_fu_1851_p3 = p_Val2_87_6_fu_1845_p2[32'd7];

assign tmp_611_fu_2544_p3 = p_Val2_85_6_reg_3982[32'd14];

assign tmp_614_cast_fu_901_p1 = $signed(tmp_486_fu_895_p2);

assign tmp_614_fu_1918_p3 = p_Val2_85_7_fu_1892_p2[32'd13];

assign tmp_615_fu_1932_p3 = p_Val2_87_7_fu_1926_p2[32'd7];

assign tmp_616_fu_2641_p3 = p_Val2_85_7_reg_4019[32'd14];

assign tmp_618_cast_fu_914_p1 = $signed(tmp_490_fu_908_p2);

assign tmp_619_cast_fu_966_p1 = $signed(tmp_491_fu_960_p2);

assign tmp_621_cast_fu_3017_p1 = tmp_492_fu_3009_p3;

assign tmp_623_cast_fu_3317_p1 = tmp_493_fu_3310_p3;

assign tmp_627_cast_fu_3330_p3 = {{tmp_495_fu_3324_p2}, {2'd0}};

assign tmp_628_cast_fu_3347_p1 = tmp_496_fu_3341_p2;

assign tmp_631_cast_fu_3042_p3 = {{tmp_497_fu_3037_p2}, {2'd0}};

assign tmp_633_cast_fu_1042_p1 = tmp_498_fu_1034_p3;

assign tmp_636_cast_fu_1051_p3 = {{tmp_499_fu_1046_p2}, {2'd0}};

assign tmp_637_cast_fu_1064_p1 = tmp_500_fu_1059_p2;

assign tmp_638_cast_fu_3071_p1 = tmp_501_fu_3066_p2;

assign tmp_640_cast_fu_1093_p1 = tmp_502_fu_1085_p3;

assign tmp_643_cast_fu_1102_p3 = {{tmp_503_fu_1097_p2}, {2'd0}};

assign tmp_644_cast_fu_1164_p1 = tmp_504_reg_3505;

assign tmp_648_cast_fu_1146_p1 = $signed(tmp_508_fu_1141_p2);

assign tmp_cast10_fu_990_p1 = h_reg_677;

assign tmp_cast_fu_994_p1 = h_reg_677;

assign tmp_fu_873_p3 = {{tmp_mid2_v_reg_3408}, {8'd0}};

assign tmp_mid2_v_fu_845_p3 = ((exitcond_fu_831_p2[0:0] === 1'b1) ? i_3_fu_825_p2 : i_phi_fu_659_p4);

assign tmp_s_fu_884_p3 = {{tmp_mid2_v_reg_3408}, {6'd0}};

assign underflow_10_fu_3145_p2 = (isneg_reg_4341 & tmp_243_fu_3140_p2);

assign underflow_1_fu_2145_p2 = (tmp_582_reg_3802 & tmp4_fu_2139_p2);

assign underflow_2_fu_2242_p2 = (tmp_587_reg_3839 & tmp6_fu_2236_p2);

assign underflow_3_fu_2339_p2 = (tmp_592_reg_3876 & tmp8_fu_2333_p2);

assign underflow_4_fu_2436_p2 = (tmp_597_reg_3913 & tmp10_fu_2430_p2);

assign underflow_5_fu_2533_p2 = (tmp_602_reg_3950 & tmp12_fu_2527_p2);

assign underflow_6_fu_2630_p2 = (tmp_607_reg_3987 & tmp14_fu_2624_p2);

assign underflow_7_fu_2727_p2 = (tmp_612_reg_4024 & tmp16_fu_2721_p2);

assign underflow_fu_2048_p2 = (tmp_577_reg_3765 & tmp2_fu_2042_p2);

assign underflow_not_1_fu_2772_p2 = (tmp5_fu_2768_p2 | p_38_i_i_1_reg_4081);

assign underflow_not_2_fu_2802_p2 = (tmp7_fu_2798_p2 | p_38_i_i_2_reg_4106);

assign underflow_not_3_fu_2832_p2 = (tmp9_fu_2828_p2 | p_38_i_i_3_reg_4131);

assign underflow_not_4_fu_2862_p2 = (tmp11_fu_2858_p2 | p_38_i_i_4_reg_4156);

assign underflow_not_5_fu_2892_p2 = (tmp13_fu_2888_p2 | p_38_i_i_5_reg_4181);

assign underflow_not_6_fu_2922_p2 = (tmp15_fu_2918_p2 | p_38_i_i_6_reg_4206);

assign underflow_not_7_fu_2952_p2 = (tmp17_fu_2948_p2 | p_38_i_i_7_reg_4231);

assign underflow_not_fu_2742_p2 = (tmp3_fu_2738_p2 | p_38_i_i_reg_4056);

assign w_34_fu_1004_p2 = (w_reg_688 + 3'd1);

always @ (posedge ap_clk) begin
    tmp_cast10_reg_3456[9:3] <= 7'b0000000;
    tmp_cast_reg_3461[10:3] <= 8'b00000000;
    tmp_233_cast1_reg_3474[11:3] <= 9'b000000000;
    tmp_233_cast_reg_3479[12:3] <= 10'b0000000000;
    tmp_239_cast_reg_3492[14:8] <= 7'b0000000;
    tmp_621_cast_reg_4270[1:0] <= 2'b00;
    tmp_621_cast_reg_4270[9] <= 1'b0;
    tmp_631_cast_reg_4288[1:0] <= 2'b00;
end

endmodule //conv_last
