// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc_HH_
#define _fc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fc : public sc_module {
    // Port declarations 104
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_weight_V_AWVALID;
    sc_in< sc_logic > m_axi_weight_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_weight_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_weight_V_AWID;
    sc_out< sc_lv<32> > m_axi_weight_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_weight_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_weight_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_weight_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_weight_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_weight_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_weight_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_weight_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_weight_V_AWUSER;
    sc_out< sc_logic > m_axi_weight_V_WVALID;
    sc_in< sc_logic > m_axi_weight_V_WREADY;
    sc_out< sc_lv<8> > m_axi_weight_V_WDATA;
    sc_out< sc_lv<1> > m_axi_weight_V_WSTRB;
    sc_out< sc_logic > m_axi_weight_V_WLAST;
    sc_out< sc_lv<1> > m_axi_weight_V_WID;
    sc_out< sc_lv<1> > m_axi_weight_V_WUSER;
    sc_out< sc_logic > m_axi_weight_V_ARVALID;
    sc_in< sc_logic > m_axi_weight_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_weight_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_weight_V_ARID;
    sc_out< sc_lv<32> > m_axi_weight_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_weight_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_weight_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_weight_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_weight_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_weight_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_weight_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_weight_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_weight_V_ARUSER;
    sc_in< sc_logic > m_axi_weight_V_RVALID;
    sc_out< sc_logic > m_axi_weight_V_RREADY;
    sc_in< sc_lv<8> > m_axi_weight_V_RDATA;
    sc_in< sc_logic > m_axi_weight_V_RLAST;
    sc_in< sc_lv<1> > m_axi_weight_V_RID;
    sc_in< sc_lv<1> > m_axi_weight_V_RUSER;
    sc_in< sc_lv<2> > m_axi_weight_V_RRESP;
    sc_in< sc_logic > m_axi_weight_V_BVALID;
    sc_out< sc_logic > m_axi_weight_V_BREADY;
    sc_in< sc_lv<2> > m_axi_weight_V_BRESP;
    sc_in< sc_lv<1> > m_axi_weight_V_BID;
    sc_in< sc_lv<1> > m_axi_weight_V_BUSER;
    sc_in< sc_lv<32> > fc_weight_V11;
    sc_out< sc_lv<4> > bias_V_address0;
    sc_out< sc_logic > bias_V_ce0;
    sc_in< sc_lv<8> > bias_V_q0;
    sc_out< sc_logic > m_axi_output_V_AWVALID;
    sc_in< sc_logic > m_axi_output_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_output_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_output_V_AWID;
    sc_out< sc_lv<32> > m_axi_output_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_output_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_output_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_output_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_output_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_output_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_output_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_output_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_output_V_AWUSER;
    sc_out< sc_logic > m_axi_output_V_WVALID;
    sc_in< sc_logic > m_axi_output_V_WREADY;
    sc_out< sc_lv<8> > m_axi_output_V_WDATA;
    sc_out< sc_lv<1> > m_axi_output_V_WSTRB;
    sc_out< sc_logic > m_axi_output_V_WLAST;
    sc_out< sc_lv<1> > m_axi_output_V_WID;
    sc_out< sc_lv<1> > m_axi_output_V_WUSER;
    sc_out< sc_logic > m_axi_output_V_ARVALID;
    sc_in< sc_logic > m_axi_output_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_output_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_output_V_ARID;
    sc_out< sc_lv<32> > m_axi_output_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_output_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_output_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_output_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_output_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_output_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_output_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_output_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_output_V_ARUSER;
    sc_in< sc_logic > m_axi_output_V_RVALID;
    sc_out< sc_logic > m_axi_output_V_RREADY;
    sc_in< sc_lv<8> > m_axi_output_V_RDATA;
    sc_in< sc_logic > m_axi_output_V_RLAST;
    sc_in< sc_lv<1> > m_axi_output_V_RID;
    sc_in< sc_lv<1> > m_axi_output_V_RUSER;
    sc_in< sc_lv<2> > m_axi_output_V_RRESP;
    sc_in< sc_logic > m_axi_output_V_BVALID;
    sc_out< sc_logic > m_axi_output_V_BREADY;
    sc_in< sc_lv<2> > m_axi_output_V_BRESP;
    sc_in< sc_lv<1> > m_axi_output_V_BID;
    sc_in< sc_lv<1> > m_axi_output_V_BUSER;
    sc_in< sc_lv<32> > fc_output_V15;
    sc_out< sc_lv<9> > avgpool_output_V_address0;
    sc_out< sc_logic > avgpool_output_V_ce0;
    sc_in< sc_lv<8> > avgpool_output_V_q0;


    // Module declarations
    fc(sc_module_name name);
    SC_HAS_PROCESS(fc);

    ~fc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > weight_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > weight_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > output_V_blk_n_AW;
    sc_signal< sc_logic > output_V_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > output_V_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_output_V_AWREADY;
    sc_signal< sc_lv<33> > sext_cast_fu_217_p1;
    sc_signal< sc_lv<33> > sext_cast_reg_602;
    sc_signal< sc_lv<4> > co_34_fu_227_p2;
    sc_signal< sc_lv<4> > co_34_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > weight_V_addr_reg_615;
    sc_signal< sc_lv<1> > exitcond24_fu_221_p2;
    sc_signal< sc_lv<64> > tmp_fu_260_p1;
    sc_signal< sc_lv<64> > tmp_reg_621;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<10> > ci_6_fu_270_p2;
    sc_signal< sc_lv<10> > ci_6_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_fu_264_p2;
    sc_signal< sc_lv<8> > weight_V_addr_read_reg_644;
    sc_signal< sc_lv<8> > avgpool_output_V_loa_reg_649;
    sc_signal< sc_lv<16> > p_Val2_66_fu_287_p2;
    sc_signal< sc_lv<16> > p_Val2_66_reg_654;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_551_reg_659;
    sc_signal< sc_lv<16> > p_Val2_67_fu_313_p2;
    sc_signal< sc_lv<16> > p_Val2_67_reg_664;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > signbit_reg_669;
    sc_signal< sc_lv<8> > p_Val2_69_fu_347_p2;
    sc_signal< sc_lv<8> > p_Val2_69_reg_676;
    sc_signal< sc_lv<1> > newsignbit_fu_353_p3;
    sc_signal< sc_lv<1> > newsignbit_reg_682;
    sc_signal< sc_lv<1> > carry_fu_367_p2;
    sc_signal< sc_lv<1> > carry_reg_688;
    sc_signal< sc_lv<2> > tmp_250_reg_695;
    sc_signal< sc_lv<1> > p_38_i_i_fu_425_p2;
    sc_signal< sc_lv<1> > p_38_i_i_reg_701;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > tmp_249_fu_441_p2;
    sc_signal< sc_lv<1> > tmp_249_reg_706;
    sc_signal< sc_lv<1> > brmerge40_demorgan_i_fu_452_p2;
    sc_signal< sc_lv<1> > brmerge40_demorgan_i_reg_711;
    sc_signal< sc_lv<1> > underflow_fu_469_p2;
    sc_signal< sc_lv<1> > underflow_reg_716;
    sc_signal< sc_lv<1> > brmerge_i_i_i_fu_474_p2;
    sc_signal< sc_lv<1> > brmerge_i_i_i_reg_721;
    sc_signal< sc_lv<8> > sum_V_fu_501_p3;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > p_Val2_63_reg_731;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > result_1_fu_589_p3;
    sc_signal< sc_lv<8> > result_1_reg_737;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<4> > co_reg_171;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_output_V_WREADY;
    sc_signal< sc_lv<8> > p_Val2_s_reg_183;
    sc_signal< sc_lv<10> > ci_reg_195;
    sc_signal< sc_lv<64> > tmp_244_fu_276_p1;
    sc_signal< sc_lv<64> > sext2_fu_206_p1;
    sc_signal< sc_lv<64> > tmp_547_fu_250_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_output_V_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_output_V_WREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_weight_V_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_weight_V_ARREADY;
    sc_signal< sc_lv<13> > tmp_527_fu_233_p3;
    sc_signal< sc_lv<33> > tmp_545_fu_241_p1;
    sc_signal< sc_lv<33> > tmp_546_fu_245_p2;
    sc_signal< sc_lv<8> > p_Val2_66_fu_287_p0;
    sc_signal< sc_lv<8> > p_Val2_66_fu_287_p1;
    sc_signal< sc_lv<14> > tmp_245_fu_301_p3;
    sc_signal< sc_lv<16> > tmp_253_cast_fu_309_p1;
    sc_signal< sc_lv<8> > tmp_246_fu_336_p1;
    sc_signal< sc_lv<8> > p_Val2_68_fu_326_p4;
    sc_signal< sc_lv<1> > tmp_552_fu_339_p3;
    sc_signal< sc_lv<1> > tmp_247_fu_361_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_390_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_395_p2;
    sc_signal< sc_lv<1> > tmp_554_fu_383_p3;
    sc_signal< sc_lv<1> > tmp_248_fu_407_p2;
    sc_signal< sc_lv<1> > p_41_i_i_fu_413_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_400_p3;
    sc_signal< sc_lv<1> > p_not_i_i_fu_430_p2;
    sc_signal< sc_lv<1> > brmerge_i_i7_fu_436_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_418_p3;
    sc_signal< sc_lv<1> > tmp2_demorgan_fu_457_p2;
    sc_signal< sc_lv<1> > tmp2_fu_463_p2;
    sc_signal< sc_lv<1> > overflow_fu_446_p2;
    sc_signal< sc_lv<1> > tmp3_fu_480_p2;
    sc_signal< sc_lv<1> > underflow_not_fu_484_p2;
    sc_signal< sc_lv<8> > p_Val2_78_mux_fu_489_p3;
    sc_signal< sc_lv<8> > p_Val2_s_170_fu_495_p3;
    sc_signal< sc_lv<9> > tmp_242_fu_513_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_509_p1;
    sc_signal< sc_lv<9> > p_Val2_64_fu_516_p2;
    sc_signal< sc_lv<8> > result_V_fu_530_p2;
    sc_signal< sc_lv<1> > newsignbit_10_fu_535_p3;
    sc_signal< sc_lv<1> > isneg_fu_522_p3;
    sc_signal< sc_lv<1> > tmp_243_fu_543_p2;
    sc_signal< sc_lv<1> > isneg_not_fu_561_p2;
    sc_signal< sc_lv<1> > brmerge_i_i_fu_555_p2;
    sc_signal< sc_lv<1> > underflow_10_fu_549_p2;
    sc_signal< sc_lv<1> > brmerge1_fu_567_p2;
    sc_signal< sc_lv<8> > result_V_mux_fu_573_p3;
    sc_signal< sc_lv<8> > p_result_V_fu_581_p3;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_state4;
    static const sc_lv<22> ap_ST_fsm_state5;
    static const sc_lv<22> ap_ST_fsm_state6;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_state8;
    static const sc_lv<22> ap_ST_fsm_state9;
    static const sc_lv<22> ap_ST_fsm_state10;
    static const sc_lv<22> ap_ST_fsm_state11;
    static const sc_lv<22> ap_ST_fsm_state12;
    static const sc_lv<22> ap_ST_fsm_state13;
    static const sc_lv<22> ap_ST_fsm_state14;
    static const sc_lv<22> ap_ST_fsm_state15;
    static const sc_lv<22> ap_ST_fsm_state16;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_state21;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_80;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range1_all_ones_fu_390_p2();
    void thread_Range1_all_zeros_fu_395_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_output_V_AWREADY();
    void thread_ap_sig_ioackin_m_axi_output_V_WREADY();
    void thread_ap_sig_ioackin_m_axi_weight_V_ARREADY();
    void thread_avgpool_output_V_address0();
    void thread_avgpool_output_V_ce0();
    void thread_bias_V_address0();
    void thread_bias_V_ce0();
    void thread_brmerge1_fu_567_p2();
    void thread_brmerge40_demorgan_i_fu_452_p2();
    void thread_brmerge_i_i7_fu_436_p2();
    void thread_brmerge_i_i_fu_555_p2();
    void thread_brmerge_i_i_i_fu_474_p2();
    void thread_carry_fu_367_p2();
    void thread_ci_6_fu_270_p2();
    void thread_co_34_fu_227_p2();
    void thread_deleted_ones_fu_418_p3();
    void thread_deleted_zeros_fu_400_p3();
    void thread_exitcond24_fu_221_p2();
    void thread_exitcond_fu_264_p2();
    void thread_isneg_fu_522_p3();
    void thread_isneg_not_fu_561_p2();
    void thread_m_axi_output_V_ARADDR();
    void thread_m_axi_output_V_ARBURST();
    void thread_m_axi_output_V_ARCACHE();
    void thread_m_axi_output_V_ARID();
    void thread_m_axi_output_V_ARLEN();
    void thread_m_axi_output_V_ARLOCK();
    void thread_m_axi_output_V_ARPROT();
    void thread_m_axi_output_V_ARQOS();
    void thread_m_axi_output_V_ARREGION();
    void thread_m_axi_output_V_ARSIZE();
    void thread_m_axi_output_V_ARUSER();
    void thread_m_axi_output_V_ARVALID();
    void thread_m_axi_output_V_AWADDR();
    void thread_m_axi_output_V_AWBURST();
    void thread_m_axi_output_V_AWCACHE();
    void thread_m_axi_output_V_AWID();
    void thread_m_axi_output_V_AWLEN();
    void thread_m_axi_output_V_AWLOCK();
    void thread_m_axi_output_V_AWPROT();
    void thread_m_axi_output_V_AWQOS();
    void thread_m_axi_output_V_AWREGION();
    void thread_m_axi_output_V_AWSIZE();
    void thread_m_axi_output_V_AWUSER();
    void thread_m_axi_output_V_AWVALID();
    void thread_m_axi_output_V_BREADY();
    void thread_m_axi_output_V_RREADY();
    void thread_m_axi_output_V_WDATA();
    void thread_m_axi_output_V_WID();
    void thread_m_axi_output_V_WLAST();
    void thread_m_axi_output_V_WSTRB();
    void thread_m_axi_output_V_WUSER();
    void thread_m_axi_output_V_WVALID();
    void thread_m_axi_weight_V_ARADDR();
    void thread_m_axi_weight_V_ARBURST();
    void thread_m_axi_weight_V_ARCACHE();
    void thread_m_axi_weight_V_ARID();
    void thread_m_axi_weight_V_ARLEN();
    void thread_m_axi_weight_V_ARLOCK();
    void thread_m_axi_weight_V_ARPROT();
    void thread_m_axi_weight_V_ARQOS();
    void thread_m_axi_weight_V_ARREGION();
    void thread_m_axi_weight_V_ARSIZE();
    void thread_m_axi_weight_V_ARUSER();
    void thread_m_axi_weight_V_ARVALID();
    void thread_m_axi_weight_V_AWADDR();
    void thread_m_axi_weight_V_AWBURST();
    void thread_m_axi_weight_V_AWCACHE();
    void thread_m_axi_weight_V_AWID();
    void thread_m_axi_weight_V_AWLEN();
    void thread_m_axi_weight_V_AWLOCK();
    void thread_m_axi_weight_V_AWPROT();
    void thread_m_axi_weight_V_AWQOS();
    void thread_m_axi_weight_V_AWREGION();
    void thread_m_axi_weight_V_AWSIZE();
    void thread_m_axi_weight_V_AWUSER();
    void thread_m_axi_weight_V_AWVALID();
    void thread_m_axi_weight_V_BREADY();
    void thread_m_axi_weight_V_RREADY();
    void thread_m_axi_weight_V_WDATA();
    void thread_m_axi_weight_V_WID();
    void thread_m_axi_weight_V_WLAST();
    void thread_m_axi_weight_V_WSTRB();
    void thread_m_axi_weight_V_WUSER();
    void thread_m_axi_weight_V_WVALID();
    void thread_newsignbit_10_fu_535_p3();
    void thread_newsignbit_fu_353_p3();
    void thread_output_V_blk_n_AW();
    void thread_output_V_blk_n_B();
    void thread_output_V_blk_n_W();
    void thread_overflow_fu_446_p2();
    void thread_p_38_i_i_fu_425_p2();
    void thread_p_41_i_i_fu_413_p2();
    void thread_p_Val2_64_fu_516_p2();
    void thread_p_Val2_66_fu_287_p0();
    void thread_p_Val2_66_fu_287_p1();
    void thread_p_Val2_66_fu_287_p2();
    void thread_p_Val2_67_fu_313_p2();
    void thread_p_Val2_68_fu_326_p4();
    void thread_p_Val2_69_fu_347_p2();
    void thread_p_Val2_78_mux_fu_489_p3();
    void thread_p_Val2_s_170_fu_495_p3();
    void thread_p_not_i_i_fu_430_p2();
    void thread_p_result_V_fu_581_p3();
    void thread_result_1_fu_589_p3();
    void thread_result_V_fu_530_p2();
    void thread_result_V_mux_fu_573_p3();
    void thread_sext2_fu_206_p1();
    void thread_sext_cast_fu_217_p1();
    void thread_sum_V_fu_501_p3();
    void thread_tmp2_demorgan_fu_457_p2();
    void thread_tmp2_fu_463_p2();
    void thread_tmp3_fu_480_p2();
    void thread_tmp_242_fu_513_p1();
    void thread_tmp_243_fu_543_p2();
    void thread_tmp_244_fu_276_p1();
    void thread_tmp_245_fu_301_p3();
    void thread_tmp_246_fu_336_p1();
    void thread_tmp_247_fu_361_p2();
    void thread_tmp_248_fu_407_p2();
    void thread_tmp_249_fu_441_p2();
    void thread_tmp_253_cast_fu_309_p1();
    void thread_tmp_527_fu_233_p3();
    void thread_tmp_545_fu_241_p1();
    void thread_tmp_546_fu_245_p2();
    void thread_tmp_547_fu_250_p1();
    void thread_tmp_552_fu_339_p3();
    void thread_tmp_554_fu_383_p3();
    void thread_tmp_fu_260_p1();
    void thread_tmp_s_fu_509_p1();
    void thread_underflow_10_fu_549_p2();
    void thread_underflow_fu_469_p2();
    void thread_underflow_not_fu_484_p2();
    void thread_weight_V_blk_n_AR();
    void thread_weight_V_blk_n_R();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
