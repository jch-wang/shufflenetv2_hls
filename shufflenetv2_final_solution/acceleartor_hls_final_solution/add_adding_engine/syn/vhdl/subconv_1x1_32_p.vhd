-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subconv_1x1_32_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_0_V_ce0 : OUT STD_LOGIC;
    weight_0_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_0_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_0_V_ce1 : OUT STD_LOGIC;
    weight_0_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_1_V_ce0 : OUT STD_LOGIC;
    weight_1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_1_V_ce1 : OUT STD_LOGIC;
    weight_1_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_2_V_ce0 : OUT STD_LOGIC;
    weight_2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_2_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_2_V_ce1 : OUT STD_LOGIC;
    weight_2_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_3_V_ce0 : OUT STD_LOGIC;
    weight_3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_3_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_3_V_ce1 : OUT STD_LOGIC;
    weight_3_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_4_V_ce0 : OUT STD_LOGIC;
    weight_4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_4_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_4_V_ce1 : OUT STD_LOGIC;
    weight_4_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_5_V_ce0 : OUT STD_LOGIC;
    weight_5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_5_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_5_V_ce1 : OUT STD_LOGIC;
    weight_5_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_6_V_ce0 : OUT STD_LOGIC;
    weight_6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_6_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_6_V_ce1 : OUT STD_LOGIC;
    weight_6_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_7_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_7_V_ce0 : OUT STD_LOGIC;
    weight_7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_7_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    weight_7_V_ce1 : OUT STD_LOGIC;
    weight_7_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_0_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_0_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_1_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_1_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_2_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_2_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_3_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_3_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_4_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_4_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_5_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_5_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_5_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_6_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_6_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_6_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_7_ce0 : OUT STD_LOGIC;
    conv1_output_p_V_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_output_p_V_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_output_p_V_7_ce1 : OUT STD_LOGIC;
    conv1_output_p_V_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of subconv_1x1_32_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv12_484 : STD_LOGIC_VECTOR (11 downto 0) := "010010000100";
    constant ap_const_lv13_908 : STD_LOGIC_VECTOR (12 downto 0) := "0100100001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_13 : STD_LOGIC_VECTOR (7 downto 0) := "00010011";
    constant ap_const_lv8_14 : STD_LOGIC_VECTOR (7 downto 0) := "00010100";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv8_17 : STD_LOGIC_VECTOR (7 downto 0) := "00010111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal co_16_fu_2210_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_16_reg_3198 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_293_fu_2245_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_293_reg_3203 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond6_fu_2204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_V_addr_reg_3208 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_300_fu_2286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_300_reg_3216 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exitcond8_fu_2251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_307_fu_2302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_307_reg_3224 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond11_fu_2292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_16_fu_2307_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_16_reg_3229 : STD_LOGIC_VECTOR (5 downto 0);
    signal h_15_fu_2313_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_cast_fu_2329_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_reg_3242 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond7_fu_2323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_fu_2357_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_296_reg_3247 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_297_fu_2367_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_297_reg_3252 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_298_fu_2373_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_298_reg_3257 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_192_cast1_fu_2385_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_192_cast1_reg_3265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond10_fu_2379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv1_output_p_V_2_a_reg_3270 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_2_a_1_reg_3275 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_2_a_2_reg_3280 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_5_a_reg_3285 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_5_a_1_reg_3290 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_5_a_2_reg_3295 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_4_a_reg_3300 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_4_a_1_reg_3305 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_4_a_2_reg_3310 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_1_a_reg_3315 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_1_a_1_reg_3320 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_1_a_2_reg_3325 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_3_a_reg_3330 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_3_a_1_reg_3335 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_3_a_2_reg_3340 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_6_a_reg_3345 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_6_a_1_reg_3350 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_6_a_2_reg_3355 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_0_a_reg_3360 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_0_a_1_reg_3365 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_0_a_2_reg_3370 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_7_a_reg_3375 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_7_a_1_reg_3380 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_output_p_V_7_a_2_reg_3385 : STD_LOGIC_VECTOR (11 downto 0);
    signal h_14_fu_2448_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal co_18_fu_2460_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_18_reg_3398 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal output_V_addr_1_reg_3403 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond13_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_389_fu_2537_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_389_reg_3408 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_318_fu_2575_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_318_reg_3414 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_17_fu_2611_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_2162_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_201_reg_3605 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_0_l_reg_3610 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2183_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_202_reg_3615 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_1_l_reg_3620 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_2_l_reg_3625 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_3_l_reg_3630 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_4_l_reg_3635 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_5_l_reg_3640 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_6_l_reg_3645 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_7_l_reg_3650 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_0_l_1_reg_3655 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_1_l_1_reg_3660 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_2_l_1_reg_3665 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_3_l_1_reg_3670 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_4_l_1_reg_3675 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_5_l_1_reg_3680 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_6_l_1_reg_3685 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_7_l_1_reg_3690 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_203_reg_3775 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_204_reg_3780 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_0_l_2_reg_3785 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_1_l_2_reg_3790 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_2_l_2_reg_3795 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_3_l_2_reg_3800 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_4_l_2_reg_3805 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_5_l_2_reg_3810 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_6_l_2_reg_3815 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_output_p_V_7_l_2_reg_3820 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_205_reg_3905 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_206_reg_3910 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_207_reg_3995 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_208_reg_4000 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_209_reg_4085 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_210_reg_4090 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_211_reg_4175 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_212_reg_4180 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_213_reg_4265 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_214_reg_4270 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_215_reg_4355 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_216_reg_4360 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_217_reg_4445 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_218_reg_4450 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_219_reg_4535 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_220_reg_4540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_221_reg_4625 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_222_reg_4630 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_223_reg_4635 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_224_reg_4640 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_COMPUTE_ENGINE_fu_2110_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_60_reg_4645 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_COMPUTE_ENGINE_fu_2110_ap_done : STD_LOGIC;
    signal isneg_reg_4651 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_Val2_62_fu_3012_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_62_reg_4658 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_reg_4664 : STD_LOGIC_VECTOR (0 downto 0);
    signal co_17_fu_3078_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_17_reg_4674 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_303_fu_3108_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_303_reg_4679 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond9_fu_3072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_309_fu_3149_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_309_reg_4687 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal exitcond12_fu_3114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_addr_2_reg_4695 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal exitcond_fu_3155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_16_fu_3175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_18_fu_3189_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_COMPUTE_ENGINE_fu_2110_ap_start : STD_LOGIC;
    signal grp_COMPUTE_ENGINE_fu_2110_ap_idle : STD_LOGIC;
    signal grp_COMPUTE_ENGINE_fu_2110_ap_ready : STD_LOGIC;
    signal co_reg_2006 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_reg_2017 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_reg_2029 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal h1_reg_2040 : STD_LOGIC_VECTOR (5 downto 0);
    signal w2_reg_2052 : STD_LOGIC_VECTOR (5 downto 0);
    signal co3_reg_2064 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal co4_reg_2075 : STD_LOGIC_VECTOR (4 downto 0);
    signal h5_reg_2086 : STD_LOGIC_VECTOR (5 downto 0);
    signal w6_reg_2098 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_fu_2216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_346_cast_fu_2319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_343_cast_fu_2402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_344_cast_fu_2419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_345_cast_fu_2436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_358_cast_fu_2532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_361_cast_fu_2581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_362_cast_fu_2599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_363_cast_fu_2622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_364_cast_fu_2639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_365_cast_fu_2656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_366_cast_fu_2673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_367_cast_fu_2690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_368_cast_fu_2707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_369_cast_fu_2724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_370_cast_fu_2741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_371_cast_fu_2758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_372_cast_fu_2775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_373_cast_fu_2792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_374_cast_fu_2809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_375_cast_fu_2826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_376_cast_fu_2843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_377_cast_fu_2860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_378_cast_fu_2877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_379_cast_fu_2894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_380_cast_fu_2911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_381_cast_fu_2928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_382_cast_fu_2945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_383_cast_fu_2962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_384_cast_fu_2979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_385_cast_fu_3170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal this_assign_32_1_fu_3063_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_392_fu_3181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_2221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_292_fu_2233_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl1_cast_fu_2241_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_2229_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_190_cast_fu_2257_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_299_fu_2261_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_386_fu_2274_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl2_cast_fu_2266_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl3_cast_fu_2282_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_193_cast_fu_2298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_294_fu_2333_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_295_fu_2345_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_cast_fu_2353_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl4_cast_fu_2341_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_333_cast_fu_2363_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_192_cast_fu_2393_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_304_fu_2397_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_305_fu_2414_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_192_cast2_fu_2389_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_306_fu_2431_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_310_fu_2466_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_311_fu_2478_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl11_cast_fu_2486_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl10_cast_fu_2474_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_312_fu_2490_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_313_fu_2496_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_388_fu_2509_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl9_cast_fu_2517_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl8_cast_fu_2501_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_314_fu_2521_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_315_fu_2527_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal newIndex_fu_2541_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_316_fu_2551_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_317_fu_2563_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl6_cast_fu_2559_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl7_cast_fu_2571_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_319_fu_2593_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_320_fu_2617_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_321_fu_2634_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_322_fu_2651_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_323_fu_2668_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_324_fu_2685_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_325_fu_2702_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_326_fu_2719_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_327_fu_2736_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_328_fu_2753_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_329_fu_2770_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_330_fu_2787_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_331_fu_2804_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_332_fu_2821_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_333_fu_2838_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_334_fu_2855_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_335_fu_2872_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_336_fu_2889_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_337_fu_2906_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_338_fu_2923_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_339_fu_2940_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_340_fu_2957_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_341_fu_2974_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_197_fu_2995_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_196_fu_2991_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_61_fu_2998_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_198_fu_3025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_not_fu_3039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_3035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_3030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_3044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_63_mux_fu_3049_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_117_fu_3056_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_301_fu_3084_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_302_fu_3096_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl13_cast_fu_3104_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl12_cast_fu_3092_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_194_cast_fu_3120_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_308_fu_3124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_387_fu_3137_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl14_cast_fu_3129_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl15_cast_fu_3145_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_199_cast_fu_3161_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_342_fu_3165_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);

    component COMPUTE_ENGINE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w7_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b7_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w8_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b8_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w9_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b9_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w10_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b10_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w11_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b11_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w12_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b12_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w13_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b13_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w14_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b14_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w15_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b15_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w16_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b16_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w17_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b17_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w18_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b18_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w19_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b19_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w20_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b20_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w21_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b21_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w22_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b22_V : IN STD_LOGIC_VECTOR (7 downto 0);
        w23_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b23_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ShuffleNetV2_mux_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_COMPUTE_ENGINE_fu_2110 : component COMPUTE_ENGINE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_COMPUTE_ENGINE_fu_2110_ap_start,
        ap_done => grp_COMPUTE_ENGINE_fu_2110_ap_done,
        ap_idle => grp_COMPUTE_ENGINE_fu_2110_ap_idle,
        ap_ready => grp_COMPUTE_ENGINE_fu_2110_ap_ready,
        w0_V => tmp_201_reg_3605,
        b0_V => conv1_output_p_V_0_l_reg_3610,
        w1_V => tmp_202_reg_3615,
        b1_V => conv1_output_p_V_1_l_reg_3620,
        w2_V => tmp_203_reg_3775,
        b2_V => conv1_output_p_V_2_l_reg_3625,
        w3_V => tmp_204_reg_3780,
        b3_V => conv1_output_p_V_3_l_reg_3630,
        w4_V => tmp_205_reg_3905,
        b4_V => conv1_output_p_V_4_l_reg_3635,
        w5_V => tmp_206_reg_3910,
        b5_V => conv1_output_p_V_5_l_reg_3640,
        w6_V => tmp_207_reg_3995,
        b6_V => conv1_output_p_V_6_l_reg_3645,
        w7_V => tmp_208_reg_4000,
        b7_V => conv1_output_p_V_7_l_reg_3650,
        w8_V => tmp_209_reg_4085,
        b8_V => conv1_output_p_V_0_l_1_reg_3655,
        w9_V => tmp_210_reg_4090,
        b9_V => conv1_output_p_V_1_l_1_reg_3660,
        w10_V => tmp_211_reg_4175,
        b10_V => conv1_output_p_V_2_l_1_reg_3665,
        w11_V => tmp_212_reg_4180,
        b11_V => conv1_output_p_V_3_l_1_reg_3670,
        w12_V => tmp_213_reg_4265,
        b12_V => conv1_output_p_V_4_l_1_reg_3675,
        w13_V => tmp_214_reg_4270,
        b13_V => conv1_output_p_V_5_l_1_reg_3680,
        w14_V => tmp_215_reg_4355,
        b14_V => conv1_output_p_V_6_l_1_reg_3685,
        w15_V => tmp_216_reg_4360,
        b15_V => conv1_output_p_V_7_l_1_reg_3690,
        w16_V => tmp_217_reg_4445,
        b16_V => conv1_output_p_V_0_l_2_reg_3785,
        w17_V => tmp_218_reg_4450,
        b17_V => conv1_output_p_V_1_l_2_reg_3790,
        w18_V => tmp_219_reg_4535,
        b18_V => conv1_output_p_V_2_l_2_reg_3795,
        w19_V => tmp_220_reg_4540,
        b19_V => conv1_output_p_V_3_l_2_reg_3800,
        w20_V => tmp_221_reg_4625,
        b20_V => conv1_output_p_V_4_l_2_reg_3805,
        w21_V => tmp_222_reg_4630,
        b21_V => conv1_output_p_V_5_l_2_reg_3810,
        w22_V => tmp_223_reg_4635,
        b22_V => conv1_output_p_V_6_l_2_reg_3815,
        w23_V => tmp_224_reg_4640,
        b23_V => conv1_output_p_V_7_l_2_reg_3820,
        ap_return => grp_COMPUTE_ENGINE_fu_2110_ap_return);

    ShuffleNetV2_mux_jbC_x_U64 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => weight_0_V_q0,
        din2 => weight_1_V_q0,
        din3 => weight_2_V_q0,
        din4 => weight_3_V_q0,
        din5 => weight_4_V_q0,
        din6 => weight_5_V_q0,
        din7 => weight_6_V_q0,
        din8 => weight_7_V_q0,
        din9 => tmp_389_reg_3408,
        dout => grp_fu_2162_p10);

    ShuffleNetV2_mux_jbC_x_U65 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => weight_0_V_q1,
        din2 => weight_1_V_q1,
        din3 => weight_2_V_q1,
        din4 => weight_3_V_q1,
        din5 => weight_4_V_q1,
        din6 => weight_5_V_q1,
        din7 => weight_6_V_q1,
        din8 => weight_7_V_q1,
        din9 => tmp_389_reg_3408,
        dout => grp_fu_2183_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_COMPUTE_ENGINE_fu_2110_ap_ready)) then 
                    ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    co3_reg_2064_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond10_fu_2379_p2))) then 
                co3_reg_2064 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                co3_reg_2064 <= co_18_reg_3398;
            end if; 
        end if;
    end process;

    co4_reg_2075_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = exitcond7_fu_2323_p2))) then 
                co4_reg_2075 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_1 = exitcond12_fu_3114_p2))) then 
                co4_reg_2075 <= co_17_reg_4674;
            end if; 
        end if;
    end process;

    co_reg_2006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond8_fu_2251_p2 = ap_const_lv1_1))) then 
                co_reg_2006 <= co_16_reg_3198;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_2006 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h1_reg_2040_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond6_fu_2204_p2 = ap_const_lv1_1))) then 
                h1_reg_2040 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = exitcond10_fu_2379_p2))) then 
                h1_reg_2040 <= h_14_fu_2448_p2;
            end if; 
        end if;
    end process;

    h5_reg_2086_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_lv1_0 = exitcond9_fu_3072_p2))) then 
                h5_reg_2086 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond_fu_3155_p2))) then 
                h5_reg_2086 <= h_16_fu_3175_p2;
            end if; 
        end if;
    end process;

    h_reg_2017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond6_fu_2204_p2 = ap_const_lv1_0))) then 
                h_reg_2017 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond11_fu_2292_p2 = ap_const_lv1_1))) then 
                h_reg_2017 <= h_15_fu_2313_p2;
            end if; 
        end if;
    end process;

    w2_reg_2052_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond7_fu_2323_p2))) then 
                w2_reg_2052 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond13_fu_2454_p2))) then 
                w2_reg_2052 <= w_17_fu_2611_p2;
            end if; 
        end if;
    end process;

    w6_reg_2098_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond12_fu_3114_p2))) then 
                w6_reg_2098 <= ap_const_lv6_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                w6_reg_2098 <= w_18_fu_3189_p2;
            end if; 
        end if;
    end process;

    w_reg_2029_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond8_fu_2251_p2))) then 
                w_reg_2029 <= ap_const_lv6_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                w_reg_2029 <= w_16_reg_3229;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond6_fu_2204_p2 = ap_const_lv1_0))) then
                bias_V_addr_reg_3208 <= tmp_fu_2216_p1(5 - 1 downto 0);
                    tmp_293_reg_3203(10 downto 1) <= tmp_293_fu_2245_p2(10 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                co_16_reg_3198 <= co_16_fu_2210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                co_17_reg_4674 <= co_17_fu_3078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                co_18_reg_3398 <= co_18_fu_2460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = exitcond10_fu_2379_p2))) then
                conv1_output_p_V_0_a_1_reg_3365 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_0_a_2_reg_3370 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_0_a_reg_3360 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_1_a_1_reg_3320 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_1_a_2_reg_3325 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_1_a_reg_3315 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_2_a_1_reg_3275 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_2_a_2_reg_3280 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_2_a_reg_3270 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_3_a_1_reg_3335 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_3_a_2_reg_3340 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_3_a_reg_3330 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_4_a_1_reg_3305 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_4_a_2_reg_3310 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_4_a_reg_3300 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_5_a_1_reg_3290 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_5_a_2_reg_3295 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_5_a_reg_3285 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_6_a_1_reg_3350 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_6_a_2_reg_3355 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_6_a_reg_3345 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                conv1_output_p_V_7_a_1_reg_3380 <= tmp_344_cast_fu_2419_p1(12 - 1 downto 0);
                conv1_output_p_V_7_a_2_reg_3385 <= tmp_345_cast_fu_2436_p1(12 - 1 downto 0);
                conv1_output_p_V_7_a_reg_3375 <= tmp_343_cast_fu_2402_p1(12 - 1 downto 0);
                    tmp_192_cast1_reg_3265(5 downto 0) <= tmp_192_cast1_fu_2385_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                conv1_output_p_V_0_l_1_reg_3655 <= conv1_output_p_V_0_q1;
                conv1_output_p_V_0_l_reg_3610 <= conv1_output_p_V_0_q0;
                conv1_output_p_V_1_l_1_reg_3660 <= conv1_output_p_V_1_q1;
                conv1_output_p_V_1_l_reg_3620 <= conv1_output_p_V_1_q0;
                conv1_output_p_V_2_l_1_reg_3665 <= conv1_output_p_V_2_q1;
                conv1_output_p_V_2_l_reg_3625 <= conv1_output_p_V_2_q0;
                conv1_output_p_V_3_l_1_reg_3670 <= conv1_output_p_V_3_q1;
                conv1_output_p_V_3_l_reg_3630 <= conv1_output_p_V_3_q0;
                conv1_output_p_V_4_l_1_reg_3675 <= conv1_output_p_V_4_q1;
                conv1_output_p_V_4_l_reg_3635 <= conv1_output_p_V_4_q0;
                conv1_output_p_V_5_l_1_reg_3680 <= conv1_output_p_V_5_q1;
                conv1_output_p_V_5_l_reg_3640 <= conv1_output_p_V_5_q0;
                conv1_output_p_V_6_l_1_reg_3685 <= conv1_output_p_V_6_q1;
                conv1_output_p_V_6_l_reg_3645 <= conv1_output_p_V_6_q0;
                conv1_output_p_V_7_l_1_reg_3690 <= conv1_output_p_V_7_q1;
                conv1_output_p_V_7_l_reg_3650 <= conv1_output_p_V_7_q0;
                tmp_201_reg_3605 <= grp_fu_2162_p10;
                tmp_202_reg_3615 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                conv1_output_p_V_0_l_2_reg_3785 <= conv1_output_p_V_0_q0;
                conv1_output_p_V_1_l_2_reg_3790 <= conv1_output_p_V_1_q0;
                conv1_output_p_V_2_l_2_reg_3795 <= conv1_output_p_V_2_q0;
                conv1_output_p_V_3_l_2_reg_3800 <= conv1_output_p_V_3_q0;
                conv1_output_p_V_4_l_2_reg_3805 <= conv1_output_p_V_4_q0;
                conv1_output_p_V_5_l_2_reg_3810 <= conv1_output_p_V_5_q0;
                conv1_output_p_V_6_l_2_reg_3815 <= conv1_output_p_V_6_q0;
                conv1_output_p_V_7_l_2_reg_3820 <= conv1_output_p_V_7_q0;
                tmp_203_reg_3775 <= grp_fu_2162_p10;
                tmp_204_reg_3780 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                isneg_reg_4651 <= p_Val2_61_fu_2998_p2(8 downto 8);
                newsignbit_reg_4664 <= p_Val2_62_fu_3012_p2(7 downto 7);
                p_Val2_62_reg_4658 <= p_Val2_62_fu_3012_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond13_fu_2454_p2))) then
                output_V_addr_1_reg_3403 <= tmp_358_cast_fu_2532_p1(15 - 1 downto 0);
                    tmp_318_reg_3414(7 downto 3) <= tmp_318_fu_2575_p2(7 downto 3);
                tmp_389_reg_3408 <= tmp_389_fu_2537_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond_fu_3155_p2))) then
                output_V_addr_2_reg_4695 <= tmp_385_cast_fu_3170_p1(15 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_COMPUTE_ENGINE_fu_2110_ap_done = ap_const_logic_1))) then
                p_Val2_60_reg_4645 <= grp_COMPUTE_ENGINE_fu_2110_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_205_reg_3905 <= grp_fu_2162_p10;
                tmp_206_reg_3910 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                tmp_207_reg_3995 <= grp_fu_2162_p10;
                tmp_208_reg_4000 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                tmp_209_reg_4085 <= grp_fu_2162_p10;
                tmp_210_reg_4090 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_211_reg_4175 <= grp_fu_2162_p10;
                tmp_212_reg_4180 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_213_reg_4265 <= grp_fu_2162_p10;
                tmp_214_reg_4270 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_215_reg_4355 <= grp_fu_2162_p10;
                tmp_216_reg_4360 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                tmp_217_reg_4445 <= grp_fu_2162_p10;
                tmp_218_reg_4450 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                tmp_219_reg_4535 <= grp_fu_2162_p10;
                tmp_220_reg_4540 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_221_reg_4625 <= grp_fu_2162_p10;
                tmp_222_reg_4630 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                tmp_223_reg_4635 <= grp_fu_2162_p10;
                tmp_224_reg_4640 <= grp_fu_2183_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = exitcond7_fu_2323_p2))) then
                    tmp_296_reg_3247(11 downto 1) <= tmp_296_fu_2357_p2(11 downto 1);
                    tmp_297_reg_3252(11 downto 1) <= tmp_297_fu_2367_p2(11 downto 1);
                    tmp_298_reg_3257(12 downto 1) <= tmp_298_fu_2373_p2(12 downto 1);
                    tmp_cast_reg_3242(5 downto 0) <= tmp_cast_fu_2329_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = exitcond8_fu_2251_p2))) then
                    tmp_300_reg_3216(15 downto 1) <= tmp_300_fu_2286_p2(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_lv1_0 = exitcond9_fu_3072_p2))) then
                    tmp_303_reg_4679(10 downto 1) <= tmp_303_fu_3108_p2(10 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond11_fu_2292_p2))) then
                tmp_307_reg_3224 <= tmp_307_fu_2302_p2;
                w_16_reg_3229 <= w_16_fu_2307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond12_fu_3114_p2))) then
                    tmp_309_reg_4687(15 downto 1) <= tmp_309_fu_3149_p2(15 downto 1);
            end if;
        end if;
    end process;
    tmp_293_reg_3203(0) <= '0';
    tmp_300_reg_3216(0) <= '0';
    tmp_cast_reg_3242(10 downto 6) <= "00000";
    tmp_296_reg_3247(0) <= '0';
    tmp_297_reg_3252(0) <= '0';
    tmp_298_reg_3257(0) <= '0';
    tmp_192_cast1_reg_3265(15 downto 6) <= "0000000000";
    tmp_318_reg_3414(2 downto 0) <= "000";
    tmp_303_reg_4679(0) <= '0';
    tmp_309_reg_4687(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond6_fu_2204_p2, ap_CS_fsm_state3, exitcond8_fu_2251_p2, ap_CS_fsm_state4, exitcond11_fu_2292_p2, ap_CS_fsm_state6, exitcond7_fu_2323_p2, ap_CS_fsm_state7, exitcond10_fu_2379_p2, ap_CS_fsm_state8, exitcond13_fu_2454_p2, ap_CS_fsm_state22, grp_COMPUTE_ENGINE_fu_2110_ap_done, ap_CS_fsm_state25, exitcond9_fu_3072_p2, ap_CS_fsm_state26, exitcond12_fu_3114_p2, ap_CS_fsm_state27, exitcond_fu_3155_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond6_fu_2204_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond8_fu_2251_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond11_fu_2292_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = exitcond7_fu_2323_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = exitcond10_fu_2379_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = exitcond13_fu_2454_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_COMPUTE_ENGINE_fu_2110_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_lv1_1 = exitcond9_fu_3072_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_1 = exitcond12_fu_3114_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond_fu_3155_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state25, exitcond9_fu_3072_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_lv1_1 = exitcond9_fu_3072_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state25, exitcond9_fu_3072_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_lv1_1 = exitcond9_fu_3072_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_address0 <= bias_V_addr_reg_3208;

    bias_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_3044_p2 <= (newsignbit_reg_4664 or isneg_not_fu_3039_p2);
    brmerge_i_i_i_fu_3035_p2 <= (isneg_reg_4651 xor newsignbit_reg_4664);
    co_16_fu_2210_p2 <= std_logic_vector(unsigned(co_reg_2006) + unsigned(ap_const_lv5_1));
    co_17_fu_3078_p2 <= std_logic_vector(unsigned(co4_reg_2075) + unsigned(ap_const_lv5_1));
    co_18_fu_2460_p2 <= std_logic_vector(unsigned(co3_reg_2064) + unsigned(ap_const_lv5_1));

    conv1_output_p_V_0_address0_assign_proc : process(conv1_output_p_V_0_a_reg_3360, conv1_output_p_V_0_a_2_reg_3370, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_0_address0 <= conv1_output_p_V_0_a_2_reg_3370;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_0_address0 <= conv1_output_p_V_0_a_reg_3360;
        else 
            conv1_output_p_V_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_0_address1 <= conv1_output_p_V_0_a_1_reg_3365;

    conv1_output_p_V_0_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_0_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_0_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_0_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_1_address0_assign_proc : process(conv1_output_p_V_1_a_reg_3315, conv1_output_p_V_1_a_2_reg_3325, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_1_address0 <= conv1_output_p_V_1_a_2_reg_3325;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_1_address0 <= conv1_output_p_V_1_a_reg_3315;
        else 
            conv1_output_p_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_1_address1 <= conv1_output_p_V_1_a_1_reg_3320;

    conv1_output_p_V_1_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_1_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_1_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_1_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_2_address0_assign_proc : process(conv1_output_p_V_2_a_reg_3270, conv1_output_p_V_2_a_2_reg_3280, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_2_address0 <= conv1_output_p_V_2_a_2_reg_3280;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_2_address0 <= conv1_output_p_V_2_a_reg_3270;
        else 
            conv1_output_p_V_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_2_address1 <= conv1_output_p_V_2_a_1_reg_3275;

    conv1_output_p_V_2_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_2_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_2_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_2_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_3_address0_assign_proc : process(conv1_output_p_V_3_a_reg_3330, conv1_output_p_V_3_a_2_reg_3340, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_3_address0 <= conv1_output_p_V_3_a_2_reg_3340;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_3_address0 <= conv1_output_p_V_3_a_reg_3330;
        else 
            conv1_output_p_V_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_3_address1 <= conv1_output_p_V_3_a_1_reg_3335;

    conv1_output_p_V_3_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_3_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_3_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_3_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_4_address0_assign_proc : process(conv1_output_p_V_4_a_reg_3300, conv1_output_p_V_4_a_2_reg_3310, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_4_address0 <= conv1_output_p_V_4_a_2_reg_3310;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_4_address0 <= conv1_output_p_V_4_a_reg_3300;
        else 
            conv1_output_p_V_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_4_address1 <= conv1_output_p_V_4_a_1_reg_3305;

    conv1_output_p_V_4_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_4_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_4_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_4_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_5_address0_assign_proc : process(conv1_output_p_V_5_a_reg_3285, conv1_output_p_V_5_a_2_reg_3295, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_5_address0 <= conv1_output_p_V_5_a_2_reg_3295;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_5_address0 <= conv1_output_p_V_5_a_reg_3285;
        else 
            conv1_output_p_V_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_5_address1 <= conv1_output_p_V_5_a_1_reg_3290;

    conv1_output_p_V_5_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_5_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_5_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_5_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_6_address0_assign_proc : process(conv1_output_p_V_6_a_reg_3345, conv1_output_p_V_6_a_2_reg_3355, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_6_address0 <= conv1_output_p_V_6_a_2_reg_3355;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_6_address0 <= conv1_output_p_V_6_a_reg_3345;
        else 
            conv1_output_p_V_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_6_address1 <= conv1_output_p_V_6_a_1_reg_3350;

    conv1_output_p_V_6_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_6_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_6_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_6_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_7_address0_assign_proc : process(conv1_output_p_V_7_a_reg_3375, conv1_output_p_V_7_a_2_reg_3385, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv1_output_p_V_7_address0 <= conv1_output_p_V_7_a_2_reg_3385;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_7_address0 <= conv1_output_p_V_7_a_reg_3375;
        else 
            conv1_output_p_V_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_output_p_V_7_address1 <= conv1_output_p_V_7_a_1_reg_3380;

    conv1_output_p_V_7_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            conv1_output_p_V_7_ce0 <= ap_const_logic_1;
        else 
            conv1_output_p_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_p_V_7_ce1_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv1_output_p_V_7_ce1 <= ap_const_logic_1;
        else 
            conv1_output_p_V_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_2379_p2 <= "1" when (w2_reg_2052 = ap_const_lv6_21) else "0";
    exitcond11_fu_2292_p2 <= "1" when (w_reg_2029 = ap_const_lv6_21) else "0";
    exitcond12_fu_3114_p2 <= "1" when (h5_reg_2086 = ap_const_lv6_21) else "0";
    exitcond13_fu_2454_p2 <= "1" when (co3_reg_2064 = ap_const_lv5_18) else "0";
    exitcond6_fu_2204_p2 <= "1" when (co_reg_2006 = ap_const_lv5_18) else "0";
    exitcond7_fu_2323_p2 <= "1" when (h1_reg_2040 = ap_const_lv6_21) else "0";
    exitcond8_fu_2251_p2 <= "1" when (h_reg_2017 = ap_const_lv6_21) else "0";
    exitcond9_fu_3072_p2 <= "1" when (co4_reg_2075 = ap_const_lv5_18) else "0";
    exitcond_fu_3155_p2 <= "1" when (w6_reg_2098 = ap_const_lv6_21) else "0";
    grp_COMPUTE_ENGINE_fu_2110_ap_start <= ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start;
    h_14_fu_2448_p2 <= std_logic_vector(unsigned(h1_reg_2040) + unsigned(ap_const_lv6_1));
    h_15_fu_2313_p2 <= std_logic_vector(unsigned(h_reg_2017) + unsigned(ap_const_lv6_1));
    h_16_fu_3175_p2 <= std_logic_vector(unsigned(h5_reg_2086) + unsigned(ap_const_lv6_1));
    isneg_not_fu_3039_p2 <= (isneg_reg_4651 xor ap_const_lv1_1);
    newIndex_fu_2541_p4 <= co3_reg_2064(4 downto 3);

    output_V_address0_assign_proc : process(output_V_addr_1_reg_3403, ap_CS_fsm_state22, output_V_addr_2_reg_4695, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state5, ap_CS_fsm_state24, tmp_346_cast_fu_2319_p1, tmp_385_cast_fu_3170_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            output_V_address0 <= output_V_addr_2_reg_4695;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            output_V_address0 <= tmp_385_cast_fu_3170_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            output_V_address0 <= output_V_addr_1_reg_3403;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_V_address0 <= tmp_346_cast_fu_2319_p1(15 - 1 downto 0);
        else 
            output_V_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_V_ce0_assign_proc : process(ap_CS_fsm_state22, grp_COMPUTE_ENGINE_fu_2110_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state5, ap_CS_fsm_state24)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_COMPUTE_ENGINE_fu_2110_ap_done = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_V_d0_assign_proc : process(bias_V_q0, ap_CS_fsm_state28, ap_CS_fsm_state5, ap_CS_fsm_state24, this_assign_32_1_fu_3063_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            output_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_V_d0 <= this_assign_32_1_fu_3063_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_V_d0 <= bias_V_q0;
        else 
            output_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_V_we0_assign_proc : process(ap_CS_fsm_state28, ap_CS_fsm_state5, ap_CS_fsm_state24, tmp_392_fu_3181_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = tmp_392_fu_3181_p3)))) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_61_fu_2998_p2 <= std_logic_vector(signed(tmp_197_fu_2995_p1) + signed(tmp_196_fu_2991_p1));
    p_Val2_62_fu_3012_p2 <= std_logic_vector(unsigned(p_Val2_60_reg_4645) + unsigned(output_V_q0));
    p_Val2_63_mux_fu_3049_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_fu_3035_p2(0) = '1') else 
        p_Val2_62_reg_4658;
    p_Val2_s_117_fu_3056_p3 <= 
        ap_const_lv8_80 when (underflow_fu_3030_p2(0) = '1') else 
        p_Val2_62_reg_4658;
    p_shl10_cast_fu_2474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_310_fu_2466_p3),11));
    p_shl11_cast_fu_2486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_311_fu_2478_p3),11));
    p_shl12_cast_fu_3092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_301_fu_3084_p3),11));
    p_shl13_cast_fu_3104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_302_fu_3096_p3),11));
    p_shl14_cast_fu_3129_p3 <= (tmp_308_fu_3124_p2 & ap_const_lv5_0);
    p_shl15_cast_fu_3145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_387_fu_3137_p3),16));
    p_shl1_cast_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_292_fu_2233_p3),11));
    p_shl2_cast_fu_2266_p3 <= (tmp_299_fu_2261_p2 & ap_const_lv5_0);
    p_shl3_cast_fu_2282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_386_fu_2274_p3),16));
    p_shl4_cast_fu_2341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_294_fu_2333_p3),12));
    p_shl5_cast_fu_2353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_295_fu_2345_p3),12));
    p_shl6_cast_fu_2559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_316_fu_2551_p3),8));
    p_shl7_cast_fu_2571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_317_fu_2563_p3),8));
    p_shl8_cast_fu_2501_p3 <= (tmp_313_fu_2496_p2 & ap_const_lv5_0);
    p_shl9_cast_fu_2517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_388_fu_2509_p3),16));
    p_shl_cast_fu_2229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_2221_p3),11));
    this_assign_32_1_fu_3063_p3 <= 
        p_Val2_63_mux_fu_3049_p3 when (brmerge_fu_3044_p2(0) = '1') else 
        p_Val2_s_117_fu_3056_p3;
    tmp_190_cast_fu_2257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_2017),11));
    tmp_192_cast1_fu_2385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_2052),16));
    tmp_192_cast2_fu_2389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_2052),13));
    tmp_192_cast_fu_2393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w2_reg_2052),12));
    tmp_193_cast_fu_2298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_2029),16));
    tmp_194_cast_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h5_reg_2086),11));
        tmp_196_fu_2991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(output_V_q0),9));

        tmp_197_fu_2995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_60_reg_4645),9));

    tmp_198_fu_3025_p2 <= (newsignbit_reg_4664 xor ap_const_lv1_1);
    tmp_199_cast_fu_3161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w6_reg_2098),16));
    tmp_292_fu_2233_p3 <= (co_reg_2006 & ap_const_lv1_0);
    tmp_293_fu_2245_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_2241_p1) + unsigned(p_shl_cast_fu_2229_p1));
    tmp_294_fu_2333_p3 <= (h1_reg_2040 & ap_const_lv5_0);
    tmp_295_fu_2345_p3 <= (h1_reg_2040 & ap_const_lv1_0);
    tmp_296_fu_2357_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_2353_p1) + unsigned(p_shl4_cast_fu_2341_p1));
    tmp_297_fu_2367_p2 <= std_logic_vector(unsigned(tmp_296_fu_2357_p2) + unsigned(ap_const_lv12_484));
    tmp_298_fu_2373_p2 <= std_logic_vector(unsigned(tmp_333_cast_fu_2363_p1) + unsigned(ap_const_lv13_908));
    tmp_299_fu_2261_p2 <= std_logic_vector(unsigned(tmp_190_cast_fu_2257_p1) + unsigned(tmp_293_reg_3203));
    tmp_300_fu_2286_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_2266_p3) + unsigned(p_shl3_cast_fu_2282_p1));
    tmp_301_fu_3084_p3 <= (co4_reg_2075 & ap_const_lv5_0);
    tmp_302_fu_3096_p3 <= (co4_reg_2075 & ap_const_lv1_0);
    tmp_303_fu_3108_p2 <= std_logic_vector(unsigned(p_shl13_cast_fu_3104_p1) + unsigned(p_shl12_cast_fu_3092_p1));
    tmp_304_fu_2397_p2 <= std_logic_vector(unsigned(tmp_296_reg_3247) + unsigned(tmp_192_cast_fu_2393_p1));
    tmp_305_fu_2414_p2 <= std_logic_vector(unsigned(tmp_297_reg_3252) + unsigned(tmp_192_cast_fu_2393_p1));
    tmp_306_fu_2431_p2 <= std_logic_vector(unsigned(tmp_298_reg_3257) + unsigned(tmp_192_cast2_fu_2389_p1));
    tmp_307_fu_2302_p2 <= std_logic_vector(unsigned(tmp_300_reg_3216) + unsigned(tmp_193_cast_fu_2298_p1));
    tmp_308_fu_3124_p2 <= std_logic_vector(unsigned(tmp_194_cast_fu_3120_p1) + unsigned(tmp_303_reg_4679));
    tmp_309_fu_3149_p2 <= std_logic_vector(unsigned(p_shl14_cast_fu_3129_p3) + unsigned(p_shl15_cast_fu_3145_p1));
    tmp_310_fu_2466_p3 <= (co3_reg_2064 & ap_const_lv5_0);
    tmp_311_fu_2478_p3 <= (co3_reg_2064 & ap_const_lv1_0);
    tmp_312_fu_2490_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_2486_p1) + unsigned(p_shl10_cast_fu_2474_p1));
    tmp_313_fu_2496_p2 <= std_logic_vector(unsigned(tmp_312_fu_2490_p2) + unsigned(tmp_cast_reg_3242));
    tmp_314_fu_2521_p2 <= std_logic_vector(unsigned(p_shl9_cast_fu_2517_p1) + unsigned(p_shl8_cast_fu_2501_p3));
    tmp_315_fu_2527_p2 <= std_logic_vector(unsigned(tmp_314_fu_2521_p2) + unsigned(tmp_192_cast1_reg_3265));
    tmp_316_fu_2551_p3 <= (newIndex_fu_2541_p4 & ap_const_lv5_0);
    tmp_317_fu_2563_p3 <= (newIndex_fu_2541_p4 & ap_const_lv3_0);
    tmp_318_fu_2575_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_2559_p1) - unsigned(p_shl7_cast_fu_2571_p1));
    tmp_319_fu_2593_p2 <= (tmp_318_fu_2575_p2 or ap_const_lv8_1);
    tmp_320_fu_2617_p2 <= (tmp_318_reg_3414 or ap_const_lv8_2);
    tmp_321_fu_2634_p2 <= (tmp_318_reg_3414 or ap_const_lv8_3);
    tmp_322_fu_2651_p2 <= (tmp_318_reg_3414 or ap_const_lv8_4);
    tmp_323_fu_2668_p2 <= (tmp_318_reg_3414 or ap_const_lv8_5);
    tmp_324_fu_2685_p2 <= (tmp_318_reg_3414 or ap_const_lv8_6);
    tmp_325_fu_2702_p2 <= (tmp_318_reg_3414 or ap_const_lv8_7);
    tmp_326_fu_2719_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) + unsigned(tmp_318_reg_3414));
    tmp_327_fu_2736_p2 <= std_logic_vector(unsigned(ap_const_lv8_9) + unsigned(tmp_318_reg_3414));
    tmp_328_fu_2753_p2 <= std_logic_vector(unsigned(ap_const_lv8_A) + unsigned(tmp_318_reg_3414));
    tmp_329_fu_2770_p2 <= std_logic_vector(unsigned(ap_const_lv8_B) + unsigned(tmp_318_reg_3414));
    tmp_330_fu_2787_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) + unsigned(tmp_318_reg_3414));
    tmp_331_fu_2804_p2 <= std_logic_vector(unsigned(ap_const_lv8_D) + unsigned(tmp_318_reg_3414));
    tmp_332_fu_2821_p2 <= std_logic_vector(unsigned(ap_const_lv8_E) + unsigned(tmp_318_reg_3414));
    tmp_333_cast_fu_2363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_296_fu_2357_p2),13));
    tmp_333_fu_2838_p2 <= std_logic_vector(unsigned(ap_const_lv8_F) + unsigned(tmp_318_reg_3414));
    tmp_334_fu_2855_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) + unsigned(tmp_318_reg_3414));
    tmp_335_fu_2872_p2 <= std_logic_vector(unsigned(ap_const_lv8_11) + unsigned(tmp_318_reg_3414));
    tmp_336_fu_2889_p2 <= std_logic_vector(unsigned(ap_const_lv8_12) + unsigned(tmp_318_reg_3414));
    tmp_337_fu_2906_p2 <= std_logic_vector(unsigned(ap_const_lv8_13) + unsigned(tmp_318_reg_3414));
    tmp_338_fu_2923_p2 <= std_logic_vector(unsigned(ap_const_lv8_14) + unsigned(tmp_318_reg_3414));
    tmp_339_fu_2940_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) + unsigned(tmp_318_reg_3414));
    tmp_340_fu_2957_p2 <= std_logic_vector(unsigned(ap_const_lv8_16) + unsigned(tmp_318_reg_3414));
    tmp_341_fu_2974_p2 <= std_logic_vector(unsigned(ap_const_lv8_17) + unsigned(tmp_318_reg_3414));
    tmp_342_fu_3165_p2 <= std_logic_vector(unsigned(tmp_309_reg_4687) + unsigned(tmp_199_cast_fu_3161_p1));
    tmp_343_cast_fu_2402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_304_fu_2397_p2),64));
    tmp_344_cast_fu_2419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_305_fu_2414_p2),64));
        tmp_345_cast_fu_2436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_306_fu_2431_p2),64));

    tmp_346_cast_fu_2319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_307_reg_3224),64));
    tmp_358_cast_fu_2532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_315_fu_2527_p2),64));
        tmp_361_cast_fu_2581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_318_fu_2575_p2),64));

    tmp_362_cast_fu_2599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_319_fu_2593_p2),64));
        tmp_363_cast_fu_2622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_320_fu_2617_p2),64));

        tmp_364_cast_fu_2639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_321_fu_2634_p2),64));

        tmp_365_cast_fu_2656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_fu_2651_p2),64));

        tmp_366_cast_fu_2673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_323_fu_2668_p2),64));

        tmp_367_cast_fu_2690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_324_fu_2685_p2),64));

        tmp_368_cast_fu_2707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_325_fu_2702_p2),64));

        tmp_369_cast_fu_2724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_326_fu_2719_p2),64));

        tmp_370_cast_fu_2741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_327_fu_2736_p2),64));

        tmp_371_cast_fu_2758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_328_fu_2753_p2),64));

        tmp_372_cast_fu_2775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_329_fu_2770_p2),64));

        tmp_373_cast_fu_2792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_330_fu_2787_p2),64));

        tmp_374_cast_fu_2809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_331_fu_2804_p2),64));

        tmp_375_cast_fu_2826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_332_fu_2821_p2),64));

        tmp_376_cast_fu_2843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_333_fu_2838_p2),64));

        tmp_377_cast_fu_2860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_334_fu_2855_p2),64));

        tmp_378_cast_fu_2877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_335_fu_2872_p2),64));

        tmp_379_cast_fu_2894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_336_fu_2889_p2),64));

        tmp_380_cast_fu_2911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_337_fu_2906_p2),64));

        tmp_381_cast_fu_2928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_338_fu_2923_p2),64));

        tmp_382_cast_fu_2945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_339_fu_2940_p2),64));

        tmp_383_cast_fu_2962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_340_fu_2957_p2),64));

        tmp_384_cast_fu_2979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_341_fu_2974_p2),64));

    tmp_385_cast_fu_3170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_342_fu_3165_p2),64));
    tmp_386_fu_2274_p3 <= (tmp_299_fu_2261_p2 & ap_const_lv1_0);
    tmp_387_fu_3137_p3 <= (tmp_308_fu_3124_p2 & ap_const_lv1_0);
    tmp_388_fu_2509_p3 <= (tmp_313_fu_2496_p2 & ap_const_lv1_0);
    tmp_389_fu_2537_p1 <= co3_reg_2064(3 - 1 downto 0);
    tmp_392_fu_3181_p3 <= output_V_q0(7 downto 7);
    tmp_cast_fu_2329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h1_reg_2040),11));
    tmp_fu_2216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(co_reg_2006),64));
    tmp_s_fu_2221_p3 <= (co_reg_2006 & ap_const_lv5_0);
    underflow_fu_3030_p2 <= (isneg_reg_4651 and tmp_198_fu_3025_p2);
    w_16_fu_2307_p2 <= std_logic_vector(unsigned(w_reg_2029) + unsigned(ap_const_lv6_1));
    w_17_fu_2611_p2 <= std_logic_vector(unsigned(w2_reg_2052) + unsigned(ap_const_lv6_1));
    w_18_fu_3189_p2 <= std_logic_vector(unsigned(w6_reg_2098) + unsigned(ap_const_lv6_1));

    weight_0_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_0_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_0_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_0_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_0_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_0_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_0_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_0_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_0_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_0_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_0_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_0_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_0_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_0_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_0_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_0_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_0_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_0_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_0_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_0_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_0_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_0_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_0_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_0_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_0_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_0_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_0_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_0_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_0_V_ce0 <= ap_const_logic_1;
        else 
            weight_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_0_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_0_V_ce1 <= ap_const_logic_1;
        else 
            weight_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_1_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_1_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_1_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_1_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_1_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_1_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_1_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_1_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_1_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_1_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_1_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_1_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_1_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_1_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_1_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_1_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_1_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_1_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_1_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_1_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_1_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_1_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_1_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_1_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_1_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_1_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_1_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_1_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_1_V_ce0 <= ap_const_logic_1;
        else 
            weight_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_1_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_1_V_ce1 <= ap_const_logic_1;
        else 
            weight_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_2_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_2_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_2_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_2_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_2_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_2_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_2_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_2_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_2_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_2_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_2_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_2_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_2_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_2_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_2_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_2_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_2_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_2_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_2_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_2_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_2_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_2_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_2_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_2_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_2_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_2_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_2_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_2_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_2_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_2_V_ce0 <= ap_const_logic_1;
        else 
            weight_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_2_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_2_V_ce1 <= ap_const_logic_1;
        else 
            weight_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_3_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_3_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_3_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_3_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_3_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_3_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_3_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_3_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_3_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_3_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_3_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_3_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_3_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_3_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_3_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_3_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_3_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_3_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_3_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_3_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_3_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_3_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_3_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_3_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_3_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_3_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_3_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_3_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_3_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_3_V_ce0 <= ap_const_logic_1;
        else 
            weight_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_3_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_3_V_ce1 <= ap_const_logic_1;
        else 
            weight_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_4_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_4_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_4_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_4_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_4_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_4_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_4_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_4_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_4_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_4_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_4_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_4_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_4_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_4_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_4_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_4_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_4_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_4_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_4_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_4_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_4_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_4_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_4_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_4_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_4_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_4_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_4_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_4_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_4_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_4_V_ce0 <= ap_const_logic_1;
        else 
            weight_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_4_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_4_V_ce1 <= ap_const_logic_1;
        else 
            weight_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_5_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_5_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_5_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_5_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_5_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_5_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_5_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_5_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_5_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_5_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_5_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_5_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_5_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_5_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_5_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_5_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_5_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_5_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_5_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_5_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_5_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_5_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_5_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_5_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_5_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_5_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_5_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_5_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_5_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_5_V_ce0 <= ap_const_logic_1;
        else 
            weight_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_5_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_5_V_ce1 <= ap_const_logic_1;
        else 
            weight_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_6_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_6_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_6_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_6_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_6_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_6_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_6_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_6_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_6_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_6_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_6_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_6_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_6_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_6_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_6_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_6_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_6_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_6_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_6_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_6_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_6_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_6_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_6_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_6_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_6_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_6_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_6_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_6_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_6_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_6_V_ce0 <= ap_const_logic_1;
        else 
            weight_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_6_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_6_V_ce1 <= ap_const_logic_1;
        else 
            weight_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_7_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_361_cast_fu_2581_p1, tmp_363_cast_fu_2622_p1, tmp_365_cast_fu_2656_p1, tmp_367_cast_fu_2690_p1, tmp_369_cast_fu_2724_p1, tmp_371_cast_fu_2758_p1, tmp_373_cast_fu_2792_p1, tmp_375_cast_fu_2826_p1, tmp_377_cast_fu_2860_p1, tmp_379_cast_fu_2894_p1, tmp_381_cast_fu_2928_p1, tmp_383_cast_fu_2962_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_7_V_address0 <= tmp_383_cast_fu_2962_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_7_V_address0 <= tmp_381_cast_fu_2928_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_7_V_address0 <= tmp_379_cast_fu_2894_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_7_V_address0 <= tmp_377_cast_fu_2860_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_7_V_address0 <= tmp_375_cast_fu_2826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_7_V_address0 <= tmp_373_cast_fu_2792_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_7_V_address0 <= tmp_371_cast_fu_2758_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_7_V_address0 <= tmp_369_cast_fu_2724_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_7_V_address0 <= tmp_367_cast_fu_2690_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_7_V_address0 <= tmp_365_cast_fu_2656_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_7_V_address0 <= tmp_363_cast_fu_2622_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_7_V_address0 <= tmp_361_cast_fu_2581_p1(7 - 1 downto 0);
        else 
            weight_7_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_7_V_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_362_cast_fu_2599_p1, tmp_364_cast_fu_2639_p1, tmp_366_cast_fu_2673_p1, tmp_368_cast_fu_2707_p1, tmp_370_cast_fu_2741_p1, tmp_372_cast_fu_2775_p1, tmp_374_cast_fu_2809_p1, tmp_376_cast_fu_2843_p1, tmp_378_cast_fu_2877_p1, tmp_380_cast_fu_2911_p1, tmp_382_cast_fu_2945_p1, tmp_384_cast_fu_2979_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_7_V_address1 <= tmp_384_cast_fu_2979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_7_V_address1 <= tmp_382_cast_fu_2945_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_7_V_address1 <= tmp_380_cast_fu_2911_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_7_V_address1 <= tmp_378_cast_fu_2877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_7_V_address1 <= tmp_376_cast_fu_2843_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_7_V_address1 <= tmp_374_cast_fu_2809_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_7_V_address1 <= tmp_372_cast_fu_2775_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_7_V_address1 <= tmp_370_cast_fu_2741_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_7_V_address1 <= tmp_368_cast_fu_2707_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_7_V_address1 <= tmp_366_cast_fu_2673_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_7_V_address1 <= tmp_364_cast_fu_2639_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_7_V_address1 <= tmp_362_cast_fu_2599_p1(7 - 1 downto 0);
        else 
            weight_7_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    weight_7_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_7_V_ce0 <= ap_const_logic_1;
        else 
            weight_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_7_V_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            weight_7_V_ce1 <= ap_const_logic_1;
        else 
            weight_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
