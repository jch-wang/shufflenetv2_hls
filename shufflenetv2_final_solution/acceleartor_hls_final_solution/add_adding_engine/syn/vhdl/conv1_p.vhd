-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv1_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_V_ce0 : OUT STD_LOGIC;
    input_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_AWVALID : OUT STD_LOGIC;
    m_axi_weight_V_AWREADY : IN STD_LOGIC;
    m_axi_weight_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WVALID : OUT STD_LOGIC;
    m_axi_weight_V_WREADY : IN STD_LOGIC;
    m_axi_weight_V_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WLAST : OUT STD_LOGIC;
    m_axi_weight_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARVALID : OUT STD_LOGIC;
    m_axi_weight_V_ARREADY : IN STD_LOGIC;
    m_axi_weight_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weight_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weight_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weight_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RVALID : IN STD_LOGIC;
    m_axi_weight_V_RREADY : OUT STD_LOGIC;
    m_axi_weight_V_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_weight_V_RLAST : IN STD_LOGIC;
    m_axi_weight_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BVALID : IN STD_LOGIC;
    m_axi_weight_V_BREADY : OUT STD_LOGIC;
    m_axi_weight_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weight_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weight_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv1_weight_V3 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_0_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_0_V_ce0 : OUT STD_LOGIC;
    output_0_V_we0 : OUT STD_LOGIC;
    output_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_0_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_1_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_1_V_ce0 : OUT STD_LOGIC;
    output_1_V_we0 : OUT STD_LOGIC;
    output_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_2_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_2_V_ce0 : OUT STD_LOGIC;
    output_2_V_we0 : OUT STD_LOGIC;
    output_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_3_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_3_V_ce0 : OUT STD_LOGIC;
    output_3_V_we0 : OUT STD_LOGIC;
    output_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_4_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_4_V_ce0 : OUT STD_LOGIC;
    output_4_V_we0 : OUT STD_LOGIC;
    output_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_5_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_5_V_ce0 : OUT STD_LOGIC;
    output_5_V_we0 : OUT STD_LOGIC;
    output_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_6_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_6_V_ce0 : OUT STD_LOGIC;
    output_6_V_we0 : OUT STD_LOGIC;
    output_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    output_7_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_7_V_ce0 : OUT STD_LOGIC;
    output_7_V_we0 : OUT STD_LOGIC;
    output_7_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of conv1_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv10_288 : STD_LOGIC_VECTOR (9 downto 0) := "1010001000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv15_6000 : STD_LOGIC_VECTOR (14 downto 0) := "110000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight_V_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal weight_V_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter10_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten8_reg_658 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_669 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten9_reg_681 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_692 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_704 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_reg_716 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_reg_728 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten10_reg_843 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_2_reg_854 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten11_reg_865 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_2_reg_876 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_2_reg_887 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_reg_3960 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_flatten_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_flatten_reg_3965 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_5_fu_908_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten13_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten13_reg_3974 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_flatten13_reg_3974 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_926_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_947_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_3989 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_601_fu_954_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter10_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter11_tmp_601_reg_3996 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex17_mid2_v_reg_4000 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_exitcond_flatten_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_reg_4006 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten14_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten14_reg_4011 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_reg_4016 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_553_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_553_reg_4021 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_267_mid2_fu_996_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_267_mid2_reg_4027 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_op_fu_1004_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_op_reg_4034 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid2_fu_1170_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mid2_reg_4039 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_270_mid2_fu_1178_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_270_mid2_reg_4045 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_559_fu_1190_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_559_reg_4050 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_606_fu_1202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_606_reg_4056 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_607_fu_1206_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_607_reg_4061 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_1_fu_1210_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_1_reg_4066 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_next_fu_1216_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_V_addr_reg_4076 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_564_fu_1267_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter10_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter11_tmp_564_reg_4082 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_V_addr_read_reg_4087 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_fu_1290_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_reg_4102 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal exitcond33_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_cast_fu_1300_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_269_cast_reg_4110 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal exitcond35_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_31_fu_1304_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_7_fu_1316_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal m_7_reg_4123 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_272_fu_1322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_272_reg_4128 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond37_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_cast_fu_1342_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_274_cast_reg_4133 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_35_fu_1346_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_7_fu_1358_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_7_reg_4146 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_281_cast_fu_1364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_281_cast_reg_4151 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond40_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_cast_fu_1384_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_283_cast_reg_4156 : STD_LOGIC_VECTOR (12 downto 0);
    signal ci_8_fu_1394_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ci_8_reg_4164 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal tmp_286_cast_fu_1400_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_286_cast_reg_4169 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond41_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_V_addr_reg_4174 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_589_fu_1556_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_589_reg_4182 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal exitcond42_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_618_fu_1615_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_618_reg_4187 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_619_fu_1619_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_619_reg_4192 : STD_LOGIC_VECTOR (5 downto 0);
    signal co_36_7_fu_1623_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal co_36_7_reg_4197 : STD_LOGIC_VECTOR (4 downto 0);
    signal output_0_V_addr_2_reg_4202 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal output_1_V_addr_2_reg_4207 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_2_V_addr_2_reg_4212 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_3_V_addr_2_reg_4217 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_4_V_addr_2_reg_4222 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_5_V_addr_2_reg_4227 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_6_V_addr_2_reg_4232 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_7_V_addr_2_reg_4237 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_V_load_reg_4282 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1676_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_4287 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal output_0_V_load_reg_4292 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_621_reg_4297 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_1_fu_1694_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_1_reg_4302 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_1_V_load_reg_4307 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_626_reg_4312 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_2_fu_1712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_2_reg_4317 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_2_V_load_reg_4322 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_631_reg_4327 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_3_fu_1730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_3_reg_4332 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_3_V_load_reg_4337 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_636_reg_4342 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_4_fu_1748_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_4_reg_4347 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_4_V_load_reg_4352 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_641_reg_4357 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_5_fu_1766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_5_reg_4362 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_5_V_load_reg_4367 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_646_reg_4372 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_6_fu_1784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_6_reg_4377 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_6_V_load_reg_4382 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_651_reg_4387 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_91_7_fu_1802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_91_7_reg_4392 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_7_V_load_reg_4397 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_656_reg_4402 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_1827_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_4407 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_620_reg_4412 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_fu_1861_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_reg_4419 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_623_fu_1867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_623_reg_4425 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_fu_1881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_s_reg_4431 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_reg_4438 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_1_fu_1908_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_1_reg_4444 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_625_reg_4449 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_1_fu_1942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_1_reg_4456 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_628_fu_1948_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_628_reg_4462 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_1_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_1_reg_4468 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_4475 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_2_fu_1989_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_2_reg_4481 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_630_reg_4486 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_2_fu_2023_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_2_reg_4493 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_633_fu_2029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_633_reg_4499 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_2_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_2_reg_4505 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_reg_4512 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_3_fu_2070_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_3_reg_4518 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_635_reg_4523 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_3_fu_2104_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_3_reg_4530 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_638_fu_2110_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_638_reg_4536 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_3_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_3_reg_4542 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_reg_4549 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_4_fu_2151_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_4_reg_4555 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_640_reg_4560 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_4_fu_2185_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_4_reg_4567 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_643_fu_2191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_643_reg_4573 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_4_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_4_reg_4579 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_reg_4586 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_5_fu_2232_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_5_reg_4592 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_645_reg_4597 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_5_fu_2266_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_5_reg_4604 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_648_fu_2272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_648_reg_4610 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_5_fu_2286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_5_reg_4616 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_298_reg_4623 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_6_fu_2313_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_6_reg_4629 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_650_reg_4634 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_6_fu_2347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_6_reg_4641 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_653_fu_2353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_653_reg_4647 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_6_fu_2367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_6_reg_4653 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_299_reg_4660 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_92_7_fu_2394_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_92_7_reg_4666 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_655_reg_4671 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_7_fu_2428_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_7_reg_4678 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_658_fu_2434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_658_reg_4684 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_7_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_14_7_reg_4690 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_300_reg_4697 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_38_i_i_fu_2506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_reg_4703 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_291_fu_2522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_291_reg_4708 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_2533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_4713 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_4718 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_2555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_reg_4723 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_fu_2603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_1_reg_4728 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_1_fu_2619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_1_reg_4733 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_35_fu_2630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_35_reg_4738 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_2647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_reg_4743 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_fu_2652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_1_reg_4748 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_fu_2700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_2_reg_4753 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_2_fu_2716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_2_reg_4758 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_29_fu_2727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_29_reg_4763 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_2744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_4768 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_fu_2749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_2_reg_4773 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_fu_2797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_3_reg_4778 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_3_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_3_reg_4783 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_30_fu_2824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_30_reg_4788 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_4793 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_fu_2846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_3_reg_4798 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_fu_2894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_4_reg_4803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_4_fu_2910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_4_reg_4808 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_31_fu_2921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_31_reg_4813 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_2938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_reg_4818 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_fu_2943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_4_reg_4823 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_fu_2991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_5_reg_4828 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_5_fu_3007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_5_reg_4833 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_32_fu_3018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_32_reg_4838 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_3035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_reg_4843 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_fu_3040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_5_reg_4848 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_fu_3088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_6_reg_4853 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_6_fu_3104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_6_reg_4858 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_33_fu_3115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_33_reg_4863 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_3132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_reg_4868 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_fu_3137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_6_reg_4873 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_fu_3185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_7_reg_4878 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_7_fu_3201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_463_7_reg_4883 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_34_fu_3212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_34_reg_4888 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_fu_3229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_reg_4893 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_fu_3234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_7_reg_4898 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond34_fu_3480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal i_7_fu_3486_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_7_reg_4907 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_608_fu_3497_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_608_reg_4912 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_567_fu_3535_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_567_reg_4917 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_V_addr_reg_4922 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_576_fu_3576_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_576_reg_4930 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal exitcond36_fu_3541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_0_V_addr_1_reg_4938 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal exitcond39_fu_3582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_1_V_addr_1_reg_4943 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_2_V_addr_1_reg_4948 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_3_V_addr_1_reg_4953 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_4_V_addr_1_reg_4958 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_5_V_addr_1_reg_4963 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_6_V_addr_1_reg_4968 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_7_V_addr_1_reg_4973 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_7_fu_3609_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal isneg_reg_4983 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal p_Val2_4_fu_3658_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_reg_4990 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_reg_4996 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_6_fu_3726_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal exitcond_flatten15_fu_3732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten15_reg_5008 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state33_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state35_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal indvar_flatten_next1_7_fu_3738_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_flatten_next1_7_reg_5012 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal j_2_mid_fu_3756_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_mid_reg_5017 : STD_LOGIC_VECTOR (5 downto 0);
    signal arrayNo8_mid2_v_fu_3764_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal arrayNo8_mid2_v_reg_5023 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_609_fu_3772_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_609_reg_5028 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp1_iter1_tmp_609_reg_5028 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex_mid2_v_reg_5033 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_mid_fu_3798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_5039 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_2_mid2_fu_3810_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_2_mid2_reg_5044 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next1_6_fu_3824_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar_flatten_next1_6_reg_5050 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_276_mid2_fu_3865_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_276_mid2_reg_5055 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state34_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state36_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_pp1_stage1_flag00011001 : BOOLEAN;
    signal tmp_572_fu_3875_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_572_reg_5060 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_5_fu_3881_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_5_reg_5066 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_0_V_addr_reg_5071 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_1_V_addr_reg_5076 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_2_V_addr_reg_5081 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_3_V_addr_reg_5086 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_4_V_addr_reg_5091 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_5_V_addr_reg_5096 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_6_V_addr_reg_5101 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_7_V_addr_reg_5106 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state33 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_flag00011011 : BOOLEAN;
    signal weight_temp_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_0_V_ce0 : STD_LOGIC;
    signal weight_temp_0_V_we0 : STD_LOGIC;
    signal weight_temp_0_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_1_V_ce0 : STD_LOGIC;
    signal weight_temp_1_V_we0 : STD_LOGIC;
    signal weight_temp_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_2_V_ce0 : STD_LOGIC;
    signal weight_temp_2_V_we0 : STD_LOGIC;
    signal weight_temp_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_3_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_3_V_ce0 : STD_LOGIC;
    signal weight_temp_3_V_we0 : STD_LOGIC;
    signal weight_temp_3_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_4_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_4_V_ce0 : STD_LOGIC;
    signal weight_temp_4_V_we0 : STD_LOGIC;
    signal weight_temp_4_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_5_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_5_V_ce0 : STD_LOGIC;
    signal weight_temp_5_V_we0 : STD_LOGIC;
    signal weight_temp_5_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_6_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_6_V_ce0 : STD_LOGIC;
    signal weight_temp_6_V_we0 : STD_LOGIC;
    signal weight_temp_6_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_temp_7_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal weight_temp_7_V_ce0 : STD_LOGIC;
    signal weight_temp_7_V_we0 : STD_LOGIC;
    signal weight_temp_7_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_phi_fu_673_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_696_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_phi_fu_708_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_phi_fu_720_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_phi_fu_732_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal h_reg_740 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal w_reg_752 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_reg_764 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_reg_775 : STD_LOGIC_VECTOR (1 downto 0);
    signal ci_reg_786 : STD_LOGIC_VECTOR (1 downto 0);
    signal co_reg_797 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal i_1_reg_808 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_819 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_1_reg_831 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten10_phi_fu_847_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal i_2_phi_fu_858_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten11_phi_fu_869_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_2_phi_fu_880_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_2_phi_fu_891_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_710_cast_fu_1273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_736_cast_fu_1470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_744_cast_fu_1629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_753_cast_fu_1657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_268_fu_3492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_728_cast_fu_3597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_723_cast_fu_3919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_fu_1256_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_weight_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00001001 : BOOLEAN;
    signal this_assign_1_fu_3261_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal this_assign_48_1_fu_3710_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_611_fu_3952_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage1_flag00000000 : BOOLEAN;
    signal this_assign_1_1_fu_3291_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_2_fu_3321_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_3_fu_3351_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_4_fu_3381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_5_fu_3411_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_6_fu_3441_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_assign_1_7_fu_3471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten13_op_fu_920_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_6_fu_934_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid_fu_940_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_6_fu_985_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_1013_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_cast_fu_1020_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_mid2_cast_fu_1010_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1024_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_551_fu_1037_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_1044_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex17_mid2_cast_fu_1034_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_552_fu_1048_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_267_mid2_cast_fu_1079_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_691_cast_fu_1030_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_554_fu_1082_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_602_fu_1092_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_fu_1100_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_695_cast_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_267_mid2_cast1_fu_1076_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_693_cast_fu_1054_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_556_fu_1110_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_603_fu_1120_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_fu_1128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_698_cast_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_flatten_not_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond64_mid_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_2_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_mid_fu_1069_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond64_mid1_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_558_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_604_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_4_fu_1154_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_270_mid2_cast_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_555_fu_1104_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_557_fu_1132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_561_fu_1196_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_605_fu_1222_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl_cast_fu_1232_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_275_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_560_fu_1227_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_563_fu_1250_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_275_cast_fu_1247_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_562_fu_1239_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_1326_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_cast_fu_1332_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_273_fu_1336_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_fu_1368_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp3_cast_fu_1374_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_282_fu_1378_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_578_fu_1404_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_579_fu_1416_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl8_cast_fu_1412_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl9_cast_fu_1424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_580_fu_1428_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_581_fu_1434_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_615_fu_1447_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl6_cast_fu_1439_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl7_cast_fu_1455_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_582_fu_1459_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_583_fu_1465_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal newIndex2_fu_1481_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_584_fu_1495_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_585_fu_1507_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl16_cast_fu_1515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl15_cast_fu_1503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_586_fu_1519_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_587_fu_1525_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_616_fu_1538_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl14_cast_fu_1546_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl13_cast_fu_1530_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_588_fu_1550_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_590_fu_1561_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl12_cast_fu_1569_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex3_cast_fu_1491_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_591_fu_1573_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_746_cast_fu_1579_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_592_fu_1583_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_617_fu_1592_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_1600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_747_cast_fu_1588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_593_fu_1604_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_594_fu_1610_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl10_cast_fu_1640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_595_fu_1647_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_596_fu_1652_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1676_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP2_V_fu_1673_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_1676_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_1_fu_1694_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_1_fu_1694_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_2_fu_1712_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_2_fu_1712_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_3_fu_1730_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_3_fu_1730_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_4_fu_1748_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_4_fu_1748_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_5_fu_1766_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_5_fu_1766_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_6_fu_1784_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_6_fu_1784_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_7_fu_1802_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_91_7_fu_1802_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_287_fu_1816_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_300_cast_fu_1823_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_288_fu_1850_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_fu_1840_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_622_fu_1853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_1_fu_1897_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_1_cast_fu_1904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_1_fu_1931_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_1_fu_1921_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_627_fu_1934_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_1_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_2_fu_1978_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_2_cast_fu_1985_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_2_fu_2012_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_2_fu_2002_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_632_fu_2015_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_2_fu_2037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_3_fu_2059_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_3_cast_fu_2066_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_3_fu_2093_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_3_fu_2083_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_637_fu_2096_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_3_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_4_fu_2140_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_4_cast_fu_2147_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_4_fu_2174_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_4_fu_2164_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_642_fu_2177_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_4_fu_2199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_5_fu_2221_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_5_cast_fu_2228_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_5_fu_2255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_5_fu_2245_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_647_fu_2258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_5_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_6_fu_2302_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_6_cast_fu_2309_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_6_fu_2336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_6_fu_2326_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_652_fu_2339_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_6_fu_2361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_450_7_fu_2383_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_450_7_cast_fu_2390_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_454_7_fu_2417_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_93_7_fu_2407_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_657_fu_2420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_7_fu_2442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_2476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_624_fu_2464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_290_fu_2488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_2481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_fu_2517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_2499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_demorgan_fu_2538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_2527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_2568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_2573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_629_fu_2561_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_1_fu_2585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_1_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_2578_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_1_fu_2608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_1_fu_2614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_2596_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_demorgan_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_2641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_2624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_2665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_634_fu_2658_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_2_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_2_fu_2688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_2675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_2_fu_2705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_2_fu_2711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_2693_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_demorgan_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_2738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_2721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_2767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_fu_2755_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_3_fu_2779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_3_fu_2785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2772_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_3_fu_2802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_3_fu_2808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_2790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_demorgan_fu_2829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_fu_2835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_2818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_2859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_2864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_644_fu_2852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_4_fu_2876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_4_fu_2882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_2869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_4_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_4_fu_2905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2887_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_demorgan_fu_2926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_fu_2932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_2956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_2961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_649_fu_2949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_5_fu_2973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_5_fu_2979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_2966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_5_fu_2996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_5_fu_3002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_5_fu_2984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp14_demorgan_fu_3023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp14_fu_3029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_fu_3012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_6_fu_3053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_3058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_654_fu_3046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_6_fu_3070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_6_fu_3076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_3063_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_6_fu_3093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_6_fu_3099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_3081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_demorgan_fu_3120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_fu_3126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_3109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_7_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_7_fu_3155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_659_fu_3143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_461_7_fu_3167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_i_7_fu_3173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_7_fu_3160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_7_fu_3190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_7_fu_3196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_7_fu_3178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_demorgan_fu_3217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_fu_3223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_3206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_3240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_3244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_fu_3249_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_3255_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_3270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_1_fu_3274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_1_fu_3279_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_1_198_fu_3285_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp9_fu_3300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_2_fu_3304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_2_fu_3309_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_2_199_fu_3315_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp11_fu_3330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_3_fu_3334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_3_fu_3339_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_3_200_fu_3345_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp13_fu_3360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_4_fu_3364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_4_fu_3369_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_4_201_fu_3375_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp15_fu_3390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_5_fu_3394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_5_fu_3399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_5_202_fu_3405_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp17_fu_3420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_6_fu_3424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_6_fu_3429_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_6_203_fu_3435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp19_fu_3450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_7_fu_3454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_94_mux_7_fu_3459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_94_7_204_fu_3465_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newIndex_fu_3501_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_565_fu_3511_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_566_fu_3523_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl17_cast_fu_3519_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl18_cast_fu_3531_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_271_cast_fu_3547_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_575_fu_3551_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_612_fu_3564_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl19_cast_fu_3556_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl20_cast_fu_3572_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_277_cast_fu_3588_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_577_fu_3592_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_s_208_fu_3615_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_278_fu_3636_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_279_fu_3640_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_3_fu_3644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_280_fu_3672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_not_fu_3686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_3682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_12_fu_3677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_3691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_89_mux_fu_3696_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_209_fu_3703_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten16_fu_3750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_3744_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond38_fu_3792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_1_fu_3786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_571_fu_3804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten44_op_fu_3818_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_568_fu_3832_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_569_fu_3843_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl24_cast_fu_3850_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl23_cast_fu_3839_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_8_fu_3860_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_570_fu_3854_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_276_mid2_cast_fu_3871_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_610_fu_3893_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl22_cast_fu_3900_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl21_cast_fu_3886_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_573_fu_3904_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_284_cast_fu_3910_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_574_fu_3913_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_292_fu_3931_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component ShuffleNetV2_mux_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv1_p_weight_tebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    weight_temp_0_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_0_V_address0,
        ce0 => weight_temp_0_V_ce0,
        we0 => weight_temp_0_V_we0,
        d0 => weight_temp_0_V_d0,
        q0 => weight_temp_0_V_q0);

    weight_temp_1_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_1_V_address0,
        ce0 => weight_temp_1_V_ce0,
        we0 => weight_temp_1_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_1_V_q0);

    weight_temp_2_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_2_V_address0,
        ce0 => weight_temp_2_V_ce0,
        we0 => weight_temp_2_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_2_V_q0);

    weight_temp_3_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_3_V_address0,
        ce0 => weight_temp_3_V_ce0,
        we0 => weight_temp_3_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_3_V_q0);

    weight_temp_4_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_4_V_address0,
        ce0 => weight_temp_4_V_ce0,
        we0 => weight_temp_4_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_4_V_q0);

    weight_temp_5_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_5_V_address0,
        ce0 => weight_temp_5_V_ce0,
        we0 => weight_temp_5_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_5_V_q0);

    weight_temp_6_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_6_V_address0,
        ce0 => weight_temp_6_V_ce0,
        we0 => weight_temp_6_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_6_V_q0);

    weight_temp_7_V_U : component conv1_p_weight_tebkb
    generic map (
        DataWidth => 8,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_temp_7_V_address0,
        ce0 => weight_temp_7_V_ce0,
        we0 => weight_temp_7_V_we0,
        d0 => weight_V_addr_read_reg_4087,
        q0 => weight_temp_7_V_q0);

    ShuffleNetV2_mux_jbC_U1 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => output_0_V_q0,
        din2 => output_1_V_q0,
        din3 => output_2_V_q0,
        din4 => output_3_V_q0,
        din5 => output_4_V_q0,
        din6 => output_5_V_q0,
        din7 => output_6_V_q0,
        din8 => output_7_V_q0,
        din9 => tmp_608_reg_4912,
        dout => p_Val2_s_208_fu_3615_p10);

    ShuffleNetV2_mux_jbC_U2 : component ShuffleNetV2_mux_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din1 => output_0_V_q0,
        din2 => output_1_V_q0,
        din3 => output_2_V_q0,
        din4 => output_3_V_q0,
        din5 => output_4_V_q0,
        din6 => output_5_V_q0,
        din7 => output_6_V_q0,
        din8 => output_7_V_q0,
        din9 => ap_reg_pp1_iter1_tmp_609_reg_5028,
        dout => tmp_292_fu_3931_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state33))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state33) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state33 xor ap_const_logic_1);
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter3_exitcond_flatten_reg_3965))) then
                    if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = m_axi_weight_V_ARREADY) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0))) then 
                        ap_reg_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ci_reg_786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_1 = exitcond42_fu_1475_p2))) then 
                ci_reg_786 <= ci_8_reg_4164;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond40_fu_1352_p2))) then 
                ci_reg_786 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    co_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond41_fu_1388_p2))) then 
                co_reg_797 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                co_reg_797 <= co_36_7_reg_4197;
            end if; 
        end if;
    end process;

    h_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                h_reg_740 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond35_fu_1294_p2 = ap_const_lv1_1))) then 
                h_reg_740 <= h_31_fu_1304_p2;
            end if; 
        end if;
    end process;

    i_1_reg_808_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond33_fu_1284_p2 = ap_const_lv1_1))) then 
                i_1_reg_808 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond36_fu_3541_p2))) then 
                i_1_reg_808 <= i_7_reg_4907;
            end if; 
        end if;
    end process;

    i_2_reg_854_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                i_2_reg_854 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                i_2_reg_854 <= arrayNo8_mid2_v_reg_5023;
            end if; 
        end if;
    end process;

    i_reg_669_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                i_reg_669 <= tmp_mid2_v_reg_3989;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_669 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten10_reg_843_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                indvar_flatten10_reg_843 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                indvar_flatten10_reg_843 <= indvar_flatten_next1_7_reg_5012;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_865_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                indvar_flatten11_reg_865 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                indvar_flatten11_reg_865 <= indvar_flatten_next1_6_reg_5050;
            end if; 
        end if;
    end process;

    indvar_flatten8_reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_902_p2))) then 
                indvar_flatten8_reg_658 <= indvar_flatten_next1_5_fu_908_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten8_reg_658 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten9_reg_681_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_902_p2))) then 
                indvar_flatten9_reg_681 <= indvar_flatten_next1_fu_926_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten9_reg_681 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_704_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                indvar_flatten_reg_704 <= indvar_flatten_next_fu_1216_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_704 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j_1_reg_819_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond34_fu_3480_p2))) then 
                j_1_reg_819 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = exitcond39_fu_3582_p2))) then 
                j_1_reg_819 <= j_7_fu_3609_p2;
            end if; 
        end if;
    end process;

    j_2_reg_876_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                j_2_reg_876 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                j_2_reg_876 <= tmp_276_mid2_reg_5055;
            end if; 
        end if;
    end process;

    j_reg_692_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                j_reg_692 <= tmp_267_mid2_reg_4027;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_692 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_1_reg_831_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = exitcond36_fu_3541_p2))) then 
                k_1_reg_831 <= ap_const_lv6_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                k_1_reg_831 <= k_6_fu_3726_p2;
            end if; 
        end if;
    end process;

    k_2_reg_887_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then 
                k_2_reg_887 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                k_2_reg_887 <= k_5_reg_5066;
            end if; 
        end if;
    end process;

    k_reg_716_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
                k_reg_716 <= tmp_270_mid2_reg_4045;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_reg_716 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    m_reg_764_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond40_fu_1352_p2))) then 
                m_reg_764 <= m_7_reg_4123;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond35_fu_1294_p2))) then 
                m_reg_764 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    n_reg_775_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond41_fu_1388_p2))) then 
                n_reg_775 <= n_7_reg_4146;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond37_fu_1310_p2))) then 
                n_reg_775 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
                p_reg_728 <= p_1_reg_4066;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_reg_728 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    w_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = exitcond33_fu_1284_p2))) then 
                w_reg_752 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_1 = exitcond37_fu_1310_p2))) then 
                w_reg_752 <= w_35_fu_1346_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter10_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter9_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter10_tmp_564_reg_4082 <= ap_reg_pp0_iter9_tmp_564_reg_4082;
                ap_reg_pp0_iter10_tmp_601_reg_3996 <= ap_reg_pp0_iter9_tmp_601_reg_3996;
                ap_reg_pp0_iter11_tmp_564_reg_4082 <= ap_reg_pp0_iter10_tmp_564_reg_4082;
                ap_reg_pp0_iter11_tmp_601_reg_3996 <= ap_reg_pp0_iter10_tmp_601_reg_3996;
                ap_reg_pp0_iter2_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter1_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter2_tmp_601_reg_3996 <= tmp_601_reg_3996;
                ap_reg_pp0_iter3_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter2_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter3_tmp_601_reg_3996 <= ap_reg_pp0_iter2_tmp_601_reg_3996;
                ap_reg_pp0_iter4_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter3_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter4_tmp_564_reg_4082 <= tmp_564_reg_4082;
                ap_reg_pp0_iter4_tmp_601_reg_3996 <= ap_reg_pp0_iter3_tmp_601_reg_3996;
                ap_reg_pp0_iter5_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter4_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter5_tmp_564_reg_4082 <= ap_reg_pp0_iter4_tmp_564_reg_4082;
                ap_reg_pp0_iter5_tmp_601_reg_3996 <= ap_reg_pp0_iter4_tmp_601_reg_3996;
                ap_reg_pp0_iter6_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter5_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter6_tmp_564_reg_4082 <= ap_reg_pp0_iter5_tmp_564_reg_4082;
                ap_reg_pp0_iter6_tmp_601_reg_3996 <= ap_reg_pp0_iter5_tmp_601_reg_3996;
                ap_reg_pp0_iter7_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter6_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter7_tmp_564_reg_4082 <= ap_reg_pp0_iter6_tmp_564_reg_4082;
                ap_reg_pp0_iter7_tmp_601_reg_3996 <= ap_reg_pp0_iter6_tmp_601_reg_3996;
                ap_reg_pp0_iter8_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter7_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter8_tmp_564_reg_4082 <= ap_reg_pp0_iter7_tmp_564_reg_4082;
                ap_reg_pp0_iter8_tmp_601_reg_3996 <= ap_reg_pp0_iter7_tmp_601_reg_3996;
                ap_reg_pp0_iter9_exitcond_flatten_reg_3965 <= ap_reg_pp0_iter8_exitcond_flatten_reg_3965;
                ap_reg_pp0_iter9_tmp_564_reg_4082 <= ap_reg_pp0_iter8_tmp_564_reg_4082;
                ap_reg_pp0_iter9_tmp_601_reg_3996 <= ap_reg_pp0_iter8_tmp_601_reg_3996;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten13_reg_3974 <= exitcond_flatten13_reg_3974;
                ap_reg_pp0_iter1_exitcond_flatten_reg_3965 <= exitcond_flatten_reg_3965;
                exitcond_flatten_reg_3965 <= exitcond_flatten_fu_902_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp1_iter1_tmp_609_reg_5028 <= tmp_609_reg_5028;
                exitcond_flatten15_reg_5008 <= exitcond_flatten15_fu_3732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten15_fu_3732_p2))) then
                arrayNo8_mid2_v_reg_5023 <= arrayNo8_mid2_v_fu_3764_p3;
                indvar_flatten_next1_6_reg_5050 <= indvar_flatten_next1_6_fu_3824_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_0 = exitcond34_fu_3480_p2))) then
                bias_V_addr_reg_4922 <= tmp_268_fu_3492_p1(5 - 1 downto 0);
                    tmp_567_reg_4917(7 downto 1) <= tmp_567_fu_3535_p2(7 downto 1);
                tmp_608_reg_4912 <= tmp_608_fu_3497_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                brmerge40_demorgan_i_29_reg_4763 <= brmerge40_demorgan_i_29_fu_2727_p2;
                brmerge40_demorgan_i_30_reg_4788 <= brmerge40_demorgan_i_30_fu_2824_p2;
                brmerge40_demorgan_i_31_reg_4813 <= brmerge40_demorgan_i_31_fu_2921_p2;
                brmerge40_demorgan_i_32_reg_4838 <= brmerge40_demorgan_i_32_fu_3018_p2;
                brmerge40_demorgan_i_33_reg_4863 <= brmerge40_demorgan_i_33_fu_3115_p2;
                brmerge40_demorgan_i_34_reg_4888 <= brmerge40_demorgan_i_34_fu_3212_p2;
                brmerge40_demorgan_i_35_reg_4738 <= brmerge40_demorgan_i_35_fu_2630_p2;
                brmerge40_demorgan_i_reg_4713 <= brmerge40_demorgan_i_fu_2533_p2;
                brmerge_i_i_i_1_reg_4748 <= brmerge_i_i_i_1_fu_2652_p2;
                brmerge_i_i_i_2_reg_4773 <= brmerge_i_i_i_2_fu_2749_p2;
                brmerge_i_i_i_3_reg_4798 <= brmerge_i_i_i_3_fu_2846_p2;
                brmerge_i_i_i_4_reg_4823 <= brmerge_i_i_i_4_fu_2943_p2;
                brmerge_i_i_i_5_reg_4848 <= brmerge_i_i_i_5_fu_3040_p2;
                brmerge_i_i_i_6_reg_4873 <= brmerge_i_i_i_6_fu_3137_p2;
                brmerge_i_i_i_7_reg_4898 <= brmerge_i_i_i_7_fu_3234_p2;
                brmerge_i_i_i_reg_4723 <= brmerge_i_i_i_fu_2555_p2;
                p_38_i_i_1_reg_4728 <= p_38_i_i_1_fu_2603_p2;
                p_38_i_i_2_reg_4753 <= p_38_i_i_2_fu_2700_p2;
                p_38_i_i_3_reg_4778 <= p_38_i_i_3_fu_2797_p2;
                p_38_i_i_4_reg_4803 <= p_38_i_i_4_fu_2894_p2;
                p_38_i_i_5_reg_4828 <= p_38_i_i_5_fu_2991_p2;
                p_38_i_i_6_reg_4853 <= p_38_i_i_6_fu_3088_p2;
                p_38_i_i_7_reg_4878 <= p_38_i_i_7_fu_3185_p2;
                p_38_i_i_reg_4703 <= p_38_i_i_fu_2506_p2;
                tmp_291_reg_4708 <= tmp_291_fu_2522_p2;
                tmp_463_1_reg_4733 <= tmp_463_1_fu_2619_p2;
                tmp_463_2_reg_4758 <= tmp_463_2_fu_2716_p2;
                tmp_463_3_reg_4783 <= tmp_463_3_fu_2813_p2;
                tmp_463_4_reg_4808 <= tmp_463_4_fu_2910_p2;
                tmp_463_5_reg_4833 <= tmp_463_5_fu_3007_p2;
                tmp_463_6_reg_4858 <= tmp_463_6_fu_3104_p2;
                tmp_463_7_reg_4883 <= tmp_463_7_fu_3201_p2;
                underflow_1_reg_4743 <= underflow_1_fu_2647_p2;
                underflow_2_reg_4768 <= underflow_2_fu_2744_p2;
                underflow_3_reg_4793 <= underflow_3_fu_2841_p2;
                underflow_4_reg_4818 <= underflow_4_fu_2938_p2;
                underflow_5_reg_4843 <= underflow_5_fu_3035_p2;
                underflow_6_reg_4868 <= underflow_6_fu_3132_p2;
                underflow_7_reg_4893 <= underflow_7_fu_3229_p2;
                underflow_reg_4718 <= underflow_fu_2550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                carry_14_1_reg_4468 <= carry_14_1_fu_1962_p2;
                carry_14_2_reg_4505 <= carry_14_2_fu_2043_p2;
                carry_14_3_reg_4542 <= carry_14_3_fu_2124_p2;
                carry_14_4_reg_4579 <= carry_14_4_fu_2205_p2;
                carry_14_5_reg_4616 <= carry_14_5_fu_2286_p2;
                carry_14_6_reg_4653 <= carry_14_6_fu_2367_p2;
                carry_14_7_reg_4690 <= carry_14_7_fu_2448_p2;
                carry_s_reg_4431 <= carry_s_fu_1881_p2;
                p_Val2_5_reg_4407 <= p_Val2_5_fu_1827_p2;
                p_Val2_7_reg_4419 <= p_Val2_7_fu_1861_p2;
                p_Val2_92_1_reg_4444 <= p_Val2_92_1_fu_1908_p2;
                p_Val2_92_2_reg_4481 <= p_Val2_92_2_fu_1989_p2;
                p_Val2_92_3_reg_4518 <= p_Val2_92_3_fu_2070_p2;
                p_Val2_92_4_reg_4555 <= p_Val2_92_4_fu_2151_p2;
                p_Val2_92_5_reg_4592 <= p_Val2_92_5_fu_2232_p2;
                p_Val2_92_6_reg_4629 <= p_Val2_92_6_fu_2313_p2;
                p_Val2_92_7_reg_4666 <= p_Val2_92_7_fu_2394_p2;
                p_Val2_94_1_reg_4456 <= p_Val2_94_1_fu_1942_p2;
                p_Val2_94_2_reg_4493 <= p_Val2_94_2_fu_2023_p2;
                p_Val2_94_3_reg_4530 <= p_Val2_94_3_fu_2104_p2;
                p_Val2_94_4_reg_4567 <= p_Val2_94_4_fu_2185_p2;
                p_Val2_94_5_reg_4604 <= p_Val2_94_5_fu_2266_p2;
                p_Val2_94_6_reg_4641 <= p_Val2_94_6_fu_2347_p2;
                p_Val2_94_7_reg_4678 <= p_Val2_94_7_fu_2428_p2;
                tmp_293_reg_4438 <= p_Val2_5_fu_1827_p2(15 downto 14);
                tmp_294_reg_4475 <= p_Val2_92_1_fu_1908_p2(15 downto 14);
                tmp_295_reg_4512 <= p_Val2_92_2_fu_1989_p2(15 downto 14);
                tmp_296_reg_4549 <= p_Val2_92_3_fu_2070_p2(15 downto 14);
                tmp_297_reg_4586 <= p_Val2_92_4_fu_2151_p2(15 downto 14);
                tmp_298_reg_4623 <= p_Val2_92_5_fu_2232_p2(15 downto 14);
                tmp_299_reg_4660 <= p_Val2_92_6_fu_2313_p2(15 downto 14);
                tmp_300_reg_4697 <= p_Val2_92_7_fu_2394_p2(15 downto 14);
                tmp_620_reg_4412 <= p_Val2_5_fu_1827_p2(15 downto 15);
                tmp_623_reg_4425 <= p_Val2_7_fu_1861_p2(7 downto 7);
                tmp_625_reg_4449 <= p_Val2_92_1_fu_1908_p2(15 downto 15);
                tmp_628_reg_4462 <= p_Val2_94_1_fu_1942_p2(7 downto 7);
                tmp_630_reg_4486 <= p_Val2_92_2_fu_1989_p2(15 downto 15);
                tmp_633_reg_4499 <= p_Val2_94_2_fu_2023_p2(7 downto 7);
                tmp_635_reg_4523 <= p_Val2_92_3_fu_2070_p2(15 downto 15);
                tmp_638_reg_4536 <= p_Val2_94_3_fu_2104_p2(7 downto 7);
                tmp_640_reg_4560 <= p_Val2_92_4_fu_2151_p2(15 downto 15);
                tmp_643_reg_4573 <= p_Val2_94_4_fu_2185_p2(7 downto 7);
                tmp_645_reg_4597 <= p_Val2_92_5_fu_2232_p2(15 downto 15);
                tmp_648_reg_4610 <= p_Val2_94_5_fu_2266_p2(7 downto 7);
                tmp_650_reg_4634 <= p_Val2_92_6_fu_2313_p2(15 downto 15);
                tmp_653_reg_4647 <= p_Val2_94_6_fu_2347_p2(7 downto 7);
                tmp_655_reg_4671 <= p_Val2_92_7_fu_2394_p2(15 downto 15);
                tmp_658_reg_4684 <= p_Val2_94_7_fu_2428_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                ci_8_reg_4164 <= ci_8_fu_1394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_0 = exitcond42_fu_1475_p2))) then
                co_36_7_reg_4197 <= co_36_7_fu_1623_p2;
                tmp_589_reg_4182 <= tmp_589_fu_1556_p2;
                tmp_618_reg_4187 <= tmp_618_fu_1615_p1;
                tmp_619_reg_4192 <= tmp_619_fu_1619_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_902_p2))) then
                exitcond_flatten13_reg_3974 <= exitcond_flatten13_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_reg_3965))) then
                exitcond_flatten14_reg_4011 <= exitcond_flatten14_fu_973_p2;
                exitcond_flatten_mid_reg_4016 <= exitcond_flatten_mid_fu_979_p2;
                indvar_flatten_op_reg_4034 <= indvar_flatten_op_fu_1004_p2;
                newIndex17_mid2_v_reg_4000 <= tmp_mid2_v_fu_947_p3(4 downto 3);
                not_exitcond_flatten_reg_4006 <= not_exitcond_flatten_fu_968_p2;
                tmp_553_reg_4021 <= tmp_553_fu_991_p2;
                tmp_601_reg_3996 <= tmp_601_fu_954_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_fu_3732_p2))) then
                exitcond_mid_reg_5039 <= exitcond_mid_fu_3798_p2;
                j_2_mid_reg_5017 <= j_2_mid_fu_3756_p3;
                k_2_mid2_reg_5044 <= k_2_mid2_fu_3810_p3;
                newIndex_mid2_v_reg_5033 <= arrayNo8_mid2_v_fu_3764_p3(4 downto 3);
                tmp_609_reg_5028 <= tmp_609_fu_3772_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                i_7_reg_4907 <= i_7_fu_3486_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                indvar_flatten_next1_7_reg_5012 <= indvar_flatten_next1_7_fu_3738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond41_fu_1388_p2))) then
                input_V_addr_reg_4174 <= tmp_736_cast_fu_1470_p1(12 - 1 downto 0);
                    tmp_286_cast_reg_4169(1 downto 0) <= tmp_286_cast_fu_1400_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                input_V_load_reg_4282 <= input_V_q0;
                output_0_V_addr_2_reg_4202 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_1_V_addr_2_reg_4207 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_2_V_addr_2_reg_4212 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_3_V_addr_2_reg_4217 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_4_V_addr_2_reg_4222 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_5_V_addr_2_reg_4227 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_6_V_addr_2_reg_4232 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
                output_7_V_addr_2_reg_4237 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                isneg_reg_4983 <= p_Val2_3_fu_3644_p2(8 downto 8);
                newsignbit_reg_4996 <= p_Val2_4_fu_3658_p2(7 downto 7);
                p_Val2_4_reg_4990 <= p_Val2_4_fu_3658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008))) then
                k_5_reg_5066 <= k_5_fu_3881_p2;
                tmp_276_mid2_reg_5055 <= tmp_276_mid2_fu_3865_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                m_7_reg_4123 <= m_7_fu_1316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                n_7_reg_4146 <= n_7_fu_1358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = exitcond39_fu_3582_p2))) then
                output_0_V_addr_1_reg_4938 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_1_V_addr_1_reg_4943 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_2_V_addr_1_reg_4948 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_3_V_addr_1_reg_4953 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_4_V_addr_1_reg_4958 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_5_V_addr_1_reg_4963 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_6_V_addr_1_reg_4968 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
                output_7_V_addr_1_reg_4973 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008))) then
                output_0_V_addr_reg_5071 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_1_V_addr_reg_5076 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_2_V_addr_reg_5081 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_3_V_addr_reg_5086 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_4_V_addr_reg_5091 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_5_V_addr_reg_5096 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_6_V_addr_reg_5101 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
                output_7_V_addr_reg_5106 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                output_0_V_load_reg_4292 <= output_0_V_q0;
                output_1_V_load_reg_4307 <= output_1_V_q0;
                output_2_V_load_reg_4322 <= output_2_V_q0;
                output_3_V_load_reg_4337 <= output_3_V_q0;
                output_4_V_load_reg_4352 <= output_4_V_q0;
                output_5_V_load_reg_4367 <= output_5_V_q0;
                output_6_V_load_reg_4382 <= output_6_V_q0;
                output_7_V_load_reg_4397 <= output_7_V_q0;
                p_Val2_91_1_reg_4302 <= p_Val2_91_1_fu_1694_p2;
                p_Val2_91_2_reg_4317 <= p_Val2_91_2_fu_1712_p2;
                p_Val2_91_3_reg_4332 <= p_Val2_91_3_fu_1730_p2;
                p_Val2_91_4_reg_4347 <= p_Val2_91_4_fu_1748_p2;
                p_Val2_91_5_reg_4362 <= p_Val2_91_5_fu_1766_p2;
                p_Val2_91_6_reg_4377 <= p_Val2_91_6_fu_1784_p2;
                p_Val2_91_7_reg_4392 <= p_Val2_91_7_fu_1802_p2;
                p_Val2_s_reg_4287 <= p_Val2_s_fu_1676_p2;
                tmp_621_reg_4297 <= p_Val2_s_fu_1676_p2(5 downto 5);
                tmp_626_reg_4312 <= p_Val2_91_1_fu_1694_p2(5 downto 5);
                tmp_631_reg_4327 <= p_Val2_91_2_fu_1712_p2(5 downto 5);
                tmp_636_reg_4342 <= p_Val2_91_3_fu_1730_p2(5 downto 5);
                tmp_641_reg_4357 <= p_Val2_91_4_fu_1748_p2(5 downto 5);
                tmp_646_reg_4372 <= p_Val2_91_5_fu_1766_p2(5 downto 5);
                tmp_651_reg_4387 <= p_Val2_91_6_fu_1784_p2(5 downto 5);
                tmp_656_reg_4402 <= p_Val2_91_7_fu_1802_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                p_1_reg_4066 <= p_1_fu_1210_p2;
                tmp_270_mid2_reg_4045 <= tmp_270_mid2_fu_1178_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965))) then
                p_mid2_reg_4039 <= p_mid2_fu_1170_p3;
                tmp_559_reg_4050 <= tmp_559_fu_1190_p2;
                tmp_606_reg_4056 <= tmp_606_fu_1202_p1;
                tmp_607_reg_4061 <= tmp_607_fu_1206_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                sext_reg_3960 <= sext_fu_898_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_3965))) then
                tmp_267_mid2_reg_4027 <= tmp_267_mid2_fu_996_p3;
                tmp_mid2_v_reg_3989 <= tmp_mid2_v_fu_947_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond35_fu_1294_p2))) then
                    tmp_269_cast_reg_4110(5 downto 0) <= tmp_269_cast_fu_1300_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond37_fu_1310_p2))) then
                    tmp_272_reg_4128(1 downto 0) <= tmp_272_fu_1322_p1(1 downto 0);
                    tmp_274_cast_reg_4133(5 downto 0) <= tmp_274_cast_fu_1342_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond40_fu_1352_p2))) then
                    tmp_281_cast_reg_4151(1 downto 0) <= tmp_281_cast_fu_1364_p1(1 downto 0);
                    tmp_283_cast_reg_4156(5 downto 0) <= tmp_283_cast_fu_1384_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_3965))) then
                tmp_564_reg_4082 <= tmp_564_fu_1267_p2;
                weight_V_addr_reg_4076 <= sum_fu_1256_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008))) then
                tmp_572_reg_5060 <= tmp_572_fu_3875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = exitcond36_fu_3541_p2))) then
                    tmp_576_reg_4930(12 downto 1) <= tmp_576_fu_3576_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = exitcond33_fu_1284_p2))) then
                    tmp_cast_reg_4102(5 downto 0) <= tmp_cast_fu_1290_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                weight_V_addr_read_reg_4087 <= m_axi_weight_V_RDATA;
            end if;
        end if;
    end process;
    tmp_cast_reg_4102(7 downto 6) <= "00";
    tmp_269_cast_reg_4110(12 downto 6) <= "0000000";
    tmp_272_reg_4128(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    tmp_274_cast_reg_4133(7 downto 6) <= "00";
    tmp_281_cast_reg_4151(7 downto 2) <= "000000";
    tmp_283_cast_reg_4156(12 downto 6) <= "0000000";
    tmp_286_cast_reg_4169(5 downto 2) <= "0000";
    tmp_567_reg_4917(0) <= '0';
    tmp_576_reg_4930(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter11, exitcond_flatten_fu_902_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state16, exitcond33_fu_1284_p2, ap_CS_fsm_state17, exitcond35_fu_1294_p2, ap_CS_fsm_state18, exitcond37_fu_1310_p2, ap_CS_fsm_state19, exitcond40_fu_1352_p2, ap_CS_fsm_state20, exitcond41_fu_1388_p2, ap_CS_fsm_state21, exitcond42_fu_1475_p2, exitcond34_fu_3480_p2, ap_CS_fsm_state27, ap_CS_fsm_state28, exitcond36_fu_3541_p2, ap_CS_fsm_state29, exitcond39_fu_3582_p2, exitcond_flatten15_fu_3732_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp0_stage0_flag00011011, ap_enable_reg_pp0_iter12, ap_block_pp1_stage0_flag00011011, ap_enable_reg_pp1_iter1, ap_block_pp1_stage1_flag00011011)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_902_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_902_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond33_fu_1284_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond35_fu_1294_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_lv1_1 = exitcond37_fu_1310_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_lv1_1 = exitcond40_fu_1352_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_lv1_1 = exitcond41_fu_1388_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (ap_const_lv1_1 = exitcond42_fu_1475_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = exitcond34_fu_3480_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_lv1_1 = exitcond36_fu_3541_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = exitcond39_fu_3582_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_pp1_stage0 => 
                if (((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten15_fu_3732_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten15_fu_3732_p2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if (((ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
        OP2_V_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_V_load_reg_4282),16));

    Range1_all_ones_1_fu_2568_p2 <= "1" when (tmp_294_reg_4475 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_2665_p2 <= "1" when (tmp_295_reg_4512 = ap_const_lv2_3) else "0";
    Range1_all_ones_3_fu_2762_p2 <= "1" when (tmp_296_reg_4549 = ap_const_lv2_3) else "0";
    Range1_all_ones_4_fu_2859_p2 <= "1" when (tmp_297_reg_4586 = ap_const_lv2_3) else "0";
    Range1_all_ones_5_fu_2956_p2 <= "1" when (tmp_298_reg_4623 = ap_const_lv2_3) else "0";
    Range1_all_ones_6_fu_3053_p2 <= "1" when (tmp_299_reg_4660 = ap_const_lv2_3) else "0";
    Range1_all_ones_7_fu_3150_p2 <= "1" when (tmp_300_reg_4697 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_2471_p2 <= "1" when (tmp_293_reg_4438 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_2573_p2 <= "1" when (tmp_294_reg_4475 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_2670_p2 <= "1" when (tmp_295_reg_4512 = ap_const_lv2_0) else "0";
    Range1_all_zeros_3_fu_2767_p2 <= "1" when (tmp_296_reg_4549 = ap_const_lv2_0) else "0";
    Range1_all_zeros_4_fu_2864_p2 <= "1" when (tmp_297_reg_4586 = ap_const_lv2_0) else "0";
    Range1_all_zeros_5_fu_2961_p2 <= "1" when (tmp_298_reg_4623 = ap_const_lv2_0) else "0";
    Range1_all_zeros_6_fu_3058_p2 <= "1" when (tmp_299_reg_4660 = ap_const_lv2_0) else "0";
    Range1_all_zeros_7_fu_3155_p2 <= "1" when (tmp_300_reg_4697 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_2476_p2 <= "1" when (tmp_293_reg_4438 = ap_const_lv2_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(20);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(21);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(2);
    ap_CS_fsm_state16 <= ap_CS_fsm(3);
    ap_CS_fsm_state17 <= ap_CS_fsm(4);
    ap_CS_fsm_state18 <= ap_CS_fsm(5);
    ap_CS_fsm_state19 <= ap_CS_fsm(6);
    ap_CS_fsm_state20 <= ap_CS_fsm(7);
    ap_CS_fsm_state21 <= ap_CS_fsm(8);
    ap_CS_fsm_state22 <= ap_CS_fsm(9);
    ap_CS_fsm_state23 <= ap_CS_fsm(10);
    ap_CS_fsm_state24 <= ap_CS_fsm(11);
    ap_CS_fsm_state25 <= ap_CS_fsm(12);
    ap_CS_fsm_state26 <= ap_CS_fsm(13);
    ap_CS_fsm_state27 <= ap_CS_fsm(14);
    ap_CS_fsm_state28 <= ap_CS_fsm(15);
    ap_CS_fsm_state29 <= ap_CS_fsm(16);
    ap_CS_fsm_state30 <= ap_CS_fsm(17);
    ap_CS_fsm_state31 <= ap_CS_fsm(18);
    ap_CS_fsm_state32 <= ap_CS_fsm(19);
    ap_CS_fsm_state37 <= ap_CS_fsm(22);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00001001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter11, ap_reg_pp0_iter10_exitcond_flatten_reg_3965)
    begin
                ap_block_pp0_stage0_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;


    ap_block_pp0_stage0_flag00011001_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter11, ap_reg_pp0_iter10_exitcond_flatten_reg_3965, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_flag00011001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_boolean_1 = ap_block_state6_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(m_axi_weight_V_RVALID, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter11, ap_reg_pp0_iter10_exitcond_flatten_reg_3965, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_boolean_1 = ap_block_state6_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_const_logic_0 = m_axi_weight_V_RVALID)));
    end process;

        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp0_stage0_iter11_assign_proc : process(m_axi_weight_V_RVALID, ap_reg_pp0_iter10_exitcond_flatten_reg_3965)
    begin
                ap_block_state13_pp0_stage0_iter11 <= ((ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_const_logic_0 = m_axi_weight_V_RVALID));
    end process;

        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(ap_reg_pp0_iter3_exitcond_flatten_reg_3965, ap_sig_ioackin_m_axi_weight_V_ARREADY)
    begin
                ap_block_state6_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter3_exitcond_flatten_reg_3965) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_weight_V_ARREADY));
    end process;

        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_902_p2)
    begin
        if ((exitcond_flatten_fu_902_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state33_assign_proc : process(exitcond_flatten15_fu_3732_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_flatten15_fu_3732_p2)) then 
            ap_condition_pp1_exit_iter0_state33 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state37)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_weight_V_ARREADY_assign_proc : process(m_axi_weight_V_ARREADY, ap_reg_ioackin_m_axi_weight_V_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY)) then 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= m_axi_weight_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_weight_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    arrayNo8_mid2_v_fu_3764_p3 <= 
        i_8_fu_3744_p2 when (exitcond_flatten16_fu_3750_p2(0) = '1') else 
        i_2_phi_fu_858_p4;
    bias_V_address0 <= bias_V_addr_reg_4922;

    bias_V_ce0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge40_demorgan_i_29_fu_2727_p2 <= (tmp_633_reg_4499 and deleted_ones_2_fu_2693_p3);
    brmerge40_demorgan_i_30_fu_2824_p2 <= (tmp_638_reg_4536 and deleted_ones_3_fu_2790_p3);
    brmerge40_demorgan_i_31_fu_2921_p2 <= (tmp_643_reg_4573 and deleted_ones_4_fu_2887_p3);
    brmerge40_demorgan_i_32_fu_3018_p2 <= (tmp_648_reg_4610 and deleted_ones_5_fu_2984_p3);
    brmerge40_demorgan_i_33_fu_3115_p2 <= (tmp_653_reg_4647 and deleted_ones_6_fu_3081_p3);
    brmerge40_demorgan_i_34_fu_3212_p2 <= (tmp_658_reg_4684 and deleted_ones_7_fu_3178_p3);
    brmerge40_demorgan_i_35_fu_2630_p2 <= (tmp_628_reg_4462 and deleted_ones_1_fu_2596_p3);
    brmerge40_demorgan_i_fu_2533_p2 <= (tmp_623_reg_4425 and deleted_ones_fu_2499_p3);
    brmerge_fu_3691_p2 <= (newsignbit_reg_4996 or isneg_not_fu_3686_p2);
    brmerge_i_i9_1_fu_2614_p2 <= (tmp_628_reg_4462 or p_not_i_i_1_fu_2608_p2);
    brmerge_i_i9_2_fu_2711_p2 <= (tmp_633_reg_4499 or p_not_i_i_2_fu_2705_p2);
    brmerge_i_i9_3_fu_2808_p2 <= (tmp_638_reg_4536 or p_not_i_i_3_fu_2802_p2);
    brmerge_i_i9_4_fu_2905_p2 <= (tmp_643_reg_4573 or p_not_i_i_4_fu_2899_p2);
    brmerge_i_i9_5_fu_3002_p2 <= (tmp_648_reg_4610 or p_not_i_i_5_fu_2996_p2);
    brmerge_i_i9_6_fu_3099_p2 <= (tmp_653_reg_4647 or p_not_i_i_6_fu_3093_p2);
    brmerge_i_i9_7_fu_3196_p2 <= (tmp_658_reg_4684 or p_not_i_i_7_fu_3190_p2);
    brmerge_i_i9_fu_2517_p2 <= (tmp_623_reg_4425 or p_not_i_i_fu_2511_p2);
    brmerge_i_i_fu_3682_p2 <= (isneg_reg_4983 xor newsignbit_reg_4996);
    brmerge_i_i_i_1_fu_2652_p2 <= (underflow_1_fu_2647_p2 or overflow_1_fu_2624_p2);
    brmerge_i_i_i_2_fu_2749_p2 <= (underflow_2_fu_2744_p2 or overflow_2_fu_2721_p2);
    brmerge_i_i_i_3_fu_2846_p2 <= (underflow_3_fu_2841_p2 or overflow_3_fu_2818_p2);
    brmerge_i_i_i_4_fu_2943_p2 <= (underflow_4_fu_2938_p2 or overflow_4_fu_2915_p2);
    brmerge_i_i_i_5_fu_3040_p2 <= (underflow_5_fu_3035_p2 or overflow_5_fu_3012_p2);
    brmerge_i_i_i_6_fu_3137_p2 <= (underflow_6_fu_3132_p2 or overflow_6_fu_3109_p2);
    brmerge_i_i_i_7_fu_3234_p2 <= (underflow_7_fu_3229_p2 or overflow_7_fu_3206_p2);
    brmerge_i_i_i_fu_2555_p2 <= (underflow_fu_2550_p2 or overflow_fu_2527_p2);
    carry_14_1_fu_1962_p2 <= (tmp_627_fu_1934_p3 and tmp_458_1_fu_1956_p2);
    carry_14_2_fu_2043_p2 <= (tmp_632_fu_2015_p3 and tmp_458_2_fu_2037_p2);
    carry_14_3_fu_2124_p2 <= (tmp_637_fu_2096_p3 and tmp_458_3_fu_2118_p2);
    carry_14_4_fu_2205_p2 <= (tmp_642_fu_2177_p3 and tmp_458_4_fu_2199_p2);
    carry_14_5_fu_2286_p2 <= (tmp_647_fu_2258_p3 and tmp_458_5_fu_2280_p2);
    carry_14_6_fu_2367_p2 <= (tmp_652_fu_2339_p3 and tmp_458_6_fu_2361_p2);
    carry_14_7_fu_2448_p2 <= (tmp_657_fu_2420_p3 and tmp_458_7_fu_2442_p2);
    carry_s_fu_1881_p2 <= (tmp_622_fu_1853_p3 and tmp_289_fu_1875_p2);
    ci_8_fu_1394_p2 <= std_logic_vector(unsigned(ci_reg_786) + unsigned(ap_const_lv2_1));
    co_36_7_fu_1623_p2 <= std_logic_vector(unsigned(ap_const_lv5_8) + unsigned(co_reg_797));
    deleted_ones_1_fu_2596_p3 <= 
        p_41_i_i_1_fu_2591_p2 when (carry_14_1_reg_4468(0) = '1') else 
        Range1_all_ones_1_fu_2568_p2;
    deleted_ones_2_fu_2693_p3 <= 
        p_41_i_i_2_fu_2688_p2 when (carry_14_2_reg_4505(0) = '1') else 
        Range1_all_ones_2_fu_2665_p2;
    deleted_ones_3_fu_2790_p3 <= 
        p_41_i_i_3_fu_2785_p2 when (carry_14_3_reg_4542(0) = '1') else 
        Range1_all_ones_3_fu_2762_p2;
    deleted_ones_4_fu_2887_p3 <= 
        p_41_i_i_4_fu_2882_p2 when (carry_14_4_reg_4579(0) = '1') else 
        Range1_all_ones_4_fu_2859_p2;
    deleted_ones_5_fu_2984_p3 <= 
        p_41_i_i_5_fu_2979_p2 when (carry_14_5_reg_4616(0) = '1') else 
        Range1_all_ones_5_fu_2956_p2;
    deleted_ones_6_fu_3081_p3 <= 
        p_41_i_i_6_fu_3076_p2 when (carry_14_6_reg_4653(0) = '1') else 
        Range1_all_ones_6_fu_3053_p2;
    deleted_ones_7_fu_3178_p3 <= 
        p_41_i_i_7_fu_3173_p2 when (carry_14_7_reg_4690(0) = '1') else 
        Range1_all_ones_7_fu_3150_p2;
    deleted_ones_fu_2499_p3 <= 
        p_41_i_i_fu_2494_p2 when (carry_s_reg_4431(0) = '1') else 
        Range1_all_ones_fu_2471_p2;
    deleted_zeros_1_fu_2578_p3 <= 
        Range1_all_ones_1_fu_2568_p2 when (carry_14_1_reg_4468(0) = '1') else 
        Range1_all_zeros_1_fu_2573_p2;
    deleted_zeros_2_fu_2675_p3 <= 
        Range1_all_ones_2_fu_2665_p2 when (carry_14_2_reg_4505(0) = '1') else 
        Range1_all_zeros_2_fu_2670_p2;
    deleted_zeros_3_fu_2772_p3 <= 
        Range1_all_ones_3_fu_2762_p2 when (carry_14_3_reg_4542(0) = '1') else 
        Range1_all_zeros_3_fu_2767_p2;
    deleted_zeros_4_fu_2869_p3 <= 
        Range1_all_ones_4_fu_2859_p2 when (carry_14_4_reg_4579(0) = '1') else 
        Range1_all_zeros_4_fu_2864_p2;
    deleted_zeros_5_fu_2966_p3 <= 
        Range1_all_ones_5_fu_2956_p2 when (carry_14_5_reg_4616(0) = '1') else 
        Range1_all_zeros_5_fu_2961_p2;
    deleted_zeros_6_fu_3063_p3 <= 
        Range1_all_ones_6_fu_3053_p2 when (carry_14_6_reg_4653(0) = '1') else 
        Range1_all_zeros_6_fu_3058_p2;
    deleted_zeros_7_fu_3160_p3 <= 
        Range1_all_ones_7_fu_3150_p2 when (carry_14_7_reg_4690(0) = '1') else 
        Range1_all_zeros_7_fu_3155_p2;
    deleted_zeros_fu_2481_p3 <= 
        Range1_all_ones_fu_2471_p2 when (carry_s_reg_4431(0) = '1') else 
        Range1_all_zeros_fu_2476_p2;
    exitcond33_fu_1284_p2 <= "1" when (h_reg_740 = ap_const_lv6_21) else "0";
    exitcond34_fu_3480_p2 <= "1" when (i_1_reg_808 = ap_const_lv5_18) else "0";
    exitcond35_fu_1294_p2 <= "1" when (w_reg_752 = ap_const_lv6_21) else "0";
    exitcond36_fu_3541_p2 <= "1" when (j_1_reg_819 = ap_const_lv6_21) else "0";
    exitcond37_fu_1310_p2 <= "1" when (m_reg_764 = ap_const_lv2_3) else "0";
    exitcond38_fu_3792_p2 <= "1" when (k_2_phi_fu_891_p4 = ap_const_lv6_21) else "0";
    exitcond39_fu_3582_p2 <= "1" when (k_1_reg_831 = ap_const_lv6_21) else "0";
    exitcond40_fu_1352_p2 <= "1" when (n_reg_775 = ap_const_lv2_3) else "0";
    exitcond41_fu_1388_p2 <= "1" when (ci_reg_786 = ap_const_lv2_3) else "0";
    exitcond42_fu_1475_p2 <= "1" when (co_reg_797 = ap_const_lv5_18) else "0";
    exitcond64_mid1_fu_1148_p2 <= (exitcond64_mid_fu_1064_p2 and not_exitcond_flatten_2_fu_1143_p2);
    exitcond64_mid_fu_1064_p2 <= (exitcond_fu_1058_p2 and not_exitcond_flatten_reg_4006);
    exitcond_flatten13_fu_914_p2 <= "1" when (indvar_flatten9_reg_681 = ap_const_lv6_1B) else "0";
    exitcond_flatten14_fu_973_p2 <= "1" when (indvar_flatten_phi_fu_708_p4 = ap_const_lv4_9) else "0";
    exitcond_flatten15_fu_3732_p2 <= "1" when (indvar_flatten10_phi_fu_847_p4 = ap_const_lv15_6000) else "0";
    exitcond_flatten16_fu_3750_p2 <= "1" when (indvar_flatten11_phi_fu_869_p4 = ap_const_lv12_400) else "0";
    exitcond_flatten_fu_902_p2 <= "1" when (indvar_flatten8_reg_658 = ap_const_lv10_288) else "0";
    exitcond_flatten_mid_fu_979_p2 <= (exitcond_flatten14_fu_973_p2 and not_exitcond_flatten_fu_968_p2);
    exitcond_flatten_not_fu_1138_p2 <= (exitcond_flatten14_reg_4011 xor ap_const_lv1_1);
    exitcond_fu_1058_p2 <= "1" when (p_phi_fu_732_p4 = ap_const_lv2_3) else "0";
    exitcond_mid_fu_3798_p2 <= (exitcond38_fu_3792_p2 and not_exitcond_flatten_1_fu_3786_p2);
    h_31_fu_1304_p2 <= std_logic_vector(unsigned(h_reg_740) + unsigned(ap_const_lv6_1));

    i_2_phi_fu_858_p4_assign_proc : process(i_2_reg_854, exitcond_flatten15_reg_5008, ap_CS_fsm_pp1_stage0, arrayNo8_mid2_v_reg_5023, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            i_2_phi_fu_858_p4 <= arrayNo8_mid2_v_reg_5023;
        else 
            i_2_phi_fu_858_p4 <= i_2_reg_854;
        end if; 
    end process;

    i_6_fu_934_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(i_phi_fu_673_p4));
    i_7_fu_3486_p2 <= std_logic_vector(unsigned(i_1_reg_808) + unsigned(ap_const_lv5_1));
    i_8_fu_3744_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(i_2_phi_fu_858_p4));

    i_phi_fu_673_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, i_reg_669, ap_reg_pp0_iter1_exitcond_flatten_reg_3965, tmp_mid2_v_reg_3989, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            i_phi_fu_673_p4 <= tmp_mid2_v_reg_3989;
        else 
            i_phi_fu_673_p4 <= i_reg_669;
        end if; 
    end process;


    indvar_flatten10_phi_fu_847_p4_assign_proc : process(indvar_flatten10_reg_843, exitcond_flatten15_reg_5008, ap_CS_fsm_pp1_stage0, indvar_flatten_next1_7_reg_5012, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten10_phi_fu_847_p4 <= indvar_flatten_next1_7_reg_5012;
        else 
            indvar_flatten10_phi_fu_847_p4 <= indvar_flatten10_reg_843;
        end if; 
    end process;


    indvar_flatten11_phi_fu_869_p4_assign_proc : process(indvar_flatten11_reg_865, exitcond_flatten15_reg_5008, ap_CS_fsm_pp1_stage0, indvar_flatten_next1_6_reg_5050, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten11_phi_fu_869_p4 <= indvar_flatten_next1_6_reg_5050;
        else 
            indvar_flatten11_phi_fu_869_p4 <= indvar_flatten11_reg_865;
        end if; 
    end process;

    indvar_flatten13_op_fu_920_p2 <= std_logic_vector(unsigned(indvar_flatten9_reg_681) + unsigned(ap_const_lv6_1));
    indvar_flatten44_op_fu_3818_p2 <= std_logic_vector(unsigned(indvar_flatten11_phi_fu_869_p4) + unsigned(ap_const_lv12_1));
    indvar_flatten_next1_5_fu_908_p2 <= std_logic_vector(unsigned(indvar_flatten8_reg_658) + unsigned(ap_const_lv10_1));
    indvar_flatten_next1_6_fu_3824_p3 <= 
        ap_const_lv12_1 when (exitcond_flatten16_fu_3750_p2(0) = '1') else 
        indvar_flatten44_op_fu_3818_p2;
    indvar_flatten_next1_7_fu_3738_p2 <= std_logic_vector(unsigned(indvar_flatten10_phi_fu_847_p4) + unsigned(ap_const_lv15_1));
    indvar_flatten_next1_fu_926_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten13_fu_914_p2(0) = '1') else 
        indvar_flatten13_op_fu_920_p2;
    indvar_flatten_next_fu_1216_p3 <= 
        ap_const_lv4_1 when (tmp_553_reg_4021(0) = '1') else 
        indvar_flatten_op_reg_4034;
    indvar_flatten_op_fu_1004_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_708_p4) + unsigned(ap_const_lv4_1));

    indvar_flatten_phi_fu_708_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, indvar_flatten_reg_704, ap_reg_pp0_iter1_exitcond_flatten_reg_3965, ap_enable_reg_pp0_iter2, indvar_flatten_next_fu_1216_p3)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            indvar_flatten_phi_fu_708_p4 <= indvar_flatten_next_fu_1216_p3;
        else 
            indvar_flatten_phi_fu_708_p4 <= indvar_flatten_reg_704;
        end if; 
    end process;

    input_V_address0 <= input_V_addr_reg_4174;

    input_V_ce0_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            input_V_ce0 <= ap_const_logic_1;
        else 
            input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    isneg_not_fu_3686_p2 <= (isneg_reg_4983 xor ap_const_lv1_1);
    j_2_mid_fu_3756_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten16_fu_3750_p2(0) = '1') else 
        j_2_phi_fu_880_p4;

    j_2_phi_fu_880_p4_assign_proc : process(j_2_reg_876, exitcond_flatten15_reg_5008, ap_CS_fsm_pp1_stage0, tmp_276_mid2_reg_5055, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            j_2_phi_fu_880_p4 <= tmp_276_mid2_reg_5055;
        else 
            j_2_phi_fu_880_p4 <= j_2_reg_876;
        end if; 
    end process;

    j_6_fu_985_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(j_mid_fu_940_p3));
    j_7_fu_3609_p2 <= std_logic_vector(unsigned(j_1_reg_819) + unsigned(ap_const_lv6_1));
    j_8_fu_3860_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(j_2_mid_reg_5017));
    j_mid_fu_940_p3 <= 
        ap_const_lv2_0 when (exitcond_flatten13_reg_3974(0) = '1') else 
        j_phi_fu_696_p4;

    j_phi_fu_696_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, j_reg_692, ap_reg_pp0_iter1_exitcond_flatten_reg_3965, tmp_267_mid2_reg_4027, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            j_phi_fu_696_p4 <= tmp_267_mid2_reg_4027;
        else 
            j_phi_fu_696_p4 <= j_reg_692;
        end if; 
    end process;

    k_2_mid2_fu_3810_p3 <= 
        ap_const_lv6_1 when (tmp_571_fu_3804_p2(0) = '1') else 
        k_2_phi_fu_891_p4;

    k_2_phi_fu_891_p4_assign_proc : process(k_2_reg_887, exitcond_flatten15_reg_5008, ap_CS_fsm_pp1_stage0, k_5_reg_5066, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten15_reg_5008) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            k_2_phi_fu_891_p4 <= k_5_reg_5066;
        else 
            k_2_phi_fu_891_p4 <= k_2_reg_887;
        end if; 
    end process;

    k_4_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(k_mid_fu_1069_p3));
    k_5_fu_3881_p2 <= std_logic_vector(unsigned(k_2_mid2_reg_5044) + unsigned(ap_const_lv6_1));
    k_6_fu_3726_p2 <= std_logic_vector(unsigned(k_1_reg_831) + unsigned(ap_const_lv6_1));
    k_mid_fu_1069_p3 <= 
        ap_const_lv2_0 when (tmp_553_reg_4021(0) = '1') else 
        k_phi_fu_720_p4;

    k_phi_fu_720_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, k_reg_716, ap_reg_pp0_iter2_exitcond_flatten_reg_3965, tmp_270_mid2_reg_4045, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            k_phi_fu_720_p4 <= tmp_270_mid2_reg_4045;
        else 
            k_phi_fu_720_p4 <= k_reg_716;
        end if; 
    end process;

    m_7_fu_1316_p2 <= std_logic_vector(unsigned(m_reg_764) + unsigned(ap_const_lv2_1));
    m_axi_weight_V_ARADDR <= weight_V_addr_reg_4076;
    m_axi_weight_V_ARBURST <= ap_const_lv2_0;
    m_axi_weight_V_ARCACHE <= ap_const_lv4_0;
    m_axi_weight_V_ARID <= ap_const_lv1_0;
    m_axi_weight_V_ARLEN <= ap_const_lv32_1;
    m_axi_weight_V_ARLOCK <= ap_const_lv2_0;
    m_axi_weight_V_ARPROT <= ap_const_lv3_0;
    m_axi_weight_V_ARQOS <= ap_const_lv4_0;
    m_axi_weight_V_ARREGION <= ap_const_lv4_0;
    m_axi_weight_V_ARSIZE <= ap_const_lv3_0;
    m_axi_weight_V_ARUSER <= ap_const_lv1_0;

    m_axi_weight_V_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_exitcond_flatten_reg_3965, ap_reg_ioackin_m_axi_weight_V_ARREADY, ap_block_pp0_stage0_flag00001001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_reg_pp0_iter3_exitcond_flatten_reg_3965) and (ap_block_pp0_stage0_flag00001001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_weight_V_ARREADY))) then 
            m_axi_weight_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_weight_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_AWADDR <= ap_const_lv32_0;
    m_axi_weight_V_AWBURST <= ap_const_lv2_0;
    m_axi_weight_V_AWCACHE <= ap_const_lv4_0;
    m_axi_weight_V_AWID <= ap_const_lv1_0;
    m_axi_weight_V_AWLEN <= ap_const_lv32_0;
    m_axi_weight_V_AWLOCK <= ap_const_lv2_0;
    m_axi_weight_V_AWPROT <= ap_const_lv3_0;
    m_axi_weight_V_AWQOS <= ap_const_lv4_0;
    m_axi_weight_V_AWREGION <= ap_const_lv4_0;
    m_axi_weight_V_AWSIZE <= ap_const_lv3_0;
    m_axi_weight_V_AWUSER <= ap_const_lv1_0;
    m_axi_weight_V_AWVALID <= ap_const_logic_0;
    m_axi_weight_V_BREADY <= ap_const_logic_0;

    m_axi_weight_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter11, ap_reg_pp0_iter10_exitcond_flatten_reg_3965, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            m_axi_weight_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_weight_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weight_V_WDATA <= ap_const_lv8_0;
    m_axi_weight_V_WID <= ap_const_lv1_0;
    m_axi_weight_V_WLAST <= ap_const_logic_0;
    m_axi_weight_V_WSTRB <= ap_const_lv1_0;
    m_axi_weight_V_WUSER <= ap_const_lv1_0;
    m_axi_weight_V_WVALID <= ap_const_logic_0;
    n_7_fu_1358_p2 <= std_logic_vector(unsigned(n_reg_775) + unsigned(ap_const_lv2_1));
    newIndex17_mid2_cast_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex17_mid2_v_reg_4000),5));
    newIndex2_fu_1481_p4 <= co_reg_797(4 downto 3);
    newIndex3_cast_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex2_fu_1481_p4),5));
    newIndex_fu_3501_p4 <= i_1_reg_808(4 downto 3);
    not_exitcond_flatten_1_fu_3786_p2 <= (exitcond_flatten16_fu_3750_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_2_fu_1143_p2 <= (ap_reg_pp0_iter1_exitcond_flatten13_reg_3974 or exitcond_flatten_not_fu_1138_p2);
    not_exitcond_flatten_fu_968_p2 <= (exitcond_flatten13_reg_3974 xor ap_const_lv1_1);

    output_0_V_address0_assign_proc : process(output_0_V_addr_2_reg_4202, ap_CS_fsm_state22, output_0_V_addr_1_reg_4938, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_0_V_addr_reg_5071, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_0_V_address0 <= output_0_V_addr_reg_5071;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_0_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_0_V_address0 <= output_0_V_addr_1_reg_4938;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_0_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_0_V_address0 <= output_0_V_addr_2_reg_4202;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_0_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_0_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_0_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_0_V_ce0 <= ap_const_logic_1;
        else 
            output_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, this_assign_1_fu_3261_p3, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_0_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_0_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_0_V_d0 <= this_assign_1_fu_3261_p3;
        else 
            output_0_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_0_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (ap_const_lv3_0 = tmp_608_reg_4912)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_const_lv3_0 = ap_reg_pp1_iter1_tmp_609_reg_5028)))) then 
            output_0_V_we0 <= ap_const_logic_1;
        else 
            output_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_V_address0_assign_proc : process(ap_CS_fsm_state22, output_1_V_addr_2_reg_4207, ap_CS_fsm_state29, output_1_V_addr_1_reg_4943, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_1_V_addr_reg_5076, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_1_V_address0 <= output_1_V_addr_reg_5076;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_1_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_1_V_address0 <= output_1_V_addr_1_reg_4943;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_1_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_1_V_address0 <= output_1_V_addr_2_reg_4207;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_1_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_1_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_1_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_1_V_ce0 <= ap_const_logic_1;
        else 
            output_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_1_fu_3291_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_1_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_1_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_1_V_d0 <= this_assign_1_1_fu_3291_p3;
        else 
            output_1_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_1_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_1)))) then 
            output_1_V_we0 <= ap_const_logic_1;
        else 
            output_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_V_address0_assign_proc : process(ap_CS_fsm_state22, output_2_V_addr_2_reg_4212, ap_CS_fsm_state29, output_2_V_addr_1_reg_4948, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_2_V_addr_reg_5081, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_2_V_address0 <= output_2_V_addr_reg_5081;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_2_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_2_V_address0 <= output_2_V_addr_1_reg_4948;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_2_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_2_V_address0 <= output_2_V_addr_2_reg_4212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_2_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_2_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_2_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_2_V_ce0 <= ap_const_logic_1;
        else 
            output_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_2_fu_3321_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_2_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_2_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_2_V_d0 <= this_assign_1_2_fu_3321_p3;
        else 
            output_2_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_2_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_2)))) then 
            output_2_V_we0 <= ap_const_logic_1;
        else 
            output_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_V_address0_assign_proc : process(ap_CS_fsm_state22, output_3_V_addr_2_reg_4217, ap_CS_fsm_state29, output_3_V_addr_1_reg_4953, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_3_V_addr_reg_5086, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_3_V_address0 <= output_3_V_addr_reg_5086;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_3_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_3_V_address0 <= output_3_V_addr_1_reg_4953;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_3_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_3_V_address0 <= output_3_V_addr_2_reg_4217;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_3_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_3_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_3_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_3_V_ce0 <= ap_const_logic_1;
        else 
            output_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_3_fu_3351_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_3_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_3_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_3_V_d0 <= this_assign_1_3_fu_3351_p3;
        else 
            output_3_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_3_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_3)))) then 
            output_3_V_we0 <= ap_const_logic_1;
        else 
            output_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_V_address0_assign_proc : process(ap_CS_fsm_state22, output_4_V_addr_2_reg_4222, ap_CS_fsm_state29, output_4_V_addr_1_reg_4958, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_4_V_addr_reg_5091, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_4_V_address0 <= output_4_V_addr_reg_5091;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_4_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_4_V_address0 <= output_4_V_addr_1_reg_4958;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_4_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_4_V_address0 <= output_4_V_addr_2_reg_4222;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_4_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_4_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_4_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_4_V_ce0 <= ap_const_logic_1;
        else 
            output_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_4_fu_3381_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_4_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_4_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_4_V_d0 <= this_assign_1_4_fu_3381_p3;
        else 
            output_4_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_4_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_4)))) then 
            output_4_V_we0 <= ap_const_logic_1;
        else 
            output_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_V_address0_assign_proc : process(ap_CS_fsm_state22, output_5_V_addr_2_reg_4227, ap_CS_fsm_state29, output_5_V_addr_1_reg_4963, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_5_V_addr_reg_5096, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_5_V_address0 <= output_5_V_addr_reg_5096;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_5_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_5_V_address0 <= output_5_V_addr_1_reg_4963;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_5_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_5_V_address0 <= output_5_V_addr_2_reg_4227;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_5_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_5_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_5_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_5_V_ce0 <= ap_const_logic_1;
        else 
            output_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_5_fu_3411_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_5_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_5_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_5_V_d0 <= this_assign_1_5_fu_3411_p3;
        else 
            output_5_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_5_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_5)))) then 
            output_5_V_we0 <= ap_const_logic_1;
        else 
            output_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_V_address0_assign_proc : process(ap_CS_fsm_state22, output_6_V_addr_2_reg_4232, ap_CS_fsm_state29, output_6_V_addr_1_reg_4968, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_6_V_addr_reg_5101, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_6_V_address0 <= output_6_V_addr_reg_5101;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_6_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_6_V_address0 <= output_6_V_addr_1_reg_4968;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_6_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_6_V_address0 <= output_6_V_addr_2_reg_4232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_6_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_6_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_6_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_6_V_ce0 <= ap_const_logic_1;
        else 
            output_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_6_fu_3441_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_6_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_6_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_6_V_d0 <= this_assign_1_6_fu_3441_p3;
        else 
            output_6_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_6_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_6)))) then 
            output_6_V_we0 <= ap_const_logic_1;
        else 
            output_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_V_address0_assign_proc : process(ap_CS_fsm_state22, output_7_V_addr_2_reg_4237, ap_CS_fsm_state29, output_7_V_addr_1_reg_4973, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, output_7_V_addr_reg_5106, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_block_pp1_stage0_flag00000000, tmp_744_cast_fu_1629_p1, tmp_728_cast_fu_3597_p1, tmp_723_cast_fu_3919_p1, ap_CS_fsm_state31, ap_block_pp1_stage1_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_7_V_address0 <= output_7_V_addr_reg_5106;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            output_7_V_address0 <= tmp_723_cast_fu_3919_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_7_V_address0 <= output_7_V_addr_1_reg_4973;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            output_7_V_address0 <= tmp_728_cast_fu_3597_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_7_V_address0 <= output_7_V_addr_2_reg_4237;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            output_7_V_address0 <= tmp_744_cast_fu_1629_p1(12 - 1 downto 0);
        else 
            output_7_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_7_V_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            output_7_V_ce0 <= ap_const_logic_1;
        else 
            output_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, this_assign_48_1_fu_3710_p3, ap_block_pp1_stage1_flag00000000, this_assign_1_7_fu_3471_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0))) then 
            output_7_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_7_V_d0 <= this_assign_48_1_fu_3710_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_7_V_d0 <= this_assign_1_7_fu_3471_p3;
        else 
            output_7_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    output_7_V_we0_assign_proc : process(tmp_608_reg_4912, ap_reg_pp1_iter1_tmp_609_reg_5028, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp1_iter1, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_611_fu_3952_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (tmp_608_reg_4912 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = tmp_611_fu_3952_p3) and (ap_reg_pp1_iter1_tmp_609_reg_5028 = ap_const_lv3_7)))) then 
            output_7_V_we0 <= ap_const_logic_1;
        else 
            output_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    overflow_1_fu_2624_p2 <= (brmerge_i_i9_1_fu_2614_p2 and tmp_463_1_fu_2619_p2);
    overflow_2_fu_2721_p2 <= (brmerge_i_i9_2_fu_2711_p2 and tmp_463_2_fu_2716_p2);
    overflow_3_fu_2818_p2 <= (brmerge_i_i9_3_fu_2808_p2 and tmp_463_3_fu_2813_p2);
    overflow_4_fu_2915_p2 <= (brmerge_i_i9_4_fu_2905_p2 and tmp_463_4_fu_2910_p2);
    overflow_5_fu_3012_p2 <= (brmerge_i_i9_5_fu_3002_p2 and tmp_463_5_fu_3007_p2);
    overflow_6_fu_3109_p2 <= (brmerge_i_i9_6_fu_3099_p2 and tmp_463_6_fu_3104_p2);
    overflow_7_fu_3206_p2 <= (brmerge_i_i9_7_fu_3196_p2 and tmp_463_7_fu_3201_p2);
    overflow_fu_2527_p2 <= (brmerge_i_i9_fu_2517_p2 and tmp_291_fu_2522_p2);
    p_1_fu_1210_p2 <= std_logic_vector(unsigned(p_mid2_fu_1170_p3) + unsigned(ap_const_lv2_1));
    p_38_i_i_1_fu_2603_p2 <= (carry_14_1_reg_4468 and Range1_all_ones_1_fu_2568_p2);
    p_38_i_i_2_fu_2700_p2 <= (carry_14_2_reg_4505 and Range1_all_ones_2_fu_2665_p2);
    p_38_i_i_3_fu_2797_p2 <= (carry_14_3_reg_4542 and Range1_all_ones_3_fu_2762_p2);
    p_38_i_i_4_fu_2894_p2 <= (carry_14_4_reg_4579 and Range1_all_ones_4_fu_2859_p2);
    p_38_i_i_5_fu_2991_p2 <= (carry_14_5_reg_4616 and Range1_all_ones_5_fu_2956_p2);
    p_38_i_i_6_fu_3088_p2 <= (carry_14_6_reg_4653 and Range1_all_ones_6_fu_3053_p2);
    p_38_i_i_7_fu_3185_p2 <= (carry_14_7_reg_4690 and Range1_all_ones_7_fu_3150_p2);
    p_38_i_i_fu_2506_p2 <= (carry_s_reg_4431 and Range1_all_ones_fu_2471_p2);
    p_41_i_i_1_fu_2591_p2 <= (tmp_625_reg_4449 and tmp_461_1_fu_2585_p2);
    p_41_i_i_2_fu_2688_p2 <= (tmp_630_reg_4486 and tmp_461_2_fu_2682_p2);
    p_41_i_i_3_fu_2785_p2 <= (tmp_635_reg_4523 and tmp_461_3_fu_2779_p2);
    p_41_i_i_4_fu_2882_p2 <= (tmp_640_reg_4560 and tmp_461_4_fu_2876_p2);
    p_41_i_i_5_fu_2979_p2 <= (tmp_645_reg_4597 and tmp_461_5_fu_2973_p2);
    p_41_i_i_6_fu_3076_p2 <= (tmp_650_reg_4634 and tmp_461_6_fu_3070_p2);
    p_41_i_i_7_fu_3173_p2 <= (tmp_655_reg_4671 and tmp_461_7_fu_3167_p2);
    p_41_i_i_fu_2494_p2 <= (tmp_620_reg_4412 and tmp_290_fu_2488_p2);
    p_Val2_2_fu_3255_p3 <= 
        ap_const_lv8_80 when (underflow_reg_4718(0) = '1') else 
        p_Val2_7_reg_4419;
    p_Val2_3_fu_3644_p2 <= std_logic_vector(signed(tmp_278_fu_3636_p1) + signed(tmp_279_fu_3640_p1));
    p_Val2_4_fu_3658_p2 <= std_logic_vector(unsigned(p_Val2_s_208_fu_3615_p10) + unsigned(bias_V_q0));
    p_Val2_5_fu_1827_p2 <= std_logic_vector(unsigned(p_Val2_s_reg_4287) + unsigned(tmp_300_cast_fu_1823_p1));
    p_Val2_6_fu_1840_p4 <= p_Val2_5_fu_1827_p2(13 downto 6);
    p_Val2_7_fu_1861_p2 <= std_logic_vector(unsigned(tmp_288_fu_1850_p1) + unsigned(p_Val2_6_fu_1840_p4));
    p_Val2_89_mux_fu_3696_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_fu_3682_p2(0) = '1') else 
        p_Val2_4_reg_4990;
    p_Val2_91_1_fu_1694_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_1_fu_1694_p1 <= weight_temp_1_V_q0;
    p_Val2_91_1_fu_1694_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_1_fu_1694_p0) * signed(p_Val2_91_1_fu_1694_p1))), 16));
    p_Val2_91_2_fu_1712_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_2_fu_1712_p1 <= weight_temp_2_V_q0;
    p_Val2_91_2_fu_1712_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_2_fu_1712_p0) * signed(p_Val2_91_2_fu_1712_p1))), 16));
    p_Val2_91_3_fu_1730_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_3_fu_1730_p1 <= weight_temp_3_V_q0;
    p_Val2_91_3_fu_1730_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_3_fu_1730_p0) * signed(p_Val2_91_3_fu_1730_p1))), 16));
    p_Val2_91_4_fu_1748_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_4_fu_1748_p1 <= weight_temp_4_V_q0;
    p_Val2_91_4_fu_1748_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_4_fu_1748_p0) * signed(p_Val2_91_4_fu_1748_p1))), 16));
    p_Val2_91_5_fu_1766_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_5_fu_1766_p1 <= weight_temp_5_V_q0;
    p_Val2_91_5_fu_1766_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_5_fu_1766_p0) * signed(p_Val2_91_5_fu_1766_p1))), 16));
    p_Val2_91_6_fu_1784_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_6_fu_1784_p1 <= weight_temp_6_V_q0;
    p_Val2_91_6_fu_1784_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_6_fu_1784_p0) * signed(p_Val2_91_6_fu_1784_p1))), 16));
    p_Val2_91_7_fu_1802_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_91_7_fu_1802_p1 <= weight_temp_7_V_q0;
    p_Val2_91_7_fu_1802_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_91_7_fu_1802_p0) * signed(p_Val2_91_7_fu_1802_p1))), 16));
    p_Val2_92_1_fu_1908_p2 <= std_logic_vector(unsigned(p_Val2_91_1_reg_4302) + unsigned(tmp_450_1_cast_fu_1904_p1));
    p_Val2_92_2_fu_1989_p2 <= std_logic_vector(unsigned(p_Val2_91_2_reg_4317) + unsigned(tmp_450_2_cast_fu_1985_p1));
    p_Val2_92_3_fu_2070_p2 <= std_logic_vector(unsigned(p_Val2_91_3_reg_4332) + unsigned(tmp_450_3_cast_fu_2066_p1));
    p_Val2_92_4_fu_2151_p2 <= std_logic_vector(unsigned(p_Val2_91_4_reg_4347) + unsigned(tmp_450_4_cast_fu_2147_p1));
    p_Val2_92_5_fu_2232_p2 <= std_logic_vector(unsigned(p_Val2_91_5_reg_4362) + unsigned(tmp_450_5_cast_fu_2228_p1));
    p_Val2_92_6_fu_2313_p2 <= std_logic_vector(unsigned(p_Val2_91_6_reg_4377) + unsigned(tmp_450_6_cast_fu_2309_p1));
    p_Val2_92_7_fu_2394_p2 <= std_logic_vector(unsigned(p_Val2_91_7_reg_4392) + unsigned(tmp_450_7_cast_fu_2390_p1));
    p_Val2_93_1_fu_1921_p4 <= p_Val2_92_1_fu_1908_p2(13 downto 6);
    p_Val2_93_2_fu_2002_p4 <= p_Val2_92_2_fu_1989_p2(13 downto 6);
    p_Val2_93_3_fu_2083_p4 <= p_Val2_92_3_fu_2070_p2(13 downto 6);
    p_Val2_93_4_fu_2164_p4 <= p_Val2_92_4_fu_2151_p2(13 downto 6);
    p_Val2_93_5_fu_2245_p4 <= p_Val2_92_5_fu_2232_p2(13 downto 6);
    p_Val2_93_6_fu_2326_p4 <= p_Val2_92_6_fu_2313_p2(13 downto 6);
    p_Val2_93_7_fu_2407_p4 <= p_Val2_92_7_fu_2394_p2(13 downto 6);
    p_Val2_94_1_198_fu_3285_p3 <= 
        ap_const_lv8_80 when (underflow_1_reg_4743(0) = '1') else 
        p_Val2_94_1_reg_4456;
    p_Val2_94_1_fu_1942_p2 <= std_logic_vector(unsigned(tmp_454_1_fu_1931_p1) + unsigned(p_Val2_93_1_fu_1921_p4));
    p_Val2_94_2_199_fu_3315_p3 <= 
        ap_const_lv8_80 when (underflow_2_reg_4768(0) = '1') else 
        p_Val2_94_2_reg_4493;
    p_Val2_94_2_fu_2023_p2 <= std_logic_vector(unsigned(tmp_454_2_fu_2012_p1) + unsigned(p_Val2_93_2_fu_2002_p4));
    p_Val2_94_3_200_fu_3345_p3 <= 
        ap_const_lv8_80 when (underflow_3_reg_4793(0) = '1') else 
        p_Val2_94_3_reg_4530;
    p_Val2_94_3_fu_2104_p2 <= std_logic_vector(unsigned(tmp_454_3_fu_2093_p1) + unsigned(p_Val2_93_3_fu_2083_p4));
    p_Val2_94_4_201_fu_3375_p3 <= 
        ap_const_lv8_80 when (underflow_4_reg_4818(0) = '1') else 
        p_Val2_94_4_reg_4567;
    p_Val2_94_4_fu_2185_p2 <= std_logic_vector(unsigned(tmp_454_4_fu_2174_p1) + unsigned(p_Val2_93_4_fu_2164_p4));
    p_Val2_94_5_202_fu_3405_p3 <= 
        ap_const_lv8_80 when (underflow_5_reg_4843(0) = '1') else 
        p_Val2_94_5_reg_4604;
    p_Val2_94_5_fu_2266_p2 <= std_logic_vector(unsigned(tmp_454_5_fu_2255_p1) + unsigned(p_Val2_93_5_fu_2245_p4));
    p_Val2_94_6_203_fu_3435_p3 <= 
        ap_const_lv8_80 when (underflow_6_reg_4868(0) = '1') else 
        p_Val2_94_6_reg_4641;
    p_Val2_94_6_fu_2347_p2 <= std_logic_vector(unsigned(tmp_454_6_fu_2336_p1) + unsigned(p_Val2_93_6_fu_2326_p4));
    p_Val2_94_7_204_fu_3465_p3 <= 
        ap_const_lv8_80 when (underflow_7_reg_4893(0) = '1') else 
        p_Val2_94_7_reg_4678;
    p_Val2_94_7_fu_2428_p2 <= std_logic_vector(unsigned(tmp_454_7_fu_2417_p1) + unsigned(p_Val2_93_7_fu_2407_p4));
    p_Val2_94_mux_1_fu_3279_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_1_reg_4748(0) = '1') else 
        p_Val2_94_1_reg_4456;
    p_Val2_94_mux_2_fu_3309_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_2_reg_4773(0) = '1') else 
        p_Val2_94_2_reg_4493;
    p_Val2_94_mux_3_fu_3339_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_3_reg_4798(0) = '1') else 
        p_Val2_94_3_reg_4530;
    p_Val2_94_mux_4_fu_3369_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_4_reg_4823(0) = '1') else 
        p_Val2_94_4_reg_4567;
    p_Val2_94_mux_5_fu_3399_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_5_reg_4848(0) = '1') else 
        p_Val2_94_5_reg_4604;
    p_Val2_94_mux_6_fu_3429_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_6_reg_4873(0) = '1') else 
        p_Val2_94_6_reg_4641;
    p_Val2_94_mux_7_fu_3459_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_7_reg_4898(0) = '1') else 
        p_Val2_94_7_reg_4678;
    p_Val2_94_mux_fu_3249_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_reg_4723(0) = '1') else 
        p_Val2_7_reg_4419;
    p_Val2_s_209_fu_3703_p3 <= 
        ap_const_lv8_80 when (underflow_12_fu_3677_p2(0) = '1') else 
        p_Val2_4_reg_4990;
    p_Val2_s_fu_1676_p0 <= OP2_V_fu_1673_p1(8 - 1 downto 0);
    p_Val2_s_fu_1676_p1 <= weight_temp_0_V_q0;
    p_Val2_s_fu_1676_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_fu_1676_p0) * signed(p_Val2_s_fu_1676_p1))), 16));
    p_mid2_fu_1170_p3 <= 
        ap_const_lv2_0 when (tmp_604_fu_1165_p2(0) = '1') else 
        p_phi_fu_732_p4;
    p_not_i_i_1_fu_2608_p2 <= (deleted_zeros_1_fu_2578_p3 xor ap_const_lv1_1);
    p_not_i_i_2_fu_2705_p2 <= (deleted_zeros_2_fu_2675_p3 xor ap_const_lv1_1);
    p_not_i_i_3_fu_2802_p2 <= (deleted_zeros_3_fu_2772_p3 xor ap_const_lv1_1);
    p_not_i_i_4_fu_2899_p2 <= (deleted_zeros_4_fu_2869_p3 xor ap_const_lv1_1);
    p_not_i_i_5_fu_2996_p2 <= (deleted_zeros_5_fu_2966_p3 xor ap_const_lv1_1);
    p_not_i_i_6_fu_3093_p2 <= (deleted_zeros_6_fu_3063_p3 xor ap_const_lv1_1);
    p_not_i_i_7_fu_3190_p2 <= (deleted_zeros_7_fu_3160_p3 xor ap_const_lv1_1);
    p_not_i_i_fu_2511_p2 <= (deleted_zeros_fu_2481_p3 xor ap_const_lv1_1);

    p_phi_fu_732_p4_assign_proc : process(ap_block_pp0_stage0_flag00000000, p_reg_728, ap_reg_pp0_iter2_exitcond_flatten_reg_3965, p_1_reg_4066, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter2_exitcond_flatten_reg_3965) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            p_phi_fu_732_p4 <= p_1_reg_4066;
        else 
            p_phi_fu_732_p4 <= p_reg_728;
        end if; 
    end process;

    p_shl10_cast_fu_1640_p3 <= (tmp_619_reg_4192 & ap_const_lv2_0);
    p_shl12_cast_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_590_fu_1561_p3),5));
    p_shl13_cast_fu_1530_p3 <= (tmp_587_fu_1525_p2 & ap_const_lv5_0);
    p_shl14_cast_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_616_fu_1538_p3),13));
    p_shl15_cast_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_584_fu_1495_p3),8));
    p_shl16_cast_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_585_fu_1507_p3),8));
    p_shl17_cast_fu_3519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_565_fu_3511_p3),8));
    p_shl18_cast_fu_3531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_566_fu_3523_p3),8));
    p_shl19_cast_fu_3556_p3 <= (tmp_575_fu_3551_p2 & ap_const_lv5_0);
    p_shl20_cast_fu_3572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_612_fu_3564_p3),13));
    p_shl21_cast_fu_3886_p3 <= (tmp_572_reg_5060 & ap_const_lv5_0);
    p_shl22_cast_fu_3900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_610_fu_3893_p3),13));
    p_shl23_cast_fu_3839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_568_fu_3832_p3),8));
    p_shl24_cast_fu_3850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_569_fu_3843_p3),8));
        p_shl2_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_603_fu_1120_p3),64));

        p_shl3_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_602_fu_1092_p3),64));

    p_shl4_cast_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_551_fu_1037_p3),5));
    p_shl5_cast_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1013_p3),8));
    p_shl6_cast_fu_1439_p3 <= (tmp_581_fu_1434_p2 & ap_const_lv5_0);
    p_shl7_cast_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_615_fu_1447_p3),13));
    p_shl8_cast_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_578_fu_1404_p3),8));
    p_shl9_cast_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_579_fu_1416_p3),8));
    p_shl_cast_fu_1232_p3 <= (tmp_607_reg_4061 & ap_const_lv2_0);
        p_shl_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_617_fu_1592_p3),64));

        sext_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv1_weight_V3),64));

    sum_fu_1256_p2 <= std_logic_vector(unsigned(tmp_563_fu_1250_p2) + unsigned(sext_reg_3960));
    this_assign_1_1_fu_3291_p3 <= 
        p_Val2_94_mux_1_fu_3279_p3 when (underflow_not_1_fu_3274_p2(0) = '1') else 
        p_Val2_94_1_198_fu_3285_p3;
    this_assign_1_2_fu_3321_p3 <= 
        p_Val2_94_mux_2_fu_3309_p3 when (underflow_not_2_fu_3304_p2(0) = '1') else 
        p_Val2_94_2_199_fu_3315_p3;
    this_assign_1_3_fu_3351_p3 <= 
        p_Val2_94_mux_3_fu_3339_p3 when (underflow_not_3_fu_3334_p2(0) = '1') else 
        p_Val2_94_3_200_fu_3345_p3;
    this_assign_1_4_fu_3381_p3 <= 
        p_Val2_94_mux_4_fu_3369_p3 when (underflow_not_4_fu_3364_p2(0) = '1') else 
        p_Val2_94_4_201_fu_3375_p3;
    this_assign_1_5_fu_3411_p3 <= 
        p_Val2_94_mux_5_fu_3399_p3 when (underflow_not_5_fu_3394_p2(0) = '1') else 
        p_Val2_94_5_202_fu_3405_p3;
    this_assign_1_6_fu_3441_p3 <= 
        p_Val2_94_mux_6_fu_3429_p3 when (underflow_not_6_fu_3424_p2(0) = '1') else 
        p_Val2_94_6_203_fu_3435_p3;
    this_assign_1_7_fu_3471_p3 <= 
        p_Val2_94_mux_7_fu_3459_p3 when (underflow_not_7_fu_3454_p2(0) = '1') else 
        p_Val2_94_7_204_fu_3465_p3;
    this_assign_1_fu_3261_p3 <= 
        p_Val2_94_mux_fu_3249_p3 when (underflow_not_fu_3244_p2(0) = '1') else 
        p_Val2_2_fu_3255_p3;
    this_assign_48_1_fu_3710_p3 <= 
        p_Val2_89_mux_fu_3696_p3 when (brmerge_fu_3691_p2(0) = '1') else 
        p_Val2_s_209_fu_3703_p3;
    tmp10_demorgan_fu_2829_p2 <= (p_38_i_i_3_fu_2797_p2 or brmerge40_demorgan_i_30_fu_2824_p2);
    tmp10_fu_2835_p2 <= (tmp10_demorgan_fu_2829_p2 xor ap_const_lv1_1);
    tmp11_fu_3330_p2 <= (brmerge40_demorgan_i_30_reg_4788 or tmp_463_3_reg_4783);
    tmp12_demorgan_fu_2926_p2 <= (p_38_i_i_4_fu_2894_p2 or brmerge40_demorgan_i_31_fu_2921_p2);
    tmp12_fu_2932_p2 <= (tmp12_demorgan_fu_2926_p2 xor ap_const_lv1_1);
    tmp13_fu_3360_p2 <= (brmerge40_demorgan_i_31_reg_4813 or tmp_463_4_reg_4808);
    tmp14_demorgan_fu_3023_p2 <= (p_38_i_i_5_fu_2991_p2 or brmerge40_demorgan_i_32_fu_3018_p2);
    tmp14_fu_3029_p2 <= (tmp14_demorgan_fu_3023_p2 xor ap_const_lv1_1);
    tmp15_fu_3390_p2 <= (brmerge40_demorgan_i_32_reg_4838 or tmp_463_5_reg_4833);
    tmp16_demorgan_fu_3120_p2 <= (p_38_i_i_6_fu_3088_p2 or brmerge40_demorgan_i_33_fu_3115_p2);
    tmp16_fu_3126_p2 <= (tmp16_demorgan_fu_3120_p2 xor ap_const_lv1_1);
    tmp17_fu_3420_p2 <= (brmerge40_demorgan_i_33_reg_4863 or tmp_463_6_reg_4858);
    tmp18_demorgan_fu_3217_p2 <= (p_38_i_i_7_fu_3185_p2 or brmerge40_demorgan_i_34_fu_3212_p2);
    tmp18_fu_3223_p2 <= (tmp18_demorgan_fu_3217_p2 xor ap_const_lv1_1);
    tmp19_fu_3450_p2 <= (brmerge40_demorgan_i_34_reg_4888 or tmp_463_7_reg_4883);
        tmp2_cast_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_1326_p2),6));

    tmp2_fu_1326_p2 <= std_logic_vector(unsigned(m_reg_764) + unsigned(ap_const_lv2_3));
        tmp3_cast_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_fu_1368_p2),6));

    tmp3_fu_1368_p2 <= std_logic_vector(unsigned(n_reg_775) + unsigned(ap_const_lv2_3));
    tmp4_demorgan_fu_2538_p2 <= (p_38_i_i_fu_2506_p2 or brmerge40_demorgan_i_fu_2533_p2);
    tmp4_fu_2544_p2 <= (tmp4_demorgan_fu_2538_p2 xor ap_const_lv1_1);
    tmp5_fu_3240_p2 <= (brmerge40_demorgan_i_reg_4713 or tmp_291_reg_4708);
    tmp6_demorgan_fu_2635_p2 <= (p_38_i_i_1_fu_2603_p2 or brmerge40_demorgan_i_35_fu_2630_p2);
    tmp6_fu_2641_p2 <= (tmp6_demorgan_fu_2635_p2 xor ap_const_lv1_1);
    tmp7_fu_3270_p2 <= (brmerge40_demorgan_i_35_reg_4738 or tmp_463_1_reg_4733);
    tmp8_demorgan_fu_2732_p2 <= (p_38_i_i_2_fu_2700_p2 or brmerge40_demorgan_i_29_fu_2727_p2);
    tmp8_fu_2738_p2 <= (tmp8_demorgan_fu_2732_p2 xor ap_const_lv1_1);
    tmp9_fu_3300_p2 <= (brmerge40_demorgan_i_29_reg_4763 or tmp_463_2_reg_4758);
    tmp_267_mid2_cast1_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_267_mid2_reg_4027),6));
    tmp_267_mid2_cast_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_267_mid2_reg_4027),9));
    tmp_267_mid2_fu_996_p3 <= 
        j_6_fu_985_p2 when (exitcond_flatten_mid_fu_979_p2(0) = '1') else 
        j_mid_fu_940_p3;
    tmp_268_fu_3492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_808),64));
    tmp_269_cast_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_752),13));
    tmp_270_mid2_cast_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_270_mid2_fu_1178_p3),64));
    tmp_270_mid2_fu_1178_p3 <= 
        k_4_fu_1154_p2 when (exitcond64_mid1_fu_1148_p2(0) = '1') else 
        k_mid_fu_1069_p3;
    tmp_271_cast_fu_3547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_819),8));
    tmp_272_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_764),64));
    tmp_273_fu_1336_p2 <= std_logic_vector(unsigned(h_reg_740) + unsigned(tmp2_cast_fu_1332_p1));
    tmp_274_cast_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_273_fu_1336_p2),8));
    tmp_275_cast_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2_reg_4039),8));
    tmp_275_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2_reg_4039),64));
    tmp_276_mid2_cast_fu_3871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_276_mid2_fu_3865_p3),8));
    tmp_276_mid2_fu_3865_p3 <= 
        j_8_fu_3860_p2 when (exitcond_mid_reg_5039(0) = '1') else 
        j_2_mid_reg_5017;
    tmp_277_cast_fu_3588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_831),13));
        tmp_278_fu_3636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_208_fu_3615_p10),9));

        tmp_279_fu_3640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_V_q0),9));

    tmp_280_fu_3672_p2 <= (newsignbit_reg_4996 xor ap_const_lv1_1);
    tmp_281_cast_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_reg_775),8));
    tmp_282_fu_1378_p2 <= std_logic_vector(unsigned(w_reg_752) + unsigned(tmp3_cast_fu_1374_p1));
    tmp_283_cast_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_282_fu_1378_p2),13));
    tmp_284_cast_fu_3910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_2_mid2_reg_5044),13));
    tmp_286_cast_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ci_reg_786),6));
    tmp_287_fu_1816_p3 <= (output_0_V_load_reg_4292 & ap_const_lv6_0);
    tmp_288_fu_1850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_621_reg_4297),8));
    tmp_289_fu_1875_p2 <= (tmp_623_fu_1867_p3 xor ap_const_lv1_1);
    tmp_290_fu_2488_p2 <= (tmp_624_fu_2464_p3 xor ap_const_lv1_1);
    tmp_291_fu_2522_p2 <= (tmp_620_reg_4412 xor ap_const_lv1_1);
        tmp_300_cast_fu_1823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_287_fu_1816_p3),16));

        tmp_450_1_cast_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_1_fu_1897_p3),16));

    tmp_450_1_fu_1897_p3 <= (output_1_V_load_reg_4307 & ap_const_lv6_0);
        tmp_450_2_cast_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_2_fu_1978_p3),16));

    tmp_450_2_fu_1978_p3 <= (output_2_V_load_reg_4322 & ap_const_lv6_0);
        tmp_450_3_cast_fu_2066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_3_fu_2059_p3),16));

    tmp_450_3_fu_2059_p3 <= (output_3_V_load_reg_4337 & ap_const_lv6_0);
        tmp_450_4_cast_fu_2147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_4_fu_2140_p3),16));

    tmp_450_4_fu_2140_p3 <= (output_4_V_load_reg_4352 & ap_const_lv6_0);
        tmp_450_5_cast_fu_2228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_5_fu_2221_p3),16));

    tmp_450_5_fu_2221_p3 <= (output_5_V_load_reg_4367 & ap_const_lv6_0);
        tmp_450_6_cast_fu_2309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_6_fu_2302_p3),16));

    tmp_450_6_fu_2302_p3 <= (output_6_V_load_reg_4382 & ap_const_lv6_0);
        tmp_450_7_cast_fu_2390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_450_7_fu_2383_p3),16));

    tmp_450_7_fu_2383_p3 <= (output_7_V_load_reg_4397 & ap_const_lv6_0);
    tmp_454_1_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_626_reg_4312),8));
    tmp_454_2_fu_2012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_631_reg_4327),8));
    tmp_454_3_fu_2093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_636_reg_4342),8));
    tmp_454_4_fu_2174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_641_reg_4357),8));
    tmp_454_5_fu_2255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_646_reg_4372),8));
    tmp_454_6_fu_2336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_651_reg_4387),8));
    tmp_454_7_fu_2417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_656_reg_4402),8));
    tmp_458_1_fu_1956_p2 <= (tmp_628_fu_1948_p3 xor ap_const_lv1_1);
    tmp_458_2_fu_2037_p2 <= (tmp_633_fu_2029_p3 xor ap_const_lv1_1);
    tmp_458_3_fu_2118_p2 <= (tmp_638_fu_2110_p3 xor ap_const_lv1_1);
    tmp_458_4_fu_2199_p2 <= (tmp_643_fu_2191_p3 xor ap_const_lv1_1);
    tmp_458_5_fu_2280_p2 <= (tmp_648_fu_2272_p3 xor ap_const_lv1_1);
    tmp_458_6_fu_2361_p2 <= (tmp_653_fu_2353_p3 xor ap_const_lv1_1);
    tmp_458_7_fu_2442_p2 <= (tmp_658_fu_2434_p3 xor ap_const_lv1_1);
    tmp_461_1_fu_2585_p2 <= (tmp_629_fu_2561_p3 xor ap_const_lv1_1);
    tmp_461_2_fu_2682_p2 <= (tmp_634_fu_2658_p3 xor ap_const_lv1_1);
    tmp_461_3_fu_2779_p2 <= (tmp_639_fu_2755_p3 xor ap_const_lv1_1);
    tmp_461_4_fu_2876_p2 <= (tmp_644_fu_2852_p3 xor ap_const_lv1_1);
    tmp_461_5_fu_2973_p2 <= (tmp_649_fu_2949_p3 xor ap_const_lv1_1);
    tmp_461_6_fu_3070_p2 <= (tmp_654_fu_3046_p3 xor ap_const_lv1_1);
    tmp_461_7_fu_3167_p2 <= (tmp_659_fu_3143_p3 xor ap_const_lv1_1);
    tmp_463_1_fu_2619_p2 <= (tmp_625_reg_4449 xor ap_const_lv1_1);
    tmp_463_2_fu_2716_p2 <= (tmp_630_reg_4486 xor ap_const_lv1_1);
    tmp_463_3_fu_2813_p2 <= (tmp_635_reg_4523 xor ap_const_lv1_1);
    tmp_463_4_fu_2910_p2 <= (tmp_640_reg_4560 xor ap_const_lv1_1);
    tmp_463_5_fu_3007_p2 <= (tmp_645_reg_4597 xor ap_const_lv1_1);
    tmp_463_6_fu_3104_p2 <= (tmp_650_reg_4634 xor ap_const_lv1_1);
    tmp_463_7_fu_3201_p2 <= (tmp_655_reg_4671 xor ap_const_lv1_1);
    tmp_551_fu_1037_p3 <= (newIndex17_mid2_v_reg_4000 & ap_const_lv2_0);
    tmp_552_fu_1048_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1044_p1) - unsigned(newIndex17_mid2_cast_fu_1034_p1));
    tmp_553_fu_991_p2 <= (exitcond_flatten_mid_fu_979_p2 or exitcond_flatten13_reg_3974);
    tmp_554_fu_1082_p2 <= std_logic_vector(unsigned(tmp_267_mid2_cast_fu_1079_p1) + unsigned(tmp_691_cast_fu_1030_p1));
    tmp_555_fu_1104_p2 <= std_logic_vector(signed(p_shl3_fu_1100_p1) - signed(tmp_695_cast_fu_1088_p1));
    tmp_556_fu_1110_p2 <= std_logic_vector(unsigned(tmp_267_mid2_cast1_fu_1076_p1) + unsigned(tmp_693_cast_fu_1054_p1));
    tmp_557_fu_1132_p2 <= std_logic_vector(signed(p_shl2_fu_1128_p1) - signed(tmp_698_cast_fu_1116_p1));
    tmp_558_fu_1160_p2 <= (exitcond64_mid1_fu_1148_p2 or exitcond_flatten_mid_reg_4016);
    tmp_559_fu_1190_p2 <= std_logic_vector(unsigned(tmp_270_mid2_cast_fu_1186_p1) + unsigned(tmp_555_fu_1104_p2));
    tmp_560_fu_1227_p2 <= std_logic_vector(unsigned(tmp_605_fu_1222_p2) - unsigned(tmp_559_reg_4050));
    tmp_561_fu_1196_p2 <= std_logic_vector(unsigned(tmp_270_mid2_cast_fu_1186_p1) + unsigned(tmp_557_fu_1132_p2));
    tmp_562_fu_1239_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1232_p3) - unsigned(tmp_606_reg_4056));
    tmp_563_fu_1250_p2 <= std_logic_vector(unsigned(tmp_275_fu_1244_p1) + unsigned(tmp_560_fu_1227_p2));
    tmp_564_fu_1267_p2 <= std_logic_vector(unsigned(tmp_275_cast_fu_1247_p1) + unsigned(tmp_562_fu_1239_p2));
    tmp_565_fu_3511_p3 <= (newIndex_fu_3501_p4 & ap_const_lv5_0);
    tmp_566_fu_3523_p3 <= (newIndex_fu_3501_p4 & ap_const_lv1_0);
    tmp_567_fu_3535_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_3519_p1) + unsigned(p_shl18_cast_fu_3531_p1));
    tmp_568_fu_3832_p3 <= (newIndex_mid2_v_reg_5033 & ap_const_lv5_0);
    tmp_569_fu_3843_p3 <= (newIndex_mid2_v_reg_5033 & ap_const_lv1_0);
    tmp_570_fu_3854_p2 <= std_logic_vector(unsigned(p_shl24_cast_fu_3850_p1) + unsigned(p_shl23_cast_fu_3839_p1));
    tmp_571_fu_3804_p2 <= (exitcond_mid_fu_3798_p2 or exitcond_flatten16_fu_3750_p2);
    tmp_572_fu_3875_p2 <= std_logic_vector(unsigned(tmp_570_fu_3854_p2) + unsigned(tmp_276_mid2_cast_fu_3871_p1));
    tmp_573_fu_3904_p2 <= std_logic_vector(unsigned(p_shl22_cast_fu_3900_p1) + unsigned(p_shl21_cast_fu_3886_p3));
    tmp_574_fu_3913_p2 <= std_logic_vector(unsigned(tmp_573_fu_3904_p2) + unsigned(tmp_284_cast_fu_3910_p1));
    tmp_575_fu_3551_p2 <= std_logic_vector(unsigned(tmp_271_cast_fu_3547_p1) + unsigned(tmp_567_reg_4917));
    tmp_576_fu_3576_p2 <= std_logic_vector(unsigned(p_shl19_cast_fu_3556_p3) + unsigned(p_shl20_cast_fu_3572_p1));
    tmp_577_fu_3592_p2 <= std_logic_vector(unsigned(tmp_576_reg_4930) + unsigned(tmp_277_cast_fu_3588_p1));
    tmp_578_fu_1404_p3 <= (ci_reg_786 & ap_const_lv5_0);
    tmp_579_fu_1416_p3 <= (ci_reg_786 & ap_const_lv1_0);
    tmp_580_fu_1428_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_1412_p1) + unsigned(p_shl9_cast_fu_1424_p1));
    tmp_581_fu_1434_p2 <= std_logic_vector(unsigned(tmp_274_cast_reg_4133) + unsigned(tmp_580_fu_1428_p2));
    tmp_582_fu_1459_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1439_p3) + unsigned(p_shl7_cast_fu_1455_p1));
    tmp_583_fu_1465_p2 <= std_logic_vector(unsigned(tmp_283_cast_reg_4156) + unsigned(tmp_582_fu_1459_p2));
    tmp_584_fu_1495_p3 <= (newIndex2_fu_1481_p4 & ap_const_lv5_0);
    tmp_585_fu_1507_p3 <= (newIndex2_fu_1481_p4 & ap_const_lv1_0);
    tmp_586_fu_1519_p2 <= std_logic_vector(unsigned(p_shl16_cast_fu_1515_p1) + unsigned(p_shl15_cast_fu_1503_p1));
    tmp_587_fu_1525_p2 <= std_logic_vector(unsigned(tmp_586_fu_1519_p2) + unsigned(tmp_cast_reg_4102));
    tmp_588_fu_1550_p2 <= std_logic_vector(unsigned(p_shl14_cast_fu_1546_p1) + unsigned(p_shl13_cast_fu_1530_p3));
    tmp_589_fu_1556_p2 <= std_logic_vector(unsigned(tmp_588_fu_1550_p2) + unsigned(tmp_269_cast_reg_4110));
    tmp_590_fu_1561_p3 <= (newIndex2_fu_1481_p4 & ap_const_lv2_0);
    tmp_591_fu_1573_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1569_p1) - unsigned(newIndex3_cast_fu_1491_p1));
    tmp_592_fu_1583_p2 <= std_logic_vector(signed(tmp_746_cast_fu_1579_p1) + signed(tmp_286_cast_reg_4169));
    tmp_593_fu_1604_p2 <= std_logic_vector(signed(p_shl_fu_1600_p1) - signed(tmp_747_cast_fu_1588_p1));
    tmp_594_fu_1610_p2 <= std_logic_vector(unsigned(tmp_593_fu_1604_p2) + unsigned(tmp_272_reg_4128));
    tmp_595_fu_1647_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_1640_p3) - unsigned(tmp_618_reg_4187));
    tmp_596_fu_1652_p2 <= std_logic_vector(unsigned(tmp_595_fu_1647_p2) + unsigned(tmp_281_cast_reg_4151));
    tmp_601_fu_954_p1 <= tmp_mid2_v_fu_947_p3(3 - 1 downto 0);
    tmp_602_fu_1092_p3 <= (tmp_554_fu_1082_p2 & ap_const_lv2_0);
    tmp_603_fu_1120_p3 <= (tmp_556_fu_1110_p2 & ap_const_lv2_0);
    tmp_604_fu_1165_p2 <= (tmp_558_fu_1160_p2 or ap_reg_pp0_iter1_exitcond_flatten13_reg_3974);
    tmp_605_fu_1222_p2 <= std_logic_vector(shift_left(unsigned(tmp_559_reg_4050),to_integer(unsigned('0' & ap_const_lv64_2(31-1 downto 0)))));
    tmp_606_fu_1202_p1 <= tmp_561_fu_1196_p2(8 - 1 downto 0);
    tmp_607_fu_1206_p1 <= tmp_561_fu_1196_p2(6 - 1 downto 0);
    tmp_608_fu_3497_p1 <= i_1_reg_808(3 - 1 downto 0);
    tmp_609_fu_3772_p1 <= arrayNo8_mid2_v_fu_3764_p3(3 - 1 downto 0);
    tmp_610_fu_3893_p3 <= (tmp_572_reg_5060 & ap_const_lv1_0);
    tmp_611_fu_3952_p3 <= tmp_292_fu_3931_p10(7 downto 7);
    tmp_612_fu_3564_p3 <= (tmp_575_fu_3551_p2 & ap_const_lv1_0);
    tmp_615_fu_1447_p3 <= (tmp_581_fu_1434_p2 & ap_const_lv1_0);
    tmp_616_fu_1538_p3 <= (tmp_587_fu_1525_p2 & ap_const_lv1_0);
    tmp_617_fu_1592_p3 <= (tmp_592_fu_1583_p2 & ap_const_lv2_0);
    tmp_618_fu_1615_p1 <= tmp_594_fu_1610_p2(8 - 1 downto 0);
    tmp_619_fu_1619_p1 <= tmp_594_fu_1610_p2(6 - 1 downto 0);
    tmp_622_fu_1853_p3 <= p_Val2_5_fu_1827_p2(13 downto 13);
    tmp_623_fu_1867_p3 <= p_Val2_7_fu_1861_p2(7 downto 7);
    tmp_624_fu_2464_p3 <= p_Val2_5_reg_4407(14 downto 14);
    tmp_627_fu_1934_p3 <= p_Val2_92_1_fu_1908_p2(13 downto 13);
    tmp_628_fu_1948_p3 <= p_Val2_94_1_fu_1942_p2(7 downto 7);
    tmp_629_fu_2561_p3 <= p_Val2_92_1_reg_4444(14 downto 14);
    tmp_632_fu_2015_p3 <= p_Val2_92_2_fu_1989_p2(13 downto 13);
    tmp_633_fu_2029_p3 <= p_Val2_94_2_fu_2023_p2(7 downto 7);
    tmp_634_fu_2658_p3 <= p_Val2_92_2_reg_4481(14 downto 14);
    tmp_637_fu_2096_p3 <= p_Val2_92_3_fu_2070_p2(13 downto 13);
    tmp_638_fu_2110_p3 <= p_Val2_94_3_fu_2104_p2(7 downto 7);
    tmp_639_fu_2755_p3 <= p_Val2_92_3_reg_4518(14 downto 14);
    tmp_642_fu_2177_p3 <= p_Val2_92_4_fu_2151_p2(13 downto 13);
    tmp_643_fu_2191_p3 <= p_Val2_94_4_fu_2185_p2(7 downto 7);
    tmp_644_fu_2852_p3 <= p_Val2_92_4_reg_4555(14 downto 14);
    tmp_647_fu_2258_p3 <= p_Val2_92_5_fu_2232_p2(13 downto 13);
    tmp_648_fu_2272_p3 <= p_Val2_94_5_fu_2266_p2(7 downto 7);
    tmp_649_fu_2949_p3 <= p_Val2_92_5_reg_4592(14 downto 14);
    tmp_652_fu_2339_p3 <= p_Val2_92_6_fu_2313_p2(13 downto 13);
    tmp_653_fu_2353_p3 <= p_Val2_94_6_fu_2347_p2(7 downto 7);
    tmp_654_fu_3046_p3 <= p_Val2_92_6_reg_4629(14 downto 14);
    tmp_657_fu_2420_p3 <= p_Val2_92_7_fu_2394_p2(13 downto 13);
    tmp_658_fu_2434_p3 <= p_Val2_94_7_fu_2428_p2(7 downto 7);
    tmp_659_fu_3143_p3 <= p_Val2_92_7_reg_4666(14 downto 14);
        tmp_691_cast_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1024_p2),9));

        tmp_693_cast_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_552_fu_1048_p2),6));

        tmp_695_cast_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_554_fu_1082_p2),64));

        tmp_698_cast_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_556_fu_1110_p2),64));

    tmp_710_cast_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter11_tmp_564_reg_4082),64));
    tmp_723_cast_fu_3919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_574_fu_3913_p2),64));
    tmp_728_cast_fu_3597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_577_fu_3592_p2),64));
    tmp_736_cast_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_583_fu_1465_p2),64));
    tmp_744_cast_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_589_reg_4182),64));
        tmp_746_cast_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_591_fu_1573_p2),6));

        tmp_747_cast_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_592_fu_1583_p2),64));

    tmp_753_cast_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_596_fu_1652_p2),64));
    tmp_cast_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_740),8));
    tmp_fu_1013_p3 <= (tmp_mid2_v_reg_3989 & ap_const_lv2_0);
    tmp_mid2_cast_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_reg_3989),8));
    tmp_mid2_v_fu_947_p3 <= 
        i_6_fu_934_p2 when (exitcond_flatten13_reg_3974(0) = '1') else 
        i_phi_fu_673_p4;
    tmp_s_fu_1024_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1020_p1) - unsigned(tmp_mid2_cast_fu_1010_p1));
    underflow_12_fu_3677_p2 <= (isneg_reg_4983 and tmp_280_fu_3672_p2);
    underflow_1_fu_2647_p2 <= (tmp_625_reg_4449 and tmp6_fu_2641_p2);
    underflow_2_fu_2744_p2 <= (tmp_630_reg_4486 and tmp8_fu_2738_p2);
    underflow_3_fu_2841_p2 <= (tmp_635_reg_4523 and tmp10_fu_2835_p2);
    underflow_4_fu_2938_p2 <= (tmp_640_reg_4560 and tmp12_fu_2932_p2);
    underflow_5_fu_3035_p2 <= (tmp_645_reg_4597 and tmp14_fu_3029_p2);
    underflow_6_fu_3132_p2 <= (tmp_650_reg_4634 and tmp16_fu_3126_p2);
    underflow_7_fu_3229_p2 <= (tmp_655_reg_4671 and tmp18_fu_3223_p2);
    underflow_fu_2550_p2 <= (tmp_620_reg_4412 and tmp4_fu_2544_p2);
    underflow_not_1_fu_3274_p2 <= (tmp7_fu_3270_p2 or p_38_i_i_1_reg_4728);
    underflow_not_2_fu_3304_p2 <= (tmp9_fu_3300_p2 or p_38_i_i_2_reg_4753);
    underflow_not_3_fu_3334_p2 <= (tmp11_fu_3330_p2 or p_38_i_i_3_reg_4778);
    underflow_not_4_fu_3364_p2 <= (tmp13_fu_3360_p2 or p_38_i_i_4_reg_4803);
    underflow_not_5_fu_3394_p2 <= (tmp15_fu_3390_p2 or p_38_i_i_5_reg_4828);
    underflow_not_6_fu_3424_p2 <= (tmp17_fu_3420_p2 or p_38_i_i_6_reg_4853);
    underflow_not_7_fu_3454_p2 <= (tmp19_fu_3450_p2 or p_38_i_i_7_reg_4878);
    underflow_not_fu_3244_p2 <= (tmp5_fu_3240_p2 or p_38_i_i_reg_4703);
    w_35_fu_1346_p2 <= std_logic_vector(unsigned(w_reg_752) + unsigned(ap_const_lv6_1));

    weight_V_blk_n_AR_assign_proc : process(m_axi_weight_V_ARREADY, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_flag00000000, ap_reg_pp0_iter3_exitcond_flatten_reg_3965)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter3_exitcond_flatten_reg_3965))) then 
            weight_V_blk_n_AR <= m_axi_weight_V_ARREADY;
        else 
            weight_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    weight_V_blk_n_R_assign_proc : process(m_axi_weight_V_RVALID, ap_block_pp0_stage0_flag00000000, ap_enable_reg_pp0_iter11, ap_reg_pp0_iter10_exitcond_flatten_reg_3965)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_const_lv1_0 = ap_reg_pp0_iter10_exitcond_flatten_reg_3965))) then 
            weight_V_blk_n_R <= m_axi_weight_V_RVALID;
        else 
            weight_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    weight_temp_0_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_0_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_0_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_V_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        else 
            weight_temp_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_0_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_0_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_0_V_d0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp0_stage0_flag00000000, weight_V_addr_read_reg_4087, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_0_V_d0 <= weight_V_addr_read_reg_4087;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            weight_temp_0_V_d0 <= ap_const_lv8_0;
        else 
            weight_temp_0_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_temp_0_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_const_lv3_0 = ap_reg_pp0_iter11_tmp_601_reg_3996)))) then 
            weight_temp_0_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_1_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_1_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_1_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_1_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_1))) then 
            weight_temp_1_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_2_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_2_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_2_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_2_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_2_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_2_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_2))) then 
            weight_temp_2_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_3_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_3_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_3_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_3_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_3_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_3_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_3))) then 
            weight_temp_3_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_4_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_4_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_4_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_4_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_4_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_4_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_4))) then 
            weight_temp_4_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_5_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_5_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_5_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_5_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_5_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_5_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_5))) then 
            weight_temp_5_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_6_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_6_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_6_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_6_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_6_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_6_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_6))) then 
            weight_temp_6_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_V_address0_assign_proc : process(ap_block_pp0_stage0_flag00000000, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12, tmp_710_cast_fu_1273_p1, tmp_753_cast_fu_1657_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            weight_temp_7_V_address0 <= tmp_753_cast_fu_1657_p1(7 - 1 downto 0);
        elsif (((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            weight_temp_7_V_address0 <= tmp_710_cast_fu_1273_p1(7 - 1 downto 0);
        else 
            weight_temp_7_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    weight_temp_7_V_ce0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_CS_fsm_state22, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) then 
            weight_temp_7_V_ce0 <= ap_const_logic_1;
        else 
            weight_temp_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_temp_7_V_we0_assign_proc : process(ap_block_pp0_stage0_flag00011001, ap_reg_pp0_iter11_tmp_601_reg_3996, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_reg_pp0_iter11_tmp_601_reg_3996 = ap_const_lv3_7))) then 
            weight_temp_7_V_we0 <= ap_const_logic_1;
        else 
            weight_temp_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
