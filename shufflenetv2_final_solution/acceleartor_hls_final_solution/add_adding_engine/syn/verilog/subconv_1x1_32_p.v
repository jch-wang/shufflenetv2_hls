// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module subconv_1x1_32_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_0_V_address0,
        weight_0_V_ce0,
        weight_0_V_q0,
        weight_0_V_address1,
        weight_0_V_ce1,
        weight_0_V_q1,
        weight_1_V_address0,
        weight_1_V_ce0,
        weight_1_V_q0,
        weight_1_V_address1,
        weight_1_V_ce1,
        weight_1_V_q1,
        weight_2_V_address0,
        weight_2_V_ce0,
        weight_2_V_q0,
        weight_2_V_address1,
        weight_2_V_ce1,
        weight_2_V_q1,
        weight_3_V_address0,
        weight_3_V_ce0,
        weight_3_V_q0,
        weight_3_V_address1,
        weight_3_V_ce1,
        weight_3_V_q1,
        weight_4_V_address0,
        weight_4_V_ce0,
        weight_4_V_q0,
        weight_4_V_address1,
        weight_4_V_ce1,
        weight_4_V_q1,
        weight_5_V_address0,
        weight_5_V_ce0,
        weight_5_V_q0,
        weight_5_V_address1,
        weight_5_V_ce1,
        weight_5_V_q1,
        weight_6_V_address0,
        weight_6_V_ce0,
        weight_6_V_q0,
        weight_6_V_address1,
        weight_6_V_ce1,
        weight_6_V_q1,
        weight_7_V_address0,
        weight_7_V_ce0,
        weight_7_V_q0,
        weight_7_V_address1,
        weight_7_V_ce1,
        weight_7_V_q1,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0,
        conv1_output_p_V_0_address0,
        conv1_output_p_V_0_ce0,
        conv1_output_p_V_0_q0,
        conv1_output_p_V_0_address1,
        conv1_output_p_V_0_ce1,
        conv1_output_p_V_0_q1,
        conv1_output_p_V_1_address0,
        conv1_output_p_V_1_ce0,
        conv1_output_p_V_1_q0,
        conv1_output_p_V_1_address1,
        conv1_output_p_V_1_ce1,
        conv1_output_p_V_1_q1,
        conv1_output_p_V_2_address0,
        conv1_output_p_V_2_ce0,
        conv1_output_p_V_2_q0,
        conv1_output_p_V_2_address1,
        conv1_output_p_V_2_ce1,
        conv1_output_p_V_2_q1,
        conv1_output_p_V_3_address0,
        conv1_output_p_V_3_ce0,
        conv1_output_p_V_3_q0,
        conv1_output_p_V_3_address1,
        conv1_output_p_V_3_ce1,
        conv1_output_p_V_3_q1,
        conv1_output_p_V_4_address0,
        conv1_output_p_V_4_ce0,
        conv1_output_p_V_4_q0,
        conv1_output_p_V_4_address1,
        conv1_output_p_V_4_ce1,
        conv1_output_p_V_4_q1,
        conv1_output_p_V_5_address0,
        conv1_output_p_V_5_ce0,
        conv1_output_p_V_5_q0,
        conv1_output_p_V_5_address1,
        conv1_output_p_V_5_ce1,
        conv1_output_p_V_5_q1,
        conv1_output_p_V_6_address0,
        conv1_output_p_V_6_ce0,
        conv1_output_p_V_6_q0,
        conv1_output_p_V_6_address1,
        conv1_output_p_V_6_ce1,
        conv1_output_p_V_6_q1,
        conv1_output_p_V_7_address0,
        conv1_output_p_V_7_ce0,
        conv1_output_p_V_7_q0,
        conv1_output_p_V_7_address1,
        conv1_output_p_V_7_ce1,
        conv1_output_p_V_7_q1
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] weight_0_V_address0;
output   weight_0_V_ce0;
input  [7:0] weight_0_V_q0;
output  [6:0] weight_0_V_address1;
output   weight_0_V_ce1;
input  [7:0] weight_0_V_q1;
output  [6:0] weight_1_V_address0;
output   weight_1_V_ce0;
input  [7:0] weight_1_V_q0;
output  [6:0] weight_1_V_address1;
output   weight_1_V_ce1;
input  [7:0] weight_1_V_q1;
output  [6:0] weight_2_V_address0;
output   weight_2_V_ce0;
input  [7:0] weight_2_V_q0;
output  [6:0] weight_2_V_address1;
output   weight_2_V_ce1;
input  [7:0] weight_2_V_q1;
output  [6:0] weight_3_V_address0;
output   weight_3_V_ce0;
input  [7:0] weight_3_V_q0;
output  [6:0] weight_3_V_address1;
output   weight_3_V_ce1;
input  [7:0] weight_3_V_q1;
output  [6:0] weight_4_V_address0;
output   weight_4_V_ce0;
input  [7:0] weight_4_V_q0;
output  [6:0] weight_4_V_address1;
output   weight_4_V_ce1;
input  [7:0] weight_4_V_q1;
output  [6:0] weight_5_V_address0;
output   weight_5_V_ce0;
input  [7:0] weight_5_V_q0;
output  [6:0] weight_5_V_address1;
output   weight_5_V_ce1;
input  [7:0] weight_5_V_q1;
output  [6:0] weight_6_V_address0;
output   weight_6_V_ce0;
input  [7:0] weight_6_V_q0;
output  [6:0] weight_6_V_address1;
output   weight_6_V_ce1;
input  [7:0] weight_6_V_q1;
output  [6:0] weight_7_V_address0;
output   weight_7_V_ce0;
input  [7:0] weight_7_V_q0;
output  [6:0] weight_7_V_address1;
output   weight_7_V_ce1;
input  [7:0] weight_7_V_q1;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [14:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [7:0] output_V_d0;
input  [7:0] output_V_q0;
output  [11:0] conv1_output_p_V_0_address0;
output   conv1_output_p_V_0_ce0;
input  [7:0] conv1_output_p_V_0_q0;
output  [11:0] conv1_output_p_V_0_address1;
output   conv1_output_p_V_0_ce1;
input  [7:0] conv1_output_p_V_0_q1;
output  [11:0] conv1_output_p_V_1_address0;
output   conv1_output_p_V_1_ce0;
input  [7:0] conv1_output_p_V_1_q0;
output  [11:0] conv1_output_p_V_1_address1;
output   conv1_output_p_V_1_ce1;
input  [7:0] conv1_output_p_V_1_q1;
output  [11:0] conv1_output_p_V_2_address0;
output   conv1_output_p_V_2_ce0;
input  [7:0] conv1_output_p_V_2_q0;
output  [11:0] conv1_output_p_V_2_address1;
output   conv1_output_p_V_2_ce1;
input  [7:0] conv1_output_p_V_2_q1;
output  [11:0] conv1_output_p_V_3_address0;
output   conv1_output_p_V_3_ce0;
input  [7:0] conv1_output_p_V_3_q0;
output  [11:0] conv1_output_p_V_3_address1;
output   conv1_output_p_V_3_ce1;
input  [7:0] conv1_output_p_V_3_q1;
output  [11:0] conv1_output_p_V_4_address0;
output   conv1_output_p_V_4_ce0;
input  [7:0] conv1_output_p_V_4_q0;
output  [11:0] conv1_output_p_V_4_address1;
output   conv1_output_p_V_4_ce1;
input  [7:0] conv1_output_p_V_4_q1;
output  [11:0] conv1_output_p_V_5_address0;
output   conv1_output_p_V_5_ce0;
input  [7:0] conv1_output_p_V_5_q0;
output  [11:0] conv1_output_p_V_5_address1;
output   conv1_output_p_V_5_ce1;
input  [7:0] conv1_output_p_V_5_q1;
output  [11:0] conv1_output_p_V_6_address0;
output   conv1_output_p_V_6_ce0;
input  [7:0] conv1_output_p_V_6_q0;
output  [11:0] conv1_output_p_V_6_address1;
output   conv1_output_p_V_6_ce1;
input  [7:0] conv1_output_p_V_6_q1;
output  [11:0] conv1_output_p_V_7_address0;
output   conv1_output_p_V_7_ce0;
input  [7:0] conv1_output_p_V_7_q0;
output  [11:0] conv1_output_p_V_7_address1;
output   conv1_output_p_V_7_ce1;
input  [7:0] conv1_output_p_V_7_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] weight_0_V_address0;
reg weight_0_V_ce0;
reg[6:0] weight_0_V_address1;
reg weight_0_V_ce1;
reg[6:0] weight_1_V_address0;
reg weight_1_V_ce0;
reg[6:0] weight_1_V_address1;
reg weight_1_V_ce1;
reg[6:0] weight_2_V_address0;
reg weight_2_V_ce0;
reg[6:0] weight_2_V_address1;
reg weight_2_V_ce1;
reg[6:0] weight_3_V_address0;
reg weight_3_V_ce0;
reg[6:0] weight_3_V_address1;
reg weight_3_V_ce1;
reg[6:0] weight_4_V_address0;
reg weight_4_V_ce0;
reg[6:0] weight_4_V_address1;
reg weight_4_V_ce1;
reg[6:0] weight_5_V_address0;
reg weight_5_V_ce0;
reg[6:0] weight_5_V_address1;
reg weight_5_V_ce1;
reg[6:0] weight_6_V_address0;
reg weight_6_V_ce0;
reg[6:0] weight_6_V_address1;
reg weight_6_V_ce1;
reg[6:0] weight_7_V_address0;
reg weight_7_V_ce0;
reg[6:0] weight_7_V_address1;
reg weight_7_V_ce1;
reg bias_V_ce0;
reg[14:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[7:0] output_V_d0;
reg[11:0] conv1_output_p_V_0_address0;
reg conv1_output_p_V_0_ce0;
reg conv1_output_p_V_0_ce1;
reg[11:0] conv1_output_p_V_1_address0;
reg conv1_output_p_V_1_ce0;
reg conv1_output_p_V_1_ce1;
reg[11:0] conv1_output_p_V_2_address0;
reg conv1_output_p_V_2_ce0;
reg conv1_output_p_V_2_ce1;
reg[11:0] conv1_output_p_V_3_address0;
reg conv1_output_p_V_3_ce0;
reg conv1_output_p_V_3_ce1;
reg[11:0] conv1_output_p_V_4_address0;
reg conv1_output_p_V_4_ce0;
reg conv1_output_p_V_4_ce1;
reg[11:0] conv1_output_p_V_5_address0;
reg conv1_output_p_V_5_ce0;
reg conv1_output_p_V_5_ce1;
reg[11:0] conv1_output_p_V_6_address0;
reg conv1_output_p_V_6_ce0;
reg conv1_output_p_V_6_ce1;
reg[11:0] conv1_output_p_V_7_address0;
reg conv1_output_p_V_7_ce0;
reg conv1_output_p_V_7_ce1;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] co_16_fu_2210_p2;
reg   [4:0] co_16_reg_3198;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp_293_fu_2245_p2;
reg   [10:0] tmp_293_reg_3203;
wire   [0:0] exitcond6_fu_2204_p2;
reg   [4:0] bias_V_addr_reg_3208;
wire   [15:0] tmp_300_fu_2286_p2;
reg   [15:0] tmp_300_reg_3216;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond8_fu_2251_p2;
wire   [15:0] tmp_307_fu_2302_p2;
reg   [15:0] tmp_307_reg_3224;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond11_fu_2292_p2;
wire   [5:0] w_16_fu_2307_p2;
reg   [5:0] w_16_reg_3229;
wire   [5:0] h_15_fu_2313_p2;
wire   [10:0] tmp_cast_fu_2329_p1;
reg   [10:0] tmp_cast_reg_3242;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond7_fu_2323_p2;
wire   [11:0] tmp_296_fu_2357_p2;
reg   [11:0] tmp_296_reg_3247;
wire   [11:0] tmp_297_fu_2367_p2;
reg   [11:0] tmp_297_reg_3252;
wire   [12:0] tmp_298_fu_2373_p2;
reg   [12:0] tmp_298_reg_3257;
wire   [15:0] tmp_192_cast1_fu_2385_p1;
reg   [15:0] tmp_192_cast1_reg_3265;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond10_fu_2379_p2;
reg   [11:0] conv1_output_p_V_2_a_reg_3270;
reg   [11:0] conv1_output_p_V_2_a_1_reg_3275;
reg   [11:0] conv1_output_p_V_2_a_2_reg_3280;
reg   [11:0] conv1_output_p_V_5_a_reg_3285;
reg   [11:0] conv1_output_p_V_5_a_1_reg_3290;
reg   [11:0] conv1_output_p_V_5_a_2_reg_3295;
reg   [11:0] conv1_output_p_V_4_a_reg_3300;
reg   [11:0] conv1_output_p_V_4_a_1_reg_3305;
reg   [11:0] conv1_output_p_V_4_a_2_reg_3310;
reg   [11:0] conv1_output_p_V_1_a_reg_3315;
reg   [11:0] conv1_output_p_V_1_a_1_reg_3320;
reg   [11:0] conv1_output_p_V_1_a_2_reg_3325;
reg   [11:0] conv1_output_p_V_3_a_reg_3330;
reg   [11:0] conv1_output_p_V_3_a_1_reg_3335;
reg   [11:0] conv1_output_p_V_3_a_2_reg_3340;
reg   [11:0] conv1_output_p_V_6_a_reg_3345;
reg   [11:0] conv1_output_p_V_6_a_1_reg_3350;
reg   [11:0] conv1_output_p_V_6_a_2_reg_3355;
reg   [11:0] conv1_output_p_V_0_a_reg_3360;
reg   [11:0] conv1_output_p_V_0_a_1_reg_3365;
reg   [11:0] conv1_output_p_V_0_a_2_reg_3370;
reg   [11:0] conv1_output_p_V_7_a_reg_3375;
reg   [11:0] conv1_output_p_V_7_a_1_reg_3380;
reg   [11:0] conv1_output_p_V_7_a_2_reg_3385;
wire   [5:0] h_14_fu_2448_p2;
wire   [4:0] co_18_fu_2460_p2;
reg   [4:0] co_18_reg_3398;
wire    ap_CS_fsm_state8;
reg   [14:0] output_V_addr_1_reg_3403;
wire   [0:0] exitcond13_fu_2454_p2;
wire   [2:0] tmp_389_fu_2537_p1;
reg   [2:0] tmp_389_reg_3408;
wire   [7:0] tmp_318_fu_2575_p2;
reg   [7:0] tmp_318_reg_3414;
wire   [5:0] w_17_fu_2611_p2;
wire    ap_CS_fsm_state9;
wire   [7:0] grp_fu_2162_p10;
reg   [7:0] tmp_201_reg_3605;
reg   [7:0] conv1_output_p_V_0_l_reg_3610;
wire   [7:0] grp_fu_2183_p10;
reg   [7:0] tmp_202_reg_3615;
reg   [7:0] conv1_output_p_V_1_l_reg_3620;
reg   [7:0] conv1_output_p_V_2_l_reg_3625;
reg   [7:0] conv1_output_p_V_3_l_reg_3630;
reg   [7:0] conv1_output_p_V_4_l_reg_3635;
reg   [7:0] conv1_output_p_V_5_l_reg_3640;
reg   [7:0] conv1_output_p_V_6_l_reg_3645;
reg   [7:0] conv1_output_p_V_7_l_reg_3650;
reg   [7:0] conv1_output_p_V_0_l_1_reg_3655;
reg   [7:0] conv1_output_p_V_1_l_1_reg_3660;
reg   [7:0] conv1_output_p_V_2_l_1_reg_3665;
reg   [7:0] conv1_output_p_V_3_l_1_reg_3670;
reg   [7:0] conv1_output_p_V_4_l_1_reg_3675;
reg   [7:0] conv1_output_p_V_5_l_1_reg_3680;
reg   [7:0] conv1_output_p_V_6_l_1_reg_3685;
reg   [7:0] conv1_output_p_V_7_l_1_reg_3690;
wire    ap_CS_fsm_state10;
reg   [7:0] tmp_203_reg_3775;
reg   [7:0] tmp_204_reg_3780;
reg   [7:0] conv1_output_p_V_0_l_2_reg_3785;
reg   [7:0] conv1_output_p_V_1_l_2_reg_3790;
reg   [7:0] conv1_output_p_V_2_l_2_reg_3795;
reg   [7:0] conv1_output_p_V_3_l_2_reg_3800;
reg   [7:0] conv1_output_p_V_4_l_2_reg_3805;
reg   [7:0] conv1_output_p_V_5_l_2_reg_3810;
reg   [7:0] conv1_output_p_V_6_l_2_reg_3815;
reg   [7:0] conv1_output_p_V_7_l_2_reg_3820;
wire    ap_CS_fsm_state11;
reg   [7:0] tmp_205_reg_3905;
reg   [7:0] tmp_206_reg_3910;
wire    ap_CS_fsm_state12;
reg   [7:0] tmp_207_reg_3995;
reg   [7:0] tmp_208_reg_4000;
wire    ap_CS_fsm_state13;
reg   [7:0] tmp_209_reg_4085;
reg   [7:0] tmp_210_reg_4090;
wire    ap_CS_fsm_state14;
reg   [7:0] tmp_211_reg_4175;
reg   [7:0] tmp_212_reg_4180;
wire    ap_CS_fsm_state15;
reg   [7:0] tmp_213_reg_4265;
reg   [7:0] tmp_214_reg_4270;
wire    ap_CS_fsm_state16;
reg   [7:0] tmp_215_reg_4355;
reg   [7:0] tmp_216_reg_4360;
wire    ap_CS_fsm_state17;
reg   [7:0] tmp_217_reg_4445;
reg   [7:0] tmp_218_reg_4450;
wire    ap_CS_fsm_state18;
reg   [7:0] tmp_219_reg_4535;
reg   [7:0] tmp_220_reg_4540;
wire    ap_CS_fsm_state19;
reg   [7:0] tmp_221_reg_4625;
reg   [7:0] tmp_222_reg_4630;
reg   [7:0] tmp_223_reg_4635;
wire    ap_CS_fsm_state20;
reg   [7:0] tmp_224_reg_4640;
wire   [7:0] grp_COMPUTE_ENGINE_fu_2110_ap_return;
reg   [7:0] p_Val2_60_reg_4645;
wire    ap_CS_fsm_state22;
wire    grp_COMPUTE_ENGINE_fu_2110_ap_done;
reg   [0:0] isneg_reg_4651;
wire    ap_CS_fsm_state23;
wire   [7:0] p_Val2_62_fu_3012_p2;
reg   [7:0] p_Val2_62_reg_4658;
reg   [0:0] newsignbit_reg_4664;
wire   [4:0] co_17_fu_3078_p2;
reg   [4:0] co_17_reg_4674;
wire    ap_CS_fsm_state25;
wire   [10:0] tmp_303_fu_3108_p2;
reg   [10:0] tmp_303_reg_4679;
wire   [0:0] exitcond9_fu_3072_p2;
wire   [15:0] tmp_309_fu_3149_p2;
reg   [15:0] tmp_309_reg_4687;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond12_fu_3114_p2;
reg   [14:0] output_V_addr_2_reg_4695;
wire    ap_CS_fsm_state27;
wire   [0:0] exitcond_fu_3155_p2;
wire   [5:0] h_16_fu_3175_p2;
wire   [5:0] w_18_fu_3189_p2;
wire    ap_CS_fsm_state28;
wire    grp_COMPUTE_ENGINE_fu_2110_ap_start;
wire    grp_COMPUTE_ENGINE_fu_2110_ap_idle;
wire    grp_COMPUTE_ENGINE_fu_2110_ap_ready;
reg   [4:0] co_reg_2006;
reg   [5:0] h_reg_2017;
reg   [5:0] w_reg_2029;
wire    ap_CS_fsm_state5;
reg   [5:0] h1_reg_2040;
reg   [5:0] w2_reg_2052;
reg   [4:0] co3_reg_2064;
wire    ap_CS_fsm_state24;
reg   [4:0] co4_reg_2075;
reg   [5:0] h5_reg_2086;
reg   [5:0] w6_reg_2098;
reg    ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_fu_2216_p1;
wire   [63:0] tmp_346_cast_fu_2319_p1;
wire   [63:0] tmp_343_cast_fu_2402_p1;
wire   [63:0] tmp_344_cast_fu_2419_p1;
wire  signed [63:0] tmp_345_cast_fu_2436_p1;
wire   [63:0] tmp_358_cast_fu_2532_p1;
wire  signed [63:0] tmp_361_cast_fu_2581_p1;
wire   [63:0] tmp_362_cast_fu_2599_p1;
wire  signed [63:0] tmp_363_cast_fu_2622_p1;
wire  signed [63:0] tmp_364_cast_fu_2639_p1;
wire  signed [63:0] tmp_365_cast_fu_2656_p1;
wire  signed [63:0] tmp_366_cast_fu_2673_p1;
wire  signed [63:0] tmp_367_cast_fu_2690_p1;
wire  signed [63:0] tmp_368_cast_fu_2707_p1;
wire  signed [63:0] tmp_369_cast_fu_2724_p1;
wire  signed [63:0] tmp_370_cast_fu_2741_p1;
wire  signed [63:0] tmp_371_cast_fu_2758_p1;
wire  signed [63:0] tmp_372_cast_fu_2775_p1;
wire  signed [63:0] tmp_373_cast_fu_2792_p1;
wire  signed [63:0] tmp_374_cast_fu_2809_p1;
wire  signed [63:0] tmp_375_cast_fu_2826_p1;
wire  signed [63:0] tmp_376_cast_fu_2843_p1;
wire  signed [63:0] tmp_377_cast_fu_2860_p1;
wire  signed [63:0] tmp_378_cast_fu_2877_p1;
wire  signed [63:0] tmp_379_cast_fu_2894_p1;
wire  signed [63:0] tmp_380_cast_fu_2911_p1;
wire  signed [63:0] tmp_381_cast_fu_2928_p1;
wire  signed [63:0] tmp_382_cast_fu_2945_p1;
wire  signed [63:0] tmp_383_cast_fu_2962_p1;
wire  signed [63:0] tmp_384_cast_fu_2979_p1;
wire   [63:0] tmp_385_cast_fu_3170_p1;
wire   [7:0] this_assign_32_1_fu_3063_p3;
wire   [0:0] tmp_392_fu_3181_p3;
wire   [9:0] tmp_s_fu_2221_p3;
wire   [5:0] tmp_292_fu_2233_p3;
wire   [10:0] p_shl1_cast_fu_2241_p1;
wire   [10:0] p_shl_cast_fu_2229_p1;
wire   [10:0] tmp_190_cast_fu_2257_p1;
wire   [10:0] tmp_299_fu_2261_p2;
wire   [11:0] tmp_386_fu_2274_p3;
wire   [15:0] p_shl2_cast_fu_2266_p3;
wire   [15:0] p_shl3_cast_fu_2282_p1;
wire   [15:0] tmp_193_cast_fu_2298_p1;
wire   [10:0] tmp_294_fu_2333_p3;
wire   [6:0] tmp_295_fu_2345_p3;
wire   [11:0] p_shl5_cast_fu_2353_p1;
wire   [11:0] p_shl4_cast_fu_2341_p1;
wire   [12:0] tmp_333_cast_fu_2363_p1;
wire   [11:0] tmp_192_cast_fu_2393_p1;
wire   [11:0] tmp_304_fu_2397_p2;
wire   [11:0] tmp_305_fu_2414_p2;
wire   [12:0] tmp_192_cast2_fu_2389_p1;
wire   [12:0] tmp_306_fu_2431_p2;
wire   [9:0] tmp_310_fu_2466_p3;
wire   [5:0] tmp_311_fu_2478_p3;
wire   [10:0] p_shl11_cast_fu_2486_p1;
wire   [10:0] p_shl10_cast_fu_2474_p1;
wire   [10:0] tmp_312_fu_2490_p2;
wire   [10:0] tmp_313_fu_2496_p2;
wire   [11:0] tmp_388_fu_2509_p3;
wire   [15:0] p_shl9_cast_fu_2517_p1;
wire   [15:0] p_shl8_cast_fu_2501_p3;
wire   [15:0] tmp_314_fu_2521_p2;
wire   [15:0] tmp_315_fu_2527_p2;
wire   [1:0] newIndex_fu_2541_p4;
wire   [6:0] tmp_316_fu_2551_p3;
wire   [4:0] tmp_317_fu_2563_p3;
wire   [7:0] p_shl6_cast_fu_2559_p1;
wire   [7:0] p_shl7_cast_fu_2571_p1;
wire   [7:0] tmp_319_fu_2593_p2;
wire   [7:0] tmp_320_fu_2617_p2;
wire   [7:0] tmp_321_fu_2634_p2;
wire   [7:0] tmp_322_fu_2651_p2;
wire   [7:0] tmp_323_fu_2668_p2;
wire   [7:0] tmp_324_fu_2685_p2;
wire   [7:0] tmp_325_fu_2702_p2;
wire   [7:0] tmp_326_fu_2719_p2;
wire   [7:0] tmp_327_fu_2736_p2;
wire   [7:0] tmp_328_fu_2753_p2;
wire   [7:0] tmp_329_fu_2770_p2;
wire   [7:0] tmp_330_fu_2787_p2;
wire   [7:0] tmp_331_fu_2804_p2;
wire   [7:0] tmp_332_fu_2821_p2;
wire   [7:0] tmp_333_fu_2838_p2;
wire   [7:0] tmp_334_fu_2855_p2;
wire   [7:0] tmp_335_fu_2872_p2;
wire   [7:0] tmp_336_fu_2889_p2;
wire   [7:0] tmp_337_fu_2906_p2;
wire   [7:0] tmp_338_fu_2923_p2;
wire   [7:0] tmp_339_fu_2940_p2;
wire   [7:0] tmp_340_fu_2957_p2;
wire   [7:0] tmp_341_fu_2974_p2;
wire  signed [8:0] tmp_197_fu_2995_p1;
wire  signed [8:0] tmp_196_fu_2991_p1;
wire   [8:0] p_Val2_61_fu_2998_p2;
wire   [0:0] tmp_198_fu_3025_p2;
wire   [0:0] isneg_not_fu_3039_p2;
wire   [0:0] brmerge_i_i_i_fu_3035_p2;
wire   [0:0] underflow_fu_3030_p2;
wire   [0:0] brmerge_fu_3044_p2;
wire   [7:0] p_Val2_63_mux_fu_3049_p3;
wire   [7:0] p_Val2_s_117_fu_3056_p3;
wire   [9:0] tmp_301_fu_3084_p3;
wire   [5:0] tmp_302_fu_3096_p3;
wire   [10:0] p_shl13_cast_fu_3104_p1;
wire   [10:0] p_shl12_cast_fu_3092_p1;
wire   [10:0] tmp_194_cast_fu_3120_p1;
wire   [10:0] tmp_308_fu_3124_p2;
wire   [11:0] tmp_387_fu_3137_p3;
wire   [15:0] p_shl14_cast_fu_3129_p3;
wire   [15:0] p_shl15_cast_fu_3145_p1;
wire   [15:0] tmp_199_cast_fu_3161_p1;
wire   [15:0] tmp_342_fu_3165_p2;
reg   [27:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start = 1'b0;
end

COMPUTE_ENGINE grp_COMPUTE_ENGINE_fu_2110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_COMPUTE_ENGINE_fu_2110_ap_start),
    .ap_done(grp_COMPUTE_ENGINE_fu_2110_ap_done),
    .ap_idle(grp_COMPUTE_ENGINE_fu_2110_ap_idle),
    .ap_ready(grp_COMPUTE_ENGINE_fu_2110_ap_ready),
    .w0_V(tmp_201_reg_3605),
    .b0_V(conv1_output_p_V_0_l_reg_3610),
    .w1_V(tmp_202_reg_3615),
    .b1_V(conv1_output_p_V_1_l_reg_3620),
    .w2_V(tmp_203_reg_3775),
    .b2_V(conv1_output_p_V_2_l_reg_3625),
    .w3_V(tmp_204_reg_3780),
    .b3_V(conv1_output_p_V_3_l_reg_3630),
    .w4_V(tmp_205_reg_3905),
    .b4_V(conv1_output_p_V_4_l_reg_3635),
    .w5_V(tmp_206_reg_3910),
    .b5_V(conv1_output_p_V_5_l_reg_3640),
    .w6_V(tmp_207_reg_3995),
    .b6_V(conv1_output_p_V_6_l_reg_3645),
    .w7_V(tmp_208_reg_4000),
    .b7_V(conv1_output_p_V_7_l_reg_3650),
    .w8_V(tmp_209_reg_4085),
    .b8_V(conv1_output_p_V_0_l_1_reg_3655),
    .w9_V(tmp_210_reg_4090),
    .b9_V(conv1_output_p_V_1_l_1_reg_3660),
    .w10_V(tmp_211_reg_4175),
    .b10_V(conv1_output_p_V_2_l_1_reg_3665),
    .w11_V(tmp_212_reg_4180),
    .b11_V(conv1_output_p_V_3_l_1_reg_3670),
    .w12_V(tmp_213_reg_4265),
    .b12_V(conv1_output_p_V_4_l_1_reg_3675),
    .w13_V(tmp_214_reg_4270),
    .b13_V(conv1_output_p_V_5_l_1_reg_3680),
    .w14_V(tmp_215_reg_4355),
    .b14_V(conv1_output_p_V_6_l_1_reg_3685),
    .w15_V(tmp_216_reg_4360),
    .b15_V(conv1_output_p_V_7_l_1_reg_3690),
    .w16_V(tmp_217_reg_4445),
    .b16_V(conv1_output_p_V_0_l_2_reg_3785),
    .w17_V(tmp_218_reg_4450),
    .b17_V(conv1_output_p_V_1_l_2_reg_3790),
    .w18_V(tmp_219_reg_4535),
    .b18_V(conv1_output_p_V_2_l_2_reg_3795),
    .w19_V(tmp_220_reg_4540),
    .b19_V(conv1_output_p_V_3_l_2_reg_3800),
    .w20_V(tmp_221_reg_4625),
    .b20_V(conv1_output_p_V_4_l_2_reg_3805),
    .w21_V(tmp_222_reg_4630),
    .b21_V(conv1_output_p_V_5_l_2_reg_3810),
    .w22_V(tmp_223_reg_4635),
    .b22_V(conv1_output_p_V_6_l_2_reg_3815),
    .w23_V(tmp_224_reg_4640),
    .b23_V(conv1_output_p_V_7_l_2_reg_3820),
    .ap_return(grp_COMPUTE_ENGINE_fu_2110_ap_return)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U64(
    .din1(weight_0_V_q0),
    .din2(weight_1_V_q0),
    .din3(weight_2_V_q0),
    .din4(weight_3_V_q0),
    .din5(weight_4_V_q0),
    .din6(weight_5_V_q0),
    .din7(weight_6_V_q0),
    .din8(weight_7_V_q0),
    .din9(tmp_389_reg_3408),
    .dout(grp_fu_2162_p10)
);

ShuffleNetV2_mux_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_jbC_x_U65(
    .din1(weight_0_V_q1),
    .din2(weight_1_V_q1),
    .din3(weight_2_V_q1),
    .din4(weight_3_V_q1),
    .din5(weight_4_V_q1),
    .din6(weight_5_V_q1),
    .din7(weight_6_V_q1),
    .din8(weight_7_V_q1),
    .din9(tmp_389_reg_3408),
    .dout(grp_fu_2183_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= 1'b1;
        end else if ((1'b1 == grp_COMPUTE_ENGINE_fu_2110_ap_ready)) begin
            ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond10_fu_2379_p2))) begin
        co3_reg_2064 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        co3_reg_2064 <= co_18_reg_3398;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond7_fu_2323_p2))) begin
        co4_reg_2075 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond12_fu_3114_p2))) begin
        co4_reg_2075 <= co_17_reg_4674;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_2251_p2 == 1'd1))) begin
        co_reg_2006 <= co_16_reg_3198;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_2006 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond6_fu_2204_p2 == 1'd1))) begin
        h1_reg_2040 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond10_fu_2379_p2))) begin
        h1_reg_2040 <= h_14_fu_2448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd0 == exitcond9_fu_3072_p2))) begin
        h5_reg_2086 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond_fu_3155_p2))) begin
        h5_reg_2086 <= h_16_fu_3175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond6_fu_2204_p2 == 1'd0))) begin
        h_reg_2017 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond11_fu_2292_p2 == 1'd1))) begin
        h_reg_2017 <= h_15_fu_2313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond7_fu_2323_p2))) begin
        w2_reg_2052 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond13_fu_2454_p2))) begin
        w2_reg_2052 <= w_17_fu_2611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd0 == exitcond12_fu_3114_p2))) begin
        w6_reg_2098 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        w6_reg_2098 <= w_18_fu_3189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_2251_p2))) begin
        w_reg_2029 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_reg_2029 <= w_16_reg_3229;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond6_fu_2204_p2 == 1'd0))) begin
        bias_V_addr_reg_3208 <= tmp_fu_2216_p1;
        tmp_293_reg_3203[10 : 1] <= tmp_293_fu_2245_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        co_16_reg_3198 <= co_16_fu_2210_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        co_17_reg_4674 <= co_17_fu_3078_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        co_18_reg_3398 <= co_18_fu_2460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd0 == exitcond10_fu_2379_p2))) begin
        conv1_output_p_V_0_a_1_reg_3365 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_0_a_2_reg_3370 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_0_a_reg_3360 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_1_a_1_reg_3320 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_1_a_2_reg_3325 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_1_a_reg_3315 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_2_a_1_reg_3275 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_2_a_2_reg_3280 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_2_a_reg_3270 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_3_a_1_reg_3335 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_3_a_2_reg_3340 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_3_a_reg_3330 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_4_a_1_reg_3305 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_4_a_2_reg_3310 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_4_a_reg_3300 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_5_a_1_reg_3290 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_5_a_2_reg_3295 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_5_a_reg_3285 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_6_a_1_reg_3350 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_6_a_2_reg_3355 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_6_a_reg_3345 <= tmp_343_cast_fu_2402_p1;
        conv1_output_p_V_7_a_1_reg_3380 <= tmp_344_cast_fu_2419_p1;
        conv1_output_p_V_7_a_2_reg_3385 <= tmp_345_cast_fu_2436_p1;
        conv1_output_p_V_7_a_reg_3375 <= tmp_343_cast_fu_2402_p1;
        tmp_192_cast1_reg_3265[5 : 0] <= tmp_192_cast1_fu_2385_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_0_l_1_reg_3655 <= conv1_output_p_V_0_q1;
        conv1_output_p_V_0_l_reg_3610 <= conv1_output_p_V_0_q0;
        conv1_output_p_V_1_l_1_reg_3660 <= conv1_output_p_V_1_q1;
        conv1_output_p_V_1_l_reg_3620 <= conv1_output_p_V_1_q0;
        conv1_output_p_V_2_l_1_reg_3665 <= conv1_output_p_V_2_q1;
        conv1_output_p_V_2_l_reg_3625 <= conv1_output_p_V_2_q0;
        conv1_output_p_V_3_l_1_reg_3670 <= conv1_output_p_V_3_q1;
        conv1_output_p_V_3_l_reg_3630 <= conv1_output_p_V_3_q0;
        conv1_output_p_V_4_l_1_reg_3675 <= conv1_output_p_V_4_q1;
        conv1_output_p_V_4_l_reg_3635 <= conv1_output_p_V_4_q0;
        conv1_output_p_V_5_l_1_reg_3680 <= conv1_output_p_V_5_q1;
        conv1_output_p_V_5_l_reg_3640 <= conv1_output_p_V_5_q0;
        conv1_output_p_V_6_l_1_reg_3685 <= conv1_output_p_V_6_q1;
        conv1_output_p_V_6_l_reg_3645 <= conv1_output_p_V_6_q0;
        conv1_output_p_V_7_l_1_reg_3690 <= conv1_output_p_V_7_q1;
        conv1_output_p_V_7_l_reg_3650 <= conv1_output_p_V_7_q0;
        tmp_201_reg_3605 <= grp_fu_2162_p10;
        tmp_202_reg_3615 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_output_p_V_0_l_2_reg_3785 <= conv1_output_p_V_0_q0;
        conv1_output_p_V_1_l_2_reg_3790 <= conv1_output_p_V_1_q0;
        conv1_output_p_V_2_l_2_reg_3795 <= conv1_output_p_V_2_q0;
        conv1_output_p_V_3_l_2_reg_3800 <= conv1_output_p_V_3_q0;
        conv1_output_p_V_4_l_2_reg_3805 <= conv1_output_p_V_4_q0;
        conv1_output_p_V_5_l_2_reg_3810 <= conv1_output_p_V_5_q0;
        conv1_output_p_V_6_l_2_reg_3815 <= conv1_output_p_V_6_q0;
        conv1_output_p_V_7_l_2_reg_3820 <= conv1_output_p_V_7_q0;
        tmp_203_reg_3775 <= grp_fu_2162_p10;
        tmp_204_reg_3780 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        isneg_reg_4651 <= p_Val2_61_fu_2998_p2[32'd8];
        newsignbit_reg_4664 <= p_Val2_62_fu_3012_p2[32'd7];
        p_Val2_62_reg_4658 <= p_Val2_62_fu_3012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd0 == exitcond13_fu_2454_p2))) begin
        output_V_addr_1_reg_3403 <= tmp_358_cast_fu_2532_p1;
        tmp_318_reg_3414[7 : 3] <= tmp_318_fu_2575_p2[7 : 3];
        tmp_389_reg_3408 <= tmp_389_fu_2537_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond_fu_3155_p2))) begin
        output_V_addr_2_reg_4695 <= tmp_385_cast_fu_3170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_COMPUTE_ENGINE_fu_2110_ap_done == 1'b1))) begin
        p_Val2_60_reg_4645 <= grp_COMPUTE_ENGINE_fu_2110_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_205_reg_3905 <= grp_fu_2162_p10;
        tmp_206_reg_3910 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_207_reg_3995 <= grp_fu_2162_p10;
        tmp_208_reg_4000 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_209_reg_4085 <= grp_fu_2162_p10;
        tmp_210_reg_4090 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_211_reg_4175 <= grp_fu_2162_p10;
        tmp_212_reg_4180 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_213_reg_4265 <= grp_fu_2162_p10;
        tmp_214_reg_4270 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_215_reg_4355 <= grp_fu_2162_p10;
        tmp_216_reg_4360 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_217_reg_4445 <= grp_fu_2162_p10;
        tmp_218_reg_4450 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_219_reg_4535 <= grp_fu_2162_p10;
        tmp_220_reg_4540 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_221_reg_4625 <= grp_fu_2162_p10;
        tmp_222_reg_4630 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_223_reg_4635 <= grp_fu_2162_p10;
        tmp_224_reg_4640 <= grp_fu_2183_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == exitcond7_fu_2323_p2))) begin
        tmp_296_reg_3247[11 : 1] <= tmp_296_fu_2357_p2[11 : 1];
        tmp_297_reg_3252[11 : 1] <= tmp_297_fu_2367_p2[11 : 1];
        tmp_298_reg_3257[12 : 1] <= tmp_298_fu_2373_p2[12 : 1];
        tmp_cast_reg_3242[5 : 0] <= tmp_cast_fu_2329_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == exitcond8_fu_2251_p2))) begin
        tmp_300_reg_3216[15 : 1] <= tmp_300_fu_2286_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd0 == exitcond9_fu_3072_p2))) begin
        tmp_303_reg_4679[10 : 1] <= tmp_303_fu_3108_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == exitcond11_fu_2292_p2))) begin
        tmp_307_reg_3224 <= tmp_307_fu_2302_p2;
        w_16_reg_3229 <= w_16_fu_2307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd0 == exitcond12_fu_3114_p2))) begin
        tmp_309_reg_4687[15 : 1] <= tmp_309_fu_3149_p2[15 : 1];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond9_fu_3072_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond9_fu_3072_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_2_reg_3370;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_reg_3360;
    end else begin
        conv1_output_p_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_0_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_0_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_2_reg_3325;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_reg_3315;
    end else begin
        conv1_output_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_1_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_1_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_2_reg_3280;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_reg_3270;
    end else begin
        conv1_output_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_2_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_2_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_2_reg_3340;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_reg_3330;
    end else begin
        conv1_output_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_3_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_3_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_2_reg_3310;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_reg_3300;
    end else begin
        conv1_output_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_4_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_4_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_2_reg_3295;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_reg_3285;
    end else begin
        conv1_output_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_5_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_5_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_2_reg_3355;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_reg_3345;
    end else begin
        conv1_output_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_6_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_6_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_2_reg_3385;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_reg_3375;
    end else begin
        conv1_output_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv1_output_p_V_7_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv1_output_p_V_7_ce1 = 1'b1;
    end else begin
        conv1_output_p_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        output_V_address0 = output_V_addr_2_reg_4695;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_V_address0 = tmp_385_cast_fu_3170_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        output_V_address0 = output_V_addr_1_reg_3403;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_address0 = tmp_346_cast_fu_2319_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (grp_COMPUTE_ENGINE_fu_2110_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state24))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        output_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_V_d0 = this_assign_32_1_fu_3063_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_d0 = bias_V_q0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state24) | ((1'b1 == ap_CS_fsm_state28) & (1'd1 == tmp_392_fu_3181_p3)))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_0_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_0_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_0_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_0_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_0_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_0_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_0_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_0_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_0_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_0_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_0_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_0_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_0_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_0_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_0_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_0_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_0_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_0_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_0_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_0_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_0_V_ce0 = 1'b1;
    end else begin
        weight_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_0_V_ce1 = 1'b1;
    end else begin
        weight_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_1_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_1_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_1_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_1_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_1_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_1_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_1_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_1_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_1_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_1_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_1_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_1_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_1_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_1_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_1_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_1_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_1_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_1_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_1_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_1_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_1_V_ce0 = 1'b1;
    end else begin
        weight_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_1_V_ce1 = 1'b1;
    end else begin
        weight_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_2_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_2_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_2_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_2_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_2_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_2_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_2_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_2_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_2_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_2_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_2_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_2_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_2_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_2_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_2_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_2_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_2_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_2_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_2_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_2_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_2_V_ce0 = 1'b1;
    end else begin
        weight_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_2_V_ce1 = 1'b1;
    end else begin
        weight_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_3_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_3_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_3_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_3_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_3_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_3_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_3_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_3_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_3_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_3_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_3_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_3_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_3_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_3_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_3_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_3_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_3_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_3_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_3_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_3_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_3_V_ce0 = 1'b1;
    end else begin
        weight_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_3_V_ce1 = 1'b1;
    end else begin
        weight_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_4_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_4_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_4_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_4_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_4_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_4_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_4_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_4_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_4_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_4_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_4_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_4_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_4_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_4_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_4_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_4_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_4_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_4_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_4_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_4_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_4_V_ce0 = 1'b1;
    end else begin
        weight_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_4_V_ce1 = 1'b1;
    end else begin
        weight_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_5_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_5_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_5_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_5_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_5_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_5_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_5_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_5_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_5_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_5_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_5_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_5_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_5_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_5_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_5_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_5_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_5_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_5_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_5_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_5_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_5_V_ce0 = 1'b1;
    end else begin
        weight_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_5_V_ce1 = 1'b1;
    end else begin
        weight_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_6_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_6_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_6_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_6_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_6_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_6_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_6_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_6_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_6_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_6_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_6_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_6_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_6_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_6_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_6_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_6_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_6_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_6_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_6_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_6_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_6_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_6_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_6_V_ce0 = 1'b1;
    end else begin
        weight_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_6_V_ce1 = 1'b1;
    end else begin
        weight_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_7_V_address0 = tmp_383_cast_fu_2962_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_7_V_address0 = tmp_381_cast_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address0 = tmp_379_cast_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_7_V_address0 = tmp_377_cast_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_7_V_address0 = tmp_375_cast_fu_2826_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_7_V_address0 = tmp_373_cast_fu_2792_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_7_V_address0 = tmp_371_cast_fu_2758_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_7_V_address0 = tmp_369_cast_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_7_V_address0 = tmp_367_cast_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_address0 = tmp_365_cast_fu_2656_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_address0 = tmp_363_cast_fu_2622_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_7_V_address0 = tmp_361_cast_fu_2581_p1;
    end else begin
        weight_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_7_V_address1 = tmp_384_cast_fu_2979_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_7_V_address1 = tmp_382_cast_fu_2945_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_7_V_address1 = tmp_380_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_7_V_address1 = tmp_378_cast_fu_2877_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_7_V_address1 = tmp_376_cast_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_7_V_address1 = tmp_374_cast_fu_2809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_7_V_address1 = tmp_372_cast_fu_2775_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_7_V_address1 = tmp_370_cast_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_7_V_address1 = tmp_368_cast_fu_2707_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_7_V_address1 = tmp_366_cast_fu_2673_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_7_V_address1 = tmp_364_cast_fu_2639_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_7_V_address1 = tmp_362_cast_fu_2599_p1;
    end else begin
        weight_7_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_7_V_ce0 = 1'b1;
    end else begin
        weight_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19))) begin
        weight_7_V_ce1 = 1'b1;
    end else begin
        weight_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond6_fu_2204_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond8_fu_2251_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond11_fu_2292_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == exitcond7_fu_2323_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == exitcond10_fu_2379_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == exitcond13_fu_2454_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_COMPUTE_ENGINE_fu_2110_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (1'd1 == exitcond9_fu_3072_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == exitcond12_fu_3114_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'd1 == exitcond_fu_3155_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bias_V_address0 = bias_V_addr_reg_3208;

assign brmerge_fu_3044_p2 = (newsignbit_reg_4664 | isneg_not_fu_3039_p2);

assign brmerge_i_i_i_fu_3035_p2 = (isneg_reg_4651 ^ newsignbit_reg_4664);

assign co_16_fu_2210_p2 = (co_reg_2006 + 5'd1);

assign co_17_fu_3078_p2 = (co4_reg_2075 + 5'd1);

assign co_18_fu_2460_p2 = (co3_reg_2064 + 5'd1);

assign conv1_output_p_V_0_address1 = conv1_output_p_V_0_a_1_reg_3365;

assign conv1_output_p_V_1_address1 = conv1_output_p_V_1_a_1_reg_3320;

assign conv1_output_p_V_2_address1 = conv1_output_p_V_2_a_1_reg_3275;

assign conv1_output_p_V_3_address1 = conv1_output_p_V_3_a_1_reg_3335;

assign conv1_output_p_V_4_address1 = conv1_output_p_V_4_a_1_reg_3305;

assign conv1_output_p_V_5_address1 = conv1_output_p_V_5_a_1_reg_3290;

assign conv1_output_p_V_6_address1 = conv1_output_p_V_6_a_1_reg_3350;

assign conv1_output_p_V_7_address1 = conv1_output_p_V_7_a_1_reg_3380;

assign exitcond10_fu_2379_p2 = ((w2_reg_2052 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond11_fu_2292_p2 = ((w_reg_2029 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond12_fu_3114_p2 = ((h5_reg_2086 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond13_fu_2454_p2 = ((co3_reg_2064 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond6_fu_2204_p2 = ((co_reg_2006 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond7_fu_2323_p2 = ((h1_reg_2040 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond8_fu_2251_p2 = ((h_reg_2017 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond9_fu_3072_p2 = ((co4_reg_2075 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_fu_3155_p2 = ((w6_reg_2098 == 6'd33) ? 1'b1 : 1'b0);

assign grp_COMPUTE_ENGINE_fu_2110_ap_start = ap_reg_grp_COMPUTE_ENGINE_fu_2110_ap_start;

assign h_14_fu_2448_p2 = (h1_reg_2040 + 6'd1);

assign h_15_fu_2313_p2 = (h_reg_2017 + 6'd1);

assign h_16_fu_3175_p2 = (h5_reg_2086 + 6'd1);

assign isneg_not_fu_3039_p2 = (isneg_reg_4651 ^ 1'd1);

assign newIndex_fu_2541_p4 = {{co3_reg_2064[4:3]}};

assign p_Val2_61_fu_2998_p2 = ($signed(tmp_197_fu_2995_p1) + $signed(tmp_196_fu_2991_p1));

assign p_Val2_62_fu_3012_p2 = (p_Val2_60_reg_4645 + output_V_q0);

assign p_Val2_63_mux_fu_3049_p3 = ((brmerge_i_i_i_fu_3035_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_62_reg_4658);

assign p_Val2_s_117_fu_3056_p3 = ((underflow_fu_3030_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_62_reg_4658);

assign p_shl10_cast_fu_2474_p1 = tmp_310_fu_2466_p3;

assign p_shl11_cast_fu_2486_p1 = tmp_311_fu_2478_p3;

assign p_shl12_cast_fu_3092_p1 = tmp_301_fu_3084_p3;

assign p_shl13_cast_fu_3104_p1 = tmp_302_fu_3096_p3;

assign p_shl14_cast_fu_3129_p3 = {{tmp_308_fu_3124_p2}, {5'd0}};

assign p_shl15_cast_fu_3145_p1 = tmp_387_fu_3137_p3;

assign p_shl1_cast_fu_2241_p1 = tmp_292_fu_2233_p3;

assign p_shl2_cast_fu_2266_p3 = {{tmp_299_fu_2261_p2}, {5'd0}};

assign p_shl3_cast_fu_2282_p1 = tmp_386_fu_2274_p3;

assign p_shl4_cast_fu_2341_p1 = tmp_294_fu_2333_p3;

assign p_shl5_cast_fu_2353_p1 = tmp_295_fu_2345_p3;

assign p_shl6_cast_fu_2559_p1 = tmp_316_fu_2551_p3;

assign p_shl7_cast_fu_2571_p1 = tmp_317_fu_2563_p3;

assign p_shl8_cast_fu_2501_p3 = {{tmp_313_fu_2496_p2}, {5'd0}};

assign p_shl9_cast_fu_2517_p1 = tmp_388_fu_2509_p3;

assign p_shl_cast_fu_2229_p1 = tmp_s_fu_2221_p3;

assign this_assign_32_1_fu_3063_p3 = ((brmerge_fu_3044_p2[0:0] === 1'b1) ? p_Val2_63_mux_fu_3049_p3 : p_Val2_s_117_fu_3056_p3);

assign tmp_190_cast_fu_2257_p1 = h_reg_2017;

assign tmp_192_cast1_fu_2385_p1 = w2_reg_2052;

assign tmp_192_cast2_fu_2389_p1 = w2_reg_2052;

assign tmp_192_cast_fu_2393_p1 = w2_reg_2052;

assign tmp_193_cast_fu_2298_p1 = w_reg_2029;

assign tmp_194_cast_fu_3120_p1 = h5_reg_2086;

assign tmp_196_fu_2991_p1 = $signed(output_V_q0);

assign tmp_197_fu_2995_p1 = $signed(p_Val2_60_reg_4645);

assign tmp_198_fu_3025_p2 = (newsignbit_reg_4664 ^ 1'd1);

assign tmp_199_cast_fu_3161_p1 = w6_reg_2098;

assign tmp_292_fu_2233_p3 = {{co_reg_2006}, {1'd0}};

assign tmp_293_fu_2245_p2 = (p_shl1_cast_fu_2241_p1 + p_shl_cast_fu_2229_p1);

assign tmp_294_fu_2333_p3 = {{h1_reg_2040}, {5'd0}};

assign tmp_295_fu_2345_p3 = {{h1_reg_2040}, {1'd0}};

assign tmp_296_fu_2357_p2 = (p_shl5_cast_fu_2353_p1 + p_shl4_cast_fu_2341_p1);

assign tmp_297_fu_2367_p2 = (tmp_296_fu_2357_p2 + 12'd1156);

assign tmp_298_fu_2373_p2 = (tmp_333_cast_fu_2363_p1 + 13'd2312);

assign tmp_299_fu_2261_p2 = (tmp_190_cast_fu_2257_p1 + tmp_293_reg_3203);

assign tmp_300_fu_2286_p2 = (p_shl2_cast_fu_2266_p3 + p_shl3_cast_fu_2282_p1);

assign tmp_301_fu_3084_p3 = {{co4_reg_2075}, {5'd0}};

assign tmp_302_fu_3096_p3 = {{co4_reg_2075}, {1'd0}};

assign tmp_303_fu_3108_p2 = (p_shl13_cast_fu_3104_p1 + p_shl12_cast_fu_3092_p1);

assign tmp_304_fu_2397_p2 = (tmp_296_reg_3247 + tmp_192_cast_fu_2393_p1);

assign tmp_305_fu_2414_p2 = (tmp_297_reg_3252 + tmp_192_cast_fu_2393_p1);

assign tmp_306_fu_2431_p2 = (tmp_298_reg_3257 + tmp_192_cast2_fu_2389_p1);

assign tmp_307_fu_2302_p2 = (tmp_300_reg_3216 + tmp_193_cast_fu_2298_p1);

assign tmp_308_fu_3124_p2 = (tmp_194_cast_fu_3120_p1 + tmp_303_reg_4679);

assign tmp_309_fu_3149_p2 = (p_shl14_cast_fu_3129_p3 + p_shl15_cast_fu_3145_p1);

assign tmp_310_fu_2466_p3 = {{co3_reg_2064}, {5'd0}};

assign tmp_311_fu_2478_p3 = {{co3_reg_2064}, {1'd0}};

assign tmp_312_fu_2490_p2 = (p_shl11_cast_fu_2486_p1 + p_shl10_cast_fu_2474_p1);

assign tmp_313_fu_2496_p2 = (tmp_312_fu_2490_p2 + tmp_cast_reg_3242);

assign tmp_314_fu_2521_p2 = (p_shl9_cast_fu_2517_p1 + p_shl8_cast_fu_2501_p3);

assign tmp_315_fu_2527_p2 = (tmp_314_fu_2521_p2 + tmp_192_cast1_reg_3265);

assign tmp_316_fu_2551_p3 = {{newIndex_fu_2541_p4}, {5'd0}};

assign tmp_317_fu_2563_p3 = {{newIndex_fu_2541_p4}, {3'd0}};

assign tmp_318_fu_2575_p2 = (p_shl6_cast_fu_2559_p1 - p_shl7_cast_fu_2571_p1);

assign tmp_319_fu_2593_p2 = (tmp_318_fu_2575_p2 | 8'd1);

assign tmp_320_fu_2617_p2 = (tmp_318_reg_3414 | 8'd2);

assign tmp_321_fu_2634_p2 = (tmp_318_reg_3414 | 8'd3);

assign tmp_322_fu_2651_p2 = (tmp_318_reg_3414 | 8'd4);

assign tmp_323_fu_2668_p2 = (tmp_318_reg_3414 | 8'd5);

assign tmp_324_fu_2685_p2 = (tmp_318_reg_3414 | 8'd6);

assign tmp_325_fu_2702_p2 = (tmp_318_reg_3414 | 8'd7);

assign tmp_326_fu_2719_p2 = (8'd8 + tmp_318_reg_3414);

assign tmp_327_fu_2736_p2 = (8'd9 + tmp_318_reg_3414);

assign tmp_328_fu_2753_p2 = (8'd10 + tmp_318_reg_3414);

assign tmp_329_fu_2770_p2 = (8'd11 + tmp_318_reg_3414);

assign tmp_330_fu_2787_p2 = (8'd12 + tmp_318_reg_3414);

assign tmp_331_fu_2804_p2 = (8'd13 + tmp_318_reg_3414);

assign tmp_332_fu_2821_p2 = (8'd14 + tmp_318_reg_3414);

assign tmp_333_cast_fu_2363_p1 = tmp_296_fu_2357_p2;

assign tmp_333_fu_2838_p2 = (8'd15 + tmp_318_reg_3414);

assign tmp_334_fu_2855_p2 = (8'd16 + tmp_318_reg_3414);

assign tmp_335_fu_2872_p2 = (8'd17 + tmp_318_reg_3414);

assign tmp_336_fu_2889_p2 = (8'd18 + tmp_318_reg_3414);

assign tmp_337_fu_2906_p2 = (8'd19 + tmp_318_reg_3414);

assign tmp_338_fu_2923_p2 = (8'd20 + tmp_318_reg_3414);

assign tmp_339_fu_2940_p2 = (8'd21 + tmp_318_reg_3414);

assign tmp_340_fu_2957_p2 = (8'd22 + tmp_318_reg_3414);

assign tmp_341_fu_2974_p2 = (8'd23 + tmp_318_reg_3414);

assign tmp_342_fu_3165_p2 = (tmp_309_reg_4687 + tmp_199_cast_fu_3161_p1);

assign tmp_343_cast_fu_2402_p1 = tmp_304_fu_2397_p2;

assign tmp_344_cast_fu_2419_p1 = tmp_305_fu_2414_p2;

assign tmp_345_cast_fu_2436_p1 = $signed(tmp_306_fu_2431_p2);

assign tmp_346_cast_fu_2319_p1 = tmp_307_reg_3224;

assign tmp_358_cast_fu_2532_p1 = tmp_315_fu_2527_p2;

assign tmp_361_cast_fu_2581_p1 = $signed(tmp_318_fu_2575_p2);

assign tmp_362_cast_fu_2599_p1 = tmp_319_fu_2593_p2;

assign tmp_363_cast_fu_2622_p1 = $signed(tmp_320_fu_2617_p2);

assign tmp_364_cast_fu_2639_p1 = $signed(tmp_321_fu_2634_p2);

assign tmp_365_cast_fu_2656_p1 = $signed(tmp_322_fu_2651_p2);

assign tmp_366_cast_fu_2673_p1 = $signed(tmp_323_fu_2668_p2);

assign tmp_367_cast_fu_2690_p1 = $signed(tmp_324_fu_2685_p2);

assign tmp_368_cast_fu_2707_p1 = $signed(tmp_325_fu_2702_p2);

assign tmp_369_cast_fu_2724_p1 = $signed(tmp_326_fu_2719_p2);

assign tmp_370_cast_fu_2741_p1 = $signed(tmp_327_fu_2736_p2);

assign tmp_371_cast_fu_2758_p1 = $signed(tmp_328_fu_2753_p2);

assign tmp_372_cast_fu_2775_p1 = $signed(tmp_329_fu_2770_p2);

assign tmp_373_cast_fu_2792_p1 = $signed(tmp_330_fu_2787_p2);

assign tmp_374_cast_fu_2809_p1 = $signed(tmp_331_fu_2804_p2);

assign tmp_375_cast_fu_2826_p1 = $signed(tmp_332_fu_2821_p2);

assign tmp_376_cast_fu_2843_p1 = $signed(tmp_333_fu_2838_p2);

assign tmp_377_cast_fu_2860_p1 = $signed(tmp_334_fu_2855_p2);

assign tmp_378_cast_fu_2877_p1 = $signed(tmp_335_fu_2872_p2);

assign tmp_379_cast_fu_2894_p1 = $signed(tmp_336_fu_2889_p2);

assign tmp_380_cast_fu_2911_p1 = $signed(tmp_337_fu_2906_p2);

assign tmp_381_cast_fu_2928_p1 = $signed(tmp_338_fu_2923_p2);

assign tmp_382_cast_fu_2945_p1 = $signed(tmp_339_fu_2940_p2);

assign tmp_383_cast_fu_2962_p1 = $signed(tmp_340_fu_2957_p2);

assign tmp_384_cast_fu_2979_p1 = $signed(tmp_341_fu_2974_p2);

assign tmp_385_cast_fu_3170_p1 = tmp_342_fu_3165_p2;

assign tmp_386_fu_2274_p3 = {{tmp_299_fu_2261_p2}, {1'd0}};

assign tmp_387_fu_3137_p3 = {{tmp_308_fu_3124_p2}, {1'd0}};

assign tmp_388_fu_2509_p3 = {{tmp_313_fu_2496_p2}, {1'd0}};

assign tmp_389_fu_2537_p1 = co3_reg_2064[2:0];

assign tmp_392_fu_3181_p3 = output_V_q0[32'd7];

assign tmp_cast_fu_2329_p1 = h1_reg_2040;

assign tmp_fu_2216_p1 = co_reg_2006;

assign tmp_s_fu_2221_p3 = {{co_reg_2006}, {5'd0}};

assign underflow_fu_3030_p2 = (isneg_reg_4651 & tmp_198_fu_3025_p2);

assign w_16_fu_2307_p2 = (w_reg_2029 + 6'd1);

assign w_17_fu_2611_p2 = (w2_reg_2052 + 6'd1);

assign w_18_fu_3189_p2 = (w6_reg_2098 + 6'd1);

always @ (posedge ap_clk) begin
    tmp_293_reg_3203[0] <= 1'b0;
    tmp_300_reg_3216[0] <= 1'b0;
    tmp_cast_reg_3242[10:6] <= 5'b00000;
    tmp_296_reg_3247[0] <= 1'b0;
    tmp_297_reg_3252[0] <= 1'b0;
    tmp_298_reg_3257[0] <= 1'b0;
    tmp_192_cast1_reg_3265[15:6] <= 10'b0000000000;
    tmp_318_reg_3414[2:0] <= 3'b000;
    tmp_303_reg_4679[0] <= 1'b0;
    tmp_309_reg_4687[0] <= 1'b0;
end

endmodule //subconv_1x1_32_p
