// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv1_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        m_axi_weight_V_AWVALID,
        m_axi_weight_V_AWREADY,
        m_axi_weight_V_AWADDR,
        m_axi_weight_V_AWID,
        m_axi_weight_V_AWLEN,
        m_axi_weight_V_AWSIZE,
        m_axi_weight_V_AWBURST,
        m_axi_weight_V_AWLOCK,
        m_axi_weight_V_AWCACHE,
        m_axi_weight_V_AWPROT,
        m_axi_weight_V_AWQOS,
        m_axi_weight_V_AWREGION,
        m_axi_weight_V_AWUSER,
        m_axi_weight_V_WVALID,
        m_axi_weight_V_WREADY,
        m_axi_weight_V_WDATA,
        m_axi_weight_V_WSTRB,
        m_axi_weight_V_WLAST,
        m_axi_weight_V_WID,
        m_axi_weight_V_WUSER,
        m_axi_weight_V_ARVALID,
        m_axi_weight_V_ARREADY,
        m_axi_weight_V_ARADDR,
        m_axi_weight_V_ARID,
        m_axi_weight_V_ARLEN,
        m_axi_weight_V_ARSIZE,
        m_axi_weight_V_ARBURST,
        m_axi_weight_V_ARLOCK,
        m_axi_weight_V_ARCACHE,
        m_axi_weight_V_ARPROT,
        m_axi_weight_V_ARQOS,
        m_axi_weight_V_ARREGION,
        m_axi_weight_V_ARUSER,
        m_axi_weight_V_RVALID,
        m_axi_weight_V_RREADY,
        m_axi_weight_V_RDATA,
        m_axi_weight_V_RLAST,
        m_axi_weight_V_RID,
        m_axi_weight_V_RUSER,
        m_axi_weight_V_RRESP,
        m_axi_weight_V_BVALID,
        m_axi_weight_V_BREADY,
        m_axi_weight_V_BRESP,
        m_axi_weight_V_BID,
        m_axi_weight_V_BUSER,
        conv1_weight_V3,
        bias_V_address0,
        bias_V_ce0,
        bias_V_q0,
        conv1_output_p_V_0_address0,
        conv1_output_p_V_0_ce0,
        conv1_output_p_V_0_we0,
        conv1_output_p_V_0_d0,
        conv1_output_p_V_0_q0,
        conv1_output_p_V_1_address0,
        conv1_output_p_V_1_ce0,
        conv1_output_p_V_1_we0,
        conv1_output_p_V_1_d0,
        conv1_output_p_V_1_q0,
        conv1_output_p_V_2_address0,
        conv1_output_p_V_2_ce0,
        conv1_output_p_V_2_we0,
        conv1_output_p_V_2_d0,
        conv1_output_p_V_2_q0,
        conv1_output_p_V_3_address0,
        conv1_output_p_V_3_ce0,
        conv1_output_p_V_3_we0,
        conv1_output_p_V_3_d0,
        conv1_output_p_V_3_q0,
        conv1_output_p_V_4_address0,
        conv1_output_p_V_4_ce0,
        conv1_output_p_V_4_we0,
        conv1_output_p_V_4_d0,
        conv1_output_p_V_4_q0,
        conv1_output_p_V_5_address0,
        conv1_output_p_V_5_ce0,
        conv1_output_p_V_5_we0,
        conv1_output_p_V_5_d0,
        conv1_output_p_V_5_q0,
        conv1_output_p_V_6_address0,
        conv1_output_p_V_6_ce0,
        conv1_output_p_V_6_we0,
        conv1_output_p_V_6_d0,
        conv1_output_p_V_6_q0,
        conv1_output_p_V_7_address0,
        conv1_output_p_V_7_ce0,
        conv1_output_p_V_7_we0,
        conv1_output_p_V_7_d0,
        conv1_output_p_V_7_q0,
        conv1_output_p_V_8_address0,
        conv1_output_p_V_8_ce0,
        conv1_output_p_V_8_we0,
        conv1_output_p_V_8_d0,
        conv1_output_p_V_8_q0,
        conv1_output_p_V_9_address0,
        conv1_output_p_V_9_ce0,
        conv1_output_p_V_9_we0,
        conv1_output_p_V_9_d0,
        conv1_output_p_V_9_q0,
        conv1_output_p_V_10_address0,
        conv1_output_p_V_10_ce0,
        conv1_output_p_V_10_we0,
        conv1_output_p_V_10_d0,
        conv1_output_p_V_10_q0,
        conv1_output_p_V_11_address0,
        conv1_output_p_V_11_ce0,
        conv1_output_p_V_11_we0,
        conv1_output_p_V_11_d0,
        conv1_output_p_V_11_q0
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_pp0_stage0 = 26'd2;
parameter    ap_ST_fsm_state15 = 26'd4;
parameter    ap_ST_fsm_pp1_stage0 = 26'd8;
parameter    ap_ST_fsm_state25 = 26'd16;
parameter    ap_ST_fsm_state26 = 26'd32;
parameter    ap_ST_fsm_state27 = 26'd64;
parameter    ap_ST_fsm_state28 = 26'd128;
parameter    ap_ST_fsm_state29 = 26'd256;
parameter    ap_ST_fsm_state30 = 26'd512;
parameter    ap_ST_fsm_state31 = 26'd1024;
parameter    ap_ST_fsm_state32 = 26'd2048;
parameter    ap_ST_fsm_state33 = 26'd4096;
parameter    ap_ST_fsm_state34 = 26'd8192;
parameter    ap_ST_fsm_state35 = 26'd16384;
parameter    ap_ST_fsm_state36 = 26'd32768;
parameter    ap_ST_fsm_state37 = 26'd65536;
parameter    ap_ST_fsm_state38 = 26'd131072;
parameter    ap_ST_fsm_state39 = 26'd262144;
parameter    ap_ST_fsm_state40 = 26'd524288;
parameter    ap_ST_fsm_state41 = 26'd1048576;
parameter    ap_ST_fsm_state42 = 26'd2097152;
parameter    ap_ST_fsm_state43 = 26'd4194304;
parameter    ap_ST_fsm_pp2_stage0 = 26'd8388608;
parameter    ap_ST_fsm_pp2_stage1 = 26'd16777216;
parameter    ap_ST_fsm_state53 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [7:0] input_V_q0;
output   m_axi_weight_V_AWVALID;
input   m_axi_weight_V_AWREADY;
output  [31:0] m_axi_weight_V_AWADDR;
output  [0:0] m_axi_weight_V_AWID;
output  [31:0] m_axi_weight_V_AWLEN;
output  [2:0] m_axi_weight_V_AWSIZE;
output  [1:0] m_axi_weight_V_AWBURST;
output  [1:0] m_axi_weight_V_AWLOCK;
output  [3:0] m_axi_weight_V_AWCACHE;
output  [2:0] m_axi_weight_V_AWPROT;
output  [3:0] m_axi_weight_V_AWQOS;
output  [3:0] m_axi_weight_V_AWREGION;
output  [0:0] m_axi_weight_V_AWUSER;
output   m_axi_weight_V_WVALID;
input   m_axi_weight_V_WREADY;
output  [7:0] m_axi_weight_V_WDATA;
output  [0:0] m_axi_weight_V_WSTRB;
output   m_axi_weight_V_WLAST;
output  [0:0] m_axi_weight_V_WID;
output  [0:0] m_axi_weight_V_WUSER;
output   m_axi_weight_V_ARVALID;
input   m_axi_weight_V_ARREADY;
output  [31:0] m_axi_weight_V_ARADDR;
output  [0:0] m_axi_weight_V_ARID;
output  [31:0] m_axi_weight_V_ARLEN;
output  [2:0] m_axi_weight_V_ARSIZE;
output  [1:0] m_axi_weight_V_ARBURST;
output  [1:0] m_axi_weight_V_ARLOCK;
output  [3:0] m_axi_weight_V_ARCACHE;
output  [2:0] m_axi_weight_V_ARPROT;
output  [3:0] m_axi_weight_V_ARQOS;
output  [3:0] m_axi_weight_V_ARREGION;
output  [0:0] m_axi_weight_V_ARUSER;
input   m_axi_weight_V_RVALID;
output   m_axi_weight_V_RREADY;
input  [7:0] m_axi_weight_V_RDATA;
input   m_axi_weight_V_RLAST;
input  [0:0] m_axi_weight_V_RID;
input  [0:0] m_axi_weight_V_RUSER;
input  [1:0] m_axi_weight_V_RRESP;
input   m_axi_weight_V_BVALID;
output   m_axi_weight_V_BREADY;
input  [1:0] m_axi_weight_V_BRESP;
input  [0:0] m_axi_weight_V_BID;
input  [0:0] m_axi_weight_V_BUSER;
input  [31:0] conv1_weight_V3;
output  [4:0] bias_V_address0;
output   bias_V_ce0;
input  [7:0] bias_V_q0;
output  [11:0] conv1_output_p_V_0_address0;
output   conv1_output_p_V_0_ce0;
output   conv1_output_p_V_0_we0;
output  [7:0] conv1_output_p_V_0_d0;
input  [7:0] conv1_output_p_V_0_q0;
output  [11:0] conv1_output_p_V_1_address0;
output   conv1_output_p_V_1_ce0;
output   conv1_output_p_V_1_we0;
output  [7:0] conv1_output_p_V_1_d0;
input  [7:0] conv1_output_p_V_1_q0;
output  [11:0] conv1_output_p_V_2_address0;
output   conv1_output_p_V_2_ce0;
output   conv1_output_p_V_2_we0;
output  [7:0] conv1_output_p_V_2_d0;
input  [7:0] conv1_output_p_V_2_q0;
output  [11:0] conv1_output_p_V_3_address0;
output   conv1_output_p_V_3_ce0;
output   conv1_output_p_V_3_we0;
output  [7:0] conv1_output_p_V_3_d0;
input  [7:0] conv1_output_p_V_3_q0;
output  [11:0] conv1_output_p_V_4_address0;
output   conv1_output_p_V_4_ce0;
output   conv1_output_p_V_4_we0;
output  [7:0] conv1_output_p_V_4_d0;
input  [7:0] conv1_output_p_V_4_q0;
output  [11:0] conv1_output_p_V_5_address0;
output   conv1_output_p_V_5_ce0;
output   conv1_output_p_V_5_we0;
output  [7:0] conv1_output_p_V_5_d0;
input  [7:0] conv1_output_p_V_5_q0;
output  [11:0] conv1_output_p_V_6_address0;
output   conv1_output_p_V_6_ce0;
output   conv1_output_p_V_6_we0;
output  [7:0] conv1_output_p_V_6_d0;
input  [7:0] conv1_output_p_V_6_q0;
output  [11:0] conv1_output_p_V_7_address0;
output   conv1_output_p_V_7_ce0;
output   conv1_output_p_V_7_we0;
output  [7:0] conv1_output_p_V_7_d0;
input  [7:0] conv1_output_p_V_7_q0;
output  [11:0] conv1_output_p_V_8_address0;
output   conv1_output_p_V_8_ce0;
output   conv1_output_p_V_8_we0;
output  [7:0] conv1_output_p_V_8_d0;
input  [7:0] conv1_output_p_V_8_q0;
output  [11:0] conv1_output_p_V_9_address0;
output   conv1_output_p_V_9_ce0;
output   conv1_output_p_V_9_we0;
output  [7:0] conv1_output_p_V_9_d0;
input  [7:0] conv1_output_p_V_9_q0;
output  [11:0] conv1_output_p_V_10_address0;
output   conv1_output_p_V_10_ce0;
output   conv1_output_p_V_10_we0;
output  [7:0] conv1_output_p_V_10_d0;
input  [7:0] conv1_output_p_V_10_q0;
output  [11:0] conv1_output_p_V_11_address0;
output   conv1_output_p_V_11_ce0;
output   conv1_output_p_V_11_we0;
output  [7:0] conv1_output_p_V_11_d0;
input  [7:0] conv1_output_p_V_11_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg m_axi_weight_V_ARVALID;
reg m_axi_weight_V_RREADY;
reg bias_V_ce0;
reg[11:0] conv1_output_p_V_0_address0;
reg conv1_output_p_V_0_ce0;
reg conv1_output_p_V_0_we0;
reg[7:0] conv1_output_p_V_0_d0;
reg[11:0] conv1_output_p_V_1_address0;
reg conv1_output_p_V_1_ce0;
reg conv1_output_p_V_1_we0;
reg[7:0] conv1_output_p_V_1_d0;
reg[11:0] conv1_output_p_V_2_address0;
reg conv1_output_p_V_2_ce0;
reg conv1_output_p_V_2_we0;
reg[7:0] conv1_output_p_V_2_d0;
reg[11:0] conv1_output_p_V_3_address0;
reg conv1_output_p_V_3_ce0;
reg conv1_output_p_V_3_we0;
reg[7:0] conv1_output_p_V_3_d0;
reg[11:0] conv1_output_p_V_4_address0;
reg conv1_output_p_V_4_ce0;
reg conv1_output_p_V_4_we0;
reg[7:0] conv1_output_p_V_4_d0;
reg[11:0] conv1_output_p_V_5_address0;
reg conv1_output_p_V_5_ce0;
reg conv1_output_p_V_5_we0;
reg[7:0] conv1_output_p_V_5_d0;
reg[11:0] conv1_output_p_V_6_address0;
reg conv1_output_p_V_6_ce0;
reg conv1_output_p_V_6_we0;
reg[7:0] conv1_output_p_V_6_d0;
reg[11:0] conv1_output_p_V_7_address0;
reg conv1_output_p_V_7_ce0;
reg conv1_output_p_V_7_we0;
reg[7:0] conv1_output_p_V_7_d0;
reg[11:0] conv1_output_p_V_8_address0;
reg conv1_output_p_V_8_ce0;
reg conv1_output_p_V_8_we0;
reg[7:0] conv1_output_p_V_8_d0;
reg[11:0] conv1_output_p_V_9_address0;
reg conv1_output_p_V_9_ce0;
reg conv1_output_p_V_9_we0;
reg[7:0] conv1_output_p_V_9_d0;
reg[11:0] conv1_output_p_V_10_address0;
reg conv1_output_p_V_10_ce0;
reg conv1_output_p_V_10_we0;
reg[7:0] conv1_output_p_V_10_d0;
reg[11:0] conv1_output_p_V_11_address0;
reg conv1_output_p_V_11_ce0;
reg conv1_output_p_V_11_we0;
reg[7:0] conv1_output_p_V_11_d0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_8538;
reg    weight_V_blk_n_R;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten_reg_8538;
reg   [9:0] indvar_flatten14_reg_1093;
reg   [4:0] i_reg_1104;
reg   [5:0] indvar_flatten13_reg_1115;
reg   [1:0] j_reg_1126;
reg   [3:0] indvar_flatten_reg_1138;
reg   [1:0] k_reg_1150;
reg   [1:0] p_reg_1162;
reg   [14:0] indvar_flatten15_reg_1174;
reg   [4:0] i_1_reg_1185;
reg   [11:0] indvar_flatten16_reg_1196;
reg   [5:0] j_1_reg_1207;
reg   [5:0] k_1_reg_1219;
reg   [14:0] indvar_flatten17_reg_1288;
reg   [4:0] i_2_reg_1299;
reg   [11:0] indvar_flatten18_reg_1310;
reg   [5:0] j_2_reg_1321;
reg   [5:0] k_2_reg_1332;
reg   [7:0] reg_1463;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state40;
reg   [7:0] reg_1467;
reg   [7:0] reg_1471;
reg   [7:0] reg_1475;
reg   [7:0] reg_1479;
reg   [7:0] reg_1483;
reg   [7:0] reg_1487;
reg   [7:0] reg_1491;
reg   [7:0] reg_1495;
reg   [7:0] reg_1499;
reg   [7:0] reg_1503;
reg   [7:0] reg_1507;
wire   [0:0] exitcond_flatten_fu_1511_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
reg    ap_sig_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_state6_io;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_8538;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten_reg_8538;
wire   [9:0] indvar_flatten_next2_fu_1517_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten17_fu_1529_p2;
reg   [0:0] exitcond_flatten17_reg_8547;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten17_reg_8547;
wire   [4:0] i_cast_mid2_v_fu_1535_p3;
reg   [4:0] i_cast_mid2_v_reg_8556;
reg   [4:0] ap_reg_pp0_iter1_i_cast_mid2_v_reg_8556;
wire   [5:0] indvar_flatten_next1_fu_1549_p3;
reg   [2:0] tmp_1617_reg_8570;
wire   [0:0] not_exitcond_flatten_fu_1583_p2;
reg   [0:0] not_exitcond_flatten_reg_8576;
wire   [0:0] exitcond_flatten18_fu_1588_p2;
reg   [0:0] exitcond_flatten18_reg_8581;
wire   [0:0] exitcond_flatten_mid_fu_1594_p2;
reg   [0:0] exitcond_flatten_mid_reg_8586;
wire   [0:0] tmp_610_fu_1606_p2;
reg   [0:0] tmp_610_reg_8591;
wire   [1:0] j_cast_mid2_fu_1611_p3;
reg   [1:0] j_cast_mid2_reg_8597;
reg    ap_enable_reg_pp0_iter1;
wire   [3:0] indvar_flatten_op_fu_1619_p2;
reg   [3:0] indvar_flatten_op_reg_8603;
wire   [1:0] p_mid2_fu_1795_p3;
reg   [1:0] p_mid2_reg_8608;
wire   [1:0] k_cast_mid2_fu_1803_p3;
reg   [1:0] k_cast_mid2_reg_8614;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] tmp_616_fu_1815_p2;
reg   [31:0] tmp_616_reg_8619;
wire   [6:0] tmp_1623_fu_1827_p1;
reg   [6:0] tmp_1623_reg_8625;
wire   [4:0] tmp_1624_fu_1831_p1;
reg   [4:0] tmp_1624_reg_8630;
wire   [1:0] p_1_fu_1835_p2;
reg   [1:0] p_1_reg_8635;
wire   [3:0] indvar_flatten_next_fu_1841_p3;
reg   [31:0] weight_V_addr_reg_8645;
wire   [6:0] tmp_621_fu_1892_p2;
reg   [6:0] tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter4_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter5_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter6_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter7_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter8_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter9_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter10_tmp_621_reg_8651;
reg   [6:0] ap_reg_pp0_iter11_tmp_621_reg_8651;
wire   [4:0] grp_fu_1649_p2;
reg   [4:0] arrayNo_mid2_reg_8656;
reg   [4:0] ap_reg_pp0_iter11_arrayNo_mid2_reg_8656;
reg   [7:0] weight_V_addr_read_reg_8660;
wire   [0:0] exitcond_flatten19_fu_1913_p2;
reg   [0:0] exitcond_flatten19_reg_8676;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state16_pp1_stage0_iter0;
wire    ap_block_state17_pp1_stage0_iter1;
wire    ap_block_state18_pp1_stage0_iter2;
wire    ap_block_state19_pp1_stage0_iter3;
wire    ap_block_state20_pp1_stage0_iter4;
wire    ap_block_state21_pp1_stage0_iter5;
wire    ap_block_state22_pp1_stage0_iter6;
wire    ap_block_state23_pp1_stage0_iter7;
wire    ap_block_state24_pp1_stage0_iter8;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten19_reg_8676;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten19_reg_8676;
reg   [0:0] ap_reg_pp1_iter3_exitcond_flatten19_reg_8676;
reg   [0:0] ap_reg_pp1_iter4_exitcond_flatten19_reg_8676;
reg   [0:0] ap_reg_pp1_iter5_exitcond_flatten19_reg_8676;
reg   [0:0] ap_reg_pp1_iter6_exitcond_flatten19_reg_8676;
wire   [14:0] indvar_flatten_next2_2_fu_1919_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten20_fu_1931_p2;
reg   [0:0] exitcond_flatten20_reg_8685;
wire   [4:0] i_1_cast_mid2_v_fu_1937_p3;
reg   [4:0] i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter1_i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter2_i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter3_i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter4_i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter5_i_1_cast_mid2_v_reg_8692;
reg   [4:0] ap_reg_pp1_iter6_i_1_cast_mid2_v_reg_8692;
wire   [11:0] indvar_flatten_next2_1_fu_1957_p3;
wire   [5:0] k_1_mid2_fu_2000_p3;
reg   [5:0] k_1_mid2_reg_8705;
reg   [5:0] ap_reg_pp1_iter2_k_1_mid2_reg_8705;
reg   [5:0] ap_reg_pp1_iter3_k_1_mid2_reg_8705;
reg   [5:0] ap_reg_pp1_iter4_k_1_mid2_reg_8705;
reg   [5:0] ap_reg_pp1_iter5_k_1_mid2_reg_8705;
reg   [5:0] ap_reg_pp1_iter6_k_1_mid2_reg_8705;
wire   [5:0] j_1_cast_mid2_fu_2008_p3;
reg   [5:0] j_1_cast_mid2_reg_8711;
reg    ap_enable_reg_pp1_iter1;
reg   [5:0] ap_reg_pp1_iter2_j_1_cast_mid2_reg_8711;
reg   [5:0] ap_reg_pp1_iter3_j_1_cast_mid2_reg_8711;
reg   [5:0] ap_reg_pp1_iter4_j_1_cast_mid2_reg_8711;
reg   [5:0] ap_reg_pp1_iter5_j_1_cast_mid2_reg_8711;
reg   [5:0] ap_reg_pp1_iter6_j_1_cast_mid2_reg_8711;
wire   [5:0] k_4_fu_2016_p2;
reg    ap_enable_reg_pp1_iter2;
reg   [2:0] tmp_1625_reg_8722;
wire   [12:0] tmp_628_fu_2122_p2;
reg   [12:0] tmp_628_reg_8728;
wire   [11:0] tmp_631_fu_2167_p2;
reg   [11:0] tmp_631_reg_8741;
wire    ap_CS_fsm_state26;
wire   [11:0] tmp_632_fu_2173_p2;
reg   [11:0] tmp_632_reg_8746;
wire   [0:0] exitcond28_fu_2179_p2;
reg   [11:0] conv1_output_p_V_1_a_1_reg_8755;
wire    ap_CS_fsm_state27;
reg   [11:0] conv1_output_p_V_1_a_2_reg_8760;
reg   [11:0] conv1_output_p_V_10_3_reg_8765;
reg   [11:0] conv1_output_p_V_10_4_reg_8770;
reg   [11:0] conv1_output_p_V_5_a_1_reg_8775;
reg   [11:0] conv1_output_p_V_5_a_2_reg_8780;
reg   [11:0] conv1_output_p_V_11_3_reg_8785;
reg   [11:0] conv1_output_p_V_11_4_reg_8790;
reg   [11:0] conv1_output_p_V_0_a_1_reg_8795;
reg   [11:0] conv1_output_p_V_0_a_2_reg_8800;
reg   [11:0] conv1_output_p_V_4_a_1_reg_8805;
reg   [11:0] conv1_output_p_V_4_a_2_reg_8810;
reg   [11:0] conv1_output_p_V_2_a_1_reg_8815;
reg   [11:0] conv1_output_p_V_2_a_2_reg_8820;
reg   [11:0] conv1_output_p_V_3_a_1_reg_8825;
reg   [11:0] conv1_output_p_V_3_a_2_reg_8830;
reg   [11:0] conv1_output_p_V_7_a_1_reg_8835;
reg   [11:0] conv1_output_p_V_7_a_2_reg_8840;
reg   [11:0] conv1_output_p_V_8_a_1_reg_8845;
reg   [11:0] conv1_output_p_V_8_a_2_reg_8850;
reg   [11:0] conv1_output_p_V_9_a_1_reg_8855;
reg   [11:0] conv1_output_p_V_9_a_2_reg_8860;
reg   [11:0] conv1_output_p_V_6_a_1_reg_8865;
reg   [11:0] conv1_output_p_V_6_a_2_reg_8870;
wire   [5:0] h_30_fu_2237_p2;
wire   [0:0] exitcond29_fu_2231_p2;
wire   [4:0] m_cast_cast1_fu_2243_p1;
reg   [4:0] m_cast_cast1_reg_8883;
wire    ap_CS_fsm_state28;
wire   [5:0] m_cast_cast_fu_2247_p1;
reg   [5:0] m_cast_cast_reg_8888;
wire   [1:0] m_7_fu_2257_p2;
reg   [1:0] m_7_reg_8896;
wire   [7:0] tmp_cast_cast_fu_2279_p1;
reg   [7:0] tmp_cast_cast_reg_8901;
wire   [0:0] exitcond31_fu_2251_p2;
wire   [5:0] w_36_fu_2283_p2;
wire   [6:0] n_cast_cast_fu_2289_p1;
reg   [6:0] n_cast_cast_reg_8911;
wire    ap_CS_fsm_state29;
wire   [1:0] n_7_fu_2299_p2;
reg   [1:0] n_7_reg_8920;
wire   [12:0] tmp_148_cast_cast_fu_2321_p1;
reg   [12:0] tmp_148_cast_cast_reg_8925;
wire   [0:0] exitcond32_fu_2293_p2;
reg   [11:0] input_V_addr_reg_8930;
wire    ap_CS_fsm_state30;
wire   [6:0] tmp_652_fu_2449_p2;
reg   [6:0] tmp_652_reg_8935;
wire   [4:0] tmp_654_fu_2460_p2;
reg   [4:0] tmp_654_reg_8940;
wire   [0:0] exitcond33_fu_2465_p2;
reg   [0:0] exitcond33_reg_8946;
wire   [1:0] ci_10_fu_2471_p2;
reg   [1:0] ci_10_reg_8950;
wire    ap_CS_fsm_state31;
reg   [15:0] rr_0_V_reg_9075;
reg   [15:0] rr_1_V_reg_9080;
reg   [0:0] tmp_1639_reg_9085;
reg   [0:0] tmp_1644_reg_9090;
reg   [15:0] rr_0_V_110_reg_9095;
reg   [15:0] rr_1_V_110_reg_9100;
reg   [0:0] tmp_1649_reg_9105;
reg   [0:0] tmp_1654_reg_9110;
reg   [15:0] rr_0_V_111_reg_9115;
reg   [15:0] rr_1_V_111_reg_9120;
reg   [0:0] tmp_1659_reg_9125;
reg   [0:0] tmp_1664_reg_9130;
reg   [15:0] rr_0_V_112_reg_9135;
reg   [15:0] rr_1_V_112_reg_9140;
reg   [0:0] tmp_1669_reg_9145;
reg   [0:0] tmp_1674_reg_9150;
reg   [15:0] rr_0_V_113_reg_9155;
reg   [15:0] rr_1_V_113_reg_9160;
reg   [0:0] tmp_1679_reg_9165;
reg   [0:0] tmp_1684_reg_9170;
reg   [15:0] rr_0_V_114_reg_9175;
reg   [15:0] rr_1_V_114_reg_9180;
reg   [0:0] tmp_1689_reg_9185;
reg   [0:0] tmp_1694_reg_9190;
reg   [15:0] rr_0_V_115_reg_9195;
reg   [15:0] rr_1_V_115_reg_9200;
reg   [0:0] tmp_1699_reg_9205;
reg   [0:0] tmp_1704_reg_9210;
reg   [15:0] rr_0_V_116_reg_9215;
reg   [15:0] rr_1_V_116_reg_9220;
reg   [0:0] tmp_1709_reg_9225;
reg   [0:0] tmp_1714_reg_9230;
reg   [15:0] rr_0_V_117_reg_9235;
reg   [15:0] rr_1_V_117_reg_9240;
reg   [0:0] tmp_1719_reg_9245;
reg   [0:0] tmp_1724_reg_9250;
reg   [15:0] rr_0_V_118_reg_9255;
reg   [15:0] rr_1_V_118_reg_9260;
reg   [0:0] tmp_1729_reg_9265;
reg   [0:0] tmp_1734_reg_9270;
reg   [15:0] rr_0_V_119_reg_9275;
reg   [15:0] rr_1_V_119_reg_9280;
reg   [0:0] tmp_1739_reg_9285;
reg   [0:0] tmp_1744_reg_9290;
reg   [15:0] rr_0_V_120_reg_9295;
reg   [15:0] rr_1_V_120_reg_9300;
reg   [0:0] tmp_1749_reg_9305;
reg   [0:0] tmp_1754_reg_9310;
wire   [16:0] p_Val2_s_fu_2832_p2;
reg   [16:0] p_Val2_s_reg_9315;
wire    ap_CS_fsm_state36;
reg   [0:0] tmp_1638_reg_9320;
wire   [7:0] p_Val2_33_fu_2867_p2;
reg   [7:0] p_Val2_33_reg_9326;
wire   [0:0] tmp_1641_fu_2873_p3;
reg   [0:0] tmp_1641_reg_9332;
wire   [0:0] carry_s_fu_2887_p2;
reg   [0:0] carry_s_reg_9338;
wire   [0:0] Range2_all_ones_fu_2903_p2;
reg   [0:0] Range2_all_ones_reg_9345;
wire   [0:0] Range1_all_ones_fu_2919_p2;
reg   [0:0] Range1_all_ones_reg_9350;
wire   [0:0] Range1_all_zeros_fu_2925_p2;
reg   [0:0] Range1_all_zeros_reg_9357;
wire   [16:0] p_Val2_130_1_fu_2946_p2;
reg   [16:0] p_Val2_130_1_reg_9362;
reg   [0:0] tmp_1648_reg_9367;
wire   [7:0] p_Val2_132_1_fu_2981_p2;
reg   [7:0] p_Val2_132_1_reg_9373;
wire   [0:0] tmp_1651_fu_2987_p3;
reg   [0:0] tmp_1651_reg_9379;
wire   [0:0] carry_33_1_fu_3001_p2;
reg   [0:0] carry_33_1_reg_9385;
wire   [0:0] Range2_all_ones_1_fu_3017_p2;
reg   [0:0] Range2_all_ones_1_reg_9392;
wire   [0:0] Range1_all_ones_1_fu_3033_p2;
reg   [0:0] Range1_all_ones_1_reg_9397;
wire   [0:0] Range1_all_zeros_1_fu_3039_p2;
reg   [0:0] Range1_all_zeros_1_reg_9404;
wire   [16:0] p_Val2_130_2_fu_3060_p2;
reg   [16:0] p_Val2_130_2_reg_9409;
reg   [0:0] tmp_1658_reg_9414;
wire   [7:0] p_Val2_132_2_fu_3095_p2;
reg   [7:0] p_Val2_132_2_reg_9420;
wire   [0:0] tmp_1661_fu_3101_p3;
reg   [0:0] tmp_1661_reg_9426;
wire   [0:0] carry_33_2_fu_3115_p2;
reg   [0:0] carry_33_2_reg_9432;
wire   [0:0] Range2_all_ones_2_fu_3131_p2;
reg   [0:0] Range2_all_ones_2_reg_9439;
wire   [0:0] Range1_all_ones_2_fu_3147_p2;
reg   [0:0] Range1_all_ones_2_reg_9444;
wire   [0:0] Range1_all_zeros_2_fu_3153_p2;
reg   [0:0] Range1_all_zeros_2_reg_9451;
wire   [16:0] p_Val2_130_3_fu_3174_p2;
reg   [16:0] p_Val2_130_3_reg_9456;
reg   [0:0] tmp_1668_reg_9461;
wire   [7:0] p_Val2_132_3_fu_3209_p2;
reg   [7:0] p_Val2_132_3_reg_9467;
wire   [0:0] tmp_1671_fu_3215_p3;
reg   [0:0] tmp_1671_reg_9473;
wire   [0:0] carry_33_3_fu_3229_p2;
reg   [0:0] carry_33_3_reg_9479;
wire   [0:0] Range2_all_ones_3_fu_3245_p2;
reg   [0:0] Range2_all_ones_3_reg_9486;
wire   [0:0] Range1_all_ones_3_fu_3261_p2;
reg   [0:0] Range1_all_ones_3_reg_9491;
wire   [0:0] Range1_all_zeros_3_fu_3267_p2;
reg   [0:0] Range1_all_zeros_3_reg_9498;
wire   [16:0] p_Val2_130_4_fu_3288_p2;
reg   [16:0] p_Val2_130_4_reg_9503;
reg   [0:0] tmp_1678_reg_9508;
wire   [7:0] p_Val2_132_4_fu_3323_p2;
reg   [7:0] p_Val2_132_4_reg_9514;
wire   [0:0] tmp_1681_fu_3329_p3;
reg   [0:0] tmp_1681_reg_9520;
wire   [0:0] carry_33_4_fu_3343_p2;
reg   [0:0] carry_33_4_reg_9526;
wire   [0:0] Range2_all_ones_4_fu_3359_p2;
reg   [0:0] Range2_all_ones_4_reg_9533;
wire   [0:0] Range1_all_ones_4_fu_3375_p2;
reg   [0:0] Range1_all_ones_4_reg_9538;
wire   [0:0] Range1_all_zeros_4_fu_3381_p2;
reg   [0:0] Range1_all_zeros_4_reg_9545;
wire   [16:0] p_Val2_130_5_fu_3402_p2;
reg   [16:0] p_Val2_130_5_reg_9550;
reg   [0:0] tmp_1688_reg_9555;
wire   [7:0] p_Val2_132_5_fu_3437_p2;
reg   [7:0] p_Val2_132_5_reg_9561;
wire   [0:0] tmp_1691_fu_3443_p3;
reg   [0:0] tmp_1691_reg_9567;
wire   [0:0] carry_33_5_fu_3457_p2;
reg   [0:0] carry_33_5_reg_9573;
wire   [0:0] Range2_all_ones_5_fu_3473_p2;
reg   [0:0] Range2_all_ones_5_reg_9580;
wire   [0:0] Range1_all_ones_5_fu_3489_p2;
reg   [0:0] Range1_all_ones_5_reg_9585;
wire   [0:0] Range1_all_zeros_5_fu_3495_p2;
reg   [0:0] Range1_all_zeros_5_reg_9592;
wire   [16:0] p_Val2_130_6_fu_3516_p2;
reg   [16:0] p_Val2_130_6_reg_9597;
reg   [0:0] tmp_1698_reg_9602;
wire   [7:0] p_Val2_132_6_fu_3551_p2;
reg   [7:0] p_Val2_132_6_reg_9608;
wire   [0:0] tmp_1701_fu_3557_p3;
reg   [0:0] tmp_1701_reg_9614;
wire   [0:0] carry_33_6_fu_3571_p2;
reg   [0:0] carry_33_6_reg_9620;
wire   [0:0] Range2_all_ones_6_fu_3587_p2;
reg   [0:0] Range2_all_ones_6_reg_9627;
wire   [0:0] Range1_all_ones_6_fu_3603_p2;
reg   [0:0] Range1_all_ones_6_reg_9632;
wire   [0:0] Range1_all_zeros_6_fu_3609_p2;
reg   [0:0] Range1_all_zeros_6_reg_9639;
wire   [16:0] p_Val2_130_7_fu_3630_p2;
reg   [16:0] p_Val2_130_7_reg_9644;
reg   [0:0] tmp_1708_reg_9649;
wire   [7:0] p_Val2_132_7_fu_3665_p2;
reg   [7:0] p_Val2_132_7_reg_9655;
wire   [0:0] tmp_1711_fu_3671_p3;
reg   [0:0] tmp_1711_reg_9661;
wire   [0:0] carry_33_7_fu_3685_p2;
reg   [0:0] carry_33_7_reg_9667;
wire   [0:0] Range2_all_ones_7_fu_3701_p2;
reg   [0:0] Range2_all_ones_7_reg_9674;
wire   [0:0] Range1_all_ones_7_fu_3717_p2;
reg   [0:0] Range1_all_ones_7_reg_9679;
wire   [0:0] Range1_all_zeros_7_fu_3723_p2;
reg   [0:0] Range1_all_zeros_7_reg_9686;
wire   [16:0] p_Val2_130_8_fu_3744_p2;
reg   [16:0] p_Val2_130_8_reg_9691;
reg   [0:0] tmp_1718_reg_9696;
wire   [7:0] p_Val2_132_8_fu_3779_p2;
reg   [7:0] p_Val2_132_8_reg_9702;
wire   [0:0] tmp_1721_fu_3785_p3;
reg   [0:0] tmp_1721_reg_9708;
wire   [0:0] carry_33_8_fu_3799_p2;
reg   [0:0] carry_33_8_reg_9714;
wire   [0:0] Range2_all_ones_8_fu_3815_p2;
reg   [0:0] Range2_all_ones_8_reg_9721;
wire   [0:0] Range1_all_ones_8_fu_3831_p2;
reg   [0:0] Range1_all_ones_8_reg_9726;
wire   [0:0] Range1_all_zeros_8_fu_3837_p2;
reg   [0:0] Range1_all_zeros_8_reg_9733;
wire   [16:0] p_Val2_130_9_fu_3858_p2;
reg   [16:0] p_Val2_130_9_reg_9738;
reg   [0:0] tmp_1728_reg_9743;
wire   [7:0] p_Val2_132_9_fu_3893_p2;
reg   [7:0] p_Val2_132_9_reg_9749;
wire   [0:0] tmp_1731_fu_3899_p3;
reg   [0:0] tmp_1731_reg_9755;
wire   [0:0] carry_33_9_fu_3913_p2;
reg   [0:0] carry_33_9_reg_9761;
wire   [0:0] Range2_all_ones_9_fu_3929_p2;
reg   [0:0] Range2_all_ones_9_reg_9768;
wire   [0:0] Range1_all_ones_9_fu_3945_p2;
reg   [0:0] Range1_all_ones_9_reg_9773;
wire   [0:0] Range1_all_zeros_9_fu_3951_p2;
reg   [0:0] Range1_all_zeros_9_reg_9780;
wire   [16:0] p_Val2_130_s_fu_3972_p2;
reg   [16:0] p_Val2_130_s_reg_9785;
reg   [0:0] tmp_1738_reg_9790;
wire   [7:0] p_Val2_132_s_fu_4007_p2;
reg   [7:0] p_Val2_132_s_reg_9796;
wire   [0:0] tmp_1741_fu_4013_p3;
reg   [0:0] tmp_1741_reg_9802;
wire   [0:0] carry_33_s_fu_4027_p2;
reg   [0:0] carry_33_s_reg_9808;
wire   [0:0] Range2_all_ones_s_fu_4043_p2;
reg   [0:0] Range2_all_ones_s_reg_9815;
wire   [0:0] Range1_all_ones_s_fu_4059_p2;
reg   [0:0] Range1_all_ones_s_reg_9820;
wire   [0:0] Range1_all_zeros_s_fu_4065_p2;
reg   [0:0] Range1_all_zeros_s_reg_9827;
wire   [16:0] p_Val2_130_10_fu_4086_p2;
reg   [16:0] p_Val2_130_10_reg_9832;
reg   [0:0] tmp_1748_reg_9837;
wire   [7:0] p_Val2_132_10_fu_4121_p2;
reg   [7:0] p_Val2_132_10_reg_9843;
wire   [0:0] tmp_1751_fu_4127_p3;
reg   [0:0] tmp_1751_reg_9849;
wire   [0:0] carry_33_10_fu_4141_p2;
reg   [0:0] carry_33_10_reg_9855;
wire   [0:0] Range2_all_ones_11_fu_4157_p2;
reg   [0:0] Range2_all_ones_11_reg_9862;
wire   [0:0] Range1_all_ones_11_fu_4173_p2;
reg   [0:0] Range1_all_ones_11_reg_9867;
wire   [0:0] Range1_all_zeros_11_fu_4179_p2;
reg   [0:0] Range1_all_zeros_11_reg_9874;
wire   [0:0] p_38_i_i_fu_4214_p2;
reg   [0:0] p_38_i_i_reg_9879;
wire    ap_CS_fsm_state37;
wire   [0:0] tmp_181_fu_4229_p2;
reg   [0:0] tmp_181_reg_9884;
wire   [0:0] brmerge40_demorgan_i_fu_4240_p2;
reg   [0:0] brmerge40_demorgan_i_reg_9889;
wire   [0:0] underflow_fu_4257_p2;
reg   [0:0] underflow_reg_9894;
wire   [0:0] brmerge_i_i_i_fu_4262_p2;
reg   [0:0] brmerge_i_i_i_reg_9899;
wire   [0:0] p_38_i_i_1_fu_4297_p2;
reg   [0:0] p_38_i_i_1_reg_9904;
wire   [0:0] tmp_432_1_fu_4312_p2;
reg   [0:0] tmp_432_1_reg_9909;
wire   [0:0] brmerge40_demorgan_i_219_fu_4323_p2;
reg   [0:0] brmerge40_demorgan_i_219_reg_9914;
wire   [0:0] underflow_1_fu_4340_p2;
reg   [0:0] underflow_1_reg_9919;
wire   [0:0] brmerge_i_i_i_1_fu_4345_p2;
reg   [0:0] brmerge_i_i_i_1_reg_9924;
wire   [0:0] p_38_i_i_2_fu_4380_p2;
reg   [0:0] p_38_i_i_2_reg_9929;
wire   [0:0] tmp_432_2_fu_4395_p2;
reg   [0:0] tmp_432_2_reg_9934;
wire   [0:0] brmerge40_demorgan_i_221_fu_4406_p2;
reg   [0:0] brmerge40_demorgan_i_221_reg_9939;
wire   [0:0] underflow_2_fu_4423_p2;
reg   [0:0] underflow_2_reg_9944;
wire   [0:0] brmerge_i_i_i_2_fu_4428_p2;
reg   [0:0] brmerge_i_i_i_2_reg_9949;
wire   [0:0] p_38_i_i_3_fu_4463_p2;
reg   [0:0] p_38_i_i_3_reg_9954;
wire   [0:0] tmp_432_3_fu_4478_p2;
reg   [0:0] tmp_432_3_reg_9959;
wire   [0:0] brmerge40_demorgan_i_223_fu_4489_p2;
reg   [0:0] brmerge40_demorgan_i_223_reg_9964;
wire   [0:0] underflow_3_fu_4506_p2;
reg   [0:0] underflow_3_reg_9969;
wire   [0:0] brmerge_i_i_i_3_fu_4511_p2;
reg   [0:0] brmerge_i_i_i_3_reg_9974;
wire   [0:0] p_38_i_i_4_fu_4546_p2;
reg   [0:0] p_38_i_i_4_reg_9979;
wire   [0:0] tmp_432_4_fu_4561_p2;
reg   [0:0] tmp_432_4_reg_9984;
wire   [0:0] brmerge40_demorgan_i_225_fu_4572_p2;
reg   [0:0] brmerge40_demorgan_i_225_reg_9989;
wire   [0:0] underflow_4_fu_4589_p2;
reg   [0:0] underflow_4_reg_9994;
wire   [0:0] brmerge_i_i_i_4_fu_4594_p2;
reg   [0:0] brmerge_i_i_i_4_reg_9999;
wire   [0:0] p_38_i_i_5_fu_4629_p2;
reg   [0:0] p_38_i_i_5_reg_10004;
wire   [0:0] tmp_432_5_fu_4644_p2;
reg   [0:0] tmp_432_5_reg_10009;
wire   [0:0] brmerge40_demorgan_i_227_fu_4655_p2;
reg   [0:0] brmerge40_demorgan_i_227_reg_10014;
wire   [0:0] underflow_5_fu_4672_p2;
reg   [0:0] underflow_5_reg_10019;
wire   [0:0] brmerge_i_i_i_5_fu_4677_p2;
reg   [0:0] brmerge_i_i_i_5_reg_10024;
wire   [0:0] p_38_i_i_6_fu_4712_p2;
reg   [0:0] p_38_i_i_6_reg_10029;
wire   [0:0] tmp_432_6_fu_4727_p2;
reg   [0:0] tmp_432_6_reg_10034;
wire   [0:0] brmerge40_demorgan_i_229_fu_4738_p2;
reg   [0:0] brmerge40_demorgan_i_229_reg_10039;
wire   [0:0] underflow_6_fu_4755_p2;
reg   [0:0] underflow_6_reg_10044;
wire   [0:0] brmerge_i_i_i_6_fu_4760_p2;
reg   [0:0] brmerge_i_i_i_6_reg_10049;
wire   [0:0] p_38_i_i_7_fu_4795_p2;
reg   [0:0] p_38_i_i_7_reg_10054;
wire   [0:0] tmp_432_7_fu_4810_p2;
reg   [0:0] tmp_432_7_reg_10059;
wire   [0:0] brmerge40_demorgan_i_231_fu_4821_p2;
reg   [0:0] brmerge40_demorgan_i_231_reg_10064;
wire   [0:0] underflow_7_fu_4838_p2;
reg   [0:0] underflow_7_reg_10069;
wire   [0:0] brmerge_i_i_i_7_fu_4843_p2;
reg   [0:0] brmerge_i_i_i_7_reg_10074;
wire   [0:0] p_38_i_i_8_fu_4878_p2;
reg   [0:0] p_38_i_i_8_reg_10079;
wire   [0:0] tmp_432_8_fu_4893_p2;
reg   [0:0] tmp_432_8_reg_10084;
wire   [0:0] brmerge40_demorgan_i_233_fu_4904_p2;
reg   [0:0] brmerge40_demorgan_i_233_reg_10089;
wire   [0:0] underflow_8_fu_4921_p2;
reg   [0:0] underflow_8_reg_10094;
wire   [0:0] brmerge_i_i_i_8_fu_4926_p2;
reg   [0:0] brmerge_i_i_i_8_reg_10099;
wire   [0:0] p_38_i_i_9_fu_4961_p2;
reg   [0:0] p_38_i_i_9_reg_10104;
wire   [0:0] tmp_432_9_fu_4976_p2;
reg   [0:0] tmp_432_9_reg_10109;
wire   [0:0] brmerge40_demorgan_i_235_fu_4987_p2;
reg   [0:0] brmerge40_demorgan_i_235_reg_10114;
wire   [0:0] underflow_9_fu_5004_p2;
reg   [0:0] underflow_9_reg_10119;
wire   [0:0] brmerge_i_i_i_9_fu_5009_p2;
reg   [0:0] brmerge_i_i_i_9_reg_10124;
wire   [0:0] p_38_i_i_10_fu_5044_p2;
reg   [0:0] p_38_i_i_10_reg_10129;
wire   [0:0] tmp_432_s_fu_5059_p2;
reg   [0:0] tmp_432_s_reg_10134;
wire   [0:0] brmerge40_demorgan_i_237_fu_5070_p2;
reg   [0:0] brmerge40_demorgan_i_237_reg_10139;
wire   [0:0] underflow_10_fu_5087_p2;
reg   [0:0] underflow_10_reg_10144;
wire   [0:0] brmerge_i_i_i_10_fu_5092_p2;
reg   [0:0] brmerge_i_i_i_10_reg_10149;
wire   [0:0] p_38_i_i_11_fu_5127_p2;
reg   [0:0] p_38_i_i_11_reg_10154;
wire   [0:0] tmp_432_10_fu_5142_p2;
reg   [0:0] tmp_432_10_reg_10159;
wire   [0:0] brmerge40_demorgan_i_239_fu_5153_p2;
reg   [0:0] brmerge40_demorgan_i_239_reg_10164;
wire   [0:0] underflow_11_fu_5170_p2;
reg   [0:0] underflow_11_reg_10169;
wire   [0:0] brmerge_i_i_i_11_fu_5175_p2;
reg   [0:0] brmerge_i_i_i_11_reg_10174;
wire   [16:0] p_Val2_34_fu_5556_p2;
reg   [16:0] p_Val2_34_reg_10179;
wire    ap_CS_fsm_state41;
reg   [0:0] tmp_1643_reg_10184;
wire   [7:0] p_Val2_36_fu_5591_p2;
reg   [7:0] p_Val2_36_reg_10190;
wire   [0:0] tmp_1646_fu_5597_p3;
reg   [0:0] tmp_1646_reg_10196;
wire   [0:0] carry_9_fu_5611_p2;
reg   [0:0] carry_9_reg_10202;
wire   [0:0] Range2_all_ones_10_fu_5627_p2;
reg   [0:0] Range2_all_ones_10_reg_10209;
wire   [0:0] Range1_all_ones_10_fu_5643_p2;
reg   [0:0] Range1_all_ones_10_reg_10214;
wire   [0:0] Range1_all_zeros_10_fu_5649_p2;
reg   [0:0] Range1_all_zeros_10_reg_10221;
wire   [16:0] p_Val2_135_1_fu_5670_p2;
reg   [16:0] p_Val2_135_1_reg_10226;
reg   [0:0] tmp_1653_reg_10231;
wire   [7:0] p_Val2_137_1_fu_5705_p2;
reg   [7:0] p_Val2_137_1_reg_10237;
wire   [0:0] tmp_1656_fu_5711_p3;
reg   [0:0] tmp_1656_reg_10243;
wire   [0:0] carry_35_1_fu_5725_p2;
reg   [0:0] carry_35_1_reg_10249;
wire   [0:0] Range2_all_ones_10_1_fu_5741_p2;
reg   [0:0] Range2_all_ones_10_1_reg_10256;
wire   [0:0] Range1_all_ones_10_1_fu_5757_p2;
reg   [0:0] Range1_all_ones_10_1_reg_10261;
wire   [0:0] Range1_all_zeros_10_1_fu_5763_p2;
reg   [0:0] Range1_all_zeros_10_1_reg_10268;
wire   [16:0] p_Val2_135_2_fu_5784_p2;
reg   [16:0] p_Val2_135_2_reg_10273;
reg   [0:0] tmp_1663_reg_10278;
wire   [7:0] p_Val2_137_2_fu_5819_p2;
reg   [7:0] p_Val2_137_2_reg_10284;
wire   [0:0] tmp_1666_fu_5825_p3;
reg   [0:0] tmp_1666_reg_10290;
wire   [0:0] carry_35_2_fu_5839_p2;
reg   [0:0] carry_35_2_reg_10296;
wire   [0:0] Range2_all_ones_10_2_fu_5855_p2;
reg   [0:0] Range2_all_ones_10_2_reg_10303;
wire   [0:0] Range1_all_ones_10_2_fu_5871_p2;
reg   [0:0] Range1_all_ones_10_2_reg_10308;
wire   [0:0] Range1_all_zeros_10_2_fu_5877_p2;
reg   [0:0] Range1_all_zeros_10_2_reg_10315;
wire   [16:0] p_Val2_135_3_fu_5898_p2;
reg   [16:0] p_Val2_135_3_reg_10320;
reg   [0:0] tmp_1673_reg_10325;
wire   [7:0] p_Val2_137_3_fu_5933_p2;
reg   [7:0] p_Val2_137_3_reg_10331;
wire   [0:0] tmp_1676_fu_5939_p3;
reg   [0:0] tmp_1676_reg_10337;
wire   [0:0] carry_35_3_fu_5953_p2;
reg   [0:0] carry_35_3_reg_10343;
wire   [0:0] Range2_all_ones_10_3_fu_5969_p2;
reg   [0:0] Range2_all_ones_10_3_reg_10350;
wire   [0:0] Range1_all_ones_10_3_fu_5985_p2;
reg   [0:0] Range1_all_ones_10_3_reg_10355;
wire   [0:0] Range1_all_zeros_10_3_fu_5991_p2;
reg   [0:0] Range1_all_zeros_10_3_reg_10362;
wire   [16:0] p_Val2_135_4_fu_6012_p2;
reg   [16:0] p_Val2_135_4_reg_10367;
reg   [0:0] tmp_1683_reg_10372;
wire   [7:0] p_Val2_137_4_fu_6047_p2;
reg   [7:0] p_Val2_137_4_reg_10378;
wire   [0:0] tmp_1686_fu_6053_p3;
reg   [0:0] tmp_1686_reg_10384;
wire   [0:0] carry_35_4_fu_6067_p2;
reg   [0:0] carry_35_4_reg_10390;
wire   [0:0] Range2_all_ones_10_4_fu_6083_p2;
reg   [0:0] Range2_all_ones_10_4_reg_10397;
wire   [0:0] Range1_all_ones_10_4_fu_6099_p2;
reg   [0:0] Range1_all_ones_10_4_reg_10402;
wire   [0:0] Range1_all_zeros_10_4_fu_6105_p2;
reg   [0:0] Range1_all_zeros_10_4_reg_10409;
wire   [16:0] p_Val2_135_5_fu_6126_p2;
reg   [16:0] p_Val2_135_5_reg_10414;
reg   [0:0] tmp_1693_reg_10419;
wire   [7:0] p_Val2_137_5_fu_6161_p2;
reg   [7:0] p_Val2_137_5_reg_10425;
wire   [0:0] tmp_1696_fu_6167_p3;
reg   [0:0] tmp_1696_reg_10431;
wire   [0:0] carry_35_5_fu_6181_p2;
reg   [0:0] carry_35_5_reg_10437;
wire   [0:0] Range2_all_ones_10_5_fu_6197_p2;
reg   [0:0] Range2_all_ones_10_5_reg_10444;
wire   [0:0] Range1_all_ones_10_5_fu_6213_p2;
reg   [0:0] Range1_all_ones_10_5_reg_10449;
wire   [0:0] Range1_all_zeros_10_5_fu_6219_p2;
reg   [0:0] Range1_all_zeros_10_5_reg_10456;
wire   [16:0] p_Val2_135_6_fu_6240_p2;
reg   [16:0] p_Val2_135_6_reg_10461;
reg   [0:0] tmp_1703_reg_10466;
wire   [7:0] p_Val2_137_6_fu_6275_p2;
reg   [7:0] p_Val2_137_6_reg_10472;
wire   [0:0] tmp_1706_fu_6281_p3;
reg   [0:0] tmp_1706_reg_10478;
wire   [0:0] carry_35_6_fu_6295_p2;
reg   [0:0] carry_35_6_reg_10484;
wire   [0:0] Range2_all_ones_10_6_fu_6311_p2;
reg   [0:0] Range2_all_ones_10_6_reg_10491;
wire   [0:0] Range1_all_ones_10_6_fu_6327_p2;
reg   [0:0] Range1_all_ones_10_6_reg_10496;
wire   [0:0] Range1_all_zeros_10_6_fu_6333_p2;
reg   [0:0] Range1_all_zeros_10_6_reg_10503;
wire   [16:0] p_Val2_135_7_fu_6354_p2;
reg   [16:0] p_Val2_135_7_reg_10508;
reg   [0:0] tmp_1713_reg_10513;
wire   [7:0] p_Val2_137_7_fu_6389_p2;
reg   [7:0] p_Val2_137_7_reg_10519;
wire   [0:0] tmp_1716_fu_6395_p3;
reg   [0:0] tmp_1716_reg_10525;
wire   [0:0] carry_35_7_fu_6409_p2;
reg   [0:0] carry_35_7_reg_10531;
wire   [0:0] Range2_all_ones_10_7_fu_6425_p2;
reg   [0:0] Range2_all_ones_10_7_reg_10538;
wire   [0:0] Range1_all_ones_10_7_fu_6441_p2;
reg   [0:0] Range1_all_ones_10_7_reg_10543;
wire   [0:0] Range1_all_zeros_10_7_fu_6447_p2;
reg   [0:0] Range1_all_zeros_10_7_reg_10550;
wire   [16:0] p_Val2_135_8_fu_6468_p2;
reg   [16:0] p_Val2_135_8_reg_10555;
reg   [0:0] tmp_1723_reg_10560;
wire   [7:0] p_Val2_137_8_fu_6503_p2;
reg   [7:0] p_Val2_137_8_reg_10566;
wire   [0:0] tmp_1726_fu_6509_p3;
reg   [0:0] tmp_1726_reg_10572;
wire   [0:0] carry_35_8_fu_6523_p2;
reg   [0:0] carry_35_8_reg_10578;
wire   [0:0] Range2_all_ones_10_8_fu_6539_p2;
reg   [0:0] Range2_all_ones_10_8_reg_10585;
wire   [0:0] Range1_all_ones_10_8_fu_6555_p2;
reg   [0:0] Range1_all_ones_10_8_reg_10590;
wire   [0:0] Range1_all_zeros_10_8_fu_6561_p2;
reg   [0:0] Range1_all_zeros_10_8_reg_10597;
wire   [16:0] p_Val2_135_9_fu_6582_p2;
reg   [16:0] p_Val2_135_9_reg_10602;
reg   [0:0] tmp_1733_reg_10607;
wire   [7:0] p_Val2_137_9_fu_6617_p2;
reg   [7:0] p_Val2_137_9_reg_10613;
wire   [0:0] tmp_1736_fu_6623_p3;
reg   [0:0] tmp_1736_reg_10619;
wire   [0:0] carry_35_9_fu_6637_p2;
reg   [0:0] carry_35_9_reg_10625;
wire   [0:0] Range2_all_ones_10_9_fu_6653_p2;
reg   [0:0] Range2_all_ones_10_9_reg_10632;
wire   [0:0] Range1_all_ones_10_9_fu_6669_p2;
reg   [0:0] Range1_all_ones_10_9_reg_10637;
wire   [0:0] Range1_all_zeros_10_9_fu_6675_p2;
reg   [0:0] Range1_all_zeros_10_9_reg_10644;
wire   [16:0] p_Val2_135_s_fu_6696_p2;
reg   [16:0] p_Val2_135_s_reg_10649;
reg   [0:0] tmp_1743_reg_10654;
wire   [7:0] p_Val2_137_s_fu_6731_p2;
reg   [7:0] p_Val2_137_s_reg_10660;
wire   [0:0] tmp_1746_fu_6737_p3;
reg   [0:0] tmp_1746_reg_10666;
wire   [0:0] carry_35_s_fu_6751_p2;
reg   [0:0] carry_35_s_reg_10672;
wire   [0:0] Range2_all_ones_10_s_fu_6767_p2;
reg   [0:0] Range2_all_ones_10_s_reg_10679;
wire   [0:0] Range1_all_ones_10_s_fu_6783_p2;
reg   [0:0] Range1_all_ones_10_s_reg_10684;
wire   [0:0] Range1_all_zeros_10_s_fu_6789_p2;
reg   [0:0] Range1_all_zeros_10_s_reg_10691;
wire   [16:0] p_Val2_135_10_fu_6810_p2;
reg   [16:0] p_Val2_135_10_reg_10696;
reg   [0:0] tmp_1753_reg_10701;
wire   [7:0] p_Val2_137_10_fu_6845_p2;
reg   [7:0] p_Val2_137_10_reg_10707;
wire   [0:0] tmp_1756_fu_6851_p3;
reg   [0:0] tmp_1756_reg_10713;
wire   [0:0] carry_35_10_fu_6865_p2;
reg   [0:0] carry_35_10_reg_10719;
wire   [0:0] Range2_all_ones_10_10_fu_6881_p2;
reg   [0:0] Range2_all_ones_10_10_reg_10726;
wire   [0:0] Range1_all_ones_10_10_fu_6897_p2;
reg   [0:0] Range1_all_ones_10_10_reg_10731;
wire   [0:0] Range1_all_zeros_10_10_fu_6903_p2;
reg   [0:0] Range1_all_zeros_10_10_reg_10738;
wire   [0:0] p_38_i_i1_fu_6938_p2;
reg   [0:0] p_38_i_i1_reg_10743;
wire    ap_CS_fsm_state42;
wire   [0:0] tmp_187_fu_6953_p2;
reg   [0:0] tmp_187_reg_10748;
wire   [0:0] brmerge40_demorgan_i_241_fu_6964_p2;
reg   [0:0] brmerge40_demorgan_i_241_reg_10753;
wire   [0:0] underflow_19_fu_6981_p2;
reg   [0:0] underflow_19_reg_10758;
wire   [0:0] brmerge_i_i_i1_fu_6986_p2;
reg   [0:0] brmerge_i_i_i1_reg_10763;
wire   [0:0] p_38_i_i1_1_fu_7021_p2;
reg   [0:0] p_38_i_i1_1_reg_10768;
wire   [0:0] tmp_447_1_fu_7036_p2;
reg   [0:0] tmp_447_1_reg_10773;
wire   [0:0] brmerge40_demorgan_i_220_fu_7047_p2;
reg   [0:0] brmerge40_demorgan_i_220_reg_10778;
wire   [0:0] underflow_19_1_fu_7064_p2;
reg   [0:0] underflow_19_1_reg_10783;
wire   [0:0] brmerge_i_i_i1_1_fu_7069_p2;
reg   [0:0] brmerge_i_i_i1_1_reg_10788;
wire   [0:0] p_38_i_i1_2_fu_7104_p2;
reg   [0:0] p_38_i_i1_2_reg_10793;
wire   [0:0] tmp_447_2_fu_7119_p2;
reg   [0:0] tmp_447_2_reg_10798;
wire   [0:0] brmerge40_demorgan_i_222_fu_7130_p2;
reg   [0:0] brmerge40_demorgan_i_222_reg_10803;
wire   [0:0] underflow_19_2_fu_7147_p2;
reg   [0:0] underflow_19_2_reg_10808;
wire   [0:0] brmerge_i_i_i1_2_fu_7152_p2;
reg   [0:0] brmerge_i_i_i1_2_reg_10813;
wire   [0:0] p_38_i_i1_3_fu_7187_p2;
reg   [0:0] p_38_i_i1_3_reg_10818;
wire   [0:0] tmp_447_3_fu_7202_p2;
reg   [0:0] tmp_447_3_reg_10823;
wire   [0:0] brmerge40_demorgan_i_224_fu_7213_p2;
reg   [0:0] brmerge40_demorgan_i_224_reg_10828;
wire   [0:0] underflow_19_3_fu_7230_p2;
reg   [0:0] underflow_19_3_reg_10833;
wire   [0:0] brmerge_i_i_i1_3_fu_7235_p2;
reg   [0:0] brmerge_i_i_i1_3_reg_10838;
wire   [0:0] p_38_i_i1_4_fu_7270_p2;
reg   [0:0] p_38_i_i1_4_reg_10843;
wire   [0:0] tmp_447_4_fu_7285_p2;
reg   [0:0] tmp_447_4_reg_10848;
wire   [0:0] brmerge40_demorgan_i_226_fu_7296_p2;
reg   [0:0] brmerge40_demorgan_i_226_reg_10853;
wire   [0:0] underflow_19_4_fu_7313_p2;
reg   [0:0] underflow_19_4_reg_10858;
wire   [0:0] brmerge_i_i_i1_4_fu_7318_p2;
reg   [0:0] brmerge_i_i_i1_4_reg_10863;
wire   [0:0] p_38_i_i1_5_fu_7353_p2;
reg   [0:0] p_38_i_i1_5_reg_10868;
wire   [0:0] tmp_447_5_fu_7368_p2;
reg   [0:0] tmp_447_5_reg_10873;
wire   [0:0] brmerge40_demorgan_i_228_fu_7379_p2;
reg   [0:0] brmerge40_demorgan_i_228_reg_10878;
wire   [0:0] underflow_19_5_fu_7396_p2;
reg   [0:0] underflow_19_5_reg_10883;
wire   [0:0] brmerge_i_i_i1_5_fu_7401_p2;
reg   [0:0] brmerge_i_i_i1_5_reg_10888;
wire   [0:0] p_38_i_i1_6_fu_7436_p2;
reg   [0:0] p_38_i_i1_6_reg_10893;
wire   [0:0] tmp_447_6_fu_7451_p2;
reg   [0:0] tmp_447_6_reg_10898;
wire   [0:0] brmerge40_demorgan_i_230_fu_7462_p2;
reg   [0:0] brmerge40_demorgan_i_230_reg_10903;
wire   [0:0] underflow_19_6_fu_7479_p2;
reg   [0:0] underflow_19_6_reg_10908;
wire   [0:0] brmerge_i_i_i1_6_fu_7484_p2;
reg   [0:0] brmerge_i_i_i1_6_reg_10913;
wire   [0:0] p_38_i_i1_7_fu_7519_p2;
reg   [0:0] p_38_i_i1_7_reg_10918;
wire   [0:0] tmp_447_7_fu_7534_p2;
reg   [0:0] tmp_447_7_reg_10923;
wire   [0:0] brmerge40_demorgan_i_232_fu_7545_p2;
reg   [0:0] brmerge40_demorgan_i_232_reg_10928;
wire   [0:0] underflow_19_7_fu_7562_p2;
reg   [0:0] underflow_19_7_reg_10933;
wire   [0:0] brmerge_i_i_i1_7_fu_7567_p2;
reg   [0:0] brmerge_i_i_i1_7_reg_10938;
wire   [0:0] p_38_i_i1_8_fu_7602_p2;
reg   [0:0] p_38_i_i1_8_reg_10943;
wire   [0:0] tmp_447_8_fu_7617_p2;
reg   [0:0] tmp_447_8_reg_10948;
wire   [0:0] brmerge40_demorgan_i_234_fu_7628_p2;
reg   [0:0] brmerge40_demorgan_i_234_reg_10953;
wire   [0:0] underflow_19_8_fu_7645_p2;
reg   [0:0] underflow_19_8_reg_10958;
wire   [0:0] brmerge_i_i_i1_8_fu_7650_p2;
reg   [0:0] brmerge_i_i_i1_8_reg_10963;
wire   [0:0] p_38_i_i1_9_fu_7685_p2;
reg   [0:0] p_38_i_i1_9_reg_10968;
wire   [0:0] tmp_447_9_fu_7700_p2;
reg   [0:0] tmp_447_9_reg_10973;
wire   [0:0] brmerge40_demorgan_i_236_fu_7711_p2;
reg   [0:0] brmerge40_demorgan_i_236_reg_10978;
wire   [0:0] underflow_19_9_fu_7728_p2;
reg   [0:0] underflow_19_9_reg_10983;
wire   [0:0] brmerge_i_i_i1_9_fu_7733_p2;
reg   [0:0] brmerge_i_i_i1_9_reg_10988;
wire   [0:0] p_38_i_i1_10_fu_7768_p2;
reg   [0:0] p_38_i_i1_10_reg_10993;
wire   [0:0] tmp_447_s_fu_7783_p2;
reg   [0:0] tmp_447_s_reg_10998;
wire   [0:0] brmerge40_demorgan_i_238_fu_7794_p2;
reg   [0:0] brmerge40_demorgan_i_238_reg_11003;
wire   [0:0] underflow_19_s_fu_7811_p2;
reg   [0:0] underflow_19_s_reg_11008;
wire   [0:0] brmerge_i_i_i1_10_fu_7816_p2;
reg   [0:0] brmerge_i_i_i1_10_reg_11013;
wire   [0:0] p_38_i_i1_s_fu_7851_p2;
reg   [0:0] p_38_i_i1_s_reg_11018;
wire   [0:0] tmp_447_10_fu_7866_p2;
reg   [0:0] tmp_447_10_reg_11023;
wire   [0:0] brmerge40_demorgan_i_240_fu_7877_p2;
reg   [0:0] brmerge40_demorgan_i_240_reg_11028;
wire   [0:0] underflow_19_10_fu_7894_p2;
reg   [0:0] underflow_19_10_reg_11033;
wire   [0:0] brmerge_i_i_i1_s_fu_7899_p2;
reg   [0:0] brmerge_i_i_i1_s_reg_11038;
wire   [0:0] exitcond_flatten21_fu_8265_p2;
reg   [0:0] exitcond_flatten21_reg_11043;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state44_pp2_stage0_iter0;
wire    ap_block_state46_pp2_stage0_iter1;
wire    ap_block_state48_pp2_stage0_iter2;
wire    ap_block_state50_pp2_stage0_iter3;
wire    ap_block_state52_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_flag00011001;
reg   [0:0] ap_reg_pp2_iter1_exitcond_flatten21_reg_11043;
reg   [0:0] ap_reg_pp2_iter2_exitcond_flatten21_reg_11043;
reg   [0:0] ap_reg_pp2_iter3_exitcond_flatten21_reg_11043;
wire   [14:0] indvar_flatten_next2_4_fu_8271_p2;
reg   [14:0] indvar_flatten_next2_4_reg_11047;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] j_2_mid_fu_8289_p3;
reg   [5:0] j_2_mid_reg_11052;
wire   [4:0] arrayNo7_mid2_v_fu_8297_p3;
reg   [4:0] arrayNo7_mid2_v_reg_11058;
wire   [0:0] exitcond_mid_fu_8323_p2;
reg   [0:0] exitcond_mid_reg_11065;
wire   [5:0] k_2_mid2_fu_8335_p3;
reg   [5:0] k_2_mid2_reg_11070;
wire   [11:0] indvar_flatten_next2_3_fu_8349_p3;
reg   [11:0] indvar_flatten_next2_3_reg_11076;
reg   [2:0] tmp_1630_reg_11081;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state45_pp2_stage1_iter0;
wire    ap_block_state47_pp2_stage1_iter1;
wire    ap_block_state49_pp2_stage1_iter2;
wire    ap_block_state51_pp2_stage1_iter3;
wire    ap_block_pp2_stage1_flag00011001;
wire   [5:0] j_2_cast_mid2_fu_8381_p3;
reg   [5:0] j_2_cast_mid2_reg_11087;
wire   [5:0] k_6_fu_8387_p2;
reg   [5:0] k_6_reg_11093;
wire   [12:0] tmp_641_fu_8470_p2;
reg   [12:0] tmp_641_reg_11098;
reg   [12:0] ap_reg_pp2_iter2_tmp_641_reg_11098;
reg   [12:0] ap_reg_pp2_iter3_tmp_641_reg_11098;
reg   [11:0] conv1_output_p_V_1_a_3_reg_11103;
reg   [11:0] conv1_output_p_V_10_7_reg_11108;
reg   [11:0] conv1_output_p_V_5_a_3_reg_11113;
reg   [11:0] conv1_output_p_V_11_7_reg_11118;
reg   [11:0] conv1_output_p_V_0_a_3_reg_11123;
reg   [11:0] conv1_output_p_V_4_a_3_reg_11128;
reg   [11:0] conv1_output_p_V_2_a_3_reg_11133;
reg   [11:0] conv1_output_p_V_3_a_3_reg_11138;
reg   [11:0] conv1_output_p_V_7_a_3_reg_11143;
reg   [11:0] conv1_output_p_V_8_a_3_reg_11148;
reg   [11:0] conv1_output_p_V_9_a_3_reg_11153;
reg   [11:0] conv1_output_p_V_6_a_3_reg_11158;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter12;
wire    ap_CS_fsm_state15;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state16;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
wire    ap_block_pp2_stage0_flag00011011;
reg    ap_condition_pp2_exit_iter0_state44;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage1_flag00011011;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg   [5:0] weight_temp_0_V_address0;
reg    weight_temp_0_V_ce0;
reg    weight_temp_0_V_we0;
reg   [7:0] weight_temp_0_V_d0;
wire   [7:0] weight_temp_0_V_q0;
wire   [5:0] weight_temp_0_V_address1;
reg    weight_temp_0_V_ce1;
wire   [7:0] weight_temp_0_V_q1;
reg   [5:0] weight_temp_1_V_address0;
reg    weight_temp_1_V_ce0;
reg    weight_temp_1_V_we0;
wire   [7:0] weight_temp_1_V_q0;
wire   [5:0] weight_temp_1_V_address1;
reg    weight_temp_1_V_ce1;
wire   [7:0] weight_temp_1_V_q1;
reg   [5:0] weight_temp_2_V_address0;
reg    weight_temp_2_V_ce0;
reg    weight_temp_2_V_we0;
wire   [7:0] weight_temp_2_V_q0;
wire   [5:0] weight_temp_2_V_address1;
reg    weight_temp_2_V_ce1;
wire   [7:0] weight_temp_2_V_q1;
reg   [5:0] weight_temp_3_V_address0;
reg    weight_temp_3_V_ce0;
reg    weight_temp_3_V_we0;
wire   [7:0] weight_temp_3_V_q0;
wire   [5:0] weight_temp_3_V_address1;
reg    weight_temp_3_V_ce1;
wire   [7:0] weight_temp_3_V_q1;
reg   [5:0] weight_temp_4_V_address0;
reg    weight_temp_4_V_ce0;
reg    weight_temp_4_V_we0;
wire   [7:0] weight_temp_4_V_q0;
wire   [5:0] weight_temp_4_V_address1;
reg    weight_temp_4_V_ce1;
wire   [7:0] weight_temp_4_V_q1;
reg   [5:0] weight_temp_5_V_address0;
reg    weight_temp_5_V_ce0;
reg    weight_temp_5_V_we0;
wire   [7:0] weight_temp_5_V_q0;
wire   [5:0] weight_temp_5_V_address1;
reg    weight_temp_5_V_ce1;
wire   [7:0] weight_temp_5_V_q1;
reg   [5:0] weight_temp_6_V_address0;
reg    weight_temp_6_V_ce0;
reg    weight_temp_6_V_we0;
wire   [7:0] weight_temp_6_V_q0;
wire   [5:0] weight_temp_6_V_address1;
reg    weight_temp_6_V_ce1;
wire   [7:0] weight_temp_6_V_q1;
reg   [5:0] weight_temp_7_V_address0;
reg    weight_temp_7_V_ce0;
reg    weight_temp_7_V_we0;
wire   [7:0] weight_temp_7_V_q0;
wire   [5:0] weight_temp_7_V_address1;
reg    weight_temp_7_V_ce1;
wire   [7:0] weight_temp_7_V_q1;
reg   [5:0] weight_temp_8_V_address0;
reg    weight_temp_8_V_ce0;
reg    weight_temp_8_V_we0;
wire   [7:0] weight_temp_8_V_q0;
wire   [5:0] weight_temp_8_V_address1;
reg    weight_temp_8_V_ce1;
wire   [7:0] weight_temp_8_V_q1;
reg   [5:0] weight_temp_9_V_address0;
reg    weight_temp_9_V_ce0;
reg    weight_temp_9_V_we0;
wire   [7:0] weight_temp_9_V_q0;
wire   [5:0] weight_temp_9_V_address1;
reg    weight_temp_9_V_ce1;
wire   [7:0] weight_temp_9_V_q1;
reg   [5:0] weight_temp_10_V_address0;
reg    weight_temp_10_V_ce0;
reg    weight_temp_10_V_we0;
wire   [7:0] weight_temp_10_V_q0;
wire   [5:0] weight_temp_10_V_address1;
reg    weight_temp_10_V_ce1;
wire   [7:0] weight_temp_10_V_q1;
reg   [5:0] weight_temp_11_V_address0;
reg    weight_temp_11_V_ce0;
reg    weight_temp_11_V_we0;
wire   [7:0] weight_temp_11_V_q0;
wire   [5:0] weight_temp_11_V_address1;
reg    weight_temp_11_V_ce1;
wire   [7:0] weight_temp_11_V_q1;
wire   [15:0] grp_MUL_DP_fu_1343_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1343_ap_return_1;
reg    grp_MUL_DP_fu_1343_ap_ce;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire   [15:0] grp_MUL_DP_fu_1353_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1353_ap_return_1;
reg    grp_MUL_DP_fu_1353_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1363_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1363_ap_return_1;
reg    grp_MUL_DP_fu_1363_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1373_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1373_ap_return_1;
reg    grp_MUL_DP_fu_1373_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1383_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1383_ap_return_1;
reg    grp_MUL_DP_fu_1383_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1393_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1393_ap_return_1;
reg    grp_MUL_DP_fu_1393_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1403_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1403_ap_return_1;
reg    grp_MUL_DP_fu_1403_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1413_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1413_ap_return_1;
reg    grp_MUL_DP_fu_1413_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1423_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1423_ap_return_1;
reg    grp_MUL_DP_fu_1423_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1433_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1433_ap_return_1;
reg    grp_MUL_DP_fu_1433_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1443_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1443_ap_return_1;
reg    grp_MUL_DP_fu_1443_ap_ce;
wire   [15:0] grp_MUL_DP_fu_1453_ap_return_0;
wire   [15:0] grp_MUL_DP_fu_1453_ap_return_1;
reg    grp_MUL_DP_fu_1453_ap_ce;
reg   [4:0] i_phi_fu_1108_p4;
reg   [1:0] j_phi_fu_1130_p4;
reg   [3:0] indvar_flatten_phi_fu_1142_p4;
reg   [1:0] k_phi_fu_1154_p4;
reg   [1:0] p_phi_fu_1166_p4;
reg   [4:0] i_1_phi_fu_1189_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [5:0] j_1_phi_fu_1211_p4;
reg   [5:0] k_1_phi_fu_1223_p4;
reg   [5:0] h_reg_1231;
wire    ap_CS_fsm_state25;
reg   [5:0] w_reg_1243;
reg   [1:0] m_reg_1255;
reg   [1:0] n_reg_1266;
reg   [1:0] ci_reg_1277;
wire    ap_CS_fsm_state43;
reg   [14:0] indvar_flatten17_phi_fu_1292_p4;
wire    ap_block_pp2_stage0_flag00000000;
reg   [4:0] i_2_phi_fu_1303_p4;
reg   [11:0] indvar_flatten18_phi_fu_1314_p4;
reg   [5:0] j_2_phi_fu_1325_p4;
reg   [5:0] k_2_phi_fu_1336_p4;
wire   [31:0] tmp_1654_cast_fu_1898_p1;
wire   [31:0] i_1_cast_mid2_fu_2040_p1;
wire   [31:0] tmp_1665_cast_fu_2128_p1;
wire   [31:0] tmp_1671_cast_fu_2194_p1;
wire   [31:0] tmp_1672_cast_fu_2215_p1;
wire   [31:0] tmp_1691_cast_fu_2395_p1;
wire   [31:0] tmp_1697_cast_fu_2477_p1;
wire   [31:0] tmp_1702_cast_fu_2513_p1;
wire   [31:0] tmp_1683_cast_fu_8476_p1;
wire    ap_block_pp2_stage1_flag00000000;
wire   [31:0] sum_fu_1881_p2;
reg    ap_reg_ioackin_m_axi_weight_V_ARREADY;
reg    ap_block_pp0_stage0_flag00001001;
wire   [4:0] grp_fu_1945_p2;
wire    ap_CS_fsm_state38;
wire   [7:0] this_assign_1_10_fu_5502_p3;
wire    ap_CS_fsm_state39;
wire   [7:0] this_assign_54_1_s_fu_8226_p3;
wire   [0:0] tmp_1635_fu_8525_p3;
wire   [4:0] grp_fu_8305_p2;
wire   [7:0] this_assign_1_9_fu_5472_p3;
wire   [7:0] this_assign_54_1_9_fu_8196_p3;
wire   [7:0] this_assign_1_8_fu_5442_p3;
wire   [7:0] this_assign_54_1_8_fu_8166_p3;
wire   [7:0] this_assign_1_7_fu_5412_p3;
wire   [7:0] this_assign_54_1_7_fu_8136_p3;
wire   [7:0] this_assign_1_6_fu_5382_p3;
wire   [7:0] this_assign_54_1_6_fu_8106_p3;
wire   [7:0] this_assign_1_5_fu_5352_p3;
wire   [7:0] this_assign_54_1_5_fu_8076_p3;
wire   [7:0] this_assign_1_4_fu_5322_p3;
wire   [7:0] this_assign_54_1_4_fu_8046_p3;
wire   [7:0] this_assign_1_3_fu_5292_p3;
wire   [7:0] this_assign_54_1_3_fu_8016_p3;
wire   [7:0] this_assign_1_2_fu_5262_p3;
wire   [7:0] this_assign_54_1_2_fu_7986_p3;
wire   [7:0] this_assign_1_1_fu_5232_p3;
wire   [7:0] this_assign_54_1_1_fu_7956_p3;
wire   [7:0] this_assign_1_fu_5202_p3;
wire   [7:0] this_assign_54_1_fu_7926_p3;
wire   [7:0] this_assign_1_11_fu_5532_p3;
wire   [7:0] this_assign_54_1_10_fu_8256_p3;
wire   [4:0] i_4_fu_1523_p2;
wire   [5:0] indvar_flatten13_op_fu_1543_p2;
wire   [4:0] mul_fu_1567_p1;
wire   [11:0] mul_fu_1567_p2;
wire   [1:0] j_mid_fu_1557_p3;
wire   [1:0] j_4_fu_1600_p2;
wire   [6:0] tmp_606_fu_1628_p3;
wire   [7:0] p_shl5_cast_fu_1635_p1;
wire   [7:0] i_cast_mid2_cast_fu_1625_p1;
wire   [7:0] tmp_607_fu_1639_p2;
wire  signed [4:0] newIndex_cast_mid2_v_fu_1654_p1;
wire   [4:0] tmp_1618_fu_1661_p3;
wire  signed [6:0] tmp_608_fu_1668_p1;
wire   [7:0] p_shl4_cast_fu_1672_p1;
wire   [7:0] newIndex_cast_mid2_c_fu_1657_p1;
wire   [7:0] tmp_609_fu_1676_p2;
wire   [0:0] exitcond_fu_1686_p2;
wire   [8:0] j_cast_mid2_cast_fu_1704_p1;
wire  signed [8:0] tmp_1634_cast_fu_1645_p1;
wire   [8:0] tmp_611_fu_1707_p2;
wire   [10:0] tmp_1619_fu_1717_p3;
wire  signed [31:0] p_shl3_fu_1725_p1;
wire  signed [31:0] tmp_1639_cast_fu_1713_p1;
wire  signed [8:0] tmp_1637_cast_fu_1682_p1;
wire   [8:0] tmp_613_fu_1735_p2;
wire   [10:0] tmp_1620_fu_1745_p3;
wire  signed [31:0] p_shl2_fu_1753_p1;
wire  signed [31:0] tmp_1642_cast_fu_1741_p1;
wire   [0:0] exitcond_flatten_not_fu_1763_p2;
wire   [0:0] exitcond63_mid_fu_1692_p2;
wire   [0:0] not_exitcond_flatten_4_fu_1768_p2;
wire   [1:0] k_mid_fu_1697_p3;
wire   [0:0] exitcond63_mid1_fu_1773_p2;
wire   [0:0] tmp_615_fu_1785_p2;
wire   [0:0] tmp_1621_fu_1790_p2;
wire   [1:0] k_5_fu_1779_p2;
wire   [31:0] k_cast_mid2_cast_fu_1811_p1;
wire   [31:0] tmp_612_fu_1729_p2;
wire   [31:0] tmp_614_fu_1757_p2;
wire   [31:0] tmp_618_fu_1821_p2;
wire   [31:0] tmp_1622_fu_1847_p2;
wire   [6:0] p_shl_cast_fu_1857_p3;
wire   [31:0] p_cast_fu_1869_p1;
wire   [31:0] tmp_617_fu_1852_p2;
wire   [31:0] tmp_620_fu_1875_p2;
wire   [6:0] p_cast_cast_fu_1872_p1;
wire   [6:0] tmp_619_fu_1864_p2;
wire   [4:0] i_5_fu_1925_p2;
wire   [4:0] grp_fu_1945_p0;
wire   [11:0] indvar_flatten44_op_fu_1951_p2;
wire   [0:0] exitcond27_fu_1977_p2;
wire   [0:0] not_exitcond_flatten_1_fu_1972_p2;
wire   [5:0] j_1_mid_fu_1965_p3;
wire   [0:0] exitcond62_mid_fu_1983_p2;
wire   [0:0] tmp_625_fu_1995_p2;
wire   [5:0] j_5_fu_1989_p2;
wire   [4:0] mul5_fu_2024_p1;
wire   [11:0] mul5_fu_2024_p2;
wire   [7:0] tmp_1626_fu_2044_p3;
wire  signed [9:0] tmp_622_fu_2051_p1;
wire   [3:0] tmp_1627_fu_2059_p3;
wire  signed [5:0] tmp_623_fu_2066_p1;
wire   [10:0] p_shl9_cast_fu_2070_p1;
wire   [10:0] p_shl8_cast_fu_2055_p1;
wire   [10:0] tmp_624_fu_2074_p2;
wire   [10:0] j_1_cast_mid2_cast_fu_2080_p1;
wire   [10:0] tmp_626_fu_2083_p2;
wire   [7:0] tmp_1628_fu_2089_p1;
wire   [11:0] tmp_1629_fu_2101_p3;
wire   [12:0] p_shl7_cast_fu_2109_p1;
wire   [12:0] p_shl6_cast_fu_2093_p3;
wire   [12:0] tmp_627_fu_2113_p2;
wire   [12:0] k_1_cast_cast_fu_2119_p1;
wire   [10:0] tmp_629_fu_2143_p3;
wire   [6:0] tmp_630_fu_2155_p3;
wire   [11:0] p_shl14_cast_fu_2163_p1;
wire   [11:0] p_shl13_cast_fu_2151_p1;
wire   [11:0] w_cast_cast_fu_2185_p1;
wire   [11:0] tmp_633_fu_2189_p2;
wire   [11:0] tmp_634_fu_2210_p2;
wire   [1:0] tmp1_fu_2263_p2;
wire  signed [5:0] tmp1_cast_fu_2269_p1;
wire   [5:0] tmp_s_fu_2273_p2;
wire   [1:0] tmp2_fu_2305_p2;
wire  signed [5:0] tmp2_cast_fu_2311_p1;
wire   [5:0] tmp_148_fu_2315_p2;
wire   [6:0] tmp_642_fu_2329_p3;
wire   [2:0] tmp_643_fu_2341_p3;
wire   [7:0] p_shl21_cast_fu_2349_p1;
wire   [7:0] p_shl20_cast_fu_2337_p1;
wire   [7:0] tmp_644_fu_2353_p2;
wire   [7:0] tmp_645_fu_2359_p2;
wire   [8:0] tmp_1636_fu_2372_p3;
wire   [12:0] p_shl19_cast_fu_2380_p1;
wire   [12:0] p_shl18_cast_fu_2364_p3;
wire   [12:0] tmp_646_fu_2384_p2;
wire   [12:0] tmp_647_fu_2390_p2;
wire   [3:0] tmp_648_fu_2400_p3;
wire   [4:0] p_shl17_cast_fu_2408_p1;
wire   [4:0] ci_cast_cast_fu_2325_p1;
wire   [4:0] tmp_649_fu_2412_p2;
wire  signed [5:0] tmp_1693_cast_fu_2418_p1;
wire   [5:0] tmp_650_fu_2422_p2;
wire   [4:0] tmp_1637_fu_2431_p1;
wire   [6:0] p_shl16_cast_fu_2435_p3;
wire  signed [6:0] tmp_1694_cast_fu_2427_p1;
wire   [6:0] tmp_651_fu_2443_p2;
wire   [4:0] tmp_653_fu_2454_p2;
wire   [6:0] p_shl15_cast_fu_2495_p3;
wire   [6:0] tmp_1699_cast_fu_2492_p1;
wire   [6:0] tmp_655_fu_2502_p2;
wire   [6:0] tmp_656_fu_2508_p2;
wire   [13:0] tmp_176_fu_2817_p3;
wire  signed [16:0] tmp_177_fu_2829_p1;
wire  signed [16:0] tmp_272_cast_fu_2825_p1;
wire   [7:0] tmp_178_fu_2856_p1;
wire   [7:0] p_Val2_32_fu_2846_p4;
wire   [0:0] tmp_1640_fu_2859_p3;
wire   [0:0] tmp_179_fu_2881_p2;
wire   [1:0] p_Result_s_fu_2893_p4;
wire   [2:0] p_Result_26_fu_2909_p4;
wire   [13:0] tmp_419_1_fu_2931_p3;
wire  signed [16:0] tmp_420_1_fu_2943_p1;
wire  signed [16:0] tmp_419_1_cast_fu_2939_p1;
wire   [7:0] tmp_423_1_fu_2970_p1;
wire   [7:0] p_Val2_131_1_fu_2960_p4;
wire   [0:0] tmp_1650_fu_2973_p3;
wire   [0:0] tmp_427_1_fu_2995_p2;
wire   [1:0] p_Result_246_1_fu_3007_p4;
wire   [2:0] p_Result_247_1_fu_3023_p4;
wire   [13:0] tmp_419_2_fu_3045_p3;
wire  signed [16:0] tmp_420_2_fu_3057_p1;
wire  signed [16:0] tmp_419_2_cast_fu_3053_p1;
wire   [7:0] tmp_423_2_fu_3084_p1;
wire   [7:0] p_Val2_131_2_fu_3074_p4;
wire   [0:0] tmp_1660_fu_3087_p3;
wire   [0:0] tmp_427_2_fu_3109_p2;
wire   [1:0] p_Result_246_2_fu_3121_p4;
wire   [2:0] p_Result_247_2_fu_3137_p4;
wire   [13:0] tmp_419_3_fu_3159_p3;
wire  signed [16:0] tmp_420_3_fu_3171_p1;
wire  signed [16:0] tmp_419_3_cast_fu_3167_p1;
wire   [7:0] tmp_423_3_fu_3198_p1;
wire   [7:0] p_Val2_131_3_fu_3188_p4;
wire   [0:0] tmp_1670_fu_3201_p3;
wire   [0:0] tmp_427_3_fu_3223_p2;
wire   [1:0] p_Result_246_3_fu_3235_p4;
wire   [2:0] p_Result_247_3_fu_3251_p4;
wire   [13:0] tmp_419_4_fu_3273_p3;
wire  signed [16:0] tmp_420_4_fu_3285_p1;
wire  signed [16:0] tmp_419_4_cast_fu_3281_p1;
wire   [7:0] tmp_423_4_fu_3312_p1;
wire   [7:0] p_Val2_131_4_fu_3302_p4;
wire   [0:0] tmp_1680_fu_3315_p3;
wire   [0:0] tmp_427_4_fu_3337_p2;
wire   [1:0] p_Result_246_4_fu_3349_p4;
wire   [2:0] p_Result_247_4_fu_3365_p4;
wire   [13:0] tmp_419_5_fu_3387_p3;
wire  signed [16:0] tmp_420_5_fu_3399_p1;
wire  signed [16:0] tmp_419_5_cast_fu_3395_p1;
wire   [7:0] tmp_423_5_fu_3426_p1;
wire   [7:0] p_Val2_131_5_fu_3416_p4;
wire   [0:0] tmp_1690_fu_3429_p3;
wire   [0:0] tmp_427_5_fu_3451_p2;
wire   [1:0] p_Result_246_5_fu_3463_p4;
wire   [2:0] p_Result_247_5_fu_3479_p4;
wire   [13:0] tmp_419_6_fu_3501_p3;
wire  signed [16:0] tmp_420_6_fu_3513_p1;
wire  signed [16:0] tmp_419_6_cast_fu_3509_p1;
wire   [7:0] tmp_423_6_fu_3540_p1;
wire   [7:0] p_Val2_131_6_fu_3530_p4;
wire   [0:0] tmp_1700_fu_3543_p3;
wire   [0:0] tmp_427_6_fu_3565_p2;
wire   [1:0] p_Result_246_6_fu_3577_p4;
wire   [2:0] p_Result_247_6_fu_3593_p4;
wire   [13:0] tmp_419_7_fu_3615_p3;
wire  signed [16:0] tmp_420_7_fu_3627_p1;
wire  signed [16:0] tmp_419_7_cast_fu_3623_p1;
wire   [7:0] tmp_423_7_fu_3654_p1;
wire   [7:0] p_Val2_131_7_fu_3644_p4;
wire   [0:0] tmp_1710_fu_3657_p3;
wire   [0:0] tmp_427_7_fu_3679_p2;
wire   [1:0] p_Result_246_7_fu_3691_p4;
wire   [2:0] p_Result_247_7_fu_3707_p4;
wire   [13:0] tmp_419_8_fu_3729_p3;
wire  signed [16:0] tmp_420_8_fu_3741_p1;
wire  signed [16:0] tmp_419_8_cast_fu_3737_p1;
wire   [7:0] tmp_423_8_fu_3768_p1;
wire   [7:0] p_Val2_131_8_fu_3758_p4;
wire   [0:0] tmp_1720_fu_3771_p3;
wire   [0:0] tmp_427_8_fu_3793_p2;
wire   [1:0] p_Result_246_8_fu_3805_p4;
wire   [2:0] p_Result_247_8_fu_3821_p4;
wire   [13:0] tmp_419_9_fu_3843_p3;
wire  signed [16:0] tmp_420_9_fu_3855_p1;
wire  signed [16:0] tmp_419_9_cast_fu_3851_p1;
wire   [7:0] tmp_423_9_fu_3882_p1;
wire   [7:0] p_Val2_131_9_fu_3872_p4;
wire   [0:0] tmp_1730_fu_3885_p3;
wire   [0:0] tmp_427_9_fu_3907_p2;
wire   [1:0] p_Result_246_9_fu_3919_p4;
wire   [2:0] p_Result_247_9_fu_3935_p4;
wire   [13:0] tmp_419_s_fu_3957_p3;
wire  signed [16:0] tmp_420_s_fu_3969_p1;
wire  signed [16:0] tmp_419_cast_fu_3965_p1;
wire   [7:0] tmp_423_s_fu_3996_p1;
wire   [7:0] p_Val2_131_s_fu_3986_p4;
wire   [0:0] tmp_1740_fu_3999_p3;
wire   [0:0] tmp_427_s_fu_4021_p2;
wire   [1:0] p_Result_246_s_fu_4033_p4;
wire   [2:0] p_Result_247_s_fu_4049_p4;
wire   [13:0] tmp_419_10_fu_4071_p3;
wire  signed [16:0] tmp_420_10_fu_4083_p1;
wire  signed [16:0] tmp_419_10_cast_fu_4079_p1;
wire   [7:0] tmp_423_10_fu_4110_p1;
wire   [7:0] p_Val2_131_10_fu_4100_p4;
wire   [0:0] tmp_1750_fu_4113_p3;
wire   [0:0] tmp_427_10_fu_4135_p2;
wire   [1:0] p_Result_246_10_fu_4147_p4;
wire   [2:0] p_Result_247_10_fu_4163_p4;
wire   [0:0] tmp_1642_fu_4185_p3;
wire   [0:0] tmp_180_fu_4197_p2;
wire   [0:0] p_41_i_i_fu_4203_p2;
wire   [0:0] deleted_zeros_fu_4192_p3;
wire   [0:0] p_not_i_i_fu_4218_p2;
wire   [0:0] brmerge_i_i_fu_4224_p2;
wire   [0:0] deleted_ones_fu_4208_p3;
wire   [0:0] tmp3_demorgan_fu_4245_p2;
wire   [0:0] tmp3_fu_4251_p2;
wire   [0:0] overflow_fu_4234_p2;
wire   [0:0] tmp_1652_fu_4268_p3;
wire   [0:0] tmp_430_1_fu_4280_p2;
wire   [0:0] p_41_i_i_1_fu_4286_p2;
wire   [0:0] deleted_zeros_1_fu_4275_p3;
wire   [0:0] p_not_i_i_1_fu_4301_p2;
wire   [0:0] brmerge_i_i_1_fu_4307_p2;
wire   [0:0] deleted_ones_1_fu_4291_p3;
wire   [0:0] tmp7_demorgan_fu_4328_p2;
wire   [0:0] tmp7_fu_4334_p2;
wire   [0:0] overflow_1_fu_4317_p2;
wire   [0:0] tmp_1662_fu_4351_p3;
wire   [0:0] tmp_430_2_fu_4363_p2;
wire   [0:0] p_41_i_i_2_fu_4369_p2;
wire   [0:0] deleted_zeros_2_fu_4358_p3;
wire   [0:0] p_not_i_i_2_fu_4384_p2;
wire   [0:0] brmerge_i_i_2_fu_4390_p2;
wire   [0:0] deleted_ones_2_fu_4374_p3;
wire   [0:0] tmp11_demorgan_fu_4411_p2;
wire   [0:0] tmp11_fu_4417_p2;
wire   [0:0] overflow_2_fu_4400_p2;
wire   [0:0] tmp_1672_fu_4434_p3;
wire   [0:0] tmp_430_3_fu_4446_p2;
wire   [0:0] p_41_i_i_3_fu_4452_p2;
wire   [0:0] deleted_zeros_3_fu_4441_p3;
wire   [0:0] p_not_i_i_3_fu_4467_p2;
wire   [0:0] brmerge_i_i_3_fu_4473_p2;
wire   [0:0] deleted_ones_3_fu_4457_p3;
wire   [0:0] tmp15_demorgan_fu_4494_p2;
wire   [0:0] tmp15_fu_4500_p2;
wire   [0:0] overflow_3_fu_4483_p2;
wire   [0:0] tmp_1682_fu_4517_p3;
wire   [0:0] tmp_430_4_fu_4529_p2;
wire   [0:0] p_41_i_i_4_fu_4535_p2;
wire   [0:0] deleted_zeros_4_fu_4524_p3;
wire   [0:0] p_not_i_i_4_fu_4550_p2;
wire   [0:0] brmerge_i_i_4_fu_4556_p2;
wire   [0:0] deleted_ones_4_fu_4540_p3;
wire   [0:0] tmp19_demorgan_fu_4577_p2;
wire   [0:0] tmp19_fu_4583_p2;
wire   [0:0] overflow_4_fu_4566_p2;
wire   [0:0] tmp_1692_fu_4600_p3;
wire   [0:0] tmp_430_5_fu_4612_p2;
wire   [0:0] p_41_i_i_5_fu_4618_p2;
wire   [0:0] deleted_zeros_5_fu_4607_p3;
wire   [0:0] p_not_i_i_5_fu_4633_p2;
wire   [0:0] brmerge_i_i_5_fu_4639_p2;
wire   [0:0] deleted_ones_5_fu_4623_p3;
wire   [0:0] tmp23_demorgan_fu_4660_p2;
wire   [0:0] tmp23_fu_4666_p2;
wire   [0:0] overflow_5_fu_4649_p2;
wire   [0:0] tmp_1702_fu_4683_p3;
wire   [0:0] tmp_430_6_fu_4695_p2;
wire   [0:0] p_41_i_i_6_fu_4701_p2;
wire   [0:0] deleted_zeros_6_fu_4690_p3;
wire   [0:0] p_not_i_i_6_fu_4716_p2;
wire   [0:0] brmerge_i_i_6_fu_4722_p2;
wire   [0:0] deleted_ones_6_fu_4706_p3;
wire   [0:0] tmp27_demorgan_fu_4743_p2;
wire   [0:0] tmp27_fu_4749_p2;
wire   [0:0] overflow_6_fu_4732_p2;
wire   [0:0] tmp_1712_fu_4766_p3;
wire   [0:0] tmp_430_7_fu_4778_p2;
wire   [0:0] p_41_i_i_7_fu_4784_p2;
wire   [0:0] deleted_zeros_7_fu_4773_p3;
wire   [0:0] p_not_i_i_7_fu_4799_p2;
wire   [0:0] brmerge_i_i_7_fu_4805_p2;
wire   [0:0] deleted_ones_7_fu_4789_p3;
wire   [0:0] tmp31_demorgan_fu_4826_p2;
wire   [0:0] tmp31_fu_4832_p2;
wire   [0:0] overflow_7_fu_4815_p2;
wire   [0:0] tmp_1722_fu_4849_p3;
wire   [0:0] tmp_430_8_fu_4861_p2;
wire   [0:0] p_41_i_i_8_fu_4867_p2;
wire   [0:0] deleted_zeros_8_fu_4856_p3;
wire   [0:0] p_not_i_i_8_fu_4882_p2;
wire   [0:0] brmerge_i_i_8_fu_4888_p2;
wire   [0:0] deleted_ones_8_fu_4872_p3;
wire   [0:0] tmp35_demorgan_fu_4909_p2;
wire   [0:0] tmp35_fu_4915_p2;
wire   [0:0] overflow_8_fu_4898_p2;
wire   [0:0] tmp_1732_fu_4932_p3;
wire   [0:0] tmp_430_9_fu_4944_p2;
wire   [0:0] p_41_i_i_9_fu_4950_p2;
wire   [0:0] deleted_zeros_9_fu_4939_p3;
wire   [0:0] p_not_i_i_9_fu_4965_p2;
wire   [0:0] brmerge_i_i_9_fu_4971_p2;
wire   [0:0] deleted_ones_9_fu_4955_p3;
wire   [0:0] tmp39_demorgan_fu_4992_p2;
wire   [0:0] tmp39_fu_4998_p2;
wire   [0:0] overflow_9_fu_4981_p2;
wire   [0:0] tmp_1742_fu_5015_p3;
wire   [0:0] tmp_430_s_fu_5027_p2;
wire   [0:0] p_41_i_i_10_fu_5033_p2;
wire   [0:0] deleted_zeros_s_fu_5022_p3;
wire   [0:0] p_not_i_i_10_fu_5048_p2;
wire   [0:0] brmerge_i_i_10_fu_5054_p2;
wire   [0:0] deleted_ones_s_fu_5038_p3;
wire   [0:0] tmp43_demorgan_fu_5075_p2;
wire   [0:0] tmp43_fu_5081_p2;
wire   [0:0] overflow_10_fu_5064_p2;
wire   [0:0] tmp_1752_fu_5098_p3;
wire   [0:0] tmp_430_10_fu_5110_p2;
wire   [0:0] p_41_i_i_11_fu_5116_p2;
wire   [0:0] deleted_zeros_11_fu_5105_p3;
wire   [0:0] p_not_i_i_11_fu_5131_p2;
wire   [0:0] brmerge_i_i_11_fu_5137_p2;
wire   [0:0] deleted_ones_11_fu_5121_p3;
wire   [0:0] tmp47_demorgan_fu_5158_p2;
wire   [0:0] tmp47_fu_5164_p2;
wire   [0:0] overflow_11_fu_5147_p2;
wire   [0:0] tmp4_fu_5181_p2;
wire   [0:0] underflow_not_fu_5185_p2;
wire   [7:0] p_Val2_132_mux_fu_5190_p3;
wire   [7:0] p_Val2_s_384_fu_5196_p3;
wire   [0:0] tmp8_fu_5211_p2;
wire   [0:0] underflow_not_1_fu_5215_p2;
wire   [7:0] p_Val2_132_mux_1_fu_5220_p3;
wire   [7:0] p_Val2_132_1_385_fu_5226_p3;
wire   [0:0] tmp12_fu_5241_p2;
wire   [0:0] underflow_not_2_fu_5245_p2;
wire   [7:0] p_Val2_132_mux_2_fu_5250_p3;
wire   [7:0] p_Val2_132_2_387_fu_5256_p3;
wire   [0:0] tmp16_fu_5271_p2;
wire   [0:0] underflow_not_3_fu_5275_p2;
wire   [7:0] p_Val2_132_mux_3_fu_5280_p3;
wire   [7:0] p_Val2_132_3_389_fu_5286_p3;
wire   [0:0] tmp20_fu_5301_p2;
wire   [0:0] underflow_not_4_fu_5305_p2;
wire   [7:0] p_Val2_132_mux_4_fu_5310_p3;
wire   [7:0] p_Val2_132_4_391_fu_5316_p3;
wire   [0:0] tmp24_fu_5331_p2;
wire   [0:0] underflow_not_5_fu_5335_p2;
wire   [7:0] p_Val2_132_mux_5_fu_5340_p3;
wire   [7:0] p_Val2_132_5_393_fu_5346_p3;
wire   [0:0] tmp28_fu_5361_p2;
wire   [0:0] underflow_not_6_fu_5365_p2;
wire   [7:0] p_Val2_132_mux_6_fu_5370_p3;
wire   [7:0] p_Val2_132_6_395_fu_5376_p3;
wire   [0:0] tmp32_fu_5391_p2;
wire   [0:0] underflow_not_7_fu_5395_p2;
wire   [7:0] p_Val2_132_mux_7_fu_5400_p3;
wire   [7:0] p_Val2_132_7_397_fu_5406_p3;
wire   [0:0] tmp36_fu_5421_p2;
wire   [0:0] underflow_not_8_fu_5425_p2;
wire   [7:0] p_Val2_132_mux_8_fu_5430_p3;
wire   [7:0] p_Val2_132_8_399_fu_5436_p3;
wire   [0:0] tmp40_fu_5451_p2;
wire   [0:0] underflow_not_9_fu_5455_p2;
wire   [7:0] p_Val2_132_mux_9_fu_5460_p3;
wire   [7:0] p_Val2_132_9_401_fu_5466_p3;
wire   [0:0] tmp44_fu_5481_p2;
wire   [0:0] underflow_not_10_fu_5485_p2;
wire   [7:0] p_Val2_132_mux_s_fu_5490_p3;
wire   [7:0] p_Val2_132_s_403_fu_5496_p3;
wire   [0:0] tmp48_fu_5511_p2;
wire   [0:0] underflow_not_11_fu_5515_p2;
wire   [7:0] p_Val2_132_mux_10_fu_5520_p3;
wire   [7:0] p_Val2_132_10_405_fu_5526_p3;
wire   [13:0] tmp_182_fu_5541_p3;
wire  signed [16:0] tmp_183_fu_5553_p1;
wire  signed [16:0] tmp_281_cast_fu_5549_p1;
wire   [7:0] tmp_184_fu_5580_p1;
wire   [7:0] p_Val2_35_fu_5570_p4;
wire   [0:0] tmp_1645_fu_5583_p3;
wire   [0:0] tmp_185_fu_5605_p2;
wire   [1:0] p_Result_27_fu_5617_p4;
wire   [2:0] p_Result_28_fu_5633_p4;
wire   [13:0] tmp_434_1_fu_5655_p3;
wire  signed [16:0] tmp_435_1_fu_5667_p1;
wire  signed [16:0] tmp_434_1_cast_fu_5663_p1;
wire   [7:0] tmp_438_1_fu_5694_p1;
wire   [7:0] p_Val2_136_1_fu_5684_p4;
wire   [0:0] tmp_1655_fu_5697_p3;
wire   [0:0] tmp_442_1_fu_5719_p2;
wire   [1:0] p_Result_248_1_fu_5731_p4;
wire   [2:0] p_Result_249_1_fu_5747_p4;
wire   [13:0] tmp_434_2_fu_5769_p3;
wire  signed [16:0] tmp_435_2_fu_5781_p1;
wire  signed [16:0] tmp_434_2_cast_fu_5777_p1;
wire   [7:0] tmp_438_2_fu_5808_p1;
wire   [7:0] p_Val2_136_2_fu_5798_p4;
wire   [0:0] tmp_1665_fu_5811_p3;
wire   [0:0] tmp_442_2_fu_5833_p2;
wire   [1:0] p_Result_248_2_fu_5845_p4;
wire   [2:0] p_Result_249_2_fu_5861_p4;
wire   [13:0] tmp_434_3_fu_5883_p3;
wire  signed [16:0] tmp_435_3_fu_5895_p1;
wire  signed [16:0] tmp_434_3_cast_fu_5891_p1;
wire   [7:0] tmp_438_3_fu_5922_p1;
wire   [7:0] p_Val2_136_3_fu_5912_p4;
wire   [0:0] tmp_1675_fu_5925_p3;
wire   [0:0] tmp_442_3_fu_5947_p2;
wire   [1:0] p_Result_248_3_fu_5959_p4;
wire   [2:0] p_Result_249_3_fu_5975_p4;
wire   [13:0] tmp_434_4_fu_5997_p3;
wire  signed [16:0] tmp_435_4_fu_6009_p1;
wire  signed [16:0] tmp_434_4_cast_fu_6005_p1;
wire   [7:0] tmp_438_4_fu_6036_p1;
wire   [7:0] p_Val2_136_4_fu_6026_p4;
wire   [0:0] tmp_1685_fu_6039_p3;
wire   [0:0] tmp_442_4_fu_6061_p2;
wire   [1:0] p_Result_248_4_fu_6073_p4;
wire   [2:0] p_Result_249_4_fu_6089_p4;
wire   [13:0] tmp_434_5_fu_6111_p3;
wire  signed [16:0] tmp_435_5_fu_6123_p1;
wire  signed [16:0] tmp_434_5_cast_fu_6119_p1;
wire   [7:0] tmp_438_5_fu_6150_p1;
wire   [7:0] p_Val2_136_5_fu_6140_p4;
wire   [0:0] tmp_1695_fu_6153_p3;
wire   [0:0] tmp_442_5_fu_6175_p2;
wire   [1:0] p_Result_248_5_fu_6187_p4;
wire   [2:0] p_Result_249_5_fu_6203_p4;
wire   [13:0] tmp_434_6_fu_6225_p3;
wire  signed [16:0] tmp_435_6_fu_6237_p1;
wire  signed [16:0] tmp_434_6_cast_fu_6233_p1;
wire   [7:0] tmp_438_6_fu_6264_p1;
wire   [7:0] p_Val2_136_6_fu_6254_p4;
wire   [0:0] tmp_1705_fu_6267_p3;
wire   [0:0] tmp_442_6_fu_6289_p2;
wire   [1:0] p_Result_248_6_fu_6301_p4;
wire   [2:0] p_Result_249_6_fu_6317_p4;
wire   [13:0] tmp_434_7_fu_6339_p3;
wire  signed [16:0] tmp_435_7_fu_6351_p1;
wire  signed [16:0] tmp_434_7_cast_fu_6347_p1;
wire   [7:0] tmp_438_7_fu_6378_p1;
wire   [7:0] p_Val2_136_7_fu_6368_p4;
wire   [0:0] tmp_1715_fu_6381_p3;
wire   [0:0] tmp_442_7_fu_6403_p2;
wire   [1:0] p_Result_248_7_fu_6415_p4;
wire   [2:0] p_Result_249_7_fu_6431_p4;
wire   [13:0] tmp_434_8_fu_6453_p3;
wire  signed [16:0] tmp_435_8_fu_6465_p1;
wire  signed [16:0] tmp_434_8_cast_fu_6461_p1;
wire   [7:0] tmp_438_8_fu_6492_p1;
wire   [7:0] p_Val2_136_8_fu_6482_p4;
wire   [0:0] tmp_1725_fu_6495_p3;
wire   [0:0] tmp_442_8_fu_6517_p2;
wire   [1:0] p_Result_248_8_fu_6529_p4;
wire   [2:0] p_Result_249_8_fu_6545_p4;
wire   [13:0] tmp_434_9_fu_6567_p3;
wire  signed [16:0] tmp_435_9_fu_6579_p1;
wire  signed [16:0] tmp_434_9_cast_fu_6575_p1;
wire   [7:0] tmp_438_9_fu_6606_p1;
wire   [7:0] p_Val2_136_9_fu_6596_p4;
wire   [0:0] tmp_1735_fu_6609_p3;
wire   [0:0] tmp_442_9_fu_6631_p2;
wire   [1:0] p_Result_248_9_fu_6643_p4;
wire   [2:0] p_Result_249_9_fu_6659_p4;
wire   [13:0] tmp_434_s_fu_6681_p3;
wire  signed [16:0] tmp_435_s_fu_6693_p1;
wire  signed [16:0] tmp_434_cast_fu_6689_p1;
wire   [7:0] tmp_438_s_fu_6720_p1;
wire   [7:0] p_Val2_136_s_fu_6710_p4;
wire   [0:0] tmp_1745_fu_6723_p3;
wire   [0:0] tmp_442_s_fu_6745_p2;
wire   [1:0] p_Result_248_s_fu_6757_p4;
wire   [2:0] p_Result_249_s_fu_6773_p4;
wire   [13:0] tmp_434_10_fu_6795_p3;
wire  signed [16:0] tmp_435_10_fu_6807_p1;
wire  signed [16:0] tmp_434_10_cast_fu_6803_p1;
wire   [7:0] tmp_438_10_fu_6834_p1;
wire   [7:0] p_Val2_136_10_fu_6824_p4;
wire   [0:0] tmp_1755_fu_6837_p3;
wire   [0:0] tmp_442_10_fu_6859_p2;
wire   [1:0] p_Result_248_10_fu_6871_p4;
wire   [2:0] p_Result_249_10_fu_6887_p4;
wire   [0:0] tmp_1647_fu_6909_p3;
wire   [0:0] tmp_186_fu_6921_p2;
wire   [0:0] p_41_i_i1_fu_6927_p2;
wire   [0:0] deleted_zeros_10_fu_6916_p3;
wire   [0:0] p_not_i_i1_fu_6942_p2;
wire   [0:0] brmerge_i_i8_fu_6948_p2;
wire   [0:0] deleted_ones_10_fu_6932_p3;
wire   [0:0] tmp5_demorgan_fu_6969_p2;
wire   [0:0] tmp5_fu_6975_p2;
wire   [0:0] overflow_19_fu_6958_p2;
wire   [0:0] tmp_1657_fu_6992_p3;
wire   [0:0] tmp_445_1_fu_7004_p2;
wire   [0:0] p_41_i_i1_1_fu_7010_p2;
wire   [0:0] deleted_zeros_10_1_fu_6999_p3;
wire   [0:0] p_not_i_i1_1_fu_7025_p2;
wire   [0:0] brmerge_i_i8_1_fu_7031_p2;
wire   [0:0] deleted_ones_10_1_fu_7015_p3;
wire   [0:0] tmp9_demorgan_fu_7052_p2;
wire   [0:0] tmp9_fu_7058_p2;
wire   [0:0] overflow_19_1_fu_7041_p2;
wire   [0:0] tmp_1667_fu_7075_p3;
wire   [0:0] tmp_445_2_fu_7087_p2;
wire   [0:0] p_41_i_i1_2_fu_7093_p2;
wire   [0:0] deleted_zeros_10_2_fu_7082_p3;
wire   [0:0] p_not_i_i1_2_fu_7108_p2;
wire   [0:0] brmerge_i_i8_2_fu_7114_p2;
wire   [0:0] deleted_ones_10_2_fu_7098_p3;
wire   [0:0] tmp13_demorgan_fu_7135_p2;
wire   [0:0] tmp13_fu_7141_p2;
wire   [0:0] overflow_19_2_fu_7124_p2;
wire   [0:0] tmp_1677_fu_7158_p3;
wire   [0:0] tmp_445_3_fu_7170_p2;
wire   [0:0] p_41_i_i1_3_fu_7176_p2;
wire   [0:0] deleted_zeros_10_3_fu_7165_p3;
wire   [0:0] p_not_i_i1_3_fu_7191_p2;
wire   [0:0] brmerge_i_i8_3_fu_7197_p2;
wire   [0:0] deleted_ones_10_3_fu_7181_p3;
wire   [0:0] tmp17_demorgan_fu_7218_p2;
wire   [0:0] tmp17_fu_7224_p2;
wire   [0:0] overflow_19_3_fu_7207_p2;
wire   [0:0] tmp_1687_fu_7241_p3;
wire   [0:0] tmp_445_4_fu_7253_p2;
wire   [0:0] p_41_i_i1_4_fu_7259_p2;
wire   [0:0] deleted_zeros_10_4_fu_7248_p3;
wire   [0:0] p_not_i_i1_4_fu_7274_p2;
wire   [0:0] brmerge_i_i8_4_fu_7280_p2;
wire   [0:0] deleted_ones_10_4_fu_7264_p3;
wire   [0:0] tmp21_demorgan_fu_7301_p2;
wire   [0:0] tmp21_fu_7307_p2;
wire   [0:0] overflow_19_4_fu_7290_p2;
wire   [0:0] tmp_1697_fu_7324_p3;
wire   [0:0] tmp_445_5_fu_7336_p2;
wire   [0:0] p_41_i_i1_5_fu_7342_p2;
wire   [0:0] deleted_zeros_10_5_fu_7331_p3;
wire   [0:0] p_not_i_i1_5_fu_7357_p2;
wire   [0:0] brmerge_i_i8_5_fu_7363_p2;
wire   [0:0] deleted_ones_10_5_fu_7347_p3;
wire   [0:0] tmp25_demorgan_fu_7384_p2;
wire   [0:0] tmp25_fu_7390_p2;
wire   [0:0] overflow_19_5_fu_7373_p2;
wire   [0:0] tmp_1707_fu_7407_p3;
wire   [0:0] tmp_445_6_fu_7419_p2;
wire   [0:0] p_41_i_i1_6_fu_7425_p2;
wire   [0:0] deleted_zeros_10_6_fu_7414_p3;
wire   [0:0] p_not_i_i1_6_fu_7440_p2;
wire   [0:0] brmerge_i_i8_6_fu_7446_p2;
wire   [0:0] deleted_ones_10_6_fu_7430_p3;
wire   [0:0] tmp29_demorgan_fu_7467_p2;
wire   [0:0] tmp29_fu_7473_p2;
wire   [0:0] overflow_19_6_fu_7456_p2;
wire   [0:0] tmp_1717_fu_7490_p3;
wire   [0:0] tmp_445_7_fu_7502_p2;
wire   [0:0] p_41_i_i1_7_fu_7508_p2;
wire   [0:0] deleted_zeros_10_7_fu_7497_p3;
wire   [0:0] p_not_i_i1_7_fu_7523_p2;
wire   [0:0] brmerge_i_i8_7_fu_7529_p2;
wire   [0:0] deleted_ones_10_7_fu_7513_p3;
wire   [0:0] tmp33_demorgan_fu_7550_p2;
wire   [0:0] tmp33_fu_7556_p2;
wire   [0:0] overflow_19_7_fu_7539_p2;
wire   [0:0] tmp_1727_fu_7573_p3;
wire   [0:0] tmp_445_8_fu_7585_p2;
wire   [0:0] p_41_i_i1_8_fu_7591_p2;
wire   [0:0] deleted_zeros_10_8_fu_7580_p3;
wire   [0:0] p_not_i_i1_8_fu_7606_p2;
wire   [0:0] brmerge_i_i8_8_fu_7612_p2;
wire   [0:0] deleted_ones_10_8_fu_7596_p3;
wire   [0:0] tmp37_demorgan_fu_7633_p2;
wire   [0:0] tmp37_fu_7639_p2;
wire   [0:0] overflow_19_8_fu_7622_p2;
wire   [0:0] tmp_1737_fu_7656_p3;
wire   [0:0] tmp_445_9_fu_7668_p2;
wire   [0:0] p_41_i_i1_9_fu_7674_p2;
wire   [0:0] deleted_zeros_10_9_fu_7663_p3;
wire   [0:0] p_not_i_i1_9_fu_7689_p2;
wire   [0:0] brmerge_i_i8_9_fu_7695_p2;
wire   [0:0] deleted_ones_10_9_fu_7679_p3;
wire   [0:0] tmp41_demorgan_fu_7716_p2;
wire   [0:0] tmp41_fu_7722_p2;
wire   [0:0] overflow_19_9_fu_7705_p2;
wire   [0:0] tmp_1747_fu_7739_p3;
wire   [0:0] tmp_445_s_fu_7751_p2;
wire   [0:0] p_41_i_i1_10_fu_7757_p2;
wire   [0:0] deleted_zeros_10_s_fu_7746_p3;
wire   [0:0] p_not_i_i1_10_fu_7772_p2;
wire   [0:0] brmerge_i_i8_10_fu_7778_p2;
wire   [0:0] deleted_ones_10_s_fu_7762_p3;
wire   [0:0] tmp45_demorgan_fu_7799_p2;
wire   [0:0] tmp45_fu_7805_p2;
wire   [0:0] overflow_19_s_fu_7788_p2;
wire   [0:0] tmp_1757_fu_7822_p3;
wire   [0:0] tmp_445_10_fu_7834_p2;
wire   [0:0] p_41_i_i1_s_fu_7840_p2;
wire   [0:0] deleted_zeros_10_10_fu_7829_p3;
wire   [0:0] p_not_i_i1_s_fu_7855_p2;
wire   [0:0] brmerge_i_i8_11_fu_7861_p2;
wire   [0:0] deleted_ones_10_10_fu_7845_p3;
wire   [0:0] tmp49_demorgan_fu_7882_p2;
wire   [0:0] tmp49_fu_7888_p2;
wire   [0:0] overflow_19_10_fu_7871_p2;
wire   [0:0] tmp6_fu_7905_p2;
wire   [0:0] underflow_19_not_fu_7909_p2;
wire   [7:0] p_Val2_137_mux_fu_7914_p3;
wire   [7:0] p_Val2_1_fu_7920_p3;
wire   [0:0] tmp10_fu_7935_p2;
wire   [0:0] underflow_19_not_1_fu_7939_p2;
wire   [7:0] p_Val2_137_mux_1_fu_7944_p3;
wire   [7:0] p_Val2_137_1_386_fu_7950_p3;
wire   [0:0] tmp14_fu_7965_p2;
wire   [0:0] underflow_19_not_2_fu_7969_p2;
wire   [7:0] p_Val2_137_mux_2_fu_7974_p3;
wire   [7:0] p_Val2_137_2_388_fu_7980_p3;
wire   [0:0] tmp18_fu_7995_p2;
wire   [0:0] underflow_19_not_3_fu_7999_p2;
wire   [7:0] p_Val2_137_mux_3_fu_8004_p3;
wire   [7:0] p_Val2_137_3_390_fu_8010_p3;
wire   [0:0] tmp22_fu_8025_p2;
wire   [0:0] underflow_19_not_4_fu_8029_p2;
wire   [7:0] p_Val2_137_mux_4_fu_8034_p3;
wire   [7:0] p_Val2_137_4_392_fu_8040_p3;
wire   [0:0] tmp26_fu_8055_p2;
wire   [0:0] underflow_19_not_5_fu_8059_p2;
wire   [7:0] p_Val2_137_mux_5_fu_8064_p3;
wire   [7:0] p_Val2_137_5_394_fu_8070_p3;
wire   [0:0] tmp30_fu_8085_p2;
wire   [0:0] underflow_19_not_6_fu_8089_p2;
wire   [7:0] p_Val2_137_mux_6_fu_8094_p3;
wire   [7:0] p_Val2_137_6_396_fu_8100_p3;
wire   [0:0] tmp34_fu_8115_p2;
wire   [0:0] underflow_19_not_7_fu_8119_p2;
wire   [7:0] p_Val2_137_mux_7_fu_8124_p3;
wire   [7:0] p_Val2_137_7_398_fu_8130_p3;
wire   [0:0] tmp38_fu_8145_p2;
wire   [0:0] underflow_19_not_8_fu_8149_p2;
wire   [7:0] p_Val2_137_mux_8_fu_8154_p3;
wire   [7:0] p_Val2_137_8_400_fu_8160_p3;
wire   [0:0] tmp42_fu_8175_p2;
wire   [0:0] underflow_19_not_9_fu_8179_p2;
wire   [7:0] p_Val2_137_mux_9_fu_8184_p3;
wire   [7:0] p_Val2_137_9_402_fu_8190_p3;
wire   [0:0] tmp46_fu_8205_p2;
wire   [0:0] underflow_19_not_s_fu_8209_p2;
wire   [7:0] p_Val2_137_mux_s_fu_8214_p3;
wire   [7:0] p_Val2_137_s_404_fu_8220_p3;
wire   [0:0] tmp50_fu_8235_p2;
wire   [0:0] underflow_19_not_10_fu_8239_p2;
wire   [7:0] p_Val2_137_mux_10_fu_8244_p3;
wire   [7:0] p_Val2_137_10_406_fu_8250_p3;
wire   [0:0] exitcond_flatten22_fu_8283_p2;
wire   [4:0] i_6_fu_8277_p2;
wire   [4:0] grp_fu_8305_p0;
wire   [0:0] exitcond30_fu_8317_p2;
wire   [0:0] not_exitcond_flatten_2_fu_8311_p2;
wire   [0:0] tmp_638_fu_8329_p2;
wire   [11:0] indvar_flatten66_op_fu_8343_p2;
wire   [4:0] mul6_fu_8360_p1;
wire   [11:0] mul6_fu_8360_p2;
wire   [5:0] j_6_fu_8376_p2;
wire   [7:0] tmp_1631_fu_8392_p3;
wire  signed [9:0] tmp_635_fu_8399_p1;
wire   [3:0] tmp_1632_fu_8407_p3;
wire  signed [5:0] tmp_636_fu_8414_p1;
wire   [10:0] p_shl25_cast_fu_8418_p1;
wire   [10:0] p_shl24_cast_fu_8403_p1;
wire   [10:0] tmp_637_fu_8422_p2;
wire   [10:0] j_2_cast_mid2_cast_fu_8428_p1;
wire   [10:0] tmp_639_fu_8431_p2;
wire   [7:0] tmp_1633_fu_8437_p1;
wire   [11:0] tmp_1634_fu_8449_p3;
wire   [12:0] p_shl23_cast_fu_8457_p1;
wire   [12:0] p_shl22_cast_fu_8441_p3;
wire   [12:0] tmp_640_fu_8461_p2;
wire   [12:0] k_2_cast_cast_fu_8467_p1;
wire   [31:0] tmp_fu_8495_p13;
wire   [7:0] tmp_fu_8495_p14;
reg    grp_fu_1649_ce;
wire    ap_CS_fsm_state53;
reg   [25:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [11:0] mul5_fu_2024_p10;
wire   [11:0] mul6_fu_8360_p10;
wire   [11:0] mul_fu_1567_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_V_ARREADY = 1'b0;
end

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_0_V_address0),
    .ce0(weight_temp_0_V_ce0),
    .we0(weight_temp_0_V_we0),
    .d0(weight_temp_0_V_d0),
    .q0(weight_temp_0_V_q0),
    .address1(weight_temp_0_V_address1),
    .ce1(weight_temp_0_V_ce1),
    .q1(weight_temp_0_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_1_V_address0),
    .ce0(weight_temp_1_V_ce0),
    .we0(weight_temp_1_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_1_V_q0),
    .address1(weight_temp_1_V_address1),
    .ce1(weight_temp_1_V_ce1),
    .q1(weight_temp_1_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_2_V_address0),
    .ce0(weight_temp_2_V_ce0),
    .we0(weight_temp_2_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_2_V_q0),
    .address1(weight_temp_2_V_address1),
    .ce1(weight_temp_2_V_ce1),
    .q1(weight_temp_2_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_3_V_address0),
    .ce0(weight_temp_3_V_ce0),
    .we0(weight_temp_3_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_3_V_q0),
    .address1(weight_temp_3_V_address1),
    .ce1(weight_temp_3_V_ce1),
    .q1(weight_temp_3_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_4_V_address0),
    .ce0(weight_temp_4_V_ce0),
    .we0(weight_temp_4_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_4_V_q0),
    .address1(weight_temp_4_V_address1),
    .ce1(weight_temp_4_V_ce1),
    .q1(weight_temp_4_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_5_V_address0),
    .ce0(weight_temp_5_V_ce0),
    .we0(weight_temp_5_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_5_V_q0),
    .address1(weight_temp_5_V_address1),
    .ce1(weight_temp_5_V_ce1),
    .q1(weight_temp_5_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_6_V_address0),
    .ce0(weight_temp_6_V_ce0),
    .we0(weight_temp_6_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_6_V_q0),
    .address1(weight_temp_6_V_address1),
    .ce1(weight_temp_6_V_ce1),
    .q1(weight_temp_6_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_7_V_address0),
    .ce0(weight_temp_7_V_ce0),
    .we0(weight_temp_7_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_7_V_q0),
    .address1(weight_temp_7_V_address1),
    .ce1(weight_temp_7_V_ce1),
    .q1(weight_temp_7_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_8_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_8_V_address0),
    .ce0(weight_temp_8_V_ce0),
    .we0(weight_temp_8_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_8_V_q0),
    .address1(weight_temp_8_V_address1),
    .ce1(weight_temp_8_V_ce1),
    .q1(weight_temp_8_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_9_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_9_V_address0),
    .ce0(weight_temp_9_V_ce0),
    .we0(weight_temp_9_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_9_V_q0),
    .address1(weight_temp_9_V_address1),
    .ce1(weight_temp_9_V_ce1),
    .q1(weight_temp_9_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_10_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_10_V_address0),
    .ce0(weight_temp_10_V_ce0),
    .we0(weight_temp_10_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_10_V_q0),
    .address1(weight_temp_10_V_address1),
    .ce1(weight_temp_10_V_ce1),
    .q1(weight_temp_10_V_q1)
);

conv1_p_weight_tecud #(
    .DataWidth( 8 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
weight_temp_11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_temp_11_V_address0),
    .ce0(weight_temp_11_V_ce0),
    .we0(weight_temp_11_V_we0),
    .d0(weight_V_addr_read_reg_8660),
    .q0(weight_temp_11_V_q0),
    .address1(weight_temp_11_V_address1),
    .ce1(weight_temp_11_V_ce1),
    .q1(weight_temp_11_V_q1)
);

MUL_DP grp_MUL_DP_fu_1343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_0_V_q0),
    .b_V(weight_temp_0_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1343_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1343_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1343_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_1_V_q0),
    .b_V(weight_temp_1_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1353_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1353_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1353_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1363(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_2_V_q0),
    .b_V(weight_temp_2_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1363_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1363_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1363_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_3_V_q0),
    .b_V(weight_temp_3_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1373_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1373_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1373_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1383(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_4_V_q0),
    .b_V(weight_temp_4_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1383_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1383_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1383_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1393(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_5_V_q0),
    .b_V(weight_temp_5_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1393_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1393_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1393_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1403(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_6_V_q0),
    .b_V(weight_temp_6_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1403_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1403_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1403_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1413(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_7_V_q0),
    .b_V(weight_temp_7_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1413_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1413_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1413_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1423(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_8_V_q0),
    .b_V(weight_temp_8_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1423_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1423_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1423_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1433(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_9_V_q0),
    .b_V(weight_temp_9_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1433_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1433_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1433_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1443(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_10_V_q0),
    .b_V(weight_temp_10_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1443_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1443_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1443_ap_ce)
);

MUL_DP grp_MUL_DP_fu_1453(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(weight_temp_11_V_q0),
    .b_V(weight_temp_11_V_q1),
    .w_V(input_V_q0),
    .ap_return_0(grp_MUL_DP_fu_1453_ap_return_0),
    .ap_return_1(grp_MUL_DP_fu_1453_ap_return_1),
    .ap_ce(grp_MUL_DP_fu_1453_ap_ce)
);

ShuffleNetV2_uremocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
ShuffleNetV2_uremocq_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_reg_pp0_iter1_i_cast_mid2_v_reg_8556),
    .din1(5'd12),
    .ce(grp_fu_1649_ce),
    .dout(grp_fu_1649_p2)
);

ShuffleNetV2_uremocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
ShuffleNetV2_uremocq_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1945_p0),
    .din1(5'd12),
    .ce(1'b1),
    .dout(grp_fu_1945_p2)
);

ShuffleNetV2_uremocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
ShuffleNetV2_uremocq_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_8305_p0),
    .din1(5'd12),
    .ce(1'b1),
    .dout(grp_fu_8305_p2)
);

ShuffleNetV2_mux_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ShuffleNetV2_mux_pcA_U7(
    .din1(conv1_output_p_V_0_q0),
    .din2(conv1_output_p_V_1_q0),
    .din3(conv1_output_p_V_2_q0),
    .din4(conv1_output_p_V_3_q0),
    .din5(conv1_output_p_V_4_q0),
    .din6(conv1_output_p_V_5_q0),
    .din7(conv1_output_p_V_6_q0),
    .din8(conv1_output_p_V_7_q0),
    .din9(conv1_output_p_V_8_q0),
    .din10(conv1_output_p_V_9_q0),
    .din11(conv1_output_p_V_10_q0),
    .din12(conv1_output_p_V_11_q0),
    .din13(tmp_fu_8495_p13),
    .dout(tmp_fu_8495_p14)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state16))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state16)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state16 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp1_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state44))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state44)) begin
                ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state44 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_8538))) begin
            if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b0;
            end else if (((1'b1 == m_axi_weight_V_ARREADY) & (ap_block_pp0_stage0_flag00001001 == 1'b0))) begin
                ap_reg_ioackin_m_axi_weight_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ci_reg_1277 <= ci_10_reg_8950;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond32_fu_2293_p2))) begin
        ci_reg_1277 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        h_reg_1231 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (exitcond29_fu_2231_p2 == 1'd1))) begin
        h_reg_1231 <= h_30_fu_2237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_1_reg_1185 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten19_reg_8676) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_1_reg_1185 <= i_1_cast_mid2_v_reg_8692;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
        i_2_reg_1299 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_2_reg_1299 <= arrayNo7_mid2_v_reg_11058;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_1104 <= i_cast_mid2_v_reg_8556;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_1104 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_1511_p2))) begin
        indvar_flatten13_reg_1115 <= indvar_flatten_next1_fu_1549_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten13_reg_1115 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_1511_p2))) begin
        indvar_flatten14_reg_1093 <= indvar_flatten_next2_fu_1517_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten14_reg_1093 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten15_reg_1174 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten19_fu_1913_p2))) begin
        indvar_flatten15_reg_1174 <= indvar_flatten_next2_2_fu_1919_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten16_reg_1196 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten19_fu_1913_p2))) begin
        indvar_flatten16_reg_1196 <= indvar_flatten_next2_1_fu_1957_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
        indvar_flatten17_reg_1288 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        indvar_flatten17_reg_1288 <= indvar_flatten_next2_4_reg_11047;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
        indvar_flatten18_reg_1310 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        indvar_flatten18_reg_1310 <= indvar_flatten_next2_3_reg_11076;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        indvar_flatten_reg_1138 <= indvar_flatten_next_fu_1841_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_1138 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_1_reg_1207 <= 6'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten19_reg_8676))) begin
        j_1_reg_1207 <= j_1_cast_mid2_reg_8711;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
        j_2_reg_1321 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        j_2_reg_1321 <= j_2_cast_mid2_reg_11087;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        j_reg_1126 <= j_cast_mid2_reg_8597;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_1126 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_1_reg_1219 <= 6'd1;
    end else if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten19_reg_8676))) begin
        k_1_reg_1219 <= k_4_fu_2016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
        k_2_reg_1332 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        k_2_reg_1332 <= k_6_reg_11093;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        k_reg_1150 <= k_cast_mid2_reg_8614;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_1150 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'd0 == exitcond29_fu_2231_p2))) begin
        m_reg_1255 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond32_fu_2293_p2))) begin
        m_reg_1255 <= m_7_reg_8896;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (1'd1 == exitcond33_reg_8946))) begin
        n_reg_1266 <= n_7_reg_8920;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond31_fu_2251_p2))) begin
        n_reg_1266 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        p_reg_1162 <= p_1_reg_8635;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_reg_1162 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd0 == exitcond28_fu_2179_p2))) begin
        w_reg_1243 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond31_fu_2251_p2))) begin
        w_reg_1243 <= w_36_fu_2283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        Range1_all_ones_10_10_reg_10731 <= Range1_all_ones_10_10_fu_6897_p2;
        Range1_all_ones_10_1_reg_10261 <= Range1_all_ones_10_1_fu_5757_p2;
        Range1_all_ones_10_2_reg_10308 <= Range1_all_ones_10_2_fu_5871_p2;
        Range1_all_ones_10_3_reg_10355 <= Range1_all_ones_10_3_fu_5985_p2;
        Range1_all_ones_10_4_reg_10402 <= Range1_all_ones_10_4_fu_6099_p2;
        Range1_all_ones_10_5_reg_10449 <= Range1_all_ones_10_5_fu_6213_p2;
        Range1_all_ones_10_6_reg_10496 <= Range1_all_ones_10_6_fu_6327_p2;
        Range1_all_ones_10_7_reg_10543 <= Range1_all_ones_10_7_fu_6441_p2;
        Range1_all_ones_10_8_reg_10590 <= Range1_all_ones_10_8_fu_6555_p2;
        Range1_all_ones_10_9_reg_10637 <= Range1_all_ones_10_9_fu_6669_p2;
        Range1_all_ones_10_reg_10214 <= Range1_all_ones_10_fu_5643_p2;
        Range1_all_ones_10_s_reg_10684 <= Range1_all_ones_10_s_fu_6783_p2;
        Range1_all_zeros_10_10_reg_10738 <= Range1_all_zeros_10_10_fu_6903_p2;
        Range1_all_zeros_10_1_reg_10268 <= Range1_all_zeros_10_1_fu_5763_p2;
        Range1_all_zeros_10_2_reg_10315 <= Range1_all_zeros_10_2_fu_5877_p2;
        Range1_all_zeros_10_3_reg_10362 <= Range1_all_zeros_10_3_fu_5991_p2;
        Range1_all_zeros_10_4_reg_10409 <= Range1_all_zeros_10_4_fu_6105_p2;
        Range1_all_zeros_10_5_reg_10456 <= Range1_all_zeros_10_5_fu_6219_p2;
        Range1_all_zeros_10_6_reg_10503 <= Range1_all_zeros_10_6_fu_6333_p2;
        Range1_all_zeros_10_7_reg_10550 <= Range1_all_zeros_10_7_fu_6447_p2;
        Range1_all_zeros_10_8_reg_10597 <= Range1_all_zeros_10_8_fu_6561_p2;
        Range1_all_zeros_10_9_reg_10644 <= Range1_all_zeros_10_9_fu_6675_p2;
        Range1_all_zeros_10_reg_10221 <= Range1_all_zeros_10_fu_5649_p2;
        Range1_all_zeros_10_s_reg_10691 <= Range1_all_zeros_10_s_fu_6789_p2;
        Range2_all_ones_10_10_reg_10726 <= Range2_all_ones_10_10_fu_6881_p2;
        Range2_all_ones_10_1_reg_10256 <= Range2_all_ones_10_1_fu_5741_p2;
        Range2_all_ones_10_2_reg_10303 <= Range2_all_ones_10_2_fu_5855_p2;
        Range2_all_ones_10_3_reg_10350 <= Range2_all_ones_10_3_fu_5969_p2;
        Range2_all_ones_10_4_reg_10397 <= Range2_all_ones_10_4_fu_6083_p2;
        Range2_all_ones_10_5_reg_10444 <= Range2_all_ones_10_5_fu_6197_p2;
        Range2_all_ones_10_6_reg_10491 <= Range2_all_ones_10_6_fu_6311_p2;
        Range2_all_ones_10_7_reg_10538 <= Range2_all_ones_10_7_fu_6425_p2;
        Range2_all_ones_10_8_reg_10585 <= Range2_all_ones_10_8_fu_6539_p2;
        Range2_all_ones_10_9_reg_10632 <= Range2_all_ones_10_9_fu_6653_p2;
        Range2_all_ones_10_reg_10209 <= Range2_all_ones_10_fu_5627_p2;
        Range2_all_ones_10_s_reg_10679 <= Range2_all_ones_10_s_fu_6767_p2;
        carry_35_10_reg_10719 <= carry_35_10_fu_6865_p2;
        carry_35_1_reg_10249 <= carry_35_1_fu_5725_p2;
        carry_35_2_reg_10296 <= carry_35_2_fu_5839_p2;
        carry_35_3_reg_10343 <= carry_35_3_fu_5953_p2;
        carry_35_4_reg_10390 <= carry_35_4_fu_6067_p2;
        carry_35_5_reg_10437 <= carry_35_5_fu_6181_p2;
        carry_35_6_reg_10484 <= carry_35_6_fu_6295_p2;
        carry_35_7_reg_10531 <= carry_35_7_fu_6409_p2;
        carry_35_8_reg_10578 <= carry_35_8_fu_6523_p2;
        carry_35_9_reg_10625 <= carry_35_9_fu_6637_p2;
        carry_35_s_reg_10672 <= carry_35_s_fu_6751_p2;
        carry_9_reg_10202 <= carry_9_fu_5611_p2;
        p_Val2_135_10_reg_10696 <= p_Val2_135_10_fu_6810_p2;
        p_Val2_135_1_reg_10226 <= p_Val2_135_1_fu_5670_p2;
        p_Val2_135_2_reg_10273 <= p_Val2_135_2_fu_5784_p2;
        p_Val2_135_3_reg_10320 <= p_Val2_135_3_fu_5898_p2;
        p_Val2_135_4_reg_10367 <= p_Val2_135_4_fu_6012_p2;
        p_Val2_135_5_reg_10414 <= p_Val2_135_5_fu_6126_p2;
        p_Val2_135_6_reg_10461 <= p_Val2_135_6_fu_6240_p2;
        p_Val2_135_7_reg_10508 <= p_Val2_135_7_fu_6354_p2;
        p_Val2_135_8_reg_10555 <= p_Val2_135_8_fu_6468_p2;
        p_Val2_135_9_reg_10602 <= p_Val2_135_9_fu_6582_p2;
        p_Val2_135_s_reg_10649 <= p_Val2_135_s_fu_6696_p2;
        p_Val2_137_10_reg_10707 <= p_Val2_137_10_fu_6845_p2;
        p_Val2_137_1_reg_10237 <= p_Val2_137_1_fu_5705_p2;
        p_Val2_137_2_reg_10284 <= p_Val2_137_2_fu_5819_p2;
        p_Val2_137_3_reg_10331 <= p_Val2_137_3_fu_5933_p2;
        p_Val2_137_4_reg_10378 <= p_Val2_137_4_fu_6047_p2;
        p_Val2_137_5_reg_10425 <= p_Val2_137_5_fu_6161_p2;
        p_Val2_137_6_reg_10472 <= p_Val2_137_6_fu_6275_p2;
        p_Val2_137_7_reg_10519 <= p_Val2_137_7_fu_6389_p2;
        p_Val2_137_8_reg_10566 <= p_Val2_137_8_fu_6503_p2;
        p_Val2_137_9_reg_10613 <= p_Val2_137_9_fu_6617_p2;
        p_Val2_137_s_reg_10660 <= p_Val2_137_s_fu_6731_p2;
        p_Val2_34_reg_10179 <= p_Val2_34_fu_5556_p2;
        p_Val2_36_reg_10190 <= p_Val2_36_fu_5591_p2;
        tmp_1643_reg_10184 <= p_Val2_34_fu_5556_p2[32'd16];
        tmp_1646_reg_10196 <= p_Val2_36_fu_5591_p2[32'd7];
        tmp_1653_reg_10231 <= p_Val2_135_1_fu_5670_p2[32'd16];
        tmp_1656_reg_10243 <= p_Val2_137_1_fu_5705_p2[32'd7];
        tmp_1663_reg_10278 <= p_Val2_135_2_fu_5784_p2[32'd16];
        tmp_1666_reg_10290 <= p_Val2_137_2_fu_5819_p2[32'd7];
        tmp_1673_reg_10325 <= p_Val2_135_3_fu_5898_p2[32'd16];
        tmp_1676_reg_10337 <= p_Val2_137_3_fu_5933_p2[32'd7];
        tmp_1683_reg_10372 <= p_Val2_135_4_fu_6012_p2[32'd16];
        tmp_1686_reg_10384 <= p_Val2_137_4_fu_6047_p2[32'd7];
        tmp_1693_reg_10419 <= p_Val2_135_5_fu_6126_p2[32'd16];
        tmp_1696_reg_10431 <= p_Val2_137_5_fu_6161_p2[32'd7];
        tmp_1703_reg_10466 <= p_Val2_135_6_fu_6240_p2[32'd16];
        tmp_1706_reg_10478 <= p_Val2_137_6_fu_6275_p2[32'd7];
        tmp_1713_reg_10513 <= p_Val2_135_7_fu_6354_p2[32'd16];
        tmp_1716_reg_10525 <= p_Val2_137_7_fu_6389_p2[32'd7];
        tmp_1723_reg_10560 <= p_Val2_135_8_fu_6468_p2[32'd16];
        tmp_1726_reg_10572 <= p_Val2_137_8_fu_6503_p2[32'd7];
        tmp_1733_reg_10607 <= p_Val2_135_9_fu_6582_p2[32'd16];
        tmp_1736_reg_10619 <= p_Val2_137_9_fu_6617_p2[32'd7];
        tmp_1743_reg_10654 <= p_Val2_135_s_fu_6696_p2[32'd16];
        tmp_1746_reg_10666 <= p_Val2_137_s_fu_6731_p2[32'd7];
        tmp_1753_reg_10701 <= p_Val2_135_10_fu_6810_p2[32'd16];
        tmp_1756_reg_10713 <= p_Val2_137_10_fu_6845_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Range1_all_ones_11_reg_9867 <= Range1_all_ones_11_fu_4173_p2;
        Range1_all_ones_1_reg_9397 <= Range1_all_ones_1_fu_3033_p2;
        Range1_all_ones_2_reg_9444 <= Range1_all_ones_2_fu_3147_p2;
        Range1_all_ones_3_reg_9491 <= Range1_all_ones_3_fu_3261_p2;
        Range1_all_ones_4_reg_9538 <= Range1_all_ones_4_fu_3375_p2;
        Range1_all_ones_5_reg_9585 <= Range1_all_ones_5_fu_3489_p2;
        Range1_all_ones_6_reg_9632 <= Range1_all_ones_6_fu_3603_p2;
        Range1_all_ones_7_reg_9679 <= Range1_all_ones_7_fu_3717_p2;
        Range1_all_ones_8_reg_9726 <= Range1_all_ones_8_fu_3831_p2;
        Range1_all_ones_9_reg_9773 <= Range1_all_ones_9_fu_3945_p2;
        Range1_all_ones_reg_9350 <= Range1_all_ones_fu_2919_p2;
        Range1_all_ones_s_reg_9820 <= Range1_all_ones_s_fu_4059_p2;
        Range1_all_zeros_11_reg_9874 <= Range1_all_zeros_11_fu_4179_p2;
        Range1_all_zeros_1_reg_9404 <= Range1_all_zeros_1_fu_3039_p2;
        Range1_all_zeros_2_reg_9451 <= Range1_all_zeros_2_fu_3153_p2;
        Range1_all_zeros_3_reg_9498 <= Range1_all_zeros_3_fu_3267_p2;
        Range1_all_zeros_4_reg_9545 <= Range1_all_zeros_4_fu_3381_p2;
        Range1_all_zeros_5_reg_9592 <= Range1_all_zeros_5_fu_3495_p2;
        Range1_all_zeros_6_reg_9639 <= Range1_all_zeros_6_fu_3609_p2;
        Range1_all_zeros_7_reg_9686 <= Range1_all_zeros_7_fu_3723_p2;
        Range1_all_zeros_8_reg_9733 <= Range1_all_zeros_8_fu_3837_p2;
        Range1_all_zeros_9_reg_9780 <= Range1_all_zeros_9_fu_3951_p2;
        Range1_all_zeros_reg_9357 <= Range1_all_zeros_fu_2925_p2;
        Range1_all_zeros_s_reg_9827 <= Range1_all_zeros_s_fu_4065_p2;
        Range2_all_ones_11_reg_9862 <= Range2_all_ones_11_fu_4157_p2;
        Range2_all_ones_1_reg_9392 <= Range2_all_ones_1_fu_3017_p2;
        Range2_all_ones_2_reg_9439 <= Range2_all_ones_2_fu_3131_p2;
        Range2_all_ones_3_reg_9486 <= Range2_all_ones_3_fu_3245_p2;
        Range2_all_ones_4_reg_9533 <= Range2_all_ones_4_fu_3359_p2;
        Range2_all_ones_5_reg_9580 <= Range2_all_ones_5_fu_3473_p2;
        Range2_all_ones_6_reg_9627 <= Range2_all_ones_6_fu_3587_p2;
        Range2_all_ones_7_reg_9674 <= Range2_all_ones_7_fu_3701_p2;
        Range2_all_ones_8_reg_9721 <= Range2_all_ones_8_fu_3815_p2;
        Range2_all_ones_9_reg_9768 <= Range2_all_ones_9_fu_3929_p2;
        Range2_all_ones_reg_9345 <= Range2_all_ones_fu_2903_p2;
        Range2_all_ones_s_reg_9815 <= Range2_all_ones_s_fu_4043_p2;
        carry_33_10_reg_9855 <= carry_33_10_fu_4141_p2;
        carry_33_1_reg_9385 <= carry_33_1_fu_3001_p2;
        carry_33_2_reg_9432 <= carry_33_2_fu_3115_p2;
        carry_33_3_reg_9479 <= carry_33_3_fu_3229_p2;
        carry_33_4_reg_9526 <= carry_33_4_fu_3343_p2;
        carry_33_5_reg_9573 <= carry_33_5_fu_3457_p2;
        carry_33_6_reg_9620 <= carry_33_6_fu_3571_p2;
        carry_33_7_reg_9667 <= carry_33_7_fu_3685_p2;
        carry_33_8_reg_9714 <= carry_33_8_fu_3799_p2;
        carry_33_9_reg_9761 <= carry_33_9_fu_3913_p2;
        carry_33_s_reg_9808 <= carry_33_s_fu_4027_p2;
        carry_s_reg_9338 <= carry_s_fu_2887_p2;
        p_Val2_130_10_reg_9832 <= p_Val2_130_10_fu_4086_p2;
        p_Val2_130_1_reg_9362 <= p_Val2_130_1_fu_2946_p2;
        p_Val2_130_2_reg_9409 <= p_Val2_130_2_fu_3060_p2;
        p_Val2_130_3_reg_9456 <= p_Val2_130_3_fu_3174_p2;
        p_Val2_130_4_reg_9503 <= p_Val2_130_4_fu_3288_p2;
        p_Val2_130_5_reg_9550 <= p_Val2_130_5_fu_3402_p2;
        p_Val2_130_6_reg_9597 <= p_Val2_130_6_fu_3516_p2;
        p_Val2_130_7_reg_9644 <= p_Val2_130_7_fu_3630_p2;
        p_Val2_130_8_reg_9691 <= p_Val2_130_8_fu_3744_p2;
        p_Val2_130_9_reg_9738 <= p_Val2_130_9_fu_3858_p2;
        p_Val2_130_s_reg_9785 <= p_Val2_130_s_fu_3972_p2;
        p_Val2_132_10_reg_9843 <= p_Val2_132_10_fu_4121_p2;
        p_Val2_132_1_reg_9373 <= p_Val2_132_1_fu_2981_p2;
        p_Val2_132_2_reg_9420 <= p_Val2_132_2_fu_3095_p2;
        p_Val2_132_3_reg_9467 <= p_Val2_132_3_fu_3209_p2;
        p_Val2_132_4_reg_9514 <= p_Val2_132_4_fu_3323_p2;
        p_Val2_132_5_reg_9561 <= p_Val2_132_5_fu_3437_p2;
        p_Val2_132_6_reg_9608 <= p_Val2_132_6_fu_3551_p2;
        p_Val2_132_7_reg_9655 <= p_Val2_132_7_fu_3665_p2;
        p_Val2_132_8_reg_9702 <= p_Val2_132_8_fu_3779_p2;
        p_Val2_132_9_reg_9749 <= p_Val2_132_9_fu_3893_p2;
        p_Val2_132_s_reg_9796 <= p_Val2_132_s_fu_4007_p2;
        p_Val2_33_reg_9326 <= p_Val2_33_fu_2867_p2;
        p_Val2_s_reg_9315 <= p_Val2_s_fu_2832_p2;
        tmp_1638_reg_9320 <= p_Val2_s_fu_2832_p2[32'd16];
        tmp_1641_reg_9332 <= p_Val2_33_fu_2867_p2[32'd7];
        tmp_1648_reg_9367 <= p_Val2_130_1_fu_2946_p2[32'd16];
        tmp_1651_reg_9379 <= p_Val2_132_1_fu_2981_p2[32'd7];
        tmp_1658_reg_9414 <= p_Val2_130_2_fu_3060_p2[32'd16];
        tmp_1661_reg_9426 <= p_Val2_132_2_fu_3095_p2[32'd7];
        tmp_1668_reg_9461 <= p_Val2_130_3_fu_3174_p2[32'd16];
        tmp_1671_reg_9473 <= p_Val2_132_3_fu_3209_p2[32'd7];
        tmp_1678_reg_9508 <= p_Val2_130_4_fu_3288_p2[32'd16];
        tmp_1681_reg_9520 <= p_Val2_132_4_fu_3323_p2[32'd7];
        tmp_1688_reg_9555 <= p_Val2_130_5_fu_3402_p2[32'd16];
        tmp_1691_reg_9567 <= p_Val2_132_5_fu_3437_p2[32'd7];
        tmp_1698_reg_9602 <= p_Val2_130_6_fu_3516_p2[32'd16];
        tmp_1701_reg_9614 <= p_Val2_132_6_fu_3551_p2[32'd7];
        tmp_1708_reg_9649 <= p_Val2_130_7_fu_3630_p2[32'd16];
        tmp_1711_reg_9661 <= p_Val2_132_7_fu_3665_p2[32'd7];
        tmp_1718_reg_9696 <= p_Val2_130_8_fu_3744_p2[32'd16];
        tmp_1721_reg_9708 <= p_Val2_132_8_fu_3779_p2[32'd7];
        tmp_1728_reg_9743 <= p_Val2_130_9_fu_3858_p2[32'd16];
        tmp_1731_reg_9755 <= p_Val2_132_9_fu_3893_p2[32'd7];
        tmp_1738_reg_9790 <= p_Val2_130_s_fu_3972_p2[32'd16];
        tmp_1741_reg_9802 <= p_Val2_132_s_fu_4007_p2[32'd7];
        tmp_1748_reg_9837 <= p_Val2_130_10_fu_4086_p2[32'd16];
        tmp_1751_reg_9849 <= p_Val2_132_10_fu_4121_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter10_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter9_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter10_tmp_621_reg_8651 <= ap_reg_pp0_iter9_tmp_621_reg_8651;
        ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 <= arrayNo_mid2_reg_8656;
        ap_reg_pp0_iter11_tmp_621_reg_8651 <= ap_reg_pp0_iter10_tmp_621_reg_8651;
        ap_reg_pp0_iter2_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter1_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter3_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter2_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter4_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter3_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter4_tmp_621_reg_8651 <= tmp_621_reg_8651;
        ap_reg_pp0_iter5_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter4_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter5_tmp_621_reg_8651 <= ap_reg_pp0_iter4_tmp_621_reg_8651;
        ap_reg_pp0_iter6_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter5_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter6_tmp_621_reg_8651 <= ap_reg_pp0_iter5_tmp_621_reg_8651;
        ap_reg_pp0_iter7_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter6_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter7_tmp_621_reg_8651 <= ap_reg_pp0_iter6_tmp_621_reg_8651;
        ap_reg_pp0_iter8_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter7_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter8_tmp_621_reg_8651 <= ap_reg_pp0_iter7_tmp_621_reg_8651;
        ap_reg_pp0_iter9_exitcond_flatten_reg_8538 <= ap_reg_pp0_iter8_exitcond_flatten_reg_8538;
        ap_reg_pp0_iter9_tmp_621_reg_8651 <= ap_reg_pp0_iter8_tmp_621_reg_8651;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten17_reg_8547 <= exitcond_flatten17_reg_8547;
        ap_reg_pp0_iter1_exitcond_flatten_reg_8538 <= exitcond_flatten_reg_8538;
        ap_reg_pp0_iter1_i_cast_mid2_v_reg_8556 <= i_cast_mid2_v_reg_8556;
        exitcond_flatten_reg_8538 <= exitcond_flatten_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten19_reg_8676 <= exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter1_i_1_cast_mid2_v_reg_8692 <= i_1_cast_mid2_v_reg_8692;
        exitcond_flatten19_reg_8676 <= exitcond_flatten19_fu_1913_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp1_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp1_iter2_exitcond_flatten19_reg_8676 <= ap_reg_pp1_iter1_exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter2_i_1_cast_mid2_v_reg_8692 <= ap_reg_pp1_iter1_i_1_cast_mid2_v_reg_8692;
        ap_reg_pp1_iter2_j_1_cast_mid2_reg_8711 <= j_1_cast_mid2_reg_8711;
        ap_reg_pp1_iter2_k_1_mid2_reg_8705 <= k_1_mid2_reg_8705;
        ap_reg_pp1_iter3_exitcond_flatten19_reg_8676 <= ap_reg_pp1_iter2_exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter3_i_1_cast_mid2_v_reg_8692 <= ap_reg_pp1_iter2_i_1_cast_mid2_v_reg_8692;
        ap_reg_pp1_iter3_j_1_cast_mid2_reg_8711 <= ap_reg_pp1_iter2_j_1_cast_mid2_reg_8711;
        ap_reg_pp1_iter3_k_1_mid2_reg_8705 <= ap_reg_pp1_iter2_k_1_mid2_reg_8705;
        ap_reg_pp1_iter4_exitcond_flatten19_reg_8676 <= ap_reg_pp1_iter3_exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter4_i_1_cast_mid2_v_reg_8692 <= ap_reg_pp1_iter3_i_1_cast_mid2_v_reg_8692;
        ap_reg_pp1_iter4_j_1_cast_mid2_reg_8711 <= ap_reg_pp1_iter3_j_1_cast_mid2_reg_8711;
        ap_reg_pp1_iter4_k_1_mid2_reg_8705 <= ap_reg_pp1_iter3_k_1_mid2_reg_8705;
        ap_reg_pp1_iter5_exitcond_flatten19_reg_8676 <= ap_reg_pp1_iter4_exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter5_i_1_cast_mid2_v_reg_8692 <= ap_reg_pp1_iter4_i_1_cast_mid2_v_reg_8692;
        ap_reg_pp1_iter5_j_1_cast_mid2_reg_8711 <= ap_reg_pp1_iter4_j_1_cast_mid2_reg_8711;
        ap_reg_pp1_iter5_k_1_mid2_reg_8705 <= ap_reg_pp1_iter4_k_1_mid2_reg_8705;
        ap_reg_pp1_iter6_exitcond_flatten19_reg_8676 <= ap_reg_pp1_iter5_exitcond_flatten19_reg_8676;
        ap_reg_pp1_iter6_i_1_cast_mid2_v_reg_8692 <= ap_reg_pp1_iter5_i_1_cast_mid2_v_reg_8692;
        ap_reg_pp1_iter6_j_1_cast_mid2_reg_8711 <= ap_reg_pp1_iter5_j_1_cast_mid2_reg_8711;
        ap_reg_pp1_iter6_k_1_mid2_reg_8705 <= ap_reg_pp1_iter5_k_1_mid2_reg_8705;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp2_iter1_exitcond_flatten21_reg_11043 <= exitcond_flatten21_reg_11043;
        ap_reg_pp2_iter2_exitcond_flatten21_reg_11043 <= ap_reg_pp2_iter1_exitcond_flatten21_reg_11043;
        ap_reg_pp2_iter2_tmp_641_reg_11098 <= tmp_641_reg_11098;
        ap_reg_pp2_iter3_exitcond_flatten21_reg_11043 <= ap_reg_pp2_iter2_exitcond_flatten21_reg_11043;
        ap_reg_pp2_iter3_tmp_641_reg_11098 <= ap_reg_pp2_iter2_tmp_641_reg_11098;
        exitcond_flatten21_reg_11043 <= exitcond_flatten21_fu_8265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten21_fu_8265_p2))) begin
        arrayNo7_mid2_v_reg_11058 <= arrayNo7_mid2_v_fu_8297_p3;
        indvar_flatten_next2_3_reg_11076 <= indvar_flatten_next2_3_fu_8349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter9_exitcond_flatten_reg_8538))) begin
        arrayNo_mid2_reg_8656 <= grp_fu_1649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        brmerge40_demorgan_i_219_reg_9914 <= brmerge40_demorgan_i_219_fu_4323_p2;
        brmerge40_demorgan_i_221_reg_9939 <= brmerge40_demorgan_i_221_fu_4406_p2;
        brmerge40_demorgan_i_223_reg_9964 <= brmerge40_demorgan_i_223_fu_4489_p2;
        brmerge40_demorgan_i_225_reg_9989 <= brmerge40_demorgan_i_225_fu_4572_p2;
        brmerge40_demorgan_i_227_reg_10014 <= brmerge40_demorgan_i_227_fu_4655_p2;
        brmerge40_demorgan_i_229_reg_10039 <= brmerge40_demorgan_i_229_fu_4738_p2;
        brmerge40_demorgan_i_231_reg_10064 <= brmerge40_demorgan_i_231_fu_4821_p2;
        brmerge40_demorgan_i_233_reg_10089 <= brmerge40_demorgan_i_233_fu_4904_p2;
        brmerge40_demorgan_i_235_reg_10114 <= brmerge40_demorgan_i_235_fu_4987_p2;
        brmerge40_demorgan_i_237_reg_10139 <= brmerge40_demorgan_i_237_fu_5070_p2;
        brmerge40_demorgan_i_239_reg_10164 <= brmerge40_demorgan_i_239_fu_5153_p2;
        brmerge40_demorgan_i_reg_9889 <= brmerge40_demorgan_i_fu_4240_p2;
        brmerge_i_i_i_10_reg_10149 <= brmerge_i_i_i_10_fu_5092_p2;
        brmerge_i_i_i_11_reg_10174 <= brmerge_i_i_i_11_fu_5175_p2;
        brmerge_i_i_i_1_reg_9924 <= brmerge_i_i_i_1_fu_4345_p2;
        brmerge_i_i_i_2_reg_9949 <= brmerge_i_i_i_2_fu_4428_p2;
        brmerge_i_i_i_3_reg_9974 <= brmerge_i_i_i_3_fu_4511_p2;
        brmerge_i_i_i_4_reg_9999 <= brmerge_i_i_i_4_fu_4594_p2;
        brmerge_i_i_i_5_reg_10024 <= brmerge_i_i_i_5_fu_4677_p2;
        brmerge_i_i_i_6_reg_10049 <= brmerge_i_i_i_6_fu_4760_p2;
        brmerge_i_i_i_7_reg_10074 <= brmerge_i_i_i_7_fu_4843_p2;
        brmerge_i_i_i_8_reg_10099 <= brmerge_i_i_i_8_fu_4926_p2;
        brmerge_i_i_i_9_reg_10124 <= brmerge_i_i_i_9_fu_5009_p2;
        brmerge_i_i_i_reg_9899 <= brmerge_i_i_i_fu_4262_p2;
        p_38_i_i_10_reg_10129 <= p_38_i_i_10_fu_5044_p2;
        p_38_i_i_11_reg_10154 <= p_38_i_i_11_fu_5127_p2;
        p_38_i_i_1_reg_9904 <= p_38_i_i_1_fu_4297_p2;
        p_38_i_i_2_reg_9929 <= p_38_i_i_2_fu_4380_p2;
        p_38_i_i_3_reg_9954 <= p_38_i_i_3_fu_4463_p2;
        p_38_i_i_4_reg_9979 <= p_38_i_i_4_fu_4546_p2;
        p_38_i_i_5_reg_10004 <= p_38_i_i_5_fu_4629_p2;
        p_38_i_i_6_reg_10029 <= p_38_i_i_6_fu_4712_p2;
        p_38_i_i_7_reg_10054 <= p_38_i_i_7_fu_4795_p2;
        p_38_i_i_8_reg_10079 <= p_38_i_i_8_fu_4878_p2;
        p_38_i_i_9_reg_10104 <= p_38_i_i_9_fu_4961_p2;
        p_38_i_i_reg_9879 <= p_38_i_i_fu_4214_p2;
        tmp_181_reg_9884 <= tmp_181_fu_4229_p2;
        tmp_432_10_reg_10159 <= tmp_432_10_fu_5142_p2;
        tmp_432_1_reg_9909 <= tmp_432_1_fu_4312_p2;
        tmp_432_2_reg_9934 <= tmp_432_2_fu_4395_p2;
        tmp_432_3_reg_9959 <= tmp_432_3_fu_4478_p2;
        tmp_432_4_reg_9984 <= tmp_432_4_fu_4561_p2;
        tmp_432_5_reg_10009 <= tmp_432_5_fu_4644_p2;
        tmp_432_6_reg_10034 <= tmp_432_6_fu_4727_p2;
        tmp_432_7_reg_10059 <= tmp_432_7_fu_4810_p2;
        tmp_432_8_reg_10084 <= tmp_432_8_fu_4893_p2;
        tmp_432_9_reg_10109 <= tmp_432_9_fu_4976_p2;
        tmp_432_s_reg_10134 <= tmp_432_s_fu_5059_p2;
        underflow_10_reg_10144 <= underflow_10_fu_5087_p2;
        underflow_11_reg_10169 <= underflow_11_fu_5170_p2;
        underflow_1_reg_9919 <= underflow_1_fu_4340_p2;
        underflow_2_reg_9944 <= underflow_2_fu_4423_p2;
        underflow_3_reg_9969 <= underflow_3_fu_4506_p2;
        underflow_4_reg_9994 <= underflow_4_fu_4589_p2;
        underflow_5_reg_10019 <= underflow_5_fu_4672_p2;
        underflow_6_reg_10044 <= underflow_6_fu_4755_p2;
        underflow_7_reg_10069 <= underflow_7_fu_4838_p2;
        underflow_8_reg_10094 <= underflow_8_fu_4921_p2;
        underflow_9_reg_10119 <= underflow_9_fu_5004_p2;
        underflow_reg_9894 <= underflow_fu_4257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        brmerge40_demorgan_i_220_reg_10778 <= brmerge40_demorgan_i_220_fu_7047_p2;
        brmerge40_demorgan_i_222_reg_10803 <= brmerge40_demorgan_i_222_fu_7130_p2;
        brmerge40_demorgan_i_224_reg_10828 <= brmerge40_demorgan_i_224_fu_7213_p2;
        brmerge40_demorgan_i_226_reg_10853 <= brmerge40_demorgan_i_226_fu_7296_p2;
        brmerge40_demorgan_i_228_reg_10878 <= brmerge40_demorgan_i_228_fu_7379_p2;
        brmerge40_demorgan_i_230_reg_10903 <= brmerge40_demorgan_i_230_fu_7462_p2;
        brmerge40_demorgan_i_232_reg_10928 <= brmerge40_demorgan_i_232_fu_7545_p2;
        brmerge40_demorgan_i_234_reg_10953 <= brmerge40_demorgan_i_234_fu_7628_p2;
        brmerge40_demorgan_i_236_reg_10978 <= brmerge40_demorgan_i_236_fu_7711_p2;
        brmerge40_demorgan_i_238_reg_11003 <= brmerge40_demorgan_i_238_fu_7794_p2;
        brmerge40_demorgan_i_240_reg_11028 <= brmerge40_demorgan_i_240_fu_7877_p2;
        brmerge40_demorgan_i_241_reg_10753 <= brmerge40_demorgan_i_241_fu_6964_p2;
        brmerge_i_i_i1_10_reg_11013 <= brmerge_i_i_i1_10_fu_7816_p2;
        brmerge_i_i_i1_1_reg_10788 <= brmerge_i_i_i1_1_fu_7069_p2;
        brmerge_i_i_i1_2_reg_10813 <= brmerge_i_i_i1_2_fu_7152_p2;
        brmerge_i_i_i1_3_reg_10838 <= brmerge_i_i_i1_3_fu_7235_p2;
        brmerge_i_i_i1_4_reg_10863 <= brmerge_i_i_i1_4_fu_7318_p2;
        brmerge_i_i_i1_5_reg_10888 <= brmerge_i_i_i1_5_fu_7401_p2;
        brmerge_i_i_i1_6_reg_10913 <= brmerge_i_i_i1_6_fu_7484_p2;
        brmerge_i_i_i1_7_reg_10938 <= brmerge_i_i_i1_7_fu_7567_p2;
        brmerge_i_i_i1_8_reg_10963 <= brmerge_i_i_i1_8_fu_7650_p2;
        brmerge_i_i_i1_9_reg_10988 <= brmerge_i_i_i1_9_fu_7733_p2;
        brmerge_i_i_i1_reg_10763 <= brmerge_i_i_i1_fu_6986_p2;
        brmerge_i_i_i1_s_reg_11038 <= brmerge_i_i_i1_s_fu_7899_p2;
        p_38_i_i1_10_reg_10993 <= p_38_i_i1_10_fu_7768_p2;
        p_38_i_i1_1_reg_10768 <= p_38_i_i1_1_fu_7021_p2;
        p_38_i_i1_2_reg_10793 <= p_38_i_i1_2_fu_7104_p2;
        p_38_i_i1_3_reg_10818 <= p_38_i_i1_3_fu_7187_p2;
        p_38_i_i1_4_reg_10843 <= p_38_i_i1_4_fu_7270_p2;
        p_38_i_i1_5_reg_10868 <= p_38_i_i1_5_fu_7353_p2;
        p_38_i_i1_6_reg_10893 <= p_38_i_i1_6_fu_7436_p2;
        p_38_i_i1_7_reg_10918 <= p_38_i_i1_7_fu_7519_p2;
        p_38_i_i1_8_reg_10943 <= p_38_i_i1_8_fu_7602_p2;
        p_38_i_i1_9_reg_10968 <= p_38_i_i1_9_fu_7685_p2;
        p_38_i_i1_reg_10743 <= p_38_i_i1_fu_6938_p2;
        p_38_i_i1_s_reg_11018 <= p_38_i_i1_s_fu_7851_p2;
        tmp_187_reg_10748 <= tmp_187_fu_6953_p2;
        tmp_447_10_reg_11023 <= tmp_447_10_fu_7866_p2;
        tmp_447_1_reg_10773 <= tmp_447_1_fu_7036_p2;
        tmp_447_2_reg_10798 <= tmp_447_2_fu_7119_p2;
        tmp_447_3_reg_10823 <= tmp_447_3_fu_7202_p2;
        tmp_447_4_reg_10848 <= tmp_447_4_fu_7285_p2;
        tmp_447_5_reg_10873 <= tmp_447_5_fu_7368_p2;
        tmp_447_6_reg_10898 <= tmp_447_6_fu_7451_p2;
        tmp_447_7_reg_10923 <= tmp_447_7_fu_7534_p2;
        tmp_447_8_reg_10948 <= tmp_447_8_fu_7617_p2;
        tmp_447_9_reg_10973 <= tmp_447_9_fu_7700_p2;
        tmp_447_s_reg_10998 <= tmp_447_s_fu_7783_p2;
        underflow_19_10_reg_11033 <= underflow_19_10_fu_7894_p2;
        underflow_19_1_reg_10783 <= underflow_19_1_fu_7064_p2;
        underflow_19_2_reg_10808 <= underflow_19_2_fu_7147_p2;
        underflow_19_3_reg_10833 <= underflow_19_3_fu_7230_p2;
        underflow_19_4_reg_10858 <= underflow_19_4_fu_7313_p2;
        underflow_19_5_reg_10883 <= underflow_19_5_fu_7396_p2;
        underflow_19_6_reg_10908 <= underflow_19_6_fu_7479_p2;
        underflow_19_7_reg_10933 <= underflow_19_7_fu_7562_p2;
        underflow_19_8_reg_10958 <= underflow_19_8_fu_7645_p2;
        underflow_19_9_reg_10983 <= underflow_19_9_fu_7728_p2;
        underflow_19_reg_10758 <= underflow_19_fu_6981_p2;
        underflow_19_s_reg_11008 <= underflow_19_s_fu_7811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ci_10_reg_8950 <= ci_10_fu_2471_p2;
        exitcond33_reg_8946 <= exitcond33_fu_2465_p2;
        input_V_addr_reg_8930 <= tmp_1691_cast_fu_2395_p1;
        tmp_652_reg_8935 <= tmp_652_fu_2449_p2;
        tmp_654_reg_8940 <= tmp_654_fu_2460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        conv1_output_p_V_0_a_1_reg_8795 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_0_a_2_reg_8800 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_10_3_reg_8765 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_10_4_reg_8770 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_11_3_reg_8785 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_11_4_reg_8790 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_1_a_1_reg_8755 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_1_a_2_reg_8760 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_2_a_1_reg_8815 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_2_a_2_reg_8820 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_3_a_1_reg_8825 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_3_a_2_reg_8830 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_4_a_1_reg_8805 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_4_a_2_reg_8810 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_5_a_1_reg_8775 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_5_a_2_reg_8780 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_6_a_1_reg_8865 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_6_a_2_reg_8870 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_7_a_1_reg_8835 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_7_a_2_reg_8840 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_8_a_1_reg_8845 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_8_a_2_reg_8850 <= tmp_1672_cast_fu_2215_p1;
        conv1_output_p_V_9_a_1_reg_8855 <= tmp_1671_cast_fu_2194_p1;
        conv1_output_p_V_9_a_2_reg_8860 <= tmp_1672_cast_fu_2215_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp2_iter3_exitcond_flatten21_reg_11043))) begin
        conv1_output_p_V_0_a_3_reg_11123 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_10_7_reg_11108 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_11_7_reg_11118 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_1_a_3_reg_11103 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_2_a_3_reg_11133 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_3_a_3_reg_11138 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_4_a_3_reg_11128 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_5_a_3_reg_11113 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_6_a_3_reg_11158 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_7_a_3_reg_11143 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_8_a_3_reg_11148 <= tmp_1683_cast_fu_8476_p1;
        conv1_output_p_V_9_a_3_reg_11153 <= tmp_1683_cast_fu_8476_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_1511_p2))) begin
        exitcond_flatten17_reg_8547 <= exitcond_flatten17_fu_1529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_8538))) begin
        exitcond_flatten18_reg_8581 <= exitcond_flatten18_fu_1588_p2;
        exitcond_flatten_mid_reg_8586 <= exitcond_flatten_mid_fu_1594_p2;
        indvar_flatten_op_reg_8603 <= indvar_flatten_op_fu_1619_p2;
        not_exitcond_flatten_reg_8576 <= not_exitcond_flatten_fu_1583_p2;
        tmp_1617_reg_8570 <= {{mul_fu_1567_p2[11:9]}};
        tmp_610_reg_8591 <= tmp_610_fu_1606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten19_fu_1913_p2))) begin
        exitcond_flatten20_reg_8685 <= exitcond_flatten20_fu_1931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_fu_8265_p2))) begin
        exitcond_mid_reg_11065 <= exitcond_mid_fu_8323_p2;
        j_2_mid_reg_11052 <= j_2_mid_fu_8289_p3;
        k_2_mid2_reg_11070 <= k_2_mid2_fu_8335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten19_fu_1913_p2))) begin
        i_1_cast_mid2_v_reg_8692 <= i_1_cast_mid2_v_fu_1937_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_1511_p2))) begin
        i_cast_mid2_v_reg_8556 <= i_cast_mid2_v_fu_1535_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        indvar_flatten_next2_4_reg_11047 <= indvar_flatten_next2_4_fu_8271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten19_reg_8676) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_1_cast_mid2_reg_8711 <= j_1_cast_mid2_fu_2008_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043))) begin
        j_2_cast_mid2_reg_11087 <= j_2_cast_mid2_fu_8381_p3;
        k_6_reg_11093 <= k_6_fu_8387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_cast_mid2_reg_8597 <= j_cast_mid2_fu_1611_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten19_reg_8676))) begin
        k_1_mid2_reg_8705 <= k_1_mid2_fu_2000_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        k_cast_mid2_reg_8614 <= k_cast_mid2_fu_1803_p3;
        p_1_reg_8635 <= p_1_fu_1835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        m_7_reg_8896 <= m_7_fu_2257_p2;
        m_cast_cast1_reg_8883[1 : 0] <= m_cast_cast1_fu_2243_p1[1 : 0];
        m_cast_cast_reg_8888[1 : 0] <= m_cast_cast_fu_2247_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        n_7_reg_8920 <= n_7_fu_2299_p2;
        n_cast_cast_reg_8911[1 : 0] <= n_cast_cast_fu_2289_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538))) begin
        p_mid2_reg_8608 <= p_mid2_fu_1795_p3;
        tmp_1623_reg_8625 <= tmp_1623_fu_1827_p1;
        tmp_1624_reg_8630 <= tmp_1624_fu_1831_p1;
        tmp_616_reg_8619 <= tmp_616_fu_1815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state40))) begin
        reg_1463 <= conv1_output_p_V_0_q0;
        reg_1467 <= conv1_output_p_V_1_q0;
        reg_1471 <= conv1_output_p_V_2_q0;
        reg_1475 <= conv1_output_p_V_3_q0;
        reg_1479 <= conv1_output_p_V_4_q0;
        reg_1483 <= conv1_output_p_V_5_q0;
        reg_1487 <= conv1_output_p_V_6_q0;
        reg_1491 <= conv1_output_p_V_7_q0;
        reg_1495 <= conv1_output_p_V_8_q0;
        reg_1499 <= conv1_output_p_V_9_q0;
        reg_1503 <= conv1_output_p_V_10_q0;
        reg_1507 <= conv1_output_p_V_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        rr_0_V_110_reg_9095 <= grp_MUL_DP_fu_1353_ap_return_0;
        rr_0_V_111_reg_9115 <= grp_MUL_DP_fu_1363_ap_return_0;
        rr_0_V_112_reg_9135 <= grp_MUL_DP_fu_1373_ap_return_0;
        rr_0_V_113_reg_9155 <= grp_MUL_DP_fu_1383_ap_return_0;
        rr_0_V_114_reg_9175 <= grp_MUL_DP_fu_1393_ap_return_0;
        rr_0_V_115_reg_9195 <= grp_MUL_DP_fu_1403_ap_return_0;
        rr_0_V_116_reg_9215 <= grp_MUL_DP_fu_1413_ap_return_0;
        rr_0_V_117_reg_9235 <= grp_MUL_DP_fu_1423_ap_return_0;
        rr_0_V_118_reg_9255 <= grp_MUL_DP_fu_1433_ap_return_0;
        rr_0_V_119_reg_9275 <= grp_MUL_DP_fu_1443_ap_return_0;
        rr_0_V_120_reg_9295 <= grp_MUL_DP_fu_1453_ap_return_0;
        rr_0_V_reg_9075 <= grp_MUL_DP_fu_1343_ap_return_0;
        rr_1_V_110_reg_9100 <= grp_MUL_DP_fu_1353_ap_return_1;
        rr_1_V_111_reg_9120 <= grp_MUL_DP_fu_1363_ap_return_1;
        rr_1_V_112_reg_9140 <= grp_MUL_DP_fu_1373_ap_return_1;
        rr_1_V_113_reg_9160 <= grp_MUL_DP_fu_1383_ap_return_1;
        rr_1_V_114_reg_9180 <= grp_MUL_DP_fu_1393_ap_return_1;
        rr_1_V_115_reg_9200 <= grp_MUL_DP_fu_1403_ap_return_1;
        rr_1_V_116_reg_9220 <= grp_MUL_DP_fu_1413_ap_return_1;
        rr_1_V_117_reg_9240 <= grp_MUL_DP_fu_1423_ap_return_1;
        rr_1_V_118_reg_9260 <= grp_MUL_DP_fu_1433_ap_return_1;
        rr_1_V_119_reg_9280 <= grp_MUL_DP_fu_1443_ap_return_1;
        rr_1_V_120_reg_9300 <= grp_MUL_DP_fu_1453_ap_return_1;
        rr_1_V_reg_9080 <= grp_MUL_DP_fu_1343_ap_return_1;
        tmp_1639_reg_9085 <= grp_MUL_DP_fu_1343_ap_return_0[32'd5];
        tmp_1644_reg_9090 <= grp_MUL_DP_fu_1343_ap_return_1[32'd5];
        tmp_1649_reg_9105 <= grp_MUL_DP_fu_1353_ap_return_0[32'd5];
        tmp_1654_reg_9110 <= grp_MUL_DP_fu_1353_ap_return_1[32'd5];
        tmp_1659_reg_9125 <= grp_MUL_DP_fu_1363_ap_return_0[32'd5];
        tmp_1664_reg_9130 <= grp_MUL_DP_fu_1363_ap_return_1[32'd5];
        tmp_1669_reg_9145 <= grp_MUL_DP_fu_1373_ap_return_0[32'd5];
        tmp_1674_reg_9150 <= grp_MUL_DP_fu_1373_ap_return_1[32'd5];
        tmp_1679_reg_9165 <= grp_MUL_DP_fu_1383_ap_return_0[32'd5];
        tmp_1684_reg_9170 <= grp_MUL_DP_fu_1383_ap_return_1[32'd5];
        tmp_1689_reg_9185 <= grp_MUL_DP_fu_1393_ap_return_0[32'd5];
        tmp_1694_reg_9190 <= grp_MUL_DP_fu_1393_ap_return_1[32'd5];
        tmp_1699_reg_9205 <= grp_MUL_DP_fu_1403_ap_return_0[32'd5];
        tmp_1704_reg_9210 <= grp_MUL_DP_fu_1403_ap_return_1[32'd5];
        tmp_1709_reg_9225 <= grp_MUL_DP_fu_1413_ap_return_0[32'd5];
        tmp_1714_reg_9230 <= grp_MUL_DP_fu_1413_ap_return_1[32'd5];
        tmp_1719_reg_9245 <= grp_MUL_DP_fu_1423_ap_return_0[32'd5];
        tmp_1724_reg_9250 <= grp_MUL_DP_fu_1423_ap_return_1[32'd5];
        tmp_1729_reg_9265 <= grp_MUL_DP_fu_1433_ap_return_0[32'd5];
        tmp_1734_reg_9270 <= grp_MUL_DP_fu_1433_ap_return_1[32'd5];
        tmp_1739_reg_9285 <= grp_MUL_DP_fu_1443_ap_return_0[32'd5];
        tmp_1744_reg_9290 <= grp_MUL_DP_fu_1443_ap_return_1[32'd5];
        tmp_1749_reg_9305 <= grp_MUL_DP_fu_1453_ap_return_0[32'd5];
        tmp_1754_reg_9310 <= grp_MUL_DP_fu_1453_ap_return_1[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (1'd0 == exitcond32_fu_2293_p2))) begin
        tmp_148_cast_cast_reg_8925[5 : 0] <= tmp_148_cast_cast_fu_2321_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter5_exitcond_flatten19_reg_8676))) begin
        tmp_1625_reg_8722 <= {{mul5_fu_2024_p2[11:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043))) begin
        tmp_1630_reg_11081 <= {{mul6_fu_8360_p2[11:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_8538))) begin
        tmp_621_reg_8651 <= tmp_621_fu_1892_p2;
        weight_V_addr_reg_8645 <= sum_fu_1881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter6_exitcond_flatten19_reg_8676))) begin
        tmp_628_reg_8728 <= tmp_628_fu_2122_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_631_reg_8741[11 : 1] <= tmp_631_fu_2167_p2[11 : 1];
        tmp_632_reg_8746[11 : 1] <= tmp_632_fu_2173_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten21_reg_11043))) begin
        tmp_641_reg_11098 <= tmp_641_fu_8470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (1'd0 == exitcond31_fu_2251_p2))) begin
        tmp_cast_cast_reg_8901[5 : 0] <= tmp_cast_cast_fu_2279_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        weight_V_addr_read_reg_8660 <= m_axi_weight_V_RDATA;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1511_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten19_fu_1913_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_flatten21_fu_8265_p2)) begin
        ap_condition_pp2_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state53))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3) & (1'b0 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_enable_reg_pp1_iter6) & (1'b0 == ap_enable_reg_pp1_iter7) & (1'b0 == ap_enable_reg_pp1_iter8))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter0) & (1'b0 == ap_enable_reg_pp2_iter1) & (1'b0 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_enable_reg_pp2_iter3) & (1'b0 == ap_enable_reg_pp2_iter4))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = m_axi_weight_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter7))) begin
        bias_V_ce0 = 1'b1;
    end else begin
        bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_3_reg_11123;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_0_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_2_reg_8800;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_0_address0 = conv1_output_p_V_0_a_1_reg_8795;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_0_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_0_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_0_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_0_d0 = this_assign_54_1_fu_7926_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_0_d0 = this_assign_1_fu_5202_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_0_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd0 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd0 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_0_we0 = 1'b1;
    end else begin
        conv1_output_p_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_10_address0 = conv1_output_p_V_10_7_reg_11108;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_10_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_10_address0 = conv1_output_p_V_10_4_reg_8770;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_10_address0 = conv1_output_p_V_10_3_reg_8765;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_10_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_10_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_10_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_10_d0 = this_assign_54_1_s_fu_8226_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_10_d0 = this_assign_1_10_fu_5502_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_10_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd10 == grp_fu_1945_p2)) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd10 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_10_we0 = 1'b1;
    end else begin
        conv1_output_p_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_11_address0 = conv1_output_p_V_11_7_reg_11118;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_11_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_11_address0 = conv1_output_p_V_11_4_reg_8790;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_11_address0 = conv1_output_p_V_11_3_reg_8785;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_11_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_11_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_11_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_11_d0 = this_assign_54_1_10_fu_8256_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_11_d0 = this_assign_1_11_fu_5532_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_11_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & ~(5'd0 == grp_fu_1945_p2) & ~(5'd1 == grp_fu_1945_p2) & ~(5'd2 == grp_fu_1945_p2) & ~(5'd3 == grp_fu_1945_p2) & ~(5'd4 == grp_fu_1945_p2) & ~(5'd5 == grp_fu_1945_p2) & ~(5'd6 == grp_fu_1945_p2) & ~(5'd7 == grp_fu_1945_p2) & ~(5'd8 == grp_fu_1945_p2) & ~(5'd9 == grp_fu_1945_p2) & ~(5'd10 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & ~(5'd0 == grp_fu_8305_p2) & ~(5'd1 == grp_fu_8305_p2) & ~(5'd2 == grp_fu_8305_p2) & ~(5'd3 == grp_fu_8305_p2) & ~(5'd4 == grp_fu_8305_p2) & ~(5'd5 == grp_fu_8305_p2) & ~(5'd6 == grp_fu_8305_p2) & ~(5'd7 == grp_fu_8305_p2) & ~(5'd8 == grp_fu_8305_p2) & ~(5'd9 == grp_fu_8305_p2) & ~(5'd10 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_11_we0 = 1'b1;
    end else begin
        conv1_output_p_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_3_reg_11103;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_1_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_2_reg_8760;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_1_address0 = conv1_output_p_V_1_a_1_reg_8755;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_1_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_1_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_1_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_1_d0 = this_assign_54_1_1_fu_7956_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_1_d0 = this_assign_1_1_fu_5232_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_1_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd1 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd1 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_1_we0 = 1'b1;
    end else begin
        conv1_output_p_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_3_reg_11133;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_2_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_2_reg_8820;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_2_address0 = conv1_output_p_V_2_a_1_reg_8815;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_2_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_2_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_2_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_2_d0 = this_assign_54_1_2_fu_7986_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_2_d0 = this_assign_1_2_fu_5262_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_2_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd2 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd2 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_2_we0 = 1'b1;
    end else begin
        conv1_output_p_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_3_reg_11138;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_3_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_2_reg_8830;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_3_address0 = conv1_output_p_V_3_a_1_reg_8825;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_3_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_3_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_3_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_3_d0 = this_assign_54_1_3_fu_8016_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_3_d0 = this_assign_1_3_fu_5292_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_3_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd3 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd3 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_3_we0 = 1'b1;
    end else begin
        conv1_output_p_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_3_reg_11128;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_4_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_2_reg_8810;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_4_address0 = conv1_output_p_V_4_a_1_reg_8805;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_4_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_4_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_4_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_4_d0 = this_assign_54_1_4_fu_8046_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_4_d0 = this_assign_1_4_fu_5322_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_4_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd4 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd4 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_4_we0 = 1'b1;
    end else begin
        conv1_output_p_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_3_reg_11113;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_5_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_2_reg_8780;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_5_address0 = conv1_output_p_V_5_a_1_reg_8775;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_5_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_5_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_5_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_5_d0 = this_assign_54_1_5_fu_8076_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_5_d0 = this_assign_1_5_fu_5352_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_5_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd5 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd5 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_5_we0 = 1'b1;
    end else begin
        conv1_output_p_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_3_reg_11158;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_6_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_2_reg_8870;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_6_address0 = conv1_output_p_V_6_a_1_reg_8865;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_6_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_6_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_6_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_6_d0 = this_assign_54_1_6_fu_8106_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_6_d0 = this_assign_1_6_fu_5382_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_6_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd6 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd6 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_6_we0 = 1'b1;
    end else begin
        conv1_output_p_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_3_reg_11143;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_7_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_2_reg_8840;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_7_address0 = conv1_output_p_V_7_a_1_reg_8835;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_7_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_7_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_7_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_7_d0 = this_assign_54_1_7_fu_8136_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_7_d0 = this_assign_1_7_fu_5412_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_7_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd7 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd7 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_7_we0 = 1'b1;
    end else begin
        conv1_output_p_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_8_address0 = conv1_output_p_V_8_a_3_reg_11148;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_8_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_8_address0 = conv1_output_p_V_8_a_2_reg_8850;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_8_address0 = conv1_output_p_V_8_a_1_reg_8845;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_8_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_8_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_8_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_8_d0 = this_assign_54_1_8_fu_8166_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_8_d0 = this_assign_1_8_fu_5442_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_8_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd8 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd8 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_8_we0 = 1'b1;
    end else begin
        conv1_output_p_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_9_address0 = conv1_output_p_V_9_a_3_reg_11153;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        conv1_output_p_V_9_address0 = tmp_1683_cast_fu_8476_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39))) begin
        conv1_output_p_V_9_address0 = conv1_output_p_V_9_a_2_reg_8860;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38))) begin
        conv1_output_p_V_9_address0 = conv1_output_p_V_9_a_1_reg_8855;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_9_address0 = tmp_1665_cast_fu_2128_p1;
    end else begin
        conv1_output_p_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8)) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4)))) begin
        conv1_output_p_V_9_ce0 = 1'b1;
    end else begin
        conv1_output_p_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4))) begin
        conv1_output_p_V_9_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        conv1_output_p_V_9_d0 = this_assign_54_1_9_fu_8196_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv1_output_p_V_9_d0 = this_assign_1_9_fu_5472_p3;
    end else if (((ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8))) begin
        conv1_output_p_V_9_d0 = bias_V_q0;
    end else begin
        conv1_output_p_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | ((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (5'd9 == grp_fu_1945_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (1'd1 == tmp_1635_fu_8525_p3) & (5'd9 == grp_fu_8305_p2)))) begin
        conv1_output_p_V_9_we0 = 1'b1;
    end else begin
        conv1_output_p_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1343_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1343_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1353_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1353_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1363_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1363_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1373_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1373_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1383_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1383_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1393_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1393_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1403_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1403_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1413_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1413_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1423_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1423_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1433_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1433_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1443_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1443_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_MUL_DP_fu_1453_ap_ce = 1'b1;
    end else begin
        grp_MUL_DP_fu_1453_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        grp_fu_1649_ce = 1'b1;
    end else begin
        grp_fu_1649_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten19_reg_8676) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        i_1_phi_fu_1189_p4 = i_1_cast_mid2_v_reg_8692;
    end else begin
        i_1_phi_fu_1189_p4 = i_1_reg_1185;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        i_2_phi_fu_1303_p4 = arrayNo7_mid2_v_reg_11058;
    end else begin
        i_2_phi_fu_1303_p4 = i_2_reg_1299;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_1108_p4 = i_cast_mid2_v_reg_8556;
    end else begin
        i_phi_fu_1108_p4 = i_reg_1104;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten17_phi_fu_1292_p4 = indvar_flatten_next2_4_reg_11047;
    end else begin
        indvar_flatten17_phi_fu_1292_p4 = indvar_flatten17_reg_1288;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten18_phi_fu_1314_p4 = indvar_flatten_next2_3_reg_11076;
    end else begin
        indvar_flatten18_phi_fu_1314_p4 = indvar_flatten18_reg_1310;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        indvar_flatten_phi_fu_1142_p4 = indvar_flatten_next_fu_1841_p3;
    end else begin
        indvar_flatten_phi_fu_1142_p4 = indvar_flatten_reg_1138;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten19_reg_8676) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        j_1_phi_fu_1211_p4 = j_1_cast_mid2_reg_8711;
    end else begin
        j_1_phi_fu_1211_p4 = j_1_reg_1207;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        j_2_phi_fu_1325_p4 = j_2_cast_mid2_reg_11087;
    end else begin
        j_2_phi_fu_1325_p4 = j_2_reg_1321;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        j_phi_fu_1130_p4 = j_cast_mid2_reg_8597;
    end else begin
        j_phi_fu_1130_p4 = j_reg_1126;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten19_reg_8676) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        k_1_phi_fu_1223_p4 = k_4_fu_2016_p2;
    end else begin
        k_1_phi_fu_1223_p4 = k_1_reg_1219;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten21_reg_11043) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        k_2_phi_fu_1336_p4 = k_6_reg_11093;
    end else begin
        k_2_phi_fu_1336_p4 = k_2_reg_1332;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        k_phi_fu_1154_p4 = k_cast_mid2_reg_8614;
    end else begin
        k_phi_fu_1154_p4 = k_reg_1150;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_8538) & (ap_block_pp0_stage0_flag00001001 == 1'b0) & (1'b0 == ap_reg_ioackin_m_axi_weight_V_ARREADY))) begin
        m_axi_weight_V_ARVALID = 1'b1;
    end else begin
        m_axi_weight_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        m_axi_weight_V_RREADY = 1'b1;
    end else begin
        m_axi_weight_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_8538) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        p_phi_fu_1166_p4 = p_1_reg_8635;
    end else begin
        p_phi_fu_1166_p4 = p_reg_1162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_8538))) begin
        weight_V_blk_n_AR = m_axi_weight_V_ARREADY;
    end else begin
        weight_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538))) begin
        weight_V_blk_n_R = m_axi_weight_V_RVALID;
    end else begin
        weight_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_0_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_0_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_V_address0 = 32'd0;
    end else begin
        weight_temp_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_0_V_ce0 = 1'b1;
    end else begin
        weight_temp_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_0_V_ce1 = 1'b1;
    end else begin
        weight_temp_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_0_V_d0 = weight_V_addr_read_reg_8660;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weight_temp_0_V_d0 = 8'd0;
    end else begin
        weight_temp_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd0)))) begin
        weight_temp_0_V_we0 = 1'b1;
    end else begin
        weight_temp_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_10_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_10_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_10_V_ce0 = 1'b1;
    end else begin
        weight_temp_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_10_V_ce1 = 1'b1;
    end else begin
        weight_temp_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd10))) begin
        weight_temp_10_V_we0 = 1'b1;
    end else begin
        weight_temp_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_11_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_11_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_11_V_ce0 = 1'b1;
    end else begin
        weight_temp_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_11_V_ce1 = 1'b1;
    end else begin
        weight_temp_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd0) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd1) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd2) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd3) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd4) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd5) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd6) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd7) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd8) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd9) & ~(ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd10))) begin
        weight_temp_11_V_we0 = 1'b1;
    end else begin
        weight_temp_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_1_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_1_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_1_V_ce0 = 1'b1;
    end else begin
        weight_temp_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_1_V_ce1 = 1'b1;
    end else begin
        weight_temp_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd1))) begin
        weight_temp_1_V_we0 = 1'b1;
    end else begin
        weight_temp_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_2_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_2_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_2_V_ce0 = 1'b1;
    end else begin
        weight_temp_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_2_V_ce1 = 1'b1;
    end else begin
        weight_temp_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd2))) begin
        weight_temp_2_V_we0 = 1'b1;
    end else begin
        weight_temp_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_3_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_3_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_3_V_ce0 = 1'b1;
    end else begin
        weight_temp_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_3_V_ce1 = 1'b1;
    end else begin
        weight_temp_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd3))) begin
        weight_temp_3_V_we0 = 1'b1;
    end else begin
        weight_temp_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_4_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_4_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_4_V_ce0 = 1'b1;
    end else begin
        weight_temp_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_4_V_ce1 = 1'b1;
    end else begin
        weight_temp_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd4))) begin
        weight_temp_4_V_we0 = 1'b1;
    end else begin
        weight_temp_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_5_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_5_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_5_V_ce0 = 1'b1;
    end else begin
        weight_temp_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_5_V_ce1 = 1'b1;
    end else begin
        weight_temp_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd5))) begin
        weight_temp_5_V_we0 = 1'b1;
    end else begin
        weight_temp_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_6_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_6_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_6_V_ce0 = 1'b1;
    end else begin
        weight_temp_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_6_V_ce1 = 1'b1;
    end else begin
        weight_temp_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd6))) begin
        weight_temp_6_V_we0 = 1'b1;
    end else begin
        weight_temp_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_7_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_7_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_7_V_ce0 = 1'b1;
    end else begin
        weight_temp_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_7_V_ce1 = 1'b1;
    end else begin
        weight_temp_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd7))) begin
        weight_temp_7_V_we0 = 1'b1;
    end else begin
        weight_temp_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_8_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_8_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_8_V_ce0 = 1'b1;
    end else begin
        weight_temp_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_8_V_ce1 = 1'b1;
    end else begin
        weight_temp_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd8))) begin
        weight_temp_8_V_we0 = 1'b1;
    end else begin
        weight_temp_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_9_V_address0 = tmp_1697_cast_fu_2477_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12))) begin
        weight_temp_9_V_address0 = tmp_1654_cast_fu_1898_p1;
    end else begin
        weight_temp_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12)))) begin
        weight_temp_9_V_ce0 = 1'b1;
    end else begin
        weight_temp_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_temp_9_V_ce1 = 1'b1;
    end else begin
        weight_temp_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_reg_pp0_iter11_arrayNo_mid2_reg_8656 == 5'd9))) begin
        weight_temp_9_V_we0 = 1'b1;
    end else begin
        weight_temp_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_enable_reg_pp0_iter11 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1511_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_enable_reg_pp0_iter11 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_1511_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (ap_enable_reg_pp1_iter7 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten19_fu_1913_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter8) & (ap_enable_reg_pp1_iter7 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten19_fu_1913_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond28_fu_2179_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (exitcond29_fu_2231_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'd1 == exitcond31_fu_2251_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'd1 == exitcond32_fu_2293_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (1'd1 == exitcond33_reg_8946))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (((ap_block_pp2_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (ap_enable_reg_pp2_iter3 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten21_fu_8265_p2) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter4) & (ap_enable_reg_pp2_iter3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'd1 == exitcond_flatten21_fu_8265_p2) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((ap_block_pp2_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_10_10_fu_6897_p2 = ((p_Result_249_10_fu_6887_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_1_fu_5757_p2 = ((p_Result_249_1_fu_5747_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_2_fu_5871_p2 = ((p_Result_249_2_fu_5861_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_3_fu_5985_p2 = ((p_Result_249_3_fu_5975_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_4_fu_6099_p2 = ((p_Result_249_4_fu_6089_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_5_fu_6213_p2 = ((p_Result_249_5_fu_6203_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_6_fu_6327_p2 = ((p_Result_249_6_fu_6317_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_7_fu_6441_p2 = ((p_Result_249_7_fu_6431_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_8_fu_6555_p2 = ((p_Result_249_8_fu_6545_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_9_fu_6669_p2 = ((p_Result_249_9_fu_6659_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_fu_5643_p2 = ((p_Result_28_fu_5633_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_10_s_fu_6783_p2 = ((p_Result_249_s_fu_6773_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_11_fu_4173_p2 = ((p_Result_247_10_fu_4163_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_1_fu_3033_p2 = ((p_Result_247_1_fu_3023_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_3147_p2 = ((p_Result_247_2_fu_3137_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_3261_p2 = ((p_Result_247_3_fu_3251_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_3375_p2 = ((p_Result_247_4_fu_3365_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_3489_p2 = ((p_Result_247_5_fu_3479_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_3603_p2 = ((p_Result_247_6_fu_3593_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_3717_p2 = ((p_Result_247_7_fu_3707_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_8_fu_3831_p2 = ((p_Result_247_8_fu_3821_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_9_fu_3945_p2 = ((p_Result_247_9_fu_3935_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_2919_p2 = ((p_Result_26_fu_2909_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_s_fu_4059_p2 = ((p_Result_247_s_fu_4049_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_10_fu_6903_p2 = ((p_Result_249_10_fu_6887_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_1_fu_5763_p2 = ((p_Result_249_1_fu_5747_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_2_fu_5877_p2 = ((p_Result_249_2_fu_5861_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_3_fu_5991_p2 = ((p_Result_249_3_fu_5975_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_4_fu_6105_p2 = ((p_Result_249_4_fu_6089_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_5_fu_6219_p2 = ((p_Result_249_5_fu_6203_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_6_fu_6333_p2 = ((p_Result_249_6_fu_6317_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_7_fu_6447_p2 = ((p_Result_249_7_fu_6431_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_8_fu_6561_p2 = ((p_Result_249_8_fu_6545_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_9_fu_6675_p2 = ((p_Result_249_9_fu_6659_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_fu_5649_p2 = ((p_Result_28_fu_5633_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_10_s_fu_6789_p2 = ((p_Result_249_s_fu_6773_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_11_fu_4179_p2 = ((p_Result_247_10_fu_4163_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_3039_p2 = ((p_Result_247_1_fu_3023_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_3153_p2 = ((p_Result_247_2_fu_3137_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_3267_p2 = ((p_Result_247_3_fu_3251_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_3381_p2 = ((p_Result_247_4_fu_3365_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_3495_p2 = ((p_Result_247_5_fu_3479_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_3609_p2 = ((p_Result_247_6_fu_3593_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_3723_p2 = ((p_Result_247_7_fu_3707_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_8_fu_3837_p2 = ((p_Result_247_8_fu_3821_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_9_fu_3951_p2 = ((p_Result_247_9_fu_3935_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_2925_p2 = ((p_Result_26_fu_2909_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_s_fu_4065_p2 = ((p_Result_247_s_fu_4049_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_10_fu_6881_p2 = ((p_Result_248_10_fu_6871_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_1_fu_5741_p2 = ((p_Result_248_1_fu_5731_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_2_fu_5855_p2 = ((p_Result_248_2_fu_5845_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_3_fu_5969_p2 = ((p_Result_248_3_fu_5959_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_4_fu_6083_p2 = ((p_Result_248_4_fu_6073_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_5_fu_6197_p2 = ((p_Result_248_5_fu_6187_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_6_fu_6311_p2 = ((p_Result_248_6_fu_6301_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_7_fu_6425_p2 = ((p_Result_248_7_fu_6415_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_8_fu_6539_p2 = ((p_Result_248_8_fu_6529_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_9_fu_6653_p2 = ((p_Result_248_9_fu_6643_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_fu_5627_p2 = ((p_Result_27_fu_5617_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_10_s_fu_6767_p2 = ((p_Result_248_s_fu_6757_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_11_fu_4157_p2 = ((p_Result_246_10_fu_4147_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_3017_p2 = ((p_Result_246_1_fu_3007_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_2_fu_3131_p2 = ((p_Result_246_2_fu_3121_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_3_fu_3245_p2 = ((p_Result_246_3_fu_3235_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_4_fu_3359_p2 = ((p_Result_246_4_fu_3349_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_5_fu_3473_p2 = ((p_Result_246_5_fu_3463_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_6_fu_3587_p2 = ((p_Result_246_6_fu_3577_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_7_fu_3701_p2 = ((p_Result_246_7_fu_3691_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_8_fu_3815_p2 = ((p_Result_246_8_fu_3805_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_fu_3929_p2 = ((p_Result_246_9_fu_3919_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_2903_p2 = ((p_Result_s_fu_2893_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_s_fu_4043_p2 = ((p_Result_246_s_fu_4033_p4 == 2'd3) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd25];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (1'b0 == m_axi_weight_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b1 == ap_block_state6_io)) | ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (1'b0 == m_axi_weight_V_RVALID)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b1 == ap_block_state6_io)) | ((1'b1 == ap_enable_reg_pp0_iter11) & (1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (1'b0 == m_axi_weight_V_RVALID)));
end

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter11 = ((1'd0 == ap_reg_pp0_iter10_exitcond_flatten_reg_8538) & (1'b0 == m_axi_weight_V_RVALID));
end

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((1'd0 == ap_reg_pp0_iter3_exitcond_flatten_reg_8538) & (1'b0 == ap_sig_ioackin_m_axi_weight_V_ARREADY));
end

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign arrayNo7_mid2_v_fu_8297_p3 = ((exitcond_flatten22_fu_8283_p2[0:0] === 1'b1) ? i_6_fu_8277_p2 : i_2_phi_fu_1303_p4);

assign bias_V_address0 = i_1_cast_mid2_fu_2040_p1;

assign brmerge40_demorgan_i_219_fu_4323_p2 = (tmp_1651_reg_9379 & deleted_ones_1_fu_4291_p3);

assign brmerge40_demorgan_i_220_fu_7047_p2 = (tmp_1656_reg_10243 & deleted_ones_10_1_fu_7015_p3);

assign brmerge40_demorgan_i_221_fu_4406_p2 = (tmp_1661_reg_9426 & deleted_ones_2_fu_4374_p3);

assign brmerge40_demorgan_i_222_fu_7130_p2 = (tmp_1666_reg_10290 & deleted_ones_10_2_fu_7098_p3);

assign brmerge40_demorgan_i_223_fu_4489_p2 = (tmp_1671_reg_9473 & deleted_ones_3_fu_4457_p3);

assign brmerge40_demorgan_i_224_fu_7213_p2 = (tmp_1676_reg_10337 & deleted_ones_10_3_fu_7181_p3);

assign brmerge40_demorgan_i_225_fu_4572_p2 = (tmp_1681_reg_9520 & deleted_ones_4_fu_4540_p3);

assign brmerge40_demorgan_i_226_fu_7296_p2 = (tmp_1686_reg_10384 & deleted_ones_10_4_fu_7264_p3);

assign brmerge40_demorgan_i_227_fu_4655_p2 = (tmp_1691_reg_9567 & deleted_ones_5_fu_4623_p3);

assign brmerge40_demorgan_i_228_fu_7379_p2 = (tmp_1696_reg_10431 & deleted_ones_10_5_fu_7347_p3);

assign brmerge40_demorgan_i_229_fu_4738_p2 = (tmp_1701_reg_9614 & deleted_ones_6_fu_4706_p3);

assign brmerge40_demorgan_i_230_fu_7462_p2 = (tmp_1706_reg_10478 & deleted_ones_10_6_fu_7430_p3);

assign brmerge40_demorgan_i_231_fu_4821_p2 = (tmp_1711_reg_9661 & deleted_ones_7_fu_4789_p3);

assign brmerge40_demorgan_i_232_fu_7545_p2 = (tmp_1716_reg_10525 & deleted_ones_10_7_fu_7513_p3);

assign brmerge40_demorgan_i_233_fu_4904_p2 = (tmp_1721_reg_9708 & deleted_ones_8_fu_4872_p3);

assign brmerge40_demorgan_i_234_fu_7628_p2 = (tmp_1726_reg_10572 & deleted_ones_10_8_fu_7596_p3);

assign brmerge40_demorgan_i_235_fu_4987_p2 = (tmp_1731_reg_9755 & deleted_ones_9_fu_4955_p3);

assign brmerge40_demorgan_i_236_fu_7711_p2 = (tmp_1736_reg_10619 & deleted_ones_10_9_fu_7679_p3);

assign brmerge40_demorgan_i_237_fu_5070_p2 = (tmp_1741_reg_9802 & deleted_ones_s_fu_5038_p3);

assign brmerge40_demorgan_i_238_fu_7794_p2 = (tmp_1746_reg_10666 & deleted_ones_10_s_fu_7762_p3);

assign brmerge40_demorgan_i_239_fu_5153_p2 = (tmp_1751_reg_9849 & deleted_ones_11_fu_5121_p3);

assign brmerge40_demorgan_i_240_fu_7877_p2 = (tmp_1756_reg_10713 & deleted_ones_10_10_fu_7845_p3);

assign brmerge40_demorgan_i_241_fu_6964_p2 = (tmp_1646_reg_10196 & deleted_ones_10_fu_6932_p3);

assign brmerge40_demorgan_i_fu_4240_p2 = (tmp_1641_reg_9332 & deleted_ones_fu_4208_p3);

assign brmerge_i_i8_10_fu_7778_p2 = (tmp_1746_reg_10666 | p_not_i_i1_10_fu_7772_p2);

assign brmerge_i_i8_11_fu_7861_p2 = (tmp_1756_reg_10713 | p_not_i_i1_s_fu_7855_p2);

assign brmerge_i_i8_1_fu_7031_p2 = (tmp_1656_reg_10243 | p_not_i_i1_1_fu_7025_p2);

assign brmerge_i_i8_2_fu_7114_p2 = (tmp_1666_reg_10290 | p_not_i_i1_2_fu_7108_p2);

assign brmerge_i_i8_3_fu_7197_p2 = (tmp_1676_reg_10337 | p_not_i_i1_3_fu_7191_p2);

assign brmerge_i_i8_4_fu_7280_p2 = (tmp_1686_reg_10384 | p_not_i_i1_4_fu_7274_p2);

assign brmerge_i_i8_5_fu_7363_p2 = (tmp_1696_reg_10431 | p_not_i_i1_5_fu_7357_p2);

assign brmerge_i_i8_6_fu_7446_p2 = (tmp_1706_reg_10478 | p_not_i_i1_6_fu_7440_p2);

assign brmerge_i_i8_7_fu_7529_p2 = (tmp_1716_reg_10525 | p_not_i_i1_7_fu_7523_p2);

assign brmerge_i_i8_8_fu_7612_p2 = (tmp_1726_reg_10572 | p_not_i_i1_8_fu_7606_p2);

assign brmerge_i_i8_9_fu_7695_p2 = (tmp_1736_reg_10619 | p_not_i_i1_9_fu_7689_p2);

assign brmerge_i_i8_fu_6948_p2 = (tmp_1646_reg_10196 | p_not_i_i1_fu_6942_p2);

assign brmerge_i_i_10_fu_5054_p2 = (tmp_1741_reg_9802 | p_not_i_i_10_fu_5048_p2);

assign brmerge_i_i_11_fu_5137_p2 = (tmp_1751_reg_9849 | p_not_i_i_11_fu_5131_p2);

assign brmerge_i_i_1_fu_4307_p2 = (tmp_1651_reg_9379 | p_not_i_i_1_fu_4301_p2);

assign brmerge_i_i_2_fu_4390_p2 = (tmp_1661_reg_9426 | p_not_i_i_2_fu_4384_p2);

assign brmerge_i_i_3_fu_4473_p2 = (tmp_1671_reg_9473 | p_not_i_i_3_fu_4467_p2);

assign brmerge_i_i_4_fu_4556_p2 = (tmp_1681_reg_9520 | p_not_i_i_4_fu_4550_p2);

assign brmerge_i_i_5_fu_4639_p2 = (tmp_1691_reg_9567 | p_not_i_i_5_fu_4633_p2);

assign brmerge_i_i_6_fu_4722_p2 = (tmp_1701_reg_9614 | p_not_i_i_6_fu_4716_p2);

assign brmerge_i_i_7_fu_4805_p2 = (tmp_1711_reg_9661 | p_not_i_i_7_fu_4799_p2);

assign brmerge_i_i_8_fu_4888_p2 = (tmp_1721_reg_9708 | p_not_i_i_8_fu_4882_p2);

assign brmerge_i_i_9_fu_4971_p2 = (tmp_1731_reg_9755 | p_not_i_i_9_fu_4965_p2);

assign brmerge_i_i_fu_4224_p2 = (tmp_1641_reg_9332 | p_not_i_i_fu_4218_p2);

assign brmerge_i_i_i1_10_fu_7816_p2 = (underflow_19_s_fu_7811_p2 | overflow_19_s_fu_7788_p2);

assign brmerge_i_i_i1_1_fu_7069_p2 = (underflow_19_1_fu_7064_p2 | overflow_19_1_fu_7041_p2);

assign brmerge_i_i_i1_2_fu_7152_p2 = (underflow_19_2_fu_7147_p2 | overflow_19_2_fu_7124_p2);

assign brmerge_i_i_i1_3_fu_7235_p2 = (underflow_19_3_fu_7230_p2 | overflow_19_3_fu_7207_p2);

assign brmerge_i_i_i1_4_fu_7318_p2 = (underflow_19_4_fu_7313_p2 | overflow_19_4_fu_7290_p2);

assign brmerge_i_i_i1_5_fu_7401_p2 = (underflow_19_5_fu_7396_p2 | overflow_19_5_fu_7373_p2);

assign brmerge_i_i_i1_6_fu_7484_p2 = (underflow_19_6_fu_7479_p2 | overflow_19_6_fu_7456_p2);

assign brmerge_i_i_i1_7_fu_7567_p2 = (underflow_19_7_fu_7562_p2 | overflow_19_7_fu_7539_p2);

assign brmerge_i_i_i1_8_fu_7650_p2 = (underflow_19_8_fu_7645_p2 | overflow_19_8_fu_7622_p2);

assign brmerge_i_i_i1_9_fu_7733_p2 = (underflow_19_9_fu_7728_p2 | overflow_19_9_fu_7705_p2);

assign brmerge_i_i_i1_fu_6986_p2 = (underflow_19_fu_6981_p2 | overflow_19_fu_6958_p2);

assign brmerge_i_i_i1_s_fu_7899_p2 = (underflow_19_10_fu_7894_p2 | overflow_19_10_fu_7871_p2);

assign brmerge_i_i_i_10_fu_5092_p2 = (underflow_10_fu_5087_p2 | overflow_10_fu_5064_p2);

assign brmerge_i_i_i_11_fu_5175_p2 = (underflow_11_fu_5170_p2 | overflow_11_fu_5147_p2);

assign brmerge_i_i_i_1_fu_4345_p2 = (underflow_1_fu_4340_p2 | overflow_1_fu_4317_p2);

assign brmerge_i_i_i_2_fu_4428_p2 = (underflow_2_fu_4423_p2 | overflow_2_fu_4400_p2);

assign brmerge_i_i_i_3_fu_4511_p2 = (underflow_3_fu_4506_p2 | overflow_3_fu_4483_p2);

assign brmerge_i_i_i_4_fu_4594_p2 = (underflow_4_fu_4589_p2 | overflow_4_fu_4566_p2);

assign brmerge_i_i_i_5_fu_4677_p2 = (underflow_5_fu_4672_p2 | overflow_5_fu_4649_p2);

assign brmerge_i_i_i_6_fu_4760_p2 = (underflow_6_fu_4755_p2 | overflow_6_fu_4732_p2);

assign brmerge_i_i_i_7_fu_4843_p2 = (underflow_7_fu_4838_p2 | overflow_7_fu_4815_p2);

assign brmerge_i_i_i_8_fu_4926_p2 = (underflow_8_fu_4921_p2 | overflow_8_fu_4898_p2);

assign brmerge_i_i_i_9_fu_5009_p2 = (underflow_9_fu_5004_p2 | overflow_9_fu_4981_p2);

assign brmerge_i_i_i_fu_4262_p2 = (underflow_fu_4257_p2 | overflow_fu_4234_p2);

assign carry_33_10_fu_4141_p2 = (tmp_1750_fu_4113_p3 & tmp_427_10_fu_4135_p2);

assign carry_33_1_fu_3001_p2 = (tmp_1650_fu_2973_p3 & tmp_427_1_fu_2995_p2);

assign carry_33_2_fu_3115_p2 = (tmp_1660_fu_3087_p3 & tmp_427_2_fu_3109_p2);

assign carry_33_3_fu_3229_p2 = (tmp_1670_fu_3201_p3 & tmp_427_3_fu_3223_p2);

assign carry_33_4_fu_3343_p2 = (tmp_1680_fu_3315_p3 & tmp_427_4_fu_3337_p2);

assign carry_33_5_fu_3457_p2 = (tmp_1690_fu_3429_p3 & tmp_427_5_fu_3451_p2);

assign carry_33_6_fu_3571_p2 = (tmp_1700_fu_3543_p3 & tmp_427_6_fu_3565_p2);

assign carry_33_7_fu_3685_p2 = (tmp_1710_fu_3657_p3 & tmp_427_7_fu_3679_p2);

assign carry_33_8_fu_3799_p2 = (tmp_1720_fu_3771_p3 & tmp_427_8_fu_3793_p2);

assign carry_33_9_fu_3913_p2 = (tmp_1730_fu_3885_p3 & tmp_427_9_fu_3907_p2);

assign carry_33_s_fu_4027_p2 = (tmp_1740_fu_3999_p3 & tmp_427_s_fu_4021_p2);

assign carry_35_10_fu_6865_p2 = (tmp_1755_fu_6837_p3 & tmp_442_10_fu_6859_p2);

assign carry_35_1_fu_5725_p2 = (tmp_1655_fu_5697_p3 & tmp_442_1_fu_5719_p2);

assign carry_35_2_fu_5839_p2 = (tmp_1665_fu_5811_p3 & tmp_442_2_fu_5833_p2);

assign carry_35_3_fu_5953_p2 = (tmp_1675_fu_5925_p3 & tmp_442_3_fu_5947_p2);

assign carry_35_4_fu_6067_p2 = (tmp_1685_fu_6039_p3 & tmp_442_4_fu_6061_p2);

assign carry_35_5_fu_6181_p2 = (tmp_1695_fu_6153_p3 & tmp_442_5_fu_6175_p2);

assign carry_35_6_fu_6295_p2 = (tmp_1705_fu_6267_p3 & tmp_442_6_fu_6289_p2);

assign carry_35_7_fu_6409_p2 = (tmp_1715_fu_6381_p3 & tmp_442_7_fu_6403_p2);

assign carry_35_8_fu_6523_p2 = (tmp_1725_fu_6495_p3 & tmp_442_8_fu_6517_p2);

assign carry_35_9_fu_6637_p2 = (tmp_1735_fu_6609_p3 & tmp_442_9_fu_6631_p2);

assign carry_35_s_fu_6751_p2 = (tmp_1745_fu_6723_p3 & tmp_442_s_fu_6745_p2);

assign carry_9_fu_5611_p2 = (tmp_1645_fu_5583_p3 & tmp_185_fu_5605_p2);

assign carry_s_fu_2887_p2 = (tmp_1640_fu_2859_p3 & tmp_179_fu_2881_p2);

assign ci_10_fu_2471_p2 = (2'd1 + ci_reg_1277);

assign ci_cast_cast_fu_2325_p1 = ci_reg_1277;

assign deleted_ones_10_10_fu_7845_p3 = ((carry_35_10_reg_10719[0:0] === 1'b1) ? p_41_i_i1_s_fu_7840_p2 : Range1_all_ones_10_10_reg_10731);

assign deleted_ones_10_1_fu_7015_p3 = ((carry_35_1_reg_10249[0:0] === 1'b1) ? p_41_i_i1_1_fu_7010_p2 : Range1_all_ones_10_1_reg_10261);

assign deleted_ones_10_2_fu_7098_p3 = ((carry_35_2_reg_10296[0:0] === 1'b1) ? p_41_i_i1_2_fu_7093_p2 : Range1_all_ones_10_2_reg_10308);

assign deleted_ones_10_3_fu_7181_p3 = ((carry_35_3_reg_10343[0:0] === 1'b1) ? p_41_i_i1_3_fu_7176_p2 : Range1_all_ones_10_3_reg_10355);

assign deleted_ones_10_4_fu_7264_p3 = ((carry_35_4_reg_10390[0:0] === 1'b1) ? p_41_i_i1_4_fu_7259_p2 : Range1_all_ones_10_4_reg_10402);

assign deleted_ones_10_5_fu_7347_p3 = ((carry_35_5_reg_10437[0:0] === 1'b1) ? p_41_i_i1_5_fu_7342_p2 : Range1_all_ones_10_5_reg_10449);

assign deleted_ones_10_6_fu_7430_p3 = ((carry_35_6_reg_10484[0:0] === 1'b1) ? p_41_i_i1_6_fu_7425_p2 : Range1_all_ones_10_6_reg_10496);

assign deleted_ones_10_7_fu_7513_p3 = ((carry_35_7_reg_10531[0:0] === 1'b1) ? p_41_i_i1_7_fu_7508_p2 : Range1_all_ones_10_7_reg_10543);

assign deleted_ones_10_8_fu_7596_p3 = ((carry_35_8_reg_10578[0:0] === 1'b1) ? p_41_i_i1_8_fu_7591_p2 : Range1_all_ones_10_8_reg_10590);

assign deleted_ones_10_9_fu_7679_p3 = ((carry_35_9_reg_10625[0:0] === 1'b1) ? p_41_i_i1_9_fu_7674_p2 : Range1_all_ones_10_9_reg_10637);

assign deleted_ones_10_fu_6932_p3 = ((carry_9_reg_10202[0:0] === 1'b1) ? p_41_i_i1_fu_6927_p2 : Range1_all_ones_10_reg_10214);

assign deleted_ones_10_s_fu_7762_p3 = ((carry_35_s_reg_10672[0:0] === 1'b1) ? p_41_i_i1_10_fu_7757_p2 : Range1_all_ones_10_s_reg_10684);

assign deleted_ones_11_fu_5121_p3 = ((carry_33_10_reg_9855[0:0] === 1'b1) ? p_41_i_i_11_fu_5116_p2 : Range1_all_ones_11_reg_9867);

assign deleted_ones_1_fu_4291_p3 = ((carry_33_1_reg_9385[0:0] === 1'b1) ? p_41_i_i_1_fu_4286_p2 : Range1_all_ones_1_reg_9397);

assign deleted_ones_2_fu_4374_p3 = ((carry_33_2_reg_9432[0:0] === 1'b1) ? p_41_i_i_2_fu_4369_p2 : Range1_all_ones_2_reg_9444);

assign deleted_ones_3_fu_4457_p3 = ((carry_33_3_reg_9479[0:0] === 1'b1) ? p_41_i_i_3_fu_4452_p2 : Range1_all_ones_3_reg_9491);

assign deleted_ones_4_fu_4540_p3 = ((carry_33_4_reg_9526[0:0] === 1'b1) ? p_41_i_i_4_fu_4535_p2 : Range1_all_ones_4_reg_9538);

assign deleted_ones_5_fu_4623_p3 = ((carry_33_5_reg_9573[0:0] === 1'b1) ? p_41_i_i_5_fu_4618_p2 : Range1_all_ones_5_reg_9585);

assign deleted_ones_6_fu_4706_p3 = ((carry_33_6_reg_9620[0:0] === 1'b1) ? p_41_i_i_6_fu_4701_p2 : Range1_all_ones_6_reg_9632);

assign deleted_ones_7_fu_4789_p3 = ((carry_33_7_reg_9667[0:0] === 1'b1) ? p_41_i_i_7_fu_4784_p2 : Range1_all_ones_7_reg_9679);

assign deleted_ones_8_fu_4872_p3 = ((carry_33_8_reg_9714[0:0] === 1'b1) ? p_41_i_i_8_fu_4867_p2 : Range1_all_ones_8_reg_9726);

assign deleted_ones_9_fu_4955_p3 = ((carry_33_9_reg_9761[0:0] === 1'b1) ? p_41_i_i_9_fu_4950_p2 : Range1_all_ones_9_reg_9773);

assign deleted_ones_fu_4208_p3 = ((carry_s_reg_9338[0:0] === 1'b1) ? p_41_i_i_fu_4203_p2 : Range1_all_ones_reg_9350);

assign deleted_ones_s_fu_5038_p3 = ((carry_33_s_reg_9808[0:0] === 1'b1) ? p_41_i_i_10_fu_5033_p2 : Range1_all_ones_s_reg_9820);

assign deleted_zeros_10_10_fu_7829_p3 = ((carry_35_10_reg_10719[0:0] === 1'b1) ? Range1_all_ones_10_10_reg_10731 : Range1_all_zeros_10_10_reg_10738);

assign deleted_zeros_10_1_fu_6999_p3 = ((carry_35_1_reg_10249[0:0] === 1'b1) ? Range1_all_ones_10_1_reg_10261 : Range1_all_zeros_10_1_reg_10268);

assign deleted_zeros_10_2_fu_7082_p3 = ((carry_35_2_reg_10296[0:0] === 1'b1) ? Range1_all_ones_10_2_reg_10308 : Range1_all_zeros_10_2_reg_10315);

assign deleted_zeros_10_3_fu_7165_p3 = ((carry_35_3_reg_10343[0:0] === 1'b1) ? Range1_all_ones_10_3_reg_10355 : Range1_all_zeros_10_3_reg_10362);

assign deleted_zeros_10_4_fu_7248_p3 = ((carry_35_4_reg_10390[0:0] === 1'b1) ? Range1_all_ones_10_4_reg_10402 : Range1_all_zeros_10_4_reg_10409);

assign deleted_zeros_10_5_fu_7331_p3 = ((carry_35_5_reg_10437[0:0] === 1'b1) ? Range1_all_ones_10_5_reg_10449 : Range1_all_zeros_10_5_reg_10456);

assign deleted_zeros_10_6_fu_7414_p3 = ((carry_35_6_reg_10484[0:0] === 1'b1) ? Range1_all_ones_10_6_reg_10496 : Range1_all_zeros_10_6_reg_10503);

assign deleted_zeros_10_7_fu_7497_p3 = ((carry_35_7_reg_10531[0:0] === 1'b1) ? Range1_all_ones_10_7_reg_10543 : Range1_all_zeros_10_7_reg_10550);

assign deleted_zeros_10_8_fu_7580_p3 = ((carry_35_8_reg_10578[0:0] === 1'b1) ? Range1_all_ones_10_8_reg_10590 : Range1_all_zeros_10_8_reg_10597);

assign deleted_zeros_10_9_fu_7663_p3 = ((carry_35_9_reg_10625[0:0] === 1'b1) ? Range1_all_ones_10_9_reg_10637 : Range1_all_zeros_10_9_reg_10644);

assign deleted_zeros_10_fu_6916_p3 = ((carry_9_reg_10202[0:0] === 1'b1) ? Range1_all_ones_10_reg_10214 : Range1_all_zeros_10_reg_10221);

assign deleted_zeros_10_s_fu_7746_p3 = ((carry_35_s_reg_10672[0:0] === 1'b1) ? Range1_all_ones_10_s_reg_10684 : Range1_all_zeros_10_s_reg_10691);

assign deleted_zeros_11_fu_5105_p3 = ((carry_33_10_reg_9855[0:0] === 1'b1) ? Range1_all_ones_11_reg_9867 : Range1_all_zeros_11_reg_9874);

assign deleted_zeros_1_fu_4275_p3 = ((carry_33_1_reg_9385[0:0] === 1'b1) ? Range1_all_ones_1_reg_9397 : Range1_all_zeros_1_reg_9404);

assign deleted_zeros_2_fu_4358_p3 = ((carry_33_2_reg_9432[0:0] === 1'b1) ? Range1_all_ones_2_reg_9444 : Range1_all_zeros_2_reg_9451);

assign deleted_zeros_3_fu_4441_p3 = ((carry_33_3_reg_9479[0:0] === 1'b1) ? Range1_all_ones_3_reg_9491 : Range1_all_zeros_3_reg_9498);

assign deleted_zeros_4_fu_4524_p3 = ((carry_33_4_reg_9526[0:0] === 1'b1) ? Range1_all_ones_4_reg_9538 : Range1_all_zeros_4_reg_9545);

assign deleted_zeros_5_fu_4607_p3 = ((carry_33_5_reg_9573[0:0] === 1'b1) ? Range1_all_ones_5_reg_9585 : Range1_all_zeros_5_reg_9592);

assign deleted_zeros_6_fu_4690_p3 = ((carry_33_6_reg_9620[0:0] === 1'b1) ? Range1_all_ones_6_reg_9632 : Range1_all_zeros_6_reg_9639);

assign deleted_zeros_7_fu_4773_p3 = ((carry_33_7_reg_9667[0:0] === 1'b1) ? Range1_all_ones_7_reg_9679 : Range1_all_zeros_7_reg_9686);

assign deleted_zeros_8_fu_4856_p3 = ((carry_33_8_reg_9714[0:0] === 1'b1) ? Range1_all_ones_8_reg_9726 : Range1_all_zeros_8_reg_9733);

assign deleted_zeros_9_fu_4939_p3 = ((carry_33_9_reg_9761[0:0] === 1'b1) ? Range1_all_ones_9_reg_9773 : Range1_all_zeros_9_reg_9780);

assign deleted_zeros_fu_4192_p3 = ((carry_s_reg_9338[0:0] === 1'b1) ? Range1_all_ones_reg_9350 : Range1_all_zeros_reg_9357);

assign deleted_zeros_s_fu_5022_p3 = ((carry_33_s_reg_9808[0:0] === 1'b1) ? Range1_all_ones_s_reg_9820 : Range1_all_zeros_s_reg_9827);

assign exitcond27_fu_1977_p2 = ((k_1_phi_fu_1223_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond28_fu_2179_p2 = ((h_reg_1231 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond29_fu_2231_p2 = ((w_reg_1243 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond30_fu_8317_p2 = ((k_2_phi_fu_1336_p4 == 6'd33) ? 1'b1 : 1'b0);

assign exitcond31_fu_2251_p2 = ((m_reg_1255 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond32_fu_2293_p2 = ((n_reg_1266 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond33_fu_2465_p2 = ((ci_reg_1277 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond62_mid_fu_1983_p2 = (exitcond27_fu_1977_p2 & not_exitcond_flatten_1_fu_1972_p2);

assign exitcond63_mid1_fu_1773_p2 = (exitcond63_mid_fu_1692_p2 & not_exitcond_flatten_4_fu_1768_p2);

assign exitcond63_mid_fu_1692_p2 = (exitcond_fu_1686_p2 & not_exitcond_flatten_reg_8576);

assign exitcond_flatten17_fu_1529_p2 = ((indvar_flatten13_reg_1115 == 6'd27) ? 1'b1 : 1'b0);

assign exitcond_flatten18_fu_1588_p2 = ((indvar_flatten_phi_fu_1142_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten19_fu_1913_p2 = ((indvar_flatten15_reg_1174 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_flatten20_fu_1931_p2 = ((indvar_flatten16_reg_1196 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten21_fu_8265_p2 = ((indvar_flatten17_phi_fu_1292_p4 == 15'd24576) ? 1'b1 : 1'b0);

assign exitcond_flatten22_fu_8283_p2 = ((indvar_flatten18_phi_fu_1314_p4 == 12'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1511_p2 = ((indvar_flatten14_reg_1093 == 10'd648) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_1594_p2 = (exitcond_flatten18_fu_1588_p2 & not_exitcond_flatten_fu_1583_p2);

assign exitcond_flatten_not_fu_1763_p2 = (exitcond_flatten18_reg_8581 ^ 1'd1);

assign exitcond_fu_1686_p2 = ((p_phi_fu_1166_p4 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_8323_p2 = (exitcond30_fu_8317_p2 & not_exitcond_flatten_2_fu_8311_p2);

assign grp_fu_1945_p0 = ((exitcond_flatten20_fu_1931_p2[0:0] === 1'b1) ? i_5_fu_1925_p2 : i_1_phi_fu_1189_p4);

assign grp_fu_8305_p0 = ((exitcond_flatten22_fu_8283_p2[0:0] === 1'b1) ? i_6_fu_8277_p2 : i_2_phi_fu_1303_p4);

assign h_30_fu_2237_p2 = (h_reg_1231 + 6'd1);

assign i_1_cast_mid2_fu_2040_p1 = ap_reg_pp1_iter6_i_1_cast_mid2_v_reg_8692;

assign i_1_cast_mid2_v_fu_1937_p3 = ((exitcond_flatten20_fu_1931_p2[0:0] === 1'b1) ? i_5_fu_1925_p2 : i_1_phi_fu_1189_p4);

assign i_4_fu_1523_p2 = (5'd1 + i_phi_fu_1108_p4);

assign i_5_fu_1925_p2 = (5'd1 + i_1_phi_fu_1189_p4);

assign i_6_fu_8277_p2 = (5'd1 + i_2_phi_fu_1303_p4);

assign i_cast_mid2_cast_fu_1625_p1 = ap_reg_pp0_iter1_i_cast_mid2_v_reg_8556;

assign i_cast_mid2_v_fu_1535_p3 = ((exitcond_flatten17_fu_1529_p2[0:0] === 1'b1) ? i_4_fu_1523_p2 : i_phi_fu_1108_p4);

assign indvar_flatten13_op_fu_1543_p2 = (indvar_flatten13_reg_1115 + 6'd1);

assign indvar_flatten44_op_fu_1951_p2 = (indvar_flatten16_reg_1196 + 12'd1);

assign indvar_flatten66_op_fu_8343_p2 = (indvar_flatten18_phi_fu_1314_p4 + 12'd1);

assign indvar_flatten_next1_fu_1549_p3 = ((exitcond_flatten17_fu_1529_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten13_op_fu_1543_p2);

assign indvar_flatten_next2_1_fu_1957_p3 = ((exitcond_flatten20_fu_1931_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten44_op_fu_1951_p2);

assign indvar_flatten_next2_2_fu_1919_p2 = (indvar_flatten15_reg_1174 + 15'd1);

assign indvar_flatten_next2_3_fu_8349_p3 = ((exitcond_flatten22_fu_8283_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten66_op_fu_8343_p2);

assign indvar_flatten_next2_4_fu_8271_p2 = (indvar_flatten17_phi_fu_1292_p4 + 15'd1);

assign indvar_flatten_next2_fu_1517_p2 = (indvar_flatten14_reg_1093 + 10'd1);

assign indvar_flatten_next_fu_1841_p3 = ((tmp_610_reg_8591[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_reg_8603);

assign indvar_flatten_op_fu_1619_p2 = (indvar_flatten_phi_fu_1142_p4 + 4'd1);

assign input_V_address0 = input_V_addr_reg_8930;

assign j_1_cast_mid2_cast_fu_2080_p1 = ap_reg_pp1_iter6_j_1_cast_mid2_reg_8711;

assign j_1_cast_mid2_fu_2008_p3 = ((exitcond62_mid_fu_1983_p2[0:0] === 1'b1) ? j_5_fu_1989_p2 : j_1_mid_fu_1965_p3);

assign j_1_mid_fu_1965_p3 = ((exitcond_flatten20_reg_8685[0:0] === 1'b1) ? 6'd1 : j_1_phi_fu_1211_p4);

assign j_2_cast_mid2_cast_fu_8428_p1 = j_2_cast_mid2_reg_11087;

assign j_2_cast_mid2_fu_8381_p3 = ((exitcond_mid_reg_11065[0:0] === 1'b1) ? j_6_fu_8376_p2 : j_2_mid_reg_11052);

assign j_2_mid_fu_8289_p3 = ((exitcond_flatten22_fu_8283_p2[0:0] === 1'b1) ? 6'd1 : j_2_phi_fu_1325_p4);

assign j_4_fu_1600_p2 = (2'd1 + j_mid_fu_1557_p3);

assign j_5_fu_1989_p2 = (6'd1 + j_1_mid_fu_1965_p3);

assign j_6_fu_8376_p2 = (6'd1 + j_2_mid_reg_11052);

assign j_cast_mid2_cast_fu_1704_p1 = j_cast_mid2_reg_8597;

assign j_cast_mid2_fu_1611_p3 = ((exitcond_flatten_mid_fu_1594_p2[0:0] === 1'b1) ? j_4_fu_1600_p2 : j_mid_fu_1557_p3);

assign j_mid_fu_1557_p3 = ((exitcond_flatten17_reg_8547[0:0] === 1'b1) ? 2'd0 : j_phi_fu_1130_p4);

assign k_1_cast_cast_fu_2119_p1 = ap_reg_pp1_iter6_k_1_mid2_reg_8705;

assign k_1_mid2_fu_2000_p3 = ((tmp_625_fu_1995_p2[0:0] === 1'b1) ? 6'd1 : k_1_phi_fu_1223_p4);

assign k_2_cast_cast_fu_8467_p1 = k_2_mid2_reg_11070;

assign k_2_mid2_fu_8335_p3 = ((tmp_638_fu_8329_p2[0:0] === 1'b1) ? 6'd1 : k_2_phi_fu_1336_p4);

assign k_4_fu_2016_p2 = (k_1_mid2_reg_8705 + 6'd1);

assign k_5_fu_1779_p2 = (2'd1 + k_mid_fu_1697_p3);

assign k_6_fu_8387_p2 = (k_2_mid2_reg_11070 + 6'd1);

assign k_cast_mid2_cast_fu_1811_p1 = k_cast_mid2_fu_1803_p3;

assign k_cast_mid2_fu_1803_p3 = ((exitcond63_mid1_fu_1773_p2[0:0] === 1'b1) ? k_5_fu_1779_p2 : k_mid_fu_1697_p3);

assign k_mid_fu_1697_p3 = ((tmp_610_reg_8591[0:0] === 1'b1) ? 2'd0 : k_phi_fu_1154_p4);

assign m_7_fu_2257_p2 = (m_reg_1255 + 2'd1);

assign m_axi_weight_V_ARADDR = weight_V_addr_reg_8645;

assign m_axi_weight_V_ARBURST = 2'd0;

assign m_axi_weight_V_ARCACHE = 4'd0;

assign m_axi_weight_V_ARID = 1'd0;

assign m_axi_weight_V_ARLEN = 32'd1;

assign m_axi_weight_V_ARLOCK = 2'd0;

assign m_axi_weight_V_ARPROT = 3'd0;

assign m_axi_weight_V_ARQOS = 4'd0;

assign m_axi_weight_V_ARREGION = 4'd0;

assign m_axi_weight_V_ARSIZE = 3'd0;

assign m_axi_weight_V_ARUSER = 1'd0;

assign m_axi_weight_V_AWADDR = 32'd0;

assign m_axi_weight_V_AWBURST = 2'd0;

assign m_axi_weight_V_AWCACHE = 4'd0;

assign m_axi_weight_V_AWID = 1'd0;

assign m_axi_weight_V_AWLEN = 32'd0;

assign m_axi_weight_V_AWLOCK = 2'd0;

assign m_axi_weight_V_AWPROT = 3'd0;

assign m_axi_weight_V_AWQOS = 4'd0;

assign m_axi_weight_V_AWREGION = 4'd0;

assign m_axi_weight_V_AWSIZE = 3'd0;

assign m_axi_weight_V_AWUSER = 1'd0;

assign m_axi_weight_V_AWVALID = 1'b0;

assign m_axi_weight_V_BREADY = 1'b0;

assign m_axi_weight_V_WDATA = 8'd0;

assign m_axi_weight_V_WID = 1'd0;

assign m_axi_weight_V_WLAST = 1'b0;

assign m_axi_weight_V_WSTRB = 1'd0;

assign m_axi_weight_V_WUSER = 1'd0;

assign m_axi_weight_V_WVALID = 1'b0;

assign m_cast_cast1_fu_2243_p1 = m_reg_1255;

assign m_cast_cast_fu_2247_p1 = m_reg_1255;

assign mul5_fu_2024_p1 = mul5_fu_2024_p10;

assign mul5_fu_2024_p10 = ap_reg_pp1_iter5_i_1_cast_mid2_v_reg_8692;

assign mul5_fu_2024_p2 = (12'd43 * mul5_fu_2024_p1);

assign mul6_fu_8360_p1 = mul6_fu_8360_p10;

assign mul6_fu_8360_p10 = arrayNo7_mid2_v_reg_11058;

assign mul6_fu_8360_p2 = (12'd43 * mul6_fu_8360_p1);

assign mul_fu_1567_p1 = mul_fu_1567_p10;

assign mul_fu_1567_p10 = i_cast_mid2_v_reg_8556;

assign mul_fu_1567_p2 = (12'd43 * mul_fu_1567_p1);

assign n_7_fu_2299_p2 = (n_reg_1266 + 2'd1);

assign n_cast_cast_fu_2289_p1 = n_reg_1266;

assign newIndex_cast_mid2_c_fu_1657_p1 = $unsigned(newIndex_cast_mid2_v_fu_1654_p1);

assign newIndex_cast_mid2_v_fu_1654_p1 = $signed(tmp_1617_reg_8570);

assign not_exitcond_flatten_1_fu_1972_p2 = (exitcond_flatten20_reg_8685 ^ 1'd1);

assign not_exitcond_flatten_2_fu_8311_p2 = (exitcond_flatten22_fu_8283_p2 ^ 1'd1);

assign not_exitcond_flatten_4_fu_1768_p2 = (ap_reg_pp0_iter1_exitcond_flatten17_reg_8547 | exitcond_flatten_not_fu_1763_p2);

assign not_exitcond_flatten_fu_1583_p2 = (exitcond_flatten17_reg_8547 ^ 1'd1);

assign overflow_10_fu_5064_p2 = (brmerge_i_i_10_fu_5054_p2 & tmp_432_s_fu_5059_p2);

assign overflow_11_fu_5147_p2 = (brmerge_i_i_11_fu_5137_p2 & tmp_432_10_fu_5142_p2);

assign overflow_19_10_fu_7871_p2 = (brmerge_i_i8_11_fu_7861_p2 & tmp_447_10_fu_7866_p2);

assign overflow_19_1_fu_7041_p2 = (brmerge_i_i8_1_fu_7031_p2 & tmp_447_1_fu_7036_p2);

assign overflow_19_2_fu_7124_p2 = (brmerge_i_i8_2_fu_7114_p2 & tmp_447_2_fu_7119_p2);

assign overflow_19_3_fu_7207_p2 = (brmerge_i_i8_3_fu_7197_p2 & tmp_447_3_fu_7202_p2);

assign overflow_19_4_fu_7290_p2 = (brmerge_i_i8_4_fu_7280_p2 & tmp_447_4_fu_7285_p2);

assign overflow_19_5_fu_7373_p2 = (brmerge_i_i8_5_fu_7363_p2 & tmp_447_5_fu_7368_p2);

assign overflow_19_6_fu_7456_p2 = (brmerge_i_i8_6_fu_7446_p2 & tmp_447_6_fu_7451_p2);

assign overflow_19_7_fu_7539_p2 = (brmerge_i_i8_7_fu_7529_p2 & tmp_447_7_fu_7534_p2);

assign overflow_19_8_fu_7622_p2 = (brmerge_i_i8_8_fu_7612_p2 & tmp_447_8_fu_7617_p2);

assign overflow_19_9_fu_7705_p2 = (brmerge_i_i8_9_fu_7695_p2 & tmp_447_9_fu_7700_p2);

assign overflow_19_fu_6958_p2 = (brmerge_i_i8_fu_6948_p2 & tmp_187_fu_6953_p2);

assign overflow_19_s_fu_7788_p2 = (brmerge_i_i8_10_fu_7778_p2 & tmp_447_s_fu_7783_p2);

assign overflow_1_fu_4317_p2 = (brmerge_i_i_1_fu_4307_p2 & tmp_432_1_fu_4312_p2);

assign overflow_2_fu_4400_p2 = (brmerge_i_i_2_fu_4390_p2 & tmp_432_2_fu_4395_p2);

assign overflow_3_fu_4483_p2 = (brmerge_i_i_3_fu_4473_p2 & tmp_432_3_fu_4478_p2);

assign overflow_4_fu_4566_p2 = (brmerge_i_i_4_fu_4556_p2 & tmp_432_4_fu_4561_p2);

assign overflow_5_fu_4649_p2 = (brmerge_i_i_5_fu_4639_p2 & tmp_432_5_fu_4644_p2);

assign overflow_6_fu_4732_p2 = (brmerge_i_i_6_fu_4722_p2 & tmp_432_6_fu_4727_p2);

assign overflow_7_fu_4815_p2 = (brmerge_i_i_7_fu_4805_p2 & tmp_432_7_fu_4810_p2);

assign overflow_8_fu_4898_p2 = (brmerge_i_i_8_fu_4888_p2 & tmp_432_8_fu_4893_p2);

assign overflow_9_fu_4981_p2 = (brmerge_i_i_9_fu_4971_p2 & tmp_432_9_fu_4976_p2);

assign overflow_fu_4234_p2 = (brmerge_i_i_fu_4224_p2 & tmp_181_fu_4229_p2);

assign p_1_fu_1835_p2 = (p_mid2_fu_1795_p3 + 2'd1);

assign p_38_i_i1_10_fu_7768_p2 = (carry_35_s_reg_10672 & Range1_all_ones_10_s_reg_10684);

assign p_38_i_i1_1_fu_7021_p2 = (carry_35_1_reg_10249 & Range1_all_ones_10_1_reg_10261);

assign p_38_i_i1_2_fu_7104_p2 = (carry_35_2_reg_10296 & Range1_all_ones_10_2_reg_10308);

assign p_38_i_i1_3_fu_7187_p2 = (carry_35_3_reg_10343 & Range1_all_ones_10_3_reg_10355);

assign p_38_i_i1_4_fu_7270_p2 = (carry_35_4_reg_10390 & Range1_all_ones_10_4_reg_10402);

assign p_38_i_i1_5_fu_7353_p2 = (carry_35_5_reg_10437 & Range1_all_ones_10_5_reg_10449);

assign p_38_i_i1_6_fu_7436_p2 = (carry_35_6_reg_10484 & Range1_all_ones_10_6_reg_10496);

assign p_38_i_i1_7_fu_7519_p2 = (carry_35_7_reg_10531 & Range1_all_ones_10_7_reg_10543);

assign p_38_i_i1_8_fu_7602_p2 = (carry_35_8_reg_10578 & Range1_all_ones_10_8_reg_10590);

assign p_38_i_i1_9_fu_7685_p2 = (carry_35_9_reg_10625 & Range1_all_ones_10_9_reg_10637);

assign p_38_i_i1_fu_6938_p2 = (carry_9_reg_10202 & Range1_all_ones_10_reg_10214);

assign p_38_i_i1_s_fu_7851_p2 = (carry_35_10_reg_10719 & Range1_all_ones_10_10_reg_10731);

assign p_38_i_i_10_fu_5044_p2 = (carry_33_s_reg_9808 & Range1_all_ones_s_reg_9820);

assign p_38_i_i_11_fu_5127_p2 = (carry_33_10_reg_9855 & Range1_all_ones_11_reg_9867);

assign p_38_i_i_1_fu_4297_p2 = (carry_33_1_reg_9385 & Range1_all_ones_1_reg_9397);

assign p_38_i_i_2_fu_4380_p2 = (carry_33_2_reg_9432 & Range1_all_ones_2_reg_9444);

assign p_38_i_i_3_fu_4463_p2 = (carry_33_3_reg_9479 & Range1_all_ones_3_reg_9491);

assign p_38_i_i_4_fu_4546_p2 = (carry_33_4_reg_9526 & Range1_all_ones_4_reg_9538);

assign p_38_i_i_5_fu_4629_p2 = (carry_33_5_reg_9573 & Range1_all_ones_5_reg_9585);

assign p_38_i_i_6_fu_4712_p2 = (carry_33_6_reg_9620 & Range1_all_ones_6_reg_9632);

assign p_38_i_i_7_fu_4795_p2 = (carry_33_7_reg_9667 & Range1_all_ones_7_reg_9679);

assign p_38_i_i_8_fu_4878_p2 = (carry_33_8_reg_9714 & Range1_all_ones_8_reg_9726);

assign p_38_i_i_9_fu_4961_p2 = (carry_33_9_reg_9761 & Range1_all_ones_9_reg_9773);

assign p_38_i_i_fu_4214_p2 = (carry_s_reg_9338 & Range1_all_ones_reg_9350);

assign p_41_i_i1_10_fu_7757_p2 = (Range2_all_ones_10_s_reg_10679 & tmp_445_s_fu_7751_p2);

assign p_41_i_i1_1_fu_7010_p2 = (Range2_all_ones_10_1_reg_10256 & tmp_445_1_fu_7004_p2);

assign p_41_i_i1_2_fu_7093_p2 = (Range2_all_ones_10_2_reg_10303 & tmp_445_2_fu_7087_p2);

assign p_41_i_i1_3_fu_7176_p2 = (Range2_all_ones_10_3_reg_10350 & tmp_445_3_fu_7170_p2);

assign p_41_i_i1_4_fu_7259_p2 = (Range2_all_ones_10_4_reg_10397 & tmp_445_4_fu_7253_p2);

assign p_41_i_i1_5_fu_7342_p2 = (Range2_all_ones_10_5_reg_10444 & tmp_445_5_fu_7336_p2);

assign p_41_i_i1_6_fu_7425_p2 = (Range2_all_ones_10_6_reg_10491 & tmp_445_6_fu_7419_p2);

assign p_41_i_i1_7_fu_7508_p2 = (Range2_all_ones_10_7_reg_10538 & tmp_445_7_fu_7502_p2);

assign p_41_i_i1_8_fu_7591_p2 = (Range2_all_ones_10_8_reg_10585 & tmp_445_8_fu_7585_p2);

assign p_41_i_i1_9_fu_7674_p2 = (Range2_all_ones_10_9_reg_10632 & tmp_445_9_fu_7668_p2);

assign p_41_i_i1_fu_6927_p2 = (Range2_all_ones_10_reg_10209 & tmp_186_fu_6921_p2);

assign p_41_i_i1_s_fu_7840_p2 = (Range2_all_ones_10_10_reg_10726 & tmp_445_10_fu_7834_p2);

assign p_41_i_i_10_fu_5033_p2 = (Range2_all_ones_s_reg_9815 & tmp_430_s_fu_5027_p2);

assign p_41_i_i_11_fu_5116_p2 = (Range2_all_ones_11_reg_9862 & tmp_430_10_fu_5110_p2);

assign p_41_i_i_1_fu_4286_p2 = (Range2_all_ones_1_reg_9392 & tmp_430_1_fu_4280_p2);

assign p_41_i_i_2_fu_4369_p2 = (Range2_all_ones_2_reg_9439 & tmp_430_2_fu_4363_p2);

assign p_41_i_i_3_fu_4452_p2 = (Range2_all_ones_3_reg_9486 & tmp_430_3_fu_4446_p2);

assign p_41_i_i_4_fu_4535_p2 = (Range2_all_ones_4_reg_9533 & tmp_430_4_fu_4529_p2);

assign p_41_i_i_5_fu_4618_p2 = (Range2_all_ones_5_reg_9580 & tmp_430_5_fu_4612_p2);

assign p_41_i_i_6_fu_4701_p2 = (Range2_all_ones_6_reg_9627 & tmp_430_6_fu_4695_p2);

assign p_41_i_i_7_fu_4784_p2 = (Range2_all_ones_7_reg_9674 & tmp_430_7_fu_4778_p2);

assign p_41_i_i_8_fu_4867_p2 = (Range2_all_ones_8_reg_9721 & tmp_430_8_fu_4861_p2);

assign p_41_i_i_9_fu_4950_p2 = (Range2_all_ones_9_reg_9768 & tmp_430_9_fu_4944_p2);

assign p_41_i_i_fu_4203_p2 = (Range2_all_ones_reg_9345 & tmp_180_fu_4197_p2);

assign p_Result_246_10_fu_4147_p4 = {{p_Val2_130_10_fu_4086_p2[16:15]}};

assign p_Result_246_1_fu_3007_p4 = {{p_Val2_130_1_fu_2946_p2[16:15]}};

assign p_Result_246_2_fu_3121_p4 = {{p_Val2_130_2_fu_3060_p2[16:15]}};

assign p_Result_246_3_fu_3235_p4 = {{p_Val2_130_3_fu_3174_p2[16:15]}};

assign p_Result_246_4_fu_3349_p4 = {{p_Val2_130_4_fu_3288_p2[16:15]}};

assign p_Result_246_5_fu_3463_p4 = {{p_Val2_130_5_fu_3402_p2[16:15]}};

assign p_Result_246_6_fu_3577_p4 = {{p_Val2_130_6_fu_3516_p2[16:15]}};

assign p_Result_246_7_fu_3691_p4 = {{p_Val2_130_7_fu_3630_p2[16:15]}};

assign p_Result_246_8_fu_3805_p4 = {{p_Val2_130_8_fu_3744_p2[16:15]}};

assign p_Result_246_9_fu_3919_p4 = {{p_Val2_130_9_fu_3858_p2[16:15]}};

assign p_Result_246_s_fu_4033_p4 = {{p_Val2_130_s_fu_3972_p2[16:15]}};

assign p_Result_247_10_fu_4163_p4 = {{p_Val2_130_10_fu_4086_p2[16:14]}};

assign p_Result_247_1_fu_3023_p4 = {{p_Val2_130_1_fu_2946_p2[16:14]}};

assign p_Result_247_2_fu_3137_p4 = {{p_Val2_130_2_fu_3060_p2[16:14]}};

assign p_Result_247_3_fu_3251_p4 = {{p_Val2_130_3_fu_3174_p2[16:14]}};

assign p_Result_247_4_fu_3365_p4 = {{p_Val2_130_4_fu_3288_p2[16:14]}};

assign p_Result_247_5_fu_3479_p4 = {{p_Val2_130_5_fu_3402_p2[16:14]}};

assign p_Result_247_6_fu_3593_p4 = {{p_Val2_130_6_fu_3516_p2[16:14]}};

assign p_Result_247_7_fu_3707_p4 = {{p_Val2_130_7_fu_3630_p2[16:14]}};

assign p_Result_247_8_fu_3821_p4 = {{p_Val2_130_8_fu_3744_p2[16:14]}};

assign p_Result_247_9_fu_3935_p4 = {{p_Val2_130_9_fu_3858_p2[16:14]}};

assign p_Result_247_s_fu_4049_p4 = {{p_Val2_130_s_fu_3972_p2[16:14]}};

assign p_Result_248_10_fu_6871_p4 = {{p_Val2_135_10_fu_6810_p2[16:15]}};

assign p_Result_248_1_fu_5731_p4 = {{p_Val2_135_1_fu_5670_p2[16:15]}};

assign p_Result_248_2_fu_5845_p4 = {{p_Val2_135_2_fu_5784_p2[16:15]}};

assign p_Result_248_3_fu_5959_p4 = {{p_Val2_135_3_fu_5898_p2[16:15]}};

assign p_Result_248_4_fu_6073_p4 = {{p_Val2_135_4_fu_6012_p2[16:15]}};

assign p_Result_248_5_fu_6187_p4 = {{p_Val2_135_5_fu_6126_p2[16:15]}};

assign p_Result_248_6_fu_6301_p4 = {{p_Val2_135_6_fu_6240_p2[16:15]}};

assign p_Result_248_7_fu_6415_p4 = {{p_Val2_135_7_fu_6354_p2[16:15]}};

assign p_Result_248_8_fu_6529_p4 = {{p_Val2_135_8_fu_6468_p2[16:15]}};

assign p_Result_248_9_fu_6643_p4 = {{p_Val2_135_9_fu_6582_p2[16:15]}};

assign p_Result_248_s_fu_6757_p4 = {{p_Val2_135_s_fu_6696_p2[16:15]}};

assign p_Result_249_10_fu_6887_p4 = {{p_Val2_135_10_fu_6810_p2[16:14]}};

assign p_Result_249_1_fu_5747_p4 = {{p_Val2_135_1_fu_5670_p2[16:14]}};

assign p_Result_249_2_fu_5861_p4 = {{p_Val2_135_2_fu_5784_p2[16:14]}};

assign p_Result_249_3_fu_5975_p4 = {{p_Val2_135_3_fu_5898_p2[16:14]}};

assign p_Result_249_4_fu_6089_p4 = {{p_Val2_135_4_fu_6012_p2[16:14]}};

assign p_Result_249_5_fu_6203_p4 = {{p_Val2_135_5_fu_6126_p2[16:14]}};

assign p_Result_249_6_fu_6317_p4 = {{p_Val2_135_6_fu_6240_p2[16:14]}};

assign p_Result_249_7_fu_6431_p4 = {{p_Val2_135_7_fu_6354_p2[16:14]}};

assign p_Result_249_8_fu_6545_p4 = {{p_Val2_135_8_fu_6468_p2[16:14]}};

assign p_Result_249_9_fu_6659_p4 = {{p_Val2_135_9_fu_6582_p2[16:14]}};

assign p_Result_249_s_fu_6773_p4 = {{p_Val2_135_s_fu_6696_p2[16:14]}};

assign p_Result_26_fu_2909_p4 = {{p_Val2_s_fu_2832_p2[16:14]}};

assign p_Result_27_fu_5617_p4 = {{p_Val2_34_fu_5556_p2[16:15]}};

assign p_Result_28_fu_5633_p4 = {{p_Val2_34_fu_5556_p2[16:14]}};

assign p_Result_s_fu_2893_p4 = {{p_Val2_s_fu_2832_p2[16:15]}};

assign p_Val2_130_10_fu_4086_p2 = ($signed(tmp_420_10_fu_4083_p1) + $signed(tmp_419_10_cast_fu_4079_p1));

assign p_Val2_130_1_fu_2946_p2 = ($signed(tmp_420_1_fu_2943_p1) + $signed(tmp_419_1_cast_fu_2939_p1));

assign p_Val2_130_2_fu_3060_p2 = ($signed(tmp_420_2_fu_3057_p1) + $signed(tmp_419_2_cast_fu_3053_p1));

assign p_Val2_130_3_fu_3174_p2 = ($signed(tmp_420_3_fu_3171_p1) + $signed(tmp_419_3_cast_fu_3167_p1));

assign p_Val2_130_4_fu_3288_p2 = ($signed(tmp_420_4_fu_3285_p1) + $signed(tmp_419_4_cast_fu_3281_p1));

assign p_Val2_130_5_fu_3402_p2 = ($signed(tmp_420_5_fu_3399_p1) + $signed(tmp_419_5_cast_fu_3395_p1));

assign p_Val2_130_6_fu_3516_p2 = ($signed(tmp_420_6_fu_3513_p1) + $signed(tmp_419_6_cast_fu_3509_p1));

assign p_Val2_130_7_fu_3630_p2 = ($signed(tmp_420_7_fu_3627_p1) + $signed(tmp_419_7_cast_fu_3623_p1));

assign p_Val2_130_8_fu_3744_p2 = ($signed(tmp_420_8_fu_3741_p1) + $signed(tmp_419_8_cast_fu_3737_p1));

assign p_Val2_130_9_fu_3858_p2 = ($signed(tmp_420_9_fu_3855_p1) + $signed(tmp_419_9_cast_fu_3851_p1));

assign p_Val2_130_s_fu_3972_p2 = ($signed(tmp_420_s_fu_3969_p1) + $signed(tmp_419_cast_fu_3965_p1));

assign p_Val2_131_10_fu_4100_p4 = {{p_Val2_130_10_fu_4086_p2[13:6]}};

assign p_Val2_131_1_fu_2960_p4 = {{p_Val2_130_1_fu_2946_p2[13:6]}};

assign p_Val2_131_2_fu_3074_p4 = {{p_Val2_130_2_fu_3060_p2[13:6]}};

assign p_Val2_131_3_fu_3188_p4 = {{p_Val2_130_3_fu_3174_p2[13:6]}};

assign p_Val2_131_4_fu_3302_p4 = {{p_Val2_130_4_fu_3288_p2[13:6]}};

assign p_Val2_131_5_fu_3416_p4 = {{p_Val2_130_5_fu_3402_p2[13:6]}};

assign p_Val2_131_6_fu_3530_p4 = {{p_Val2_130_6_fu_3516_p2[13:6]}};

assign p_Val2_131_7_fu_3644_p4 = {{p_Val2_130_7_fu_3630_p2[13:6]}};

assign p_Val2_131_8_fu_3758_p4 = {{p_Val2_130_8_fu_3744_p2[13:6]}};

assign p_Val2_131_9_fu_3872_p4 = {{p_Val2_130_9_fu_3858_p2[13:6]}};

assign p_Val2_131_s_fu_3986_p4 = {{p_Val2_130_s_fu_3972_p2[13:6]}};

assign p_Val2_132_10_405_fu_5526_p3 = ((underflow_11_reg_10169[0:0] === 1'b1) ? 8'd128 : p_Val2_132_10_reg_9843);

assign p_Val2_132_10_fu_4121_p2 = (tmp_423_10_fu_4110_p1 + p_Val2_131_10_fu_4100_p4);

assign p_Val2_132_1_385_fu_5226_p3 = ((underflow_1_reg_9919[0:0] === 1'b1) ? 8'd128 : p_Val2_132_1_reg_9373);

assign p_Val2_132_1_fu_2981_p2 = (tmp_423_1_fu_2970_p1 + p_Val2_131_1_fu_2960_p4);

assign p_Val2_132_2_387_fu_5256_p3 = ((underflow_2_reg_9944[0:0] === 1'b1) ? 8'd128 : p_Val2_132_2_reg_9420);

assign p_Val2_132_2_fu_3095_p2 = (tmp_423_2_fu_3084_p1 + p_Val2_131_2_fu_3074_p4);

assign p_Val2_132_3_389_fu_5286_p3 = ((underflow_3_reg_9969[0:0] === 1'b1) ? 8'd128 : p_Val2_132_3_reg_9467);

assign p_Val2_132_3_fu_3209_p2 = (tmp_423_3_fu_3198_p1 + p_Val2_131_3_fu_3188_p4);

assign p_Val2_132_4_391_fu_5316_p3 = ((underflow_4_reg_9994[0:0] === 1'b1) ? 8'd128 : p_Val2_132_4_reg_9514);

assign p_Val2_132_4_fu_3323_p2 = (tmp_423_4_fu_3312_p1 + p_Val2_131_4_fu_3302_p4);

assign p_Val2_132_5_393_fu_5346_p3 = ((underflow_5_reg_10019[0:0] === 1'b1) ? 8'd128 : p_Val2_132_5_reg_9561);

assign p_Val2_132_5_fu_3437_p2 = (tmp_423_5_fu_3426_p1 + p_Val2_131_5_fu_3416_p4);

assign p_Val2_132_6_395_fu_5376_p3 = ((underflow_6_reg_10044[0:0] === 1'b1) ? 8'd128 : p_Val2_132_6_reg_9608);

assign p_Val2_132_6_fu_3551_p2 = (tmp_423_6_fu_3540_p1 + p_Val2_131_6_fu_3530_p4);

assign p_Val2_132_7_397_fu_5406_p3 = ((underflow_7_reg_10069[0:0] === 1'b1) ? 8'd128 : p_Val2_132_7_reg_9655);

assign p_Val2_132_7_fu_3665_p2 = (tmp_423_7_fu_3654_p1 + p_Val2_131_7_fu_3644_p4);

assign p_Val2_132_8_399_fu_5436_p3 = ((underflow_8_reg_10094[0:0] === 1'b1) ? 8'd128 : p_Val2_132_8_reg_9702);

assign p_Val2_132_8_fu_3779_p2 = (tmp_423_8_fu_3768_p1 + p_Val2_131_8_fu_3758_p4);

assign p_Val2_132_9_401_fu_5466_p3 = ((underflow_9_reg_10119[0:0] === 1'b1) ? 8'd128 : p_Val2_132_9_reg_9749);

assign p_Val2_132_9_fu_3893_p2 = (tmp_423_9_fu_3882_p1 + p_Val2_131_9_fu_3872_p4);

assign p_Val2_132_mux_10_fu_5520_p3 = ((brmerge_i_i_i_11_reg_10174[0:0] === 1'b1) ? 8'd127 : p_Val2_132_10_reg_9843);

assign p_Val2_132_mux_1_fu_5220_p3 = ((brmerge_i_i_i_1_reg_9924[0:0] === 1'b1) ? 8'd127 : p_Val2_132_1_reg_9373);

assign p_Val2_132_mux_2_fu_5250_p3 = ((brmerge_i_i_i_2_reg_9949[0:0] === 1'b1) ? 8'd127 : p_Val2_132_2_reg_9420);

assign p_Val2_132_mux_3_fu_5280_p3 = ((brmerge_i_i_i_3_reg_9974[0:0] === 1'b1) ? 8'd127 : p_Val2_132_3_reg_9467);

assign p_Val2_132_mux_4_fu_5310_p3 = ((brmerge_i_i_i_4_reg_9999[0:0] === 1'b1) ? 8'd127 : p_Val2_132_4_reg_9514);

assign p_Val2_132_mux_5_fu_5340_p3 = ((brmerge_i_i_i_5_reg_10024[0:0] === 1'b1) ? 8'd127 : p_Val2_132_5_reg_9561);

assign p_Val2_132_mux_6_fu_5370_p3 = ((brmerge_i_i_i_6_reg_10049[0:0] === 1'b1) ? 8'd127 : p_Val2_132_6_reg_9608);

assign p_Val2_132_mux_7_fu_5400_p3 = ((brmerge_i_i_i_7_reg_10074[0:0] === 1'b1) ? 8'd127 : p_Val2_132_7_reg_9655);

assign p_Val2_132_mux_8_fu_5430_p3 = ((brmerge_i_i_i_8_reg_10099[0:0] === 1'b1) ? 8'd127 : p_Val2_132_8_reg_9702);

assign p_Val2_132_mux_9_fu_5460_p3 = ((brmerge_i_i_i_9_reg_10124[0:0] === 1'b1) ? 8'd127 : p_Val2_132_9_reg_9749);

assign p_Val2_132_mux_fu_5190_p3 = ((brmerge_i_i_i_reg_9899[0:0] === 1'b1) ? 8'd127 : p_Val2_33_reg_9326);

assign p_Val2_132_mux_s_fu_5490_p3 = ((brmerge_i_i_i_10_reg_10149[0:0] === 1'b1) ? 8'd127 : p_Val2_132_s_reg_9796);

assign p_Val2_132_s_403_fu_5496_p3 = ((underflow_10_reg_10144[0:0] === 1'b1) ? 8'd128 : p_Val2_132_s_reg_9796);

assign p_Val2_132_s_fu_4007_p2 = (tmp_423_s_fu_3996_p1 + p_Val2_131_s_fu_3986_p4);

assign p_Val2_135_10_fu_6810_p2 = ($signed(tmp_435_10_fu_6807_p1) + $signed(tmp_434_10_cast_fu_6803_p1));

assign p_Val2_135_1_fu_5670_p2 = ($signed(tmp_435_1_fu_5667_p1) + $signed(tmp_434_1_cast_fu_5663_p1));

assign p_Val2_135_2_fu_5784_p2 = ($signed(tmp_435_2_fu_5781_p1) + $signed(tmp_434_2_cast_fu_5777_p1));

assign p_Val2_135_3_fu_5898_p2 = ($signed(tmp_435_3_fu_5895_p1) + $signed(tmp_434_3_cast_fu_5891_p1));

assign p_Val2_135_4_fu_6012_p2 = ($signed(tmp_435_4_fu_6009_p1) + $signed(tmp_434_4_cast_fu_6005_p1));

assign p_Val2_135_5_fu_6126_p2 = ($signed(tmp_435_5_fu_6123_p1) + $signed(tmp_434_5_cast_fu_6119_p1));

assign p_Val2_135_6_fu_6240_p2 = ($signed(tmp_435_6_fu_6237_p1) + $signed(tmp_434_6_cast_fu_6233_p1));

assign p_Val2_135_7_fu_6354_p2 = ($signed(tmp_435_7_fu_6351_p1) + $signed(tmp_434_7_cast_fu_6347_p1));

assign p_Val2_135_8_fu_6468_p2 = ($signed(tmp_435_8_fu_6465_p1) + $signed(tmp_434_8_cast_fu_6461_p1));

assign p_Val2_135_9_fu_6582_p2 = ($signed(tmp_435_9_fu_6579_p1) + $signed(tmp_434_9_cast_fu_6575_p1));

assign p_Val2_135_s_fu_6696_p2 = ($signed(tmp_435_s_fu_6693_p1) + $signed(tmp_434_cast_fu_6689_p1));

assign p_Val2_136_10_fu_6824_p4 = {{p_Val2_135_10_fu_6810_p2[13:6]}};

assign p_Val2_136_1_fu_5684_p4 = {{p_Val2_135_1_fu_5670_p2[13:6]}};

assign p_Val2_136_2_fu_5798_p4 = {{p_Val2_135_2_fu_5784_p2[13:6]}};

assign p_Val2_136_3_fu_5912_p4 = {{p_Val2_135_3_fu_5898_p2[13:6]}};

assign p_Val2_136_4_fu_6026_p4 = {{p_Val2_135_4_fu_6012_p2[13:6]}};

assign p_Val2_136_5_fu_6140_p4 = {{p_Val2_135_5_fu_6126_p2[13:6]}};

assign p_Val2_136_6_fu_6254_p4 = {{p_Val2_135_6_fu_6240_p2[13:6]}};

assign p_Val2_136_7_fu_6368_p4 = {{p_Val2_135_7_fu_6354_p2[13:6]}};

assign p_Val2_136_8_fu_6482_p4 = {{p_Val2_135_8_fu_6468_p2[13:6]}};

assign p_Val2_136_9_fu_6596_p4 = {{p_Val2_135_9_fu_6582_p2[13:6]}};

assign p_Val2_136_s_fu_6710_p4 = {{p_Val2_135_s_fu_6696_p2[13:6]}};

assign p_Val2_137_10_406_fu_8250_p3 = ((underflow_19_10_reg_11033[0:0] === 1'b1) ? 8'd128 : p_Val2_137_10_reg_10707);

assign p_Val2_137_10_fu_6845_p2 = (tmp_438_10_fu_6834_p1 + p_Val2_136_10_fu_6824_p4);

assign p_Val2_137_1_386_fu_7950_p3 = ((underflow_19_1_reg_10783[0:0] === 1'b1) ? 8'd128 : p_Val2_137_1_reg_10237);

assign p_Val2_137_1_fu_5705_p2 = (tmp_438_1_fu_5694_p1 + p_Val2_136_1_fu_5684_p4);

assign p_Val2_137_2_388_fu_7980_p3 = ((underflow_19_2_reg_10808[0:0] === 1'b1) ? 8'd128 : p_Val2_137_2_reg_10284);

assign p_Val2_137_2_fu_5819_p2 = (tmp_438_2_fu_5808_p1 + p_Val2_136_2_fu_5798_p4);

assign p_Val2_137_3_390_fu_8010_p3 = ((underflow_19_3_reg_10833[0:0] === 1'b1) ? 8'd128 : p_Val2_137_3_reg_10331);

assign p_Val2_137_3_fu_5933_p2 = (tmp_438_3_fu_5922_p1 + p_Val2_136_3_fu_5912_p4);

assign p_Val2_137_4_392_fu_8040_p3 = ((underflow_19_4_reg_10858[0:0] === 1'b1) ? 8'd128 : p_Val2_137_4_reg_10378);

assign p_Val2_137_4_fu_6047_p2 = (tmp_438_4_fu_6036_p1 + p_Val2_136_4_fu_6026_p4);

assign p_Val2_137_5_394_fu_8070_p3 = ((underflow_19_5_reg_10883[0:0] === 1'b1) ? 8'd128 : p_Val2_137_5_reg_10425);

assign p_Val2_137_5_fu_6161_p2 = (tmp_438_5_fu_6150_p1 + p_Val2_136_5_fu_6140_p4);

assign p_Val2_137_6_396_fu_8100_p3 = ((underflow_19_6_reg_10908[0:0] === 1'b1) ? 8'd128 : p_Val2_137_6_reg_10472);

assign p_Val2_137_6_fu_6275_p2 = (tmp_438_6_fu_6264_p1 + p_Val2_136_6_fu_6254_p4);

assign p_Val2_137_7_398_fu_8130_p3 = ((underflow_19_7_reg_10933[0:0] === 1'b1) ? 8'd128 : p_Val2_137_7_reg_10519);

assign p_Val2_137_7_fu_6389_p2 = (tmp_438_7_fu_6378_p1 + p_Val2_136_7_fu_6368_p4);

assign p_Val2_137_8_400_fu_8160_p3 = ((underflow_19_8_reg_10958[0:0] === 1'b1) ? 8'd128 : p_Val2_137_8_reg_10566);

assign p_Val2_137_8_fu_6503_p2 = (tmp_438_8_fu_6492_p1 + p_Val2_136_8_fu_6482_p4);

assign p_Val2_137_9_402_fu_8190_p3 = ((underflow_19_9_reg_10983[0:0] === 1'b1) ? 8'd128 : p_Val2_137_9_reg_10613);

assign p_Val2_137_9_fu_6617_p2 = (tmp_438_9_fu_6606_p1 + p_Val2_136_9_fu_6596_p4);

assign p_Val2_137_mux_10_fu_8244_p3 = ((brmerge_i_i_i1_s_reg_11038[0:0] === 1'b1) ? 8'd127 : p_Val2_137_10_reg_10707);

assign p_Val2_137_mux_1_fu_7944_p3 = ((brmerge_i_i_i1_1_reg_10788[0:0] === 1'b1) ? 8'd127 : p_Val2_137_1_reg_10237);

assign p_Val2_137_mux_2_fu_7974_p3 = ((brmerge_i_i_i1_2_reg_10813[0:0] === 1'b1) ? 8'd127 : p_Val2_137_2_reg_10284);

assign p_Val2_137_mux_3_fu_8004_p3 = ((brmerge_i_i_i1_3_reg_10838[0:0] === 1'b1) ? 8'd127 : p_Val2_137_3_reg_10331);

assign p_Val2_137_mux_4_fu_8034_p3 = ((brmerge_i_i_i1_4_reg_10863[0:0] === 1'b1) ? 8'd127 : p_Val2_137_4_reg_10378);

assign p_Val2_137_mux_5_fu_8064_p3 = ((brmerge_i_i_i1_5_reg_10888[0:0] === 1'b1) ? 8'd127 : p_Val2_137_5_reg_10425);

assign p_Val2_137_mux_6_fu_8094_p3 = ((brmerge_i_i_i1_6_reg_10913[0:0] === 1'b1) ? 8'd127 : p_Val2_137_6_reg_10472);

assign p_Val2_137_mux_7_fu_8124_p3 = ((brmerge_i_i_i1_7_reg_10938[0:0] === 1'b1) ? 8'd127 : p_Val2_137_7_reg_10519);

assign p_Val2_137_mux_8_fu_8154_p3 = ((brmerge_i_i_i1_8_reg_10963[0:0] === 1'b1) ? 8'd127 : p_Val2_137_8_reg_10566);

assign p_Val2_137_mux_9_fu_8184_p3 = ((brmerge_i_i_i1_9_reg_10988[0:0] === 1'b1) ? 8'd127 : p_Val2_137_9_reg_10613);

assign p_Val2_137_mux_fu_7914_p3 = ((brmerge_i_i_i1_reg_10763[0:0] === 1'b1) ? 8'd127 : p_Val2_36_reg_10190);

assign p_Val2_137_mux_s_fu_8214_p3 = ((brmerge_i_i_i1_10_reg_11013[0:0] === 1'b1) ? 8'd127 : p_Val2_137_s_reg_10660);

assign p_Val2_137_s_404_fu_8220_p3 = ((underflow_19_s_reg_11008[0:0] === 1'b1) ? 8'd128 : p_Val2_137_s_reg_10660);

assign p_Val2_137_s_fu_6731_p2 = (tmp_438_s_fu_6720_p1 + p_Val2_136_s_fu_6710_p4);

assign p_Val2_1_fu_7920_p3 = ((underflow_19_reg_10758[0:0] === 1'b1) ? 8'd128 : p_Val2_36_reg_10190);

assign p_Val2_32_fu_2846_p4 = {{p_Val2_s_fu_2832_p2[13:6]}};

assign p_Val2_33_fu_2867_p2 = (tmp_178_fu_2856_p1 + p_Val2_32_fu_2846_p4);

assign p_Val2_34_fu_5556_p2 = ($signed(tmp_183_fu_5553_p1) + $signed(tmp_281_cast_fu_5549_p1));

assign p_Val2_35_fu_5570_p4 = {{p_Val2_34_fu_5556_p2[13:6]}};

assign p_Val2_36_fu_5591_p2 = (tmp_184_fu_5580_p1 + p_Val2_35_fu_5570_p4);

assign p_Val2_s_384_fu_5196_p3 = ((underflow_reg_9894[0:0] === 1'b1) ? 8'd128 : p_Val2_33_reg_9326);

assign p_Val2_s_fu_2832_p2 = ($signed(tmp_177_fu_2829_p1) + $signed(tmp_272_cast_fu_2825_p1));

assign p_cast_cast_fu_1872_p1 = p_mid2_reg_8608;

assign p_cast_fu_1869_p1 = p_mid2_reg_8608;

assign p_mid2_fu_1795_p3 = ((tmp_1621_fu_1790_p2[0:0] === 1'b1) ? 2'd0 : p_phi_fu_1166_p4);

assign p_not_i_i1_10_fu_7772_p2 = (deleted_zeros_10_s_fu_7746_p3 ^ 1'd1);

assign p_not_i_i1_1_fu_7025_p2 = (deleted_zeros_10_1_fu_6999_p3 ^ 1'd1);

assign p_not_i_i1_2_fu_7108_p2 = (deleted_zeros_10_2_fu_7082_p3 ^ 1'd1);

assign p_not_i_i1_3_fu_7191_p2 = (deleted_zeros_10_3_fu_7165_p3 ^ 1'd1);

assign p_not_i_i1_4_fu_7274_p2 = (deleted_zeros_10_4_fu_7248_p3 ^ 1'd1);

assign p_not_i_i1_5_fu_7357_p2 = (deleted_zeros_10_5_fu_7331_p3 ^ 1'd1);

assign p_not_i_i1_6_fu_7440_p2 = (deleted_zeros_10_6_fu_7414_p3 ^ 1'd1);

assign p_not_i_i1_7_fu_7523_p2 = (deleted_zeros_10_7_fu_7497_p3 ^ 1'd1);

assign p_not_i_i1_8_fu_7606_p2 = (deleted_zeros_10_8_fu_7580_p3 ^ 1'd1);

assign p_not_i_i1_9_fu_7689_p2 = (deleted_zeros_10_9_fu_7663_p3 ^ 1'd1);

assign p_not_i_i1_fu_6942_p2 = (deleted_zeros_10_fu_6916_p3 ^ 1'd1);

assign p_not_i_i1_s_fu_7855_p2 = (deleted_zeros_10_10_fu_7829_p3 ^ 1'd1);

assign p_not_i_i_10_fu_5048_p2 = (deleted_zeros_s_fu_5022_p3 ^ 1'd1);

assign p_not_i_i_11_fu_5131_p2 = (deleted_zeros_11_fu_5105_p3 ^ 1'd1);

assign p_not_i_i_1_fu_4301_p2 = (deleted_zeros_1_fu_4275_p3 ^ 1'd1);

assign p_not_i_i_2_fu_4384_p2 = (deleted_zeros_2_fu_4358_p3 ^ 1'd1);

assign p_not_i_i_3_fu_4467_p2 = (deleted_zeros_3_fu_4441_p3 ^ 1'd1);

assign p_not_i_i_4_fu_4550_p2 = (deleted_zeros_4_fu_4524_p3 ^ 1'd1);

assign p_not_i_i_5_fu_4633_p2 = (deleted_zeros_5_fu_4607_p3 ^ 1'd1);

assign p_not_i_i_6_fu_4716_p2 = (deleted_zeros_6_fu_4690_p3 ^ 1'd1);

assign p_not_i_i_7_fu_4799_p2 = (deleted_zeros_7_fu_4773_p3 ^ 1'd1);

assign p_not_i_i_8_fu_4882_p2 = (deleted_zeros_8_fu_4856_p3 ^ 1'd1);

assign p_not_i_i_9_fu_4965_p2 = (deleted_zeros_9_fu_4939_p3 ^ 1'd1);

assign p_not_i_i_fu_4218_p2 = (deleted_zeros_fu_4192_p3 ^ 1'd1);

assign p_shl13_cast_fu_2151_p1 = tmp_629_fu_2143_p3;

assign p_shl14_cast_fu_2163_p1 = tmp_630_fu_2155_p3;

assign p_shl15_cast_fu_2495_p3 = {{tmp_654_reg_8940}, {2'd0}};

assign p_shl16_cast_fu_2435_p3 = {{tmp_1637_fu_2431_p1}, {2'd0}};

assign p_shl17_cast_fu_2408_p1 = tmp_648_fu_2400_p3;

assign p_shl18_cast_fu_2364_p3 = {{tmp_645_fu_2359_p2}, {5'd0}};

assign p_shl19_cast_fu_2380_p1 = tmp_1636_fu_2372_p3;

assign p_shl20_cast_fu_2337_p1 = tmp_642_fu_2329_p3;

assign p_shl21_cast_fu_2349_p1 = tmp_643_fu_2341_p3;

assign p_shl22_cast_fu_8441_p3 = {{tmp_1633_fu_8437_p1}, {5'd0}};

assign p_shl23_cast_fu_8457_p1 = tmp_1634_fu_8449_p3;

assign p_shl24_cast_fu_8403_p1 = $unsigned(tmp_635_fu_8399_p1);

assign p_shl25_cast_fu_8418_p1 = $unsigned(tmp_636_fu_8414_p1);

assign p_shl2_fu_1753_p1 = $signed(tmp_1620_fu_1745_p3);

assign p_shl3_fu_1725_p1 = $signed(tmp_1619_fu_1717_p3);

assign p_shl4_cast_fu_1672_p1 = $unsigned(tmp_608_fu_1668_p1);

assign p_shl5_cast_fu_1635_p1 = tmp_606_fu_1628_p3;

assign p_shl6_cast_fu_2093_p3 = {{tmp_1628_fu_2089_p1}, {5'd0}};

assign p_shl7_cast_fu_2109_p1 = tmp_1629_fu_2101_p3;

assign p_shl8_cast_fu_2055_p1 = $unsigned(tmp_622_fu_2051_p1);

assign p_shl9_cast_fu_2070_p1 = $unsigned(tmp_623_fu_2066_p1);

assign p_shl_cast_fu_1857_p3 = {{tmp_1624_reg_8630}, {2'd0}};

assign sum_fu_1881_p2 = (tmp_620_fu_1875_p2 + conv1_weight_V3);

assign this_assign_1_10_fu_5502_p3 = ((underflow_not_10_fu_5485_p2[0:0] === 1'b1) ? p_Val2_132_mux_s_fu_5490_p3 : p_Val2_132_s_403_fu_5496_p3);

assign this_assign_1_11_fu_5532_p3 = ((underflow_not_11_fu_5515_p2[0:0] === 1'b1) ? p_Val2_132_mux_10_fu_5520_p3 : p_Val2_132_10_405_fu_5526_p3);

assign this_assign_1_1_fu_5232_p3 = ((underflow_not_1_fu_5215_p2[0:0] === 1'b1) ? p_Val2_132_mux_1_fu_5220_p3 : p_Val2_132_1_385_fu_5226_p3);

assign this_assign_1_2_fu_5262_p3 = ((underflow_not_2_fu_5245_p2[0:0] === 1'b1) ? p_Val2_132_mux_2_fu_5250_p3 : p_Val2_132_2_387_fu_5256_p3);

assign this_assign_1_3_fu_5292_p3 = ((underflow_not_3_fu_5275_p2[0:0] === 1'b1) ? p_Val2_132_mux_3_fu_5280_p3 : p_Val2_132_3_389_fu_5286_p3);

assign this_assign_1_4_fu_5322_p3 = ((underflow_not_4_fu_5305_p2[0:0] === 1'b1) ? p_Val2_132_mux_4_fu_5310_p3 : p_Val2_132_4_391_fu_5316_p3);

assign this_assign_1_5_fu_5352_p3 = ((underflow_not_5_fu_5335_p2[0:0] === 1'b1) ? p_Val2_132_mux_5_fu_5340_p3 : p_Val2_132_5_393_fu_5346_p3);

assign this_assign_1_6_fu_5382_p3 = ((underflow_not_6_fu_5365_p2[0:0] === 1'b1) ? p_Val2_132_mux_6_fu_5370_p3 : p_Val2_132_6_395_fu_5376_p3);

assign this_assign_1_7_fu_5412_p3 = ((underflow_not_7_fu_5395_p2[0:0] === 1'b1) ? p_Val2_132_mux_7_fu_5400_p3 : p_Val2_132_7_397_fu_5406_p3);

assign this_assign_1_8_fu_5442_p3 = ((underflow_not_8_fu_5425_p2[0:0] === 1'b1) ? p_Val2_132_mux_8_fu_5430_p3 : p_Val2_132_8_399_fu_5436_p3);

assign this_assign_1_9_fu_5472_p3 = ((underflow_not_9_fu_5455_p2[0:0] === 1'b1) ? p_Val2_132_mux_9_fu_5460_p3 : p_Val2_132_9_401_fu_5466_p3);

assign this_assign_1_fu_5202_p3 = ((underflow_not_fu_5185_p2[0:0] === 1'b1) ? p_Val2_132_mux_fu_5190_p3 : p_Val2_s_384_fu_5196_p3);

assign this_assign_54_1_10_fu_8256_p3 = ((underflow_19_not_10_fu_8239_p2[0:0] === 1'b1) ? p_Val2_137_mux_10_fu_8244_p3 : p_Val2_137_10_406_fu_8250_p3);

assign this_assign_54_1_1_fu_7956_p3 = ((underflow_19_not_1_fu_7939_p2[0:0] === 1'b1) ? p_Val2_137_mux_1_fu_7944_p3 : p_Val2_137_1_386_fu_7950_p3);

assign this_assign_54_1_2_fu_7986_p3 = ((underflow_19_not_2_fu_7969_p2[0:0] === 1'b1) ? p_Val2_137_mux_2_fu_7974_p3 : p_Val2_137_2_388_fu_7980_p3);

assign this_assign_54_1_3_fu_8016_p3 = ((underflow_19_not_3_fu_7999_p2[0:0] === 1'b1) ? p_Val2_137_mux_3_fu_8004_p3 : p_Val2_137_3_390_fu_8010_p3);

assign this_assign_54_1_4_fu_8046_p3 = ((underflow_19_not_4_fu_8029_p2[0:0] === 1'b1) ? p_Val2_137_mux_4_fu_8034_p3 : p_Val2_137_4_392_fu_8040_p3);

assign this_assign_54_1_5_fu_8076_p3 = ((underflow_19_not_5_fu_8059_p2[0:0] === 1'b1) ? p_Val2_137_mux_5_fu_8064_p3 : p_Val2_137_5_394_fu_8070_p3);

assign this_assign_54_1_6_fu_8106_p3 = ((underflow_19_not_6_fu_8089_p2[0:0] === 1'b1) ? p_Val2_137_mux_6_fu_8094_p3 : p_Val2_137_6_396_fu_8100_p3);

assign this_assign_54_1_7_fu_8136_p3 = ((underflow_19_not_7_fu_8119_p2[0:0] === 1'b1) ? p_Val2_137_mux_7_fu_8124_p3 : p_Val2_137_7_398_fu_8130_p3);

assign this_assign_54_1_8_fu_8166_p3 = ((underflow_19_not_8_fu_8149_p2[0:0] === 1'b1) ? p_Val2_137_mux_8_fu_8154_p3 : p_Val2_137_8_400_fu_8160_p3);

assign this_assign_54_1_9_fu_8196_p3 = ((underflow_19_not_9_fu_8179_p2[0:0] === 1'b1) ? p_Val2_137_mux_9_fu_8184_p3 : p_Val2_137_9_402_fu_8190_p3);

assign this_assign_54_1_fu_7926_p3 = ((underflow_19_not_fu_7909_p2[0:0] === 1'b1) ? p_Val2_137_mux_fu_7914_p3 : p_Val2_1_fu_7920_p3);

assign this_assign_54_1_s_fu_8226_p3 = ((underflow_19_not_s_fu_8209_p2[0:0] === 1'b1) ? p_Val2_137_mux_s_fu_8214_p3 : p_Val2_137_s_404_fu_8220_p3);

assign tmp10_fu_7935_p2 = (brmerge40_demorgan_i_220_reg_10778 | tmp_447_1_reg_10773);

assign tmp11_demorgan_fu_4411_p2 = (p_38_i_i_2_fu_4380_p2 | brmerge40_demorgan_i_221_fu_4406_p2);

assign tmp11_fu_4417_p2 = (tmp11_demorgan_fu_4411_p2 ^ 1'd1);

assign tmp12_fu_5241_p2 = (brmerge40_demorgan_i_221_reg_9939 | tmp_432_2_reg_9934);

assign tmp13_demorgan_fu_7135_p2 = (p_38_i_i1_2_fu_7104_p2 | brmerge40_demorgan_i_222_fu_7130_p2);

assign tmp13_fu_7141_p2 = (tmp13_demorgan_fu_7135_p2 ^ 1'd1);

assign tmp14_fu_7965_p2 = (brmerge40_demorgan_i_222_reg_10803 | tmp_447_2_reg_10798);

assign tmp15_demorgan_fu_4494_p2 = (p_38_i_i_3_fu_4463_p2 | brmerge40_demorgan_i_223_fu_4489_p2);

assign tmp15_fu_4500_p2 = (tmp15_demorgan_fu_4494_p2 ^ 1'd1);

assign tmp16_fu_5271_p2 = (brmerge40_demorgan_i_223_reg_9964 | tmp_432_3_reg_9959);

assign tmp17_demorgan_fu_7218_p2 = (p_38_i_i1_3_fu_7187_p2 | brmerge40_demorgan_i_224_fu_7213_p2);

assign tmp17_fu_7224_p2 = (tmp17_demorgan_fu_7218_p2 ^ 1'd1);

assign tmp18_fu_7995_p2 = (brmerge40_demorgan_i_224_reg_10828 | tmp_447_3_reg_10823);

assign tmp19_demorgan_fu_4577_p2 = (p_38_i_i_4_fu_4546_p2 | brmerge40_demorgan_i_225_fu_4572_p2);

assign tmp19_fu_4583_p2 = (tmp19_demorgan_fu_4577_p2 ^ 1'd1);

assign tmp1_cast_fu_2269_p1 = $signed(tmp1_fu_2263_p2);

assign tmp1_fu_2263_p2 = ($signed(m_reg_1255) + $signed(2'd3));

assign tmp20_fu_5301_p2 = (brmerge40_demorgan_i_225_reg_9989 | tmp_432_4_reg_9984);

assign tmp21_demorgan_fu_7301_p2 = (p_38_i_i1_4_fu_7270_p2 | brmerge40_demorgan_i_226_fu_7296_p2);

assign tmp21_fu_7307_p2 = (tmp21_demorgan_fu_7301_p2 ^ 1'd1);

assign tmp22_fu_8025_p2 = (brmerge40_demorgan_i_226_reg_10853 | tmp_447_4_reg_10848);

assign tmp23_demorgan_fu_4660_p2 = (p_38_i_i_5_fu_4629_p2 | brmerge40_demorgan_i_227_fu_4655_p2);

assign tmp23_fu_4666_p2 = (tmp23_demorgan_fu_4660_p2 ^ 1'd1);

assign tmp24_fu_5331_p2 = (brmerge40_demorgan_i_227_reg_10014 | tmp_432_5_reg_10009);

assign tmp25_demorgan_fu_7384_p2 = (p_38_i_i1_5_fu_7353_p2 | brmerge40_demorgan_i_228_fu_7379_p2);

assign tmp25_fu_7390_p2 = (tmp25_demorgan_fu_7384_p2 ^ 1'd1);

assign tmp26_fu_8055_p2 = (brmerge40_demorgan_i_228_reg_10878 | tmp_447_5_reg_10873);

assign tmp27_demorgan_fu_4743_p2 = (p_38_i_i_6_fu_4712_p2 | brmerge40_demorgan_i_229_fu_4738_p2);

assign tmp27_fu_4749_p2 = (tmp27_demorgan_fu_4743_p2 ^ 1'd1);

assign tmp28_fu_5361_p2 = (brmerge40_demorgan_i_229_reg_10039 | tmp_432_6_reg_10034);

assign tmp29_demorgan_fu_7467_p2 = (p_38_i_i1_6_fu_7436_p2 | brmerge40_demorgan_i_230_fu_7462_p2);

assign tmp29_fu_7473_p2 = (tmp29_demorgan_fu_7467_p2 ^ 1'd1);

assign tmp2_cast_fu_2311_p1 = $signed(tmp2_fu_2305_p2);

assign tmp2_fu_2305_p2 = ($signed(n_reg_1266) + $signed(2'd3));

assign tmp30_fu_8085_p2 = (brmerge40_demorgan_i_230_reg_10903 | tmp_447_6_reg_10898);

assign tmp31_demorgan_fu_4826_p2 = (p_38_i_i_7_fu_4795_p2 | brmerge40_demorgan_i_231_fu_4821_p2);

assign tmp31_fu_4832_p2 = (tmp31_demorgan_fu_4826_p2 ^ 1'd1);

assign tmp32_fu_5391_p2 = (brmerge40_demorgan_i_231_reg_10064 | tmp_432_7_reg_10059);

assign tmp33_demorgan_fu_7550_p2 = (p_38_i_i1_7_fu_7519_p2 | brmerge40_demorgan_i_232_fu_7545_p2);

assign tmp33_fu_7556_p2 = (tmp33_demorgan_fu_7550_p2 ^ 1'd1);

assign tmp34_fu_8115_p2 = (brmerge40_demorgan_i_232_reg_10928 | tmp_447_7_reg_10923);

assign tmp35_demorgan_fu_4909_p2 = (p_38_i_i_8_fu_4878_p2 | brmerge40_demorgan_i_233_fu_4904_p2);

assign tmp35_fu_4915_p2 = (tmp35_demorgan_fu_4909_p2 ^ 1'd1);

assign tmp36_fu_5421_p2 = (brmerge40_demorgan_i_233_reg_10089 | tmp_432_8_reg_10084);

assign tmp37_demorgan_fu_7633_p2 = (p_38_i_i1_8_fu_7602_p2 | brmerge40_demorgan_i_234_fu_7628_p2);

assign tmp37_fu_7639_p2 = (tmp37_demorgan_fu_7633_p2 ^ 1'd1);

assign tmp38_fu_8145_p2 = (brmerge40_demorgan_i_234_reg_10953 | tmp_447_8_reg_10948);

assign tmp39_demorgan_fu_4992_p2 = (p_38_i_i_9_fu_4961_p2 | brmerge40_demorgan_i_235_fu_4987_p2);

assign tmp39_fu_4998_p2 = (tmp39_demorgan_fu_4992_p2 ^ 1'd1);

assign tmp3_demorgan_fu_4245_p2 = (p_38_i_i_fu_4214_p2 | brmerge40_demorgan_i_fu_4240_p2);

assign tmp3_fu_4251_p2 = (tmp3_demorgan_fu_4245_p2 ^ 1'd1);

assign tmp40_fu_5451_p2 = (brmerge40_demorgan_i_235_reg_10114 | tmp_432_9_reg_10109);

assign tmp41_demorgan_fu_7716_p2 = (p_38_i_i1_9_fu_7685_p2 | brmerge40_demorgan_i_236_fu_7711_p2);

assign tmp41_fu_7722_p2 = (tmp41_demorgan_fu_7716_p2 ^ 1'd1);

assign tmp42_fu_8175_p2 = (brmerge40_demorgan_i_236_reg_10978 | tmp_447_9_reg_10973);

assign tmp43_demorgan_fu_5075_p2 = (p_38_i_i_10_fu_5044_p2 | brmerge40_demorgan_i_237_fu_5070_p2);

assign tmp43_fu_5081_p2 = (tmp43_demorgan_fu_5075_p2 ^ 1'd1);

assign tmp44_fu_5481_p2 = (brmerge40_demorgan_i_237_reg_10139 | tmp_432_s_reg_10134);

assign tmp45_demorgan_fu_7799_p2 = (p_38_i_i1_10_fu_7768_p2 | brmerge40_demorgan_i_238_fu_7794_p2);

assign tmp45_fu_7805_p2 = (tmp45_demorgan_fu_7799_p2 ^ 1'd1);

assign tmp46_fu_8205_p2 = (brmerge40_demorgan_i_238_reg_11003 | tmp_447_s_reg_10998);

assign tmp47_demorgan_fu_5158_p2 = (p_38_i_i_11_fu_5127_p2 | brmerge40_demorgan_i_239_fu_5153_p2);

assign tmp47_fu_5164_p2 = (tmp47_demorgan_fu_5158_p2 ^ 1'd1);

assign tmp48_fu_5511_p2 = (brmerge40_demorgan_i_239_reg_10164 | tmp_432_10_reg_10159);

assign tmp49_demorgan_fu_7882_p2 = (p_38_i_i1_s_fu_7851_p2 | brmerge40_demorgan_i_240_fu_7877_p2);

assign tmp49_fu_7888_p2 = (tmp49_demorgan_fu_7882_p2 ^ 1'd1);

assign tmp4_fu_5181_p2 = (brmerge40_demorgan_i_reg_9889 | tmp_181_reg_9884);

assign tmp50_fu_8235_p2 = (brmerge40_demorgan_i_240_reg_11028 | tmp_447_10_reg_11023);

assign tmp5_demorgan_fu_6969_p2 = (p_38_i_i1_fu_6938_p2 | brmerge40_demorgan_i_241_fu_6964_p2);

assign tmp5_fu_6975_p2 = (tmp5_demorgan_fu_6969_p2 ^ 1'd1);

assign tmp6_fu_7905_p2 = (brmerge40_demorgan_i_241_reg_10753 | tmp_187_reg_10748);

assign tmp7_demorgan_fu_4328_p2 = (p_38_i_i_1_fu_4297_p2 | brmerge40_demorgan_i_219_fu_4323_p2);

assign tmp7_fu_4334_p2 = (tmp7_demorgan_fu_4328_p2 ^ 1'd1);

assign tmp8_fu_5211_p2 = (brmerge40_demorgan_i_219_reg_9914 | tmp_432_1_reg_9909);

assign tmp9_demorgan_fu_7052_p2 = (p_38_i_i1_1_fu_7021_p2 | brmerge40_demorgan_i_220_fu_7047_p2);

assign tmp9_fu_7058_p2 = (tmp9_demorgan_fu_7052_p2 ^ 1'd1);

assign tmp_148_cast_cast_fu_2321_p1 = tmp_148_fu_2315_p2;

assign tmp_148_fu_2315_p2 = ($signed(w_reg_1243) + $signed(tmp2_cast_fu_2311_p1));

assign tmp_1618_fu_1661_p3 = {{tmp_1617_reg_8570}, {2'd0}};

assign tmp_1619_fu_1717_p3 = {{tmp_611_fu_1707_p2}, {2'd0}};

assign tmp_1620_fu_1745_p3 = {{tmp_613_fu_1735_p2}, {2'd0}};

assign tmp_1621_fu_1790_p2 = (tmp_615_fu_1785_p2 | ap_reg_pp0_iter1_exitcond_flatten17_reg_8547);

assign tmp_1622_fu_1847_p2 = tmp_616_reg_8619 << 32'd2;

assign tmp_1623_fu_1827_p1 = tmp_618_fu_1821_p2[6:0];

assign tmp_1624_fu_1831_p1 = tmp_618_fu_1821_p2[4:0];

assign tmp_1626_fu_2044_p3 = {{tmp_1625_reg_8722}, {5'd0}};

assign tmp_1627_fu_2059_p3 = {{tmp_1625_reg_8722}, {1'd0}};

assign tmp_1628_fu_2089_p1 = tmp_626_fu_2083_p2[7:0];

assign tmp_1629_fu_2101_p3 = {{tmp_626_fu_2083_p2}, {1'd0}};

assign tmp_1631_fu_8392_p3 = {{tmp_1630_reg_11081}, {5'd0}};

assign tmp_1632_fu_8407_p3 = {{tmp_1630_reg_11081}, {1'd0}};

assign tmp_1633_fu_8437_p1 = tmp_639_fu_8431_p2[7:0];

assign tmp_1634_cast_fu_1645_p1 = $signed(tmp_607_fu_1639_p2);

assign tmp_1634_fu_8449_p3 = {{tmp_639_fu_8431_p2}, {1'd0}};

assign tmp_1635_fu_8525_p3 = tmp_fu_8495_p14[32'd7];

assign tmp_1636_fu_2372_p3 = {{tmp_645_fu_2359_p2}, {1'd0}};

assign tmp_1637_cast_fu_1682_p1 = $signed(tmp_609_fu_1676_p2);

assign tmp_1637_fu_2431_p1 = tmp_650_fu_2422_p2[4:0];

assign tmp_1639_cast_fu_1713_p1 = $signed(tmp_611_fu_1707_p2);

assign tmp_1640_fu_2859_p3 = p_Val2_s_fu_2832_p2[32'd13];

assign tmp_1641_fu_2873_p3 = p_Val2_33_fu_2867_p2[32'd7];

assign tmp_1642_cast_fu_1741_p1 = $signed(tmp_613_fu_1735_p2);

assign tmp_1642_fu_4185_p3 = p_Val2_s_reg_9315[32'd14];

assign tmp_1645_fu_5583_p3 = p_Val2_34_fu_5556_p2[32'd13];

assign tmp_1646_fu_5597_p3 = p_Val2_36_fu_5591_p2[32'd7];

assign tmp_1647_fu_6909_p3 = p_Val2_34_reg_10179[32'd14];

assign tmp_1650_fu_2973_p3 = p_Val2_130_1_fu_2946_p2[32'd13];

assign tmp_1651_fu_2987_p3 = p_Val2_132_1_fu_2981_p2[32'd7];

assign tmp_1652_fu_4268_p3 = p_Val2_130_1_reg_9362[32'd14];

assign tmp_1654_cast_fu_1898_p1 = ap_reg_pp0_iter11_tmp_621_reg_8651;

assign tmp_1655_fu_5697_p3 = p_Val2_135_1_fu_5670_p2[32'd13];

assign tmp_1656_fu_5711_p3 = p_Val2_137_1_fu_5705_p2[32'd7];

assign tmp_1657_fu_6992_p3 = p_Val2_135_1_reg_10226[32'd14];

assign tmp_1660_fu_3087_p3 = p_Val2_130_2_fu_3060_p2[32'd13];

assign tmp_1661_fu_3101_p3 = p_Val2_132_2_fu_3095_p2[32'd7];

assign tmp_1662_fu_4351_p3 = p_Val2_130_2_reg_9409[32'd14];

assign tmp_1665_cast_fu_2128_p1 = tmp_628_reg_8728;

assign tmp_1665_fu_5811_p3 = p_Val2_135_2_fu_5784_p2[32'd13];

assign tmp_1666_fu_5825_p3 = p_Val2_137_2_fu_5819_p2[32'd7];

assign tmp_1667_fu_7075_p3 = p_Val2_135_2_reg_10273[32'd14];

assign tmp_1670_fu_3201_p3 = p_Val2_130_3_fu_3174_p2[32'd13];

assign tmp_1671_cast_fu_2194_p1 = tmp_633_fu_2189_p2;

assign tmp_1671_fu_3215_p3 = p_Val2_132_3_fu_3209_p2[32'd7];

assign tmp_1672_cast_fu_2215_p1 = tmp_634_fu_2210_p2;

assign tmp_1672_fu_4434_p3 = p_Val2_130_3_reg_9456[32'd14];

assign tmp_1675_fu_5925_p3 = p_Val2_135_3_fu_5898_p2[32'd13];

assign tmp_1676_fu_5939_p3 = p_Val2_137_3_fu_5933_p2[32'd7];

assign tmp_1677_fu_7158_p3 = p_Val2_135_3_reg_10320[32'd14];

assign tmp_1680_fu_3315_p3 = p_Val2_130_4_fu_3288_p2[32'd13];

assign tmp_1681_fu_3329_p3 = p_Val2_132_4_fu_3323_p2[32'd7];

assign tmp_1682_fu_4517_p3 = p_Val2_130_4_reg_9503[32'd14];

assign tmp_1683_cast_fu_8476_p1 = ap_reg_pp2_iter3_tmp_641_reg_11098;

assign tmp_1685_fu_6039_p3 = p_Val2_135_4_fu_6012_p2[32'd13];

assign tmp_1686_fu_6053_p3 = p_Val2_137_4_fu_6047_p2[32'd7];

assign tmp_1687_fu_7241_p3 = p_Val2_135_4_reg_10367[32'd14];

assign tmp_1690_fu_3429_p3 = p_Val2_130_5_fu_3402_p2[32'd13];

assign tmp_1691_cast_fu_2395_p1 = tmp_647_fu_2390_p2;

assign tmp_1691_fu_3443_p3 = p_Val2_132_5_fu_3437_p2[32'd7];

assign tmp_1692_fu_4600_p3 = p_Val2_130_5_reg_9550[32'd14];

assign tmp_1693_cast_fu_2418_p1 = $signed(tmp_649_fu_2412_p2);

assign tmp_1694_cast_fu_2427_p1 = $signed(tmp_650_fu_2422_p2);

assign tmp_1695_fu_6153_p3 = p_Val2_135_5_fu_6126_p2[32'd13];

assign tmp_1696_fu_6167_p3 = p_Val2_137_5_fu_6161_p2[32'd7];

assign tmp_1697_cast_fu_2477_p1 = tmp_652_reg_8935;

assign tmp_1697_fu_7324_p3 = p_Val2_135_5_reg_10414[32'd14];

assign tmp_1699_cast_fu_2492_p1 = tmp_654_reg_8940;

assign tmp_1700_fu_3543_p3 = p_Val2_130_6_fu_3516_p2[32'd13];

assign tmp_1701_fu_3557_p3 = p_Val2_132_6_fu_3551_p2[32'd7];

assign tmp_1702_cast_fu_2513_p1 = tmp_656_fu_2508_p2;

assign tmp_1702_fu_4683_p3 = p_Val2_130_6_reg_9597[32'd14];

assign tmp_1705_fu_6267_p3 = p_Val2_135_6_fu_6240_p2[32'd13];

assign tmp_1706_fu_6281_p3 = p_Val2_137_6_fu_6275_p2[32'd7];

assign tmp_1707_fu_7407_p3 = p_Val2_135_6_reg_10461[32'd14];

assign tmp_1710_fu_3657_p3 = p_Val2_130_7_fu_3630_p2[32'd13];

assign tmp_1711_fu_3671_p3 = p_Val2_132_7_fu_3665_p2[32'd7];

assign tmp_1712_fu_4766_p3 = p_Val2_130_7_reg_9644[32'd14];

assign tmp_1715_fu_6381_p3 = p_Val2_135_7_fu_6354_p2[32'd13];

assign tmp_1716_fu_6395_p3 = p_Val2_137_7_fu_6389_p2[32'd7];

assign tmp_1717_fu_7490_p3 = p_Val2_135_7_reg_10508[32'd14];

assign tmp_1720_fu_3771_p3 = p_Val2_130_8_fu_3744_p2[32'd13];

assign tmp_1721_fu_3785_p3 = p_Val2_132_8_fu_3779_p2[32'd7];

assign tmp_1722_fu_4849_p3 = p_Val2_130_8_reg_9691[32'd14];

assign tmp_1725_fu_6495_p3 = p_Val2_135_8_fu_6468_p2[32'd13];

assign tmp_1726_fu_6509_p3 = p_Val2_137_8_fu_6503_p2[32'd7];

assign tmp_1727_fu_7573_p3 = p_Val2_135_8_reg_10555[32'd14];

assign tmp_1730_fu_3885_p3 = p_Val2_130_9_fu_3858_p2[32'd13];

assign tmp_1731_fu_3899_p3 = p_Val2_132_9_fu_3893_p2[32'd7];

assign tmp_1732_fu_4932_p3 = p_Val2_130_9_reg_9738[32'd14];

assign tmp_1735_fu_6609_p3 = p_Val2_135_9_fu_6582_p2[32'd13];

assign tmp_1736_fu_6623_p3 = p_Val2_137_9_fu_6617_p2[32'd7];

assign tmp_1737_fu_7656_p3 = p_Val2_135_9_reg_10602[32'd14];

assign tmp_1740_fu_3999_p3 = p_Val2_130_s_fu_3972_p2[32'd13];

assign tmp_1741_fu_4013_p3 = p_Val2_132_s_fu_4007_p2[32'd7];

assign tmp_1742_fu_5015_p3 = p_Val2_130_s_reg_9785[32'd14];

assign tmp_1745_fu_6723_p3 = p_Val2_135_s_fu_6696_p2[32'd13];

assign tmp_1746_fu_6737_p3 = p_Val2_137_s_fu_6731_p2[32'd7];

assign tmp_1747_fu_7739_p3 = p_Val2_135_s_reg_10649[32'd14];

assign tmp_1750_fu_4113_p3 = p_Val2_130_10_fu_4086_p2[32'd13];

assign tmp_1751_fu_4127_p3 = p_Val2_132_10_fu_4121_p2[32'd7];

assign tmp_1752_fu_5098_p3 = p_Val2_130_10_reg_9832[32'd14];

assign tmp_1755_fu_6837_p3 = p_Val2_135_10_fu_6810_p2[32'd13];

assign tmp_1756_fu_6851_p3 = p_Val2_137_10_fu_6845_p2[32'd7];

assign tmp_1757_fu_7822_p3 = p_Val2_135_10_reg_10696[32'd14];

assign tmp_176_fu_2817_p3 = {{reg_1463}, {6'd0}};

assign tmp_177_fu_2829_p1 = $signed(rr_0_V_reg_9075);

assign tmp_178_fu_2856_p1 = tmp_1639_reg_9085;

assign tmp_179_fu_2881_p2 = (tmp_1641_fu_2873_p3 ^ 1'd1);

assign tmp_180_fu_4197_p2 = (tmp_1642_fu_4185_p3 ^ 1'd1);

assign tmp_181_fu_4229_p2 = (tmp_1638_reg_9320 ^ 1'd1);

assign tmp_182_fu_5541_p3 = {{reg_1463}, {6'd0}};

assign tmp_183_fu_5553_p1 = $signed(rr_1_V_reg_9080);

assign tmp_184_fu_5580_p1 = tmp_1644_reg_9090;

assign tmp_185_fu_5605_p2 = (tmp_1646_fu_5597_p3 ^ 1'd1);

assign tmp_186_fu_6921_p2 = (tmp_1647_fu_6909_p3 ^ 1'd1);

assign tmp_187_fu_6953_p2 = (tmp_1643_reg_10184 ^ 1'd1);

assign tmp_272_cast_fu_2825_p1 = $signed(tmp_176_fu_2817_p3);

assign tmp_281_cast_fu_5549_p1 = $signed(tmp_182_fu_5541_p3);

assign tmp_419_10_cast_fu_4079_p1 = $signed(tmp_419_10_fu_4071_p3);

assign tmp_419_10_fu_4071_p3 = {{reg_1507}, {6'd0}};

assign tmp_419_1_cast_fu_2939_p1 = $signed(tmp_419_1_fu_2931_p3);

assign tmp_419_1_fu_2931_p3 = {{reg_1467}, {6'd0}};

assign tmp_419_2_cast_fu_3053_p1 = $signed(tmp_419_2_fu_3045_p3);

assign tmp_419_2_fu_3045_p3 = {{reg_1471}, {6'd0}};

assign tmp_419_3_cast_fu_3167_p1 = $signed(tmp_419_3_fu_3159_p3);

assign tmp_419_3_fu_3159_p3 = {{reg_1475}, {6'd0}};

assign tmp_419_4_cast_fu_3281_p1 = $signed(tmp_419_4_fu_3273_p3);

assign tmp_419_4_fu_3273_p3 = {{reg_1479}, {6'd0}};

assign tmp_419_5_cast_fu_3395_p1 = $signed(tmp_419_5_fu_3387_p3);

assign tmp_419_5_fu_3387_p3 = {{reg_1483}, {6'd0}};

assign tmp_419_6_cast_fu_3509_p1 = $signed(tmp_419_6_fu_3501_p3);

assign tmp_419_6_fu_3501_p3 = {{reg_1487}, {6'd0}};

assign tmp_419_7_cast_fu_3623_p1 = $signed(tmp_419_7_fu_3615_p3);

assign tmp_419_7_fu_3615_p3 = {{reg_1491}, {6'd0}};

assign tmp_419_8_cast_fu_3737_p1 = $signed(tmp_419_8_fu_3729_p3);

assign tmp_419_8_fu_3729_p3 = {{reg_1495}, {6'd0}};

assign tmp_419_9_cast_fu_3851_p1 = $signed(tmp_419_9_fu_3843_p3);

assign tmp_419_9_fu_3843_p3 = {{reg_1499}, {6'd0}};

assign tmp_419_cast_fu_3965_p1 = $signed(tmp_419_s_fu_3957_p3);

assign tmp_419_s_fu_3957_p3 = {{reg_1503}, {6'd0}};

assign tmp_420_10_fu_4083_p1 = $signed(rr_0_V_120_reg_9295);

assign tmp_420_1_fu_2943_p1 = $signed(rr_0_V_110_reg_9095);

assign tmp_420_2_fu_3057_p1 = $signed(rr_0_V_111_reg_9115);

assign tmp_420_3_fu_3171_p1 = $signed(rr_0_V_112_reg_9135);

assign tmp_420_4_fu_3285_p1 = $signed(rr_0_V_113_reg_9155);

assign tmp_420_5_fu_3399_p1 = $signed(rr_0_V_114_reg_9175);

assign tmp_420_6_fu_3513_p1 = $signed(rr_0_V_115_reg_9195);

assign tmp_420_7_fu_3627_p1 = $signed(rr_0_V_116_reg_9215);

assign tmp_420_8_fu_3741_p1 = $signed(rr_0_V_117_reg_9235);

assign tmp_420_9_fu_3855_p1 = $signed(rr_0_V_118_reg_9255);

assign tmp_420_s_fu_3969_p1 = $signed(rr_0_V_119_reg_9275);

assign tmp_423_10_fu_4110_p1 = tmp_1749_reg_9305;

assign tmp_423_1_fu_2970_p1 = tmp_1649_reg_9105;

assign tmp_423_2_fu_3084_p1 = tmp_1659_reg_9125;

assign tmp_423_3_fu_3198_p1 = tmp_1669_reg_9145;

assign tmp_423_4_fu_3312_p1 = tmp_1679_reg_9165;

assign tmp_423_5_fu_3426_p1 = tmp_1689_reg_9185;

assign tmp_423_6_fu_3540_p1 = tmp_1699_reg_9205;

assign tmp_423_7_fu_3654_p1 = tmp_1709_reg_9225;

assign tmp_423_8_fu_3768_p1 = tmp_1719_reg_9245;

assign tmp_423_9_fu_3882_p1 = tmp_1729_reg_9265;

assign tmp_423_s_fu_3996_p1 = tmp_1739_reg_9285;

assign tmp_427_10_fu_4135_p2 = (tmp_1751_fu_4127_p3 ^ 1'd1);

assign tmp_427_1_fu_2995_p2 = (tmp_1651_fu_2987_p3 ^ 1'd1);

assign tmp_427_2_fu_3109_p2 = (tmp_1661_fu_3101_p3 ^ 1'd1);

assign tmp_427_3_fu_3223_p2 = (tmp_1671_fu_3215_p3 ^ 1'd1);

assign tmp_427_4_fu_3337_p2 = (tmp_1681_fu_3329_p3 ^ 1'd1);

assign tmp_427_5_fu_3451_p2 = (tmp_1691_fu_3443_p3 ^ 1'd1);

assign tmp_427_6_fu_3565_p2 = (tmp_1701_fu_3557_p3 ^ 1'd1);

assign tmp_427_7_fu_3679_p2 = (tmp_1711_fu_3671_p3 ^ 1'd1);

assign tmp_427_8_fu_3793_p2 = (tmp_1721_fu_3785_p3 ^ 1'd1);

assign tmp_427_9_fu_3907_p2 = (tmp_1731_fu_3899_p3 ^ 1'd1);

assign tmp_427_s_fu_4021_p2 = (tmp_1741_fu_4013_p3 ^ 1'd1);

assign tmp_430_10_fu_5110_p2 = (tmp_1752_fu_5098_p3 ^ 1'd1);

assign tmp_430_1_fu_4280_p2 = (tmp_1652_fu_4268_p3 ^ 1'd1);

assign tmp_430_2_fu_4363_p2 = (tmp_1662_fu_4351_p3 ^ 1'd1);

assign tmp_430_3_fu_4446_p2 = (tmp_1672_fu_4434_p3 ^ 1'd1);

assign tmp_430_4_fu_4529_p2 = (tmp_1682_fu_4517_p3 ^ 1'd1);

assign tmp_430_5_fu_4612_p2 = (tmp_1692_fu_4600_p3 ^ 1'd1);

assign tmp_430_6_fu_4695_p2 = (tmp_1702_fu_4683_p3 ^ 1'd1);

assign tmp_430_7_fu_4778_p2 = (tmp_1712_fu_4766_p3 ^ 1'd1);

assign tmp_430_8_fu_4861_p2 = (tmp_1722_fu_4849_p3 ^ 1'd1);

assign tmp_430_9_fu_4944_p2 = (tmp_1732_fu_4932_p3 ^ 1'd1);

assign tmp_430_s_fu_5027_p2 = (tmp_1742_fu_5015_p3 ^ 1'd1);

assign tmp_432_10_fu_5142_p2 = (tmp_1748_reg_9837 ^ 1'd1);

assign tmp_432_1_fu_4312_p2 = (tmp_1648_reg_9367 ^ 1'd1);

assign tmp_432_2_fu_4395_p2 = (tmp_1658_reg_9414 ^ 1'd1);

assign tmp_432_3_fu_4478_p2 = (tmp_1668_reg_9461 ^ 1'd1);

assign tmp_432_4_fu_4561_p2 = (tmp_1678_reg_9508 ^ 1'd1);

assign tmp_432_5_fu_4644_p2 = (tmp_1688_reg_9555 ^ 1'd1);

assign tmp_432_6_fu_4727_p2 = (tmp_1698_reg_9602 ^ 1'd1);

assign tmp_432_7_fu_4810_p2 = (tmp_1708_reg_9649 ^ 1'd1);

assign tmp_432_8_fu_4893_p2 = (tmp_1718_reg_9696 ^ 1'd1);

assign tmp_432_9_fu_4976_p2 = (tmp_1728_reg_9743 ^ 1'd1);

assign tmp_432_s_fu_5059_p2 = (tmp_1738_reg_9790 ^ 1'd1);

assign tmp_434_10_cast_fu_6803_p1 = $signed(tmp_434_10_fu_6795_p3);

assign tmp_434_10_fu_6795_p3 = {{reg_1507}, {6'd0}};

assign tmp_434_1_cast_fu_5663_p1 = $signed(tmp_434_1_fu_5655_p3);

assign tmp_434_1_fu_5655_p3 = {{reg_1467}, {6'd0}};

assign tmp_434_2_cast_fu_5777_p1 = $signed(tmp_434_2_fu_5769_p3);

assign tmp_434_2_fu_5769_p3 = {{reg_1471}, {6'd0}};

assign tmp_434_3_cast_fu_5891_p1 = $signed(tmp_434_3_fu_5883_p3);

assign tmp_434_3_fu_5883_p3 = {{reg_1475}, {6'd0}};

assign tmp_434_4_cast_fu_6005_p1 = $signed(tmp_434_4_fu_5997_p3);

assign tmp_434_4_fu_5997_p3 = {{reg_1479}, {6'd0}};

assign tmp_434_5_cast_fu_6119_p1 = $signed(tmp_434_5_fu_6111_p3);

assign tmp_434_5_fu_6111_p3 = {{reg_1483}, {6'd0}};

assign tmp_434_6_cast_fu_6233_p1 = $signed(tmp_434_6_fu_6225_p3);

assign tmp_434_6_fu_6225_p3 = {{reg_1487}, {6'd0}};

assign tmp_434_7_cast_fu_6347_p1 = $signed(tmp_434_7_fu_6339_p3);

assign tmp_434_7_fu_6339_p3 = {{reg_1491}, {6'd0}};

assign tmp_434_8_cast_fu_6461_p1 = $signed(tmp_434_8_fu_6453_p3);

assign tmp_434_8_fu_6453_p3 = {{reg_1495}, {6'd0}};

assign tmp_434_9_cast_fu_6575_p1 = $signed(tmp_434_9_fu_6567_p3);

assign tmp_434_9_fu_6567_p3 = {{reg_1499}, {6'd0}};

assign tmp_434_cast_fu_6689_p1 = $signed(tmp_434_s_fu_6681_p3);

assign tmp_434_s_fu_6681_p3 = {{reg_1503}, {6'd0}};

assign tmp_435_10_fu_6807_p1 = $signed(rr_1_V_120_reg_9300);

assign tmp_435_1_fu_5667_p1 = $signed(rr_1_V_110_reg_9100);

assign tmp_435_2_fu_5781_p1 = $signed(rr_1_V_111_reg_9120);

assign tmp_435_3_fu_5895_p1 = $signed(rr_1_V_112_reg_9140);

assign tmp_435_4_fu_6009_p1 = $signed(rr_1_V_113_reg_9160);

assign tmp_435_5_fu_6123_p1 = $signed(rr_1_V_114_reg_9180);

assign tmp_435_6_fu_6237_p1 = $signed(rr_1_V_115_reg_9200);

assign tmp_435_7_fu_6351_p1 = $signed(rr_1_V_116_reg_9220);

assign tmp_435_8_fu_6465_p1 = $signed(rr_1_V_117_reg_9240);

assign tmp_435_9_fu_6579_p1 = $signed(rr_1_V_118_reg_9260);

assign tmp_435_s_fu_6693_p1 = $signed(rr_1_V_119_reg_9280);

assign tmp_438_10_fu_6834_p1 = tmp_1754_reg_9310;

assign tmp_438_1_fu_5694_p1 = tmp_1654_reg_9110;

assign tmp_438_2_fu_5808_p1 = tmp_1664_reg_9130;

assign tmp_438_3_fu_5922_p1 = tmp_1674_reg_9150;

assign tmp_438_4_fu_6036_p1 = tmp_1684_reg_9170;

assign tmp_438_5_fu_6150_p1 = tmp_1694_reg_9190;

assign tmp_438_6_fu_6264_p1 = tmp_1704_reg_9210;

assign tmp_438_7_fu_6378_p1 = tmp_1714_reg_9230;

assign tmp_438_8_fu_6492_p1 = tmp_1724_reg_9250;

assign tmp_438_9_fu_6606_p1 = tmp_1734_reg_9270;

assign tmp_438_s_fu_6720_p1 = tmp_1744_reg_9290;

assign tmp_442_10_fu_6859_p2 = (tmp_1756_fu_6851_p3 ^ 1'd1);

assign tmp_442_1_fu_5719_p2 = (tmp_1656_fu_5711_p3 ^ 1'd1);

assign tmp_442_2_fu_5833_p2 = (tmp_1666_fu_5825_p3 ^ 1'd1);

assign tmp_442_3_fu_5947_p2 = (tmp_1676_fu_5939_p3 ^ 1'd1);

assign tmp_442_4_fu_6061_p2 = (tmp_1686_fu_6053_p3 ^ 1'd1);

assign tmp_442_5_fu_6175_p2 = (tmp_1696_fu_6167_p3 ^ 1'd1);

assign tmp_442_6_fu_6289_p2 = (tmp_1706_fu_6281_p3 ^ 1'd1);

assign tmp_442_7_fu_6403_p2 = (tmp_1716_fu_6395_p3 ^ 1'd1);

assign tmp_442_8_fu_6517_p2 = (tmp_1726_fu_6509_p3 ^ 1'd1);

assign tmp_442_9_fu_6631_p2 = (tmp_1736_fu_6623_p3 ^ 1'd1);

assign tmp_442_s_fu_6745_p2 = (tmp_1746_fu_6737_p3 ^ 1'd1);

assign tmp_445_10_fu_7834_p2 = (tmp_1757_fu_7822_p3 ^ 1'd1);

assign tmp_445_1_fu_7004_p2 = (tmp_1657_fu_6992_p3 ^ 1'd1);

assign tmp_445_2_fu_7087_p2 = (tmp_1667_fu_7075_p3 ^ 1'd1);

assign tmp_445_3_fu_7170_p2 = (tmp_1677_fu_7158_p3 ^ 1'd1);

assign tmp_445_4_fu_7253_p2 = (tmp_1687_fu_7241_p3 ^ 1'd1);

assign tmp_445_5_fu_7336_p2 = (tmp_1697_fu_7324_p3 ^ 1'd1);

assign tmp_445_6_fu_7419_p2 = (tmp_1707_fu_7407_p3 ^ 1'd1);

assign tmp_445_7_fu_7502_p2 = (tmp_1717_fu_7490_p3 ^ 1'd1);

assign tmp_445_8_fu_7585_p2 = (tmp_1727_fu_7573_p3 ^ 1'd1);

assign tmp_445_9_fu_7668_p2 = (tmp_1737_fu_7656_p3 ^ 1'd1);

assign tmp_445_s_fu_7751_p2 = (tmp_1747_fu_7739_p3 ^ 1'd1);

assign tmp_447_10_fu_7866_p2 = (tmp_1753_reg_10701 ^ 1'd1);

assign tmp_447_1_fu_7036_p2 = (tmp_1653_reg_10231 ^ 1'd1);

assign tmp_447_2_fu_7119_p2 = (tmp_1663_reg_10278 ^ 1'd1);

assign tmp_447_3_fu_7202_p2 = (tmp_1673_reg_10325 ^ 1'd1);

assign tmp_447_4_fu_7285_p2 = (tmp_1683_reg_10372 ^ 1'd1);

assign tmp_447_5_fu_7368_p2 = (tmp_1693_reg_10419 ^ 1'd1);

assign tmp_447_6_fu_7451_p2 = (tmp_1703_reg_10466 ^ 1'd1);

assign tmp_447_7_fu_7534_p2 = (tmp_1713_reg_10513 ^ 1'd1);

assign tmp_447_8_fu_7617_p2 = (tmp_1723_reg_10560 ^ 1'd1);

assign tmp_447_9_fu_7700_p2 = (tmp_1733_reg_10607 ^ 1'd1);

assign tmp_447_s_fu_7783_p2 = (tmp_1743_reg_10654 ^ 1'd1);

assign tmp_606_fu_1628_p3 = {{ap_reg_pp0_iter1_i_cast_mid2_v_reg_8556}, {2'd0}};

assign tmp_607_fu_1639_p2 = (p_shl5_cast_fu_1635_p1 - i_cast_mid2_cast_fu_1625_p1);

assign tmp_608_fu_1668_p1 = $signed(tmp_1618_fu_1661_p3);

assign tmp_609_fu_1676_p2 = (p_shl4_cast_fu_1672_p1 - newIndex_cast_mid2_c_fu_1657_p1);

assign tmp_610_fu_1606_p2 = (exitcond_flatten_mid_fu_1594_p2 | exitcond_flatten17_reg_8547);

assign tmp_611_fu_1707_p2 = ($signed(j_cast_mid2_cast_fu_1704_p1) + $signed(tmp_1634_cast_fu_1645_p1));

assign tmp_612_fu_1729_p2 = ($signed(p_shl3_fu_1725_p1) - $signed(tmp_1639_cast_fu_1713_p1));

assign tmp_613_fu_1735_p2 = ($signed(j_cast_mid2_cast_fu_1704_p1) + $signed(tmp_1637_cast_fu_1682_p1));

assign tmp_614_fu_1757_p2 = ($signed(p_shl2_fu_1753_p1) - $signed(tmp_1642_cast_fu_1741_p1));

assign tmp_615_fu_1785_p2 = (exitcond63_mid1_fu_1773_p2 | exitcond_flatten_mid_reg_8586);

assign tmp_616_fu_1815_p2 = (k_cast_mid2_cast_fu_1811_p1 + tmp_612_fu_1729_p2);

assign tmp_617_fu_1852_p2 = (tmp_1622_fu_1847_p2 - tmp_616_reg_8619);

assign tmp_618_fu_1821_p2 = (k_cast_mid2_cast_fu_1811_p1 + tmp_614_fu_1757_p2);

assign tmp_619_fu_1864_p2 = (p_shl_cast_fu_1857_p3 - tmp_1623_reg_8625);

assign tmp_620_fu_1875_p2 = (p_cast_fu_1869_p1 + tmp_617_fu_1852_p2);

assign tmp_621_fu_1892_p2 = (p_cast_cast_fu_1872_p1 + tmp_619_fu_1864_p2);

assign tmp_622_fu_2051_p1 = $signed(tmp_1626_fu_2044_p3);

assign tmp_623_fu_2066_p1 = $signed(tmp_1627_fu_2059_p3);

assign tmp_624_fu_2074_p2 = (p_shl9_cast_fu_2070_p1 + p_shl8_cast_fu_2055_p1);

assign tmp_625_fu_1995_p2 = (exitcond62_mid_fu_1983_p2 | exitcond_flatten20_reg_8685);

assign tmp_626_fu_2083_p2 = (tmp_624_fu_2074_p2 + j_1_cast_mid2_cast_fu_2080_p1);

assign tmp_627_fu_2113_p2 = (p_shl7_cast_fu_2109_p1 + p_shl6_cast_fu_2093_p3);

assign tmp_628_fu_2122_p2 = (tmp_627_fu_2113_p2 + k_1_cast_cast_fu_2119_p1);

assign tmp_629_fu_2143_p3 = {{h_reg_1231}, {5'd0}};

assign tmp_630_fu_2155_p3 = {{h_reg_1231}, {1'd0}};

assign tmp_631_fu_2167_p2 = (p_shl14_cast_fu_2163_p1 + p_shl13_cast_fu_2151_p1);

assign tmp_632_fu_2173_p2 = (tmp_631_fu_2167_p2 + 12'd1156);

assign tmp_633_fu_2189_p2 = (tmp_631_reg_8741 + w_cast_cast_fu_2185_p1);

assign tmp_634_fu_2210_p2 = (tmp_632_reg_8746 + w_cast_cast_fu_2185_p1);

assign tmp_635_fu_8399_p1 = $signed(tmp_1631_fu_8392_p3);

assign tmp_636_fu_8414_p1 = $signed(tmp_1632_fu_8407_p3);

assign tmp_637_fu_8422_p2 = (p_shl25_cast_fu_8418_p1 + p_shl24_cast_fu_8403_p1);

assign tmp_638_fu_8329_p2 = (exitcond_mid_fu_8323_p2 | exitcond_flatten22_fu_8283_p2);

assign tmp_639_fu_8431_p2 = (tmp_637_fu_8422_p2 + j_2_cast_mid2_cast_fu_8428_p1);

assign tmp_640_fu_8461_p2 = (p_shl23_cast_fu_8457_p1 + p_shl22_cast_fu_8441_p3);

assign tmp_641_fu_8470_p2 = (tmp_640_fu_8461_p2 + k_2_cast_cast_fu_8467_p1);

assign tmp_642_fu_2329_p3 = {{ci_reg_1277}, {5'd0}};

assign tmp_643_fu_2341_p3 = {{ci_reg_1277}, {1'd0}};

assign tmp_644_fu_2353_p2 = (p_shl21_cast_fu_2349_p1 + p_shl20_cast_fu_2337_p1);

assign tmp_645_fu_2359_p2 = (tmp_644_fu_2353_p2 + tmp_cast_cast_reg_8901);

assign tmp_646_fu_2384_p2 = (p_shl19_cast_fu_2380_p1 + p_shl18_cast_fu_2364_p3);

assign tmp_647_fu_2390_p2 = (tmp_646_fu_2384_p2 + tmp_148_cast_cast_reg_8925);

assign tmp_648_fu_2400_p3 = {{ci_reg_1277}, {2'd0}};

assign tmp_649_fu_2412_p2 = (p_shl17_cast_fu_2408_p1 - ci_cast_cast_fu_2325_p1);

assign tmp_650_fu_2422_p2 = ($signed(tmp_1693_cast_fu_2418_p1) + $signed(m_cast_cast_reg_8888));

assign tmp_651_fu_2443_p2 = ($signed(p_shl16_cast_fu_2435_p3) - $signed(tmp_1694_cast_fu_2427_p1));

assign tmp_652_fu_2449_p2 = (tmp_651_fu_2443_p2 + n_cast_cast_reg_8911);

assign tmp_653_fu_2454_p2 = (5'd9 + tmp_649_fu_2412_p2);

assign tmp_654_fu_2460_p2 = (tmp_653_fu_2454_p2 + m_cast_cast1_reg_8883);

assign tmp_655_fu_2502_p2 = (p_shl15_cast_fu_2495_p3 - tmp_1699_cast_fu_2492_p1);

assign tmp_656_fu_2508_p2 = (tmp_655_fu_2502_p2 + n_cast_cast_reg_8911);

assign tmp_cast_cast_fu_2279_p1 = tmp_s_fu_2273_p2;

assign tmp_fu_8495_p13 = grp_fu_8305_p2;

assign tmp_s_fu_2273_p2 = ($signed(h_reg_1231) + $signed(tmp1_cast_fu_2269_p1));

assign underflow_10_fu_5087_p2 = (tmp_1738_reg_9790 & tmp43_fu_5081_p2);

assign underflow_11_fu_5170_p2 = (tmp_1748_reg_9837 & tmp47_fu_5164_p2);

assign underflow_19_10_fu_7894_p2 = (tmp_1753_reg_10701 & tmp49_fu_7888_p2);

assign underflow_19_1_fu_7064_p2 = (tmp_1653_reg_10231 & tmp9_fu_7058_p2);

assign underflow_19_2_fu_7147_p2 = (tmp_1663_reg_10278 & tmp13_fu_7141_p2);

assign underflow_19_3_fu_7230_p2 = (tmp_1673_reg_10325 & tmp17_fu_7224_p2);

assign underflow_19_4_fu_7313_p2 = (tmp_1683_reg_10372 & tmp21_fu_7307_p2);

assign underflow_19_5_fu_7396_p2 = (tmp_1693_reg_10419 & tmp25_fu_7390_p2);

assign underflow_19_6_fu_7479_p2 = (tmp_1703_reg_10466 & tmp29_fu_7473_p2);

assign underflow_19_7_fu_7562_p2 = (tmp_1713_reg_10513 & tmp33_fu_7556_p2);

assign underflow_19_8_fu_7645_p2 = (tmp_1723_reg_10560 & tmp37_fu_7639_p2);

assign underflow_19_9_fu_7728_p2 = (tmp_1733_reg_10607 & tmp41_fu_7722_p2);

assign underflow_19_fu_6981_p2 = (tmp_1643_reg_10184 & tmp5_fu_6975_p2);

assign underflow_19_not_10_fu_8239_p2 = (tmp50_fu_8235_p2 | p_38_i_i1_s_reg_11018);

assign underflow_19_not_1_fu_7939_p2 = (tmp10_fu_7935_p2 | p_38_i_i1_1_reg_10768);

assign underflow_19_not_2_fu_7969_p2 = (tmp14_fu_7965_p2 | p_38_i_i1_2_reg_10793);

assign underflow_19_not_3_fu_7999_p2 = (tmp18_fu_7995_p2 | p_38_i_i1_3_reg_10818);

assign underflow_19_not_4_fu_8029_p2 = (tmp22_fu_8025_p2 | p_38_i_i1_4_reg_10843);

assign underflow_19_not_5_fu_8059_p2 = (tmp26_fu_8055_p2 | p_38_i_i1_5_reg_10868);

assign underflow_19_not_6_fu_8089_p2 = (tmp30_fu_8085_p2 | p_38_i_i1_6_reg_10893);

assign underflow_19_not_7_fu_8119_p2 = (tmp34_fu_8115_p2 | p_38_i_i1_7_reg_10918);

assign underflow_19_not_8_fu_8149_p2 = (tmp38_fu_8145_p2 | p_38_i_i1_8_reg_10943);

assign underflow_19_not_9_fu_8179_p2 = (tmp42_fu_8175_p2 | p_38_i_i1_9_reg_10968);

assign underflow_19_not_fu_7909_p2 = (tmp6_fu_7905_p2 | p_38_i_i1_reg_10743);

assign underflow_19_not_s_fu_8209_p2 = (tmp46_fu_8205_p2 | p_38_i_i1_10_reg_10993);

assign underflow_19_s_fu_7811_p2 = (tmp_1743_reg_10654 & tmp45_fu_7805_p2);

assign underflow_1_fu_4340_p2 = (tmp_1648_reg_9367 & tmp7_fu_4334_p2);

assign underflow_2_fu_4423_p2 = (tmp_1658_reg_9414 & tmp11_fu_4417_p2);

assign underflow_3_fu_4506_p2 = (tmp_1668_reg_9461 & tmp15_fu_4500_p2);

assign underflow_4_fu_4589_p2 = (tmp_1678_reg_9508 & tmp19_fu_4583_p2);

assign underflow_5_fu_4672_p2 = (tmp_1688_reg_9555 & tmp23_fu_4666_p2);

assign underflow_6_fu_4755_p2 = (tmp_1698_reg_9602 & tmp27_fu_4749_p2);

assign underflow_7_fu_4838_p2 = (tmp_1708_reg_9649 & tmp31_fu_4832_p2);

assign underflow_8_fu_4921_p2 = (tmp_1718_reg_9696 & tmp35_fu_4915_p2);

assign underflow_9_fu_5004_p2 = (tmp_1728_reg_9743 & tmp39_fu_4998_p2);

assign underflow_fu_4257_p2 = (tmp_1638_reg_9320 & tmp3_fu_4251_p2);

assign underflow_not_10_fu_5485_p2 = (tmp44_fu_5481_p2 | p_38_i_i_10_reg_10129);

assign underflow_not_11_fu_5515_p2 = (tmp48_fu_5511_p2 | p_38_i_i_11_reg_10154);

assign underflow_not_1_fu_5215_p2 = (tmp8_fu_5211_p2 | p_38_i_i_1_reg_9904);

assign underflow_not_2_fu_5245_p2 = (tmp12_fu_5241_p2 | p_38_i_i_2_reg_9929);

assign underflow_not_3_fu_5275_p2 = (tmp16_fu_5271_p2 | p_38_i_i_3_reg_9954);

assign underflow_not_4_fu_5305_p2 = (tmp20_fu_5301_p2 | p_38_i_i_4_reg_9979);

assign underflow_not_5_fu_5335_p2 = (tmp24_fu_5331_p2 | p_38_i_i_5_reg_10004);

assign underflow_not_6_fu_5365_p2 = (tmp28_fu_5361_p2 | p_38_i_i_6_reg_10029);

assign underflow_not_7_fu_5395_p2 = (tmp32_fu_5391_p2 | p_38_i_i_7_reg_10054);

assign underflow_not_8_fu_5425_p2 = (tmp36_fu_5421_p2 | p_38_i_i_8_reg_10079);

assign underflow_not_9_fu_5455_p2 = (tmp40_fu_5451_p2 | p_38_i_i_9_reg_10104);

assign underflow_not_fu_5185_p2 = (tmp4_fu_5181_p2 | p_38_i_i_reg_9879);

assign w_36_fu_2283_p2 = (w_reg_1243 + 6'd1);

assign w_cast_cast_fu_2185_p1 = w_reg_1243;

assign weight_temp_0_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_10_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_11_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_1_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_2_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_3_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_4_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_5_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_6_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_7_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_8_V_address1 = tmp_1702_cast_fu_2513_p1;

assign weight_temp_9_V_address1 = tmp_1702_cast_fu_2513_p1;

always @ (posedge ap_clk) begin
    tmp_631_reg_8741[0] <= 1'b0;
    tmp_632_reg_8746[0] <= 1'b0;
    m_cast_cast1_reg_8883[4:2] <= 3'b000;
    m_cast_cast_reg_8888[5:2] <= 4'b0000;
    tmp_cast_cast_reg_8901[7:6] <= 2'b00;
    n_cast_cast_reg_8911[6:2] <= 5'b00000;
    tmp_148_cast_cast_reg_8925[12:6] <= 7'b0000000;
end

endmodule //conv1_p
